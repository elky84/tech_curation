[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": [
      {
        "creator": "길진세",
        "title": "AI스트레스, 다들 없으세요?",
        "link": "https://ppss.kr/archives/268818",
        "pubDate": "Mon, 02 Jun 2025 03:06:01 +0000",
        "content:encodedSnippet": "저는 국내 대형 카드사에 재직 중입니다. 금융회사가 다 그렇듯 상당히 보수적이고 변화에 늦은 편이죠.\n그런데 작년 말 갑자기 회사 안에 AI 본부가 생겼습니다. AI가 화두긴 화두인가 봅니다. 세상이 변하고 있으니 빨리 쫓아가야죠.  그런데 제가 불려 들어갔습니다. 그냥도 아니고 팀장입니다. (제가요? 왜요? 라고 요즘 MZ들 하는 말 저도 해 보고 싶었습니다만…)\n네, 작년 말 이후로 갑자기 브런치 글이 뜸해진 데는 이런 이유가 있었습니다. 뜬금없이 중간관리자가 되어서… 좌충우돌 중입니다. 글이 늦어져서 죄송합니다만 글감은 광속으로 쌓이고 있습니다. 인공지능 이야기도 할 게 많고요. 조직과 사람에 대해서도 글감이 마구 생겨나는 중입니다. 이걸 기뻐해야 할지 모르겠네요. 차곡차곡 쟁여두는 중입니다.\n남들은 AI 본부라고 하면 “우와”합니다. 네, 있어 보이죠? 저도 그랬습니다. 금융사의 AI라니 생각만 해도 가슴이 웅장해졌는데요… 와서 딱 3달이 지나고 있는 지금, 스트레스가 엄청납니다. 일이 많아서냐고요? 일도 많지만 일보다.. 그동안 경험해 보지 못한 스트레스가 생겼습니다.\n제 문제면 조용히 제 일기장에 쓰고 말 이야기이지만 브런치에 쓰는 이유는, 이게 곧 여러분들도 겪게 될 스트레스이기 때문입니다. 바로 기술 변화 속도를 못 쫓아가면서 생기는 새로운 스트레스거든요.\n저도 처음에는 인공지능 서비스 쓰는 게 즐거웠습니다만…. / 출처: tvN\n \n왜 호들갑인가, 무엇이 문제길래\n예전에 몇 번 글로 썼지만, 저는 어릴 때부터 상당한 얼리 어답터였습니다. 초2 때부터 컴퓨터를 접했고, 아이폰이 국내에 보급되기 전에 스마트폰을 쓰는 등 온갖 기술 추세에 늘 앞서 있었습니다. 앞서는 기준은, 새로운 무엇인가 나타났을 때 제가 기술적으로 이해하는 데 어려움이 없었던 것을 말합니다. (블록체인도 그랬는데 비트코인을 많이 못 사둔 것은… 유구무언입니다)\n이창호 아재과 알파고와의 대결을 보면서 몬테카를로 트리 탐색을 뜯어볼 때도 그랬습니다. 한창 머신러닝이 뜨거울 때였는데요. 기술적인 부분은 이해했지만 이게 곧 chatGPT로 연결될 줄은 몰랐습니다. 알았다면 엔비디아를 열심히 샀겠죠. 저는 인공지능은 제가 죽기 전에나 보지 않을까 생각했습니다. 진심입니다.\n그러다가 chatGPT가 튀어나오고, 온갖 AI 서비스들이 쏟아지기 시작했습니다. ‘프롬프트 엔지니어링이 대세다’ 하던 게 한 2년 전인데 지금은 이 단어마저 옛말처럼 느껴집니다. chatGPT 4.5 이후에는 프롬프트 엔지니어링이 문제가 아닙니다. 여러 AI들이 추론 능력을 강화하면서 AI는 그야말로 폭발적으로 성장하고 있습니다. 논문 한두 개 읽어보면 되었던 옛날 기술과는 발전 속도가 차원이 다릅니다.\n지난 몇 년간 저는 자고 일어나면 주로 미국 주식과 코인을 확인했는데요. 요즘은 자고 일어나면 SNS에서 간밤에 또 무슨 AI 신기술과 서비스가 나왔나 보는 게 일상이 되었습니다. LLM이라 불리는 기반 기술, 하드웨어, 응용 AI서비스들이 정말로 자고 일어나면 쏟아지고 있습니다. 호들갑 아니냐고요? 제가 본 지난 30년간의 기술 발전 중 지금이 가장 빠릅니다.\n \n따라가지 못하니 스트레스가 되고 있습니다\n예전부터 사람들은 많은 노트 앱을 썼습니다. 그러다가 에버노트라는 놈이 나와서 시장을 거의 평정하다시피 했죠. 관련 책이 쏟아지고 사람들은 생산성 향상 툴에 관심을 가지기 시작했습니다. 이어서 노션이 나왔고, 진짜 자료정리에 진심인 이들을 위해 옵시디언과 롬리서치라는 앱도 나왔습니다. 최근 10년 동안 있던 변화입니다. 이 정도 속도라면 누구든 충분히 따라갈 수 있습니다. 시간 내서 하나씩 쓰면서 익힐 수 있었죠.\n노트 앱의 계보랄까요. 좌상단부터 에버노트 – 노션 – 옵시디언 – 롬리서치\n그러나 최근 3년은 정말… 아니 최근 3개월도 심각합니다. LLM의 무서운 점은 ‘디지털로 하는 모든 행위에 영향을 직접적으로 준다’는 것입니다. 눈을 감고 생각해 보세요. 지금 디지털로 이루어지는 모든 곳에서 AI로 인한 변화가 있습니다. 이 정도 영향력이 있었던 기술이 기존에 존재했던가 싶습니다.\n너무 급격한 변화는 시장 내 있는 모두에게 스트레스가 되고 있습니다. 개발자들은 새로 나오는 오픈소스 써 보기에도 바쁩니다. 일반 사용자들은 AI 응용 서비스 로그인 한 번씩 해보는 것도 쉽지 않습니다. 뭔가 동료가 이야기하는 건 나도 써 봐야 할 것 같은 압박, FOMO가 여기서도 생기는 겁니다.\n \nAI 활용도가 개인의 경쟁력을 좌우할 겁니다\n2014년쯤이었나, 애플이 아이비컨이라는 걸 들고 나오면서 ‘마케팅의 미래는 비컨이다!’ 하던 시절이 있었습니다. 저렴하게 비컨을 만드는 스타트업들이 엄청나게 많이 나왔고, 사라졌죠. 신기술은 늘 이런 식이 었습니다. 유행처럼 왔다가 망하면 빠르게 사라졌습니다. 성공 여부는 결국 얼마나 대중 고객들에게 닿느냐입니다.\n그런 의미에서 지금 AI는 이미 차원이 다른 문제가 되었습니다. 저만 그런 거고 여러분의 일상은 변함이 없다고요? 그 일상이 얼마 못 갈 겁니다. 구글, 메타, 네이버 등은 자사의 서비스에 AI를 자연스럽게 녹이고 있습니다. 우리는 싫어도 AI를 쓰게 됩니다. AI는 비컨, NFT, 메타버스와는 전혀 다른 길을 가고 있습니다.\n자주 보셨을 구글 G메일의 상단 메뉴바. 맨 오른쪽에 별 모양의 AI (Gemini) 아이콘이 보입니다.\n제 업무는 AI로 금융 신사업을 만드는 것입니다. 그래서 국내외 전문가들이 AI를 어떻게 사용하는지 아주 잘 보고 있습니다. 이들이 생산성을 끌어올리는 것을 보면 무서울 정도입니다. 겁도 납니다. 조금 오버해서 요즘 젊은이들이(…) 좋아하는 ‘이세계물’이 이런 건가 싶습니다. 터미네이터 스카이넷이 곧 오고 있는 느낌은… 저만 그런 거겠죠?\nAI를 잘 쓰는건 이제 필수입니다. 그리고 AI를 활용해서 사업을 만들고 키우는 사람은 큰돈을 벌 겁니다. 각자 준비 잘 하시기 바랍니다. 노션, 옵시디언은 안써도 큰 문제가 없었지만 AI는 그렇지 않을 거라서요. 긴 글 읽어주셔서 감사합니다.\n \nPS.\n이 글은 제가 처음부터 끝까지 다 썼습니다만, 제 예전 글을 AI가 학습하면 이미 이 정도 글은 똑같이(혹은 저보다 더 잘) 만들어 내고 있습니다. 올해 말쯤이면 저도 제 브런치 운영을 AI에게 맡기고 저는 주제만 던져줄지도 모릅니다. 그게 가능한, 그런 세상이 오고 있습니다. (덜덜)\n원문: 길진세 New Biz on the BLOCK\n이 필자의 다른 글 읽기\n빌 게이츠 자서전 『소스 코드: 더 비기닝』: 금수저라 성공한 줄 알았는데 착각이었습니다\n“기레기”를 피해 좋은 기사만 보는 법\n대기업 직원과 멍게의 놀라운 공통점",
        "enclosure": {
          "type": "image/jpeg",
          "length": "0",
          "url": "https://ppss.kr/wp-content/uploads/2025/06/0_1.jpg"
        },
        "dc:creator": "길진세",
        "content": "저는 국내 대형 카드사에 재직 중입니다. 금융회사가 다 그렇듯 상당히 보수적이고 변화에 늦은 편이죠. 그런데 작년 말 갑자기 회사 안에 AI 본부가 생겼습니다. AI가 화두긴 화두인가 봅니다. 세상이 변하고 있으니 빨리 쫓아가야죠.  그런데 제가 불려 들어갔습니다. 그냥도 아니고 팀장입니다. (제가요? 왜요? 라고 요즘 MZ들 하는 말 저도 해 보고 싶었습니다만…) 네, 작년 말 이후로 갑자기 [&#8230;]",
        "contentSnippet": "저는 국내 대형 카드사에 재직 중입니다. 금융회사가 다 그렇듯 상당히 보수적이고 변화에 늦은 편이죠. 그런데 작년 말 갑자기 회사 안에 AI 본부가 생겼습니다. AI가 화두긴 화두인가 봅니다. 세상이 변하고 있으니 빨리 쫓아가야죠.  그런데 제가 불려 들어갔습니다. 그냥도 아니고 팀장입니다. (제가요? 왜요? 라고 요즘 MZ들 하는 말 저도 해 보고 싶었습니다만…) 네, 작년 말 이후로 갑자기 […]",
        "guid": "http://3.36.87.144/?p=268818",
        "categories": [
          "IT",
          "사회"
        ],
        "isoDate": "2025-06-02T03:06:01.000Z"
      }
    ]
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "David Justo",
        "title": "Address Sanitizer Updates for Visual Studio 2022 Version 17.14",
        "link": "https://devblogs.microsoft.com/cppblog/address-sanitizer-updates-for-visual-studio-2022-17-14/",
        "pubDate": "Tue, 27 May 2025 20:04:30 +0000",
        "content:encodedSnippet": "Introduction\nIt has been an exciting few months for the Address Sanitizer (ASan) since our last update. In addition to our continuous focus on quality and correctness, our internal “dogfooding” (i.e. internal adoption) effort has reached several important milestones.\nIn this update, I want to go over some of the quality improvements since Visual Studio 2022 version 17.13, and to give a peek into how ASan is now protecting our C++ toolset against memory safety errors during development.\nSome improvements in Visual Studio 2022 version 17.14\nWe increased the number of ASan flags that can be set through __asan_default_options, the alternative to the environment variable ASAN_OPTIONS. This was an adoption blocker for apps that, for security reasons, can’t access the environment during execution.\nFor Xbox developers, we now have automated testing ensuring that ASan’s dependencies are compatible with the Xbox OS. This is important since we now integrate changes from upstream LLVM on a weekly basis, meaning that we need to actively guard against Xbox-incompatible changes.\nWe fixed a regression that corrupted the callstack displayed during error reporting in x64.\nImproved stability by removing the lazy loading of DbgHelp symbolization helpers, minimizing loader lock contention.\nIn the STL, we now allow ASan container annotations to be disabled on a per-allocator basis. This allows users to control container poisoning, which is useful when custom allocators (e.g. arenas) are in use.\nThis release also contains several other improvements, many of which were contributed by the ASan open-source community in the LLVM repo. By contributing to LLVM upstream, you are also contributing to MSVC’s ASan. We thank the entire LLVM ASan community for their efforts, and plan to continue contributing our improvements upstream as well.\nProtecting the C++ toolchain\nTo protect the toolchain against memory safety errors, all PRs made against the MSVC toolset and libraries now need to pass ASan instrumentation tests. These are tests where the compiler itself is instrumented with ASan to catch memory safety violations while executing our compiler test suite.\nTo be clear, this is different from compiling test programs with ASan, i.e. having the compiler run /fsanitize=address on some .cpp file. Instead, the compiler itself is built with /fsanitize=address before executing its test matrix so that ASan may monitor allocations during compilation.\nThrough this process, we have learned a lot about how to adopt ASan in a large and historied codebase like MSVC and it’s helped us drive several improvements in both the toolset as well as in ASan itself, so we’re excited about the quality improvement cycle that dogfooding ASan within MSVC unlocks for us.\nLet’s harden our C++ code together!\nThe ASan team is proud to help you secure your C++ applications, and we would love to hear from you. If you’re not using it already, download Visual Studio and give the Address Sanitizer a try. We can be reached out through the comments below and through our official support channels: Developer Community or through Visual Studio by clicking Help > Send Feedback > Report A Problem / Provide a suggestion in the product.\nUntil next time!\nThe post Address Sanitizer Updates for Visual Studio 2022 Version 17.14 appeared first on C++ Team Blog.",
        "dc:creator": "David Justo",
        "comments": "https://devblogs.microsoft.com/cppblog/address-sanitizer-updates-for-visual-studio-2022-17-14/#comments",
        "content": "<p>Introduction It has been an exciting few months for the Address Sanitizer (ASan) since our last update. In addition to our continuous focus on quality and correctness, our internal “dogfooding” (i.e. internal adoption) effort has reached several important milestones. In this update, I want to go over some of the quality improvements since Visual Studio [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/address-sanitizer-updates-for-visual-studio-2022-17-14/\">Address Sanitizer Updates for Visual Studio 2022 Version 17.14</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "Introduction It has been an exciting few months for the Address Sanitizer (ASan) since our last update. In addition to our continuous focus on quality and correctness, our internal “dogfooding” (i.e. internal adoption) effort has reached several important milestones. In this update, I want to go over some of the quality improvements since Visual Studio […]\nThe post Address Sanitizer Updates for Visual Studio 2022 Version 17.14 appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=35494",
        "categories": [
          "Announcement",
          "C++"
        ],
        "isoDate": "2025-05-27T20:04:30.000Z"
      }
    ]
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Dmitry Ustalov",
        "title": "Context Collection Competition by JetBrains and Mistral AI",
        "link": "https://blog.jetbrains.com/ai/2025/06/context-collection-competition/",
        "pubDate": "Mon, 02 Jun 2025 12:13:43 +0000",
        "content:encodedSnippet": "Build smarter code completions and compete for a share of USD 12,000!\nIn AI-enabled IDEs, code completion quality heavily depends on how well the IDE understands the surrounding code – the context. That context is everything, and we want your help to find the best way to collect it.\nJoin JetBrains and Mistral AI at the Context Collection Competition. Show us your best strategy for gathering code context, and compete for your share of USD 12,000 in prizes and a chance to present it at the workshop at ASE 2025.\nWhy context matters\nCode completion predicts what a developer will write next based on the current code. Our experiments at JetBrains Research show that context plays an important role in the quality of code completion. This is a hot topic in software engineering research, and we believe it’s a great time to push the boundaries even further.\nGoal and tracks\nThe goal of our competition is to create a context collection strategy that supplements the given completion points with useful information from across the whole repository. The strategy should maximize the chrF score averaged between three strong code models: Mellum by JetBrains, Codestral by Mistral AI, and Qwen2.5-Coder by Alibaba Cloud.\nThe competition includes two tracks with the same problem, but in different programming languages:\nPython: A popular target for many novel AI-based programming assistance techniques due to its very wide user base.\nKotlin: A modern statically-typed language with historically good support in JetBrains products, but with less interest in the research community.\nWe’re especially excited about universal solutions that work across both dynamic (Python) and static (Kotlin) typing systems.\nPrizes\nEach track awards prizes to the top three teams:\n🥇 1st place: USD 3,000\n🥈 2nd place: USD 2,000\n🥉 3rd place: USD 1,000\nThat’s a USD 12,000 prize pool, plus free ASE 2025 workshop registration for a representative from each top team.\nTop teams will also receive:\n🎁 A one-year JetBrains All Products Pack license for every team member (12 IDEs, 3 extensions, 2 profilers; worth USD 289 for individual use).\n🔑 USD 2,000 granted on La Plateforme, for you to use however you like.\nJoin the competition\nThe competition is hosted on Eval.AI. Get started here: https://jb.gg/co4.\nWe have also released a starter kit to help you hit the ground running: https://github.com/JetBrains-Research/ase2025-starter-kit.\nKey dates are:\nJune 2, 2025: competition opens\nJune 9, 2025: public phase begins\nJuly 25, 2025: public phase ends\nJuly 25, 2025: private phase begins\nJuly 25, 2025: solution paper submission opens\nAugust 18, 2025: private phase ends\nAugust 18, 2025: final results announced\nAugust 26, 2025: solution paper submission closes\nNovember 2025: solutions presented at the workshop",
        "dc:creator": "Dmitry Ustalov",
        "content": "Build smarter code completions and compete for a share of USD 12,000! In AI-enabled IDEs, code completion quality heavily depends on how well the IDE understands the surrounding code – the context. That context is everything, and we want your help to find the best way to collect it. Join JetBrains and Mistral AI at [&#8230;]",
        "contentSnippet": "Build smarter code completions and compete for a share of USD 12,000! In AI-enabled IDEs, code completion quality heavily depends on how well the IDE understands the surrounding code – the context. That context is everything, and we want your help to find the best way to collect it. Join JetBrains and Mistral AI at […]",
        "guid": "https://blog.jetbrains.com/?post_type=ai&p=572325",
        "categories": [
          "jetbrains-ai",
          "research",
          "news"
        ],
        "isoDate": "2025-06-02T12:13:43.000Z"
      },
      {
        "creator": "Katie Fraser",
        "title": "Help Predict the Future of AI in Software Development!",
        "link": "https://blog.jetbrains.com/research/2025/06/predict-the-future-of-ai-in-software-development/",
        "pubDate": "Mon, 02 Jun 2025 11:45:27 +0000",
        "content:encodedSnippet": "Ever wanted to share your ideas about AI and have a chance at winning prizes at the same time? As a company dedicated to creating the best possible solutions for software development, we at JetBrains want to know what you think about AI in software development. \nParticipate in our tournament!\n                                    \nIn this post, we tell you more about the tournament and offer tips for making accurate predictions. If you’re new to forecasting platforms, there’s a detailed overview of how they work below.\nLet’s get started so that you can add your voice to community-sourced forecasting!\nJetBrains Research’s AI in Software Development 2025 tournament\nTo participate in the tournament, all you have to do is register on Metaculus and complete this  short survey  .\nMake sure to input your predictions before the resolution on December 1, 2025!\nTournament specs\nWith this forecasting challenge, we are primarily interested in seeing how accurately participants can predict emerging AI features in software development. \nWe also want to understand:\nDevelopers’ attitudes about AI and how they are evolving\nIndividual features of the best forecasters\nHow people estimate the future of various benchmarks\nCurrently, the tournament includes 13 questions. To keep everything fair, we have invited independent experts to review the questions and to evaluate the end resolutions. These experts are:\nOlga Megorskaya, Chief Executive Officer at Toloka\nGrigory Sapunov, Co-Founder and CTO at Intento\nIftekhar Ahmed, Associate Professor at the University of California, Irvine \nHussein Mozannar, Senior Researcher at Microsoft Research AI Frontiers\nDmitiry Novakovskiy, Head of Customer Engineering at Google Cloud\nRankings and the prize pool\nIn this tournament, your ranking will be calculated based on your peer score. \nGenerally speaking, a positive score indicates higher accuracy, and a negative score lower (how exactly Metaculus calculates the peer score). A bit more specifically, the ranking is calculated from the sum of your peer scores over all the questions, which are individually weighted. That is, if you do not forecast a specific question, you score zero on that question. \nFor the AI in Software Development 2025 Tournament, we have a USD 3,000 prize pool, which will be distributed across the first three leaderboard medals as follows (all prizes in USD): \nFirst place: $1,500\nSecond place: $1,000\nThird place: $500\nNote that in order to be eligible for the prize pool, you must fill out the quick research survey!\nTips for making accurate predictions on forecasting platforms\nHere are some tips to get you on the path to positive peer scores and higher rankings:\nConsider alternative scenarios before placing your forecast. This is generally a good idea, but also very useful if the event concerns something novel or very uncertain.\nOngoing news can inform the probabilities of different outcomes, so stay informed!\nBe careful of being overconfident. Besides considering alternatives, it is useful to list offline the reasons why your forecast could be wrong.\nAs with many skills, practicing helps. Especially on a platform like Metaculus, when practicing forecasting, you can improve by posting your reasoning in the discussion section and reading about other participants’ reasoning.\nIf you have forecasted a few questions as practice, compare your track record with the community track record. (But don’t only predict based on the community median. Your insights and evidence are valuable, too!)\nFor more resources, check out Metaculus’ collection of analysis tools, tutorials, research literature, and tips, as well as their forecasting guide for each type of question.\nOnline forecasting tools: a primer\n​What are online forecasting tools? Via a combination of user inputs and sophisticated statistical modelling, these tools enable the prediction of future events. \nIf you’ve never heard of forecasting platforms before, you might guess that they are like gambling sites. While there are some similarities with betting, online forecasting tools are not strictly synonymous with gambling, whether online or at the tracks. A crucial difference is that forecasting tools are used by people interested in gathering information about future events, not necessarily (or solely) to gain a profit based on the outcome of a future event. In particular, our forecasting tournament focuses on evaluating the prediction skills of participants; the prizes are merely perks for the top-ranked forecasters and an exception to most queries on the hosting platform Metaculus.\nAnother type of information-gathering tool is a poll or a survey. While similar in empirical intent, the questions in polls often ask about participants’ (a) experiences, (b) ideas, or (c) preferences and not about tangible, objective facts that can be unambiguously resolved. Here are some real-world examples from YouGov (UK): (a)  whether the participants have watched political content on TikTok, (b) participants’ views on banning phones in schools, and (c)  which Doctor Who version the participant prefers.\nWhile there might be a clear winner among the respondents, the results will reflect people’s preferences and thoughts, sometimes about facts, but the results are not facts themselves. Likewise, any survey results are subject to differences among varying demographics. \nFor the survey question (b), there is a clear winner in the results below, but this is only the opinion of the people in the UK who were asked. And while the respondent may be interested in the results (e.g. they really want schools to ban phones), there is no direct gain for having given a more popular or more accurate response. \n\nSource: YouGov plc, 2025, © All rights reserved. [Last access: May 22, 2025]\nIn contrast, a forecasting query’s responses are evaluated for accuracy against facts at the time of resolution. Those participating are actively interested in the resolution, as it affects leaderboard prestige and/or financial reward, depending on the type of forecasting platform. This also means that participants are more motivated to give what they think are accurate predictions, even if it does not 100% align with their personal preferences at the time. \nOften forecasting platforms involve binary questions, like in Will DeepSeek be banned in the US this year?. The queries can also be about uncertain events with multiple possible outcomes, e.g. for the winner of Eurovision 2025, where until the finals, many countries have a chance. Similarly, queries with numerical ranges, such as in the prediction of the Rotten Tomatoes score of Mission: Impossible – The Final Reckoning, can consider the weight of different ranges. Even if different platforms’ architectures handle the calculations slightly differently, the main takeaway is that there are resolution deadlines and that the event in question can be unambiguously resolved on forecasting platforms. See the figure below for a snapshot of the rules summary for the Mission: Impossible question on Kalshi.\n\n\n\n\nSource: Kalshi.    [Last access: May 22, 2025]\nThe following subsections present the history of forecasting tools, including the most common kinds and which one is relevant for this forecasting challenge.\nA history of prediction\nForecasting mechanisms have existed informally for centuries, where people could predict outcomes like papal or presidential election results. More formal forecasting tools were established at the end of the 20th century, starting with a similar focus, and have since gained currency while expanding their application. \nWell-known examples of formal forecasting mechanisms include the Iowa Electronic Market, created as an experimental tool in 1988 for the US presidential election’s popular vote, still in use today; Robin Hanson’s paper-based market, created in 1990 for Project Xanadu employees to make predictions on both the company’s product and scientific controversies; and the online Hollywood Stock Exchange, established in 1996 as a way for participants to bet on outcomes in the entertainment industry. \nThese forecasting tools demonstrated how much more accurate aggregated predictions can be than individual ones (see for example The Wisdom of Crowds or Anatomy of an Experimental Political Stock Market), motivating economists to take their insights seriously. Around the same time, big companies such as Google, Microsoft, and Eli Lily began establishing company-internal prediction markets. These days, many companies have their internal prediction tools; for example, we at JetBrains recently launched our own platform, called JetPredict.\nFor example, Google’s internal product, Prophit, was launched in 2005 and offered financial incentives, plus leaderboard prestige, to employees best at predicting. Although an internal product, Prophit was known outside of Google as a prediction platform demonstrating relatively high accuracy. It eventually had to shut down in the late 2000s, due to federal regulations (and the 2008 financial crisis did not help either). Many publications covered this topic at the time, for example this 2005 NYTimes article At Google, the Workers are Placing their Bets, this 2007 Harvard Business Case Study Prediction Markets at Google, and the 2008 article Using Prediction Markets to Track Information Flows: Evidence from Google. More recently, there was an article about Prophit and a second internal market, Gleangen: The Death and Life of Prediction Markets at Google. \nBeyond big corporations, researchers have started using formal prediction tools to predict things like study replicability, a crucial scientific tenet. In a comparison of forecasting tools and survey beliefs predicting this, the former were much more accurate than the latter. If you are interested, The Science Prediction Market Project provides a collection of papers on the topic.\n Applying forecasting tools to research is still less widespread than forecasting in the business world, but it’s an exciting space to watch!\nDifferent forecasting tools today\nNot all forecasting platforms are prediction markets, even if the terms are sometimes used interchangeably. Here we only look at overall differences without going into detail of, say, kinds of prediction markets or the math behind the models. If you are interested, here are further resources on these differences provided by WIFPR, Investopedia, and the Corporate Finance Institute.\nThe hallmark of a prediction market is that participants are offered financial incentives by way of event contracts, sometimes also called ‘shares’. Key concepts include:\nThe event contracts can be sold or bought depending on the participant’s belief in the outcome.\nThe current price reflects what the broader community expects of the outcome.\n\nAs the nominal contract values are typically USD 1, the sum of the share prices is USD 1 as well. So, for a market’s implied probability of about 60%, the average share price to buy will be around 60 cents. \nPrices change in real-time as new information emerges.\nIf the participant bought contract shares for the correct prediction, they earn money (USD 1 typically) for each share purchased. Incorrect predictions mean no money is earned.\nTranslating those concepts into an example: A question on the prediction market Kalshi asks whether Anthropic will release Claude 4 before June 1, 2025. At the time of writing this post, the likelihood of Claude 4’s release was at 34% according to the community, as shown in the figure below. \n\n\n\n\nSource:  Kalshi.  [Last access: May 16, 2025, 17:25 CEST]\nIf you wanted to participate in the above market on May 16, the following scenarios could have occurred. If you believed the release would have happened before June 1, you could have bought shares for about 35 cents each. Say you bought 100 shares for USD 35 and, come June 1, Anthropic did indeed release Claude 4. You would then have won USD 100 (USD 1 multiplied by 100 shares), and your profit would be USD 65 (USD 100 win minus your USD 35 investment). If Anthropic did not release Claude 4 by June 1, you would then have lost your initial USD 35 investment.\nThe figure above additionally shows that earlier in the year, the community thought that Claude 4 was more likely to be released by the resolution date. As more evidence rolls in, the outcome’s likelihood can change.\nAggregating community forecasts is also possible without share-buying and profit-seeking. Other forecasting platforms, such as Good Judgement or Metaculus, use a broader toolset for their prediction architecture, focusing primarily on leveraging collective intelligence and transparent scoring. By eliminating profit as the primary incentive and instead rewarding forecasters for their prediction accuracy over time, extreme predictions are discouraged.\nIn particular, Metaculus is building a forecasting ecosystem with a strong empirical infrastructure, using techniques such as Bayesian statistics and machine learning. This creates a platform that is overall more cooperative and has a shared scientific intent. The platform encourages participants to publish the reasoning behind their picks, which fosters community discussions. \nAccuracy and the broader impact of community-sourced forecasting\nAs forecasting tools become more sophisticated, they are also getting more accurate in their predictions. In its current state, Metaculus already outperforms notoriously robust statistical models, as was recorded in Forecasting skill of a crowd-prediction platform: A comparison of exchange rate forecasts. The platform additionally keeps an ongoing record of all resolved questions with performance statistics. \nMetaculus is a platform that not only benefits from community inputs, but also provides vital information to the community. Take the COVID-19 pandemic for example: predictors on Metaculus accurately anticipated the impact of the virus before it was globally recognized as a pandemic. In turn, the insights on specific events within such a pandemic can be valuable to policymakers, like in this case study on an Omicron wave in the US.\nResearchers are continuously investigating various public health threats. An open question at the time of writing, on the possibility of the avian influenza virus becoming a public health emergency, is shown in the figure below. What would be your prediction?\n\n\n\n\nSource: Metaculus.  [Last access: May 16, 2025]\nAt JetBrains, our commitment goes beyond delivering top-tier software development solutions and innovative AI tools: We are passionate about nurturing a vibrant, engaged community and creating meaningful opportunities for learning and collaboration. We believe that open dialogue about the future of AI in software development is essential to advancing the field.\nWith these shared values, we are proud to partner with Metaculus as the host for our forecasting challenge. Together, we look forward to inspiring thoughtful discussion, driving progress, and shaping the future of AI in software development.",
        "dc:creator": "Katie Fraser",
        "content": "Ever wanted to share your ideas about AI and have a chance at winning prizes at the same time? As a company dedicated to creating the best possible solutions for software development, we at JetBrains want to know what you think about AI in software development.&#160; In this post, we tell you more about the [&#8230;]",
        "contentSnippet": "Ever wanted to share your ideas about AI and have a chance at winning prizes at the same time? As a company dedicated to creating the best possible solutions for software development, we at JetBrains want to know what you think about AI in software development.  In this post, we tell you more about the […]",
        "guid": "https://blog.jetbrains.com/?post_type=research&p=570919",
        "categories": [
          "research",
          "ai-in-software-development",
          "forecasting-platform",
          "jetbrains-research",
          "prediction-market",
          "tournament"
        ],
        "isoDate": "2025-06-02T11:45:27.000Z"
      },
      {
        "creator": "Julia Amatuni",
        "title": "AI-Powered Learning, Part 2: Get Unstuck With AI Hints in Python and Kotlin Tasks",
        "link": "https://blog.jetbrains.com/education/2025/06/02/ai-hints-plugin/",
        "pubDate": "Mon, 02 Jun 2025 08:32:54 +0000",
        "content:encodedSnippet": "In our previous post, we introduced AI-powered machine translation and inline theory definitions to help make learning smoother and more accessible. Today, we’re excited to share the next big step in bringing intelligent assistance to your programming journey: AI hints.\nThis feature is designed especially for beginners who may get stuck while solving coding tasks – unsure how to move forward, fix a failing test, or resolve a compilation error. With AI hints, the JetBrains Academy plugin is here to guide you, one step at a time.To explore the latest improvements, install the JetBrains Academy plugin or update to the latest version from Settings/Preferences | Plugins in your JetBrains ID.\nINSTALL FREE PLUGIN\n                                                    \nHow AI hints work\nWhen you’re solving a programming task in Python or Kotlin, you’ll now see a new option to request an AI hint. The hint is delivered in two parts:\nA text explanation describing what you could do next.\nA code diff preview showing the suggested change right inside your IDE.\nThis way, you not only get the answer – you also learn how to arrive at it.\nAn example of an AI-generated next step hint in a Kotlin task\n\n\n\nWhat can AI hints help with?\nThe current version of AI hints supports:\nSuggestions for the next logical step if you’re stuck solving a task.\nFixes for compilation errors.\nHints to help pass failing tests.\nThese hints combine static code analysis from your IDE with the power of large language models (LLMs), bringing together the best of both worlds – deep context awareness and intelligent language understanding.\nA note on accuracy\nAI-generated hints are still evolving. They may occasionally be incomplete or inaccurate, especially in more complex scenarios. But we’ve built in an easy way to help us improve: just use the Feedback button after seeing a hint. Your input directly contributes to making the system smarter and more helpful over time.\nWhere to find it\nAI hints are currently available for programming tasks in Python and Kotlin in all IDE-based Marketplaces courses. \nTo try out AI hints:\nOpen a Python or Kotlin course.\nStart solving a programming task.\nIf you’re stuck, click the Get Hint button.\nSee what to do next – and how to do it.\n\n\n\n\n\nWe hope AI hints make learning to code feel more approachable and less frustrating. \nHave any feedback or questions? Drop us a comment below or submit feedback right from the plugin.\n\n\n\n\nHappy learning!\nThe JetBrains Academy team",
        "dc:creator": "Julia Amatuni",
        "content": "In our previous post, we introduced AI-powered machine translation and inline theory definitions to help make learning smoother and more accessible. Today, we’re excited to share the next big step in bringing intelligent assistance to your programming journey: AI hints. This feature is designed especially for beginners who may get stuck while solving coding tasks [&#8230;]",
        "contentSnippet": "In our previous post, we introduced AI-powered machine translation and inline theory definitions to help make learning smoother and more accessible. Today, we’re excited to share the next big step in bringing intelligent assistance to your programming journey: AI hints. This feature is designed especially for beginners who may get stuck while solving coding tasks […]",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=571423",
        "categories": [
          "ai-assistant",
          "jetbrains-academy",
          "jetbrains-academy-plugin",
          "jetbrains-ai",
          "kotlin",
          "learning-courses",
          "jetbrainsacademy",
          "ai-assistance",
          "ide-plugin",
          "learning",
          "news",
          "release"
        ],
        "isoDate": "2025-06-02T08:32:54.000Z"
      },
      {
        "creator": "Anton Makeev",
        "title": "Get Answers to Your KMP Questions",
        "link": "https://blog.jetbrains.com/kotlin/2025/06/get-answers-to-your-kmp-questions/",
        "pubDate": "Mon, 02 Jun 2025 06:37:10 +0000",
        "content:encodedSnippet": "During the Closing Panel at KotlinConf 2025, we received many questions about Kotlin Multiplatform (KMP), but unfortunately didn’t have time to address them all live. So we’ve decided to answer the most popular ones in a follow-up blog post.\nWill IntelliJ IDEA and Android Studio support full Swift navigation, completion, etc., for iOS code, or is that not feasible because of Apple restrictions?\nThe KMP plugin for IntelliJ IDEA and Android Studio already supports Swift and cross-language Kotlin/Swift features such as navigation, and we plan to add more! Check out this blog post to learn more.\nWhat’s the Kotlin team’s plan to improve the native compilation speed (desktop targets) for multiplatform projects? Waiting 10 minutes to compile a small CLI app is not acceptable for many teams.\nWe are currently looking into native build performance. First, please check our recommendations on improving native compilation speed. If they don’t help, we would highly appreciate it if you could file a bug report and provide more details about the project. It would give us valuable insights on how to address the performance issues.\nHow do you see KMP evolving over the next year?\nWe are driving Kotlin Multiplatform towards a complete and mature solution! We have big plans for Compose Multiplatform and are working on the Beta of Compose Multiplatform for web. In addition to UI sharing, we’ll be improving business logic sharing scenarios, focusing on Kotlin/JS with @JsExport and Kotlin/Native Swift export. Check out our plans for the web platform in general. As we have just released the first version of the KMP plugin for IntelliJ IDEA and Android Studio, we plan to work on its stability and bring more productivity features, which you can find details about in this blog post.\nCheck out the KMP roadmap to learn more.\nCan you please elaborate on the work being done to improve web support for Compose/KMP?\nWe are working on the Beta of Compose Multiplatform for web. We have already provided more APIs to ensure parity with other platforms, such as clipboard and drag’n’drop, collaborated with browser vendors to improve the performance of web apps, and improved the pointer and text input behavior.\nFor the Beta of Compose Multiplatform for web, we plan to add interop with HTML elements, compatibility mode for older browsers with automatic fallback to JS, a prototype for accessibility support, and multiple improvements to key UI components.\nAre there any plans to support accessibility and SEO in Compose Multiplatform for Web, when everything renders to pixels in a canvas?\nWe plan to implement basic accessibility support by mapping Compose semantics nodes to DOM elements later this year. Having the backing DOM hierarchy on a page would allow for some SEO support too. SEO can be further improved by pre-rendering the content as DOM on the server side, but we haven’t investigated this yet.\nWhy does Compose Multiplatform have scrollbars, while Android Jetpack Compose does not?\nScrollbars were first implemented for the desktop target, but we are exploring how to bring them to other platforms.\nAre we getting Navigation 3 for KMP?\nNavigation 3 has been built with Kotlin Multiplatform in mind. So, the answer is yes, there will be multiplatform support for Navigation 3. However, we don’t know when, as it depends on other ongoing work. Please follow the corresponding YouTrack ticket for further updates.",
        "dc:creator": "Anton Makeev",
        "content": "During the Closing Panel at KotlinConf 2025, we received many questions about Kotlin Multiplatform (KMP), but unfortunately didn’t have time to address them all live. So we’ve decided to answer the most popular ones in a follow-up blog post. Will IntelliJ IDEA and Android Studio support full Swift navigation, completion, etc., for iOS code, or [&#8230;]",
        "contentSnippet": "During the Closing Panel at KotlinConf 2025, we received many questions about Kotlin Multiplatform (KMP), but unfortunately didn’t have time to address them all live. So we’ve decided to answer the most popular ones in a follow-up blog post. Will IntelliJ IDEA and Android Studio support full Swift navigation, completion, etc., for iOS code, or […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=571659",
        "categories": [
          "multiplatform"
        ],
        "isoDate": "2025-06-02T06:37:10.000Z"
      },
      {
        "creator": "Roman Pronskiy",
        "title": "PHP Annotated – May 2025",
        "link": "https://blog.jetbrains.com/phpstorm/2025/05/php-annotated-may-2025/",
        "pubDate": "Fri, 30 May 2025 15:36:07 +0000",
        "content:encodedSnippet": "@media (min-width: 769px) { main .article-section .content ul:not([class]):not([id]) li ul:not([class]):not([id]) { margin-top: 0; margin-bottom: 24px; } } main .article-section .content ul:not([class]):not([id]) li, main .article-section .content ul:not([class]):not([id]) > li {padding-bottom: 18px;}  main .article-section .content ul:not([class]):not([id]) li ul:not([class]):not([id]) li {padding-bottom: 0;} img.alignico {margin-right: 10px;margin-top: 5px;float: left;}  summary {display: list-item;cursor: pointer;font-style: italic; } section.article-section a {color: #7755f3} code {color: red;} #roman-pronskiy,.copy-heading:has(#roman-pronskiy){margin-top: 0;} main li a[href^=\"https://github.com\"]:before {background: no-repeat 2px center url(data:image/svg+xml;utf8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxNCIgaGVpZ2h0PSIxNCIgZmlsbD0ibm9uZSIgdmlld0JveD0iMCAwIDMyIDMyIj48cGF0aCBmaWxsPSIjMjQyOTJFIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiIGQ9Ik0xNiAwYTE2IDE2IDAgMCAwLTUgMzEuMmMuNy4xIDEtLjQgMS0uOHYtM2MtNCAuOC01LTEtNS40LTEuOC0uMS0uNS0xLTItMS42LTIuMy0uNi0uMy0xLjQtMSAwLTEgMS4yIDAgMi4xIDEuMSAyLjQgMS42IDEuNSAyLjQgMy44IDEuNyA0LjcgMS4zLjEtMSAuNi0xLjcgMS0yLjEtMy41LS40LTcuMy0xLjgtNy4zLTggMC0xLjcuNy0zLjEgMS43LTQuMi0uMi0uNC0uNy0yIC4xLTQuMyAwIDAgMS40LS40IDQuNCAxLjdhMTQuOCAxNC44IDAgMCAxIDggMGMzLjEtMi4xIDQuNC0xLjcgNC40LTEuNyAxIDIuMi40IDMuOS4yIDQuM2E2IDYgMCAwIDEgMS42IDQuM2MwIDYuMS0zLjcgNy41LTcuMyA3LjkuNi41IDEuMSAxLjQgMS4xIDN2NC4zYzAgLjQuMyAxIDEuMS44QTE2IDE2IDAgMCAwIDE2IDBaIiBjbGlwLXJ1bGU9ImV2ZW5vZGQiLz48L3N2Zz4=);content: \"\";padding-left: 20px;} main li a[href^=\"https://www.youtube.com\"]:before {background: no-repeat 0px center url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='100%25' version='1.1' viewBox='0 0 68 48' width='100%25'%3E%3Cpath class='ytp-large-play-button-bg' d='m .66,37.62 c 0,0 .66,4.70 2.70,6.77 2.58,2.71 5.98,2.63 7.49,2.91 5.43,.52 23.10,.68 23.12,.68 .00,-1.3e-5 14.29,-0.02 23.81,-0.71 1.32,-0.15 4.22,-0.17 6.81,-2.89 2.03,-2.07 2.70,-6.77 2.70,-6.77 0,0 .67,-5.52 .67,-11.04 l 0,-5.17 c 0,-5.52 -0.67,-11.04 -0.67,-11.04 0,0 -0.66,-4.70 -2.70,-6.77 C 62.03,.86 59.13,.84 57.80,.69 48.28,0 34.00,0 34.00,0 33.97,0 19.69,0 10.18,.69 8.85,.84 5.95,.86 3.36,3.58 1.32,5.65 .66,10.35 .66,10.35 c 0,0 -0.55,4.50 -0.66,9.45 l 0,8.36 c .10,4.94 .66,9.45 .66,9.45 z' fill='%23FF0000' fill-opacity='0.81'%3E%3C/path%3E%3Cpath d='m 26.96,13.67 18.37,9.62 -18.37,9.55 -0.00,-19.17 z' fill='%23fff'%3E%3C/path%3E%3Cpath d='M 45.02,23.46 45.32,23.28 26.96,13.67 43.32,24.34 45.02,23.46 z' fill='%23ccc'%3E%3C/path%3E%3C/svg%3E\"); content: \"\";padding-left: 18px;background-size: 16px;}\nWelcome to the May edition of PHP Annotated!\nIt’s been a minute since the last edition. Turns out time flies when you’re deep in foundation work, and the occasional existential debugging session. But we are back.\nHere’s everything you might’ve missed in the PHP world, we dug through the noise so you can just enjoy the highlights.\n\nHighlights\nJoin PHPverse to Celebrate 30 Years of PHP!\nPHP is turning 30 this year! 🎉 PHPverse is a free online event hosted by JetBrains to mark this amazing milestone together.\nRegister\nJune 17, 2025\n11:30–16:30 UTC\nAnd if you’re feeling nostalgic, check out my experiment from last year, where I actually run PHP 1.0:\n        \n    \nPHP 8.1.32, PHP 8.2.28, PHP 8.3.19, and PHP 8.4.5 Released\n❗️These security updates address several vulnerabilities, including:\nCVE-2025-1219, CVE-2025-1736, CVE-2025-1861, CVE-2025-1734, CVE-2025-1217, and out-of-bounds read when using XML_OPTION_SKIP_TAGSTART.\nPHP Core Security Audit Results\nIn 2024, the first in a decade external security audit of the PHP core was conducted by The PHP Foundation, and commissioned by the Sovereign Tech Agency. The audit focused on the most critical parts of the PHP source code, given the limited budget.\nThe audit uncovered 27 issues, 17 of which had security implications. All identified issues have since been fixed by the PHP development team.\nPHP users are strongly encouraged to upgrade to the latest PHP versions to benefit from these security improvements.\nFrankenPHP Is Now Officially Supported by The PHP Foundation\nFrankenPHP, a modern PHP application server built for performance and ease of deployment, is now officially supported by The PHP Foundation.\nIt’s built in Go, powered by the Caddy web server, and offers a fresh take on running PHP outside of the traditional FPM model.\nRun PHP Inside Node.js with @platformatic/php-node\nphp-node is a Rust-based, Node.js-native module that allows running PHP applications within a Node.js environment. It works by dispatching requests to a PHP instance running multi-threaded in the worker pool provided by the Node.js. This means you can enjoy the performance of Node.js while utilizing PHP’s extensive ecosystem and functionality.\nHere is a hello world example:\n👉 Intro blog post\nThink of an Elephpant 🐘\nPHP doesn’t need defending. It needs celebrating.\nA brilliant message and post from Liam Hammett!\nPHP Core\n✅ RFC: Pipe operator v3\nThe first proposal to bring a pipe operator to PHP dates back to 2016, followed by a second attempt in 2020. Now, on the third try it’s finally happening!\nStarting with PHP 8.5, you’ll be able to use the |> operator to chain function calls in a clean, readable way:\nKudos to Larry Garfield for the persistence and effort to see this through!\nCheck out Brent’s video overview of PHP 8.5’s pipe operator.\n✅ RFC: array_first() and array_last()\nPHP 7.3 introduced array_key_first() and array_key_last() to get the first and last keys of an array, but still no functions to get the first and last values of an array.\nThanks to Niels Dossche two new functions will be added in PHP 8.5:\n✅ RFC: Marking return values as important (#[\\NoDiscard])\nPHP 8.5 will come with a new #[\\NoDiscard] attribute to indicate that the return value of a function or method is “important” and that not doing anything with the return value is likely to be a bug.\n📣 RFC: True Async\nEdmond Dantes proposes to create a standard for writing concurrent code in PHP, as well as a C-API interface that will allow PHP to be extended at a low level with C, Rust, C++, and other languages. This will allow modules to support non-blocking I/O operations without having to override PHP functions or duplicate code.\nAs Edmond clarified on the mailing list, the plan is to simplify the current RFC as much as possible to make it easier to pass. New syntax should be discussed closer to future versions of PHP (likely 9.0).\nYou can follow the development process almost live in this separate github.com/true-async.\nPHP 8.5 release managers announced\nAs is tradition, PHP 8.5 will have 2 rookie release managers: Volker Dusch and Daniel Scherzer. They will be assisted by veteran RM Pierrick Charron.\nThere are a few other RFCs with mentioning that passed, are under discussion, or were declined already:\n✅ RFC: Add get_error_handler(), get_exception_handler() functions\n📣 RFC: Final Property Promotion\n📣 RFC: Modern Compression\n📣 RFC: Change default zend.exception_ignore_args INI setting\n❌ RFC: Nested Classes\n❌ RFC: Never Parameters (v2)\nTools\nPHP WebRTC\nA full implementation of the WebRTC protocol in pure PHP! No Node.js or JavaScript is required on the backend to use. You would need FFI enabled, however.\nThe goal is to make it easy to build WebRTC-based apps in pure PHP – including media servers, video conference web app, SFUs, and peer-to-peer apps.\nBravo! 👏\nphpacker/phpacker\nPackage any PHP script or PHAR into a standalone, cross-platform executable.\nI briefly explained how this works in my blogpost Turn Any PHP Script into a Native Single-File Binary. Phacker makes it really easy and builds for Mac, Linux, and Windows!\nNativePHP 1.0\nThe tool allows building desktop application with PHP and JavaScript/HTML/CSS.\nThere is also a paid version for iOS and Android devices: NativePHP for Mobile.\nboson-php/boson\nThis is another tool to build cross-platform desktop apps with PHP, JavaScript, HTML, and CSS. But instead of Electron, under the hood, it uses saucer/saucer, a modern, cross-platform C++ webview library, which allows making apps really slim:\n$app = new Boson\\Application();\n\n$app->webview->html = <<<'HTML'\n    <button onclick=\"foo('HELLO');\">Hello</button>\n    HTML;\n\n$app->webview->bind('foo', var_dump(...));\n$app->run();\nNPX-like package execution tools for PHP\nThere are a few such tools available out there:\nimliam/cpx – Run any command from any composer package, even if it’s not installed in your project.\neduardocruz/phpx – PHPX is a NPX-like package execution tool for PHP.\nI also vibe-coded prototyped my own tool in Python. The difference is that it does not require users to have PHP or Composer on their machine: pronskiy/pocus.\nOriginally I wanted my friends who have uvx installed to be able to use my MCP servers with no additional prerequisites. So it allows them to run any script from GitHub with one command:\nOr any command from an existing PHP package:\nuvx pocus phpstan/phpstan phpstan analyse ./src\nmasan4444/phpup – Cross-Platform PHP version manager written in Rust. Seems abandoned, but maybe someone wants to pick it up?\n    \nphp-internal/dload – Helps to download binaries from release assets.\n    \nutopia-php/vcs – Lite & fast micro PHP vcs abstraction library that is easy to use.\n    \njerowork/graphql-attribute-schema – Easily build your GraphQL schema using PHP attributes instead of large configuration arrays.\n    \nmario-deluna/php-glfw – A fully-featured OpenGL and GLFW extension for PHP.\nAt first I thought it was another fun project to make cool demos like these:\nmedilies/php-pong – Classic Pong game programmed with pure OpenGL wrapped in OOP code.\n\nmario-deluna/php-chip8 – Yet another CHIP-8 emulator, but in PHP!.\n\nOr even like this:\nphpgl/php-craft – Mining PHPotentials: A Minecraft-Inspired Game written in PHP.\n\nBut it actually has useful applications, for example: creating animated code snippets with Tempest Highlight & PHP-GLFW:\n            \n    \nAI\nThe ecosystem of AI tooling for PHP is growing fast! Here are just a few interesting findings.\nMCP\nIf you’re new to the topic, check out my short intro video: MCP – What is that?\nI found the interface of logiscapedev/mcp-sdk-php a bit frustrating to work with, so I built a simple wrapper to make things easier:\npronskiy/mcp – 🐉 The fast, PHP way to build MCP servers.\nHere’s what a minimal MCP server looks like using the wrapper:\nBut there is a much more powerful alternative:\nphp-mcp/server – PHP implementation for the Model Context Protocol (MCP) server.\nLLM Frameworks\nLLPhant/LLPhant – A lightweight and intuitive framework with tons of ready-to-use tools. Well-documented, actively developed.\ninspector-apm/neuron-ai – Open source framework to create full featured AI Agents in PHP.\nUsing AI models in PHP\nThanks to an open ONNX format, it is possible to run many AI models in PHP natively. These are the tools that facilitate it:\nCodeWithKyrian/transformers-php\nankane/onnxruntime-php\nPhpStorm\nPhpStorm 2025.1\nAnd speaking of AI, Junie, the coding agent by JetBrains, is now available for PhpStorm too!\n        \n    \nNew JetBrains Xdebug Helper browser extension.\nCron & Crontab Support IDE Plugin – Crontab syntax support: schedule periods and errors highlighting, shell command completions, human-readable schedule folding, and more.\nLaravel Idea 10 released – The popular plugin for PhpStorm has received a major update. It includes the Database tables and fields completion, code generation improvements, and more.\nFrameworks\nLaravel 12 is Now Released\nThis update introduces new starter kits for React, Vue, and Livewire\nCapevace/laravel-introspect – Query your Laravel codebase like a database, with an Eloquent-like API.\n    \nfdomgjoni99/laravel-ai-factory – A package for generating realistic test data using AI models.\n    \n10 Efficient (and Fun) Ways to Seed Your Database by Nico Devs.\n    \nSecure Your Webhooks in Laravel: Preventing Data Spoofing by Chris.\n    \nCustom PHPStan Rules to Improve Every Symfony project by Tomas Votruba.\n    \nSymfony 7.3.0 has been released\nCheck the Living on the Edge category on this blog to learn about the main features of this new stable release.\nMisc\nPHP 3 to 8: The Evolution of a Codebase by Aleksander Kaim.\n    \nCreate Weird Fun PHPStan Rules like Nobody’s Watching by Tomas Votruba.\n    \nDiscovering PHP’s yield Keyword After 10 Years by Will.\n    \nAnd Then There Was PIE by Derick Rethans.\n    \nCombining regular expressions with named capture groups to improve performance by Benjamin Eberlei.\n    \nConferences\nThese PHP events are all worth a visit, and some are still accepting presentation proposals:\nPHPverse 2025 – June 17, Online.\nPHP Conference Kansai 2025 – July 18–19, Kobe, Japan.\nLaracon 2025 – July 29–30, Denver, CO, USA.\nAPI Platform Conference 2025 – September 18–19, Lille, France.\nForum PHP 2025 – October 9–10, Disneyland Paris, France.\nInternational PHP Conference 2025 – October 27‒31, Munich, Germany.\nSymfonyCon Amsterdam 2025 – November 27-28. Amsterdam, Netherlands. CFP\nTo find a PHP meetup happening near you, check out the calendar on php.net.\nFun\nJust fucking use HTML\n\n\n    \n\n\n    \nIf you have any interesting or useful links to share via PHP Annotated, please leave a comment on this post or let us know on X/Twitter: @pronskiy.\nSubscribe to PHP Annotated\nIf you have any interesting or useful links to share via PHP Annotated, please leave a comment on this post or let us know on X/Twitter.\nSubscribe to PHP Annotated\nRoman Pronskiy\nDeveloper Advocate at @PhpStorm, Executive Director at @The PHP Foundation.\nTwitter | GitHub",
        "dc:creator": "Roman Pronskiy",
        "content": "Welcome to the May edition of PHP Annotated! It’s been a minute since the last edition. Turns out time flies when you’re deep in foundation work, and the occasional existential debugging session. But we are back. Here’s everything you might’ve missed in the PHP world, we dug through the noise so you can just enjoy [&#8230;]",
        "contentSnippet": "Welcome to the May edition of PHP Annotated! It’s been a minute since the last edition. Turns out time flies when you’re deep in foundation work, and the occasional existential debugging session. But we are back. Here’s everything you might’ve missed in the PHP world, we dug through the noise so you can just enjoy […]",
        "guid": "https://blog.jetbrains.com/?post_type=phpstorm&p=571885",
        "categories": [
          "laravel",
          "php",
          "php-8-4",
          "php-8-5",
          "php-annotated-monthly",
          "rfc",
          "symfony"
        ],
        "isoDate": "2025-05-30T15:36:07.000Z"
      },
      {
        "creator": "Elena Kerpeleva",
        "title": "Plugin Verifier and API Compatibility Maintenance: Livestream Recording & Key Takeaways",
        "link": "https://blog.jetbrains.com/platform/2025/05/plugin-verifier-and-api-compatibility-maintenance-livestream-recording-amp-key-takeaways/",
        "pubDate": "Fri, 30 May 2025 13:34:43 +0000",
        "content:encodedSnippet": "In a recent session, IntelliJ Platform Developer Advocate Róbert Novotný walked through the Plugin Verifier—one of the most important tools for maintaining plugin compatibility across JetBrains IDEs. The session focused on spotting breaking API changes, avoiding internal APIs, and verifying plugin behavior across IDE versions.\nIf you couldn’t join us live, the full recording is now available on JetBrains TV.\n\n\n\n\n\n\nAnd if you prefer reading over watching, this blog post sums up the key takeaways from the session.\nWhat is the IntelliJ Plugin Verifier?\nThe IntelliJ Plugin Verifier is a tool that ensures a plugin behaves correctly across JetBrains IDE versions. It checks for compatibility issues with the evolving IntelliJ Platform APIs, and validates that a plugin:\nContains a complete and correct plugin descriptor (plugin.xml)\nUses APIs that are available and compatible with target IDE versions\nAvoids deprecated, internal, or experimental APIs\nJetBrains Marketplace relies on the Plugin Verifier to assess plugins upon upload, acting as a quality gate for all listed plugins.\nWhy Compatibility Matters\nPublishing a plugin to JetBrains Marketplace is about more than just passing basic validation. End users expect plugins to work reliably, without errors or unexpected behavior. The Plugin Verifier helps plugin authors ensure their plugins will run smoothly across IDE versions, minimizing user disruption.\nTypical Compatibility Challenges\nThe session covered several types of issues that the Plugin Verifier can detect:\nDeprecated APIs: These may work now but are scheduled for removal in future platform versions.\nInternal APIs: Not intended for external use, these may change without notice and break plugins.\nExperimental APIs: Unstable and subject to change, their use is discouraged.\nOverride-only APIs: These should only be overridden, not invoked directly.\nVisibility changes: Classes, methods and fields may become protected or public.\nStructural changes: Classes may become interfaces or vice versa, breaking assumptions in plugin code.\n\n\n\n\nExample: Plugin verification results\nRunning the Plugin Verifier Locally\nTo avoid the delay of uploading a plugin just to see it fail verification, developers can and should run the Plugin Verifier locally. There are two main ways to do this:\nWith IntelliJ Platform Gradle Plugin: This is the recommended approach. The Gradle plugin provides tasks like verifyPlugin and verifyPluginStructure for integrated verification.\nStandalone Tool: Developers can download the Plugin Verifier JAR from GitHub or Maven Central and run it via the command line.\nThe session also walked through how to set up both methods, showing how developers can validate plugins against multiple IDE versions, identify API compatibility problems, and fix issues before publication.\nIntegrating with CI/CD\nIntegrating the Plugin Verifier into a continuous integration pipeline saves time and prevents issues from reaching production. The verifier can be run against new plugin versions and upcoming IDE releases to catch problems proactively.\nHandling Warnings and Errors\nWhile the Plugin Verifier highlights potential problems, not all warnings are show-stoppers. Some rules (like those about naming or older plugin IDs) can be muted locally using CLI flags (e.g., --mute). However, JetBrains Marketplace may enforce stricter rules, and muted issues locally do not affect Marketplace verification.\n\n\n\n\nBest Practices\nTo get the most out of the Plugin Verifier and to avoid common pitfalls later on, keep these practical tips in mind:\nAvoid internal and deprecated APIs whenever possible.\nUse stable and documented APIs that are part of the official SDK.\nRun verification locally before every release.\nRegularly check compatibility against newer IDE versions.\nResources and Further Reading\nFind more details and documentation in the IntelliJ Platform SDK docs\nAsk questions or explore existing discussions on the JetBrains Platform Forum\nContribute to development on the Plugin Verifier GitHub Repository\nConclusion\nThe Plugin Verifier is a crucial tool in the JetBrains plugin development workflow. Whether integrated via Gradle or run standalone, it empowers developers to ship robust, future-proof plugins. By embracing it early in the development process, plugin authors can ensure a smoother path to publication and better experiences for their users.",
        "dc:creator": "Elena Kerpeleva",
        "content": "In a recent session, IntelliJ Platform Developer Advocate Róbert Novotný walked through the Plugin Verifier—one of the most important tools for maintaining plugin compatibility across JetBrains IDEs. The session focused on spotting breaking API changes, avoiding internal APIs, and verifying plugin behavior across IDE versions. If you couldn’t join us live, the full recording is [&#8230;]",
        "contentSnippet": "In a recent session, IntelliJ Platform Developer Advocate Róbert Novotný walked through the Plugin Verifier—one of the most important tools for maintaining plugin compatibility across JetBrains IDEs. The session focused on spotting breaking API changes, avoiding internal APIs, and verifying plugin behavior across IDE versions. If you couldn’t join us live, the full recording is […]",
        "guid": "https://blog.jetbrains.com/?post_type=platform&p=570963",
        "categories": [
          "plugin-development",
          "livestreams",
          "marketplace",
          "jetbrains-marketplace",
          "livestream"
        ],
        "isoDate": "2025-05-30T13:34:43.000Z"
      },
      {
        "creator": "Oleg Zinovyev",
        "title": "Introducing Live Watches in CLion’s Debugger",
        "link": "https://blog.jetbrains.com/clion/2025/05/introducing-live-watches/",
        "pubDate": "Thu, 29 May 2025 14:30:51 +0000",
        "content:encodedSnippet": "The latest CLion 2025.2 EAP build, 252.18003.25, includes one of the most requested features for embedded development: live watches. It allows you to monitor global variables in real time without stopping the debugger or the program’s execution. This feature is particularly useful for embedded developers working with time-sensitive protocols, such as Bluetooth, or with physical processes that cannot be interrupted.\nIf you want to try it out, download the EAP build for free from the link below, via Toolbox App, or as a snap package if you’re using Ubuntu.\nDOWNLOAD CLION 2025.2 EAP\nHow to use live watches\nThis feature is enabled by default in the debugger. To use it, Debug Servers must be enabled in Settings | Advanced Settings | Debugger.\n\nLive watches currently only work with the SEGGER J-Link and ST-LINK debug servers, or the generic one connected to SEGGER J-Link and ST-LINK debug probes. See the other current limitations below.\n\n\n\n\nOnce the Debug Servers setting is enabled:\nConfigure your debug server in Settings | Debugger | Debug Servers. \nSelect the required run/debug configuration.\nRun a debug session.\nSelect the Live Watches pane and add a variable to watch.\n\n\n\n\n\nThe variable will appear on the list.\n\n\n\n\nTo watch the changes in real time, untick the Stop button on the left. Otherwise, click Update to watch how the values change after the next iteration of the program execution. You can also configure a sampling period.\n\n                        \n\n\nYou can then perform the debugger actions, such as Step Over or Step Into, and observe how your variable values change.\nCurrent limitations\nThe following features are not yet supported, but we plan to add them in the 2025.2 release:\nSuggestions and autocompletion for variable names.\nThe ability to watch the values of structures, complex data types, and peripheral registries.\nSettings for data format, such as decimal, hex, oct, and binary.\nData history and the ability to export it in the CSV format.\nOther updates\nSkipping non-user code with Step Into: When using the Step Into action during debugging, you can now skip non-user code, such as library calls. The default stepping rules are pre-configured in Settings | Build, Execution, Deployment | Debugger | Stepping, and the IDE also reads configuration file types, such as .natstepfilter and .natjmc.\n\n\n\n\nBundled CMake 4.0.0: We’ve updated the bundled CMake version to v4.0.0, which removed compatibility with versions older than 3.5. For example, running a project with cmake_minimum_required(VERSION 3.28) in a CMakeLists.txt file now causes an error. However, you can use the CMAKE_POLICY_VERSION_MINIMUM variable to configure existing projects that are based on unsupported CMake versions (learn more about the variable).\nDOWNLOAD CLION 2025.2 EAP\nTry the features and share your feedback\nYour feedback is important in helping us refine new features, especially during the Early Access Program. We encourage you to try live watches and the other new features available in the latest EAP build. If you have any suggestions or run into any problems, please share them by submitting a ticket to our issue tracker or commenting below.",
        "dc:creator": "Oleg Zinovyev",
        "content": "The latest CLion 2025.2 EAP build, 252.18003.25, includes one of the most requested features for embedded development: live watches. It allows you to monitor global variables in real time without stopping the debugger or the program’s execution. This feature is particularly useful for embedded developers working with time-sensitive protocols, such as Bluetooth, or with physical [&#8230;]",
        "contentSnippet": "The latest CLion 2025.2 EAP build, 252.18003.25, includes one of the most requested features for embedded development: live watches. It allows you to monitor global variables in real time without stopping the debugger or the program’s execution. This feature is particularly useful for embedded developers working with time-sensitive protocols, such as Bluetooth, or with physical […]",
        "guid": "https://blog.jetbrains.com/?post_type=clion&p=570859",
        "categories": [
          "eap",
          "news",
          "debugger",
          "embedded",
          "live-watches"
        ],
        "isoDate": "2025-05-29T14:30:51.000Z"
      },
      {
        "creator": "Vaclav Pech",
        "title": "New Bug-Fix Releases Are Available for MPS – 2024.3.3, 2024.1.4, 2023.3.3, and 2023.2.3",
        "link": "https://blog.jetbrains.com/mps/2025/05/mps-2024-3-3-has-been-released/",
        "pubDate": "Tue, 27 May 2025 10:51:57 +0000",
        "content:encodedSnippet": "We’ve released updates for multiple major MPS versions that fix several additional issues.\nDOWNLOAD MPS 2024.3.3 and others\nBefore using an updated version of MPS, you should be warned about a change that might affect you. As a result of our work to fix an issue related to build plugin dependencies, the build language was made stricter in terms of how it handles dependencies. This may cause existing build scripts to fail during the generation phase if they violate the newly introduced constraints. You can read more details on this particular change in the corresponding section of the Migration Guide.\nCheck out what has changed in each particular version:\nDownload MPS 2024.3.3 here.\nhere.\nDownload MPS 2024.1.3 here.\nhere.\nDownload MPS 2023.3.3 here.\nhere.\nDownload MPS 2023.2.3 here.\nhere.\nYour JetBrains MPS team",
        "dc:creator": "Vaclav Pech",
        "content": "We’ve released updates for multiple major MPS versions that fix several additional issues. DOWNLOAD MPS 2024.3.3 and others Before using an updated version of MPS, you should be warned about a change that might affect you. As a result of our work to fix an issue related to build plugin dependencies, the build language was [&#8230;]",
        "contentSnippet": "We’ve released updates for multiple major MPS versions that fix several additional issues. DOWNLOAD MPS 2024.3.3 and others Before using an updated version of MPS, you should be warned about a change that might affect you. As a result of our work to fix an issue related to build plugin dependencies, the build language was […]",
        "guid": "https://blog.jetbrains.com/?post_type=mps&p=570329",
        "categories": [
          "releases",
          "release"
        ],
        "isoDate": "2025-05-27T10:51:57.000Z"
      },
      {
        "creator": "Lena Morozova",
        "title": "How Java Open-Source Projects Use IntelliJ IDEA: Real-World Examples – Part 1",
        "link": "https://blog.jetbrains.com/blog/2025/05/27/how-java-open-source-projects-use-intellij-idea-real-world-examples-part-1/",
        "pubDate": "Tue, 27 May 2025 10:50:00 +0000",
        "content:encodedSnippet": "At JetBrains, we build tools to help developers stay focused and productive, and we’re especially proud when those tools help power the open-source projects that developers around the world rely on every day. Shaping the direction of Java development, such projects contribute substantially to the vibrant Java ecosystem.\nThis two-part series highlights some of the most impressive open-source Java projects we support. From testing frameworks and HTML parsers to innovative web libraries and languages, each of these projects reflects the creativity and ingenuity of the Java community. In each case, JetBrains IDEs like IntelliJ IDEA help developers ship faster, work more confidently, and write better code.\n☕ Spring Framework\nThe world’s most popular Java framework.\nSpring needs little introduction. It’s the backbone of modern Java server-side development, with a strong focus on simplicity, productivity, and the developer experience. JetBrains shares those values, and the close collaboration between the Spring and JetBrains teams promotes synergies for server-side developers worldwide.\nFeedback from the Spring team helps ensure IntelliJ IDEA offers a seamless, intuitive experience for Spring developers – even as new features are introduced. Kotlin also continues to shape Spring’s direction: null-safety support introduced in Spring Framework 5 is evolving in version 7 with JSpecify annotations, benefiting both Java and Kotlin users.\n— Sébastien Deleuze, Spring Framework core committer\nThe Spring community is now focusing on Spring AI – an application framework that brings Spring’s principles of modularity and portability to the AI domain using familiar POJO (Plain Old Java Object) patterns, with support for both Java and Kotlin. The team also continues to invest in runtime efficiency through GraalVM native image support, Project Leyden JVM optimizations, and clever defaults in Spring Boot. Mature parts of the framework are evolving too, with features like client-side API versioning on the way.\n🕹️ Play Framework\nA high-performance, developer-friendly web framework for Scala and Java.\nThe Play Framework is trusted for a wide range of applications, including high-traffic news platforms and national tax systems. It focuses on scalability and simplicity and prioritizes the developer experience, offering built-in tooling, a reactive model, and a stateless architecture.\nWe primarily use IntelliJ IDEA for Play development, and it’s been fantastic. The Scala plugin offers first-class support for SBT and Scala, along with dedicated features for Play projects – like syntax highlighting and navigation for route files and Twirl templates. Scala 3 support is now very mature, and it’s clear that the JetBrains team truly cares about the Scala and Play Framework communities.\n— Matthias Kurz, Play Framework maintainer\nThe next major Play release, expected in mid-2025, focuses on steady, thoughtful improvements. Highlights include Gradle support, enhanced Kotlin compatibility, improved WebSockets, and better support for modern web standards and database migrations. The release will also complete the transition to the Jakarta namespace, ensure compatibility with Java 25 LTS, and include upgrades to Pekko and other core dependencies.\n🧩 Koin\nA simple and powerful dependency injection framework for Kotlin.\nKoin was created to make dependency injection in Kotlin simple, lightweight, and intuitive – especially for Android. Existing dependency injection tools were too complex and slow to compile, or they didn’t fully embrace Kotlin’s strengths. Inspired by Spring Boot and Kotlin’s expressive features, Koin introduced a clean DSL, smart defaults, and seamless integrations, providing intuitive dependency injection support.\nIntelliJ IDEA is my daily go-to tool – first for Java, and even more so for Kotlin thanks to its excellent end-to-end support. That experience inspired us to create the Koin plugin: a tool that brings visual feedback, real-time safety checks, and seamless navigation for Koin definitions right into the IDE.\n— Arnaud Giuliani, creator of Koin\nThe Koin team is actively working on version 4.1, which will bring enhanced support for Compose Multiplatform and KMP, integrated compatibility with Ktor 3.1, and a new set of Scope features. Looking ahead, version 4.2 is already in development, with a focus on deeper coroutine integration, a new Job Scheduler API, Kotlin RPC support, and further improvements to the Koin DSL.\n🔧 Micronaut\nA modern, lightweight framework built for fast startup and low memory use.\nMicronaut was created in 2018 by the core team behind the Groovy-based Grails framework, known for its strong focus on developer productivity. The team saw an opportunity to rethink how Java frameworks handle work traditionally done at runtime. By shifting more processing to the compile phase, Micronaut dramatically reduces memory usage and startup time while maintaining a smooth, productive developer experience.\nMicronaut supports Java, Kotlin, and Groovy – and IntelliJ IDEA offers first-class support for all three. Features like build delegation to Gradle or Maven, a built-in HTTP client, code coverage tools, and powerful debugging – including for GraalVM native images – make IntelliJ IDEA a great environment for developing and maintaining modern Micronaut applications.\n— Sergio del Amo, Micronaut Development Leadership Panel member\nMicronaut follows strict semantic versioning, reflecting its commitment to stability and modern development. The framework’s core mission remains unchanged: to deliver an excellent developer experience while minimizing memory usage and optimizing startup time, both of which have a direct impact on productivity.\n🔍 OpenGrok\nA fast, full-featured source code search and cross-referencing engine for large codebases.\nOpenGrok helps developers understand and navigate large, complex codebases across multiple languages and version control systems. The tool has evolved into a powerful, extensible search platform used by engineering teams worldwide.\nWe recently explained to a colleague why we use IntelliJ IDEA. It really helps us work more efficiently – for example, we can debug JSPs directly in a Tomcat instance running from the IDE, view runtime graphs, and use powerful refactoring tools.\n— Ľuboš Koščo and Vladimír Kotal, OpenGrok maintainers\nThe OpenGrok development team is currently focusing on boosting performance and stability, particularly for large datasets. This involves reducing the amount of indexing data to run OpenGrok efficiently in lightweight Docker containers and phasing out the JavaBeans serialization format. Looking further ahead, the team aims to improve support for binary file formats and explore the possibility of adding new analyzers to extend OpenGrok’s capabilities.\nStay tuned for Part 2, where we dive into more projects. In the meantime, join us on June 3–4 for IntelliJ IDEA Conf 2025, our free online event celebrating modern Java development. Whether you’re working on open source projects, building enterprise apps, or still learning the ropes, it’s a great opportunity to learn about best practices and find inspiration in how industry experts are building with IntelliJ IDEA.",
        "dc:creator": "Lena Morozova",
        "content": "At JetBrains, we build tools to help developers stay focused and productive, and we’re especially proud when those tools help power the open-source projects that developers around the world rely on every day. Shaping the direction of Java development, such projects contribute substantially to the vibrant Java ecosystem. This two-part series highlights some of the [&#8230;]",
        "contentSnippet": "At JetBrains, we build tools to help developers stay focused and productive, and we’re especially proud when those tools help power the open-source projects that developers around the world rely on every day. Shaping the direction of Java development, such projects contribute substantially to the vibrant Java ecosystem. This two-part series highlights some of the […]",
        "guid": "https://blog.jetbrains.com/?post_type=blog&p=570145",
        "categories": [
          "community",
          "idea",
          "community-support",
          "intellij-idea",
          "open-source-program",
          "oss-projects"
        ],
        "isoDate": "2025-05-27T10:50:00.000Z"
      },
      {
        "creator": "Kerry Beetge",
        "title": "Run Qodana Directly on Your Local or CI Machine Without Docker Containers",
        "link": "https://blog.jetbrains.com/qodana/2025/05/run-qodana-in-your-ci/",
        "pubDate": "Tue, 27 May 2025 10:17:14 +0000",
        "content:encodedSnippet": "Run Qodana without Docker containers.\n\n\n\n\nTable of Contents\n\nThe benefits of native mode\nHow to use native mode\nNative mode is in Early Access\nWant to know more? \n\nUntil now, Qodana linters have run exclusively in Docker containers. While this approach provided consistency and isolation, it also required significant effort for environment configuration, particularly for complex project setups or highly secured systems.\nUsers have had to rely on the bootstrap mechanism to set up custom environments inside the Docker container, often duplicating the configuration work already done for other builds. This redundancy could be cumbersome, which is why the Qodana team got together to create a solution. \nIntroducing native mode in Qodana\nTo address these challenges, we’ve introduced native mode. First available in version 2024.1 for qodana-dotnet and Windows OS, native mode is now supported across all Qodana linters and ready to use for configuration.\nStarting with version 2025.1, all Qodana linters besides third-party ones (such as qodana-cdnet and qodana-clang) can run directly on your local machines or CI environments without requiring Docker containers. \nThe benefits of native mode\nSeamless integration: Native mode allows you to run Qodana linters directly in your pre-configured environment, which is particularly beneficial for projects with non-trivial dependencies.\nReduced setup effort: By eliminating the need to configure environments within Docker containers, native mode simplifies the setup process and reduces redundant configuration work making it easier and faster to get started.\nFlexibility: While Docker remains a powerful option – especially for standardized setups – you now have the full flexibility to either set up your own Docker images using Qodana’s native mode or reuse images that already exist.\nHow to use native mode\nIf your project’s environment is already set up for compilation or testing, running Qodana in native mode can save you time and effort, making it an excellent choice for complex projects where Docker setups may not be ideal.\nIn this case, to launch Qodana in native mode, you need to use qodana-cli with the --ide argument.\nThe possible values for --ide are QDJVM, QDJVMC, QDPY, QDPYC, QDGO, QDJS, QDPHP, QDAND, QDANDC, QDNET. \nqodana-cli:\nqodana scan --ide QDJVM\nYou can run native mode on all common operating systems, including Linux, MacOS, and Windows, and in Github Actions:\njobs:\n  qodana:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n      pull-requests: write\n      checks: write\n    steps:\n      - name: 'Qodana Scan'\n        uses: JetBrains/qodana-action@v2024.2\n        with:\n\t\t\t\t  args: --ide,QDJVM\n\t\t\t\t  env:\n            QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }} \nView Native Mode Docs\nIf you require multiple linters for one project, we currently recommend running qodana scan multiple times and referencing separate Qodana config files per language via the –config argument.\nNative mode is in Early Access\nNative mode is currently in Early Access, which means it may not be reliable, may not work as intended, and may contain errors. We wanted to make this feature available as early as possible, based on the frequent user feedback we received, but we also want to fully make sure that its capabilities meet your needs and expectations.\nIf you run into any kind of problem, please file a ticket in YouTrack with the steps to reproduce it. This way we can make sure to address the issue in a timely manner.\nWant to know more? \nFor further information on how to run Qodana without Docker containers, make sure to check out the documentation. It has all the information you need, not just for using native mode but also for configuring it for your project. \nYou can also keep an eye out for Qodana updates by joining our community on X, LinkedIn, and Reddit. View the latest features here or get in touch with our solutions team to switch to Qodana with 25% off your first year of fees. \nTry Qodana",
        "dc:creator": "Kerry Beetge",
        "content": "Until now, Qodana linters have run exclusively in Docker containers. While this approach provided consistency and isolation, it also required significant effort for environment configuration, particularly for complex project setups or highly secured systems. Users have had to rely on the bootstrap mechanism to set up custom environments inside the Docker container, often duplicating the [&#8230;]",
        "contentSnippet": "Until now, Qodana linters have run exclusively in Docker containers. While this approach provided consistency and isolation, it also required significant effort for environment configuration, particularly for complex project setups or highly secured systems. Users have had to rely on the bootstrap mechanism to set up custom environments inside the Docker container, often duplicating the […]",
        "guid": "https://blog.jetbrains.com/?post_type=qodana&p=541167",
        "isoDate": "2025-05-27T10:17:14.000Z"
      }
    ]
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Javier De la Garza",
        "title": "Extension Manager updates in Visual Studio",
        "link": "https://devblogs.microsoft.com/visualstudio/extension-manager-updates-in-visual-studio/",
        "pubDate": "Mon, 02 Jun 2025 18:13:24 +0000",
        "content:encodedSnippet": "The latest updates in Visual Studio 2022 introduced features specifically designed to improve how you manage extensions. These updates offer tools that help you automate processes, provide detailed controls for configuration, and enhance the user interface to streamline your development workflows.\nSeamless auto updates\nVisual Studio now automatically triggers updates whenever you open the Extension Manager window. This ensures you are consistently working with the latest features and fixes without needing to manually initiate updates.\n\nInfobar notifications for applied updates\nAn Infobar will now appear when updates are applied, reminding you to restart Visual Studio. This ensures the updates take effect without requiring additional steps on your part.\nAuto update settings on the extension page\nSettings for auto updates have been integrated directly into the extension page, making it easier to access and configure them. You can quickly adjust preferences without navigating through multiple menus.\n\nFilter by pending changes\nA new “Pending” category has been added to highlight pending updates or modifications. This feature helps developers like you stay informed about changes that require attention..\n\nAdditional auto update settings in Tools > Options\nFor better accessibility, auto update settings are also available under **Tools > Options**. This provides an alternative way to manage your preferences in a centralized location.\n\nSimplified settings interface\nThe user interface for managing settings has been redesigned to reduce complexity. With fewer clicks and clearer options, configuring your environment is now more intuitive.\nExcluded extensions list\nAn excluded extensions list is now available, automatically populating with extensions you choose to exclude from automatic updates. This feature is especially useful for extensions critical to your workflow, where manual update control is preferred.\nConclusion\nThese enhancements in Visual Studio 2022 aim to make extension management more user-friendly and efficient. By automating frequent tasks and providing more granular control, these updates contribute to a streamlined development experience that increase your productivity!\nWe appreciate the feedback from our developer community, which plays a vital role in shaping these updates. Please continue to share your insights to help us improve Visual Studio with every release.\nThe post Extension Manager updates in Visual Studio appeared first on Visual Studio Blog.",
        "dc:creator": "Javier De la Garza",
        "comments": "https://devblogs.microsoft.com/visualstudio/extension-manager-updates-in-visual-studio/#respond",
        "content": "<p>The latest updates in Visual Studio 2022 introduced features specifically designed to improve how you manage extensions. These updates offer tools that help you automate processes, provide detailed controls for configuration, and enhance the user interface to streamline your development workflows. Seamless auto updates Visual Studio now automatically triggers updates whenever you open the Extension [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/extension-manager-updates-in-visual-studio/\">Extension Manager updates in Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "The latest updates in Visual Studio 2022 introduced features specifically designed to improve how you manage extensions. These updates offer tools that help you automate processes, provide detailed controls for configuration, and enhance the user interface to streamline your development workflows. Seamless auto updates Visual Studio now automatically triggers updates whenever you open the Extension […]\nThe post Extension Manager updates in Visual Studio appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=253400",
        "categories": [
          "Extensibility",
          "Visual Studio",
          "Extensions",
          "Updates",
          "visualstudio.extensibility"
        ],
        "isoDate": "2025-06-02T18:13:24.000Z"
      },
      {
        "creator": "Mads Kristensen",
        "title": "Improve the commands in your extensions",
        "link": "https://devblogs.microsoft.com/visualstudio/improve-the-commands-in-your-extensions/",
        "pubDate": "Wed, 28 May 2025 15:53:58 +0000",
        "content:encodedSnippet": "As Visual Studio extension authors, our goal is to create tools that empower developers across diverse environments. A key part of this mission involves ensuring that your extension commands remain accessible and consistent across all Visual Studio locales. In your VSSDK extensions, by adding the CanonicalName property to your commands in the .vsct file, you can achieve greater resilience and user satisfaction for your extension.\nAnd with a few simple tricks, you can make your command names a lot prettier as well.\nWhy add the CanonicalName property?\nWhen a Visual Studio extension supports multiple locales, the names of commands can vary based on localized resources. While this improves usability in specific languages, it can sometimes lead to inconsistencies or challenges in maintaining a stable reference to commands programmatically. For example, if a command’s name changes between locales, automation scripts, or even third-party integrations referencing that command may break.\nThe CanonicalName property solves this issue by providing a stable, locale-independent identifier for your commands. With this property:\nCommands are more predictable: Developers referencing your extension programmatically can rely on a fixed name across all locales.\nBetter integration: Tools and integrations can seamlessly reference commands without needing locale-specific handling.\nEnhanced user experience: End users benefit from consistent behavior and fewer issues caused by localization mismatches.\nStep-by-step guide to adding CanonicalName\nHere’s how you can add the CanonicalName property to your commands in the .vsct file of your Visual Studio extension:\n1. Locate Your .vsct File\nThe .vsct (Visual Studio Command Table) file defines the commands for your extension. It’s usually found in the root folder of your Visual Studio extension project.\n2. Add the CanonicalName Attribute to Commands\nWithin the .vsct file, commands are defined using the <Button>, <Combo> or <Menu> elements. To add the CanonicalName property, include it as a child inside the <Strings> element. Here’s an example:\n<Button guid=\"guidMyExtensionCmdSet\" id=\"cmdidMyCommand\" priority=\"0x0100\" type=\"Button\">\r\n  <Parent guid=\"guidMyExtensionCmdSet\" id=\"MyMenuGroup\" />\r\n  <Icon guid=\"guidImages\" id=\"bmpPic1\" />\r\n  <Strings>\r\n    <ButtonText>My Command</ButtonText>\r\n    <CanonicalName>.MyExtension.MyCommandName</CanonicalName>\r\n  </Strings>\r\n</Button>\r\n\n3. Ensure uniqueness of CanonicalName\nThe value you assign to CanonicalName must be unique across all commands in your extension. Use meaningful and descriptive identifiers that reflect the command’s purpose.\nBest practices for using CanonicalName\nUse PascalCase: Follow consistent naming conventions like PascalCase for the CanonicalName values.\nKeep it descriptive: Make the names meaningful to help developers understand the purpose of the command without additional context.\nAvoid localization: The CanonicalName should always remain in English and free from localization to ensure consistency.\nStart with a period: This ensures that nothing is added in front of the command name. This is to avoid command names that look like OtherContextMenus.MyExtension.MyCommandName. The leading period is stripped automatically by VS, so it won’t show up.\nLead with the extension name: This is to make it very clear that this command is provided by your extension. It also makes it easy for users to search for all commands provided by your extension.\nWe’ve updated the XML Schema file\nTo reflect this best practice of providing the CanonicalName property with all commands, we’ve updated the schema file to provide in-editor warnings when it is missing. It’s just a warning and it doesn’t affect the VSCT Compiler which will continue to compile the command table as it always has. This is simply a change to make it easier for you to remember to add the property. It will be included in a future update to Visual Studio.\nConclusion\nAdding the CanonicalName property to your commands in the .vsct file is a small but impactful change that enhances the resilience and usability of your Visual Studio extensions. By ensuring consistent references across all locales, you’ll provide a smoother experience for developers and maintain a higher-quality extension.\nTake a moment to review your extension’s .vsct file and implement this property where necessary. It’s a straightforward step toward making your tools even more powerful and user-friendly.\nHappy coding!\nThe post Improve the commands in your extensions appeared first on Visual Studio Blog.",
        "dc:creator": "Mads Kristensen",
        "comments": "https://devblogs.microsoft.com/visualstudio/improve-the-commands-in-your-extensions/#respond",
        "content": "<p>As Visual Studio extension authors, our goal is to create tools that empower developers across diverse environments. A key part of this mission involves ensuring that your extension commands remain accessible and consistent across all Visual Studio locales. In your VSSDK extensions, by adding the CanonicalName property to your commands in the .vsct file, you [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/improve-the-commands-in-your-extensions/\">Improve the commands in your extensions</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "As Visual Studio extension authors, our goal is to create tools that empower developers across diverse environments. A key part of this mission involves ensuring that your extension commands remain accessible and consistent across all Visual Studio locales. In your VSSDK extensions, by adding the CanonicalName property to your commands in the .vsct file, you […]\nThe post Improve the commands in your extensions appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=253374",
        "categories": [
          "Extensibility",
          "Reliability",
          "Visual Studio",
          "Extensions"
        ],
        "isoDate": "2025-05-28T15:53:58.000Z"
      },
      {
        "creator": "Tina Schrepfer (LI)",
        "title": "VisualStudio.Extensibility: Editor classification and updates to user prompt",
        "link": "https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-editor-classification-and-updates-to-user-prompt/",
        "pubDate": "Tue, 27 May 2025 16:00:42 +0000",
        "content:encodedSnippet": "We continue to invest in the VisualStudio.Extensibility SDK to allow users like you to create extensions that run faster and smoother than ever before! VisualStudio.Extensibility helps you build extensions that run outside the main Visual Studio IDE process for improved performance, reliability, and installation without restarting Visual Studio. Additional benefits include a sleek and intuitive .NET 8-based API and comprehensive, well-maintained documentation to help you develop amazing extensions faster than ever before.\nGet Started with VisualStudio.Extensibility\n\nFor the latest up-to-date docs and installation instructions, visit https://aka.ms/VisualStudio.Extensibility. We encourage you to report bugs and suggest features via the issue tracker on our GitHub repo, where you can also find extension samples to help you get started. We have also launched a new video series on Visual Studio Toolbox to provide a more detailed tour of our samples. Check out the series here!\nWhat’s new for VisualStudio.Extensibility for 17.14?\nOur 17.14 release of VisualStudio.Extensibility includes the following features:\nText classification support\nUpdates to the ShowPromptAsync API\nThis release also includes a previously mentioned change regarding .NET runtime management requirements. VisualStudio.Extensibility extensions are executed on a separate .NET runtime host, unlike VSSDK extensions which run in the same process as devenv.exe, using the .NET Framework runtime. Since VisualStudio.Extensibility extensions operate on .NET, we must adhere to the runtime servicing lifetime of .NET. Consequently, the VisualStudio.Extensibility platform will be regularly updated to advance to newer versions of .NET LTS. For more information on how this affects you as an extension developer or consumer, please refer to our documentation here.\nColor text in files with classification support\nIn Visual Studio 17.13, we added support for taggers in the editor, allowing advanced functionalities such as custom code lens providers. This enhancement laid the groundwork for the text classification feature we are introducing in 17.14. Text classification facilitates custom text coloring within an opened file, commonly referred to as semantic and syntactic colorization. The following snippet demonstrates the creation of classification tags, which are fundamental to implementing editor classification. Please note that the example provided is a very simplistic approach and should not be used without further refinement. For a more comprehensive guide on writing a classification extension, please refer to our documentation and sample materials.\nprivate async Task CreateTagsAsync(ITextDocumentSnapshot document)\r\n{\r\n   List<TaggedTrackingTextRange<ClassificationTag>> tags = new();\r\n   foreach (var line in document.Lines)\r\n   {\r\n      var match = LineRegex.Match(line.Text.CopyToString());\r\n\r\n      if (match.Success)\r\n      {\r\n         foreach (Capture capture in match.Groups[FieldTextMatchName].Captures)\r\n         {\r\n            tags.Add(new(\r\nnew(document, line.Text.Start + capture.Index, capture.Length, TextRangeTrackingMode.ExtendNone),\r\nnew(ClassificationType.KnownValues.String)));\r\n         }\r\n      }\r\n   }\r\n\r\n   await this.UpdateTagsAsync(\r\n      updatedRanges: [new(document, 0, document.Length)],\r\n      tags,\r\n      CancellationToken.None);\r\n}\r\n\nDisplay icons and prompt for input with an enhanced ShowPromptAsync API\nWe routinely assess suggestion tickets that track requests for new APIs to be integrated into VisualStudio.Extensibility. Numerous factors influence our decision on which features to prioritize, including the complexity and cost of implementation. In version 17.14, we are pleased to announce that we have addressed a community-requested feature by introducing icon support in our ShowPromptAsync API. Furthermore, we have added the capability to provide user-input prompt. Below is a code snippet demonstrating how to configure a user prompt with custom icons, titles, messages, and options. For more detailed information, please refer to our documentation.\n// Show a prompt that accepts string input from the user, with a default value, custom title and custom icon.\r\n\r\nstring? feedback = await shell.ShowPromptAsync(\r\n   $\"Thank you for configuring {projectName}. Do you have any feedback?\",\r\n   new InputPromptOptions\r\n   {\r\n      DefaultText = feedbackPrompt,\r\n      Icon = ImageMoniker.KnownValues.Feedback,\r\n      Title = Title,\r\n   },\r\n   cancellationToken);\r\n\r\nthis.logger.TraceInformation($\"Feedback received: {feedback}\");\r\n\nWe want to hear from you!\nWe appreciate the time you’ve spent reporting issues/suggestions and hope you continue to give us feedback when using Visual Studio on what you like and what we can improve. Your feedback is critical to help us make Visual Studio the best tool it can be! You can share feedback with us via Developer Community: report any bugs or issues via report a problem and share your suggestions for new features or improvements to existing ones.\nStay connected with the Visual Studio team by following us on YouTube, Twitter, LinkedIn, Twitch and on Microsoft Learn.\nThe post VisualStudio.Extensibility: Editor classification and updates to user prompt appeared first on Visual Studio Blog.",
        "dc:creator": "Tina Schrepfer (LI)",
        "comments": "https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-editor-classification-and-updates-to-user-prompt/#comments",
        "content": "<p>We continue to invest in the VisualStudio.Extensibility SDK to allow users like you to create extensions that run faster and smoother than ever before! VisualStudio.Extensibility helps you build extensions that run outside the main Visual Studio IDE process for improved performance, reliability, and installation without restarting Visual Studio. Additional benefits include a sleek and intuitive [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-editor-classification-and-updates-to-user-prompt/\">VisualStudio.Extensibility: Editor classification and updates to user prompt</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "We continue to invest in the VisualStudio.Extensibility SDK to allow users like you to create extensions that run faster and smoother than ever before! VisualStudio.Extensibility helps you build extensions that run outside the main Visual Studio IDE process for improved performance, reliability, and installation without restarting Visual Studio. Additional benefits include a sleek and intuitive […]\nThe post VisualStudio.Extensibility: Editor classification and updates to user prompt appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=253359",
        "categories": [
          "Extensibility",
          "Productivity",
          "Visual Studio",
          "Extensions",
          "visualstudio.extensibility"
        ],
        "isoDate": "2025-05-27T16:00:42.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "\r\n                            Jay Howe,Jongmin Baek\r\n            \t\t\t",
        "title": "How we brought multimedia search to Dropbox Dash",
        "link": "https://dropbox.tech/infrastructure/multimedia-search-dropbox-dash-evolution",
        "pubDate": "Thu, 29 May 2025 10:30:00 -0700",
        "content:encodedSnippet": "Knowledge workers routinely lose valuable time trying to find that thing—the right images, videos, documents, or audio files—across their dozens of apps and essential work tools. When we started building Dropbox Dash, our universal search and knowledge management product, we knew it had to do more than just speed up search. It also needed to scale beyond text. Because often, the challenge isn’t just finding a file—it’s finding what’s inside that file. And that gets tricky when things aren’t labeled clearly, your team’s folder structure breaks down, or you just can’t remember where you saved what you need.\nSearching for multimedia content poses unique challenges. Images, for example, often come with cryptic names like IMG_6798 by default, and teams can quickly accumulate thousands of these unlabeled assets. Unlike documents, which usually contain metadata or readable content to help with discovery, media files frequently lack that context and require manual review. On top of that, they demand heavier compute resources and smarter ranking systems to deliver relevant results at speed.\nSupporting fast, accurate media search in Dash wasn’t a matter of layering features on top—it required fundamental changes across our infrastructure. We had to rethink how we indexed and ranked non-text files, how we rendered visual previews, and how we hydrated and surfaced metadata. We also had to reevaluate traditional document-search assumptions about relevance, latency, and even UI presentation.\nOur multimedia retrieval features were built to solve these exact problems, allowing users to find images, video, and audio just as easily as they find documents. What follows is a behind-the-scenes look at the engineering that made this possible: what we built, what we learned, and how we delivered a system that makes media as searchable as text.\n\r\n\r\n \r\n\r\n@font-face {\r\nfont-family: 'AtlasGrotesk';\r\nsrc: url('https://cdn.prod.website-files.com/65dcd70b48edc3a7b446950e/65dce019c63112e617513c94_AtlasGrotesk-Medium-Web-vfl38XiTL.woff2') format('woff2');\r\nfont-weight: 500;\r\nfont-style: normal;\r\nfont-display: swap;\r\n}\r\n\r\n@font-face {\r\nfont-family: 'AtlasGrotesk';\r\nsrc: url('https://cdn.prod.website-files.com/65dcd70b48edc3a7b446950e/65dce019711b648fd1ccd24a_AtlasGrotesk-Regular-Web-vflk7bxjs.woff2') format('woff2');\r\nfont-weight: 400;\r\nfont-style: normal;\r\nfont-display: swap;\r\n}\r\n.xf-content-height {margin: 0;}\r\n#cta { font-family: AtlasGrotesk,sans-serif; font-size: .900rem; text-decoration: none; background: #f7f5f2; line-height: 1.69; box-sizing: border-box;}\r\n#cta-box { padding: 15px 20px 15px 20px; }\r\n#cta-hed {font-weight: 500;}\r\n#cta-indent {border-left: 5px solid #1e1919; padding-left:20px;}\r\n#cta a:link, #cta a:visited  {text-decoration: none;}\r\n#cta p { margin: 5px 0px 0px 0px; }\r\n\r\n.dr-theme-dark #cta {background: #000;}\r\n.dr-theme-dark #cta-box {border: 1px solid; border-bottom: 0;}\r\n.dr-theme-dark #cta-indent {border-left: 5px solid #f7f5f2;}\r\n.dr-theme-dark .button {background: #000;}\r\n\r\n.button {\r\n    background-color: #1e1919;\r\n    color:  #f7f5f2;\r\n    height: 2.5rem;\r\n    padding: 10px 5px 10px 20px;\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n    line-height: 1.2;\r\n    transition: all .3s;\r\n}\r\n\r\n.button:hover { background-color: #0061ff; }\r\n\r\nimg {vertical-align: middle; padding: 0px 1px 2px 0px;}\r\n\r\n.c17-plain-html {margin-bottom: 50px}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n Dropbox Dash: Find anything. Protect everything.\n\r\n\r\nFind, organize, and protect your work with Dropbox Dash. Now with advanced search for video and images—plus generative AI capabilities across even more connected apps.\n\r\n\r\n\r\n\r\n\r\n\nSee what's new →\n\r\n\r\n\r\n\n\n    \n\n\n\n    \n\n\n\n\r\n\r\n    \nChallenges in supporting multimedia search\n\r\n\r\n\n\nSupporting search for multimedia—images, video, and audio—introduces a distinct set of technical hurdles. These files require significantly more processing power, have fewer textual cues for ranking, and often lack meaningful metadata. Delivering fast, relevant results means handling large file sizes efficiently, identifying new relevance signals, and optimizing how results are rendered for user review.\nThat’s why our universal search solution had to support seamless browsing, filtering, and previewing of media—right inside Dash. Scaling search for this content meant facing higher storage and compute costs, tighter latency requirements, and adapting systems originally built for text-based retrieval. To understand what makes media search tricky, let’s break down some key considerations.\nStorage cost\nMedia files are significantly larger than typical documents. On average, image files are about 3X larger, and video files are roughly 13X larger than non-media files in our system. These size differences directly increase storage demands and costs.\nCompute cost\nMultimedia files, such as images and videos, require more intensive processing to extract features both due to their larger size and the complexity of the features. Unlike text documents, we also generate previews of different resolutions for the images and videos, thereby significantly increasing the compute demands in our system.\nRelevance\nDash operates a multi-phase retrieval and ranking scheme, which was previously trained and optimized for textual content. Retrieving and ranking multimedia content requires having indexed any new multimedia-specific signals, formulating a query plan that leverages these signals, and handling any corner cases to avoid poorly ranked results.\nResponsiveness\nServing multimedia content introduces new latency challenges that are not present with text-based documents. We need previews for the multimedia search results to be meaningful, and we need them in multiple resolutions, including high-res formats, for a rich product experience. The larger resolutions add to the storage and compute costs.\nOnly a small fraction of the indexed files are actually viewed during search interactions. As a result, precomputing previews at multiple resolutions for all media files would be wasteful and unnecessary. To balance responsiveness with resource efficiency, we generate previews on demand during the read path rather than upfront. This minimizes upfront compute and storage costs but introduces new latency concerns during user interactions, since we want to generate previews quickly to have a snappy user experience. \nWith these challenges in mind, we designed a solution that integrates scalable infrastructure, smarter content understanding, and a preview system optimized for speed and accuracy.\n\r\n\r\n    \nBuilding a multimedia search solution\n\r\n\r\n\n\nTo deliver a responsive and scalable experience in Dash, we had to rebuild key parts of our infrastructure to support search that’s as smart and seamless for photos and videos as it is for documents. This work spans multiple layers of the stack, and it wasn’t pulled off successfully without trial and error. \nWe began by indexing lightweight metadata—pulled from media blobs (the raw files like images, videos, or audio)—to keep compute costs low. We extended our relevance models to handle location-aware queries and fuzzy file naming, and we optimized our preview generation pipeline to balance latency with cost. Along the way, we made frontend and backend updates to ensure media renders quickly and consistently across devices. The result is a robust multimedia search experience powered by smart metadata, just-in-time previews, and a UI that helps users find the right visual asset fast. Let’s get into how we tackled it.\nIndexing media files by metadata\nTo keep the compute costs low, we begin by indexing media files using available metadata, which is significantly cheaper to process than analyzing the full contents of media like images or videos. For example, we extract features such as file path, title, and EXIF. These metadata provide a lightweight foundation that enables basic search functionality with minimal processing overhead.\nAs our capabilities evolve, we plan to build on this metadata-first approach by selectively incorporating deeper content analysis—such as semantic embedding and/or OCR—striking a balance between accuracy and cost.\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/may/diagrams/Diagram%201.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/may/diagrams/Diagram%201.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"2880\"\r\n             data-sly-attribute.height=\"1720\"\r\n             data-aem-asset-id=\"babd6650-08ca-4ef1-80d4-d419bdb9f46d:Diagram 1.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/may/diagrams/Diagram%201.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/may/diagrams/Diagram%201.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"2880\"\r\n             data-sly-attribute.height=\"1720\"\r\n             data-aem-asset-id=\"babd6650-08ca-4ef1-80d4-d419bdb9f46d:Diagram 1.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \r\n        \r\n    \r\n\nTo generate metadata features at scale, we leveraged Riviera, our internal compute framework that already powers Dropbox Search. Riviera processes tens of petabytes of data daily and includes mature business logic for metadata extraction. By reusing it, we benefited from proven scalability and consistency with existing Dropbox search infrastructure.\nBackfilling the index\nPrior to this initiative, we avoided downloading or storing raw media blobs in order to reduce storage and compute costs. As a result, our existing search index lacked the necessary features to support rich, media-specific search experiences. To address this gap, we added support for ingesting multimedia blob content to compute the required features. We retain the raw content for preview generation and to compute future features.\nWhere possible, we download previews provided by third-party applications. These externally sourced previews are especially useful for design files like Canva, where we’re unable to generate our own. Using them also helps us reduce compute costs.\nStorage optimizations\nDash optimizes the file sizes and MIME types ingested to balance storage cost and file availability. We currently ingest about 97% of media files and are working to address the remaining gaps with smarter lifecycle management techniques.\nRetrieving media files by metadata\nWhen a user searches for media, we configure the query to match their input against the metadata features extracted during indexing. This includes fields like filenames, file paths, and location data. To enhance location-based search, we also apply custom query logic for interpreting geographic references.\nInternally, we index a GPS location as a chain of IDs corresponding to the geographical hierarchy. For instance, we can look up the GPS coordinates of a photo to be from San Francisco in a process known as “reverse geocoding.” Then, we would build a chain of IDs corresponding to San Francisco, California, and the United States, respectively, and place these IDs in the index for the photo. This allows us to retrieve the photo when the user wants to search for a photo taken in San Francisco, California or the entire United States, respectively.\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/may/diagrams/Diagram%202.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/may/diagrams/Diagram%202.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"2880\"\r\n             data-sly-attribute.height=\"2160\"\r\n             data-aem-asset-id=\"e6f24ad7-1e52-4c71-97d5-6d0690fdf736:Diagram 2.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/may/diagrams/Diagram%202.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/may/diagrams/Diagram%202.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"2880\"\r\n             data-sly-attribute.height=\"2160\"\r\n             data-aem-asset-id=\"e6f24ad7-1e52-4c71-97d5-6d0690fdf736:Diagram 2.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \r\n        \r\n    \r\n\nAt query time, we identify substrings of the query that may potentially be geographical locations, and then we determine whether they map to a valid location ID. In practice, because the number of known geographical locations has a manageably small cardinality, we retrieve the entire mapping upon the service startup and cache it.\nLastly, in the course of building multimedia search, we realized that many multimedia files are named in particular ways. Many of them are files in the filesystem, e.g. PhotoShoot-Revised1234.jpg. To support better matching, we added logic to tokenize camel case, hyphenated strings, and numeric suffixes during both indexing and retrieval.\nPreview and metadata hydration at retrieval time\nOur system ingests data at a rate that’s approximately three orders of magnitude higher than the query rate. This disparity makes it prohibitively expensive to generate and store previews for all multimedia files during ingestion, both in terms of compute and storage. To address this, we adopted a just-in-time approach, where previews are generated at query time. This strategy significantly reduces upfront costs while still supporting a responsive user experience.\nAs part of our storage optimization efforts, we considered precomputing previews during ingestion to enable deletion of the raw content afterward. However, we ultimately decided against this approach for two key reasons. First, managing the lifecycle of these additional preview artifacts would introduce significant code complexity. Second, retaining the raw content ensures future flexibility, allowing us to compute new features later without having to re-ingest the original files.\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/may/diagrams/Diagram%203.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/may/diagrams/Diagram%203.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"2880\"\r\n             data-sly-attribute.height=\"1480\"\r\n             data-aem-asset-id=\"6c969a4b-f9cb-42d5-b360-d3fdfac38fbd:Diagram 3.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/may/diagrams/Diagram%203.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/may/diagrams/Diagram%203.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"2880\"\r\n             data-sly-attribute.height=\"1480\"\r\n             data-aem-asset-id=\"6c969a4b-f9cb-42d5-b360-d3fdfac38fbd:Diagram 3.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \r\n        \r\n    \r\n\nTo power the just-in-time approach, we rely on an internal previews service built on top of Riviera, a framework originally developed for Dropbox Search. The previews service is designed to be fast, scalable, and efficient. It incorporates intelligent caching strategies, storing previews for up to 30 days. This allows us to serve previews quickly when needed without repeatedly generating them for every request.\nDuring a search, we generate preview URLs for the relevant results, which are then passed to the frontend. The frontend fetches these URLs and displays the corresponding previews directly to the user. By reusing both the Riviera framework and the previews service, we also create the opportunity to reuse frontend components across both Dropbox and Dash. This ensures a consistent product experience across both platforms.\nTo improve latencies, we create the preview URLs in parallel with other search operations such as ranking the results, performing permission checks, and fetching additional metadata needed to render complete search results. By handling these tasks in parallel, we minimize the overall response time and ensure a responsive user experience.\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/may/diagrams/Diagram%204%20(1).png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/may/diagrams/Diagram%204%20(1).png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"2880\"\r\n             data-sly-attribute.height=\"1920\"\r\n             data-aem-asset-id=\"98fdf5c5-b939-4fb2-935e-5f30309574d1:Diagram 4 (1).png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/may/diagrams/Diagram%204%20(1).png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/may/diagrams/Diagram%204%20(1).png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"2880\"\r\n             data-sly-attribute.height=\"1920\"\r\n             data-aem-asset-id=\"98fdf5c5-b939-4fb2-935e-5f30309574d1:Diagram 4 (1).png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \r\n        \r\n    \r\n\nSometimes, a user may want to enlarge a preview and view additional metadata, such as camera information. However, this is a less common operation, and sending all the extra metadata with every search result would be inefficient. When users request more detail—such as camera metadata or timestamp—we fetch it on-demand via a separate endpoint. This keeps the initial search response lean while still supporting deeper inspection when needed.\nUser experience\nSearching through images and videos is a different experience than searching documents, especially since media files often have names like “IMG_1234” that don’t tell you much. That’s why fast, visual previews are essential—they help users quickly decide which file is relevant without needing to open each one.\nWe’ve designed our preview system to load quickly and adapt to different shapes and sizes of media, whether an image is tall, wide, or an unusual shape. The layout avoids awkward cropping and keeps things easy to browse. When a user wants a closer look, they can open a full-size preview that also shows helpful EXIF details like when the photo was taken, what kind of camera was used, and where it was captured.\nEverything is built to feel smooth and fast, whether you’re using Dash on a phone or computer. The interface stays out of the way and puts the focus on the content, making it easy to browse quickly or dive into a specific file when needed.\n\r\n\r\n    \nLessons learned and future direction\n\r\n\r\n\n\nBuilding this vertical solution required collaboration across multiple teams. Initially, the strong interdependencies between teams risked making the workstream highly sequential. To address this, we defined clear API boundaries between systems, which allowed teams to work in parallel. This separation of concerns enabled faster execution and ensured that all components integrated seamlessly toward the end.\nA significant portion of our development time was spent getting the preview experience to work end-to-end. It wasn’t immediately clear how to architect the entire system. One of the key challenges was building a new user experience for displaying media results. We accelerated UX development by temporarily proxying results from Dropbox Search through a custom endpoint. Although Dropbox Search did not include all third-party content ingested into Dash, it provided enough data to design and test the user interface. This strategy bought us valuable time to develop the backend infrastructure and complete the media backfill.\nLeveraging the existing Dropbox infrastructure for previews saved us considerable development time and resulted in cleaner, more maintainable code. To monitor performance, we added metrics to track preview generation latencies. These metrics helped us identify bottlenecks and areas needing optimization. With additional instrumentation and a more aggressive use of concurrency, we were able to substantially reduce latency and improve the responsiveness of the system.\nLooking ahead, we have plans to make multimedia search even smarter by incorporating advanced capabilities such as semantic embeddings and optical character recognition (OCR). These enhancements will bring new technical challenges, and we expect to continue making thoughtful trade-offs between cost and user value as we expand the system’s functionality.\nSupporting multimedia search in Dash meant bridging the gap between how teams create and consume visual content and how our infrastructure finds and ranks that content at scale. From metadata-first indexing to just-in-time previews and geolocation-aware queries, each technical decision reflected a balance of cost, performance, and product value. \nThe addition of multimedia search marks a significant step forward in our journey to build a truly universal search tool. The result is a system that brings the same speed and intelligence to media as it does to text. As we continue to improve Dash, our focus remains on unblocking key customer hurdles so they can spend less time searching and more time creating.\nSpecial thanks to Edward Cheung, Eric Cunningham, Westin Lohne, and Noorain Noorani who also contributed to this story.\n~ ~ ~\nIf building innovative products, experiences, and infrastructure excites you, come build the future with us! Visit dropbox.com/jobs to see our open roles, and follow @LifeInsideDropbox on Instagram and Facebook to see what it's like to create a more enlightened way of working.",
        "dc:creator": "\r\n                            Jay Howe,Jongmin Baek\r\n            \t\t\t",
        "content": "null",
        "contentSnippet": "null",
        "guid": "https://dropbox.tech/infrastructure/multimedia-search-dropbox-dash-evolution",
        "categories": [
          "Search",
          "AI",
          "Dash",
          "Infrastructure",
          "Multimedia"
        ],
        "isoDate": "2025-05-29T17:30:00.000Z"
      }
    ]
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": [
      {
        "creator": "sunyzero",
        "title": "체외충격파 시술에 대해",
        "link": "http://sunyzero.tistory.com/314",
        "pubDate": "Sat, 31 May 2025 18:54:59 +0900",
        "author": "sunyzero",
        "comments": "http://sunyzero.tistory.com/314#entry314comment",
        "content": "<p data-ke-size=\"size16\">수영은 매우 안전한 운동지만, 그래도 오래 하다보면 자잘한 부상이 생기기 마련이다. 주로 어깨, 발꿈치, 가슴(흉통), 무릎, 발목을 주로 다치는데, 이 중에서 어깨나 무릎, 발목의 부상의 경우에는 체외충격파 시술이 상당히 좋은 듯 하다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">수영을 하면서 가장 심각한 부상은 회전근개를 다쳤을 때였다. 배영과 접영을 열심히 하다가 어느 순간 통증이 있었는데 무식하게 기록을 더 줄여보겠다고 열심히 했었다. 결국 한쪽 어깨가 컵을 떨어뜨릴 정도로 악화된 상태로 병원에 갔다. 그 외에 한의원이나 여러가지도 있었는데, 솔직히 인대가 다친 것에는 한의원이 전혀 도움이 되지 않았다. 가장 좋은 치료는 재활의학과에서 놔주는 신경차단술 주사 치료와 체외충격파였다. 특히 체외충격파는 부위에 따라 5~10회 정도 받는데, 1주일에 1~2회씩 받았다. 시술 받을 때는 아프기만 하고 별다른 효과가 없어 보였는데, 3개월쯤 지나면 갑자기 좋아지는 것이 느껴졌고, 6개월쯤 지났을 때는 거의 완치에 가까울 정도로 통증이 사라졌다. 의사가 초음파로 치료 전후를 보여줬는데, 치료 후에는 염증이나 부종이 완전히 사라졌음을 알 수 있었다. 관절의 가동범위도 통증이 사라져서 그런지 매우 좋아졌다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">체외충격파 시술의 강도</h2>\n<p data-ke-size=\"size16\">체외충격파 시술을 받을 때는 강도를 무조건 강하게 하기보다는 약하게 하는 것도 괜찮다. 괜히 강하게 하는게 좋다고 생각해서 고통을 참으면서 시술받으면 나중에 오히려 몸살이 난다. 따라서 너무 아픈 것 같다면 치료사에게 강도를 낮춰달라고 하는게 좋다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">체외충격파는 무조건 집중형</h2>\n<p data-ke-size=\"size16\">체외충격파는 집중형과 방사형이 있는데, 대부분은 집중형을 사용하지만 발뒷꿈치에는 방사형을 많이 사용하는 것 같다. 하지만 솔직히 방사형은 효과가 별로였다. 나중에 효과를 못보니까 의사도 집중형으로 바꿔서 치료하자고 하였다. 물론 시술시 고통은 집중형이 훨씬 더 강하다. 방사형은 고통이라기보단 뭐로 긁는듯한 느낌이라 통증의 종류가 좀 다르다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"스크린샷 2025-05-31 184621.png\" data-origin-width=\"1001\" data-origin-height=\"680\"><span data-url=\"https://blog.kakaocdn.net/dn/6qFNt/btsOkUq7uib/KizTsveZIWjya4PRmuQG01/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/6qFNt/btsOkUq7uib/KizTsveZIWjya4PRmuQG01/img.png\" data-alt=\"체외충격파 집중형 vs 방사형\"><img src=\"https://blog.kakaocdn.net/dn/6qFNt/btsOkUq7uib/KizTsveZIWjya4PRmuQG01/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F6qFNt%2FbtsOkUq7uib%2FKizTsveZIWjya4PRmuQG01%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1001\" height=\"680\" data-filename=\"스크린샷 2025-05-31 184621.png\" data-origin-width=\"1001\" data-origin-height=\"680\"/></span><figcaption>체외충격파 집중형 vs 방사형</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">검색해보면 근육통쪽에는 방사형이 더 좋다고 하는데, 근육통 때문에 체외충격파를 할 정도는 겪어본 적이 없어서 어떤 경우에 주로 사용하는지는 모르겠다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">결론</h2>\n<p data-ke-size=\"size16\">인대나 관절쪽이 다쳤을때 체외충격파 시술은 고통은 있지만 매우 효과적이며, 최소 5~10회정도를 추천한다. 개인적 경험이지만 정형외과보다는 재활의학과쪽이 좀 더 세밀하게 진료를 봐준다. 그리고 효과는 3개월 이후부터 서서히 발생하며, 6개월 정도 지나면 완치에 가깝게 통증이 사라지는 것 같다. 달리 말하면 꾹 참고 시술을 1개월만 받으면(보통 주2회니까 1개월이면 8회 시술), 3개월 이후부터는 운동을 해도 아프지 않을 것이다.</p>",
        "contentSnippet": "수영은 매우 안전한 운동지만, 그래도 오래 하다보면 자잘한 부상이 생기기 마련이다. 주로 어깨, 발꿈치, 가슴(흉통), 무릎, 발목을 주로 다치는데, 이 중에서 어깨나 무릎, 발목의 부상의 경우에는 체외충격파 시술이 상당히 좋은 듯 하다.\n \n수영을 하면서 가장 심각한 부상은 회전근개를 다쳤을 때였다. 배영과 접영을 열심히 하다가 어느 순간 통증이 있었는데 무식하게 기록을 더 줄여보겠다고 열심히 했었다. 결국 한쪽 어깨가 컵을 떨어뜨릴 정도로 악화된 상태로 병원에 갔다. 그 외에 한의원이나 여러가지도 있었는데, 솔직히 인대가 다친 것에는 한의원이 전혀 도움이 되지 않았다. 가장 좋은 치료는 재활의학과에서 놔주는 신경차단술 주사 치료와 체외충격파였다. 특히 체외충격파는 부위에 따라 5~10회 정도 받는데, 1주일에 1~2회씩 받았다. 시술 받을 때는 아프기만 하고 별다른 효과가 없어 보였는데, 3개월쯤 지나면 갑자기 좋아지는 것이 느껴졌고, 6개월쯤 지났을 때는 거의 완치에 가까울 정도로 통증이 사라졌다. 의사가 초음파로 치료 전후를 보여줬는데, 치료 후에는 염증이나 부종이 완전히 사라졌음을 알 수 있었다. 관절의 가동범위도 통증이 사라져서 그런지 매우 좋아졌다.\n \n체외충격파 시술의 강도\n체외충격파 시술을 받을 때는 강도를 무조건 강하게 하기보다는 약하게 하는 것도 괜찮다. 괜히 강하게 하는게 좋다고 생각해서 고통을 참으면서 시술받으면 나중에 오히려 몸살이 난다. 따라서 너무 아픈 것 같다면 치료사에게 강도를 낮춰달라고 하는게 좋다.\n \n체외충격파는 무조건 집중형\n체외충격파는 집중형과 방사형이 있는데, 대부분은 집중형을 사용하지만 발뒷꿈치에는 방사형을 많이 사용하는 것 같다. 하지만 솔직히 방사형은 효과가 별로였다. 나중에 효과를 못보니까 의사도 집중형으로 바꿔서 치료하자고 하였다. 물론 시술시 고통은 집중형이 훨씬 더 강하다. 방사형은 고통이라기보단 뭐로 긁는듯한 느낌이라 통증의 종류가 좀 다르다.\n체외충격파 집중형 vs 방사형\n\n\n검색해보면 근육통쪽에는 방사형이 더 좋다고 하는데, 근육통 때문에 체외충격파를 할 정도는 겪어본 적이 없어서 어떤 경우에 주로 사용하는지는 모르겠다.\n \n결론\n인대나 관절쪽이 다쳤을때 체외충격파 시술은 고통은 있지만 매우 효과적이며, 최소 5~10회정도를 추천한다. 개인적 경험이지만 정형외과보다는 재활의학과쪽이 좀 더 세밀하게 진료를 봐준다. 그리고 효과는 3개월 이후부터 서서히 발생하며, 6개월 정도 지나면 완치에 가깝게 통증이 사라지는 것 같다. 달리 말하면 꾹 참고 시술을 1개월만 받으면(보통 주2회니까 1개월이면 8회 시술), 3개월 이후부터는 운동을 해도 아프지 않을 것이다.",
        "guid": "http://sunyzero.tistory.com/314",
        "categories": [
          "취미 관련/수영",
          "수영 부상",
          "체외충격파"
        ],
        "isoDate": "2025-05-31T09:54:59.000Z"
      }
    ]
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": [
      {
        "title": "다시 2부 - Composable Architecture - 라우터 소개",
        "link": "https://thdev.tech/architecture/2025/06/02/Android-Architecture-new-02/",
        "pubDate": "Mon, 02 Jun 2025 00:00:00 +0000",
        "content": "<p>원래는 Action 시스템을 활용해서 Router를 쓰려고 설계했지만, 필자가 기존에 사용하던 방식 중 하나로 돌아가 거기서부터 다시 설계되었다.</p>\n\n<p>이 라우터는 크게 두 가지 상황에 활용 가능하다.</p>\n\n<ul>\n  <li>Activity 간 화면 이동</li>\n  <li>Compose Navigation 간 화면 이동</li>\n</ul>\n\n<p>만약 싱글 액티비티(Single Activity) 구조를 쓴다면 Compose Navigation 부분만 적용하면 되니 더 쉽게 사용 가능하다.</p>\n\n<p>여기서는 어떻게 활용되었을까?</p>\n\n<ul>\n  <li>Activity는 Dagger의 <code class=\"language-plaintext highlighter-rouge\">IntoMap</code>을 활용해서 <code class=\"language-plaintext highlighter-rouge\">Key/Value</code> 매핑으로 <code class=\"language-plaintext highlighter-rouge\">ActivityRoute</code>를 상속받아 구현한 객체를 정의해서 사용한다.</li>\n  <li>Compose Navigation은 <code class=\"language-plaintext highlighter-rouge\">NavigationRoute</code>를 상속받아 구현한다.</li>\n</ul>\n\n<h3>이 글에서는</h3>\n<ul>\n  <li>새로운 Router의 설계 철학 및 동작 방식을 자세히 알아본다.</li>\n  <li>Activity 및 Compose Navigation에서 Router를 활용하는 구체적인 코드 예시를 살펴본다.</li>\n</ul>\n\n<!--more-->\n\n<h2>Route</h2>\n\n<p>NavigationRoute는 드로이드 나이츠(Droid Knights) 프로젝트에도 적용되었으며, 다음 링크를 통해 라우팅 방식을 확인해볼 수 있다.</p>\n\n<p><a href=\"https://github.com/droidknights/DroidKnightsApp/tree/2025/app/core/router\">droidknights 2025 - Router</a></p>\n\n<p>이 글에서는 <a href=\"https://github.com/taehwandev/TComposableArchitecture\">TComposableArchitecture - GitHub - link</a>에서 적용된 방법을 중심으로 설명한다.</p>\n\n<h3>사용법</h3>\n\n<p>사용법은 간단하다. <code class=\"language-plaintext highlighter-rouge\">Navigator</code>를 주입받아 활용하며, 이동할 Activity 또는 Navigation을 <code class=\"language-plaintext highlighter-rouge\">Navigator</code>에서 제공하는 <code class=\"language-plaintext highlighter-rouge\">navigate</code>만 호출하면 된다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@HiltViewModel</span>\n<span class=\"k\">internal</span> <span class=\"kd\">class</span> <span class=\"nc\">SearchViewModel</span> <span class=\"nd\">@Inject</span> <span class=\"k\">constructor</span><span class=\"p\">(</span>\n    <span class=\"n\">flowActionStream</span><span class=\"p\">:</span> <span class=\"nc\">FlowActionStream</span><span class=\"p\">,</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">navigator</span><span class=\"p\">:</span> <span class=\"nc\">Navigator</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">ActionViewModel</span><span class=\"p\">&lt;</span><span class=\"nc\">SearchAction</span><span class=\"p\">&gt;(</span><span class=\"n\">flowActionStream</span><span class=\"p\">,</span> <span class=\"nc\">SearchAction</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">override</span> <span class=\"k\">suspend</span> <span class=\"k\">fun</span> <span class=\"nf\">handleAction</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">:</span> <span class=\"nc\">SearchAction</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">when</span> <span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">is</span> <span class=\"nc\">SearchAction</span><span class=\"p\">.</span><span class=\"nc\">ShowDetail</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span> <span class=\"c1\">// Activity 이동 시</span>\n                <span class=\"n\">navigator</span><span class=\"p\">.</span><span class=\"nf\">navigate</span><span class=\"p\">(</span>\n                    <span class=\"n\">activityRoute</span> <span class=\"p\">=</span> <span class=\"nc\">DetailActivityRouter</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">,</span>\n                    <span class=\"n\">argumentMap</span> <span class=\"p\">=</span> <span class=\"nf\">mapOf</span><span class=\"p\">(</span>\n                        <span class=\"nc\">DetailActivityRouter</span><span class=\"p\">.</span><span class=\"nc\">PUT_DATA</span> <span class=\"n\">to</span> <span class=\"nc\">DetailData</span><span class=\"p\">(</span><span class=\"n\">text</span> <span class=\"p\">=</span> <span class=\"n\">action</span><span class=\"p\">.</span><span class=\"n\">message</span><span class=\"p\">),</span>\n                    <span class=\"p\">),</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"k\">is</span> <span class=\"nc\">SearchAction</span><span class=\"p\">.</span><span class=\"nc\">SwitchNavigation</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span> <span class=\"c1\">// Compose Navigation 이동 시</span>\n                <span class=\"n\">navigator</span><span class=\"p\">.</span><span class=\"nf\">navigate</span><span class=\"p\">(</span>\n                    <span class=\"n\">navigationRoute</span> <span class=\"p\">=</span> <span class=\"n\">action</span><span class=\"p\">.</span><span class=\"n\">navItem</span><span class=\"p\">.</span><span class=\"n\">route</span><span class=\"p\">,</span>\n                    <span class=\"n\">saveState</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h2>여기서의 설계는?</h2>\n\n<p>먼저 Compose Navigation에 대한 시퀀스를 살펴보자.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">View</code> - <code class=\"language-plaintext highlighter-rouge\">Action</code> - <code class=\"language-plaintext highlighter-rouge\">ViewModel</code> - <code class=\"language-plaintext highlighter-rouge\">Router</code> - <code class=\"language-plaintext highlighter-rouge\">RouterViewModel</code> - <code class=\"language-plaintext highlighter-rouge\">RouterView</code>로 이어지는 흐름을 알 수 있다.</p>\n\n<p>이를 쉽게 이해하기 위해 Repository 패턴에 비유하면, 두 개의 View에서 데이터 통신하는 방법을 설명한 그림으로 생각하면 된다. <code class=\"language-plaintext highlighter-rouge\">Router</code> 부분이 <code class=\"language-plaintext highlighter-rouge\">Repository</code>로 볼 수 있다.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">View</code> - <code class=\"language-plaintext highlighter-rouge\">Action</code> - <code class=\"language-plaintext highlighter-rouge\">ViewModel</code> - <code class=\"language-plaintext highlighter-rouge\">Repository</code> - <code class=\"language-plaintext highlighter-rouge\">RouterViewModel</code> - <code class=\"language-plaintext highlighter-rouge\">RouterView</code></p>\n\n<p>이를 도식화하면</p>\n\n<p><img src=\"/images/posts/2025/Android-Architecture-new-02/CA-Router.drawio.png\" alt=\"sample_01\" /></p>\n\n<p>이번에는 Activity를 이동한다면? 한단계가 더 추가됨을 알 수 있다.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">ActivityJourney</code>라는 개념을 활용해서 이동할 Activity가 포함되어 있는지 추가로 검증하고, Activity를 이동한다.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">View</code> - <code class=\"language-plaintext highlighter-rouge\">Action</code> - <code class=\"language-plaintext highlighter-rouge\">ViewModel</code> - <code class=\"language-plaintext highlighter-rouge\">Router</code> - <code class=\"language-plaintext highlighter-rouge\">(ActivityJourney)</code> - <code class=\"language-plaintext highlighter-rouge\">RouterViewModel</code> - <code class=\"language-plaintext highlighter-rouge\">RouterView</code></p>\n\n<p><img src=\"/images/posts/2025/Android-Architecture-new-02/CA-Router-activity.drawio.png\" alt=\"sample_02\" /></p>\n\n<p>이 코드를 이해하는 데 있어서 중요한 점은 두 개의 View가 어떻게 데이터를 통신하는가이다.</p>\n\n<p>가장 쉬운 방법은 싱글턴으로 처리된 Repository를 활용하는 것이거나, Activity 사이에 위치한 하나의 Repository를 활용하는 방법일 것이다. 보통은 Repository를 싱글턴으로 활용하니, 여기서도 동일하다고 이해하면 된다.</p>\n\n<h2>Router 코드</h2>\n\n<p>먼저 우리가 활용할 <code class=\"language-plaintext highlighter-rouge\">Navigator</code>는 인터페이스로 정의되어 있다. 구현체는 모두 숨겨져 있다.</p>\n\n<p>이때 구현체를 완전히 분리하고 싶다면, 인터페이스 모듈과 구현체 모듈을 두 개 만들어 활용하는 방식을 고려할 수 있다. 이 방식은 <a href=\"https://github.com/droidknights/DroidKnightsApp/tree/2025/app/core/router\">droidknights 2025 - Router</a>에 포함되어 있으니 참고하길 바란다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">interface</span> <span class=\"nc\">Navigator</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">suspend</span> <span class=\"k\">fun</span> <span class=\"p\">&lt;</span><span class=\"nc\">T</span> <span class=\"p\">:</span> <span class=\"nc\">ActivityRoute</span><span class=\"p\">&gt;</span> <span class=\"nf\">navigate</span><span class=\"p\">(</span>\n        <span class=\"n\">activityRoute</span><span class=\"p\">:</span> <span class=\"nc\">KClass</span><span class=\"p\">&lt;</span><span class=\"nc\">T</span><span class=\"p\">&gt;,</span>\n        <span class=\"n\">argumentMap</span><span class=\"p\">:</span> <span class=\"nc\">Map</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">,</span> <span class=\"nc\">Parcelable</span><span class=\"p\">&gt;</span> <span class=\"p\">=</span> <span class=\"nf\">emptyMap</span><span class=\"p\">(),</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">suspend</span> <span class=\"k\">fun</span> <span class=\"nf\">navigate</span><span class=\"p\">(</span>\n        <span class=\"n\">navigationRoute</span><span class=\"p\">:</span> <span class=\"nc\">NavigationRoute</span><span class=\"p\">,</span>\n        <span class=\"n\">saveState</span><span class=\"p\">:</span> <span class=\"nc\">Boolean</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">suspend</span> <span class=\"k\">fun</span> <span class=\"nf\">navigateBack</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>위 코드에 대한 구현체는 다음과 같다.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">InternalNavigatorImpl</code>은 Router 모듈 내부에서만 활용하기 위한 것으로, <code class=\"language-plaintext highlighter-rouge\">val channel: Channel&lt;InternalRoute&gt;</code> 한 줄이 포함되어 있다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@ActivityRetainedScoped</span>\n<span class=\"k\">internal</span> <span class=\"kd\">class</span> <span class=\"nc\">InternalNavigatorImpl</span> <span class=\"nd\">@Inject</span> <span class=\"k\">constructor</span><span class=\"p\">()</span> <span class=\"p\">:</span> <span class=\"nc\">Navigator</span><span class=\"p\">,</span> <span class=\"nc\">InternalNavigator</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">override</span> <span class=\"kd\">val</span> <span class=\"py\">channel</span> <span class=\"p\">=</span> <span class=\"nc\">Channel</span><span class=\"p\">&lt;</span><span class=\"nc\">InternalRoute</span><span class=\"p\">&gt;(</span><span class=\"nc\">Channel</span><span class=\"p\">.</span><span class=\"nc\">BUFFERED</span><span class=\"p\">)</span>\n\n    <span class=\"c1\">// 아래에서 설명</span>\n    <span class=\"k\">override</span> <span class=\"k\">suspend</span> <span class=\"k\">fun</span> <span class=\"p\">&lt;</span><span class=\"nc\">T</span> <span class=\"p\">:</span> <span class=\"nc\">ActivityRoute</span><span class=\"p\">&gt;</span> <span class=\"nf\">navigate</span><span class=\"p\">(</span><span class=\"n\">activityRoute</span><span class=\"p\">:</span> <span class=\"nc\">KClass</span><span class=\"p\">&lt;</span><span class=\"nc\">T</span><span class=\"p\">&gt;,</span> <span class=\"n\">argumentMap</span><span class=\"p\">:</span> <span class=\"nc\">Map</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">,</span> <span class=\"nc\">Parcelable</span><span class=\"p\">&gt;)</span> <span class=\"p\">{</span>\n        <span class=\"n\">channel</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span>\n            <span class=\"nc\">InternalRoute</span><span class=\"p\">.</span><span class=\"nc\">Activity</span><span class=\"p\">(</span>\n                <span class=\"n\">activityRoute</span> <span class=\"p\">=</span> <span class=\"n\">activityRoute</span><span class=\"p\">,</span>\n                <span class=\"n\">argumentMap</span> <span class=\"p\">=</span> <span class=\"n\">argumentMap</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">override</span> <span class=\"k\">suspend</span> <span class=\"k\">fun</span> <span class=\"nf\">navigate</span><span class=\"p\">(</span><span class=\"n\">navigationRoute</span><span class=\"p\">:</span> <span class=\"nc\">NavigationRoute</span><span class=\"p\">,</span> <span class=\"n\">saveState</span><span class=\"p\">:</span> <span class=\"nc\">Boolean</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">channel</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span>\n            <span class=\"nc\">InternalRoute</span><span class=\"p\">.</span><span class=\"nc\">Navigation</span><span class=\"p\">(</span>\n                <span class=\"n\">navigationRoute</span> <span class=\"p\">=</span> <span class=\"n\">navigationRoute</span><span class=\"p\">,</span>\n                <span class=\"n\">saveState</span> <span class=\"p\">=</span> <span class=\"n\">saveState</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">override</span> <span class=\"k\">suspend</span> <span class=\"k\">fun</span> <span class=\"nf\">navigateBack</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"n\">channel</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"nc\">InternalRoute</span><span class=\"p\">.</span><span class=\"nc\">NavigateBack</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>위 Router는 <code class=\"language-plaintext highlighter-rouge\">DI(Dependency Injection)</code>를 통해 싱글턴으로 구성되어 있다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Module</span>\n<span class=\"nd\">@InstallIn</span><span class=\"p\">(</span><span class=\"nc\">ActivityRetainedComponent</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">)</span>\n<span class=\"k\">internal</span> <span class=\"k\">abstract</span> <span class=\"kd\">class</span> <span class=\"nc\">RouterModel</span> <span class=\"p\">{</span>\n\n    <span class=\"nd\">@Binds</span>\n    <span class=\"nd\">@ActivityRetainedScoped</span>\n    <span class=\"k\">abstract</span> <span class=\"k\">fun</span> <span class=\"nf\">provideNavigator</span><span class=\"p\">(</span>\n        <span class=\"n\">navigator</span><span class=\"p\">:</span> <span class=\"nc\">InternalNavigatorImpl</span>\n    <span class=\"p\">):</span> <span class=\"nc\">Navigator</span>\n\n    <span class=\"nd\">@Binds</span>\n    <span class=\"nd\">@ActivityRetainedScoped</span>\n    <span class=\"k\">abstract</span> <span class=\"k\">fun</span> <span class=\"nf\">provideInternalNavigator</span><span class=\"p\">(</span>\n        <span class=\"n\">navigator</span><span class=\"p\">:</span> <span class=\"nc\">InternalNavigatorImpl</span>\n    <span class=\"p\">):</span> <span class=\"nc\">InternalNavigator</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p><code class=\"language-plaintext highlighter-rouge\">ViewModel</code>에서는 이를 활용해서, <code class=\"language-plaintext highlighter-rouge\">SideEffect</code>로 View에서 collect할 수 있도록 구성되었으니, 기존 코드와 크게 다른 부분은 없다고 생각한다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@HiltViewModel</span>\n<span class=\"k\">internal</span> <span class=\"kd\">class</span> <span class=\"nc\">InternalRouteViewModel</span> <span class=\"nd\">@Inject</span> <span class=\"k\">internal</span> <span class=\"k\">constructor</span><span class=\"p\">(</span>\n    <span class=\"n\">navigator</span><span class=\"p\">:</span> <span class=\"nc\">InternalNavigator</span><span class=\"p\">,</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">journeyMapper</span><span class=\"p\">:</span> <span class=\"nc\">InternalActivityRouteMapper</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">ViewModel</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"kd\">val</span> <span class=\"py\">sideEffect</span> <span class=\"k\">by</span> <span class=\"nf\">lazy</span><span class=\"p\">(</span><span class=\"nc\">LazyThreadSafetyMode</span><span class=\"p\">.</span><span class=\"nc\">NONE</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">navigator</span><span class=\"p\">.</span><span class=\"n\">channel</span><span class=\"p\">.</span><span class=\"nf\">receiveAsFlow</span><span class=\"p\">()</span>\n            <span class=\"p\">.</span><span class=\"nf\">map</span> <span class=\"p\">{</span> <span class=\"n\">router</span> <span class=\"p\">-&gt;</span>\n                <span class=\"k\">when</span> <span class=\"p\">(</span><span class=\"n\">router</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                    <span class=\"k\">is</span> <span class=\"nc\">InternalRoute</span><span class=\"p\">.</span><span class=\"nc\">Activity</span><span class=\"p\">&lt;</span><span class=\"err\">*</span><span class=\"p\">&gt;</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                        <span class=\"n\">journeyMapper</span><span class=\"p\">.</span><span class=\"nf\">getJourneyOrNull</span><span class=\"p\">(</span><span class=\"n\">router</span><span class=\"p\">.</span><span class=\"n\">activityRoute</span><span class=\"p\">)</span><span class=\"o\">?.</span><span class=\"nf\">let</span> <span class=\"p\">{</span>\n                            <span class=\"nc\">InternalRouteSideEffect</span><span class=\"p\">.</span><span class=\"nc\">NavigateActivity</span><span class=\"p\">(</span>\n                                <span class=\"n\">activityRoute</span> <span class=\"p\">=</span> <span class=\"n\">it</span><span class=\"p\">,</span>\n                                <span class=\"n\">argumentMap</span> <span class=\"p\">=</span> <span class=\"n\">router</span><span class=\"p\">.</span><span class=\"n\">argumentMap</span><span class=\"p\">,</span>\n                            <span class=\"p\">)</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">}</span>\n\n                    <span class=\"k\">is</span> <span class=\"nc\">InternalRoute</span><span class=\"p\">.</span><span class=\"nc\">Navigation</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                        <span class=\"nc\">InternalRouteSideEffect</span><span class=\"p\">.</span><span class=\"nc\">Navigate</span><span class=\"p\">(</span>\n                            <span class=\"n\">navigationRoute</span> <span class=\"p\">=</span> <span class=\"n\">router</span><span class=\"p\">.</span><span class=\"n\">navigationRoute</span><span class=\"p\">,</span>\n                            <span class=\"n\">saveState</span> <span class=\"p\">=</span> <span class=\"n\">router</span><span class=\"p\">.</span><span class=\"n\">saveState</span><span class=\"p\">,</span>\n                        <span class=\"p\">)</span>\n                    <span class=\"p\">}</span>\n\n                    <span class=\"k\">is</span> <span class=\"nc\">InternalRoute</span><span class=\"p\">.</span><span class=\"nc\">NavigateBack</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                        <span class=\"nc\">InternalRouteSideEffect</span><span class=\"p\">.</span><span class=\"nc\">NavigateBack</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n            <span class=\"p\">.</span><span class=\"nf\">filterNotNull</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h3>View에서는</h3>\n\n<p>View에서 <code class=\"language-plaintext highlighter-rouge\">SideEffect</code>를 받아 처리하는 코드이다. 주로 화면 이동과 뒤로가기 이벤트를 처리할 수 있다.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">NavigateBack</code>은 Activity와 Navigation 둘 다를 혼용 처리하기 위해 마지막 Entry가 있는지 한 번 더 체크하고 처리하도록 작성되었다.</p>\n\n<p>첫 화면에서는 보통 <code class=\"language-plaintext highlighter-rouge\">&lt;</code>나 <code class=\"language-plaintext highlighter-rouge\">X</code> 버튼을 사용하지는 않지만, 적용은 해두었다.</p>\n\n<p>이 코드에서는 Navigation 처리에 대한 내용이므로 Activity 관련 코드는 제거되었다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Composable</span>\n<span class=\"k\">private</span> <span class=\"k\">fun</span> <span class=\"nf\">InternalLaunchedRouter</span><span class=\"p\">(</span>\n    <span class=\"n\">navHostController</span><span class=\"p\">:</span> <span class=\"nc\">NavHostController</span><span class=\"p\">?</span> <span class=\"p\">=</span> <span class=\"k\">null</span><span class=\"p\">,</span>\n    <span class=\"n\">internalRouterViewModel</span><span class=\"p\">:</span> <span class=\"nc\">InternalRouteViewModel</span> <span class=\"p\">=</span> <span class=\"nf\">viewModel</span><span class=\"p\">(),</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">val</span> <span class=\"py\">activity</span> <span class=\"p\">=</span> <span class=\"nc\">LocalActivity</span><span class=\"p\">.</span><span class=\"n\">current</span>\n    <span class=\"kd\">val</span> <span class=\"py\">lifecycleOwner</span> <span class=\"p\">=</span> <span class=\"nc\">LocalLifecycleOwner</span><span class=\"p\">.</span><span class=\"n\">current</span>\n    <span class=\"nc\">LaunchedEffect</span><span class=\"p\">(</span><span class=\"n\">internalRouterViewModel</span><span class=\"p\">,</span> <span class=\"n\">lifecycleOwner</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">lifecycleOwner</span><span class=\"p\">.</span><span class=\"nf\">repeatOnLifecycle</span><span class=\"p\">(</span><span class=\"nc\">Lifecycle</span><span class=\"p\">.</span><span class=\"nc\">State</span><span class=\"p\">.</span><span class=\"nc\">STARTED</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">internalRouterViewModel</span><span class=\"p\">.</span><span class=\"n\">sideEffect</span><span class=\"p\">.</span><span class=\"nf\">collectLatest</span> <span class=\"p\">{</span> <span class=\"n\">sideEffect</span> <span class=\"p\">-&gt;</span>\n                <span class=\"k\">when</span> <span class=\"p\">(</span><span class=\"n\">sideEffect</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                    <span class=\"k\">is</span> <span class=\"nc\">InternalRouteSideEffect</span><span class=\"p\">.</span><span class=\"nc\">NavigateBack</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">navHostController</span><span class=\"o\">?.</span><span class=\"n\">previousBackStackEntry</span> <span class=\"p\">!=</span> <span class=\"k\">null</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                            <span class=\"n\">navHostController</span><span class=\"p\">.</span><span class=\"nf\">popBackStack</span><span class=\"p\">()</span>\n                        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n                            <span class=\"n\">activity</span><span class=\"o\">?.</span><span class=\"nf\">finish</span><span class=\"p\">()</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">}</span>\n\n                    <span class=\"k\">is</span> <span class=\"nc\">InternalRouteSideEffect</span><span class=\"p\">.</span><span class=\"nc\">Navigate</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                        <span class=\"n\">navHostController</span><span class=\"o\">?.</span><span class=\"nf\">let</span> <span class=\"p\">{</span> <span class=\"n\">navigation</span> <span class=\"p\">-&gt;</span>\n                            <span class=\"n\">navigation</span><span class=\"p\">.</span><span class=\"nf\">navigate</span><span class=\"p\">(</span><span class=\"n\">sideEffect</span><span class=\"p\">.</span><span class=\"n\">navigationRoute</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                                <span class=\"n\">navigation</span><span class=\"p\">.</span><span class=\"n\">graph</span><span class=\"p\">.</span><span class=\"nf\">findStartDestination</span><span class=\"p\">().</span><span class=\"n\">route</span><span class=\"o\">?.</span><span class=\"nf\">let</span> <span class=\"p\">{</span>\n                                    <span class=\"nf\">popUpTo</span><span class=\"p\">(</span><span class=\"n\">it</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                                        <span class=\"n\">saveState</span> <span class=\"p\">=</span> <span class=\"n\">sideEffect</span><span class=\"p\">.</span><span class=\"n\">saveState</span>\n                                    <span class=\"p\">}</span>\n                                <span class=\"p\">}</span>\n                                <span class=\"n\">restoreState</span> <span class=\"p\">=</span> <span class=\"n\">sideEffect</span><span class=\"p\">.</span><span class=\"n\">saveState</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">}</span>\n\n                    <span class=\"k\">is</span> <span class=\"nc\">InternalRouteSideEffect</span><span class=\"p\">.</span><span class=\"nc\">NavigateActivity</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                        <span class=\"n\">activity</span><span class=\"o\">?.</span><span class=\"nf\">startActivity</span><span class=\"p\">(</span>\n                            <span class=\"n\">sideEffect</span><span class=\"p\">.</span><span class=\"n\">activityRoute</span><span class=\"p\">.</span><span class=\"nf\">getActivity</span><span class=\"p\">(</span><span class=\"n\">activity</span><span class=\"p\">).</span><span class=\"nf\">apply</span> <span class=\"p\">{</span>\n                                <span class=\"n\">sideEffect</span><span class=\"p\">.</span><span class=\"n\">argumentMap</span><span class=\"p\">.</span><span class=\"n\">entries</span><span class=\"p\">.</span><span class=\"nf\">forEach</span> <span class=\"p\">{</span> <span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span>\n                                    <span class=\"nf\">putExtra</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n                                <span class=\"p\">}</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">)</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>이 코드가 처음 소개된 Flow 다이어그램에 해당한다.</p>\n\n<p><img src=\"/images/posts/2025/Android-Architecture-new-02/CA-Router.drawio.png\" alt=\"sample_01\" /></p>\n\n<h2>정의는?</h2>\n\n<p><code class=\"language-plaintext highlighter-rouge\">NavigationRoute</code>를 상속받아 Route를 구현하고, 이를 Navigation 화면에 적용해야 한다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Serializable</span>\n<span class=\"kd\">object</span> <span class=\"nc\">SettingsRoute</span> <span class=\"p\">:</span> <span class=\"nc\">NavigationRoute</span>\n</code></pre></div></div>\n\n<p>그리고 연결할 지점에는 <code class=\"language-plaintext highlighter-rouge\">NavGraphBuilder</code>를 통해 네비게이션에서 활용할 <code class=\"language-plaintext highlighter-rouge\">composable</code>을 정의하면 된다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">fun</span> <span class=\"nc\">NavGraphBuilder</span><span class=\"p\">.</span><span class=\"nf\">settingsNavGraph</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"n\">composable</span><span class=\"p\">&lt;</span><span class=\"nc\">SettingsRoute</span><span class=\"p\">&gt;</span> <span class=\"p\">{</span>\n        <span class=\"nc\">InternalSettingsScreen</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>네비게이션을 활용하는 방법은 기존과 동일하므로, 여기서는 설명은 생략하고 일부 코드를 올려둔다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">Scaffold</span><span class=\"p\">(</span>\n    <span class=\"n\">bottomBar</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n        <span class=\"nc\">NavigationBar</span> <span class=\"p\">{</span>\n            <span class=\"n\">navigationUiState</span><span class=\"p\">.</span><span class=\"n\">navigation</span><span class=\"p\">.</span><span class=\"nf\">forEach</span> <span class=\"p\">{</span> <span class=\"n\">navItem</span> <span class=\"p\">-&gt;</span>\n                <span class=\"nc\">NavigationBarItem</span><span class=\"p\">(</span>\n                    <span class=\"n\">selected</span> <span class=\"p\">=</span> <span class=\"n\">navigationUiState</span><span class=\"p\">.</span><span class=\"n\">selectNav</span> <span class=\"p\">==</span> <span class=\"n\">navItem</span><span class=\"p\">,</span>\n                    <span class=\"n\">onClick</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n                        <span class=\"nf\">onClick</span><span class=\"p\">(</span><span class=\"n\">navItem</span><span class=\"p\">)</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"c1\">// 생략</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">modifier</span> <span class=\"p\">=</span> <span class=\"n\">modifier</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"n\">innerPadding</span> <span class=\"p\">-&gt;</span>\n    <span class=\"nc\">Box</span><span class=\"p\">(</span>\n        <span class=\"n\">modifier</span> <span class=\"p\">=</span> <span class=\"nc\">Modifier</span>\n            <span class=\"p\">.</span><span class=\"nf\">padding</span><span class=\"p\">(</span><span class=\"n\">innerPadding</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nf\">padding</span><span class=\"p\">(</span><span class=\"n\">horizontal</span> <span class=\"p\">=</span> <span class=\"mi\">10</span><span class=\"p\">.</span><span class=\"n\">dp</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nc\">NavHost</span><span class=\"p\">(</span> <span class=\"c1\">// 네비게이션</span>\n            <span class=\"n\">navController</span> <span class=\"p\">=</span> <span class=\"n\">navController</span><span class=\"p\">,</span>\n            <span class=\"n\">startDestination</span> <span class=\"p\">=</span> <span class=\"nc\">NavigationUiState</span><span class=\"p\">.</span><span class=\"nc\">Default</span><span class=\"p\">.</span><span class=\"n\">selectNav</span><span class=\"p\">.</span><span class=\"n\">route</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nf\">searchNavGraph</span><span class=\"p\">()</span>\n            <span class=\"nf\">settingsNavGraph</span><span class=\"p\">()</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h2>Activity</h2>\n\n<p>Activity 라우팅은 Compose Navigation보다 조금 더 복잡할 수 있다.</p>\n\n<p>우선 다시 Router 코드로 돌아가서 중요한 부분만 살펴보자. 여기서는 DI인 Dagger를 활용했으니 Dagger를 활용한 방법으로 접근한다.</p>\n\n<p>먼저 <code class=\"language-plaintext highlighter-rouge\">RouterKey</code>라는 <code class=\"language-plaintext highlighter-rouge\">MapKey</code>를 정의했다. 이를 활용해서 클래스 정보를 <code class=\"language-plaintext highlighter-rouge\">Key/Value</code>로 매핑할 수 있도록 한다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@MapKey</span>\n<span class=\"k\">annotation</span> <span class=\"kd\">class</span> <span class=\"nc\">RouteKey</span><span class=\"p\">(</span>\n    <span class=\"kd\">val</span> <span class=\"py\">value</span><span class=\"p\">:</span> <span class=\"nc\">KClass</span><span class=\"p\">&lt;</span><span class=\"k\">out</span> <span class=\"nc\">ActivityRoute</span><span class=\"p\">&gt;,</span>\n<span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>그리고 <code class=\"language-plaintext highlighter-rouge\">SomeActivityRouter</code>를 정의하고, 이를 상속받아 구현한다. 여기서 <code class=\"language-plaintext highlighter-rouge\">getActivity()</code>를 구현해서 Intent 정보를 함께 전달하게 된다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">internal</span> <span class=\"kd\">class</span> <span class=\"nc\">MainActivityRouteImpl</span> <span class=\"nd\">@Inject</span> <span class=\"k\">constructor</span><span class=\"p\">()</span> <span class=\"p\">:</span> <span class=\"nc\">MainActivityRouter</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">getActivity</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"nc\">Context</span><span class=\"p\">):</span> <span class=\"nc\">Intent</span> <span class=\"p\">=</span>\n        <span class=\"nc\">Intent</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"nc\">MainActivity</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">.</span><span class=\"n\">java</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>DI를 활용해 이 RouterImpl이 MainActivityRouter임을 알려주기 위해 <code class=\"language-plaintext highlighter-rouge\">@IntoMap</code>과 <code class=\"language-plaintext highlighter-rouge\">@RouteKey</code>를 활용해서 처리한다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Module</span>\n<span class=\"nd\">@InstallIn</span><span class=\"p\">(</span><span class=\"nc\">SingletonComponent</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">)</span>\n<span class=\"k\">internal</span> <span class=\"k\">abstract</span> <span class=\"kd\">class</span> <span class=\"nc\">MainModule</span> <span class=\"p\">{</span>\n\n    <span class=\"nd\">@Binds</span>\n    <span class=\"nd\">@IntoMap</span>\n    <span class=\"nd\">@RouteKey</span><span class=\"p\">(</span><span class=\"nc\">MainActivityRouter</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">)</span>\n    <span class=\"k\">abstract</span> <span class=\"k\">fun</span> <span class=\"nf\">bindMainActivityRoute</span><span class=\"p\">(</span>\n        <span class=\"n\">mainActivityRoute</span><span class=\"p\">:</span> <span class=\"nc\">MainActivityRouteImpl</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span> <span class=\"nc\">ActivityRoute</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>위 코드는 KSP(Kotlin Symbol Processing)를 활용하면 더 쉽게 자동화할 수 있다. 어차피 수동으로 만들더라도 같은 패턴만 나오도록 만들면 되기 때문이다. 특히 Activity를 찾는 것이 중요하며, Intent 객체를 처음부터 만드는 것도 아니기에 이러한 접근이 가능하다.</p>\n\n<h4>KSP 관련 글</h4>\n\n<p><a href=\"https://thdev.tech/android/2022/05/14/Kotlin-KSP/\">Android KSP(Kotlin Symbol Processing) 활용을 위한 준비단계! - link</a>\n<a href=\"https://thdev.tech/android/2022/05/16/Kotlin-KSP-SymbolProcessor/\">Android KSP(Kotlin Symbol Processing) 활용할 수 있는 샘플 코드 작업 - link</a></p>\n\n<p>코드를 실행하면 런타임에 아래의 <code class=\"language-plaintext highlighter-rouge\">map: Map&lt;Class&lt;out ActivityRoute&gt;, @JvmSuppressWildcards ActivityRoute&gt;</code> 부분에서 <code class=\"language-plaintext highlighter-rouge\">ActivityRoute</code>로 정의한 정보를 찾아 Map 형태로 전달하고 이를 활용할 수 있다.</p>\n\n<p>아쉽게도 KClass를 바로 활용하려고 했지만, 런타임에서 오류가 발생해서 Java Class를 활용하게 되었다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Module</span>\n<span class=\"nd\">@InstallIn</span><span class=\"p\">(</span><span class=\"nc\">SingletonComponent</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">)</span>\n<span class=\"k\">internal</span> <span class=\"kd\">object</span> <span class=\"nc\">JourneyRouterModule</span> <span class=\"p\">{</span>\n\n    <span class=\"nd\">@Provides</span>\n    <span class=\"nd\">@Singleton</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">providerInternalActivityRouteMapper</span><span class=\"p\">(</span>\n        <span class=\"n\">map</span><span class=\"p\">:</span> <span class=\"nc\">Map</span><span class=\"p\">&lt;</span><span class=\"nc\">Class</span><span class=\"p\">&lt;</span><span class=\"k\">out</span> <span class=\"nc\">ActivityRoute</span><span class=\"p\">&gt;,</span> <span class=\"err\">@</span><span class=\"nc\">JvmSuppressWildcards</span> <span class=\"nc\">ActivityRoute</span><span class=\"p\">&gt;,</span>\n    <span class=\"p\">):</span> <span class=\"nc\">InternalActivityRouteMapper</span> <span class=\"p\">=</span>\n        <span class=\"nc\">InternalActivityRouteMapper</span><span class=\"p\">(</span><span class=\"n\">map</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>마지막으로 접근해야 할 정보는 <code class=\"language-plaintext highlighter-rouge\">getJourneyOrNull</code>에서 찾아서 startActivity할 수 있다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Singleton</span>\n<span class=\"k\">internal</span> <span class=\"kd\">class</span> <span class=\"nc\">InternalActivityRouteMapper</span> <span class=\"nd\">@Inject</span> <span class=\"k\">constructor</span><span class=\"p\">(</span>\n    <span class=\"err\">@</span><span class=\"k\">get</span><span class=\"p\">:</span><span class=\"nc\">VisibleForTesting</span> <span class=\"kd\">val</span> <span class=\"py\">mapper</span><span class=\"p\">:</span> <span class=\"nc\">Map</span><span class=\"p\">&lt;</span><span class=\"nc\">Class</span><span class=\"p\">&lt;</span><span class=\"k\">out</span> <span class=\"nc\">ActivityRoute</span><span class=\"p\">&gt;,</span> <span class=\"nc\">ActivityRoute</span><span class=\"p\">&gt;,</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n\n    <span class=\"cm\">/**\n     * Find and return ActivityRoute from the data stored in Mapper.\n     */</span>\n    <span class=\"k\">internal</span> <span class=\"k\">fun</span> <span class=\"nf\">getJourneyOrNull</span><span class=\"p\">(</span><span class=\"n\">journeyKClass</span><span class=\"p\">:</span> <span class=\"nc\">KClass</span><span class=\"p\">&lt;</span><span class=\"err\">*</span><span class=\"p\">&gt;):</span> <span class=\"nc\">ActivityRoute</span><span class=\"p\">?</span> <span class=\"p\">=</span>\n        <span class=\"nf\">synchronized</span><span class=\"p\">(</span><span class=\"n\">mapper</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">mapper</span><span class=\"p\">[</span><span class=\"n\">journeyKClass</span><span class=\"p\">.</span><span class=\"n\">java</span><span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h3>Activity라서</h3>\n\n<p>Compose Navigation에서는 <code class=\"language-plaintext highlighter-rouge\">@Serializable object SettingsRoute : NavigationRoute</code>와 같이 <code class=\"language-plaintext highlighter-rouge\">@Serializable</code> 데이터 클래스만 정의하면 동작에 문제가 없고, 필요한 데이터도 간단하게 넘겨줄 수 있다.</p>\n\n<p>하지만 <code class=\"language-plaintext highlighter-rouge\">Activity</code>는 필요한 데이터를 넘기기 위해 별도의 <code class=\"language-plaintext highlighter-rouge\">arguments</code>를 사용해야 한다는 차이점이 있다.</p>\n\n<p>그래서 <code class=\"language-plaintext highlighter-rouge\">Navigator</code> 인터페이스에 아래와 같이 arguments를 받을 수 있도록 추가해두었다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">interface</span> <span class=\"nc\">Navigator</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">suspend</span> <span class=\"k\">fun</span> <span class=\"p\">&lt;</span><span class=\"nc\">T</span> <span class=\"p\">:</span> <span class=\"nc\">ActivityRoute</span><span class=\"p\">&gt;</span> <span class=\"nf\">navigate</span><span class=\"p\">(</span>\n        <span class=\"n\">activityRoute</span><span class=\"p\">:</span> <span class=\"nc\">KClass</span><span class=\"p\">&lt;</span><span class=\"nc\">T</span><span class=\"p\">&gt;,</span>\n        <span class=\"n\">argumentMap</span><span class=\"p\">:</span> <span class=\"nc\">Map</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">,</span> <span class=\"nc\">Parcelable</span><span class=\"p\">&gt;</span> <span class=\"p\">=</span> <span class=\"nf\">emptyMap</span><span class=\"p\">(),</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">suspend</span> <span class=\"k\">fun</span> <span class=\"nf\">navigate</span><span class=\"p\">(</span>\n        <span class=\"n\">navigationRoute</span><span class=\"p\">:</span> <span class=\"nc\">NavigationRoute</span><span class=\"p\">,</span>\n        <span class=\"n\">saveState</span><span class=\"p\">:</span> <span class=\"nc\">Boolean</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>데이터 전달을 위함이니 <code class=\"language-plaintext highlighter-rouge\">Parcelable</code>로 제한해두었다.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">Navigator</code>를 활용하면 <code class=\"language-plaintext highlighter-rouge\">getJourneyOrNull</code> 부분을 ViewModel에서 처리하고있음을 아래와 같이 확인할 수 있다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@HiltViewModel</span>\n<span class=\"k\">internal</span> <span class=\"kd\">class</span> <span class=\"nc\">InternalRouteViewModel</span> <span class=\"nd\">@Inject</span> <span class=\"k\">internal</span> <span class=\"k\">constructor</span><span class=\"p\">(</span>\n    <span class=\"n\">navigator</span><span class=\"p\">:</span> <span class=\"nc\">InternalNavigator</span><span class=\"p\">,</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">journeyMapper</span><span class=\"p\">:</span> <span class=\"nc\">InternalActivityRouteMapper</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">ViewModel</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"kd\">val</span> <span class=\"py\">sideEffect</span> <span class=\"k\">by</span> <span class=\"nf\">lazy</span><span class=\"p\">(</span><span class=\"nc\">LazyThreadSafetyMode</span><span class=\"p\">.</span><span class=\"nc\">NONE</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">navigator</span><span class=\"p\">.</span><span class=\"n\">channel</span><span class=\"p\">.</span><span class=\"nf\">receiveAsFlow</span><span class=\"p\">()</span>\n            <span class=\"p\">.</span><span class=\"nf\">map</span> <span class=\"p\">{</span> <span class=\"n\">router</span> <span class=\"p\">-&gt;</span>\n                <span class=\"k\">when</span> <span class=\"p\">(</span><span class=\"n\">router</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                    <span class=\"k\">is</span> <span class=\"nc\">InternalRoute</span><span class=\"p\">.</span><span class=\"nc\">Activity</span><span class=\"p\">&lt;</span><span class=\"err\">*</span><span class=\"p\">&gt;</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                        <span class=\"n\">journeyMapper</span><span class=\"p\">.</span><span class=\"nf\">getJourneyOrNull</span><span class=\"p\">(</span><span class=\"n\">router</span><span class=\"p\">.</span><span class=\"n\">activityRoute</span><span class=\"p\">)</span><span class=\"o\">?.</span><span class=\"nf\">let</span> <span class=\"p\">{</span>\n                            <span class=\"nc\">InternalRouteSideEffect</span><span class=\"p\">.</span><span class=\"nc\">NavigateActivity</span><span class=\"p\">(</span>\n                                <span class=\"n\">activityRoute</span> <span class=\"p\">=</span> <span class=\"n\">it</span><span class=\"p\">,</span>\n                                <span class=\"n\">argumentMap</span> <span class=\"p\">=</span> <span class=\"n\">router</span><span class=\"p\">.</span><span class=\"n\">argumentMap</span><span class=\"p\">,</span>\n                            <span class=\"p\">)</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n            <span class=\"p\">.</span><span class=\"nf\">filterNotNull</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>이 코드 부분을 도식화한 부분이 아래와 같다.</p>\n\n<p><img src=\"/images/posts/2025/Android-Architecture-new-02/CA-Router-activity.drawio.png\" alt=\"sample_02\" /></p>\n\n<h2>정리하면</h2>\n\n<ul>\n  <li>View에서 화면 이동 이벤트가 발생한다.</li>\n  <li>ViewModel에서 <code class=\"language-plaintext highlighter-rouge\">Navigator</code>를 통해 Activity/Compose Navigation으로 이벤트를 이동 요청한다.\n    <ul>\n      <li>Activity 이동: DI를 통해 주입받은 ActivityRoute 정보를 자동으로 매핑하여 <code class=\"language-plaintext highlighter-rouge\">InternalActivityRouteMapper</code>에 사전 보관된 정보와 매칭하여 <code class=\"language-plaintext highlighter-rouge\">startActivity</code>를 호출한다.</li>\n      <li>Navigation 이동: Compose Navigation을 통해 <code class=\"language-plaintext highlighter-rouge\">Map</code>에 포함되어있을 경우 이동한다.</li>\n    </ul>\n  </li>\n</ul>\n\n<p>남은 작업은 다음과 같다.</p>\n\n<ul>\n  <li>ActivityResult 처리</li>\n  <li>NavigationResult 처리</li>\n</ul>\n\n<h2>사용법</h2>\n\n<p>앞서 소개한 Action과 다르게 Router는 Activity를 기반하여 동작한다. A/B Activity가 있다고 하더라도, <code class=\"language-plaintext highlighter-rouge\">InternalActivityRouteMapper</code>는 싱글턴이지만 실제 동작은 서로 무관하게 동작한다.</p>\n\n<p>그래서 각 Activity마다 아래와 같은 코드를 선택적으로 주입해 주어야 한다. 싱글 액티비티 구조라면 당연히 하나면 충분하지만, 서브 네비게이션에 대한 구조를 적용하지 않아서 현재는 모든 경우에 대응되지는 않는다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">val</span> <span class=\"py\">navHostController</span> <span class=\"p\">=</span> <span class=\"nf\">rememberNavController</span><span class=\"p\">()</span>\n<span class=\"nc\">LaunchedRouter</span><span class=\"p\">(</span><span class=\"n\">navHostController</span><span class=\"p\">)</span>\n\n<span class=\"c1\">// or</span>\n<span class=\"nc\">LaunchedRouter</span><span class=\"p\">()</span> <span class=\"c1\">// navHostController default null</span>\n</code></pre></div></div>\n\n<h2>Next</h2>\n\n<p>Action을 새로 짜면서 Router도 몇 번의 수정이 있었다.</p>\n\n<p>기존 Action 방식에서의 문제점은 다음과 같았다.</p>\n\n<p>A/B/C 화면 어디서든 동일한 이벤트인 뒤로가기(back) 이벤트를 받는다면, 모든 화면에서 action을 처리해버리고 원치 않는 종료가 일어날 수 있다는 점이었다. 사이드 이펙트를 통해 막을 수는 있었지만 근본적인 문제 해결도 아니고, 오히려 복잡성을 높이는 코드였기에 수정되면서 원래 사용하던 방식으로 되돌아갔다는 점이다.</p>\n\n<p>더 나아가 네비게이션에서만 Router를 활용하고 싶다면 드로이드 나이츠 코드를 참고해보면 좋을 것 같다.</p>\n\n<p><a href=\"https://github.com/droidknights/DroidKnightsApp/tree/2025/app/core/router\">droidknights 2025 - Router</a></p>\n\n<h2>작성 글 이어보기</h2>\n\n<ul>\n  <li><a href=\"https://thdev.tech/architecture/2025/02/02/Android-Architecture-01/\">1부 - 컴포즈에 사용할 Composable Architecture 설명(리엑트?)</a></li>\n  <li><a href=\"https://thdev.tech/architecture/2025/04/15/Android-Architecture-02/\">2부 - Composable Architecture는 만들었는데 문제가 있었네? 개선해보자.</a></li>\n  <li><a href=\"https://thdev.tech/architecture/2025/04/20/Android-Architecture-03/\">3부 - Composable Architecture에서는 Alert/Toast는 어떻게 사용할 수 있는가?</a></li>\n  <li><a href=\"https://thdev.tech/architecture/2025/06/01/Android-Architecture-new-01/\">다시 - Composable Architecture 설계 변경</a></li>\n</ul>\n\n",
        "contentSnippet": "원래는 Action 시스템을 활용해서 Router를 쓰려고 설계했지만, 필자가 기존에 사용하던 방식 중 하나로 돌아가 거기서부터 다시 설계되었다.\n이 라우터는 크게 두 가지 상황에 활용 가능하다.\nActivity 간 화면 이동\nCompose Navigation 간 화면 이동\n만약 싱글 액티비티(Single Activity) 구조를 쓴다면 Compose Navigation 부분만 적용하면 되니 더 쉽게 사용 가능하다.\n여기서는 어떻게 활용되었을까?\nActivity는 Dagger의 IntoMap을 활용해서 Key/Value 매핑으로 ActivityRoute를 상속받아 구현한 객체를 정의해서 사용한다.\nCompose Navigation은 NavigationRoute를 상속받아 구현한다.\n이 글에서는\n새로운 Router의 설계 철학 및 동작 방식을 자세히 알아본다.\nActivity 및 Compose Navigation에서 Router를 활용하는 구체적인 코드 예시를 살펴본다.\nRoute\nNavigationRoute는 드로이드 나이츠(Droid Knights) 프로젝트에도 적용되었으며, 다음 링크를 통해 라우팅 방식을 확인해볼 수 있다.\ndroidknights 2025 - Router\n이 글에서는 TComposableArchitecture - GitHub - link에서 적용된 방법을 중심으로 설명한다.\n사용법\n사용법은 간단하다. Navigator를 주입받아 활용하며, 이동할 Activity 또는 Navigation을 Navigator에서 제공하는 navigate만 호출하면 된다.\n\n@HiltViewModel\ninternal class SearchViewModel @Inject constructor(\n    flowActionStream: FlowActionStream,\n    private val navigator: Navigator,\n) : ActionViewModel<SearchAction>(flowActionStream, SearchAction::class) {\n\n    override suspend fun handleAction(action: SearchAction) {\n        when (action) {\n            is SearchAction.ShowDetail -> { // Activity 이동 시\n                navigator.navigate(\n                    activityRoute = DetailActivityRouter::class,\n                    argumentMap = mapOf(\n                        DetailActivityRouter.PUT_DATA to DetailData(text = action.message),\n                    ),\n                )\n            }\n\n            is SearchAction.SwitchNavigation -> { // Compose Navigation 이동 시\n                navigator.navigate(\n                    navigationRoute = action.navItem.route,\n                    saveState = true,\n                )\n            }\n        }\n    }\n}\n\n\n여기서의 설계는?\n먼저 Compose Navigation에 대한 시퀀스를 살펴보자.\nView - Action - ViewModel - Router - RouterViewModel - RouterView로 이어지는 흐름을 알 수 있다.\n이를 쉽게 이해하기 위해 Repository 패턴에 비유하면, 두 개의 View에서 데이터 통신하는 방법을 설명한 그림으로 생각하면 된다. Router 부분이 Repository로 볼 수 있다.\nView - Action - ViewModel - Repository - RouterViewModel - RouterView\n이를 도식화하면\n\n이번에는 Activity를 이동한다면? 한단계가 더 추가됨을 알 수 있다.\nActivityJourney라는 개념을 활용해서 이동할 Activity가 포함되어 있는지 추가로 검증하고, Activity를 이동한다.\nView - Action - ViewModel - Router - (ActivityJourney) - RouterViewModel - RouterView\n\n이 코드를 이해하는 데 있어서 중요한 점은 두 개의 View가 어떻게 데이터를 통신하는가이다.\n가장 쉬운 방법은 싱글턴으로 처리된 Repository를 활용하는 것이거나, Activity 사이에 위치한 하나의 Repository를 활용하는 방법일 것이다. 보통은 Repository를 싱글턴으로 활용하니, 여기서도 동일하다고 이해하면 된다.\nRouter 코드\n먼저 우리가 활용할 Navigator는 인터페이스로 정의되어 있다. 구현체는 모두 숨겨져 있다.\n이때 구현체를 완전히 분리하고 싶다면, 인터페이스 모듈과 구현체 모듈을 두 개 만들어 활용하는 방식을 고려할 수 있다. 이 방식은 droidknights 2025 - Router에 포함되어 있으니 참고하길 바란다.\n\ninterface Navigator {\n\n    suspend fun <T : ActivityRoute> navigate(\n        activityRoute: KClass<T>,\n        argumentMap: Map<String, Parcelable> = emptyMap(),\n    )\n\n    suspend fun navigate(\n        navigationRoute: NavigationRoute,\n        saveState: Boolean = false,\n    )\n\n    suspend fun navigateBack()\n}\n\n\n위 코드에 대한 구현체는 다음과 같다.\nInternalNavigatorImpl은 Router 모듈 내부에서만 활용하기 위한 것으로, val channel: Channel<InternalRoute> 한 줄이 포함되어 있다.\n\n@ActivityRetainedScoped\ninternal class InternalNavigatorImpl @Inject constructor() : Navigator, InternalNavigator {\n\n    override val channel = Channel<InternalRoute>(Channel.BUFFERED)\n\n    // 아래에서 설명\n    override suspend fun <T : ActivityRoute> navigate(activityRoute: KClass<T>, argumentMap: Map<String, Parcelable>) {\n        channel.send(\n            InternalRoute.Activity(\n                activityRoute = activityRoute,\n                argumentMap = argumentMap,\n            )\n        )\n    }\n\n    override suspend fun navigate(navigationRoute: NavigationRoute, saveState: Boolean) {\n        channel.send(\n            InternalRoute.Navigation(\n                navigationRoute = navigationRoute,\n                saveState = saveState,\n            )\n        )\n    }\n\n    override suspend fun navigateBack() {\n        channel.send(InternalRoute.NavigateBack)\n    }\n}\n\n\n위 Router는 DI(Dependency Injection)를 통해 싱글턴으로 구성되어 있다.\n\n@Module\n@InstallIn(ActivityRetainedComponent::class)\ninternal abstract class RouterModel {\n\n    @Binds\n    @ActivityRetainedScoped\n    abstract fun provideNavigator(\n        navigator: InternalNavigatorImpl\n    ): Navigator\n\n    @Binds\n    @ActivityRetainedScoped\n    abstract fun provideInternalNavigator(\n        navigator: InternalNavigatorImpl\n    ): InternalNavigator\n}\n\n\nViewModel에서는 이를 활용해서, SideEffect로 View에서 collect할 수 있도록 구성되었으니, 기존 코드와 크게 다른 부분은 없다고 생각한다.\n\n@HiltViewModel\ninternal class InternalRouteViewModel @Inject internal constructor(\n    navigator: InternalNavigator,\n    private val journeyMapper: InternalActivityRouteMapper,\n) : ViewModel() {\n\n    val sideEffect by lazy(LazyThreadSafetyMode.NONE) {\n        navigator.channel.receiveAsFlow()\n            .map { router ->\n                when (router) {\n                    is InternalRoute.Activity<*> -> {\n                        journeyMapper.getJourneyOrNull(router.activityRoute)?.let {\n                            InternalRouteSideEffect.NavigateActivity(\n                                activityRoute = it,\n                                argumentMap = router.argumentMap,\n                            )\n                        }\n                    }\n\n                    is InternalRoute.Navigation -> {\n                        InternalRouteSideEffect.Navigate(\n                            navigationRoute = router.navigationRoute,\n                            saveState = router.saveState,\n                        )\n                    }\n\n                    is InternalRoute.NavigateBack -> {\n                        InternalRouteSideEffect.NavigateBack\n                    }\n                }\n            }\n            .filterNotNull()\n    }\n}\n\n\nView에서는\nView에서 SideEffect를 받아 처리하는 코드이다. 주로 화면 이동과 뒤로가기 이벤트를 처리할 수 있다.\nNavigateBack은 Activity와 Navigation 둘 다를 혼용 처리하기 위해 마지막 Entry가 있는지 한 번 더 체크하고 처리하도록 작성되었다.\n첫 화면에서는 보통 <나 X 버튼을 사용하지는 않지만, 적용은 해두었다.\n이 코드에서는 Navigation 처리에 대한 내용이므로 Activity 관련 코드는 제거되었다.\n\n@Composable\nprivate fun InternalLaunchedRouter(\n    navHostController: NavHostController? = null,\n    internalRouterViewModel: InternalRouteViewModel = viewModel(),\n) {\n    val activity = LocalActivity.current\n    val lifecycleOwner = LocalLifecycleOwner.current\n    LaunchedEffect(internalRouterViewModel, lifecycleOwner) {\n        lifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED) {\n            internalRouterViewModel.sideEffect.collectLatest { sideEffect ->\n                when (sideEffect) {\n                    is InternalRouteSideEffect.NavigateBack -> {\n                        if (navHostController?.previousBackStackEntry != null) {\n                            navHostController.popBackStack()\n                        } else {\n                            activity?.finish()\n                        }\n                    }\n\n                    is InternalRouteSideEffect.Navigate -> {\n                        navHostController?.let { navigation ->\n                            navigation.navigate(sideEffect.navigationRoute) {\n                                navigation.graph.findStartDestination().route?.let {\n                                    popUpTo(it) {\n                                        saveState = sideEffect.saveState\n                                    }\n                                }\n                                restoreState = sideEffect.saveState\n                            }\n                        }\n                    }\n\n                    is InternalRouteSideEffect.NavigateActivity -> {\n                        activity?.startActivity(\n                            sideEffect.activityRoute.getActivity(activity).apply {\n                                sideEffect.argumentMap.entries.forEach { (key, value) ->\n                                    putExtra(key, value)\n                                }\n                            }\n                        )\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n이 코드가 처음 소개된 Flow 다이어그램에 해당한다.\n\n정의는?\nNavigationRoute를 상속받아 Route를 구현하고, 이를 Navigation 화면에 적용해야 한다.\n\n@Serializable\nobject SettingsRoute : NavigationRoute\n\n\n그리고 연결할 지점에는 NavGraphBuilder를 통해 네비게이션에서 활용할 composable을 정의하면 된다.\n\nfun NavGraphBuilder.settingsNavGraph() {\n    composable<SettingsRoute> {\n        InternalSettingsScreen()\n    }\n}\n\n\n네비게이션을 활용하는 방법은 기존과 동일하므로, 여기서는 설명은 생략하고 일부 코드를 올려둔다.\n\nScaffold(\n    bottomBar = {\n        NavigationBar {\n            navigationUiState.navigation.forEach { navItem ->\n                NavigationBarItem(\n                    selected = navigationUiState.selectNav == navItem,\n                    onClick = {\n                        onClick(navItem)\n                    },\n                    // 생략\n                )\n            }\n        }\n    },\n    modifier = modifier\n) { innerPadding ->\n    Box(\n        modifier = Modifier\n            .padding(innerPadding)\n            .padding(horizontal = 10.dp)\n    ) {\n        NavHost( // 네비게이션\n            navController = navController,\n            startDestination = NavigationUiState.Default.selectNav.route,\n        ) {\n            searchNavGraph()\n            settingsNavGraph()\n        }\n    }\n}\n\n\nActivity\nActivity 라우팅은 Compose Navigation보다 조금 더 복잡할 수 있다.\n우선 다시 Router 코드로 돌아가서 중요한 부분만 살펴보자. 여기서는 DI인 Dagger를 활용했으니 Dagger를 활용한 방법으로 접근한다.\n먼저 RouterKey라는 MapKey를 정의했다. 이를 활용해서 클래스 정보를 Key/Value로 매핑할 수 있도록 한다.\n\n@MapKey\nannotation class RouteKey(\n    val value: KClass<out ActivityRoute>,\n)\n\n\n그리고 SomeActivityRouter를 정의하고, 이를 상속받아 구현한다. 여기서 getActivity()를 구현해서 Intent 정보를 함께 전달하게 된다.\n\ninternal class MainActivityRouteImpl @Inject constructor() : MainActivityRouter {\n\n    override fun getActivity(context: Context): Intent =\n        Intent(context, MainActivity::class.java)\n}\n\n\nDI를 활용해 이 RouterImpl이 MainActivityRouter임을 알려주기 위해 @IntoMap과 @RouteKey를 활용해서 처리한다.\n\n@Module\n@InstallIn(SingletonComponent::class)\ninternal abstract class MainModule {\n\n    @Binds\n    @IntoMap\n    @RouteKey(MainActivityRouter::class)\n    abstract fun bindMainActivityRoute(\n        mainActivityRoute: MainActivityRouteImpl,\n    ): ActivityRoute\n}\n\n\n위 코드는 KSP(Kotlin Symbol Processing)를 활용하면 더 쉽게 자동화할 수 있다. 어차피 수동으로 만들더라도 같은 패턴만 나오도록 만들면 되기 때문이다. 특히 Activity를 찾는 것이 중요하며, Intent 객체를 처음부터 만드는 것도 아니기에 이러한 접근이 가능하다.\nKSP 관련 글\nAndroid KSP(Kotlin Symbol Processing) 활용을 위한 준비단계! - link\nAndroid KSP(Kotlin Symbol Processing) 활용할 수 있는 샘플 코드 작업 - link\n코드를 실행하면 런타임에 아래의 map: Map<Class<out ActivityRoute>, @JvmSuppressWildcards ActivityRoute> 부분에서 ActivityRoute로 정의한 정보를 찾아 Map 형태로 전달하고 이를 활용할 수 있다.\n아쉽게도 KClass를 바로 활용하려고 했지만, 런타임에서 오류가 발생해서 Java Class를 활용하게 되었다.\n\n@Module\n@InstallIn(SingletonComponent::class)\ninternal object JourneyRouterModule {\n\n    @Provides\n    @Singleton\n    fun providerInternalActivityRouteMapper(\n        map: Map<Class<out ActivityRoute>, @JvmSuppressWildcards ActivityRoute>,\n    ): InternalActivityRouteMapper =\n        InternalActivityRouteMapper(map)\n}\n\n\n마지막으로 접근해야 할 정보는 getJourneyOrNull에서 찾아서 startActivity할 수 있다.\n\n@Singleton\ninternal class InternalActivityRouteMapper @Inject constructor(\n    @get:VisibleForTesting val mapper: Map<Class<out ActivityRoute>, ActivityRoute>,\n) {\n\n    /**\n     * Find and return ActivityRoute from the data stored in Mapper.\n     */\n    internal fun getJourneyOrNull(journeyKClass: KClass<*>): ActivityRoute? =\n        synchronized(mapper) {\n            mapper[journeyKClass.java]\n        }\n}\n\n\nActivity라서\nCompose Navigation에서는 @Serializable object SettingsRoute : NavigationRoute와 같이 @Serializable 데이터 클래스만 정의하면 동작에 문제가 없고, 필요한 데이터도 간단하게 넘겨줄 수 있다.\n하지만 Activity는 필요한 데이터를 넘기기 위해 별도의 arguments를 사용해야 한다는 차이점이 있다.\n그래서 Navigator 인터페이스에 아래와 같이 arguments를 받을 수 있도록 추가해두었다.\n\ninterface Navigator {\n\n    suspend fun <T : ActivityRoute> navigate(\n        activityRoute: KClass<T>,\n        argumentMap: Map<String, Parcelable> = emptyMap(),\n    )\n\n    suspend fun navigate(\n        navigationRoute: NavigationRoute,\n        saveState: Boolean = false,\n    )\n}\n\n\n데이터 전달을 위함이니 Parcelable로 제한해두었다.\nNavigator를 활용하면 getJourneyOrNull 부분을 ViewModel에서 처리하고있음을 아래와 같이 확인할 수 있다.\n\n@HiltViewModel\ninternal class InternalRouteViewModel @Inject internal constructor(\n    navigator: InternalNavigator,\n    private val journeyMapper: InternalActivityRouteMapper,\n) : ViewModel() {\n\n    val sideEffect by lazy(LazyThreadSafetyMode.NONE) {\n        navigator.channel.receiveAsFlow()\n            .map { router ->\n                when (router) {\n                    is InternalRoute.Activity<*> -> {\n                        journeyMapper.getJourneyOrNull(router.activityRoute)?.let {\n                            InternalRouteSideEffect.NavigateActivity(\n                                activityRoute = it,\n                                argumentMap = router.argumentMap,\n                            )\n                        }\n                    }\n                }\n            }\n            .filterNotNull()\n    }\n}\n\n\n이 코드 부분을 도식화한 부분이 아래와 같다.\n\n정리하면\nView에서 화면 이동 이벤트가 발생한다.\nViewModel에서 Navigator를 통해 Activity/Compose Navigation으로 이벤트를 이동 요청한다.\n    \nActivity 이동: DI를 통해 주입받은 ActivityRoute 정보를 자동으로 매핑하여 InternalActivityRouteMapper에 사전 보관된 정보와 매칭하여 startActivity를 호출한다.\nNavigation 이동: Compose Navigation을 통해 Map에 포함되어있을 경우 이동한다.\n남은 작업은 다음과 같다.\nActivityResult 처리\nNavigationResult 처리\n사용법\n앞서 소개한 Action과 다르게 Router는 Activity를 기반하여 동작한다. A/B Activity가 있다고 하더라도, InternalActivityRouteMapper는 싱글턴이지만 실제 동작은 서로 무관하게 동작한다.\n그래서 각 Activity마다 아래와 같은 코드를 선택적으로 주입해 주어야 한다. 싱글 액티비티 구조라면 당연히 하나면 충분하지만, 서브 네비게이션에 대한 구조를 적용하지 않아서 현재는 모든 경우에 대응되지는 않는다.\n\nval navHostController = rememberNavController()\nLaunchedRouter(navHostController)\n\n// or\nLaunchedRouter() // navHostController default null\n\n\nNext\nAction을 새로 짜면서 Router도 몇 번의 수정이 있었다.\n기존 Action 방식에서의 문제점은 다음과 같았다.\nA/B/C 화면 어디서든 동일한 이벤트인 뒤로가기(back) 이벤트를 받는다면, 모든 화면에서 action을 처리해버리고 원치 않는 종료가 일어날 수 있다는 점이었다. 사이드 이펙트를 통해 막을 수는 있었지만 근본적인 문제 해결도 아니고, 오히려 복잡성을 높이는 코드였기에 수정되면서 원래 사용하던 방식으로 되돌아갔다는 점이다.\n더 나아가 네비게이션에서만 Router를 활용하고 싶다면 드로이드 나이츠 코드를 참고해보면 좋을 것 같다.\ndroidknights 2025 - Router\n작성 글 이어보기\n1부 - 컴포즈에 사용할 Composable Architecture 설명(리엑트?)\n2부 - Composable Architecture는 만들었는데 문제가 있었네? 개선해보자.\n3부 - Composable Architecture에서는 Alert/Toast는 어떻게 사용할 수 있는가?\n다시 - Composable Architecture 설계 변경",
        "guid": "https://thdev.tech/architecture/2025/06/02/Android-Architecture-new-02/",
        "isoDate": "2025-06-02T00:00:00.000Z"
      },
      {
        "title": "다시 - Composable Architecture 설계 변경",
        "link": "https://thdev.tech/architecture/2025/06/01/Android-Architecture-new-01/",
        "pubDate": "Sun, 01 Jun 2025 00:00:00 +0000",
        "content": "<p>Composable Architecture에 대한 세 편의 글에 이어 이번 글을 작성하게 되었다. 이번에는 전반적인 설계가 변경되어 사실상 새로운 아키텍처라고 볼 수 있다.</p>\n\n<h3>가장 큰 변화는 무엇인가?</h3>\n\n<ul>\n  <li>싱글턴으로 활용하던 <code class=\"language-plaintext highlighter-rouge\">Action</code>을 <code class=\"language-plaintext highlighter-rouge\">ViewModel</code>에 한정하여 사용하도록 변경했다.</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">Router</code>를 새로 추가했으며, <code class=\"language-plaintext highlighter-rouge\">Action</code>과 독립적으로 동작하도록 개선했다.</li>\n</ul>\n\n<h3>이 글에서는</h3>\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">Action</code> 활용법 개선 방안을 알아본다.</li>\n  <li>이전 설계에서 발생했던 문제점들을 짚어본다.</li>\n</ul>\n\n<!--more-->\n\n<h2>설명에 포함된 샘플 화면</h2>\n\n<p>이 글의 설명은 다음 샘플 프로젝트를 기반으로 한다.</p>\n\n<p><a href=\"https://github.com/taehwandev/TComposableArchitecture\">TComposableArchitecture - GitHub - link</a></p>\n\n<p><img src=\"/images/posts/2025/Android-Architecture-new-01/sample_01.jpg\" alt=\"sample_01\" /></p>\n\n<h2>Action은 그대로 사용하지만, 범위는 제한한다.</h2>\n\n<p><code class=\"language-plaintext highlighter-rouge\">Action</code> 자체는 이전과 동일하게 사용한다. 하지만 기존에는 싱글턴으로 어디서든 접근하고 활용할 수 있었던 점을, 이제는 Compose와 ViewModel 간의 1:1 관계로 한정했다.</p>\n\n<p><img src=\"/images/posts/2025/Android-Architecture-01/sample_02.png\" alt=\"sample_02\" /></p>\n\n<p>이로 인해 ActionViewModel이라는 BaseViewModel이 추가되었다. 이 ViewModel은 Action을 활용하기 위한 핵심 동작 코드를 포함하고 있다. 특히, flowAction을 처리하는 코드가 이곳에 위치한다.</p>\n\n<p><a href=\"https://github.com/taehwandev/TComposableArchitecture/blob/main/core/ui/composable-architecture-system/src/main/java/tech/thdev/composable/architecture/action/system/base/ActionViewModel.kt\">ActionViewModel - link</a></p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">abstract</span> <span class=\"kd\">class</span> <span class=\"nc\">ActionViewModel</span><span class=\"p\">&lt;</span><span class=\"nc\">ACTION</span> <span class=\"p\">:</span> <span class=\"nc\">Action</span><span class=\"p\">&gt;(</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">flowActionStream</span><span class=\"p\">:</span> <span class=\"nc\">FlowActionStream</span><span class=\"p\">,</span>\n    <span class=\"n\">actionClass</span><span class=\"p\">:</span> <span class=\"nc\">KClass</span><span class=\"p\">&lt;</span><span class=\"nc\">ACTION</span><span class=\"p\">&gt;,</span>\n<span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">ViewModel</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"nd\">@Inject</span>\n    <span class=\"k\">internal</span> <span class=\"k\">lateinit</span> <span class=\"kd\">var</span> <span class=\"py\">actionSender</span><span class=\"p\">:</span> <span class=\"nc\">ActionSender</span>\n\n    <span class=\"nd\">@VisibleForTesting</span>\n    <span class=\"kd\">var</span> <span class=\"py\">flowActionJob</span><span class=\"p\">:</span> <span class=\"nc\">Job</span><span class=\"p\">?</span> <span class=\"p\">=</span> <span class=\"k\">null</span>\n\n    <span class=\"nd\">@VisibleForTesting</span>\n    <span class=\"kd\">val</span> <span class=\"py\">flowAction</span> <span class=\"k\">by</span> <span class=\"nf\">lazy</span> <span class=\"p\">{</span>\n        <span class=\"n\">flowActionStream</span><span class=\"p\">.</span><span class=\"nf\">flowAction</span><span class=\"p\">()</span>\n            <span class=\"p\">.</span><span class=\"nf\">filterIsInstance</span><span class=\"p\">(</span><span class=\"n\">actionClass</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nf\">onEach</span> <span class=\"p\">{</span>\n                <span class=\"nf\">handleAction</span><span class=\"p\">(</span><span class=\"n\">action</span> <span class=\"p\">=</span> <span class=\"n\">it</span><span class=\"p\">)</span> <span class=\"c1\">// Action을 처리하기 위함</span>\n            <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">internal</span> <span class=\"k\">fun</span> <span class=\"nf\">loadAction</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"nf\">cancelAction</span><span class=\"p\">()</span>\n\n        <span class=\"n\">flowActionJob</span> <span class=\"p\">=</span> <span class=\"n\">flowAction</span>\n            <span class=\"p\">.</span><span class=\"nf\">launchIn</span><span class=\"p\">(</span><span class=\"n\">viewModelScope</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"cm\">/**\n     * ViewModel created only call once.\n     */</span>\n    <span class=\"k\">open</span> <span class=\"k\">fun</span> <span class=\"nf\">onCreated</span><span class=\"p\">()</span> <span class=\"p\">{}</span>\n\n    <span class=\"k\">internal</span> <span class=\"k\">fun</span> <span class=\"nf\">cancelAction</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">flowActionJob</span><span class=\"o\">?.</span><span class=\"n\">isActive</span> <span class=\"p\">==</span> <span class=\"k\">true</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">flowActionJob</span><span class=\"o\">?.</span><span class=\"nf\">cancel</span><span class=\"p\">()</span>\n            <span class=\"n\">flowActionJob</span> <span class=\"p\">=</span> <span class=\"k\">null</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">fun</span> <span class=\"nf\">nextAction</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">:</span> <span class=\"nc\">ACTION</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">flowActionStream</span><span class=\"p\">.</span><span class=\"nf\">nextAction</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">abstract</span> <span class=\"k\">suspend</span> <span class=\"k\">fun</span> <span class=\"nf\">handleAction</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">:</span> <span class=\"nc\">ACTION</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>Base ViewModel은 어디까지나 사용 편의성을 위한 것이므로, <code class=\"language-plaintext highlighter-rouge\">internal</code> 키워드를 통해 불필요한 외부 접근을 최소한으로 제한한다.</p>\n\n<h3>ActionViewModel 활용 예시</h3>\n\n<p><a href=\"https://github.com/taehwandev/TComposableArchitecture/blob/main/sample/feature/main/screen/screen-settings/src/main/java/tech/thdev/composable/architecture/sample/feature/main/screen/settings/SettingsViewModel.kt\">SettingsViewModel - link</a>에서 전체 코드를 확인할 수 있다. 여기서는 UiState를 통해 화면을 갱신하고, Action을 통해 이벤트를 업데이트하는 과정을 적용한다.</p>\n\n<p>관련 코드는 다음과 같습니다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@HiltViewModel</span>\n<span class=\"k\">internal</span> <span class=\"kd\">class</span> <span class=\"nc\">SettingsViewModel</span> <span class=\"nd\">@Inject</span> <span class=\"k\">constructor</span><span class=\"p\">(</span>\n    <span class=\"n\">flowActionStream</span><span class=\"p\">:</span> <span class=\"nc\">FlowActionStream</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">ActionViewModel</span><span class=\"p\">&lt;</span><span class=\"nc\">SettingsAction</span><span class=\"p\">&gt;(</span><span class=\"n\">flowActionStream</span><span class=\"p\">,</span> <span class=\"nc\">SettingsAction</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n    <span class=\"c1\">// UI의 상태를 업데이트합니다.</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">_settingsUiState</span> <span class=\"p\">=</span> <span class=\"nc\">MutableStateFlow</span><span class=\"p\">(</span><span class=\"nc\">SettingsUiState</span><span class=\"p\">.</span><span class=\"nc\">Default</span><span class=\"p\">)</span>\n    <span class=\"kd\">val</span> <span class=\"py\">settingsUiState</span> <span class=\"p\">=</span> <span class=\"n\">_settingsUiState</span><span class=\"p\">.</span><span class=\"nf\">asStateFlow</span><span class=\"p\">()</span>\n\n    <span class=\"k\">override</span> <span class=\"k\">suspend</span> <span class=\"k\">fun</span> <span class=\"nf\">handleAction</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">:</span> <span class=\"nc\">SettingsAction</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">when</span> <span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">is</span> <span class=\"nc\">SettingsAction</span><span class=\"p\">.</span><span class=\"nc\">ThemeModeChange</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span> <span class=\"c1\">// action으로 들어온 ThemeModeChange 이벤트를 처리합니다.</span>\n                <span class=\"n\">_settingsUiState</span><span class=\"p\">.</span><span class=\"nf\">update</span> <span class=\"p\">{</span>\n                    <span class=\"n\">it</span><span class=\"p\">.</span><span class=\"nf\">copy</span><span class=\"p\">(</span>\n                        <span class=\"n\">mode</span> <span class=\"p\">=</span> <span class=\"n\">action</span><span class=\"p\">.</span><span class=\"n\">mode</span><span class=\"p\">,</span>\n                    <span class=\"p\">)</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h2>UI에서의 사용 방법</h2>\n\n<p>개발하다 보면 활용성을 높이기 위한 방식으로 접근할 수밖에 없다. 이는 새로운 방식에 익숙해지는 시간과 노력이 필요하다는 의미이기도 한다.</p>\n\n<p>하지만 기존 방식보다는 훨씬 쉽게 접근하면서도 사이드 이펙트 발생을 최소화하는 형태로 접근한다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Composable</span>\n<span class=\"k\">internal</span> <span class=\"k\">fun</span> <span class=\"nf\">InternalSettingsScreen</span><span class=\"p\">(</span>\n    <span class=\"n\">settingsViewModel</span><span class=\"p\">:</span> <span class=\"nc\">SettingsViewModel</span> <span class=\"p\">=</span> <span class=\"nf\">hiltViewModel</span><span class=\"p\">(),</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nc\">ActionSenderCompositionLocalProvider</span><span class=\"p\">(</span><span class=\"n\">settingsViewModel</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"c1\">// 필수로 필요</span>\n        <span class=\"kd\">val</span> <span class=\"py\">settingsUiState</span> <span class=\"k\">by</span> <span class=\"n\">settingsViewModel</span><span class=\"p\">.</span><span class=\"n\">settingsUiState</span><span class=\"p\">.</span><span class=\"nf\">collectAsStateWithLifecycle</span><span class=\"p\">()</span>\n\n        <span class=\"nc\">InternalSettingsScreen</span><span class=\"p\">(</span>\n            <span class=\"c1\">// Your screen paramater</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p><code class=\"language-plaintext highlighter-rouge\">ActionSenderCompositionLocalProvider</code>를 추가해야 합니다. 기존에는 싱글턴이었기 때문에 Activity에서 이를 처리했지만, 이제는 ViewModel이 필요한 시점에 즉시 추가할 수 있습니다.</p>\n\n<p>만약 Action을 활용하지 않겠다면 직접 구현하여 사용할 수 있지만, Lifecycle만 사용하겠다면 <code class=\"language-plaintext highlighter-rouge\">LaunchedLifecycleActionViewModel</code>을 호출해야 합니다.</p>\n\n<p>이 코드에서는 <code class=\"language-plaintext highlighter-rouge\">CompositionLocalProvider</code>를 활용하여 범위가 지정된 ActionSender를 사용하기 위해 <code class=\"language-plaintext highlighter-rouge\">ActionSenderCompositionLocalProvider</code>를 활용합니다.</p>\n\n<h2>ActionViewModel에 대한 Unit Test</h2>\n\n<p>Unit Test를 통해 로직 테스트를 진행할 수 있다. 물론 <code class=\"language-plaintext highlighter-rouge\">ActionSenderCompositionLocalProvider</code>가 적용되지 않았다는 점은 직접 UI를 눌러보며 테스트하거나, UI Test를 진행해야 한다.</p>\n\n<p>여기서는 Unit Test 코드를 살펴보겠다.</p>\n\n<p>위 샘플 코드에서 한 가지 시나리오를 기반으로 Unit Test가 가능하다.</p>\n\n<ul>\n  <li>View에서 Theme 옵션 중 하나를 선택한다.</li>\n  <li>Repository를 통해 로컬 데이터 업데이트를 처리한다. (이 코드에는 포함되어 있지 않는다.)</li>\n  <li>업데이트가 성공하면 UI를 갱신한다.</li>\n</ul>\n\n<p>여기서는 Mockito, Turbine, Coroutines Test를 활용하여 Unit Test를 진행한다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">internal</span> <span class=\"kd\">class</span> <span class=\"nc\">SettingsViewModelTest</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">flowActionStream</span> <span class=\"p\">=</span> <span class=\"n\">mock</span><span class=\"p\">&lt;</span><span class=\"nc\">FlowActionStream</span><span class=\"p\">&gt;()</span>\n\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">viewModel</span> <span class=\"p\">=</span> <span class=\"nc\">SettingsViewModel</span><span class=\"p\">(</span>\n        <span class=\"n\">flowActionStream</span> <span class=\"p\">=</span> <span class=\"n\">flowActionStream</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"nd\">@Test</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">`test</span> <span class=\"nc\">ThemeModeChange`</span><span class=\"p\">()</span> <span class=\"p\">=</span> <span class=\"nf\">runTest</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// UI에서 DARK 테마 변경 버튼을 눌렀다고 가정합니다.</span>\n        <span class=\"kd\">val</span> <span class=\"py\">mockItem</span> <span class=\"p\">=</span> <span class=\"nc\">SettingsAction</span><span class=\"p\">.</span><span class=\"nc\">ThemeModeChange</span><span class=\"p\">(</span><span class=\"n\">mode</span> <span class=\"p\">=</span> <span class=\"nc\">SettingsUiState</span><span class=\"p\">.</span><span class=\"nc\">Mode</span><span class=\"p\">.</span><span class=\"nc\">DARK</span><span class=\"p\">)</span>\n        <span class=\"c1\">// flowAction에서 이를 전달해줍니다.</span>\n        <span class=\"nf\">whenever</span><span class=\"p\">(</span><span class=\"n\">flowActionStream</span><span class=\"p\">.</span><span class=\"nf\">flowAction</span><span class=\"p\">()).</span><span class=\"nf\">thenReturn</span><span class=\"p\">(</span><span class=\"nf\">flowOf</span><span class=\"p\">(</span><span class=\"n\">mockItem</span><span class=\"p\">))</span>\n\n        <span class=\"n\">viewModel</span><span class=\"p\">.</span><span class=\"n\">flowAction</span>\n            <span class=\"p\">.</span><span class=\"nf\">test</span> <span class=\"p\">{</span> <span class=\"c1\">// 구독 및 테스트 시작</span>\n                <span class=\"c1\">// awaitItem()을 통해 눌린 정보를 확인합니다.</span>\n                <span class=\"nc\">Assert</span><span class=\"p\">.</span><span class=\"nf\">assertEquals</span><span class=\"p\">(</span>\n                    <span class=\"nc\">SettingsAction</span><span class=\"p\">.</span><span class=\"nc\">ThemeModeChange</span><span class=\"p\">(</span><span class=\"n\">mode</span> <span class=\"p\">=</span> <span class=\"nc\">SettingsUiState</span><span class=\"p\">.</span><span class=\"nc\">Mode</span><span class=\"p\">.</span><span class=\"nc\">DARK</span><span class=\"p\">),</span>\n                    <span class=\"nf\">awaitItem</span><span class=\"p\">()</span>\n                <span class=\"p\">)</span>\n\n                <span class=\"c1\">// UiState 갱신을 확인합니다.</span>\n                <span class=\"nc\">Assert</span><span class=\"p\">.</span><span class=\"nf\">assertEquals</span><span class=\"p\">(</span>\n                    <span class=\"nc\">SettingsUiState</span><span class=\"p\">(</span>\n                        <span class=\"n\">mode</span> <span class=\"p\">=</span> <span class=\"nc\">SettingsUiState</span><span class=\"p\">.</span><span class=\"nc\">Mode</span><span class=\"p\">.</span><span class=\"nc\">DARK</span><span class=\"p\">,</span>\n                    <span class=\"p\">),</span>\n                    <span class=\"n\">viewModel</span><span class=\"p\">.</span><span class=\"n\">settingsUiState</span><span class=\"p\">.</span><span class=\"n\">value</span>\n                <span class=\"p\">)</span>\n\n                <span class=\"c1\">// Mockito를 활용하였으므로 flowAction 이벤트가 들어왔는지 확인합니다.</span>\n                <span class=\"nf\">verify</span><span class=\"p\">(</span><span class=\"n\">flowActionStream</span><span class=\"p\">).</span><span class=\"nf\">flowAction</span><span class=\"p\">()</span>\n\n                <span class=\"nf\">cancelAndIgnoreRemainingEvents</span><span class=\"p\">()</span>\n            <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h2>설계 방향</h2>\n\n<p>원래의 설계는 이 Action을 활용하여 앱 전체에 하나의 Event Bus를 만들 생각이었다. 하지만 사용하다 보니 단점이 더 많아 이 부분을 제거하고, View와 ViewModel 간의 1:1 관계로 제약했다.</p>\n\n<p>싱글턴을 제한하기 위해 두 번째 글을 작성했지만, 결국 그 부분도 설계상의 미스가 있었기에, 완전히 새롭게 1:1로 한정한 Action으로 개선했다.</p>\n\n<p><a href=\"https://thdev.tech/architecture/2025/04/15/Android-Architecture-02/\">2부 - Composable Architecture는 만들었는데 문제가 있었네? 개선해보자.</a></p>\n\n<h2>Next</h2>\n\n<p>이로 인해 전역 <code class=\"language-plaintext highlighter-rouge\">Action</code>을 통해 처리할 수 있었던 Alert/Toast, Router 시스템도 새로 만들어야 했다.</p>\n\n<p>달라진 점이라면 이제 정말 필요할 때 <code class=\"language-plaintext highlighter-rouge\">Action</code>과 무관하게 단독으로 사용할 수 있게 되었다는 점이다.</p>\n\n<ul>\n  <li>Router: 액티비티, 내비게이션 간 화면 이동과 처리를 담당하며, Navigator를 활용해 화면 이동이 가능하다.\n    <ul>\n      <li>이전에는 액션을 통해 이를 활용하던 부분은 모두 제거되어 코드에 반영되어 있다. 이 내용은 다음 글에서 자세히 다룰 예정이다.</li>\n    </ul>\n  </li>\n  <li>Alert/Toast: Action을 통해 이벤트를 전달하고 전달받는 처리를 하려고 했으나, Action 개선으로 단독 시스템으로 만들어질 예정이다. (샘플이라고 생각하는 것이 맞다.)</li>\n</ul>\n\n<p>기반 코드가 변경되었으니, 완전히 새로운 형태의 아키텍처라고 보는 것이 더 적절할 것이다.</p>\n\n<p>Router 부분에서 싱글 액티비티를 활용하는 부분은 드로이드 나이츠 코드에 반영되어 있다.</p>\n\n<p><a href=\"https://github.com/droidknights/DroidKnightsApp/tree/2025/app/core/router\">droidknights 2025 - Router</a></p>\n\n<h2>작성 글 이어보기</h2>\n\n<ul>\n  <li><a href=\"https://thdev.tech/architecture/2025/02/02/Android-Architecture-01/\">1부 - 컴포즈에 사용할 Composable Architecture 설명(리엑트?)</a></li>\n  <li><a href=\"https://thdev.tech/architecture/2025/04/15/Android-Architecture-02/\">2부 - Composable Architecture는 만들었는데 문제가 있었네? 개선해보자.</a></li>\n  <li><a href=\"https://thdev.tech/architecture/2025/04/20/Android-Architecture-03/\">3부 - Composable Architecture에서는 Alert/Toast는 어떻게 사용할 수 있는가?</a></li>\n</ul>\n\n",
        "contentSnippet": "Composable Architecture에 대한 세 편의 글에 이어 이번 글을 작성하게 되었다. 이번에는 전반적인 설계가 변경되어 사실상 새로운 아키텍처라고 볼 수 있다.\n가장 큰 변화는 무엇인가?\n싱글턴으로 활용하던 Action을 ViewModel에 한정하여 사용하도록 변경했다.\nRouter를 새로 추가했으며, Action과 독립적으로 동작하도록 개선했다.\n이 글에서는\nAction 활용법 개선 방안을 알아본다.\n이전 설계에서 발생했던 문제점들을 짚어본다.\n설명에 포함된 샘플 화면\n이 글의 설명은 다음 샘플 프로젝트를 기반으로 한다.\nTComposableArchitecture - GitHub - link\n\nAction은 그대로 사용하지만, 범위는 제한한다.\nAction 자체는 이전과 동일하게 사용한다. 하지만 기존에는 싱글턴으로 어디서든 접근하고 활용할 수 있었던 점을, 이제는 Compose와 ViewModel 간의 1:1 관계로 한정했다.\n\n이로 인해 ActionViewModel이라는 BaseViewModel이 추가되었다. 이 ViewModel은 Action을 활용하기 위한 핵심 동작 코드를 포함하고 있다. 특히, flowAction을 처리하는 코드가 이곳에 위치한다.\nActionViewModel - link\n\nabstract class ActionViewModel<ACTION : Action>(\n    private val flowActionStream: FlowActionStream,\n    actionClass: KClass<ACTION>,\n) : ViewModel() {\n\n    @Inject\n    internal lateinit var actionSender: ActionSender\n\n    @VisibleForTesting\n    var flowActionJob: Job? = null\n\n    @VisibleForTesting\n    val flowAction by lazy {\n        flowActionStream.flowAction()\n            .filterIsInstance(actionClass)\n            .onEach {\n                handleAction(action = it) // Action을 처리하기 위함\n            }\n    }\n\n    internal fun loadAction() {\n        cancelAction()\n\n        flowActionJob = flowAction\n            .launchIn(viewModelScope)\n    }\n\n    /**\n     * ViewModel created only call once.\n     */\n    open fun onCreated() {}\n\n    internal fun cancelAction() {\n        if (flowActionJob?.isActive == true) {\n            flowActionJob?.cancel()\n            flowActionJob = null\n        }\n    }\n\n    fun nextAction(action: ACTION) {\n        flowActionStream.nextAction(action)\n    }\n\n    abstract suspend fun handleAction(action: ACTION)\n}\n\n\nBase ViewModel은 어디까지나 사용 편의성을 위한 것이므로, internal 키워드를 통해 불필요한 외부 접근을 최소한으로 제한한다.\nActionViewModel 활용 예시\nSettingsViewModel - link에서 전체 코드를 확인할 수 있다. 여기서는 UiState를 통해 화면을 갱신하고, Action을 통해 이벤트를 업데이트하는 과정을 적용한다.\n관련 코드는 다음과 같습니다.\n\n@HiltViewModel\ninternal class SettingsViewModel @Inject constructor(\n    flowActionStream: FlowActionStream,\n) : ActionViewModel<SettingsAction>(flowActionStream, SettingsAction::class) {\n\n    // UI의 상태를 업데이트합니다.\n    private val _settingsUiState = MutableStateFlow(SettingsUiState.Default)\n    val settingsUiState = _settingsUiState.asStateFlow()\n\n    override suspend fun handleAction(action: SettingsAction) {\n        when (action) {\n            is SettingsAction.ThemeModeChange -> { // action으로 들어온 ThemeModeChange 이벤트를 처리합니다.\n                _settingsUiState.update {\n                    it.copy(\n                        mode = action.mode,\n                    )\n                }\n            }\n        }\n    }\n}\n\n\nUI에서의 사용 방법\n개발하다 보면 활용성을 높이기 위한 방식으로 접근할 수밖에 없다. 이는 새로운 방식에 익숙해지는 시간과 노력이 필요하다는 의미이기도 한다.\n하지만 기존 방식보다는 훨씬 쉽게 접근하면서도 사이드 이펙트 발생을 최소화하는 형태로 접근한다.\n\n@Composable\ninternal fun InternalSettingsScreen(\n    settingsViewModel: SettingsViewModel = hiltViewModel(),\n) {\n    ActionSenderCompositionLocalProvider(settingsViewModel) { // 필수로 필요\n        val settingsUiState by settingsViewModel.settingsUiState.collectAsStateWithLifecycle()\n\n        InternalSettingsScreen(\n            // Your screen paramater\n        )\n    }\n}\n\n\nActionSenderCompositionLocalProvider를 추가해야 합니다. 기존에는 싱글턴이었기 때문에 Activity에서 이를 처리했지만, 이제는 ViewModel이 필요한 시점에 즉시 추가할 수 있습니다.\n만약 Action을 활용하지 않겠다면 직접 구현하여 사용할 수 있지만, Lifecycle만 사용하겠다면 LaunchedLifecycleActionViewModel을 호출해야 합니다.\n이 코드에서는 CompositionLocalProvider를 활용하여 범위가 지정된 ActionSender를 사용하기 위해 ActionSenderCompositionLocalProvider를 활용합니다.\nActionViewModel에 대한 Unit Test\nUnit Test를 통해 로직 테스트를 진행할 수 있다. 물론 ActionSenderCompositionLocalProvider가 적용되지 않았다는 점은 직접 UI를 눌러보며 테스트하거나, UI Test를 진행해야 한다.\n여기서는 Unit Test 코드를 살펴보겠다.\n위 샘플 코드에서 한 가지 시나리오를 기반으로 Unit Test가 가능하다.\nView에서 Theme 옵션 중 하나를 선택한다.\nRepository를 통해 로컬 데이터 업데이트를 처리한다. (이 코드에는 포함되어 있지 않는다.)\n업데이트가 성공하면 UI를 갱신한다.\n여기서는 Mockito, Turbine, Coroutines Test를 활용하여 Unit Test를 진행한다.\n\ninternal class SettingsViewModelTest {\n\n    private val flowActionStream = mock<FlowActionStream>()\n\n    private val viewModel = SettingsViewModel(\n        flowActionStream = flowActionStream,\n    )\n\n    @Test\n    fun `test ThemeModeChange`() = runTest {\n        // UI에서 DARK 테마 변경 버튼을 눌렀다고 가정합니다.\n        val mockItem = SettingsAction.ThemeModeChange(mode = SettingsUiState.Mode.DARK)\n        // flowAction에서 이를 전달해줍니다.\n        whenever(flowActionStream.flowAction()).thenReturn(flowOf(mockItem))\n\n        viewModel.flowAction\n            .test { // 구독 및 테스트 시작\n                // awaitItem()을 통해 눌린 정보를 확인합니다.\n                Assert.assertEquals(\n                    SettingsAction.ThemeModeChange(mode = SettingsUiState.Mode.DARK),\n                    awaitItem()\n                )\n\n                // UiState 갱신을 확인합니다.\n                Assert.assertEquals(\n                    SettingsUiState(\n                        mode = SettingsUiState.Mode.DARK,\n                    ),\n                    viewModel.settingsUiState.value\n                )\n\n                // Mockito를 활용하였으므로 flowAction 이벤트가 들어왔는지 확인합니다.\n                verify(flowActionStream).flowAction()\n\n                cancelAndIgnoreRemainingEvents()\n            }\n    }\n}\n\n\n설계 방향\n원래의 설계는 이 Action을 활용하여 앱 전체에 하나의 Event Bus를 만들 생각이었다. 하지만 사용하다 보니 단점이 더 많아 이 부분을 제거하고, View와 ViewModel 간의 1:1 관계로 제약했다.\n싱글턴을 제한하기 위해 두 번째 글을 작성했지만, 결국 그 부분도 설계상의 미스가 있었기에, 완전히 새롭게 1:1로 한정한 Action으로 개선했다.\n2부 - Composable Architecture는 만들었는데 문제가 있었네? 개선해보자.\nNext\n이로 인해 전역 Action을 통해 처리할 수 있었던 Alert/Toast, Router 시스템도 새로 만들어야 했다.\n달라진 점이라면 이제 정말 필요할 때 Action과 무관하게 단독으로 사용할 수 있게 되었다는 점이다.\nRouter: 액티비티, 내비게이션 간 화면 이동과 처리를 담당하며, Navigator를 활용해 화면 이동이 가능하다.\n    \n이전에는 액션을 통해 이를 활용하던 부분은 모두 제거되어 코드에 반영되어 있다. 이 내용은 다음 글에서 자세히 다룰 예정이다.\nAlert/Toast: Action을 통해 이벤트를 전달하고 전달받는 처리를 하려고 했으나, Action 개선으로 단독 시스템으로 만들어질 예정이다. (샘플이라고 생각하는 것이 맞다.)\n기반 코드가 변경되었으니, 완전히 새로운 형태의 아키텍처라고 보는 것이 더 적절할 것이다.\nRouter 부분에서 싱글 액티비티를 활용하는 부분은 드로이드 나이츠 코드에 반영되어 있다.\ndroidknights 2025 - Router\n작성 글 이어보기\n1부 - 컴포즈에 사용할 Composable Architecture 설명(리엑트?)\n2부 - Composable Architecture는 만들었는데 문제가 있었네? 개선해보자.\n3부 - Composable Architecture에서는 Alert/Toast는 어떻게 사용할 수 있는가?",
        "guid": "https://thdev.tech/architecture/2025/06/01/Android-Architecture-new-01/",
        "isoDate": "2025-06-01T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Lael's World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "AI 리서치 끝판왕 - 제미나이 딥리서치 GEM 지침 배포 (무료 시각화까지!)",
        "link": "http://muzbox.tistory.com/483602",
        "pubDate": "Sun, 1 Jun 2025 12:43:34 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483602#entry483602comment",
        "content": "<div style=\"background-color: #e0f7fa; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px; border: 1px solid #b2ebf2;\"><b>✨ 제미나이 딥리서치, GEM 지침으로 날개를 달아보세요!</b> 여러분의 AI 활용 수준을 한 단계 업그레이드할 비밀 병기, GEM 지침을 소개합니다. 간단한 질문만으로는 얻을 수 없었던 전문가 수준의 분석 보고서를 직접 경험해보세요!</div>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1536\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/eiAQEQ/btsOlWaxQTl/EK5g1DV33aUPKK57xWyck1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/eiAQEQ/btsOlWaxQTl/EK5g1DV33aUPKK57xWyck1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/eiAQEQ/btsOlWaxQTl/EK5g1DV33aUPKK57xWyck1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FeiAQEQ%2FbtsOlWaxQTl%2FEK5g1DV33aUPKK57xWyck1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"제미나이 딥리서치 GEM 지침 배포\" loading=\"lazy\" width=\"1536\" height=\"1024\" data-origin-width=\"1536\" data-origin-height=\"1024\"/></span></figure>\n</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">혹시 AI에게 질문했을 때, \"음... 뭔가 알맹이가 빠진 것 같은데?\" 혹은 \"출처가 어디지?\" 하며 고개를 갸웃했던 경험, 다들 한 번쯤 있으시죠? 특히 과제나 보고서처럼 정확하고 깊이 있는 정보가 필요할 때는 더욱 답답함을 느끼셨을 거예요. 최신 정보, 실시간 데이터, 신뢰할 수 있는 출처에 기반한 분석. 이게 바로 우리가 AI에게 진짜 원하는 거잖아요!</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">최근 ChatGPT, Claude, Gemini 같은 AI 모델들이 앞다투어 '딥리서치' 기능을 선보이는 이유도 바로 여기에 있습니다. 단순히 웹 검색 결과를 나열하는 것을 넘어, <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">실시간으로 웹을 탐색하고, 최신 논문을 찾고, 신뢰할 수 있는 데이터를 수집해 분석까지 해주는</span> 정말 똑똑한 기능이죠. 하지만 이 강력한 딥리서치 기능도 제대로 활용하지 못하면 무용지물이랍니다. 오늘 제가 그 봉인 해제 방법을 알려드릴게요!  </p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>딥리서치, 왜 그냥 검색이랑 다를까요?  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">\"딥리서치? 그거 그냥 구글링 잘하는 거 아니야?\" 라고 생각하실 수도 있지만, 전혀 그렇지 않아요! 일반 웹 검색은 단순히 정보를 찾아 보여주는 데 그치지만, 딥리서치는 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">마치 숙련된 연구원처럼 정보를 탐색, 검증, 요약하고 비판적으로 재구성하는 과정</span>을 거칩니다. 훨씬 더 깊이 있고 신뢰도 높은 결과물을 만들어내는 거죠.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">하지만 대부분의 사람들이 AI에게 \"○○에 대해 조사해줘\"처럼 너무 막연하게 질문하는 경우가 많아요. 이렇게 하면 딥리서치 기능을 켜도 AI가 어떤 관점에서, 무엇을 중점적으로 찾아야 할지 몰라 표면적인 정보만 가져오게 됩니다. 실제로 제가 간단한 프롬프트로 딥리서치를 요청했을 때는 일반화된 문장과 출처 불명의 정보만 얻었지만, 제가 개발한 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">GEM 지침을 활용한 구조화된 프롬프트</span>를 사용했을 때는 실제 수치, 표, 그래프, 논문 인용까지 포함된 증거 기반의 답변을 받을 수 있었어요. 엄청난 차이죠?</p>\n<div style=\"background-color: #e0f2f7; border-left: 4px solid #4dd0e1; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>  알아두세요! 딥리서치의 작동 과정</b><br />딥리서치는 다음과 같은 체계적인 단계를 거쳐요:<br />\n<ol style=\"margin: 10px 0 0 20px; padding: 0;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 5px;\"><b>의도 파악 및 쿼리 분해:</b> 사용자의 복잡한 요청을 구체적인 질문들로 나눕니다.</li>\n<li style=\"margin-bottom: 5px;\"><b>문서 검색:</b> 웹, 학술 데이터베이스, API 등 다양한 소스에서 정보를 찾습니다.</li>\n<li style=\"margin-bottom: 5px;\"><b>근거 중심 응답 구성:</b> 수집된 정보를 바탕으로 신뢰할 수 있는 답변을 만듭니다.</li>\n<li style=\"margin-bottom: 5px;\"><b>출처 명시 및 비판적 요약:</b> 정보의 출처를 명확히 밝히고, 비판적인 시각에서 요약합니다.</li>\n<li style=\"margin-bottom: 0;\"><b>응답 구조화:</b> 사용자가 이해하기 쉽도록 답변을 체계적으로 정리합니다.</li>\n</ol>\n</div>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>마법의 열쇠, GEM 지침이란 무엇일까요?  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 놀라운 차이를 만드는 것이 바로 제가 개발한 <b>GEM 지침</b>입니다! 여기서 GEM은 Google Gemini에서 제공하는 '사용자 맞춤형 AI 비서' 기능을 의미해요. 즉, 여러분만의 똑똑한 AI 어시스턴트를 만들 수 있는 기능이죠. 물론 이 GEM 지침은 ChatGPT나 Claude 같은 다른 AI 모델에서도 활용할 수 있지만, 제미나이의 GEM 기능과 함께 사용할 때 그 효과가 극대화된답니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">제미나이가 딥리서치에 특히 강력한 이유는 제미나이의 뛰어난 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">멀티모달 능력과 강력한 추론 능력</span> 덕분이에요. 텍스트뿐만 아니라 이미지, 오디오, 비디오 등 다양한 형태의 데이터를 이해하고 분석할 수 있어서, 딥리서치를 통해 수집된 방대한 정보를 훨씬 더 심층적으로 파악하고 숨겨진 통찰까지 찾아낼 수 있죠. 게다가 제미나이의 압도적으로 큰 컨텍스트 윈도우(한 번에 기억하고 처리할 수 있는 정보의 양)와 효율적인 토큰 처리 능력은 딥리서치 과정의 효율성을 엄청나게 높여준답니다!  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 style=\"font-size: 20px; color: #00796b; margin: 25px 0 12px;\" data-ke-size=\"size23\"><b>GEM 지침의 핵심 원리 dissected  </b></h3>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">GEM 지침이 어떻게 작동하는지 궁금하시죠? 크게 세 가지 핵심 원리가 있어요.</p>\n<ol style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 8px;\"><b>응답 형식 준수:</b> 일반적인 AI처럼 바로 답변을 내놓는 게 아니라, AI가 \"당신의 질문을 이렇게 분석했고, 이런 확장 기법을 적용해서 더 완벽한 프롬프트를 만들 거예요!\" 라고 먼저 설명해줘요. 그리고 나서 완전히 새로운 수준의 확장된 프롬프트를 생성해줍니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>확장 프롬프트의 내용 구성:</b> 여기가 진짜 핵심인데요! 여러분의 단순한 질문을 세 가지 차원에서 확장시켜요.\n<ul style=\"margin: 5px 0 5px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 3px;\"><b>컨텍스트 설정:</b> 시간적 맥락(예: \"2025년 5월 31일 현재\"), 현재 상황, 기술적 배경 등을 명시해서 AI가 최신 데이터를 우선적으로 탐색하도록 유도해요.</li>\n<li style=\"margin-bottom: 3px;\"><b>목적 명시:</b> 단순히 \"분석해줘\"가 아니라 \"무엇을 위해, 어떤 관점에서, 어떤 결과물을 원하는지\" 아주 구체적으로 알려주는 거죠.</li>\n<li style=\"margin-bottom: 0;\"><b>데이터 소스 지정:</b> 어떤 정보원을 참고할지 (예: 한국언론진흥재단, 정보통신정책연구원), 어떤 형태의 시각자료가 필요한지까지 콕 집어 요청합니다.</li>\n</ul>\n</li>\n<li style=\"margin-bottom: 8px;\"><b>확장 기법 적용 (다차원 분석 요청):</b> 이게 정말 중요해요! 예를 들어 \"블로그와 유튜브의 사회적 영향력\"이라는 주제라면, GEM 지침은 이 질문을 아래와 같이 여러 영역으로 나누어 심층 분석을 요청해요.\n<ul style=\"margin: 5px 0 0 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 3px;\">정보 확산 및 여론 형성</li>\n<li style=\"margin-bottom: 3px;\">사회/문화적 영향</li>\n<li style=\"margin-bottom: 3px;\">경제적 파급효과</li>\n<li style=\"margin-bottom: 3px;\">윤리적 및 법적 고려사항</li>\n<li style=\"margin-bottom: 0;\">미래 전망 및 제언</li>\n</ul>\n이렇게 하면 AI가 각 영역별로 별도의 리서치를 진행해서 훨씬 종합적이고 깊이 있는 분석 결과를 제공한답니다!</li>\n</ol>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>GEM 지침, 어떻게 등록하고 사용할까요?  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">자, 그럼 이 강력한 GEM 지침을 어떻게 사용하냐고요? 아주 간단해요! 제가 영상 설명란과 고정 댓글에 남겨둔 링크를 통해 제 블로그로 오시면 GEM 지침이 담긴 텍스트 파일을 다운로드하실 수 있어요. 그 다음 Gemini에 접속하셔서 화면 왼쪽 메뉴의 \"GEM 관리자\"로 이동해 다운받은 지침을 등록하시면 끝! 자세한 등록 방법은 이전 영상을 참고해주세요.  </p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">일단 '리서치 전문가 GEM 지침'을 등록하셨다면, 이제 여러분이 할 일은 간단한 주제만 입력하는 거예요. 예를 들어, \"블로그와 유튜브의 사회적 영향력을 분석해줘\" 라고 입력하면, GEM 지침이 알아서 이 주제에 최적화된, 아주 상세하고 구조화된 리서치용 프롬프트를 뚝딱 만들어낼 거예요. 정보 확산 방식부터 경제적 파급 효과, 윤리적 쟁점, 미래 전망까지 다각도로 분석하고, 한국언론진흥재단이나 정보통신정책연구원 같은 신뢰도 높은 데이터 소스를 명시하며, 2020년 이후 최신 트렌드에 집중한다는 시간적 범위까지 설정해주는 식이죠.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이렇게 잘 짜인 프롬프트는 단순한 질문이 아니라, <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">AI에게 어떤 각도에서 얼마나 깊이 있게 분석해야 하는지 명확한 가이드라인을 제공하는 체계적인 연구 설계서</span>나 마찬가지랍니다! 그 결과, 표면적인 정보 나열이 아니라 구체적인 데이터와 사례, 비판적 관점, 미래 전망까지 담긴 완성도 높은 종합 분석 보고서를 받아보실 수 있는 거예요. 프롬프트 설계에 쏟는 시간이 결과물의 질을 완전히 바꿔놓는 마법을 경험하게 되실 겁니다!</p>\n<div style=\"background-color: #e0f2f7; border-left: 4px solid #4dd0e1; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>  GEM 지침 활용 꿀팁!</b><br />- 어떤 주제든 GEM 지침에 넣어보세요! 학술 연구, 시장 분석, 기술 동향 보고서 등 무궁무진하게 활용 가능해요.<br />- 생성된 확장 프롬프트를 그대로 사용해도 좋지만, 필요에 따라 조금씩 수정해서 사용하면 더욱 맞춤화된 결과를 얻을 수 있어요.<br />- AI 기술은 계속 발전하니, GEM 지침도 주기적으로 업데이트하면 좋겠죠? (제 블로그를 주목해주세요!)</div>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>제미나이 딥리서치, 이렇게 강력합니다! ✨</b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">GEM 지침으로 생성된 상세 프롬프트를 복사해서, 제미나이 채팅창 하단의 '딥리서치' 버튼을 활성화한 후 붙여넣고 실행하면 끝! 잠시 후 제미나이가 리서치 계획을 보여줄 거예요. 이때 \"계획 수정\"을 눌러 세부 항목을 조정하거나, 바로 \"연구 시작\"을 눌러 리서치를 진행할 수 있습니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">딥리서치는 주제와 관련된 수많은 출처를 찾아 분석하고 종합하는 과정이 필요해서, 보고서가 완성되기까지 보통 10분 이상 소요될 수 있어요. (프로 모델에서는 더 많은 시간이 걸리기도 하고요!) 하지만 기다린 만큼의 가치가 충분하답니다. 커피 한 잔 하시면서 전문가 수준의 보고서가 탄생하는 과정을 지켜보세요! ☕</p>\n<div style=\"background-color: #fffde7; border-left: 4px solid #fbc02d; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>⚠️ 딥리서치 사용 시 참고하세요!</b><br />- 딥리서치는 방대한 정보를 처리하므로 일반적인 답변보다 시간이 더 오래 걸릴 수 있습니다. 인내심을 가져주세요!<br />- 무료 버전과 유료 프로 모델 간에는 분석의 깊이나 속도에 차이가 있을 수 있습니다.<br />- AI가 생성한 정보는 항상 교차 검증하고 비판적으로 수용하는 자세가 중요합니다.</div>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>완성된 보고서, 시각화로 날개를 달다!  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">자, 드디어 딥리서치가 완료되면 정말 놀라운 보고서가 눈앞에 펼쳐질 거예요! 하지만 여기서 끝이 아니랍니다. 제미나이는 이 보고서를 더욱 빛나게 해줄 강력한 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">시각화 기능</span>을 제공해요. 심지어 이 기능, 젠스파크 같은 다른 서비스에서는 크레딧을 소모해야 하지만 제미나이에서는 무료 플랜에서도 마음껏 사용할 수 있다는 사실!  </p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">보고서 오른쪽 상단의 '만들기' 버튼을 누르면 웹페이지나 인포그래픽 형태로 바로 변환할 수 있어요. 별도의 복잡한 프롬프트 없이 클릭 몇 번만으로 전문가가 만든 것 같은 시각자료가 뚝딱! 개인적으로는 젠스파크에서 Claude 기반으로 만든 시각화 결과물보다 제미나이 쪽이 더 깔끔하고 뛰어나다는 생각이 들더라고요. (여러분도 한번 비교해보세요!)</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">물론, 시각화된 자료 외에 보고서 원문도 필요하겠죠? 제미나이 딥리서치 결과물은 텍스트로 복사하거나 구글 DOCS로 바로 내보낼 수 있어서, PDF를 포함한 다양한 형태로 저장하고 활용하기에도 정말 편리하답니다.</p>\n<div style=\"background-color: #e0f7fa; padding: 18px; border-radius: 8px; margin: 20px 0; border: 1px solid #b2ebf2;\">\n<h3 style=\"font-size: 20px; color: #333; margin: 0 0 12px;\" data-ke-size=\"size23\"><b>✨ 시각화 마법 살짝 엿보기! (상상도)  ️</b></h3>\n<p style=\"margin-bottom: 8px;\" data-ke-size=\"size16\"><b>웹페이지로 변신!  </b></p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">여러분의 딥리서치 보고서가 항목별로 깔끔하게 정리된 인터랙티브 웹페이지로 재탄생합니다. 스크롤하며 주요 내용을 확인하고, 관련 그래프나 표를 바로 볼 수 있어요. 마치 잘 만들어진 온라인 기사처럼 가독성이 뛰어나답니다!</p>\n<p style=\"margin-bottom: 8px;\" data-ke-size=\"size16\"><b>한눈에 쏙! 인포그래픽  </b></p>\n<p style=\"margin-bottom: 0;\" data-ke-size=\"size16\">복잡한 데이터와 분석 내용이 핵심만 담긴 세련된 인포그래픽으로 요약됩니다. 다양한 차트와 아이콘, 강조 색상을 활용해 정보 전달력을 극대화하죠. 발표 자료나 SNS 공유용으로도 안성맞춤!</p>\n</div>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>핵심만 쏙쏙! GEM 지침으로 딥리서치 역량 UP!  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">오늘 정말 많은 이야기를 나눴는데요, 핵심만 다시 한번 정리해볼까요?</p>\n<ol style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 8px;\"><b>단순 검색은 이제 그만!</b> 깊이 있는 분석과 통찰을 원한다면 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">딥리서치</span>가 정답입니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>GEM 지침으로 AI를 조련하세요!</b> 여러분의 생각을 정확히 반영한 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">맞춤형 고급 프롬프트</span>를 생성하여 AI의 잠재력을 100% 끌어낼 수 있습니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>제미나이의 강력한 기능들을 활용하세요!</b> 멀티모달 분석, 방대한 컨텍스트 처리, 그리고 무료 시각화 기능까지! 제미나이는 딥리서치를 위한 최고의 파트너입니다.</li>\n<li style=\"margin-bottom: 0;\"><b>결과물 활용도 UP!</b> 전문가 수준의 보고서는 물론, 웹페이지, 인포그래픽 등 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">다양한 형태로 결과물을 활용</span>하여 여러분의 과제나 업무 성과를 극대화하세요.</li>\n</ol>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이제 여러분도 AI를 단순한 검색 도구가 아닌, 진정한 연구 파트너로 활용하실 수 있을 거예요!</p>\n<div style=\"border-top: 1px dashed #e0e0e0; margin: 30px 0;\">&nbsp;</div>\n<div>\n<style>\n        .single-summary-card-container {\n            justify-content: center;\n            align-items: center;\n            padding: 20px 10px;\n            background-color: #e0f7fa; /* Light Teal for container background */\n            margin: 20px 0; }\n        .single-summary-card {\n            width: 100%;\n            max-width: 700px;\n            background-color: #ffffff; border-radius: 12px;\n            box-shadow: 0 6px 18px rgba(0,0,0,0.12);\n            padding: 25px;\n            display: flex;\n            flex-direction: column;\n            overflow: hidden;\n            border: 1px solid #b2ebf2; /* Teal border for card */\n            box-sizing: border-box; \n            height: auto; \n            min-height: unset; \n        }\n        .single-summary-card .card-header {\n            display: flex; align-items: center;\n            border-bottom: 2px solid #00796b; /* Dark Teal border for header */\n            padding-bottom: 12px; margin-bottom: 12px;\n        }\n        .single-summary-card .card-header-icon {\n            font-size: 34px;\n            color: #00796b; /* Dark Teal icon */\n            margin-right: 14px; }\n        .single-summary-card .card-header h3 {\n            font-size: 26px;\n            color: #00796b; /* Dark Teal header text */\n            margin: 0;\n            line-height: 1.3;\n            font-weight: 700; }\n        .single-summary-card .card-content {\n            flex-grow: 1;\n            display: flex;\n            flex-direction: column; justify-content: space-around;\n            font-size: 17px;\n            line-height: 1.65;\n            color: #333; /* Main text color */\n        }\n        .single-summary-card .card-content .section {\n            margin-bottom: 10px; }\n        .single-summary-card .card-content strong {\n            color: #004d40; /* Darker Teal for strong text */\n            font-weight: 600; }\n        .single-summary-card .card-content .highlight {\n            background-color: #fff9c4; \n            padding: 2px 6px;\n            border-radius: 3px; font-weight: bold;\n        }\n        .single-summary-card .card-content .formula {\n            background-color: #e0f7fa; /* Light Teal formula background */\n            padding: 6px 10px;\n            border-radius: 4px;\n            font-size: 0.9em; text-align: center;\n            margin-top: 5px;\n            color: #004d40; /* Darkest Teal for formula text */\n        }\n        .single-summary-card .card-footer {\n            font-size: 14px; color: #777;\n            text-align: center;\n            padding-top: 12px;\n            border-top: 1px dashed #b2ebf2; /* Light Teal dashed border for footer */\n            margin-top: auto; }\n\n        @media (max-width: 768px) {\n            .single-summary-card {\n                padding: 18px; \n                height: auto; \n                min-height: unset; \n            }\n            .single-summary-card .card-header-icon {\n                font-size: 28px; \n                margin-right: 10px; }\n            .single-summary-card .card-header h3 {\n                font-size: 20px; \n            }\n            .single-summary-card .card-content {\n                font-size: 15px; \n                line-height: 1.5; }\n            .single-summary-card .card-content .section {\n                margin-bottom: 8px; \n            }\n            .single-summary-card .card-content .formula {\n                padding: 5px 8px; font-size: 0.85em; \n            }\n            .single-summary-card .card-footer {\n                font-size: 13px; padding-top: 10px;\n            }\n        }\n\n        @media (max-width: 480px) {\n            .single-summary-card {\n                padding: 15px; \n            }\n            .single-summary-card .card-header-icon {\n                font-size: 26px; }\n            .single-summary-card .card-header h3 {\n                font-size: 18px; }\n            .single-summary-card .card-content {\n                font-size: 14px; line-height: 1.4;\n            }\n            .single-summary-card .card-content .section {\n                margin-bottom: 6px; }\n            .single-summary-card .card-content .formula {\n                padding: 4px 6px; font-size: 0.8em;\n            }\n            .single-summary-card .card-footer {\n                font-size: 12px; padding-top: 8px;\n            }\n        }\n    </style>\n</div>\n<div class=\"single-summary-card-container\">\n<div class=\"single-summary-card\">\n<div class=\"card-header\"><span class=\"card-header-icon\"> </span>\n<h3 data-ke-size=\"size23\">GEM 지침: 딥리서치 초격차!</h3>\n</div>\n<div class=\"card-content\">\n<div class=\"section\"><b>✨ 맞춤형 프롬프트:</b> <span class=\"highlight\">GEM 지침이 단순 질문을 전문가급 리서치 설계도로 변환!</span></div>\n<div class=\"section\"><b>  심층 분석 가능:</b> <span class=\"highlight\">다차원 분석 요청으로 AI가 숨겨진 통찰까지 도출!</span></div>\n<div class=\"section\"><b>⚙️ 리서치 효율 극대화:</b>\n<div class=\"formula\">시간 절약 + 정보 품질 UP = 생산성 혁신!</div>\n</div>\n<div class=\"section\"><b>  전문가급 결과물:</b> <span class=\"highlight\">A+ 과제, 승진 보고서도 문제 없어요!</span></div>\n</div>\n<div class=\"card-footer\">GEM 지침으로 제미나이 딥리서치의 모든 가능성을 경험하세요!</div>\n</div>\n</div>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">오늘 여러분께 소개해 드린 GEM 지침은 제미나이의 딥리서치 기능을 단순히 활용하는 수준을 넘어, <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">완전히 새로운 차원으로 끌어올릴 수 있는 강력한 도구</span>입니다. 이제 단 몇 초 만에 전문가 수준의 프롬프트를 작성하고, 그 결과로 대학 논문이나 회사 보고서에 즉시 활용할 수 있는 고품질 분석 자료를 얻을 수 있게 되었습니다. 특히 다른 AI 서비스에서는 유료로 제공하는 시각화 기능을 제미나이에서는 무료로 사용할 수 있다는 점, 정말 놀랍지 않나요?  </p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">\"AI가 별로야\", \"내가 원하는 결과가 안 나와\" 라고 생각하셨던 분들도 이제는 그런 생각을 버리셔도 좋습니다. 문제는 AI가 아니라 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">우리가 어떻게 질문하느냐</span>에 있었던 것이니까요! 혹시 지침 적용 과정에서 어려움이 있으시다면 오픈톡방에 남겨주세요. 최대한 빨리 도와드리겠습니다.  </p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이런 AI 활용 꿀팁들이 더 필요하시다면, 지금 바로 <b>구독과 좋아요</b> 버튼을 꾹! 눌러주세요. 알림까지 켜두시면 앞으로 제가 공개할 더 많은 AI 활용 전략들을 가장 먼저 만나보실 수 있습니다. 여러분의 AI 활용 여정에 제 영상이 도움이 되었으면 좋겠습니다. 그럼 다음 영상에서 더 놀라운 내용으로 찾아뵙겠습니다. 감사합니다!  </p>\n<p data-ke-size=\"size8\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>자주 묻는 질문 ❓</b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px; padding: 12px; background-color: #f9f9f9; border-radius: 6px; border: 1px solid #eeeeee;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #00796b;\">Q: GEM 지침은 제미나이에서만 사용할 수 있나요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A: 아니요, GEM 지침의 원리는 ChatGPT나 Claude 등 다른 LLM에서도 충분히 활용 가능합니다. 하지만 제미나이의 GEM 기능(사용자 맞춤형 AI 비서)과 결합했을 때 가장 강력한 시너지를 내며, 특히 제미나이의 멀티모달 처리 능력과 방대한 컨텍스트 윈도우는 딥리서치에 최적화되어 있습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px; padding: 12px; background-color: #f9f9f9; border-radius: 6px; border: 1px solid #eeeeee;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #00796b;\">Q: 딥리서치 결과는 항상 100% 정확하고 최신 정보인가요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A: AI가 생성하는 정보는 매우 유용하지만, 항상 100% 완벽하다고 할 수는 없습니다. 딥리서치는 최신 정보를 포함하려고 노력하지만, 정보의 편향성이나 오류 가능성은 여전히 존재합니다. 따라서 중요한 결정이나 학술적 목적으로 사용할 경우, 반드시 여러 출처를 통해 교차 검증하고 비판적으로 검토하는 자세가 필요합니다.</div>\n</div>\n<div style=\"margin-bottom: 20px; padding: 12px; background-color: #f9f9f9; border-radius: 6px; border: 1px solid #eeeeee;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #00796b;\">Q: GEM 지침을 직접 만들거나 수정하는 것이 어렵지 않을까요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A: 제가 제공하는 GEM 지침 템플릿을 활용하시면 누구나 쉽게 시작할 수 있습니다! 처음에는 제공된 지침을 그대로 사용해보시고, 익숙해지면 자신의 필요에 맞게 특정 데이터 소스를 추가하거나 분석 관점을 수정하는 등 커스터마이징 해보시는 것을 추천합니다. 혹시 어려움이 있으시면 언제든 오픈톡방에 질문해주세요!</div>\n</div>\n<div style=\"margin-bottom: 20px; padding: 12px; background-color: #f9f9f9; border-radius: 6px; border: 1px solid #eeeeee;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #00796b;\">Q: 딥리서치와 일반 웹 검색의 가장 큰 차이점은 무엇인가요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A: 가장 큰 차이는 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">분석의 깊이와 정보의 질</span>입니다. 일반 검색은 키워드에 맞는 정보를 찾아 나열하는 수준이라면, 딥리서치는 여러 정보를 종합하고, 검증하며, 다양한 관점에서 분석하여 새로운 통찰을 도출하려고 합니다. 마치 연구원이 연구를 수행하는 과정과 유사하다고 볼 수 있습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px; padding: 12px; background-color: #f9f9f9; border-radius: 6px; border: 1px solid #eeeeee;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #00796b;\">Q: 제미나이에서 제공하는 시각화 기능에는 어떤 종류가 있나요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A: 현재 제미나이는 딥리서치 결과를 바탕으로 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">웹페이지 형태와 인포그래픽 형태로 시각화</span>하는 기능을 제공합니다. 웹페이지는 보고서 내용을 구조적으로 보여주며, 인포그래픽은 핵심 정보를 차트나 그림으로 요약하여 한눈에 파악하기 쉽게 만들어줍니다. 이 기능들은 모두 무료 플랜에서도 사용 가능합니다!</div>\n</div>\n</div>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>GEM 무료 다운로드❓</b></h2>\n<div class=\"revenue_unit_wrap\">\n  <div class=\"revenue_unit_item adsense responsive\">\n    <div class=\"revenue_unit_info\">반응형</div>\n    <script src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\" async=\"async\"></script>\n    <ins class=\"adsbygoogle\" style=\"display: block;\" data-ad-host=\"ca-host-pub-9691043933427338\" data-ad-client=\"ca-pub-8195497734535830\" data-ad-format=\"auto\"></ins>\n    <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>\n  </div>\n</div>\n<p><figure class=\"fileblock\" data-ke-align=\"alignCenter\"><a href=\"https://blog.kakaocdn.net/dn/csNymq/btsOmg7s37S/HqsI2l4oRsoYmONrdGAZBK/Gemini%EB%A5%BC%20%EC%9C%84%ED%95%9C%20%EB%94%A5%EB%A6%AC%EC%84%9C%EC%B9%98%20%ED%99%95%EC%9E%A5%20%ED%94%84%EB%A1%AC%ED%94%84%ED%8A%B8%20%EC%83%9D%EC%84%B1%20%EC%B5%9C%EC%A0%81%ED%99%94%20%EC%A7%80%EC%B9%A8.zip?attach=1&amp;knm=tfile.zip\" class=\"\">\n    <div class=\"image\"></div>\n    <div class=\"desc\"><div class=\"filename\"><span class=\"name\">Gemini를 위한 딥리서치 확장 프롬프트 생성 최적화 지침.zip</span></div>\n<div class=\"size\">0.00MB</div>\n</div>\n  </a></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=4FBaYaXEqu0\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/SvS5h/hyY0x5VhcT/l9imvX0qQ5d3T4Y5psO8O0/img.jpg?width=1280&amp;height=720&amp;face=326_88_924_224\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"단 한 줄로 최강의 딥리서치 프롬프트 만들기! GEMINI 활용법 3편\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/4FBaYaXEqu0\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<script type=\"application/ld+json\">\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"FAQPage\",\n        \"mainEntity\": [\n            {\n                \"@type\": \"Question\",\n                \"name\": \"GEM 지침은 제미나이에서만 사용할 수 있나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  아니요, GEM 지침의 원리는 ChatGPT나 Claude 등 다른 LLM에서도 충분히 활용 가능합니다. 하지만 제미나이의 GEM 기능(사용자 맞춤형 AI 비서)과 결합했을 때 가장 강력한 시너지를 내며, 특히 제미나이의 멀티모달 처리 능력과 방대한 컨텍스트 윈도우는 딥리서치에 최적화되어 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"딥리서치 결과는 항상 100% 정확하고 최신 정보인가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  AI가 생성하는 정보는 매우 유용하지만, 항상 100% 완벽하다고 할 수는 없습니다. 딥리서치는 최신 정보를 포함하려고 노력하지만, 정보의 편향성이나 오류 가능성은 여전히 존재합니다. 따라서 중요한 결정이나 학술적 목적으로 사용할 경우, 반드시 여러 출처를 통해 교차 검증하고 비판적으로 검토하는 자세가 필요합니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"GEM 지침을 직접 만들거나 수정하는 것이 어렵지 않을까요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  제가 제공하는 GEM 지침 템플릿을 활용하시면 누구나 쉽게 시작할 수 있습니다! 처음에는 제공된 지침을 그대로 사용해보시고, 익숙해지면 자신의 필요에 맞게 특정 데이터 소스를 추가하거나 분석 관점을 수정하는 등 커스터마이징 해보시는 것을 추천합니다. 혹시 어려움이 있으시면 언제든 오픈톡방에 질문해주세요!\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"딥리서치와 일반 웹 검색의 가장 큰 차이점은 무엇인가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  가장 큰 차이는 분석의 깊이와 정보의 질입니다. 일반 검색은 키워드에 맞는 정보를 찾아 나열하는 수준이라면, 딥리서치는 여러 정보를 종합하고, 검증하며, 다양한 관점에서 분석하여 새로운 통찰을 도출하려고 합니다. 마치 연구원이 연구를 수행하는 과정과 유사하다고 볼 수 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"제미나이에서 제공하는 시각화 기능에는 어떤 종류가 있나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  현재 제미나이는 딥리서치 결과를 바탕으로 웹페이지 형태와 인포그래픽 형태로 시각화하는 기능을 제공합니다. 웹페이지는 보고서 내용을 구조적으로 보여주며, 인포그래픽은 핵심 정보를 차트나 그림으로 요약하여 한눈에 파악하기 쉽게 만들어줍니다. 이 기능들은 모두 무료 플랜에서도 사용 가능합니다!\"\n                }\n            }\n        ]\n    }\n    </script>",
        "contentSnippet": "✨ 제미나이 딥리서치, GEM 지침으로 날개를 달아보세요! 여러분의 AI 활용 수준을 한 단계 업그레이드할 비밀 병기, GEM 지침을 소개합니다. 간단한 질문만으로는 얻을 수 없었던 전문가 수준의 분석 보고서를 직접 경험해보세요!\n\n\n \n혹시 AI에게 질문했을 때, \"음... 뭔가 알맹이가 빠진 것 같은데?\" 혹은 \"출처가 어디지?\" 하며 고개를 갸웃했던 경험, 다들 한 번쯤 있으시죠? 특히 과제나 보고서처럼 정확하고 깊이 있는 정보가 필요할 때는 더욱 답답함을 느끼셨을 거예요. 최신 정보, 실시간 데이터, 신뢰할 수 있는 출처에 기반한 분석. 이게 바로 우리가 AI에게 진짜 원하는 거잖아요!\n \n최근 ChatGPT, Claude, Gemini 같은 AI 모델들이 앞다투어 '딥리서치' 기능을 선보이는 이유도 바로 여기에 있습니다. 단순히 웹 검색 결과를 나열하는 것을 넘어, 실시간으로 웹을 탐색하고, 최신 논문을 찾고, 신뢰할 수 있는 데이터를 수집해 분석까지 해주는 정말 똑똑한 기능이죠. 하지만 이 강력한 딥리서치 기능도 제대로 활용하지 못하면 무용지물이랍니다. 오늘 제가 그 봉인 해제 방법을 알려드릴게요!  \n딥리서치, 왜 그냥 검색이랑 다를까요?  \n\"딥리서치? 그거 그냥 구글링 잘하는 거 아니야?\" 라고 생각하실 수도 있지만, 전혀 그렇지 않아요! 일반 웹 검색은 단순히 정보를 찾아 보여주는 데 그치지만, 딥리서치는 마치 숙련된 연구원처럼 정보를 탐색, 검증, 요약하고 비판적으로 재구성하는 과정을 거칩니다. 훨씬 더 깊이 있고 신뢰도 높은 결과물을 만들어내는 거죠.\n \n하지만 대부분의 사람들이 AI에게 \"○○에 대해 조사해줘\"처럼 너무 막연하게 질문하는 경우가 많아요. 이렇게 하면 딥리서치 기능을 켜도 AI가 어떤 관점에서, 무엇을 중점적으로 찾아야 할지 몰라 표면적인 정보만 가져오게 됩니다. 실제로 제가 간단한 프롬프트로 딥리서치를 요청했을 때는 일반화된 문장과 출처 불명의 정보만 얻었지만, 제가 개발한 GEM 지침을 활용한 구조화된 프롬프트를 사용했을 때는 실제 수치, 표, 그래프, 논문 인용까지 포함된 증거 기반의 답변을 받을 수 있었어요. 엄청난 차이죠?\n  알아두세요! 딥리서치의 작동 과정\n딥리서치는 다음과 같은 체계적인 단계를 거쳐요:\n의도 파악 및 쿼리 분해: 사용자의 복잡한 요청을 구체적인 질문들로 나눕니다.\n문서 검색: 웹, 학술 데이터베이스, API 등 다양한 소스에서 정보를 찾습니다.\n근거 중심 응답 구성: 수집된 정보를 바탕으로 신뢰할 수 있는 답변을 만듭니다.\n출처 명시 및 비판적 요약: 정보의 출처를 명확히 밝히고, 비판적인 시각에서 요약합니다.\n응답 구조화: 사용자가 이해하기 쉽도록 답변을 체계적으로 정리합니다.\n마법의 열쇠, GEM 지침이란 무엇일까요?  \n이 놀라운 차이를 만드는 것이 바로 제가 개발한 GEM 지침입니다! 여기서 GEM은 Google Gemini에서 제공하는 '사용자 맞춤형 AI 비서' 기능을 의미해요. 즉, 여러분만의 똑똑한 AI 어시스턴트를 만들 수 있는 기능이죠. 물론 이 GEM 지침은 ChatGPT나 Claude 같은 다른 AI 모델에서도 활용할 수 있지만, 제미나이의 GEM 기능과 함께 사용할 때 그 효과가 극대화된답니다.\n \n제미나이가 딥리서치에 특히 강력한 이유는 제미나이의 뛰어난 멀티모달 능력과 강력한 추론 능력 덕분이에요. 텍스트뿐만 아니라 이미지, 오디오, 비디오 등 다양한 형태의 데이터를 이해하고 분석할 수 있어서, 딥리서치를 통해 수집된 방대한 정보를 훨씬 더 심층적으로 파악하고 숨겨진 통찰까지 찾아낼 수 있죠. 게다가 제미나이의 압도적으로 큰 컨텍스트 윈도우(한 번에 기억하고 처리할 수 있는 정보의 양)와 효율적인 토큰 처리 능력은 딥리서치 과정의 효율성을 엄청나게 높여준답니다!  \n \nGEM 지침의 핵심 원리 dissected  \nGEM 지침이 어떻게 작동하는지 궁금하시죠? 크게 세 가지 핵심 원리가 있어요.\n응답 형식 준수: 일반적인 AI처럼 바로 답변을 내놓는 게 아니라, AI가 \"당신의 질문을 이렇게 분석했고, 이런 확장 기법을 적용해서 더 완벽한 프롬프트를 만들 거예요!\" 라고 먼저 설명해줘요. 그리고 나서 완전히 새로운 수준의 확장된 프롬프트를 생성해줍니다.\n확장 프롬프트의 내용 구성: 여기가 진짜 핵심인데요! 여러분의 단순한 질문을 세 가지 차원에서 확장시켜요.\n\n컨텍스트 설정: 시간적 맥락(예: \"2025년 5월 31일 현재\"), 현재 상황, 기술적 배경 등을 명시해서 AI가 최신 데이터를 우선적으로 탐색하도록 유도해요.\n목적 명시: 단순히 \"분석해줘\"가 아니라 \"무엇을 위해, 어떤 관점에서, 어떤 결과물을 원하는지\" 아주 구체적으로 알려주는 거죠.\n데이터 소스 지정: 어떤 정보원을 참고할지 (예: 한국언론진흥재단, 정보통신정책연구원), 어떤 형태의 시각자료가 필요한지까지 콕 집어 요청합니다.\n확장 기법 적용 (다차원 분석 요청): 이게 정말 중요해요! 예를 들어 \"블로그와 유튜브의 사회적 영향력\"이라는 주제라면, GEM 지침은 이 질문을 아래와 같이 여러 영역으로 나누어 심층 분석을 요청해요.\n\n정보 확산 및 여론 형성\n사회/문화적 영향\n경제적 파급효과\n윤리적 및 법적 고려사항\n미래 전망 및 제언\nGEM 지침, 어떻게 등록하고 사용할까요?  \n자, 그럼 이 강력한 GEM 지침을 어떻게 사용하냐고요? 아주 간단해요! 제가 영상 설명란과 고정 댓글에 남겨둔 링크를 통해 제 블로그로 오시면 GEM 지침이 담긴 텍스트 파일을 다운로드하실 수 있어요. 그 다음 Gemini에 접속하셔서 화면 왼쪽 메뉴의 \"GEM 관리자\"로 이동해 다운받은 지침을 등록하시면 끝! 자세한 등록 방법은 이전 영상을 참고해주세요.  \n \n일단 '리서치 전문가 GEM 지침'을 등록하셨다면, 이제 여러분이 할 일은 간단한 주제만 입력하는 거예요. 예를 들어, \"블로그와 유튜브의 사회적 영향력을 분석해줘\" 라고 입력하면, GEM 지침이 알아서 이 주제에 최적화된, 아주 상세하고 구조화된 리서치용 프롬프트를 뚝딱 만들어낼 거예요. 정보 확산 방식부터 경제적 파급 효과, 윤리적 쟁점, 미래 전망까지 다각도로 분석하고, 한국언론진흥재단이나 정보통신정책연구원 같은 신뢰도 높은 데이터 소스를 명시하며, 2020년 이후 최신 트렌드에 집중한다는 시간적 범위까지 설정해주는 식이죠.\n \n이렇게 잘 짜인 프롬프트는 단순한 질문이 아니라, AI에게 어떤 각도에서 얼마나 깊이 있게 분석해야 하는지 명확한 가이드라인을 제공하는 체계적인 연구 설계서나 마찬가지랍니다! 그 결과, 표면적인 정보 나열이 아니라 구체적인 데이터와 사례, 비판적 관점, 미래 전망까지 담긴 완성도 높은 종합 분석 보고서를 받아보실 수 있는 거예요. 프롬프트 설계에 쏟는 시간이 결과물의 질을 완전히 바꿔놓는 마법을 경험하게 되실 겁니다!\n  GEM 지침 활용 꿀팁!\n- 어떤 주제든 GEM 지침에 넣어보세요! 학술 연구, 시장 분석, 기술 동향 보고서 등 무궁무진하게 활용 가능해요.\n- 생성된 확장 프롬프트를 그대로 사용해도 좋지만, 필요에 따라 조금씩 수정해서 사용하면 더욱 맞춤화된 결과를 얻을 수 있어요.\n- AI 기술은 계속 발전하니, GEM 지침도 주기적으로 업데이트하면 좋겠죠? (제 블로그를 주목해주세요!)\n제미나이 딥리서치, 이렇게 강력합니다! ✨\nGEM 지침으로 생성된 상세 프롬프트를 복사해서, 제미나이 채팅창 하단의 '딥리서치' 버튼을 활성화한 후 붙여넣고 실행하면 끝! 잠시 후 제미나이가 리서치 계획을 보여줄 거예요. 이때 \"계획 수정\"을 눌러 세부 항목을 조정하거나, 바로 \"연구 시작\"을 눌러 리서치를 진행할 수 있습니다.\n딥리서치는 주제와 관련된 수많은 출처를 찾아 분석하고 종합하는 과정이 필요해서, 보고서가 완성되기까지 보통 10분 이상 소요될 수 있어요. (프로 모델에서는 더 많은 시간이 걸리기도 하고요!) 하지만 기다린 만큼의 가치가 충분하답니다. 커피 한 잔 하시면서 전문가 수준의 보고서가 탄생하는 과정을 지켜보세요! ☕\n⚠️ 딥리서치 사용 시 참고하세요!\n- 딥리서치는 방대한 정보를 처리하므로 일반적인 답변보다 시간이 더 오래 걸릴 수 있습니다. 인내심을 가져주세요!\n- 무료 버전과 유료 프로 모델 간에는 분석의 깊이나 속도에 차이가 있을 수 있습니다.\n- AI가 생성한 정보는 항상 교차 검증하고 비판적으로 수용하는 자세가 중요합니다.\n완성된 보고서, 시각화로 날개를 달다!  \n자, 드디어 딥리서치가 완료되면 정말 놀라운 보고서가 눈앞에 펼쳐질 거예요! 하지만 여기서 끝이 아니랍니다. 제미나이는 이 보고서를 더욱 빛나게 해줄 강력한 시각화 기능을 제공해요. 심지어 이 기능, 젠스파크 같은 다른 서비스에서는 크레딧을 소모해야 하지만 제미나이에서는 무료 플랜에서도 마음껏 사용할 수 있다는 사실!  \n \n보고서 오른쪽 상단의 '만들기' 버튼을 누르면 웹페이지나 인포그래픽 형태로 바로 변환할 수 있어요. 별도의 복잡한 프롬프트 없이 클릭 몇 번만으로 전문가가 만든 것 같은 시각자료가 뚝딱! 개인적으로는 젠스파크에서 Claude 기반으로 만든 시각화 결과물보다 제미나이 쪽이 더 깔끔하고 뛰어나다는 생각이 들더라고요. (여러분도 한번 비교해보세요!)\n \n물론, 시각화된 자료 외에 보고서 원문도 필요하겠죠? 제미나이 딥리서치 결과물은 텍스트로 복사하거나 구글 DOCS로 바로 내보낼 수 있어서, PDF를 포함한 다양한 형태로 저장하고 활용하기에도 정말 편리하답니다.\n✨ 시각화 마법 살짝 엿보기! (상상도)  ️\n웹페이지로 변신!  \n여러분의 딥리서치 보고서가 항목별로 깔끔하게 정리된 인터랙티브 웹페이지로 재탄생합니다. 스크롤하며 주요 내용을 확인하고, 관련 그래프나 표를 바로 볼 수 있어요. 마치 잘 만들어진 온라인 기사처럼 가독성이 뛰어나답니다!\n한눈에 쏙! 인포그래픽  \n복잡한 데이터와 분석 내용이 핵심만 담긴 세련된 인포그래픽으로 요약됩니다. 다양한 차트와 아이콘, 강조 색상을 활용해 정보 전달력을 극대화하죠. 발표 자료나 SNS 공유용으로도 안성맞춤!\n핵심만 쏙쏙! GEM 지침으로 딥리서치 역량 UP!  \n오늘 정말 많은 이야기를 나눴는데요, 핵심만 다시 한번 정리해볼까요?\n단순 검색은 이제 그만! 깊이 있는 분석과 통찰을 원한다면 딥리서치가 정답입니다.\nGEM 지침으로 AI를 조련하세요! 여러분의 생각을 정확히 반영한 맞춤형 고급 프롬프트를 생성하여 AI의 잠재력을 100% 끌어낼 수 있습니다.\n제미나이의 강력한 기능들을 활용하세요! 멀티모달 분석, 방대한 컨텍스트 처리, 그리고 무료 시각화 기능까지! 제미나이는 딥리서치를 위한 최고의 파트너입니다.\n결과물 활용도 UP! 전문가 수준의 보고서는 물론, 웹페이지, 인포그래픽 등 다양한 형태로 결과물을 활용하여 여러분의 과제나 업무 성과를 극대화하세요.\n이제 여러분도 AI를 단순한 검색 도구가 아닌, 진정한 연구 파트너로 활용하실 수 있을 거예요!\n \n \nGEM 지침: 딥리서치 초격차!\n✨ 맞춤형 프롬프트: GEM 지침이 단순 질문을 전문가급 리서치 설계도로 변환!\n  심층 분석 가능: 다차원 분석 요청으로 AI가 숨겨진 통찰까지 도출!\n⚙️ 리서치 효율 극대화:\n시간 절약 + 정보 품질 UP = 생산성 혁신!\n  전문가급 결과물: A+ 과제, 승진 보고서도 문제 없어요!\nGEM 지침으로 제미나이 딥리서치의 모든 가능성을 경험하세요!\n오늘 여러분께 소개해 드린 GEM 지침은 제미나이의 딥리서치 기능을 단순히 활용하는 수준을 넘어, 완전히 새로운 차원으로 끌어올릴 수 있는 강력한 도구입니다. 이제 단 몇 초 만에 전문가 수준의 프롬프트를 작성하고, 그 결과로 대학 논문이나 회사 보고서에 즉시 활용할 수 있는 고품질 분석 자료를 얻을 수 있게 되었습니다. 특히 다른 AI 서비스에서는 유료로 제공하는 시각화 기능을 제미나이에서는 무료로 사용할 수 있다는 점, 정말 놀랍지 않나요?  \n \n\"AI가 별로야\", \"내가 원하는 결과가 안 나와\" 라고 생각하셨던 분들도 이제는 그런 생각을 버리셔도 좋습니다. 문제는 AI가 아니라 우리가 어떻게 질문하느냐에 있었던 것이니까요! 혹시 지침 적용 과정에서 어려움이 있으시다면 오픈톡방에 남겨주세요. 최대한 빨리 도와드리겠습니다.  \n \n이런 AI 활용 꿀팁들이 더 필요하시다면, 지금 바로 구독과 좋아요 버튼을 꾹! 눌러주세요. 알림까지 켜두시면 앞으로 제가 공개할 더 많은 AI 활용 전략들을 가장 먼저 만나보실 수 있습니다. 여러분의 AI 활용 여정에 제 영상이 도움이 되었으면 좋겠습니다. 그럼 다음 영상에서 더 놀라운 내용으로 찾아뵙겠습니다. 감사합니다!  \n \n자주 묻는 질문 ❓\nQ: GEM 지침은 제미나이에서만 사용할 수 있나요?\nA: 아니요, GEM 지침의 원리는 ChatGPT나 Claude 등 다른 LLM에서도 충분히 활용 가능합니다. 하지만 제미나이의 GEM 기능(사용자 맞춤형 AI 비서)과 결합했을 때 가장 강력한 시너지를 내며, 특히 제미나이의 멀티모달 처리 능력과 방대한 컨텍스트 윈도우는 딥리서치에 최적화되어 있습니다.\nQ: 딥리서치 결과는 항상 100% 정확하고 최신 정보인가요?\nA: AI가 생성하는 정보는 매우 유용하지만, 항상 100% 완벽하다고 할 수는 없습니다. 딥리서치는 최신 정보를 포함하려고 노력하지만, 정보의 편향성이나 오류 가능성은 여전히 존재합니다. 따라서 중요한 결정이나 학술적 목적으로 사용할 경우, 반드시 여러 출처를 통해 교차 검증하고 비판적으로 검토하는 자세가 필요합니다.\nQ: GEM 지침을 직접 만들거나 수정하는 것이 어렵지 않을까요?\nA: 제가 제공하는 GEM 지침 템플릿을 활용하시면 누구나 쉽게 시작할 수 있습니다! 처음에는 제공된 지침을 그대로 사용해보시고, 익숙해지면 자신의 필요에 맞게 특정 데이터 소스를 추가하거나 분석 관점을 수정하는 등 커스터마이징 해보시는 것을 추천합니다. 혹시 어려움이 있으시면 언제든 오픈톡방에 질문해주세요!\nQ: 딥리서치와 일반 웹 검색의 가장 큰 차이점은 무엇인가요?\nA: 가장 큰 차이는 분석의 깊이와 정보의 질입니다. 일반 검색은 키워드에 맞는 정보를 찾아 나열하는 수준이라면, 딥리서치는 여러 정보를 종합하고, 검증하며, 다양한 관점에서 분석하여 새로운 통찰을 도출하려고 합니다. 마치 연구원이 연구를 수행하는 과정과 유사하다고 볼 수 있습니다.\nQ: 제미나이에서 제공하는 시각화 기능에는 어떤 종류가 있나요?\nA: 현재 제미나이는 딥리서치 결과를 바탕으로 웹페이지 형태와 인포그래픽 형태로 시각화하는 기능을 제공합니다. 웹페이지는 보고서 내용을 구조적으로 보여주며, 인포그래픽은 핵심 정보를 차트나 그림으로 요약하여 한눈에 파악하기 쉽게 만들어줍니다. 이 기능들은 모두 무료 플랜에서도 사용 가능합니다!\nGEM 무료 다운로드❓\n반응형\n\n    \n    (adsbygoogle = window.adsbygoogle || []).push({});\n  \n\n    \n\n    \nGemini를 위한 딥리서치 확장 프롬프트 생성 최적화 지침.zip\n0.00MB\n\n\n \n\n\n\n \n\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"FAQPage\",\n        \"mainEntity\": [\n            {\n                \"@type\": \"Question\",\n                \"name\": \"GEM 지침은 제미나이에서만 사용할 수 있나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  아니요, GEM 지침의 원리는 ChatGPT나 Claude 등 다른 LLM에서도 충분히 활용 가능합니다. 하지만 제미나이의 GEM 기능(사용자 맞춤형 AI 비서)과 결합했을 때 가장 강력한 시너지를 내며, 특히 제미나이의 멀티모달 처리 능력과 방대한 컨텍스트 윈도우는 딥리서치에 최적화되어 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"딥리서치 결과는 항상 100% 정확하고 최신 정보인가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  AI가 생성하는 정보는 매우 유용하지만, 항상 100% 완벽하다고 할 수는 없습니다. 딥리서치는 최신 정보를 포함하려고 노력하지만, 정보의 편향성이나 오류 가능성은 여전히 존재합니다. 따라서 중요한 결정이나 학술적 목적으로 사용할 경우, 반드시 여러 출처를 통해 교차 검증하고 비판적으로 검토하는 자세가 필요합니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"GEM 지침을 직접 만들거나 수정하는 것이 어렵지 않을까요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  제가 제공하는 GEM 지침 템플릿을 활용하시면 누구나 쉽게 시작할 수 있습니다! 처음에는 제공된 지침을 그대로 사용해보시고, 익숙해지면 자신의 필요에 맞게 특정 데이터 소스를 추가하거나 분석 관점을 수정하는 등 커스터마이징 해보시는 것을 추천합니다. 혹시 어려움이 있으시면 언제든 오픈톡방에 질문해주세요!\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"딥리서치와 일반 웹 검색의 가장 큰 차이점은 무엇인가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  가장 큰 차이는 분석의 깊이와 정보의 질입니다. 일반 검색은 키워드에 맞는 정보를 찾아 나열하는 수준이라면, 딥리서치는 여러 정보를 종합하고, 검증하며, 다양한 관점에서 분석하여 새로운 통찰을 도출하려고 합니다. 마치 연구원이 연구를 수행하는 과정과 유사하다고 볼 수 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"제미나이에서 제공하는 시각화 기능에는 어떤 종류가 있나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  현재 제미나이는 딥리서치 결과를 바탕으로 웹페이지 형태와 인포그래픽 형태로 시각화하는 기능을 제공합니다. 웹페이지는 보고서 내용을 구조적으로 보여주며, 인포그래픽은 핵심 정보를 차트나 그림으로 요약하여 한눈에 파악하기 쉽게 만들어줍니다. 이 기능들은 모두 무료 플랜에서도 사용 가능합니다!\"\n                }\n            }\n        ]\n    }",
        "guid": "http://muzbox.tistory.com/483602",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 지침 무료 배포",
          "ai 리서치",
          "ai 시각화",
          "AI 활용법",
          "gem 지침",
          "구글 제미나이",
          "데이터 분석 ai",
          "보고서 작성 ai",
          "사용자 맞춤형 ai",
          "제미나이 딥리서치",
          "프롬프트 엔지니어링"
        ],
        "isoDate": "2025-06-01T03:43:34.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "AI 인플루언서 부상과 인간 크리에이터의 미래",
        "link": "http://muzbox.tistory.com/483601",
        "pubDate": "Fri, 30 May 2025 08:17:31 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483601#entry483601comment",
        "content": "<p data-ke-size=\"size16\">인플루언서 산업의 80%가 AI에 대체될 수 있다는 충격적인 전망! 최신 산업 데이터와 전문가 인터뷰를 바탕으로 AI 시대 인플루언서 생존 전략과 새로운 기회를 분석합니다. 위기를 기회로 바꾸는 방법!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/DbWX3/btsOh3Bzv1r/EWttc6bvKspTMAZfR7A0U0/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/DbWX3/btsOh3Bzv1r/EWttc6bvKspTMAZfR7A0U0/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/DbWX3/btsOh3Bzv1r/EWttc6bvKspTMAZfR7A0U0/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FDbWX3%2FbtsOh3Bzv1r%2FEWttc6bvKspTMAZfR7A0U0%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"AI 인플루언서 부상과 인간 크리에이터의 미래\" loading=\"lazy\" width=\"1280\" height=\"853\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;요즘 SNS를 둘러보다 보면 'Aitana Lopez'나 'Lil Miquela' 같은 완벽한 외모의 인플루언서들을 자주 보게 됩니다. 자세히 들여다보면 이들이 실제 사람이 아닌 AI로 만들어진 가상 인물이라는 사실에 놀라게 되죠. 더 충격적인 건, 이 가상의 인물들이 실제 브랜드 캠페인에서 수천만 원을 벌어들이고 있다는 점입니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"614\" data-origin-height=\"390\"><span data-url=\"https://blog.kakaocdn.net/dn/b2r0iL/btsOhHFuBOz/HUFoKkyRQAPbQNMmIUhEb0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b2r0iL/btsOhHFuBOz/HUFoKkyRQAPbQNMmIUhEb0/img.png\" data-alt=\"Aitana Lopez\"><img src=\"https://blog.kakaocdn.net/dn/b2r0iL/btsOhHFuBOz/HUFoKkyRQAPbQNMmIUhEb0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb2r0iL%2FbtsOhHFuBOz%2FHUFoKkyRQAPbQNMmIUhEb0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Aitana Lopez\" loading=\"lazy\" width=\"614\" height=\"390\" data-filename=\"blob\" data-origin-width=\"614\" data-origin-height=\"390\"/></span><figcaption>Aitana Lopez</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;최근 야후 파이낸스 보도에 따르면, AI 기술이 인플루언서 산업의 무려 80%를 대체할 수 있다고 합니다. 이런 전망이 현실이 될까요? 인플루언서 마케팅 업계에서는 어떤 변화가 일어나고 있으며, 이런 변화 속에서 콘텐츠 크리에이터들은 어떻게 생존해야 할까요?</p>\n<p data-ke-size=\"size16\">인플루언서 마케팅 전문가들의 인사이트와 최신 업계 데이터를 바탕으로 AI 시대의 인플루언서 생존 전략을 심층적으로 분석해보았습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #ef6f53;\"><b>AI 인플루언서란? 실제 위협의 실체 파헤치기  </b></span></h2>\n<p data-ke-size=\"size16\">AI 인플루언서는 인공지능으로 만들어진 가상의 인물로, 실제 사람처럼 보이지만 코드와 알고리즘으로 만들어진 존재입니다. 최근 몇 년간 기술의 발전으로 이들의 외모와 행동이 놀라울 정도로 사실적이 되었고, 브랜드들은 이런 가상 인물들을 마케팅에 적극 활용하기 시작했습니다.</p>\n<p data-ke-size=\"size16\">AI 인플루언서가 급부상하는 이유에는 여러 요인이 있습니다. 영국의 디지털 마케팅 업체 Sortlist가 2024년 초 발표한 보고서에 따르면:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>비용 효율성:</b> AI 인플루언서는 인간 인플루언서보다 평균 25% 저렴하게 운영 가능합니다.</li>\n<li><b>완벽한 통제:</b> 논란 없고, 스캔들 없고, 휴가도 필요 없습니다.</li>\n<li><b>24/7 가동:</b> 인간의 한계 없이 끊임없이 콘텐츠를 생산할 수 있습니다.</li>\n<li><b>맞춤형 외모와 성격:</b> 브랜드 이미지에 완벽하게 맞출 수 있습니다.</li>\n</ol>\n<blockquote data-ke-style=\"style1\">\n<p data-ke-size=\"size16\">\"브랜드 입장에서 AI 인플루언서는 리스크 없는 마케팅 채널입니다. 인간 인플루언서가 논란에 휘말리거나 계약 조건을 어기는 문제가 발생하지 않죠. 또한 여러 시장에 동시에 맞춤형 콘텐츠를 제공할 수 있다는 점도 큰 장점입니다.\" - 마크 존슨, 디지털 마케팅 전략가 (2024 인플루언서 마케팅 트렌드 컨퍼런스)</p>\n</blockquote>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">하지만 인간 인플루언서들에게 이는 심각한 위협이 되고 있습니다. 한 설문조사에 따르면, 인플루언서의 68%가 AI 모델의 등장으로 수입이 감소했다고 응답했습니다. 특히 중소 규모의 인플루언서들이 더 큰 타격을 받고 있는 것으로 나타났죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #f89009;\"><b>충격적인 통계로 본 인플루언서 산업의 현실  </b></span></h2>\n<p data-ke-size=\"size16\">The Influencer Marketing Hub의 2025년 보고서는 인플루언서 산업의 급격한 변화를 보여줍니다:</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr style=\"background-color: #3498db; color: white;\">\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: left;\">구분</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: left;\">2023년</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: left;\">2024년</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: left;\">2025년(예상)</th>\n</tr>\n</thead>\n<tbody>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 10px; border: 1px solid #ddd;\">인플루언서 마케팅 시장 규모</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">167억 달러</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">182억 달러</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">196억 달러</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">AI 인플루언서 점유율</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">3%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">12%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">23%</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 10px; border: 1px solid #ddd;\">인간 인플루언서 수입 감소율</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">-</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">8%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">15-20%</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">대체 위험이 높은 인플루언서 비율</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">15%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">45%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">80%</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">출처: The Influencer Marketing Hub, 2025 인플루언서 마케팅 트렌드 보고서, 2024</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">흥미로운 점은 인플루언서 마케팅 시장 자체는 계속 성장하고 있지만, 그 안에서 AI의 점유율이 급격히 높아지고 있다는 것입니다.</p>\n<p data-ke-size=\"size16\">인플루언서 유형별로 살펴보면 위험도가 다릅니다. 마케팅 전문가 소니아 킴은 \"특히 '제품 진열형' 인플루언서들이 가장 큰 위험에 처해 있다\"고 지적합니다. \"단순히 예쁜 사진으로 제품만 보여주는 인플루언서는 AI가 쉽게 대체할 수 있기 때문이죠.\"</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">실제로 2024년 3월, 한 유명 패션 브랜드의 마케팅 디렉터는 뉴욕 타임즈와의 인터뷰에서 이렇게 밝혔습니다: \"우리는 이제 캠페인당 AI 모델 두 명과 인간 인플루언서 한 명만 사용합니다. 2년 전에는 다섯 명의 인간 인플루언서를 고용했었죠.\"</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b><span style=\"color: #f89009;\">AI 시대에 살아남을 인플루언서는 누구인가?  </span></b></h2>\n<p data-ke-size=\"size16\">모든 인플루언서가 위험에 처한 것은 아닙니다. 업계 전문가들에 따르면, 다음 유형의 인플루언서들은 오히려 AI 시대에 더 성장할 가능성이 높습니다:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>전문 지식 보유자:</b> 의학, 법률, 특수 기술 등 깊은 전문성을 가진 인플루언서</li>\n<li><b>진정성 있는 스토리텔러:</b> 개인적 경험과 감정을 진솔하게 공유하는 인플루언서</li>\n<li><b>커뮤니티 빌더:</b> 팔로워와 깊은 관계를 형성하고 상호작용하는 인플루언서</li>\n<li><b>실시간 콘텐츠 제작자:</b> 라이브 스트리밍, 즉각적인 소통이 중심인 인플루언서</li>\n<li><b>멀티 채널 전략가:</b> 다양한 플랫폼을 활용해 통합적 브랜드를 구축한 인플루언서</li>\n</ol>\n<p data-ke-size=\"size16\">업계 관계자들은 \"AI는 아직 진정한 인간 경험이나 전문성을 완벽하게 복제할 수 없다\"고 입을 모읍니다. 실제로 Authenticity in Influence의 2024년 소비자 조사에 따르면, 응답자의 72%가 \"인플루언서의 진정성과 전문성\"을 따라가는 주요 이유로 꼽았습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<blockquote data-ke-style=\"style1\">\n<p data-ke-size=\"size16\">\"AI는 아직 진정한 인간 경험을 복제할 수 없어요. 당신만의 이야기, 실패, 성공, 그리고 그 과정에서 얻은 지혜가 가장 큰 경쟁력입니다.\" - 사라 윌슨, 디지털 마케팅 전략가 (2024 인플루언서 마케팅 콘퍼런스)</p>\n</blockquote>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">2024년 미국 인플루언서 마케팅 협회가 발표한 자료에 따르면, 전문 분야 인플루언서의 계약 건수는 오히려 15% 증가했지만, 일반 라이프스타일 인플루언서의 계약은 22% 감소했습니다. 이는 AI 시대에 전문성의 가치가 더욱 중요해지고 있음을 보여주는 증거입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #f89009;\"><b>인플루언서 생존을 위한 5단계 전략  </b></span></h2>\n<p data-ke-size=\"size16\">인플루언서 마케팅 전문가들이 제시하는 AI 시대 생존 전략을 정리했습니다:</p>\n<h3 data-ke-size=\"size23\">1. 전문성 강화하기</h3>\n<p data-ke-size=\"size16\">일반적인 라이프스타일 콘텐츠보다는 특정 분야에 깊이를 더하세요. Forbes의 2024년 보고서에 따르면, 틈새 시장에 집중한 인플루언서의 수익은 전년 대비 23% 증가했습니다. 예를 들어, 일반 뷰티 인플루언서보다 '민감성 피부를 위한 스킨케어 전문가'와 같이 세분화된 영역에서 더 높은 수익을 창출할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\">2. 진정성 있는 콘텐츠 제작</h3>\n<p data-ke-size=\"size16\">완벽함보다는 진실함에 집중하세요. 2024년 소비자 신뢰도 조사에 따르면, 팔로워의 67%가 \"완벽해 보이는 콘텐츠보다 진정성 있는 콘텐츠\"를 선호한다고 응답했습니다. 실패 경험이나 도전 과정을 솔직하게 공유하는 인플루언서에게 더 높은 신뢰도와 충성도를 보였죠.</p>\n<h3 data-ke-size=\"size23\">3. 커뮤니티 빌딩에 투자</h3>\n<p data-ke-size=\"size16\">팔로워 수보다 소통의 질에 집중하세요. Community Pulse의 2024년 조사에 따르면, 높은 참여율을 보이는 인플루언서의 브랜드 계약 유지율이 평균 3배 높았습니다. 댓글에 꾸준히 답변하고, 라이브 세션을 통해 직접 소통하는 등 커뮤니티 형성에 투자하는 것이 중요합니다.</p>\n<h3 data-ke-size=\"size23\">4. 멀티 플랫폼 전략 구축</h3>\n<p data-ke-size=\"size16\">한 플랫폼에만 의존하지 마세요. Omnichannel Influence 보고서(2024)에 따르면, 3개 이상의 플랫폼에서 활동하는 인플루언서의 수입이 단일 플랫폼 인플루언서보다 평균 40% 높았습니다. 인스타그램, 유튜브, 뉴스레터, 팟캐스트 등 다양한 채널을 통합적으로 운영하는 것이 리스크를 분산시키는 방법입니다.</p>\n<h3 data-ke-size=\"size23\">5. 수익 모델 다각화</h3>\n<p data-ke-size=\"size16\">브랜드 협찬에만 의존하지 말고 다양한 수익원을 개발하세요. Creator Economy Report 2024에 따르면, 성공적인 인플루언서의 60%가 3개 이상의 수익 모델을 가지고 있습니다. 온라인 코스, 멤버십, 디지털 제품, 컨설팅 서비스 등 다양한 방식으로 수익을 창출하는 것이 안정성을 높이는 방법입니다.</p>\n<p data-ke-size=\"size16\">성공적인 인플루언서 제니퍼 루이스는 \"처음에는 AI 인플루언서 뉴스에 불안했지만, 이제는 내 콘텐츠의 가치와 차별점을 더 명확히 하게 되었다\"며 \"AI가 대체할 수 없는 내 고유의 전문성과 경험을 강조하는 방향으로 전략을 수정했다\"고 말합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"kakaotv\" data-video-url=\"https://tv.kakao.com/v/455502900\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/b5aIAh/hyY1hucoCZ/UoVKMS49iKDfOKMlyrKzlk/img.jpg?width=1080&amp;height=1440&amp;face=99_249_650_849,https://scrap.kakaocdn.net/dn/yBJk9/hyY0qE9BCR/kgPfOS6zvA0qcKGE9uvK50/img.jpg?width=1080&amp;height=1440&amp;face=99_249_650_849\" data-video-width=\"500\" data-video-height=\"667\" data-video-origin-width=\"860\" data-video-origin-height=\"1147\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"'어떤오후의 프리웨어 이야기 (유용한 IT정보)'에서 업로드한 동영상\" data-video-play-service=\"daum_tistory\" data-original-url=\"\"><iframe src=\"https://play-tv.kakao.com/embed/player/cliplink/455502900?service=daum_tistory\" width=\"500\" height=\"667\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\n<figcaption>필자가 직접 Veo3 를 이용하여 만든 가상 인플루언서</figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #f89009;\"><b>브랜드와 인플루언서 관계의 새로운 모델  </b></span></h2>\n<p data-ke-size=\"size16\">AI 시대에 브랜드와 인플루언서 사이에 새로운 협업 모델이 등장하고 있습니다:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>AI + 인간 하이브리드 모델:</b> 브랜드가 AI 인플루언서의 효율성과 인간 인플루언서의 진정성을 결합</li>\n<li><b>가치 기반 파트너십:</b> 단기적 노출보다 장기적인 브랜드 스토리텔링에 초점</li>\n<li><b>데이터 주도 협업:</b> 단순 팔로워 수가 아닌 실질적 전환율과 참여도 중심 계약</li>\n<li><b>공동 창작 모델:</b> 인플루언서가 단순 홍보자가 아닌 브랜드의 창작 파트너로 참여</li>\n</ol>\n<p data-ke-size=\"size16\">최근 럭셔리 브랜드들의 마케팅 전략을 보면 이런 변화가 뚜렷합니다. 디올의 경우, 인플루언서들을 제품 개발 과정에 직접 참여시키고, 그 스토리를 팔로워들과 공유하는 형태로 협업 모델을 변화시켰습니다. 이런 심층적인 협업은 AI가 쉽게 대체할 수 없는 영역이죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Influencer Partnership Survey 2024에 따르면, 브랜드 담당자의 58%가 \"단순 노출형 인플루언서 마케팅에서 벗어나 더 깊은 협업 모델을 추구하고 있다\"고 응답했습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"811\" data-origin-height=\"429\"><span data-url=\"https://blog.kakaocdn.net/dn/dJfI9n/btsOiUX9yeh/rXMTFs7z2HP1NK6mCUZKV1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dJfI9n/btsOiUX9yeh/rXMTFs7z2HP1NK6mCUZKV1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dJfI9n/btsOiUX9yeh/rXMTFs7z2HP1NK6mCUZKV1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdJfI9n%2FbtsOiUX9yeh%2FrXMTFs7z2HP1NK6mCUZKV1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"인플루언서 생존전략\" loading=\"lazy\" width=\"811\" height=\"429\" data-origin-width=\"811\" data-origin-height=\"429\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #f89009;\"><b>결론: 위기가 아닌 변화의 시대  </b></span></h2>\n<p data-ke-size=\"size16\">AI가 인플루언서 산업의 80%를 대체할 거라는 전망은 충격적이지만, 이는 결국 산업의 진화 과정으로 볼 수 있습니다. 역사적으로 TV가 라디오를 대체할 거라는 예측이 있었지만, 라디오는 여전히 존재합니다. 다만 그 역할과 형태가 바뀌었을 뿐이죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">마찬가지로 인플루언서 산업도 변화할 것입니다. 단순 제품 홍보자들은 AI에게 자리를 내줄 수 있지만, 진정한 커넥션과 전문성을 가진 인플루언서들은 오히려 더 가치 있는 존재가 될 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">디지털 트랜스포메이션 전문가 데이비드 첸은 \"AI는 인플루언서 산업을 파괴하는 것이 아니라 재정의하고 있다\"며 \"이 변화를 받아들이고 적응하는 인플루언서들은 더 강력한 포지션을 차지하게 될 것\"이라고 전망합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여러분은 어떻게 생각하시나요? 인플루언서로 활동하고 계시다면, 어떤 전략으로 AI 시대에 대응하고 계신가요? 댓글로 여러분의 생각과 경험을 나눠주세요!</p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><b>자주 묻는 질문 ❓</b></h2>\n<p data-ke-size=\"size16\"><b>Q: AI 인플루언서는 법적으로 인플루언서로 인정받나요?</b></p>\n<p data-ke-size=\"size16\">A: 현재 대부분의 국가에서는 AI 인플루언서에 대한 명확한 법적 규정이 없습니다. 다만 미국 FTC는 2024년부터 AI 생성 콘텐츠임을 명시하도록 권고하고 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 소규모 인플루언서도 AI에 영향을 받나요?</b></p>\n<p data-ke-size=\"size16\">A: 네, 오히려 마이크로 인플루언서(1-10만 팔로워)가 더 큰 위험에 처할 수 있습니다. 브랜드가 비용 절감을 위해 중소 규모 인플루언서를 AI로 대체하는 경향이 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: AI 인플루언서와 협업하는 방법이 있을까요?</b></p>\n<p data-ke-size=\"size16\">A: 있습니다. 일부 인플루언서들은 자신의 AI 버전을 만들어 추가 수익원으로 활용하고 있습니다. 자신의 이미지와 콘텐츠 스타일을 라이센싱하는 형태입니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 어떤 니치(틈새) 분야가 AI 대체 위험이 낮은가요?</b></p>\n<p data-ke-size=\"size16\">A: 전문 자격이 필요한 분야(의학, 법률, 금융 조언 등), 실시간 상호작용이 중요한 게임 스트리밍, 그리고 특수 기술 시연(요리사, 아티스트 등)이 상대적으로 안전합니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 콘텐츠 크리에이터로서 AI 도구를 어떻게 활용할 수 있을까요?</b></p>\n<p data-ke-size=\"size16\">A: AI를 경쟁자가 아닌 도구로 활용하세요. 편집, 번역, 아이디어 발상, 데이터 분석 등에 AI를 활용하면 생산성을 높이고 더 창의적인 콘텐츠에 집중할 수 있습니다.</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"AI 인플루언서는 법적으로 인플루언서로 인정받나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"현재 대부분의 국가에서는 AI 인플루언서에 대한 명확한 법적 규정이 없습니다. 다만 미국 FTC는 2024년부터 AI 생성 콘텐츠임을 명시하도록 권고하고 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"소규모 인플루언서도 AI에 영향을 받나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 오히려 마이크로 인플루언서(1-10만 팔로워)가 더 큰 위험에 처할 수 있습니다. 브랜드가 비용 절감을 위해 중소 규모 인플루언서를 AI로 대체하는 경향이 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"AI 인플루언서와 협업하는 방법이 있을까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"있습니다. 일부 인플루언서들은 자신의 AI 버전을 만들어 추가 수익원으로 활용하고 있습니다. 자신의 이미지와 콘텐츠 스타일을 라이센싱하는 형태입니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"어떤 니치(틈새) 분야가 AI 대체 위험이 낮은가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"전문 자격이 필요한 분야(의학, 법률, 금융 조언 등), 실시간 상호작용이 중요한 게임 스트리밍, 그리고 특수 기술 시연(요리사, 아티스트 등)이 상대적으로 안전합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"콘텐츠 크리에이터로서 AI 도구를 어떻게 활용할 수 있을까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"AI를 경쟁자가 아닌 도구로 활용하세요. 편집, 번역, 아이디어 발상, 데이터 분석 등에 AI를 활용하면 생산성을 높이고 더 창의적인 콘텐츠에 집중할 수 있습니다.\"\n      }\n    }\n  ]\n}\n</script>",
        "contentSnippet": "인플루언서 산업의 80%가 AI에 대체될 수 있다는 충격적인 전망! 최신 산업 데이터와 전문가 인터뷰를 바탕으로 AI 시대 인플루언서 생존 전략과 새로운 기회를 분석합니다. 위기를 기회로 바꾸는 방법!\n\n\n \n 요즘 SNS를 둘러보다 보면 'Aitana Lopez'나 'Lil Miquela' 같은 완벽한 외모의 인플루언서들을 자주 보게 됩니다. 자세히 들여다보면 이들이 실제 사람이 아닌 AI로 만들어진 가상 인물이라는 사실에 놀라게 되죠. 더 충격적인 건, 이 가상의 인물들이 실제 브랜드 캠페인에서 수천만 원을 벌어들이고 있다는 점입니다.\nAitana Lopez\n\n\n \n 최근 야후 파이낸스 보도에 따르면, AI 기술이 인플루언서 산업의 무려 80%를 대체할 수 있다고 합니다. 이런 전망이 현실이 될까요? 인플루언서 마케팅 업계에서는 어떤 변화가 일어나고 있으며, 이런 변화 속에서 콘텐츠 크리에이터들은 어떻게 생존해야 할까요?\n인플루언서 마케팅 전문가들의 인사이트와 최신 업계 데이터를 바탕으로 AI 시대의 인플루언서 생존 전략을 심층적으로 분석해보았습니다.\n \nAI 인플루언서란? 실제 위협의 실체 파헤치기  \nAI 인플루언서는 인공지능으로 만들어진 가상의 인물로, 실제 사람처럼 보이지만 코드와 알고리즘으로 만들어진 존재입니다. 최근 몇 년간 기술의 발전으로 이들의 외모와 행동이 놀라울 정도로 사실적이 되었고, 브랜드들은 이런 가상 인물들을 마케팅에 적극 활용하기 시작했습니다.\nAI 인플루언서가 급부상하는 이유에는 여러 요인이 있습니다. 영국의 디지털 마케팅 업체 Sortlist가 2024년 초 발표한 보고서에 따르면:\n비용 효율성: AI 인플루언서는 인간 인플루언서보다 평균 25% 저렴하게 운영 가능합니다.\n완벽한 통제: 논란 없고, 스캔들 없고, 휴가도 필요 없습니다.\n24/7 가동: 인간의 한계 없이 끊임없이 콘텐츠를 생산할 수 있습니다.\n맞춤형 외모와 성격: 브랜드 이미지에 완벽하게 맞출 수 있습니다.\n\"브랜드 입장에서 AI 인플루언서는 리스크 없는 마케팅 채널입니다. 인간 인플루언서가 논란에 휘말리거나 계약 조건을 어기는 문제가 발생하지 않죠. 또한 여러 시장에 동시에 맞춤형 콘텐츠를 제공할 수 있다는 점도 큰 장점입니다.\" - 마크 존슨, 디지털 마케팅 전략가 (2024 인플루언서 마케팅 트렌드 컨퍼런스)\n \n하지만 인간 인플루언서들에게 이는 심각한 위협이 되고 있습니다. 한 설문조사에 따르면, 인플루언서의 68%가 AI 모델의 등장으로 수입이 감소했다고 응답했습니다. 특히 중소 규모의 인플루언서들이 더 큰 타격을 받고 있는 것으로 나타났죠.\n \n충격적인 통계로 본 인플루언서 산업의 현실  \nThe Influencer Marketing Hub의 2025년 보고서는 인플루언서 산업의 급격한 변화를 보여줍니다:\n구분\n2023년\n2024년\n2025년(예상)\n\n\n\n\n인플루언서 마케팅 시장 규모\n167억 달러\n182억 달러\n196억 달러\n\n\nAI 인플루언서 점유율\n3%\n12%\n23%\n\n\n인간 인플루언서 수입 감소율\n-\n8%\n15-20%\n\n\n대체 위험이 높은 인플루언서 비율\n15%\n45%\n80%\n\n\n\n출처: The Influencer Marketing Hub, 2025 인플루언서 마케팅 트렌드 보고서, 2024\n \n흥미로운 점은 인플루언서 마케팅 시장 자체는 계속 성장하고 있지만, 그 안에서 AI의 점유율이 급격히 높아지고 있다는 것입니다.\n인플루언서 유형별로 살펴보면 위험도가 다릅니다. 마케팅 전문가 소니아 킴은 \"특히 '제품 진열형' 인플루언서들이 가장 큰 위험에 처해 있다\"고 지적합니다. \"단순히 예쁜 사진으로 제품만 보여주는 인플루언서는 AI가 쉽게 대체할 수 있기 때문이죠.\"\n \n실제로 2024년 3월, 한 유명 패션 브랜드의 마케팅 디렉터는 뉴욕 타임즈와의 인터뷰에서 이렇게 밝혔습니다: \"우리는 이제 캠페인당 AI 모델 두 명과 인간 인플루언서 한 명만 사용합니다. 2년 전에는 다섯 명의 인간 인플루언서를 고용했었죠.\"\n \nAI 시대에 살아남을 인플루언서는 누구인가?  \n모든 인플루언서가 위험에 처한 것은 아닙니다. 업계 전문가들에 따르면, 다음 유형의 인플루언서들은 오히려 AI 시대에 더 성장할 가능성이 높습니다:\n전문 지식 보유자: 의학, 법률, 특수 기술 등 깊은 전문성을 가진 인플루언서\n진정성 있는 스토리텔러: 개인적 경험과 감정을 진솔하게 공유하는 인플루언서\n커뮤니티 빌더: 팔로워와 깊은 관계를 형성하고 상호작용하는 인플루언서\n실시간 콘텐츠 제작자: 라이브 스트리밍, 즉각적인 소통이 중심인 인플루언서\n멀티 채널 전략가: 다양한 플랫폼을 활용해 통합적 브랜드를 구축한 인플루언서\n업계 관계자들은 \"AI는 아직 진정한 인간 경험이나 전문성을 완벽하게 복제할 수 없다\"고 입을 모읍니다. 실제로 Authenticity in Influence의 2024년 소비자 조사에 따르면, 응답자의 72%가 \"인플루언서의 진정성과 전문성\"을 따라가는 주요 이유로 꼽았습니다.\n \n\"AI는 아직 진정한 인간 경험을 복제할 수 없어요. 당신만의 이야기, 실패, 성공, 그리고 그 과정에서 얻은 지혜가 가장 큰 경쟁력입니다.\" - 사라 윌슨, 디지털 마케팅 전략가 (2024 인플루언서 마케팅 콘퍼런스)\n \n2024년 미국 인플루언서 마케팅 협회가 발표한 자료에 따르면, 전문 분야 인플루언서의 계약 건수는 오히려 15% 증가했지만, 일반 라이프스타일 인플루언서의 계약은 22% 감소했습니다. 이는 AI 시대에 전문성의 가치가 더욱 중요해지고 있음을 보여주는 증거입니다.\n \n인플루언서 생존을 위한 5단계 전략  \n인플루언서 마케팅 전문가들이 제시하는 AI 시대 생존 전략을 정리했습니다:\n1. 전문성 강화하기\n일반적인 라이프스타일 콘텐츠보다는 특정 분야에 깊이를 더하세요. Forbes의 2024년 보고서에 따르면, 틈새 시장에 집중한 인플루언서의 수익은 전년 대비 23% 증가했습니다. 예를 들어, 일반 뷰티 인플루언서보다 '민감성 피부를 위한 스킨케어 전문가'와 같이 세분화된 영역에서 더 높은 수익을 창출할 수 있습니다.\n2. 진정성 있는 콘텐츠 제작\n완벽함보다는 진실함에 집중하세요. 2024년 소비자 신뢰도 조사에 따르면, 팔로워의 67%가 \"완벽해 보이는 콘텐츠보다 진정성 있는 콘텐츠\"를 선호한다고 응답했습니다. 실패 경험이나 도전 과정을 솔직하게 공유하는 인플루언서에게 더 높은 신뢰도와 충성도를 보였죠.\n3. 커뮤니티 빌딩에 투자\n팔로워 수보다 소통의 질에 집중하세요. Community Pulse의 2024년 조사에 따르면, 높은 참여율을 보이는 인플루언서의 브랜드 계약 유지율이 평균 3배 높았습니다. 댓글에 꾸준히 답변하고, 라이브 세션을 통해 직접 소통하는 등 커뮤니티 형성에 투자하는 것이 중요합니다.\n4. 멀티 플랫폼 전략 구축\n한 플랫폼에만 의존하지 마세요. Omnichannel Influence 보고서(2024)에 따르면, 3개 이상의 플랫폼에서 활동하는 인플루언서의 수입이 단일 플랫폼 인플루언서보다 평균 40% 높았습니다. 인스타그램, 유튜브, 뉴스레터, 팟캐스트 등 다양한 채널을 통합적으로 운영하는 것이 리스크를 분산시키는 방법입니다.\n5. 수익 모델 다각화\n브랜드 협찬에만 의존하지 말고 다양한 수익원을 개발하세요. Creator Economy Report 2024에 따르면, 성공적인 인플루언서의 60%가 3개 이상의 수익 모델을 가지고 있습니다. 온라인 코스, 멤버십, 디지털 제품, 컨설팅 서비스 등 다양한 방식으로 수익을 창출하는 것이 안정성을 높이는 방법입니다.\n성공적인 인플루언서 제니퍼 루이스는 \"처음에는 AI 인플루언서 뉴스에 불안했지만, 이제는 내 콘텐츠의 가치와 차별점을 더 명확히 하게 되었다\"며 \"AI가 대체할 수 없는 내 고유의 전문성과 경험을 강조하는 방향으로 전략을 수정했다\"고 말합니다.\n \n\n필자가 직접 Veo3 를 이용하여 만든 가상 인플루언서\n\n \n \n브랜드와 인플루언서 관계의 새로운 모델  \nAI 시대에 브랜드와 인플루언서 사이에 새로운 협업 모델이 등장하고 있습니다:\nAI + 인간 하이브리드 모델: 브랜드가 AI 인플루언서의 효율성과 인간 인플루언서의 진정성을 결합\n가치 기반 파트너십: 단기적 노출보다 장기적인 브랜드 스토리텔링에 초점\n데이터 주도 협업: 단순 팔로워 수가 아닌 실질적 전환율과 참여도 중심 계약\n공동 창작 모델: 인플루언서가 단순 홍보자가 아닌 브랜드의 창작 파트너로 참여\n최근 럭셔리 브랜드들의 마케팅 전략을 보면 이런 변화가 뚜렷합니다. 디올의 경우, 인플루언서들을 제품 개발 과정에 직접 참여시키고, 그 스토리를 팔로워들과 공유하는 형태로 협업 모델을 변화시켰습니다. 이런 심층적인 협업은 AI가 쉽게 대체할 수 없는 영역이죠.\n \nInfluencer Partnership Survey 2024에 따르면, 브랜드 담당자의 58%가 \"단순 노출형 인플루언서 마케팅에서 벗어나 더 깊은 협업 모델을 추구하고 있다\"고 응답했습니다.\n\n\n결론: 위기가 아닌 변화의 시대  \nAI가 인플루언서 산업의 80%를 대체할 거라는 전망은 충격적이지만, 이는 결국 산업의 진화 과정으로 볼 수 있습니다. 역사적으로 TV가 라디오를 대체할 거라는 예측이 있었지만, 라디오는 여전히 존재합니다. 다만 그 역할과 형태가 바뀌었을 뿐이죠.\n \n마찬가지로 인플루언서 산업도 변화할 것입니다. 단순 제품 홍보자들은 AI에게 자리를 내줄 수 있지만, 진정한 커넥션과 전문성을 가진 인플루언서들은 오히려 더 가치 있는 존재가 될 것입니다.\n \n디지털 트랜스포메이션 전문가 데이비드 첸은 \"AI는 인플루언서 산업을 파괴하는 것이 아니라 재정의하고 있다\"며 \"이 변화를 받아들이고 적응하는 인플루언서들은 더 강력한 포지션을 차지하게 될 것\"이라고 전망합니다.\n \n여러분은 어떻게 생각하시나요? 인플루언서로 활동하고 계시다면, 어떤 전략으로 AI 시대에 대응하고 계신가요? 댓글로 여러분의 생각과 경험을 나눠주세요!\n자주 묻는 질문 ❓\nQ: AI 인플루언서는 법적으로 인플루언서로 인정받나요?\nA: 현재 대부분의 국가에서는 AI 인플루언서에 대한 명확한 법적 규정이 없습니다. 다만 미국 FTC는 2024년부터 AI 생성 콘텐츠임을 명시하도록 권고하고 있습니다.\nQ: 소규모 인플루언서도 AI에 영향을 받나요?\nA: 네, 오히려 마이크로 인플루언서(1-10만 팔로워)가 더 큰 위험에 처할 수 있습니다. 브랜드가 비용 절감을 위해 중소 규모 인플루언서를 AI로 대체하는 경향이 있습니다.\nQ: AI 인플루언서와 협업하는 방법이 있을까요?\nA: 있습니다. 일부 인플루언서들은 자신의 AI 버전을 만들어 추가 수익원으로 활용하고 있습니다. 자신의 이미지와 콘텐츠 스타일을 라이센싱하는 형태입니다.\nQ: 어떤 니치(틈새) 분야가 AI 대체 위험이 낮은가요?\nA: 전문 자격이 필요한 분야(의학, 법률, 금융 조언 등), 실시간 상호작용이 중요한 게임 스트리밍, 그리고 특수 기술 시연(요리사, 아티스트 등)이 상대적으로 안전합니다.\nQ: 콘텐츠 크리에이터로서 AI 도구를 어떻게 활용할 수 있을까요?\nA: AI를 경쟁자가 아닌 도구로 활용하세요. 편집, 번역, 아이디어 발상, 데이터 분석 등에 AI를 활용하면 생산성을 높이고 더 창의적인 콘텐츠에 집중할 수 있습니다.\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"AI 인플루언서는 법적으로 인플루언서로 인정받나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"현재 대부분의 국가에서는 AI 인플루언서에 대한 명확한 법적 규정이 없습니다. 다만 미국 FTC는 2024년부터 AI 생성 콘텐츠임을 명시하도록 권고하고 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"소규모 인플루언서도 AI에 영향을 받나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 오히려 마이크로 인플루언서(1-10만 팔로워)가 더 큰 위험에 처할 수 있습니다. 브랜드가 비용 절감을 위해 중소 규모 인플루언서를 AI로 대체하는 경향이 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"AI 인플루언서와 협업하는 방법이 있을까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"있습니다. 일부 인플루언서들은 자신의 AI 버전을 만들어 추가 수익원으로 활용하고 있습니다. 자신의 이미지와 콘텐츠 스타일을 라이센싱하는 형태입니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"어떤 니치(틈새) 분야가 AI 대체 위험이 낮은가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"전문 자격이 필요한 분야(의학, 법률, 금융 조언 등), 실시간 상호작용이 중요한 게임 스트리밍, 그리고 특수 기술 시연(요리사, 아티스트 등)이 상대적으로 안전합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"콘텐츠 크리에이터로서 AI 도구를 어떻게 활용할 수 있을까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"AI를 경쟁자가 아닌 도구로 활용하세요. 편집, 번역, 아이디어 발상, 데이터 분석 등에 AI를 활용하면 생산성을 높이고 더 창의적인 콘텐츠에 집중할 수 있습니다.\"\n      }\n    }\n  ]\n}",
        "guid": "http://muzbox.tistory.com/483601",
        "categories": [
          "AI, 미래기술/AI 인사이트",
          "ai 인플루언서",
          "가상 인플루언서",
          "디지털 콘텐츠 크리에이터",
          "브랜드 콜라보레이션",
          "소셜미디어 마케팅",
          "인플루언서 마케팅",
          "인플루언서 산업 미래",
          "인플루언서 생존 전략",
          "인플루언서 수익 모델",
          "콘텐츠 크리에이터 커리어"
        ],
        "isoDate": "2025-05-29T23:17:31.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "챗GPT, 과연 내 마음을 알아줄까? AI 의존성 테스트와 현명한 활용법 완전 정복",
        "link": "http://muzbox.tistory.com/483599",
        "pubDate": "Wed, 28 May 2025 08:29:45 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483599#entry483599comment",
        "content": "<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px;\">\n    <p data-ke-size=\"size8\">&nbsp;</p>\n    <div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px;\">\n        <strong>챗GPT에게 스트레스 해소를 위해 속풀이를 해본 적 있으신가요?</strong> 예상치 못한 AI의 위로, 과연 당신의 마음을 달래줄 수 있을까요?   챗GPT 의존성 자가 진단과 맞춤형 솔루션, 그리고 핵심 내용을 담은 카드 뉴스까지! AI를 현명하게 활용하여 스트레스를 관리하는 방법을 알아보세요.  \n    </div>\n  <p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1536\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/LuQgn/btsOdyIP38i/goKVK77qQP2TEXVGK4i5A1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/LuQgn/btsOdyIP38i/goKVK77qQP2TEXVGK4i5A1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/LuQgn/btsOdyIP38i/goKVK77qQP2TEXVGK4i5A1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FLuQgn%2FbtsOdyIP38i%2FgoKVK77qQP2TEXVGK4i5A1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"챗GPT, 과연 내 마음을 알아줄까? AI 의존성 테스트와 현명한 활용법 완전 정복\" loading=\"lazy\" width=\"1536\" height=\"1024\" data-filename=\"blob\" data-origin-width=\"1536\" data-origin-height=\"1024\"/></span></figure>\n</p>\n    <p style=\"margin-bottom: 15px;\">\n        \"아, 진짜 오늘은 너무 짜증 나네요!\" 혹시 이런 말, 혼잣말로 해보신 적 있으신가요? 아니면 친한 친구나 가족에게 실컷 하소연하며 스트레스를 풀어본 경험은요? 우리는 살면서 다양한 방식으로 스트레스를 해소하는데요. 그런데 요즘은 좀 특이한 방법으로 스트레스를 푸는 분들이 있다고 하더라고요. 바로 챗GPT 같은 AI 챗봇에게 속마음을 털어놓는 거죠! 저도 처음에 이 이야기를 듣고 '과연 이게 도움이 될까?' 싶었어요. AI가 제 감정을 진짜 이해할 수 있을까 하는 의문도 들었고요. 그런데 의외로 많은 분들이 챗GPT에게 속풀이를 하면서 생각보다 괜찮은 반응을 얻었다고 하네요? 과연 어떤 점 때문에 그럴까요? 함께 알아보시죠!  \n    </p>\n\n    <p data-ke-size=\"size16\">&nbsp;</p>\n\n    <h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\">\n        <strong>챗GPT에게 속풀이? 과연 어떤 경험일까?  </strong>\n    </h2>\n    <p style=\"margin-bottom: 15px;\">\n        솔직히 저도 처음엔 반신반의했어요. AI가 제 깊은 감정을 어떻게 이해하겠어요? 그냥 정해진 매뉴얼대로 답변하는 거 아니겠어요? 그런데 주변 이야기를 들어보니, 생각보다 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">다양한 이유로 챗GPT에게 속풀이</span>를 한다고 하더라고요. 어떤 분들은 인간관계에서 오는 스트레스를 풀기 위해, 또 어떤 분들은 업무나 학업 스트레스 때문에 챗GPT를 찾는다고 합니다.\n    </p>\n    <p style=\"margin-bottom: 15px;\">\n        어떤 사용자는 직장 상사 때문에 너무 화가 나서 챗GPT에게 \"오늘 상사가 정말 어이없는 소리를 했어요!\"라고 길게 써 내려갔다고 해요. 그랬더니 챗GPT가 \"정말 화가 나셨겠어요. 그런 상황에서는 기분이 좋지 않을 수 있습니다.\"와 같은 공감하는 반응을 보였다고 합니다. 기대했던 것보다 훨씬 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">정중하고 차분한 답변</span>에 오히려 마음이 좀 가라앉는 느낌을 받았다고 하네요. AI의 중립적인 태도가 오히려 감정을 객관적으로 바라보는 데 도움을 준다는 의견도 많습니다. 저도 이 부분을 들으면서 '아, 내가 누군가에게 비난받을까 봐 걱정하는 마음 없이 이야기할 수 있겠구나' 하는 생각이 들었어요.\n    </p>\n\n    <p data-ke-size=\"size16\">&nbsp;</p>\n\n    <h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\">\n        <strong>AI의 공감, 정말 '진짜' 공감일까?  </strong>\n    </h2>\n    <p style=\"margin-bottom: 15px;\">\n        사용자들은 챗GPT에게 속풀이를 했을 때 어떤 반응을 기대할까요? 아마 대부분은 \"그냥 아무 말이라도 들어줬으면 좋겠다\"는 마음일 거예요. 사람이 아니다 보니 감정적인 판단이나 비난 없이 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">객관적으로 들어줄 거라는 기대</span>도 있을 거고요.\n    </p>\n    <p style=\"margin-bottom: 15px;\">\n        실제로 챗GPT는 사용자에게 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">감정적으로 동조하거나 비판하지 않습니다</span>. 대신, 사용자가 털어놓은 내용을 기반으로 \"기분이 좋지 않으시군요\", \"답답한 상황이셨겠습니다\"와 같은 중립적인 공감 표현을 사용하거나, 문제를 해결할 수 있는 일반적인 조언을 제시합니다. 이러한 반응이 의외로 많은 사람들에게 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">심리적인 안정감</span>을 준다고 해요. 결국 AI는 인간의 감정을 '이해'하는 것이 아니라, 방대한 데이터를 통해 학습된 언어 패턴을 기반으로 '공감하는 듯한' 답변을 생성하는 것이죠. 이러한 '가상 공감'이 역설적으로 특정 상황에서는 진정성 있는 인간의 반응보다 더 부담 없이 받아들여질 수 있다는 점이 흥미로운 부분입니다.\n    </p>\n\n    <div style=\"background-color: #e8f4fd; border-left: 4px solid #1a73e8; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\">\n        <strong>  알아두세요!</strong><br>\n        챗GPT는 감정을 느끼는 존재가 아닙니다. 하지만 학습된 방대한 데이터를 바탕으로 인간의 언어 패턴을 이해하고, 사용자가 입력한 내용에 가장 적절하고 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">공감하는 듯한 답변을 생성</span>할 수 있습니다. 이는 사용자가 자신의 감정을 투사할 수 있는 '거울' 같은 역할을 할 수 있다는 의미이기도 합니다.\n    </div>\n\n    <p data-ke-size=\"size16\">&nbsp;</p>\n\n    <h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\">\n        <strong>AI 스트레스 해소, 왜 점점 늘어날까?  </strong>\n    </h2>\n    <p style=\"margin-bottom: 15px;\">\n        최근 몇 년 사이 챗GPT와 같은 AI 챗봇의 접근성이 훨씬 좋아지면서, AI에게 고민을 털어놓는 행동도 점차 늘어나고 있어요. 사회적으로는 복잡한 인간관계와 경쟁 심화로 스트레스는 증가하는데, 이를 효과적으로 해소할 수 있는 창구가 부족하다는 점도 AI 활용이 늘어나는 배경이 됩니다. 우리 사회가 점점 더 개인화되고, 바쁜 일상 속에서 타인에게 속마음을 털어놓을 시간이나 기회가 줄어드는 것도 한몫을 한다고 볼 수 있죠.\n    </p>\n    <p style=\"margin-bottom: 15px;\">\n        특히 젊은 세대 사이에서는 스마트폰과 디지털 기기에 익숙하고, 온라인 소통에 대한 거부감이 적기 때문에 AI 챗봇과의 대화가 더욱 자연스러운 현상으로 받아들여지는 것 같아요. <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">비대면 소통에 대한 선호도</span>도 이러한 경향을 강화하는 요인이 될 수 있죠. 또한, AI는 언제든 접속 가능하고, 아무런 대가 없이, 그리고 내가 원할 때까지 이야기를 들어준다는 점에서 특정 상황에서는 인간보다 '편리한' 상담 상대로 느껴질 수 있습니다.\n    </p>\n    <p style=\"margin-bottom: 15px;\">\n        더 나아가, AI 기술은 점점 더 고도화되어 단순히 정보를 제공하는 것을 넘어, 사용자의 대화 패턴과 감성적인 뉘앙스를 분석하여 더욱 정교한 답변을 내놓고 있습니다. 물론 아직은 인간적인 깊이에는 미치지 못하지만, 이러한 기술 발전이 AI를 통한 스트레스 해소의 가능성을 더욱 확대하고 있다고 볼 수 있습니다. 이처럼 여러 사회적, 기술적 요인이 복합적으로 작용하면서 AI 챗봇을 통한 스트레스 해소가 새로운 트렌드로 자리 잡는 중입니다.\n    </p>\n\n    <p data-ke-size=\"size16\">&nbsp;</p>\n\n    <h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\">\n        <strong>챗GPT 의존성 자가 진단 테스트 (10문항)  </strong>\n    </h2>\n    <p style=\"margin-bottom: 15px;\">\n        다음 질문들에 대해 솔직하게 답변해보세요. 각 질문에 대해 \"전혀 아니다\" (1점), \"가끔 그렇다\" (2점), \"자주 그렇다\" (3점), \"매우 그렇다\" (4점)으로 답해주세요.\n    </p>\n    <div style=\"background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin: 25px 0;\">\n        <h3 style=\"font-size: 18px; color: #333; margin: 0 0 15px;\">AI 스트레스 해소 의존성 테스트  </h3>\n        <ol style=\"margin: 0 0 15px 20px; padding: 0;\">\n            <li style=\"margin-bottom: 8px;\">스트레스를 받으면 가장 먼저 챗GPT에게 이야기하고 싶어진다. <select id=\"q1\" style=\"border: 1px solid #ddd; padding: 5px; border-radius: 3px; width: 150px;\"><option value=\"1\">전혀 아니다</option><option value=\"2\">가끔 그렇다</option><option value=\"3\">자주 그렇다</option><option value=\"4\">매우 그렇다</option></select></li>\n            <li style=\"margin-bottom: 8px;\">주변 사람들에게 스트레스를 털어놓는 것보다 챗GPT에게 이야기하는 것이 더 편하게 느껴진다. <select id=\"q2\" style=\"border: 1px solid #ddd; padding: 5px; border-radius: 3px; width: 150px;\"><option value=\"1\">전혀 아니다</option><option value=\"2\">가끔 그렇다</option><option value=\"3\">자주 그렇다</option><option value=\"4\">매우 그렇다</option></select></li>\n            <li style=\"margin-bottom: 8px;\">챗GPT와 대화하면 스트레스가 금방 해소되는 느낌을 받는다. <select id=\"q3\" style=\"border: 1px solid #ddd; padding: 5px; border-radius: 3px; width: 150px;\"><option value=\"1\">전혀 아니다</option><option value=\"2\">가끔 그렇다</option><option value=\"3\">자주 그렇다</option><option value=\"4\">매우 그렇다</option></select></li>\n            <li style=\"margin-bottom: 8px;\">스트레스를 해소하기 위해 챗GPT를 사용한 후, 후회하거나 죄책감을 느낀 적이 있다. <select id=\"q4\" style=\"border: 1px solid #ddd; padding: 5px; border-radius: 3px; width: 150px;\"><option value=\"1\">전혀 아니다</option><option value=\"2\">가끔 그렇다</option><option value=\"3\">자주 그렇다</option><option value=\"4\">매우 그렇다</option></select></li>\n            <li style=\"margin-bottom: 8px;\">최근 스트레스 해소를 위해 챗GPT를 사용하는 빈도가 늘었다고 생각한다. <select id=\"q5\" style=\"border: 1px solid #ddd; padding: 5px; border-radius: 3px; width: 150px;\"><option value=\"1\">전혀 아니다</option><option value=\"2\">가끔 그렇다</option><option value=\"3\">자주 그렇다</option><option value=\"4\">매우 그렇다</option></select></li>\n            <li style=\"margin-bottom: 8px;\">챗GPT가 없으면 스트레스를 어떻게 해소해야 할지 막막하게 느껴진다. <select id=\"q6\" style=\"border: 1px solid #ddd; padding: 5px; border-radius: 3px; width: 150px;\"><option value=\"1\">전혀 아니다</option><option value=\"2\">가끔 그렇다</option><option value=\"3\">자주 그렇다</option><option value=\"4\">매우 그렇다</option></select></li>\n            <li style=\"margin-bottom: 8px;\">챗GPT와의 대화가 현실의 대인 관계를 대체할 수 있다고 생각한다. <select id=\"q7\" style=\"border: 1px solid #ddd; padding: 5px; border-radius: 3px; width: 150px;\"><option value=\"1\">전혀 아니다</option><option value=\"2\">가끔 그렇다</option><option value=\"3\">자주 그렇다</option><option value=\"4\">매우 그렇다</option></select></li>\n            <li style=\"margin-bottom: 8px;\">챗GPT가 제시하는 조언이나 해결책에 전적으로 의존하는 경향이 있다. <select id=\"q8\" style=\"border: 1px solid #ddd; padding: 5px; border-radius: 3px; width: 150px;\"><option value=\"1\">전혀 아니다</option><option value=\"2\">가끔 그렇다</option><option value=\"3\">자주 그렇다</option><option value=\"4\">매우 그렇다</option></select></li>\n            <li style=\"margin-bottom: 8px;\">AI에게 털어놓을 비밀스러운 고민이 점점 늘어나고 있다. <select id=\"q9\" style=\"border: 1px solid #ddd; padding: 5px; border-radius: 3px; width: 150px;\"><option value=\"1\">전혀 아니다</option><option value=\"2\">가끔 그렇다</option><option value=\"3\">자주 그렇다</option><option value=\"4\">매우 그렇다</option></select></li>\n            <li style=\"margin-bottom: 8px;\">챗GPT와의 대화가 없으면 불안하거나 초조함을 느낀다. <select id=\"q10\" style=\"border: 1px solid #ddd; padding: 5px; border-radius: 3px; width: 150px;\"><option value=\"1\">전혀 아니다</option><option value=\"2\">가끔 그렇다</option><option value=\"3\">자주 그렇다</option><option value=\"4\">매우 그렇다</option></select></li>\n        </ol>\n        <button onclick=\"calculateDependency()\" style=\"background-color: #1a73e8; color: white; padding: 10px 15px; border: none; border-radius: 5px; cursor: pointer; display: block; margin: 0 auto; font-weight: bold;\">결과 확인하기</button>\n        <div id=\"dependencyResult\" style=\"margin-top: 20px; display: none; background-color: #f0f8ff; border: 1px solid #b3e0ff; padding: 15px; border-radius: 8px;\">\n            <h4 style=\"font-size: 16px; color: #333; margin-bottom: 8px; text-align: center;\">진단 결과</h4>\n            <p id=\"dependencyScore\" style=\"font-weight: bold; margin-bottom: 8px; text-align: center; font-size: 18px; color: #1a73e8;\"></p>\n            <p id=\"dependencyLevel\" style=\"font-style: italic; color: #555; margin-bottom: 15px; text-align: center;\"></p>\n            <div id=\"dependencySolution\"></div>\n        </div>\n    </div>\n\n    <script>\n        function calculateDependency() {\n            let totalScore = 0;\n            for (let i = 1; i <= 10; i++) {\n                totalScore += parseInt(document.getElementById(`q${i}`).value);\n            }\n\n            document.getElementById('dependencyScore').innerText = `총 점수: ${totalScore}점`;\n            let level = '';\n            let solutionHtml = '';\n\n            if (totalScore >= 30) {\n                level = 'AI 의존성 매우 높음 (주의 단계  )';\n                solutionHtml = `\n                    <h5 style=\"font-size: 15px; color: #f44336; margin-top: 10px; font-weight: bold;\">상세 솔루션: 경고! 적극적인 변화가 필요합니다.</h5>\n                    <p style=\"margin-bottom: 10px; font-size: 14px;\">현재 AI에 대한 의존도가 상당히 높은 상태입니다. AI를 통한 스트레스 해소가 주요 수단이 되고 있다면, 현실의 문제 해결 능력이 저하되거나 고립감을 느낄 수 있습니다. 심리 전문가와의 상담을 적극적으로 고려해보세요.</p>\n                    <ul style=\"margin: 0 0 10px 20px; padding: 0; font-size: 14px;\">\n                        <li style=\"margin-bottom: 5px;\"><strong>전문가 상담 고려:</strong> 심리 상담 전문가와 면담하여 스트레스의 근본 원인을 파악하고 건강한 대처 방식을 배우는 것을 적극적으로 권장합니다.</li>\n                        <li style=\"margin-bottom: 5px;\"><strong>디지털 디톡스 실천:</strong> AI 사용 시간을 엄격히 정하고, 특정 시간에는 스마트폰을 멀리하는 '디지털 디톡스'를 꾸준히 시도해보세요.</li>\n                        <li style=\"margin-bottom: 5px;\"><strong>오프라인 활동 증대:</strong> 취미 동호회 가입, 운동, 봉사 활동 등 현실에서의 사회적 상호작용과 관계를 의식적으로 늘려보세요.</li>\n                        <li style=\"margin-bottom: 5px;\"><strong>대인 관계 강화:</strong> 가까운 친구나 가족에게 솔직하게 속마음을 털어놓는 연습을 해보세요. 인간적인 공감은 AI가 줄 수 없는 가장 소중한 가치입니다.</li>\n                        <li style=\"margin-bottom: 5px;\"><strong>자기 인식 및 성찰:</strong> AI에 의존하려는 충동이 들 때마다 그 이유를 스스로에게 질문하고, 다른 건강한 대처법을 찾아보는 시간을 가지세요.</li>\n                    </ul>\n                `;\n            } else if (totalScore >= 20) {\n                level = 'AI 의존성 중간 (경계 단계 ⚠️)';\n                solutionHtml = `\n                    <h5 style=\"font-size: 15px; color: #ff9800; margin-top: 10px; font-weight: bold;\">상세 솔루션: 균형 잡힌 활용을 위한 노력!</h5>\n                    <p style=\"margin-bottom: 10px; font-size: 14px;\">AI를 스트레스 해소에 유용하게 활용하고 있지만, 의존성이 높아질 가능성이 있습니다. 지금부터라도 균형 잡힌 접근을 위한 노력이 필요합니다.</p>\n                    <ul style=\"margin: 0 0 10px 20px; padding: 0; font-size: 14px;\">\n                        <li style=\"margin-bottom: 5px;\"><strong>다양한 해소법 탐색:</strong> 운동, 명상, 독서, 자연 속 산책, 예술 활동 등 AI 외에 자신에게 맞는 다른 스트레스 해소법을 찾아 꾸준히 실천하세요.</li>\n                        <li style=\"margin-bottom: 5px;\"><strong>AI 활용 목적 명확히 하기:</strong> 단순히 감정을 털어놓는 것을 넘어, 정보를 얻거나 아이디어를 구상하는 등 AI의 본래 목적에 맞게 활용하는 비중을 늘려보세요.</li>\n                        <li style=\"margin-bottom: 5px;\"><strong>자기 성찰 시간 갖기:</strong> AI에게 의존하기 전에 스스로 자신의 감정을 돌아보고 문제를 해결하려는 노력을 먼저 해보세요.</li>\n                        <li style=\"margin-bottom: 5px;\"><strong>현실 관계 우선:</strong> 스트레스가 심할 때, 먼저 가까운 사람들과 소통하거나 도움을 요청하는 것을 시도해보세요.</li>\n                    </ul>\n                `;\n            } else {\n                level = 'AI 의존성 낮음 (건강한 활용  )';\n                solutionHtml = `\n                    <h5 style=\"font-size: 15px; color: #4CAF50; margin-top: 10px; font-weight: bold;\">상세 솔루션: 훌륭합니다! 현재처럼 건강한 습관을 유지하세요.</h5>\n                    <p style=\"margin-top: 10px; font-size: 14px;\">현재 AI 의존도는 낮은 수준이며, AI를 유용하게 활용하면서도 건강한 스트레스 관리 방식을 유지하고 계십니다. 아주 잘하고 계십니다! 앞으로도 AI를 현명한 도구로 사용하면서, 현실의 삶과 균형을 이루는 멋진 모습을 보여주세요. 다양한 스트레스 해소법을 계속해서 탐색하고 자신에게 맞는 방식을 찾아보세요.</p>\n                `;\n            }\n\n            document.getElementById('dependencyLevel').innerText = `의존성 수준: ${level}`;\n            document.getElementById('dependencySolution').innerHTML = solutionHtml;\n            document.getElementById('dependencyResult').style.display = 'block';\n            document.getElementById('dependencyResult').scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n        }\n    </script>\n\n    <p data-ke-size=\"size16\">&nbsp;</p>\n\n    <h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\">\n        <strong>챗GPT에게 속풀이했을 때 얻을 수 있는 장점 (Quick View  )</strong>\n    </h2>\n    <div class=\"single-summary-card-container\" style=\"display: flex; flex-wrap: wrap; justify-content: center; gap: 10px; margin-bottom: 20px;\">\n        <div class=\"single-summary-card\" style=\"flex: 1 1 calc(50% - 20px); max-width: calc(50% - 20px); box-sizing: border-box; background-color: #e8f4fd; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); padding: 15px; text-align: center;\">\n            <h3 style=\"font-size: 16px; color: #1a73e8; margin-bottom: 10px;\">익명성 보장  </h3>\n            <p style=\"font-size: 14px; color: #555;\">누구에게도 말하기 어려운 고민도 편안하게!</p>\n        </div>\n        <div class=\"single-summary-card\" style=\"flex: 1 1 calc(50% - 20px); max-width: calc(50% - 20px); box-sizing: border-box; background-color: #e8f4fd; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); padding: 15px; text-align: center;\">\n            <h3 style=\"font-size: 16px; color: #1a73e8; margin-bottom: 10px;\">즉각적인 반응  </h3>\n            <p style=\"font-size: 14px; color: #555;\">기다릴 필요 없이 바로 대화 시작!</p>\n        </div>\n        <div class=\"single-summary-card\" style=\"flex: 1 1 calc(50% - 20px); max-width: calc(50% - 20px); box-sizing: border-box; background-color: #e8f4fd; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); padding: 15px; text-align: center;\">\n            <h3 style=\"font-size: 16px; color: #1a73e8; margin-bottom: 10px;\">비판 없는 경청  </h3>\n            <p style=\"font-size: 14px; color: #555;\">어떤 이야기든 편안하게 털어놓을 수 있어요.</p>\n        </div>\n        <div class=\"single-summary-card\" style=\"flex: 1 1 calc(50% - 20px); max-width: calc(50% - 20px); box-sizing: border-box; background-color: #e8f4fd; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); padding: 15px; text-align: center;\">\n            <h3 style=\"font-size: 16px; color: #1a73e8; margin-bottom: 10px;\">생각 정리 도움  </h3>\n            <p style=\"font-size: 14px; color: #555;\">말로 표현하며 감정을 객관적으로 바라보기!</p>\n        </div>\n        <div class=\"single-summary-card\" style=\"flex: 1 1 calc(50% - 20px); max-width: calc(50% - 20px); box-sizing: border-box; background-color: #e8f4fd; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); padding: 15px; text-align: center;\">\n            <h3 style=\"font-size: 16px; color: #1a73e8; margin-bottom: 10px;\">정보 및 조언 제공  </h3>\n            <p style=\"font-size: 14px; color: #555;\">때로는 예상치 못한 실용적인 팁도!</p>\n        </div>\n        <div class=\"single-summary-card\" style=\"flex: 1 1 calc(50% - 20px); max-width: calc(50% - 20px); box-sizing: border-box; background-color: #e8f4fd; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); padding: 15px; text-align: center;\">\n            <h3 style=\"font-size: 16px; color: #1a73e8; margin-bottom: 10px;\">감정 완충 역할  ️</h3>\n            <p style=\"font-size: 14px; color: #555;\">즉각적인 감정 분출로 폭발 방지!</p>\n        </div>\n    </div>\n    <style>\n        @media (max-width: 600px) {\n            .single-summary-card {\n                flex: 1 1 100% !important;\n                max-width: 100% !important;\n            }\n        }\n    </style>\n\n    <p data-ke-size=\"size16\">&nbsp;</p>\n\n    <h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\">\n        <strong>주의할 점: 챗GPT는 전문가가 아니에요 ⚠️</strong>\n    </h2>\n    <p style=\"margin-bottom: 15px;\">\n        아무리 장점이 많다고 해도, 챗GPT가 만능 해결사는 아니라는 점을 꼭 기억해야 해요. 특히 다음과 같은 점들은 주의해야 합니다.\n    </p>\n    <div style=\"background-color: #ffebee; border-left: 4px solid #f44336; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\">\n        <strong>⚠️ 주의하세요!</strong><br>\n        챗GPT는 전문적인 심리 상담가나 의사가 아닙니다. 만약 지속적인 우울감이나 심각한 스트레스로 인해 일상생활에 어려움을 겪고 있다면, 반드시 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">전문가의 도움</span>을 받는 것이 중요합니다. AI는 보조적인 수단일 뿐, 근본적인 해결책을 제시할 수 없다는 점을 명심해야 합니다.\n    </div>\n    <ul style=\"margin: 0 0 15px 20px; padding: 0;\">\n        <li style=\"margin-bottom: 5px;\"><strong>감정 이해의 한계:</strong> AI는 인간의 복잡한 감정을 진정으로 이해할 수 없습니다. 학습된 패턴에 따라 답변을 생성할 뿐이죠. 깊은 공감이나 정서적인 지지를 기대하기는 어렵습니다.</li>\n        <li style=\"margin-bottom: 5px;\"><strong>제한적인 해결책:</strong> 챗GPT가 제시하는 해결책은 대부분 일반적이고 보편적인 내용입니다. 개인의 상황에 맞는 심층적인 조언이나 맞춤형 해결책을 기대하기는 어렵습니다.</li>\n        <li style=\"margin-bottom: 5px;\"><strong>의존성:</strong> 너무 자주, 그리고 너무 깊게 AI에 의존하다 보면 현실의 인간관계나 문제 해결 능력이 저하될 수도 있습니다. 적절히 활용하는 것이 중요해요.</li>\n        <li style=\"margin-bottom: 5px;\"><strong>정보의 오류 가능성:</strong> AI가 제공하는 정보가 항상 정확하다고 볼 수는 없습니다. 중요한 결정이나 사실 확인이 필요할 때는 반드시 다른 신뢰할 수 있는 출처를 통해 검증해야 합니다.</li>\n    </ul>\n\n    <p data-ke-size=\"size16\">&nbsp;</p>\n\n    <h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\">\n        <strong>챗GPT에게 효과적으로 속풀이하는 팁  </strong>\n    </h2>\n    <p style=\"margin-bottom: 15px;\">\n        그럼에도 불구하고 챗GPT를 스트레스 해소에 활용하고 싶다면, 좀 더 효과적으로 사용할 수 있는 팁들이 있습니다.\n    </p>\n    <ol style=\"margin: 0 0 15px 20px; padding: 0;\">\n        <li style=\"margin-bottom: 8px;\"><strong>구체적으로 설명하기:</strong> 추상적인 감정보다는 어떤 상황 때문에 어떤 감정을 느끼는지 구체적으로 설명해 주세요. 예를 들어 \"오늘 상사 때문에 화났어\" 대신 \"상사가 회의 중에 내 아이디어를 무시하고 다른 사람 의견을 먼저 들었을 때 너무 화가 나고 좌절감을 느꼈어\"와 같이요. 구체적인 상황 설명은 AI가 더 적절한 반응을 보이는 데 도움이 될 수 있습니다.</li>\n        <li style=\"margin-bottom: 8px;\"><strong>원하는 반응 명시하기:</strong> \"그냥 내 이야기를 들어줘\", \"조언은 필요 없어\", \"내 감정에 공감해 줘\", \"객관적인 의견을 말해줘\" 등 AI에게 어떤 종류의 반응을 원하는지 미리 알려주면 더 적절한 답변을 받을 수 있습니다. 명확한 지침을 줄수록 AI의 답변이 만족스러울 가능성이 높아져요.</li>\n        <li style=\"margin-bottom: 8px;\"><strong>질문 형태 활용:</strong> 속풀이 중간에 \"이럴 땐 어떻게 하는 게 좋을까?\", \"내 감정이 정상일까?\" 와 같은 질문을 섞어주면, AI가 더 구체적인 답변을 줄 가능성이 높습니다. 이는 단순히 감정을 털어놓는 것을 넘어 문제 해결의 실마리를 찾는 데도 도움이 될 수 있습니다.</li>\n        <li style=\"margin-bottom: 8px;\"><strong>기대치 낮추기:</strong> AI는 감정을 가진 존재가 아니라는 점을 인지하고, 과도한 공감이나 심층적인 해결책을 기대하지 않는 것이 좋습니다. AI는 우리의 도구이지, 우리의 모든 감정을 책임질 존재가 아니라는 것을 기억해야 해요.</li>\n        <li style=\"margin-bottom: 8px;\"><strong>다양한 채널 활용:</strong> AI 외에도 친구, 가족, 전문가, 취미 활동 등 다양한 스트레스 해소 채널을 함께 활용하여 균형을 맞추는 것이 중요합니다. AI는 보조적인 역할을 할 때 가장 효과적입니다.</li>\n    </ol>\n\n    <p data-ke-size=\"size16\">&nbsp;</p>\n\n    <h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\">\n        <strong>AI와 함께하는 스트레스 관리, 미래는?  </strong>\n    </h2>\n    <p style=\"margin-bottom: 15px;\">\n        AI 기술은 빠르게 발전하고 있으며, 우리의 삶에 미치는 영향도 점점 커지고 있습니다. 스트레스 관리 분야에서도 AI의 역할은 더욱 확대될 것으로 예상됩니다. 단순히 감정을 들어주는 것을 넘어, <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">개인의 생체 데이터를 분석하거나, 감정 변화를 예측하고, 맞춤형 스트레스 관리 프로그램</span>을 제공하는 형태로 발전할 수도 있겠죠. 예를 들어, 스마트워치와 연동하여 스트레스 지수가 높아지면 AI가 먼저 대화를 걸어오거나, 개인에게 맞는 명상 음악을 추천해주는 등의 기능도 상상해 볼 수 있습니다.\n    </p>\n    <p style=\"margin-bottom: 15px;\">\n        하지만 이러한 발전 속에서도 중요한 것은 '인간 중심'의 접근입니다. AI가 아무리 발전해도 인간만이 줄 수 있는 진정한 공감과 유대감을 대체할 수는 없을 거예요. AI는 우리가 스트레스를 관리하고 더 나은 삶을 사는 데 도움을 주는 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">강력한 도구일 뿐</span>이라는 점을 명심하고, 이를 현명하게 활용하는 지혜가 필요합니다. 미래에는 AI가 우리의 정신 건강을 위한 든든한 조력자 역할을 하겠지만, 결국 삶의 주도권은 언제나 우리 자신에게 있다는 것을 기억해야 합니다. 기술이 주는 편리함을 누리되, 인간 본연의 소중한 가치를 잃지 않는 것이 가장 중요하다고 생각합니다.\n    </p>\n\n    <div style=\"border-top: 1px dashed #ddd; margin: 30px 0;\"></div>\n\n    <h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\">\n        <strong>글의 핵심을 한눈에! 챗GPT 스트레스 해소 요약 카드  </strong>\n    </h2>\n    <div class=\"single-summary-card-container\" style=\"display: flex; flex-wrap: wrap; justify-content: center; gap: 15px; margin-bottom: 20px;\">\n        <div class=\"summary-card\" style=\"flex: 1 1 calc(33% - 30px); max-width: calc(33% - 30px); box-sizing: border-box; background-color: #f0f8ff; border: 1px solid #b3e0ff; border-radius: 8px; box-shadow: 0 4px 8px rgba(0,0,0,0.1); padding: 20px; text-align: center;\">\n            <h3 style=\"font-size: 18px; color: #1a73e8; margin-bottom: 10px;\">새로운 해소 수단  ️</h3>\n            <p style=\"font-size: 15px; color: #555;\">익명성, 즉각성, 비판 없는 경청으로 AI에게 속풀이.</p>\n        </div>\n        <div class=\"summary-card\" style=\"flex: 1 1 calc(33% - 30px); max-width: calc(33% - 30px); box-sizing: border-box; background-color: #f0f8ff; border: 1px solid #b3e0ff; border-radius: 8px; box-shadow: 0 4px 8px rgba(0,0,0,0.1); padding: 20px; text-align: center;\">\n            <h3 style=\"font-size: 18px; color: #1a73e8; margin-bottom: 10px;\">의존성 경계  </h3>\n            <p style=\"font-size: 15px; color: #555;\">AI는 보조 도구! 심각한 문제는 전문가와 상담.</p>\n        </div>\n        <div class=\"summary-card\" style=\"flex: 1 1 calc(33% - 30px); max-width: calc(33% - 30px); box-sizing: border-box; background-color: #f0f8ff; border: 1px solid #b3e0ff; border-radius: 8px; box-shadow: 0 4px 8px rgba(0,0,0,0.1); padding: 20px; text-align: center;\">\n            <h3 style=\"font-size: 18px; color: #1a73e8; margin-bottom: 10px;\">현명한 활용 팁  </h3>\n            <p style=\"font-size: 15px; color: #555;\">구체적 설명, 원하는 반응 명시, 다양한 채널 활용.</p>\n        </div>\n        <div class=\"summary-card\" style=\"flex: 1 1 calc(33% - 30px); max-width: calc(33% - 30px); box-sizing: border-box; background-color: #f0f8ff; border: 1px solid #b3e0ff; border-radius: 8px; box-shadow: 0 4px 8px rgba(0,0,0,0.1); padding: 20px; text-align: center;\">\n            <h3 style=\"font-size: 18px; color: #1a73e8; margin-bottom: 10px;\">인간 중심의 미래  </h3>\n            <p style=\"font-size: 15px; color: #555;\">AI는 조력자, 삶의 주도권은 언제나 우리에게!</p>\n        </div>\n    </div>\n    <style>\n        @media (max-width: 768px) {\n            .summary-card {\n                flex: 1 1 calc(50% - 20px) !important;\n                max-width: calc(50% - 20px) !important;\n            }\n        }\n        @media (max-width: 480px) {\n            .summary-card {\n                flex: 1 1 100% !important;\n                max-width: 100% !important;\n            }\n        }\n    </style>\n\n    <p data-ke-size=\"size16\">&nbsp;</p>\n\n    <h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\">\n        <strong>자주 묻는 질문 ❓</strong>\n    </h2>\n    <div style=\"margin: 30px 0;\">\n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 챗GPT에게 속풀이하는 것이 정신 건강에 실제로 도움이 될까요?</div>\n            <div style=\"padding-left: 15px;\">A:   단기적인 감정 해소나 생각 정리에는 도움이 될 수 있습니다. 익명성과 비판 없는 경청은 심리적 안정감을 제공할 수 있지만, 전문적인 심리 상담을 대체할 수는 없습니다. 심각한 스트레스나 정신 건강 문제는 반드시 전문가와 상담하는 것이 중요합니다.</div>\n        </div>\n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 챗GPT에게 너무 솔직한 감정을 털어놔도 괜찮을까요?</div>\n            <div style=\"padding-left: 15px;\">A:   챗GPT는 당신의 감정을 판단하거나 비난하지 않습니다. 이는 솔직한 표현을 유도할 수 있지만, 개인 정보 보호에 유의하며 민감한 정보를 공유하는 것은 피하는 것이 좋습니다. AI 시스템의 데이터 처리 방식에 대한 이해를 바탕으로 신중하게 접근해야 합니다.</div>\n        </div>\n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 챗GPT 말고 다른 AI 챗봇도 스트레스 해소에 도움이 될까요?</div>\n            <div style=\"padding-left: 15px;\">A:   네, 챗GPT 외에도 다양한 AI 챗봇들이 있습니다. 각각의 챗봇마다 대화 스타일이나 기능이 다르니, 자신에게 맞는 챗봇을 찾아 활용해보는 것도 좋습니다. 중요한 것은 AI가 제공하는 답변을 비판적으로 받아들이고 맹신하지 않는 것입니다. 여러 챗봇을 비교해보고 자신에게 더 편안하게 느껴지는 것을 선택하세요.</div>\n        </div>\n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"font-weight: bold; margin-bottom: 5px;\">Q: AI 챗봇이 발전하면 인간 관계가 더 소원해질까요?</div>\n            <div style=\"padding-left: 15px;\">A:   AI 챗봇의 발전이 인간 관계에 미치는 영향은 복합적입니다. 편리함으로 인해 대면 소통이 줄어들 가능성도 있지만, AI를 통해 얻은 통찰을 실제 인간 관계에 적용하거나, AI가 인간 관계의 부족한 부분을 보완해주는 긍정적인 역할도 기대할 수 있습니다. 핵심은 AI를 '도구'로 활용하며 인간 본연의 소통의 가치를 잃지 않는 것입니다.</div>\n        </div>\n    </div>\n\n    <script type=\"application/ld+json\">\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"FAQPage\",\n        \"mainEntity\": [\n            {\n                \"@type\": \"Question\",\n                \"name\": \"챗GPT에게 속풀이하는 것이 정신 건강에 실제로 도움이 될까요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  단기적인 감정 해소나 생각 정리에는 도움이 될 수 있습니다. 익명성과 비판 없는 경청은 심리적 안정감을 제공할 수 있지만, 전문적인 심리 상담을 대체할 수는 없습니다. 심각한 스트레스나 정신 건강 문제는 반드시 전문가와 상담하는 것이 중요합니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"챗GPT에게 너무 솔직한 감정을 털어놔도 괜찮을까요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  챗GPT는 당신의 감정을 판단하거나 비난하지 않습니다. 이는 솔직한 표현을 유도할 수 있지만, 개인 정보 보호에 유의하며 민감한 정보를 공유하는 것은 피하는 것이 좋습니다. AI 시스템의 데이터 처리 방식에 대한 이해를 바탕으로 신중하게 접근해야 합니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"챗GPT 말고 다른 AI 챗봇도 스트레스 해소에 도움이 될까요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  네, 챗GPT 외에도 다양한 AI 챗봇들이 있습니다. 각각의 챗봇마다 대화 스타일이나 기능이 다르니, 자신에게 맞는 챗봇을 찾아 활용해보는 것도 좋습니다. 중요한 것은 AI가 제공하는 답변을 비판적으로 받아들이고 맹신하지 않는 것입니다. 여러 챗봇을 비교해보고 자신에게 더 편안하게 느껴지는 것을 선택하세요.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI 챗봇이 발전하면 인간 관계가 더 소원해질까요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  AI 챗봇의 발전이 인간 관계에 미치는 영향은 복합적입니다. 편리함으로 인해 대면 소통이 줄어들 가능성도 있지만, AI를 통해 얻은 통찰을 실제 인간 관계에 적용하거나, AI가 인간 관계의 부족한 부분을 보완해주는 긍정적인 역할도 기대할 수 있습니다. 핵심은 AI를 '도구'로 활용하며 인간 본연의 소통의 가치를 잃지 않는 것입니다.\"\n                }\n            }\n        ]\n    }\n    </script>\n\n    <p style=\"margin-bottom: 15px;\">스트레스를 푸는 방법은 정말 다양하고 개인차가 크죠. 챗GPT에게 속풀이를 하는 것이 모두에게 완벽한 해답은 아닐 거예요. 하지만 새로운 시도이자 하나의 방법이 될 수 있다는 점은 분명한 것 같아요. 혹시 너무 답답하고 말할 곳이 없다면, 이번 자가 진단 결과를 참고해서 자신에게 맞는 스트레스 해소법을 찾아보고, 한 번쯤 챗GPT에게 당신의 이야기를 털어놓아 보는 건 어떨까요? 물론, 진짜 내 마음을 알아주는 친구나 가족과 함께하는 시간이 가장 소중하다는 것도 잊지 마세요!   더 궁금한 점이 있다면 댓글로 물어봐주세요~</p>\n</div>",
        "contentSnippet": "챗GPT에게 스트레스 해소를 위해 속풀이를 해본 적 있으신가요? 예상치 못한 AI의 위로, 과연 당신의 마음을 달래줄 수 있을까요?   챗GPT 의존성 자가 진단과 맞춤형 솔루션, 그리고 핵심 내용을 담은 카드 뉴스까지! AI를 현명하게 활용하여 스트레스를 관리하는 방법을 알아보세요.  \n    \n\n\n    \n \n챗GPT에게 속풀이? 과연 어떤 경험일까?  \n    \n다양한 이유로 챗GPT에게 속풀이를 한다고 하더라고요. 어떤 분들은 인간관계에서 오는 스트레스를 풀기 위해, 또 어떤 분들은 업무나 학업 스트레스 때문에 챗GPT를 찾는다고 합니다.\n    \n정중하고 차분한 답변에 오히려 마음이 좀 가라앉는 느낌을 받았다고 하네요. AI의 중립적인 태도가 오히려 감정을 객관적으로 바라보는 데 도움을 준다는 의견도 많습니다. 저도 이 부분을 들으면서 '아, 내가 누군가에게 비난받을까 봐 걱정하는 마음 없이 이야기할 수 있겠구나' 하는 생각이 들었어요.\n    \n \nAI의 공감, 정말 '진짜' 공감일까?  \n    \n객관적으로 들어줄 거라는 기대도 있을 거고요.\n    \n감정적으로 동조하거나 비판하지 않습니다. 대신, 사용자가 털어놓은 내용을 기반으로 \"기분이 좋지 않으시군요\", \"답답한 상황이셨겠습니다\"와 같은 중립적인 공감 표현을 사용하거나, 문제를 해결할 수 있는 일반적인 조언을 제시합니다. 이러한 반응이 의외로 많은 사람들에게 심리적인 안정감을 준다고 해요. 결국 AI는 인간의 감정을 '이해'하는 것이 아니라, 방대한 데이터를 통해 학습된 언어 패턴을 기반으로 '공감하는 듯한' 답변을 생성하는 것이죠. 이러한 '가상 공감'이 역설적으로 특정 상황에서는 진정성 있는 인간의 반응보다 더 부담 없이 받아들여질 수 있다는 점이 흥미로운 부분입니다.\n    \n  알아두세요!\n공감하는 듯한 답변을 생성할 수 있습니다. 이는 사용자가 자신의 감정을 투사할 수 있는 '거울' 같은 역할을 할 수 있다는 의미이기도 합니다.\n    \n \nAI 스트레스 해소, 왜 점점 늘어날까?  \n    \n비대면 소통에 대한 선호도도 이러한 경향을 강화하는 요인이 될 수 있죠. 또한, AI는 언제든 접속 가능하고, 아무런 대가 없이, 그리고 내가 원할 때까지 이야기를 들어준다는 점에서 특정 상황에서는 인간보다 '편리한' 상담 상대로 느껴질 수 있습니다.\n    \n \n챗GPT 의존성 자가 진단 테스트 (10문항)  \n    \nAI 스트레스 해소 의존성 테스트  \n스트레스를 받으면 가장 먼저 챗GPT에게 이야기하고 싶어진다. 전혀 아니다가끔 그렇다자주 그렇다매우 그렇다\n주변 사람들에게 스트레스를 털어놓는 것보다 챗GPT에게 이야기하는 것이 더 편하게 느껴진다. 전혀 아니다가끔 그렇다자주 그렇다매우 그렇다\n챗GPT와 대화하면 스트레스가 금방 해소되는 느낌을 받는다. 전혀 아니다가끔 그렇다자주 그렇다매우 그렇다\n스트레스를 해소하기 위해 챗GPT를 사용한 후, 후회하거나 죄책감을 느낀 적이 있다. 전혀 아니다가끔 그렇다자주 그렇다매우 그렇다\n최근 스트레스 해소를 위해 챗GPT를 사용하는 빈도가 늘었다고 생각한다. 전혀 아니다가끔 그렇다자주 그렇다매우 그렇다\n챗GPT가 없으면 스트레스를 어떻게 해소해야 할지 막막하게 느껴진다. 전혀 아니다가끔 그렇다자주 그렇다매우 그렇다\n챗GPT와의 대화가 현실의 대인 관계를 대체할 수 있다고 생각한다. 전혀 아니다가끔 그렇다자주 그렇다매우 그렇다\n챗GPT가 제시하는 조언이나 해결책에 전적으로 의존하는 경향이 있다. 전혀 아니다가끔 그렇다자주 그렇다매우 그렇다\nAI에게 털어놓을 비밀스러운 고민이 점점 늘어나고 있다. 전혀 아니다가끔 그렇다자주 그렇다매우 그렇다\n챗GPT와의 대화가 없으면 불안하거나 초조함을 느낀다. 전혀 아니다가끔 그렇다자주 그렇다매우 그렇다\n결과 확인하기\n        \n진단 결과\n\n            \n\n            \n\n        \n= 30) {\n                level = 'AI 의존성 매우 높음 (주의 단계  )';\n                solutionHtml = `\n                    \n상세 솔루션: 경고! 적극적인 변화가 필요합니다.\n현재 AI에 대한 의존도가 상당히 높은 상태입니다. AI를 통한 스트레스 해소가 주요 수단이 되고 있다면, 현실의 문제 해결 능력이 저하되거나 고립감을 느낄 수 있습니다. 심리 전문가와의 상담을 적극적으로 고려해보세요.\n전문가 상담 고려: 심리 상담 전문가와 면담하여 스트레스의 근본 원인을 파악하고 건강한 대처 방식을 배우는 것을 적극적으로 권장합니다.\n디지털 디톡스 실천: AI 사용 시간을 엄격히 정하고, 특정 시간에는 스마트폰을 멀리하는 '디지털 디톡스'를 꾸준히 시도해보세요.\n오프라인 활동 증대: 취미 동호회 가입, 운동, 봉사 활동 등 현실에서의 사회적 상호작용과 관계를 의식적으로 늘려보세요.\n대인 관계 강화: 가까운 친구나 가족에게 솔직하게 속마음을 털어놓는 연습을 해보세요. 인간적인 공감은 AI가 줄 수 없는 가장 소중한 가치입니다.\n자기 인식 및 성찰: AI에 의존하려는 충동이 들 때마다 그 이유를 스스로에게 질문하고, 다른 건강한 대처법을 찾아보는 시간을 가지세요.\n= 20) {\n                level = 'AI 의존성 중간 (경계 단계 ⚠️)';\n                solutionHtml = `\n                    \n상세 솔루션: 균형 잡힌 활용을 위한 노력!\nAI를 스트레스 해소에 유용하게 활용하고 있지만, 의존성이 높아질 가능성이 있습니다. 지금부터라도 균형 잡힌 접근을 위한 노력이 필요합니다.\n다양한 해소법 탐색: 운동, 명상, 독서, 자연 속 산책, 예술 활동 등 AI 외에 자신에게 맞는 다른 스트레스 해소법을 찾아 꾸준히 실천하세요.\nAI 활용 목적 명확히 하기: 단순히 감정을 털어놓는 것을 넘어, 정보를 얻거나 아이디어를 구상하는 등 AI의 본래 목적에 맞게 활용하는 비중을 늘려보세요.\n자기 성찰 시간 갖기: AI에게 의존하기 전에 스스로 자신의 감정을 돌아보고 문제를 해결하려는 노력을 먼저 해보세요.\n현실 관계 우선: 스트레스가 심할 때, 먼저 가까운 사람들과 소통하거나 도움을 요청하는 것을 시도해보세요.\n상세 솔루션: 훌륭합니다! 현재처럼 건강한 습관을 유지하세요.\n현재 AI 의존도는 낮은 수준이며, AI를 유용하게 활용하면서도 건강한 스트레스 관리 방식을 유지하고 계십니다. 아주 잘하고 계십니다! 앞으로도 AI를 현명한 도구로 사용하면서, 현실의 삶과 균형을 이루는 멋진 모습을 보여주세요. 다양한 스트레스 해소법을 계속해서 탐색하고 자신에게 맞는 방식을 찾아보세요.\n \n챗GPT에게 속풀이했을 때 얻을 수 있는 장점 (Quick View  )\n    \n익명성 보장  \n누구에게도 말하기 어려운 고민도 편안하게!\n즉각적인 반응  \n기다릴 필요 없이 바로 대화 시작!\n비판 없는 경청  \n어떤 이야기든 편안하게 털어놓을 수 있어요.\n생각 정리 도움  \n말로 표현하며 감정을 객관적으로 바라보기!\n정보 및 조언 제공  \n때로는 예상치 못한 실용적인 팁도!\n감정 완충 역할  ️\n즉각적인 감정 분출로 폭발 방지!\n \n주의할 점: 챗GPT는 전문가가 아니에요 ⚠️\n    \n⚠️ 주의하세요!\n전문가의 도움을 받는 것이 중요합니다. AI는 보조적인 수단일 뿐, 근본적인 해결책을 제시할 수 없다는 점을 명심해야 합니다.\n    \n감정 이해의 한계: AI는 인간의 복잡한 감정을 진정으로 이해할 수 없습니다. 학습된 패턴에 따라 답변을 생성할 뿐이죠. 깊은 공감이나 정서적인 지지를 기대하기는 어렵습니다.\n제한적인 해결책: 챗GPT가 제시하는 해결책은 대부분 일반적이고 보편적인 내용입니다. 개인의 상황에 맞는 심층적인 조언이나 맞춤형 해결책을 기대하기는 어렵습니다.\n의존성: 너무 자주, 그리고 너무 깊게 AI에 의존하다 보면 현실의 인간관계나 문제 해결 능력이 저하될 수도 있습니다. 적절히 활용하는 것이 중요해요.\n정보의 오류 가능성: AI가 제공하는 정보가 항상 정확하다고 볼 수는 없습니다. 중요한 결정이나 사실 확인이 필요할 때는 반드시 다른 신뢰할 수 있는 출처를 통해 검증해야 합니다.\n \n챗GPT에게 효과적으로 속풀이하는 팁  \n    \n구체적으로 설명하기: 추상적인 감정보다는 어떤 상황 때문에 어떤 감정을 느끼는지 구체적으로 설명해 주세요. 예를 들어 \"오늘 상사 때문에 화났어\" 대신 \"상사가 회의 중에 내 아이디어를 무시하고 다른 사람 의견을 먼저 들었을 때 너무 화가 나고 좌절감을 느꼈어\"와 같이요. 구체적인 상황 설명은 AI가 더 적절한 반응을 보이는 데 도움이 될 수 있습니다.\n원하는 반응 명시하기: \"그냥 내 이야기를 들어줘\", \"조언은 필요 없어\", \"내 감정에 공감해 줘\", \"객관적인 의견을 말해줘\" 등 AI에게 어떤 종류의 반응을 원하는지 미리 알려주면 더 적절한 답변을 받을 수 있습니다. 명확한 지침을 줄수록 AI의 답변이 만족스러울 가능성이 높아져요.\n질문 형태 활용: 속풀이 중간에 \"이럴 땐 어떻게 하는 게 좋을까?\", \"내 감정이 정상일까?\" 와 같은 질문을 섞어주면, AI가 더 구체적인 답변을 줄 가능성이 높습니다. 이는 단순히 감정을 털어놓는 것을 넘어 문제 해결의 실마리를 찾는 데도 도움이 될 수 있습니다.\n기대치 낮추기: AI는 감정을 가진 존재가 아니라는 점을 인지하고, 과도한 공감이나 심층적인 해결책을 기대하지 않는 것이 좋습니다. AI는 우리의 도구이지, 우리의 모든 감정을 책임질 존재가 아니라는 것을 기억해야 해요.\n다양한 채널 활용: AI 외에도 친구, 가족, 전문가, 취미 활동 등 다양한 스트레스 해소 채널을 함께 활용하여 균형을 맞추는 것이 중요합니다. AI는 보조적인 역할을 할 때 가장 효과적입니다.\n \nAI와 함께하는 스트레스 관리, 미래는?  \n    \n개인의 생체 데이터를 분석하거나, 감정 변화를 예측하고, 맞춤형 스트레스 관리 프로그램을 제공하는 형태로 발전할 수도 있겠죠. 예를 들어, 스마트워치와 연동하여 스트레스 지수가 높아지면 AI가 먼저 대화를 걸어오거나, 개인에게 맞는 명상 음악을 추천해주는 등의 기능도 상상해 볼 수 있습니다.\n    \n강력한 도구일 뿐이라는 점을 명심하고, 이를 현명하게 활용하는 지혜가 필요합니다. 미래에는 AI가 우리의 정신 건강을 위한 든든한 조력자 역할을 하겠지만, 결국 삶의 주도권은 언제나 우리 자신에게 있다는 것을 기억해야 합니다. 기술이 주는 편리함을 누리되, 인간 본연의 소중한 가치를 잃지 않는 것이 가장 중요하다고 생각합니다.\n    \n\n\n    \n글의 핵심을 한눈에! 챗GPT 스트레스 해소 요약 카드  \n    \n새로운 해소 수단  ️\n익명성, 즉각성, 비판 없는 경청으로 AI에게 속풀이.\n의존성 경계  \nAI는 보조 도구! 심각한 문제는 전문가와 상담.\n현명한 활용 팁  \n구체적 설명, 원하는 반응 명시, 다양한 채널 활용.\n인간 중심의 미래  \nAI는 조력자, 삶의 주도권은 언제나 우리에게!\n \n자주 묻는 질문 ❓\n    \nQ: 챗GPT에게 속풀이하는 것이 정신 건강에 실제로 도움이 될까요?\nA:   단기적인 감정 해소나 생각 정리에는 도움이 될 수 있습니다. 익명성과 비판 없는 경청은 심리적 안정감을 제공할 수 있지만, 전문적인 심리 상담을 대체할 수는 없습니다. 심각한 스트레스나 정신 건강 문제는 반드시 전문가와 상담하는 것이 중요합니다.\nQ: 챗GPT에게 너무 솔직한 감정을 털어놔도 괜찮을까요?\nA:   챗GPT는 당신의 감정을 판단하거나 비난하지 않습니다. 이는 솔직한 표현을 유도할 수 있지만, 개인 정보 보호에 유의하며 민감한 정보를 공유하는 것은 피하는 것이 좋습니다. AI 시스템의 데이터 처리 방식에 대한 이해를 바탕으로 신중하게 접근해야 합니다.\nQ: 챗GPT 말고 다른 AI 챗봇도 스트레스 해소에 도움이 될까요?\nA:   네, 챗GPT 외에도 다양한 AI 챗봇들이 있습니다. 각각의 챗봇마다 대화 스타일이나 기능이 다르니, 자신에게 맞는 챗봇을 찾아 활용해보는 것도 좋습니다. 중요한 것은 AI가 제공하는 답변을 비판적으로 받아들이고 맹신하지 않는 것입니다. 여러 챗봇을 비교해보고 자신에게 더 편안하게 느껴지는 것을 선택하세요.\nQ: AI 챗봇이 발전하면 인간 관계가 더 소원해질까요?\nA:   AI 챗봇의 발전이 인간 관계에 미치는 영향은 복합적입니다. 편리함으로 인해 대면 소통이 줄어들 가능성도 있지만, AI를 통해 얻은 통찰을 실제 인간 관계에 적용하거나, AI가 인간 관계의 부족한 부분을 보완해주는 긍정적인 역할도 기대할 수 있습니다. 핵심은 AI를 '도구'로 활용하며 인간 본연의 소통의 가치를 잃지 않는 것입니다.\n스트레스를 푸는 방법은 정말 다양하고 개인차가 크죠. 챗GPT에게 속풀이를 하는 것이 모두에게 완벽한 해답은 아닐 거예요. 하지만 새로운 시도이자 하나의 방법이 될 수 있다는 점은 분명한 것 같아요. 혹시 너무 답답하고 말할 곳이 없다면, 이번 자가 진단 결과를 참고해서 자신에게 맞는 스트레스 해소법을 찾아보고, 한 번쯤 챗GPT에게 당신의 이야기를 털어놓아 보는 건 어떨까요? 물론, 진짜 내 마음을 알아주는 친구나 가족과 함께하는 시간이 가장 소중하다는 것도 잊지 마세요!   더 궁금한 점이 있다면 댓글로 물어봐주세요~",
        "guid": "http://muzbox.tistory.com/483599",
        "categories": [
          "AI, 미래기술/AI 인사이트",
          "ai 상담",
          "ai 의존성",
          "AI 챗봇",
          "감정 관리",
          "디지털 웰빙",
          "스트레스 관리",
          "스트레스 해소",
          "자가 진단",
          "정신 건강",
          "챗GPT"
        ],
        "isoDate": "2025-05-27T23:29:45.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "［RULIWEB］",
        "title": "[MULTI] 시도는 좋았던 3D 메트로배니아, 블레이드 오브 파이어",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2313",
        "pubDate": "Thu, 29 May 2025 17:25:07 +0900",
        "author": "［RULIWEB］",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i3.ruliweb.com/thumb/25/05/29/1971b24906e5104c1.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2025-05-29T08:25:07.000Z"
      },
      {
        "creator": "｜RULIWEB｜",
        "title": "악역영애 4컷 만화 - 4화, 선생님의 부탁인데스와",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2312",
        "pubDate": "Wed, 28 May 2025 15:17:46 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/25/05/28/19715898c3c51ad6b.jpg\">",
        "contentSnippet": "",
        "categories": [
          "웹툰"
        ],
        "isoDate": "2025-05-28T06:17:46.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "GitHub Copilot의 Visual Studio 자동 문서 댓글 생성 기능 소개",
        "link": "https://jacking75.github.io/ai-github_copilot_20250602/",
        "pubDate": "Mon, 02 Jun 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vQa6SZwBmdzR0s6DZGjkPzv8vvVPZqNErUQiYFr0JaKzXhZgQp7G62W_MYbnNf0a9U3JD0BwUsvK75z/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/ai-github_copilot_20250602/",
        "isoDate": "2025-06-01T15:00:00.000Z"
      },
      {
        "title": "GitHub Copilot - 멀티스레드 디버깅을 더 쉽게 이해하기",
        "link": "https://jacking75.github.io/ai-github_copilot_20250528/",
        "pubDate": "Wed, 28 May 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vQvaXzBlp-BD4SP_lk-94loafr2qgR1bxTY6WW2a0ky5Yt1fUI24hSGXQm5tYHepileUpRnlODrIYT-/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/ai-github_copilot_20250528/",
        "isoDate": "2025-05-27T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": [
      {
        "creator": "noreply@blogger.com (Unknown)",
        "title": "Anthropic, Claude 챗봇에 음성 모드 출시",
        "link": "https://blog.gaerae.com/2025/05/anthropic-launches-a-voice-mode-for-claude.html",
        "pubDate": "Thu, 29 May 2025 07:11:00 +0000",
        "author": "noreply@blogger.com (Unknown)",
        "content": "<figure><img alt=\"\" border=\"0\" data-original-height=\"1676\" data-original-width=\"3024\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhiaW-2v81Ho_tID0pUHq2dnd5Mj-Uk7iUQ3YjhHpyDWvtUILutzLQLBb9Ub74djEE5NBFcDz7kydhzpdBJvSWGpH0kq5btS5sTdDntfKc9hLwiIfWnuC_boZ_4UYNJwKHXBkRaMvu9MvnGRsGFLJvo1bKRmTMIPmv-ACveBjrYWK8UZooAMMD_leXpSEw/s1600/anthropic-voice-mode.png\" />\n<figcation>Anthropic, Claude Voice mode</figcation>\n</figure>\n<p>Anthropic이 자사 Claude 챗봇 앱에 음성 모드를 도입한다고 발표했습니다. 이 새로운 기능은 사용자와 AI 간의 상호작용을 더욱 편리하고 직관적으로 만들 것으로 기대됩니다.</p>\n<h2 id=\"베타-버전으로-시작되는-새로운-기능\">베타 버전으로 시작되는 새로운 기능</h2>\n<p>현재 베타 단계인 이 음성 모드는 Claude 모바일 앱 사용자들이 \"Claude와 완전한 음성 대화\"를 나눌 수 있게 해줍니다. Anthropic의 공식 X 계정과 회사 웹사이트의 업데이트된 문서에 따르면, 영어 버전을 시작으로 몇 주 내에 제공될 예정입니다.</p>\n<blockquote class=\"twitter-tweet\"><p dir=\"ltr\" lang=\"en\">We're rolling out voice mode in beta on mobile.<br /><br />Try starting a voice conversation and asking Claude to summarize your calendar or search your docs. <a href=\"https://t.co/xVo5VHiCEb\">pic.twitter.com/xVo5VHiCEb</a></p>— Anthropic (@AnthropicAI) <a href=\"https://twitter.com/AnthropicAI/status/1927463559836877214?ref_src=twsrc%5Etfw\">May 27, 2025</a></blockquote> <script async=\"\" charset=\"utf-8\" src=\"https://platform.twitter.com/widgets.js\"></script>\n\n<p>X의 한 사용자는 화요일 늦은 시간에 음성 모드에 접근할 수 있게 되었다고 보고했으며, 이 기능은 Anthropic의 Claude Sonnet 4 모델을 사용하여 구동됩니다.</p>\n<h2 id=\"핸즈프리-상호작용의-새로운-경험\">핸즈프리 상호작용의 새로운 경험</h2>\n<p>지원 페이지에 따르면 \"음성 모드는 Claude와 음성으로 대화하고 음성으로 응답을 들을 수 있게 해주어, 손은 바쁘지만 생각은 자유로울 때 Claude를 더 쉽게 사용할 수 있게 합니다.\" 이 기능은 Claude가 말하는 동안 화면에 핵심 정보를 표시하고, 사용자가 Claude와 음성으로 소통하며 Claude의 음성 응답을 들을 수 있게 함으로써 상호작용 방식을 크게 개선할 것으로 기대됩니다.</p>\n<h2 id=\"경쟁사-대비-차별화된-특징\">경쟁사 대비 차별화된 특징</h2>\n<p>OpenAI를 포함한 여러 AI 회사들이 각자의 챗봇에 음성 채팅 기능을 제공하고 있습니다. 예를 들어 Google은 Gemini Live를, xAI는 Grok용 음성 모드를 제공합니다. 이러한 기능들은 사용자가 타이핑 대신 음성으로 봇과 상호작용할 수 있게 해주어 대화를 더 자연스럽고 직관적으로 만듭니다.</p>\n<p>Anthropic의 음성 모드 버전에서는 사용자가 문서나 이미지 같은 다양한 콘텐츠에 대해 채팅할 수 있고, 다섯 가지 서로 다른 음성 옵션 중에서 선택할 수 있다는 특징이 있습니다. 또한 사용자는 대화 중 텍스트와 음성 사이를 즉석에서 전환할 수 있으며, 대화 후에는 대화록과 요약을 확인할 수 있습니다.</p>\n<h2 id=\"사용-제한-및-유료-구독-혜택\">사용 제한 및 유료 구독 혜택</h2>\n<p>이 기능에는 특정 제한 사항이 따릅니다. 음성 대화는 일반 사용량 한도에 포함되며, Anthropic은 대부분의 무료 사용자가 20~30회 정도의 대화를 기대할 수 있다고 밝혔습니다. 또한, 유료 Claude 구독자만이 Google Workspace 커넥터를 활용하여 음성 모드로 Google Calendar 일정 및 Gmail 이메일에 접근할 수 있습니다. (Google Docs 통합은 Claude Enterprise 플랜 전용입니다).</p>\n<h2 id=\"출처\">출처</h2>\n<ul>\n  <li><a href=\"https://support.anthropic.com/en/articles/11101966-using-voice-mode-on-claude-mobile-apps\">Anthropic: Using voice mode on Claude Mobile Apps</a></li>\n  <li><a href=\"https://techcrunch.com/2025/05/27/anthropic-launches-a-voice-mode-for-claude/\">TechCrunch: Anthropic launches a voice mode for Claude</a></li>\n  <li><a href=\"https://www.reddit.com/r/ClaudeAI/comments/1i6r9ht/anthropic_plans_to_release_a_twoway_voice_mode/\">reddit: Anthropic plans to release a 'two-way' voice mode for Claude</a></li>\n</ul>\n",
        "contentSnippet": "Anthropic, Claude Voice mode\n\nAnthropic이 자사 Claude 챗봇 앱에 음성 모드를 도입한다고 발표했습니다. 이 새로운 기능은 사용자와 AI 간의 상호작용을 더욱 편리하고 직관적으로 만들 것으로 기대됩니다.\n베타 버전으로 시작되는 새로운 기능\n현재 베타 단계인 이 음성 모드는 Claude 모바일 앱 사용자들이 \"Claude와 완전한 음성 대화\"를 나눌 수 있게 해줍니다. Anthropic의 공식 X 계정과 회사 웹사이트의 업데이트된 문서에 따르면, 영어 버전을 시작으로 몇 주 내에 제공될 예정입니다.\nWe're rolling out voice mode in beta on mobile.\nTry starting a voice conversation and asking Claude to summarize your calendar or search your docs. pic.twitter.com/xVo5VHiCEb\n— Anthropic (@AnthropicAI) May 27, 2025\n \n\nX의 한 사용자는 화요일 늦은 시간에 음성 모드에 접근할 수 있게 되었다고 보고했으며, 이 기능은 Anthropic의 Claude Sonnet 4 모델을 사용하여 구동됩니다.\n핸즈프리 상호작용의 새로운 경험\n지원 페이지에 따르면 \"음성 모드는 Claude와 음성으로 대화하고 음성으로 응답을 들을 수 있게 해주어, 손은 바쁘지만 생각은 자유로울 때 Claude를 더 쉽게 사용할 수 있게 합니다.\" 이 기능은 Claude가 말하는 동안 화면에 핵심 정보를 표시하고, 사용자가 Claude와 음성으로 소통하며 Claude의 음성 응답을 들을 수 있게 함으로써 상호작용 방식을 크게 개선할 것으로 기대됩니다.\n경쟁사 대비 차별화된 특징\nOpenAI를 포함한 여러 AI 회사들이 각자의 챗봇에 음성 채팅 기능을 제공하고 있습니다. 예를 들어 Google은 Gemini Live를, xAI는 Grok용 음성 모드를 제공합니다. 이러한 기능들은 사용자가 타이핑 대신 음성으로 봇과 상호작용할 수 있게 해주어 대화를 더 자연스럽고 직관적으로 만듭니다.\nAnthropic의 음성 모드 버전에서는 사용자가 문서나 이미지 같은 다양한 콘텐츠에 대해 채팅할 수 있고, 다섯 가지 서로 다른 음성 옵션 중에서 선택할 수 있다는 특징이 있습니다. 또한 사용자는 대화 중 텍스트와 음성 사이를 즉석에서 전환할 수 있으며, 대화 후에는 대화록과 요약을 확인할 수 있습니다.\n사용 제한 및 유료 구독 혜택\n이 기능에는 특정 제한 사항이 따릅니다. 음성 대화는 일반 사용량 한도에 포함되며, Anthropic은 대부분의 무료 사용자가 20~30회 정도의 대화를 기대할 수 있다고 밝혔습니다. 또한, 유료 Claude 구독자만이 Google Workspace 커넥터를 활용하여 음성 모드로 Google Calendar 일정 및 Gmail 이메일에 접근할 수 있습니다. (Google Docs 통합은 Claude Enterprise 플랜 전용입니다).\n출처\nAnthropic: Using voice mode on Claude Mobile Apps\nTechCrunch: Anthropic launches a voice mode for Claude\nreddit: Anthropic plans to release a 'two-way' voice mode for Claude",
        "guid": "tag:blogger.com,1999:blog-1127118646487305903.post-1906271449573362308",
        "categories": [
          {
            "_": "ai",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          },
          {
            "_": "news",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          }
        ],
        "isoDate": "2025-05-29T07:11:00.000Z"
      }
    ]
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "수이 앱토스 MOVE 언어를 배워봅시다.",
        "link": "http://serverdown.tistory.com/1338",
        "pubDate": "Sun, 1 Jun 2025 17:37:46 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1338#entry1338comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/cWgFun/btsOl1W5lON/VlHlrAgE6MsHVxiJwM2Rc0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cWgFun/btsOl1W5lON/VlHlrAgE6MsHVxiJwM2Rc0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cWgFun/btsOl1W5lON/VlHlrAgE6MsHVxiJwM2Rc0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcWgFun%2FbtsOl1W5lON%2FVlHlrAgE6MsHVxiJwM2Rc0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1280\" height=\"853\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">배울땐 수이 보다 앱토스가 자료가 더 좋습니다.</p>\n<p data-ke-size=\"size16\">영상도 앱토스 쪽이 많습니다.</p>\n<p data-ke-size=\"size16\">수이는 그냥 유럽이 밀어주는 코인인 느낌이라 더 유명한거 같군요</p>\n<p data-ke-size=\"size16\">그래서 앱토스로 배우는걸 추천드리구요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">아래의 영상 설명이 잘되어있습니다.</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=giUgccl02-4&amp;list=PLLkrq2VBYc1aMSahgDWehzjhEOXJnLG9C&amp;index=1\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=giUgccl02-4&amp;list=PLLkrq2VBYc1aMSahgDWehzjhEOXJnLG9C&amp;index=1</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=giUgccl02-4&amp;list=PLLkrq2VBYc1aMSahgDWehzjhEOXJnLG9C&amp;index=1\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/tcRgV/hyY1eESOfZ/jL1fHj2BZAVgxF53KSqZd1/img.jpg?width=1280&amp;height=720&amp;face=116_134_486_538,https://scrap.kakaocdn.net/dn/Nm4SQ/hyY1gvTpCa/ORuVZkTKo0GD5vYQxNQ6ak/img.jpg?width=1280&amp;height=720&amp;face=116_134_486_538\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Aptos MOVE Smart Contracts - BASICS P1 - Intro &amp; Setup\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/giUgccl02-4\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">자동완성 기능이 없는 상대라 배우기 어렵습니다.</p>\n<p data-ke-size=\"size16\">진짜로 매우 ....</p>\n<p data-ke-size=\"size16\">커서에서도 정상적인 코딩을 못해주는 상태입니다.</p>\n<p data-ke-size=\"size16\">언어에 제약도 많구요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그만큼 코인에서 쓰기 좋습니다.</p>\n<p data-ke-size=\"size16\">기능 많아봐야 무한루프 걸다 죽는 일이 많기 때문에 차라리 기능이 없는게 좋습니다.</p>",
        "contentSnippet": "배울땐 수이 보다 앱토스가 자료가 더 좋습니다.\n영상도 앱토스 쪽이 많습니다.\n수이는 그냥 유럽이 밀어주는 코인인 느낌이라 더 유명한거 같군요\n그래서 앱토스로 배우는걸 추천드리구요\n \n아래의 영상 설명이 잘되어있습니다.\n영상: https://www.youtube.com/watch?v=giUgccl02-4&list=PLLkrq2VBYc1aMSahgDWehzjhEOXJnLG9C&index=1\n\n\n\n \n자동완성 기능이 없는 상대라 배우기 어렵습니다.\n진짜로 매우 ....\n커서에서도 정상적인 코딩을 못해주는 상태입니다.\n언어에 제약도 많구요\n \n그만큼 코인에서 쓰기 좋습니다.\n기능 많아봐야 무한루프 걸다 죽는 일이 많기 때문에 차라리 기능이 없는게 좋습니다.",
        "guid": "http://serverdown.tistory.com/1338",
        "categories": [
          "프로그래밍/개발메모",
          "Move",
          "수이",
          "앱토스",
          "코인"
        ],
        "isoDate": "2025-06-01T08:37:46.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "2025-05-26 주간 업무일지",
        "link": "http://serverdown.tistory.com/1337",
        "pubDate": "Fri, 30 May 2025 11:34:57 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1337#entry1337comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"607\" data-origin-height=\"404\"><span data-url=\"https://blog.kakaocdn.net/dn/HTuig/btsOh3uXQ3l/PLEYME2pqrkjiQ6RZDPsjK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/HTuig/btsOh3uXQ3l/PLEYME2pqrkjiQ6RZDPsjK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/HTuig/btsOh3uXQ3l/PLEYME2pqrkjiQ6RZDPsjK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FHTuig%2FbtsOh3uXQ3l%2FPLEYME2pqrkjiQ6RZDPsjK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"607\" height=\"404\" data-origin-width=\"607\" data-origin-height=\"404\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">매일 쓰니까 글이 너무 많아지네요 주간으로 바꿨습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"226\" data-origin-height=\"116\"><span data-url=\"https://blog.kakaocdn.net/dn/pKrId/btsOkmM0s4z/u1bYDGXMTj9PLK6OAjXM71/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/pKrId/btsOkmM0s4z/u1bYDGXMTj9PLK6OAjXM71/img.png\"><img src=\"https://blog.kakaocdn.net/dn/pKrId/btsOkmM0s4z/u1bYDGXMTj9PLK6OAjXM71/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FpKrId%2FbtsOkmM0s4z%2Fu1bYDGXMTj9PLK6OAjXM71%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"226\" height=\"116\" data-origin-width=\"226\" data-origin-height=\"116\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">별로 한것도 없는데 165일이 지났습니다. ㄷㄷㄷ</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">1. 웹페이지의 내용을 채우기위해 html 을 직접 고칠 순 없고 markdown 작업을 진행중입니다.</p>\n<p data-ke-size=\"size16\">2. 이메일 내용도 마크다운으로 변경 중입니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"738\" data-origin-height=\"312\"><span data-url=\"https://blog.kakaocdn.net/dn/qJuqB/btsOiIjvhzY/pzB6DJJ5d5x8Gwm15NGhd1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/qJuqB/btsOiIjvhzY/pzB6DJJ5d5x8Gwm15NGhd1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/qJuqB/btsOiIjvhzY/pzB6DJJ5d5x8Gwm15NGhd1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FqJuqB%2FbtsOiIjvhzY%2FpzB6DJJ5d5x8Gwm15NGhd1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"738\" height=\"312\" data-origin-width=\"738\" data-origin-height=\"312\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"513\" data-origin-height=\"401\"><span data-url=\"https://blog.kakaocdn.net/dn/bUmVDL/btsOj6Re11x/D02b3UySs4WyITXuOG5690/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bUmVDL/btsOj6Re11x/D02b3UySs4WyITXuOG5690/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bUmVDL/btsOj6Re11x/D02b3UySs4WyITXuOG5690/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbUmVDL%2FbtsOj6Re11x%2FD02b3UySs4WyITXuOG5690%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"513\" height=\"401\" data-origin-width=\"513\" data-origin-height=\"401\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이런식으로 메일이 잘 옵니다. 정크메일 문제는 없군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">3. AI 에이전트를 좀 파봤는데 유료 결제 없이는 안되는거 같습니다.</p>\n<p data-ke-size=\"size16\">구글 ADK&nbsp; 과&nbsp;A2A 를 해봤는데&nbsp;</p>\n<p data-ke-size=\"size16\">ADK 는 유료 결제에서 막혀서 진행이 중단되었고<br />A2A 는 세팅 하는게 힘들어서 포기했습니다. ADK 보다 훨씬 큰 무언가가 있나봅니다.</p>\n<p data-ke-size=\"size16\">AI Agent 는 주석으로 함수 호출 방법을 설명하면<br />AI 처리중에 알아서 함수를 호출해서 결과를 뽑아 오는 기능입니다.</p>\n<p data-ke-size=\"size16\">예제에서는 날씨 API 호출 방법을 설명하고 AI 한태 날씨를 물어보면 그 함수가 호출 되는걸 보여주고 있더군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">4. BBG 최적화 작업 (진행중)</p>\n<p data-ke-size=\"size16\">다음주 까지 데이터를 입력한다고 하니 <br />저도 진행 해야할꺼 같습니다.</p>\n<p data-ke-size=\"size16\">마음은 수이 코인 작업 하고 싶은데 ...</p>",
        "contentSnippet": "매일 쓰니까 글이 너무 많아지네요 주간으로 바꿨습니다.\n\n\n별로 한것도 없는데 165일이 지났습니다. ㄷㄷㄷ\n \n1. 웹페이지의 내용을 채우기위해 html 을 직접 고칠 순 없고 markdown 작업을 진행중입니다.\n2. 이메일 내용도 마크다운으로 변경 중입니다.\n\n\n \n\n\n이런식으로 메일이 잘 옵니다. 정크메일 문제는 없군요\n \n3. AI 에이전트를 좀 파봤는데 유료 결제 없이는 안되는거 같습니다.\n구글 ADK  과 A2A 를 해봤는데 \nADK 는 유료 결제에서 막혀서 진행이 중단되었고\nA2A 는 세팅 하는게 힘들어서 포기했습니다. ADK 보다 훨씬 큰 무언가가 있나봅니다.\nAI Agent 는 주석으로 함수 호출 방법을 설명하면\nAI 처리중에 알아서 함수를 호출해서 결과를 뽑아 오는 기능입니다.\n예제에서는 날씨 API 호출 방법을 설명하고 AI 한태 날씨를 물어보면 그 함수가 호출 되는걸 보여주고 있더군요\n \n4. BBG 최적화 작업 (진행중)\n다음주 까지 데이터를 입력한다고 하니 \n저도 진행 해야할꺼 같습니다.\n마음은 수이 코인 작업 하고 싶은데 ...",
        "guid": "http://serverdown.tistory.com/1337",
        "categories": [
          "프로그래밍/개발메모",
          "업데이트",
          "작업일지"
        ],
        "isoDate": "2025-05-30T02:34:57.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "소수몽키 / 미국 원자력 행정명령 / 로봇이 애 돌보는 시대 5년내 ?",
        "link": "http://serverdown.tistory.com/1336",
        "pubDate": "Wed, 28 May 2025 00:01:32 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1336#entry1336comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"500\" data-origin-height=\"169\"><span data-url=\"https://blog.kakaocdn.net/dn/yn0Y7/btsOeF1vtAT/HuHQHCjuJlXvwDrxVZE2Y0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/yn0Y7/btsOeF1vtAT/HuHQHCjuJlXvwDrxVZE2Y0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/yn0Y7/btsOeF1vtAT/HuHQHCjuJlXvwDrxVZE2Y0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fyn0Y7%2FbtsOeF1vtAT%2FHuHQHCjuJlXvwDrxVZE2Y0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"500\" height=\"169\" data-origin-width=\"500\" data-origin-height=\"169\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=KOKlis2GPzo&amp;t=799s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=KOKlis2GPzo&amp;t=799s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=KOKlis2GPzo\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cdEbK0/hyY07SjxFg/sLMX3z5Ct6VlsFZN0qkkTK/img.jpg?width=1280&amp;height=720&amp;face=164_90_1092_262,https://scrap.kakaocdn.net/dn/cqd9IO/hyYYxrzlzb/VE8M1pLzlKYXdt2wqFOmW1/img.jpg?width=1280&amp;height=720&amp;face=164_90_1092_262\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"트럼프발 원전 슈퍼 사이클 시작? 대놓고 밀어주는 주식들\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/KOKlis2GPzo\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">미국 원자력이 가고 있습니다. <br />지금 사기엔 비싸고 다음번을 노려봅시다.</p>\n<p data-ke-size=\"size16\">끝물이 아니라 한참 갈 것 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">CEG 컨스털레이션 에너지</p>\n<p data-ke-size=\"size16\">세계최대 원전 관리 회사</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">OKLO 오클로&nbsp;</p>\n<p data-ke-size=\"size16\">핵물질 재처리<br /><span style=\"text-align: start;\">상용화 가능하다. 발언 있었음</span><br />임원이 백악관 장관으로 갔다고 함</p>\n<p data-ke-size=\"size16\">두개게 유망해보입니다.</p>\n<p data-ke-size=\"size16\">제네럴 메터리얼은 상장이 안되어있다고 하네</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">로봇 이야기하다 테슬라 로봇이 유튜브로 학습을 할 수 있다고 합니다.</p>\n<p data-ke-size=\"size16\">청소나 일을 밸울 수도 있지만&nbsp;</p>\n<p data-ke-size=\"size16\">최종적으로 애들도 돌보고 학교 학원도 보내주고 할 수 있을 것 같습니다.</p>\n<p data-ke-size=\"size16\">이러면 출산율 다시 늘어나겠죠</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=KOKlis2GPzo&t=799s\n\n\n\n \n미국 원자력이 가고 있습니다. \n지금 사기엔 비싸고 다음번을 노려봅시다.\n끝물이 아니라 한참 갈 것 같습니다.\n \nCEG 컨스털레이션 에너지\n세계최대 원전 관리 회사\n \nOKLO 오클로 \n핵물질 재처리\n상용화 가능하다. 발언 있었음\n임원이 백악관 장관으로 갔다고 함\n두개게 유망해보입니다.\n제네럴 메터리얼은 상장이 안되어있다고 하네\n \n \n로봇 이야기하다 테슬라 로봇이 유튜브로 학습을 할 수 있다고 합니다.\n청소나 일을 밸울 수도 있지만 \n최종적으로 애들도 돌보고 학교 학원도 보내주고 할 수 있을 것 같습니다.\n이러면 출산율 다시 늘어나겠죠",
        "guid": "http://serverdown.tistory.com/1336",
        "categories": [
          "원자력",
          "휴머노이드"
        ],
        "isoDate": "2025-05-27T15:01:32.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "로봇 복싱 대회 영상",
        "link": "http://serverdown.tistory.com/1335",
        "pubDate": "Tue, 27 May 2025 23:52:08 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1335#entry1335comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"452\" data-origin-height=\"302\"><span data-url=\"https://blog.kakaocdn.net/dn/daZ7p2/btsOeaAgosg/vDkhFvY19VsmXk9GKblyqk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/daZ7p2/btsOeaAgosg/vDkhFvY19VsmXk9GKblyqk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/daZ7p2/btsOeaAgosg/vDkhFvY19VsmXk9GKblyqk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdaZ7p2%2FbtsOeaAgosg%2FvDkhFvY19VsmXk9GKblyqk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"452\" height=\"302\" data-origin-width=\"452\" data-origin-height=\"302\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=_SzCEU6apwg\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=_SzCEU6apwg</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=_SzCEU6apwg\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/T0dqO/hyYYxE4Mub/XRQ5F5JMLAauzz876x6200/img.jpg?width=1280&amp;height=720&amp;face=1110_324_1218_392,https://scrap.kakaocdn.net/dn/iRbT7/hyY1dEZEtn/Iz57kVx5F2ZsANVRY9GKk1/img.jpg?width=1280&amp;height=720&amp;face=1110_324_1218_392\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Unitree G1 Robot Boxing Match: World's First Robot Boxing\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/_SzCEU6apwg\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">중국에서 했다는거 같던데 재밌네요</p>\n<p data-ke-size=\"size16\">로봇의 움직임을 확인해봅시다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영화처럼 전쟁대신 로봇 전투로 승부를 보는 날이 올지도</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=_SzCEU6apwg\n\n\n\n \n중국에서 했다는거 같던데 재밌네요\n로봇의 움직임을 확인해봅시다.\n \n영화처럼 전쟁대신 로봇 전투로 승부를 보는 날이 올지도",
        "guid": "http://serverdown.tistory.com/1335",
        "categories": [
          "유튜브",
          "로봇",
          "휴머노이드"
        ],
        "isoDate": "2025-05-27T14:52:08.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "도커 직접 키보드로 입력해서 만드는 영상",
        "link": "http://serverdown.tistory.com/1334",
        "pubDate": "Tue, 27 May 2025 14:51:50 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1334#entry1334comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"562\" data-origin-height=\"309\"><span data-url=\"https://blog.kakaocdn.net/dn/bFLtxl/btsOfAkm5Wf/ypAh5iLhkb59N5H26NUsm1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bFLtxl/btsOfAkm5Wf/ypAh5iLhkb59N5H26NUsm1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bFLtxl/btsOfAkm5Wf/ypAh5iLhkb59N5H26NUsm1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbFLtxl%2FbtsOfAkm5Wf%2FypAh5iLhkb59N5H26NUsm1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"562\" height=\"309\" data-origin-width=\"562\" data-origin-height=\"309\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=ygcmRSbhp5A\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=ygcmRSbhp5A</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=ygcmRSbhp5A\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bFjDMg/hyYYv8hdpM/Y4LJk96BtUAxNRNT43KCz0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/fqqvi/hyYW3dbSGW/8PLIqHpbI6BWHkNswMIhC1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"28. 도커 컴포즈 PHP 와 MySQL 연동 컨테이너 만들기\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/ygcmRSbhp5A\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">깃허브:<span>&nbsp;</span></span><a href=\"https://github.com/kingchobo2022/myphp\">https://github.com/kingchobo2022/myphp</a></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">각 구간의 진행 방법을 확인 할 수 있었습니다.</p>\n<p data-ke-size=\"size16\">처음 배울때 뭐하지 에서 답을 찾을 수 있을것 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=ygcmRSbhp5A\n\n\n\n \n깃허브: https://github.com/kingchobo2022/myphp\n \n각 구간의 진행 방법을 확인 할 수 있었습니다.\n처음 배울때 뭐하지 에서 답을 찾을 수 있을것 같습니다.",
        "guid": "http://serverdown.tistory.com/1334",
        "categories": [
          "프로그래밍/개발메모",
          "도커"
        ],
        "isoDate": "2025-05-27T05:51:50.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "Google Play 앱 애드몹 붙이기 절차 / 2025년 5월",
        "link": "http://serverdown.tistory.com/1333",
        "pubDate": "Tue, 27 May 2025 13:41:20 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1333#entry1333comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1024\" data-origin-height=\"512\"><span data-url=\"https://blog.kakaocdn.net/dn/bh8Ay9/btsOdW2Ys3z/TyzrC75WsQoSOvLfmHcaC1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bh8Ay9/btsOdW2Ys3z/TyzrC75WsQoSOvLfmHcaC1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bh8Ay9/btsOdW2Ys3z/TyzrC75WsQoSOvLfmHcaC1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbh8Ay9%2FbtsOdW2Ys3z%2FTyzrC75WsQoSOvLfmHcaC1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1024\" height=\"512\" data-origin-width=\"1024\" data-origin-height=\"512\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">애드몹 붙이는 제대로된 절차가 없어서 시행착오 끝에 배운 결과를 요약합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">1. 구글 플레이에 앱을 만든다.</h2>\n<p data-ke-size=\"size16\">앱 만들기의 시작입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">2. 애드몹 가입하고&nbsp; 앱 추가한다.</h2>\n<p data-ke-size=\"size16\">광고 붙이기 시작이죠</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">3. 애드몹에서 제공하는 app-ads.txt 정보를 홈페이지에 올린다.</h2>\n<p data-ke-size=\"size16\">홈페이지 주소가</p>\n<p data-ke-size=\"size16\"><a href=\"https://apps.sidnft.com\">https://apps.sidnft.com</a></p>\n<p data-ke-size=\"size16\">이라면</p>\n<p data-ke-size=\"size16\"><a href=\"https://apps.sidnft.com/app-ads.txt\">https://apps.sidnft.com/app-ads.txt</a></p>\n<p data-ke-size=\"size16\">로 접속하면 파일 내용이 보여야한다.</p>\n<p data-ke-size=\"size16\">도메인네임/app-ads.txt 가 기준입니다. 서브 드렉토리는 인정하지 않습니다.</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">도메인네임/game/app-ads.txt 같이 중간에 폴더명은 안쳐준다는 것입니다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">4. 구글 플레이 앱 정보 -&gt; 홈페이지 주소를 등록한다.</h2>\n<p data-ke-size=\"size16\">개발자의 홈페이지를 이야기하는게 아니고<br />앱의 홈페이지 입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">5. 앱을 공개 테스트까지 진행한다.</h2>\n<p data-ke-size=\"size16\">공개 테스트를 진행해야 스토어 앱 주소가 나옵니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">6. 공개 테스트 앱 링크를 가지고 애드몹에서 스토오 정보를 연결한다.</h2>\n<p data-ke-size=\"size16\">애드몹에 보면 스토어 등록 정보를 입력하는 곳이 있습니다.</p>\n<p data-ke-size=\"size16\">거기다 넣고 검색해서 앱이 나와야 합니다.</p>\n<p data-ke-size=\"size16\">앱이 2개 나오는 경우가 있는데 하나는 인증 받을 수 없고 다른 하나는 인증 받을 수 있습니다.</p>\n<p data-ke-size=\"size16\">인증이 안되면 다른걸로 다시 등록해서 인증 받아보세요</p>\n<p data-ke-size=\"size16\">여기까지 해서 애드몹 인증이 끝나면 정상적인 광고를 받을 수 있습니다.</p>\n<p data-ke-size=\"size16\">빨리 적느라 메뉴의 위치를 생략했는데 나중에 채워두겠습니다.</p>",
        "contentSnippet": "애드몹 붙이는 제대로된 절차가 없어서 시행착오 끝에 배운 결과를 요약합니다.\n \n1. 구글 플레이에 앱을 만든다.\n앱 만들기의 시작입니다.\n \n2. 애드몹 가입하고  앱 추가한다.\n광고 붙이기 시작이죠\n \n3. 애드몹에서 제공하는 app-ads.txt 정보를 홈페이지에 올린다.\n홈페이지 주소가\nhttps://apps.sidnft.com\n이라면\nhttps://apps.sidnft.com/app-ads.txt\n로 접속하면 파일 내용이 보여야한다.\n도메인네임/app-ads.txt 가 기준입니다. 서브 드렉토리는 인정하지 않습니다.\n도메인네임/game/app-ads.txt 같이 중간에 폴더명은 안쳐준다는 것입니다.\n \n \n \n4. 구글 플레이 앱 정보 -> 홈페이지 주소를 등록한다.\n개발자의 홈페이지를 이야기하는게 아니고\n앱의 홈페이지 입니다.\n \n5. 앱을 공개 테스트까지 진행한다.\n공개 테스트를 진행해야 스토어 앱 주소가 나옵니다.\n \n6. 공개 테스트 앱 링크를 가지고 애드몹에서 스토오 정보를 연결한다.\n애드몹에 보면 스토어 등록 정보를 입력하는 곳이 있습니다.\n거기다 넣고 검색해서 앱이 나와야 합니다.\n앱이 2개 나오는 경우가 있는데 하나는 인증 받을 수 없고 다른 하나는 인증 받을 수 있습니다.\n인증이 안되면 다른걸로 다시 등록해서 인증 받아보세요\n여기까지 해서 애드몹 인증이 끝나면 정상적인 광고를 받을 수 있습니다.\n빨리 적느라 메뉴의 위치를 생략했는데 나중에 채워두겠습니다.",
        "guid": "http://serverdown.tistory.com/1333",
        "categories": [
          "프로그래밍/개발메모",
          "애드몹",
          "앱개발"
        ],
        "isoDate": "2025-05-27T04:41:20.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "실수에서 더 나은 시작으로",
        "link": "http://jojoldu.tistory.com/830",
        "pubDate": "Fri, 30 May 2025 00:06:22 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "http://jojoldu.tistory.com/830#entry830comment",
        "content": "<p data-ke-size=\"size16\">미생이란 컨텐츠는 스토브리그와 더불어서 회사생활을 어떤 시각으로 바라봐야하는가에 대해 좋은 힌트를 많이 줬다.<br />웹툰과 드라마 모두 다 봤지만, 특히나 드라마에서는 연출이 더 극적이라 그런지 감정과 생각이 잘 전달되었다.</p>\n<p data-ke-size=\"size16\">드라마 13화는 주인공 장그래가 속한 영업 3팀이 <code>문제가 생긴 사업을 좋은 사업으로 전환</code> 하는 에피소드이다.</p>\n<p data-ke-size=\"size16\">같은 팀 박종식 과장이 요르단 중고차 사업을 맡은 후 현지에 친인척 이름으로 페이퍼컴퍼니를 설립하고 중고차 수입을 밀어주는 형식으로 비리를 저지른다.<br />비리가 발견되고 나서 회사는 박종식 과장을 해임하고, 회사의 오점인 요르단 중고차 사업을 지운다.</p>\n<p data-ke-size=\"size16\">하지만 영업 3팀의 입장에서는 박종식 과장이 비리를 저지르긴 했지만 <b>요르단 사업 그 자체만 봤을때는 너무나 좋은 사업</b>이라고 판단했다.</p>\n<p data-ke-size=\"size16\">이 사업을 다시 시작하고 싶은데, 이미 비리로 인해 여러 사람이 해임되고 회사에서 쉬쉬하는 상황에서 어떻게 다시 이 사업을 해야한다고 임원들을 설득할 수 있을까?</p>\n<p data-ke-size=\"size16\">오상식 차장은 요르단 중고차 사업을 다시 시작해야한다고 설득해야하는 프레젠테이션 자리에서 임원진들에게 <b>그간 비리로 인해 그만두었던 사업들</b>에 대해 이야기한다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">\"문제가 생기자 회사는 각 사건을 신속하고 정확하게 해결했습니다.<br />깔끔하게 정리한 것입니다.<br /><b>그리고 그 사건을 지워버렸습니다</b>.\"<br />...<br />\"문제가 생긴 사업에 대해서 두 번 다시 입 밖에 꺼내지 않는 것은 우리가 선택하고 회사가 결정한 일입니다.<br />그렇다면 우리가 지워버린 그 사업들은 어디에서 어떻게 되었는지 아십니까?<br /><b>지금부터 보실 내용은 우리가 생각하기도 싫어 지워버렸던 그 사업을 가져간 타 업체들의 실적</b>입니다\"<br />...<br />\"죄를 처벌했으니, 그 일은 잊혀져야 맞는 것입니까?<br /><b>저희는 &lsquo;죄&rsquo;만 들어내기로 했습니다</b>.\"<br />출처: <a href=\"https://www.youtube.com/watch?v=BcMR3Ym2Tu0\"> [#미생] 13화 13분만에 몰아보기</a></p>\n</blockquote>\n<p data-ke-size=\"size16\">10년이 지났지만 생각이 날 정도로 이 에피소드는 내 회사 생활에 큰 영향을 줬다.</p>\n<p data-ke-size=\"size16\">\"<b>실수, 실패라고 불렀던 그 지점을 새로운 시작점으로 전환</b>\" 하게 만드는 이야기에 보는 내내 두근거렸다.<br />언젠간 나도 저렇게 실패를 새로운 시작으로 전환하는 일을 해봐야지 같은 생각을 하면서 말이다.</p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<p data-ke-size=\"size16\">2024년 2월, 인프런이 글로벌하게 트위터에서 언급된 적이 있다.<br />전 세계 개발자들이 구독하는 유명 유튜버 <a href=\"https://www.youtube.com/@codewithAntonio\">codewithAntonio</a>님이 우리 플랫폼에 대해 언급한 것이였다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">&ldquo;I just found out that instructor on @inflearn, a company with $4M+ in funding is using my open-source code and selling them as courses.&rdquo;<br />&mdash; <a href=\"https://x.com/YTCodeAntonio/status/1753228303924670731\">원문 트윗 보기</a></p>\n</blockquote>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"1.png\" data-origin-width=\"594\" data-origin-height=\"714\"><span data-url=\"https://blog.kakaocdn.net/dn/AV3QX/btsOhdxRNgb/0y4IYTx6BIn4t9jFZM98Rk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/AV3QX/btsOhdxRNgb/0y4IYTx6BIn4t9jFZM98Rk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/AV3QX/btsOhdxRNgb/0y4IYTx6BIn4t9jFZM98Rk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FAV3QX%2FbtsOhdxRNgb%2F0y4IYTx6BIn4t9jFZM98Rk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"594\" height=\"714\" data-filename=\"1.png\" data-origin-width=\"594\" data-origin-height=\"714\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">인프런에 올라온 한 강의가 Antonio님의 유료 강의와 똑같다는 것이었다.<br />완전히 처음 겪는 일에 잠시 멍해졌다.</p>\n<p data-ke-size=\"size16\">주말임에도 급하게 해당 강의를 확인했다.<br />그 와중에 CS 문의들이 쏟아지기 시작했다.<br />Antonio님의 팬인 수강생분들이 하나둘씩 &ldquo;내가 너무 좋아하는 Antonio 강의인데, 이 강의랑 구조가 하나도 빠짐없이 똑같다&rdquo;는 제보를 보내셨다.<br />쏟아지는 CS에 대해 답변드리고, Antonio님께 사과 메세지를 전달드리고, 내부적으로는 실제로 그런 일이 맞는지 검토하는 등 정신 없는 주말을 보냈다.</p>\n<p data-ke-size=\"size16\">강의 내용을 검토한 결과, 의심의 여지 없이 복제 강의였다.<br />지식 공유자분께서 업로드한 강의였기에 혹시나 Antonio님과 사전에 논의된 적이 있었는지 확인을 요청드렸다.</p>\n<p data-ke-size=\"size16\">모든 내용을 확인해보니 결국 두 분의 소통 과정에 문제가 있었고, Antonio님 입장에서는 전혀 생각하지 못했던 협업이였다.</p>\n<p data-ke-size=\"size16\">플랫폼을 운영하는 입장에서 가만히 있을 순 없었다.<br />곧바로 강의를 삭제하고 강의를 결제한 수강생분들께는 사과의 말씀과 함께 <b>전액 환불</b>을 했다.</p>\n<p data-ke-size=\"size16\">내부적으로 모든 내용이 정리가 되고나서는 대표님께서 직접 <a href=\"https://www.inflearn.com/notices/1184396\">공식 사과문</a>을 게시했다.</p>\n<p data-ke-size=\"size16\">이제 막 글로벌 전환을 하고 있었기에 이번 사건이 너무 크게 다가왔다.<br />글로벌 개발자분들께는 \"인프런? 거기 강의 훔쳐서 만드는 곳이잖아\" 라는 인상을 드린 것은 아닐까 하는 걱정과 앞으로 어떻게 이런 문제를 사전에 잡아낼 수 있을지에 대한 고민이 함께 생겼다.</p>\n<p data-ke-size=\"size16\">전세계에서 만들어지는 모든 컨텐츠를 우리가 다 확인할 순 없는데 어떻게 검수할 것인가.<br />수많은 트위터 댓글과 인용에 남긴 부정적 의견들을 어떻게 전환할 수 있을까 등등.</p>\n<p data-ke-size=\"size16\">여러가지 생각과 고민을 하던 중 믿기 힘든 문의가 올라왔다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">&ldquo;강의 철회 안내 메일을 받았습니다.<br />그런데 저는 이 강의가 너무 좋았어요.<br />이번 진행중인 프로젝트를 완료 하고나서 열공하려고 했거든요 ㅜㅜ<br />끝까지 보고 싶습니다.&rdquo;</p>\n</blockquote>\n<p data-ke-size=\"size16\">강의를 환불받은 수강생분들의 문의였다.</p>\n<p data-ke-size=\"size16\">미생 13화 요르단 사업 PT가 다시금 떠올랐다.<br />이대로 Antonio님과 죄송한 관계로 끝난다면 해외의 많은 개발자들분들은 인프런을 여전히 카피캣 강의 서비스로 기억할 것이다.<br />복사된 강의를 봤던 한국의 수강생분들은 저 좋은 콘텐츠를 더이상 한국어로는 보지 못한다.</p>\n<p data-ke-size=\"size16\">그래서 <b>'죄'는 들어내고 콘텐츠만 봤다</b>.</p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<p data-ke-size=\"size16\">Antonio님은 다양한 주제의 서비스 구현 강의들이 있었다.<br />듀오링고, 구글 Docs, 트위치, 넷플릭스, 스포티파이, 글로벌 이커머스 등 새로운 서비스를 구현 해야 한다면 이 중에 하나쯤은 있을 것 같은 주제의 강의들을 거의다 가지고 계셨다.</p>\n<p data-ke-size=\"size16\"><b>실수는 있었지만, 그것을 더 나은 시작으로 바꾸기로 했다</b>.</p>\n<p data-ke-size=\"size16\">글로벌 플랫폼으로 전환하고 나서 곧바로 Antonio님께 연락을 드렸다.<br />인프런을, 우리를 어떻게 생각할지 걱정도 앞섰지만, 그럼에도 이 콘텐츠를 꼭 한국의 개발자분들께 더 많이 알리고 싶었다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">Hello Antonio,<br />I&rsquo;m the CTO at Inflearn...<br />(중략)<br /><b>This collaboration is our way of making amends for the previous incident</b> and ensuring your invaluable content gets the recognition it deserves...</p>\n</blockquote>\n<p data-ke-size=\"size16\">Antonio님은 놀라울 정도로 성숙하게, 따뜻하게 답해주셨다.</p>\n<blockquote data-ke-style=\"style2\">\n<p style=\"color: #5c5c5c; text-align: start;\" data-source-line=\"100\" data-ke-size=\"size16\">&ldquo;Hi Donguk,<br />Thank you for reaching out!</p>\n<p style=\"color: #5c5c5c; text-align: start;\" data-source-line=\"103\" data-ke-size=\"size16\">I understand that managing content across a large platform can be challenging, and I truly appreciate the steps you're taking to improve your internal processes. No hard feelings on my end, and I&rsquo;m glad to see the positive changes you're implementing.  &rdquo;</p>\n</blockquote>\n<p data-ke-size=\"size16\">그리고 Antonio님과 같이 협업을 시작하게 되었다!<br />Antonio님은 항상 <a href=\"https://www.codewithantonio.com/pricing\">강의의 유료 자료 전체를 구매하는 방식</a>으로만 판매하셨다.<br />평생 구독 같은 느낌이다.</p>\n<p data-ke-size=\"size16\">다만, 이런 All or Nothing 의 판매가 국내에서는 이해하기 힘든 모델일 것이라고 봤다.<br />딱 하나만 들으면 되는데 모든 콘텐츠를 구매하는 것은 부담스러울 수 있을 것 같다는 의견을 나눴다.</p>\n<p data-ke-size=\"size16\">그래서 이번에 <b>우리와의 협업에서는 단건 구매가 가능하도록 각각의 강의를 아주 저렴하게 판매</b>하기로 했다.</p>\n<p data-ke-size=\"size16\">그리고 그렇게 많은 논의 끝에 나온 첫 주제는 대표작 <a href=\"https://inf.run/aXdYT\">YouTube Clone 프로젝트</a> 이다.</p>\n<p data-ke-size=\"size16\">Next.js 15 &amp; React 19 기반 최신 스택을 기반으로 비디오 플레이어, 컨텐츠 피드, 구독, 좋아요 등을 다 만들어보는 강좌이다.</p>\n<p data-ke-size=\"size16\">그의 뜻에 따라 기존 가격도 낮게 설정하고, 얼리버드 할인 역시 큰 폭으로 진행하게 되었다.</p>\n<p data-ke-size=\"size16\">가격을 떠나 요즘 풀스택 구현을 원하시는 분들에게 필요한 대부분의 내용이 포함되어 있었다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>  Next.js 15 &amp; React 19 기반 최신 스택</li>\n<li> ️ DrizzleORM 기반 PostgreSQL</li>\n<li>  TailwindCSS와 ShadcnUI를 활용한 세련된 UI 구성</li>\n<li>  AI 기반 제목, 소개, 썸네일 자동 생성</li>\n<li>  조회수, 좋아요, 트래픽을 확인할 수 있는 크리에이터 스튜디오</li>\n</ul>\n<p data-ke-size=\"size16\">등 단순히 &ldquo;유튜브처럼 생긴 무언가&rdquo;를 만드는 수준을 넘어서 지금 우리가 매일 쓰는 유튜브의 핵심 기능들을 하나하나 직접 구현하면서 배워나가는 구조다.</p>\n<p data-ke-size=\"size16\">이 모든 것을 한 프로젝트 안에서 경험할 수 있는, 그야말로 <b>현업형 풀스택 클론 코딩 강의</b>였다.</p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<p data-ke-size=\"size16\">우리는 실수를 했다.<br />하지만 그 실수를 투명하게 바로잡고,<br /><b>진짜 제작자분과 제대로 된 기회를 만들 수 있었다.</b></p>\n<p data-ke-size=\"size16\">앞으로도 우리는 계속 실수할 수 있다.<br />다만, 그 실수는 실수에서 끝나지 않고, 항상 더 나은 시작으로 만들 수 있을 것 같다는 자신이 생겼다.</p>",
        "contentSnippet": "미생이란 컨텐츠는 스토브리그와 더불어서 회사생활을 어떤 시각으로 바라봐야하는가에 대해 좋은 힌트를 많이 줬다.\n웹툰과 드라마 모두 다 봤지만, 특히나 드라마에서는 연출이 더 극적이라 그런지 감정과 생각이 잘 전달되었다.\n드라마 13화는 주인공 장그래가 속한 영업 3팀이 문제가 생긴 사업을 좋은 사업으로 전환 하는 에피소드이다.\n같은 팀 박종식 과장이 요르단 중고차 사업을 맡은 후 현지에 친인척 이름으로 페이퍼컴퍼니를 설립하고 중고차 수입을 밀어주는 형식으로 비리를 저지른다.\n비리가 발견되고 나서 회사는 박종식 과장을 해임하고, 회사의 오점인 요르단 중고차 사업을 지운다.\n하지만 영업 3팀의 입장에서는 박종식 과장이 비리를 저지르긴 했지만 요르단 사업 그 자체만 봤을때는 너무나 좋은 사업이라고 판단했다.\n이 사업을 다시 시작하고 싶은데, 이미 비리로 인해 여러 사람이 해임되고 회사에서 쉬쉬하는 상황에서 어떻게 다시 이 사업을 해야한다고 임원들을 설득할 수 있을까?\n오상식 차장은 요르단 중고차 사업을 다시 시작해야한다고 설득해야하는 프레젠테이션 자리에서 임원진들에게 그간 비리로 인해 그만두었던 사업들에 대해 이야기한다.\n\"문제가 생기자 회사는 각 사건을 신속하고 정확하게 해결했습니다.\n깔끔하게 정리한 것입니다.\n그리고 그 사건을 지워버렸습니다.\"\n...\n\"문제가 생긴 사업에 대해서 두 번 다시 입 밖에 꺼내지 않는 것은 우리가 선택하고 회사가 결정한 일입니다.\n그렇다면 우리가 지워버린 그 사업들은 어디에서 어떻게 되었는지 아십니까?\n지금부터 보실 내용은 우리가 생각하기도 싫어 지워버렸던 그 사업을 가져간 타 업체들의 실적입니다\"\n...\n\"죄를 처벌했으니, 그 일은 잊혀져야 맞는 것입니까?\n저희는 ‘죄’만 들어내기로 했습니다.\"\n출처:  [#미생] 13화 13분만에 몰아보기\n10년이 지났지만 생각이 날 정도로 이 에피소드는 내 회사 생활에 큰 영향을 줬다.\n\"실수, 실패라고 불렀던 그 지점을 새로운 시작점으로 전환\" 하게 만드는 이야기에 보는 내내 두근거렸다.\n언젠간 나도 저렇게 실패를 새로운 시작으로 전환하는 일을 해봐야지 같은 생각을 하면서 말이다.\n2024년 2월, 인프런이 글로벌하게 트위터에서 언급된 적이 있다.\n전 세계 개발자들이 구독하는 유명 유튜버 codewithAntonio님이 우리 플랫폼에 대해 언급한 것이였다.\n“I just found out that instructor on @inflearn, a company with $4M+ in funding is using my open-source code and selling them as courses.”\n— 원문 트윗 보기\n\n\n인프런에 올라온 한 강의가 Antonio님의 유료 강의와 똑같다는 것이었다.\n완전히 처음 겪는 일에 잠시 멍해졌다.\n주말임에도 급하게 해당 강의를 확인했다.\n그 와중에 CS 문의들이 쏟아지기 시작했다.\nAntonio님의 팬인 수강생분들이 하나둘씩 “내가 너무 좋아하는 Antonio 강의인데, 이 강의랑 구조가 하나도 빠짐없이 똑같다”는 제보를 보내셨다.\n쏟아지는 CS에 대해 답변드리고, Antonio님께 사과 메세지를 전달드리고, 내부적으로는 실제로 그런 일이 맞는지 검토하는 등 정신 없는 주말을 보냈다.\n강의 내용을 검토한 결과, 의심의 여지 없이 복제 강의였다.\n지식 공유자분께서 업로드한 강의였기에 혹시나 Antonio님과 사전에 논의된 적이 있었는지 확인을 요청드렸다.\n모든 내용을 확인해보니 결국 두 분의 소통 과정에 문제가 있었고, Antonio님 입장에서는 전혀 생각하지 못했던 협업이였다.\n플랫폼을 운영하는 입장에서 가만히 있을 순 없었다.\n곧바로 강의를 삭제하고 강의를 결제한 수강생분들께는 사과의 말씀과 함께 전액 환불을 했다.\n내부적으로 모든 내용이 정리가 되고나서는 대표님께서 직접 공식 사과문을 게시했다.\n이제 막 글로벌 전환을 하고 있었기에 이번 사건이 너무 크게 다가왔다.\n글로벌 개발자분들께는 \"인프런? 거기 강의 훔쳐서 만드는 곳이잖아\" 라는 인상을 드린 것은 아닐까 하는 걱정과 앞으로 어떻게 이런 문제를 사전에 잡아낼 수 있을지에 대한 고민이 함께 생겼다.\n전세계에서 만들어지는 모든 컨텐츠를 우리가 다 확인할 순 없는데 어떻게 검수할 것인가.\n수많은 트위터 댓글과 인용에 남긴 부정적 의견들을 어떻게 전환할 수 있을까 등등.\n여러가지 생각과 고민을 하던 중 믿기 힘든 문의가 올라왔다.\n“강의 철회 안내 메일을 받았습니다.\n그런데 저는 이 강의가 너무 좋았어요.\n이번 진행중인 프로젝트를 완료 하고나서 열공하려고 했거든요 ㅜㅜ\n끝까지 보고 싶습니다.”\n강의를 환불받은 수강생분들의 문의였다.\n미생 13화 요르단 사업 PT가 다시금 떠올랐다.\n이대로 Antonio님과 죄송한 관계로 끝난다면 해외의 많은 개발자들분들은 인프런을 여전히 카피캣 강의 서비스로 기억할 것이다.\n복사된 강의를 봤던 한국의 수강생분들은 저 좋은 콘텐츠를 더이상 한국어로는 보지 못한다.\n그래서 '죄'는 들어내고 콘텐츠만 봤다.\nAntonio님은 다양한 주제의 서비스 구현 강의들이 있었다.\n듀오링고, 구글 Docs, 트위치, 넷플릭스, 스포티파이, 글로벌 이커머스 등 새로운 서비스를 구현 해야 한다면 이 중에 하나쯤은 있을 것 같은 주제의 강의들을 거의다 가지고 계셨다.\n실수는 있었지만, 그것을 더 나은 시작으로 바꾸기로 했다.\n글로벌 플랫폼으로 전환하고 나서 곧바로 Antonio님께 연락을 드렸다.\n인프런을, 우리를 어떻게 생각할지 걱정도 앞섰지만, 그럼에도 이 콘텐츠를 꼭 한국의 개발자분들께 더 많이 알리고 싶었다.\nHello Antonio,\nI’m the CTO at Inflearn...\n(중략)\nThis collaboration is our way of making amends for the previous incident and ensuring your invaluable content gets the recognition it deserves...\nAntonio님은 놀라울 정도로 성숙하게, 따뜻하게 답해주셨다.\n“Hi Donguk,\nThank you for reaching out!\nI understand that managing content across a large platform can be challenging, and I truly appreciate the steps you're taking to improve your internal processes. No hard feelings on my end, and I’m glad to see the positive changes you're implementing.  ”\n그리고 Antonio님과 같이 협업을 시작하게 되었다!\nAntonio님은 항상 강의의 유료 자료 전체를 구매하는 방식으로만 판매하셨다.\n평생 구독 같은 느낌이다.\n다만, 이런 All or Nothing 의 판매가 국내에서는 이해하기 힘든 모델일 것이라고 봤다.\n딱 하나만 들으면 되는데 모든 콘텐츠를 구매하는 것은 부담스러울 수 있을 것 같다는 의견을 나눴다.\n그래서 이번에 우리와의 협업에서는 단건 구매가 가능하도록 각각의 강의를 아주 저렴하게 판매하기로 했다.\n그리고 그렇게 많은 논의 끝에 나온 첫 주제는 대표작 YouTube Clone 프로젝트 이다.\nNext.js 15 & React 19 기반 최신 스택을 기반으로 비디오 플레이어, 컨텐츠 피드, 구독, 좋아요 등을 다 만들어보는 강좌이다.\n그의 뜻에 따라 기존 가격도 낮게 설정하고, 얼리버드 할인 역시 큰 폭으로 진행하게 되었다.\n가격을 떠나 요즘 풀스택 구현을 원하시는 분들에게 필요한 대부분의 내용이 포함되어 있었다.\n  Next.js 15 & React 19 기반 최신 스택\n ️ DrizzleORM 기반 PostgreSQL\n  TailwindCSS와 ShadcnUI를 활용한 세련된 UI 구성\n  AI 기반 제목, 소개, 썸네일 자동 생성\n  조회수, 좋아요, 트래픽을 확인할 수 있는 크리에이터 스튜디오\n등 단순히 “유튜브처럼 생긴 무언가”를 만드는 수준을 넘어서 지금 우리가 매일 쓰는 유튜브의 핵심 기능들을 하나하나 직접 구현하면서 배워나가는 구조다.\n이 모든 것을 한 프로젝트 안에서 경험할 수 있는, 그야말로 현업형 풀스택 클론 코딩 강의였다.\n우리는 실수를 했다.\n하지만 그 실수를 투명하게 바로잡고,\n진짜 제작자분과 제대로 된 기회를 만들 수 있었다.\n앞으로도 우리는 계속 실수할 수 있다.\n다만, 그 실수는 실수에서 끝나지 않고, 항상 더 나은 시작으로 만들 수 있을 것 같다는 자신이 생겼다.",
        "guid": "http://jojoldu.tistory.com/830",
        "categories": [
          "생각정리",
          "Antonio",
          "미생",
          "안토니오",
          "인프런",
          "클론코딩"
        ],
        "isoDate": "2025-05-29T15:06:22.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "복잡한 회원 인증 프로세스, 기본 원칙만 알면 쉽습니다",
        "link": "https://techblog.lycorp.co.jp/ko/introduction-to-membership-authentication-system-renewal-case-study",
        "pubDate": "Fri, 30 May 2025 02:00:00 GMT",
        "content": "팀장님: \"회원 인증 체계를 리뉴얼해 봅시다\"기획자: \"인... 인증이요?\" ('인증 시스템 레거시도 많아 보이고 복잡해 보이는데... 좀 무섭네...')'인증'이란 단어는 듣기만...",
        "contentSnippet": "팀장님: \"회원 인증 체계를 리뉴얼해 봅시다\"기획자: \"인... 인증이요?\" ('인증 시스템 레거시도 많아 보이고 복잡해 보이는데... 좀 무섭네...')'인증'이란 단어는 듣기만...",
        "guid": "https://techblog.lycorp.co.jp/ko/introduction-to-membership-authentication-system-renewal-case-study",
        "isoDate": "2025-05-30T02:00:00.000Z"
      },
      {
        "title": "코드 품질 개선 기법 13편: 클론 가족",
        "link": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-13",
        "pubDate": "Wed, 28 May 2025 02:00:00 GMT",
        "content": "이 글은 2024년 2월 15일에 일본어로 먼저 발행된 기사를 번역한 글입니다.안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 ...",
        "contentSnippet": "이 글은 2024년 2월 15일에 일본어로 먼저 발행된 기사를 번역한 글입니다.안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 ...",
        "guid": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-13",
        "isoDate": "2025-05-28T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": [
      {
        "title": "NHN Cloud 빠른 시작 가이드를 소개합니다",
        "link": "https://meetup.nhncloud.com/posts/392",
        "pubDate": "Wed, 28 May 2025 06:40:47 GMT",
        "content": "![자산 2.png](https://image.toast.com/aaaadh/alpha/2025/techblog/uC790uC0B0%202.png)\r\r\n\r\r\n# 들어가며\r\r\n\r\r\nNHN Cloud 빠른 시작 가이드가 출시되었습니다. NHN Cloud는 현재까지 110개가 넘는 서비스를 제공 중인데요. 이렇게 다양하고 많은 서비스를 처음 사용하고자 할 때 어디서부터 시작해야 할지에 대한 과정은 설레면서도 막막함을 동반하는데요. NHN Cloud를 처음 접해보는 분들을 위해 최대한 빠르고 쉽게 NHN Cloud를 익힐 수 있도록 돕기 위한 빠른 시작 가이드를 소개합니다.\r\r\n\r\r\n# 빠른 시작 가이드란?\r\r\n\r\r\n빠른 시작 가이드는 사용자가 서비스를 신속하게 이해하고 바로 사용할 수 있도록 도와주는 간결한 문서입니다. 여기서 중요한 점은 **간결성**이데요. 빠른 시작 가이드는 간결하고 핵심적인 내용을 담고 있어 사용자가 서비스를 시작하는데 필요한 정보만 포함하고 불필요한 세부사항은 생략합니다.\r\r\n\r\r\n또한 **작업 중심적**으로 특정 작업을 빠르게 완료하기 위한 정보만 포함합니다. 따라서 NHN Cloud 빠른 시작 가이드도 총 12개의 학습 모듈에서 완수해야 할 작업을 중심으로 구성되어 있습니다. 각 학습 모듈에서 이전에 생성한 리소스를 재활용하여 복잡한 초기 설정 작업을 간소화해 주요 작업을 빠르게 진행할 수 있도록 설계하였습니다.\r\r\n\r\r\n빠른 시작 가이드와 튜토리얼이 같은 목적을 가진 문서로 보일 수 있지만 사실 두 문서는 서로 다른 목적을 가집니다. 두 문서 모두 어떤 기능을 사용하거나 작업을 완료하는 방법을 다루는 문서이지만 튜토리얼은 앞서 설명한 빠른 시작 가이드의 특징과 다르게 사용자가 더 넓고 복잡한 작업을 수행할 수 있도록 돕습니다. 따라서 타깃 대상도 처음 서비스를 사용하는 사용자가 아닌 심화 학습을 원하는 사용자이며 빠른 시작 가이드 대비 내용이 더 길고 복잡한 작업을 다룹니다.\r\r\n\r\r\n## NHN Cloud 빠른 시작 가이드\r\r\n\r\r\n**NHN Cloud 빠른 시작 가이드**는 NHN Cloud를 처음 이용하는 사용자를 위한 단계별 온보딩 가이드입니다. 본 가이드를 통해 빠른 시간 내에 다양한 클라우드 리소스를 효율적으로 관리하고 설정할 수 있는 통합 관리 도구인 NHN Cloud 콘솔의 사용법을 익히고 클라우드 서비스를 제공할 수 있습니다.\r\r\n\r\r\n가이드는 아래와 같이 12개의 학습 모듈로 구성되어 있습니다. 각 학습 모듈은 쉽게 따라 할 수 있도록 실습 예제를 제공합니다. NHN Cloud 회원 가입 이후부터 기본 콘솔 사용법을 익히고 최종적으로 간단한 클라우드 아키텍처를 구성해 서비스를 제공할 수 있습니다.\r\r\n\r\r\n [NHN Cloud 빠른 시작 가이드 바로가기](https://docs.nhncloud.com/ko/quickstarts/ko/overview/)\r\r\n<br>\r\r\n\r\r\n![NHN Portal 개선 빠른 시작 가이드@2x (1).png](https://image.toast.com/aaaadh/alpha/2025/techblog/NHN%20Portal%20uAC1CuC120%20uBE60uB978%20uC2DCuC791%20uAC00uC774uB4DC2x%201.png)\r\r\n\r\r\n## 빠른 시작 가이드 구성\r\r\n\r\r\nNHN Cloud 빠른 시작 가이드의 학습 모듈은 크게 3가지 영역으로 구성됩니다.\r\r\n\r\r\n1. 학습 목표: 학습 모듈을 통해 배울 내용을 간략하게 보여줍니다.\r\r\n2. 시작하기 전에: 학습 모듈을 매끄럽게 수행하기 위해 필요한 준비 사항을 보여줍니다.\r\r\n3. 실습 과제: 학습 모듈에서 수행할 과제 내용을 다루며 여러 단계로 나누어 설명합니다.\r\r\n4. 참고 자료: 해당 학습 모듈과 관련된 더 깊이 있는 정보를 확인할 수 있습니다.\r\r\n\r\r\n\r\r\n빠른 시작 가이드는 NHN Cloud 입문자가 쉽게 익힐 수 있게 작성된 문서입니다. 따라서 각 학습 모듈에서 동일한 조직, 프로젝트, 리전, 가용성 영역을 사용하여 복잡한 설정 작업을 최대한 간소화하였습니다.\r\r\n\r\r\n* 조직: MyORG\r\r\n* 프로젝트: MyPRJ\r\r\n* 리전: 평촌 Region\r\r\n* VPC: MyVPC\r\r\n* 서브넷: MySubnet\r\r\n\r\r\n![0. 개요.png](https://image.toast.com/aaaadh/alpha/2025/techblog/0.%20uAC1CuC694.png)\r\r\n\r\r\n총 12개의 학습 모듈은 서로 연계되어 있습니다. 따라서 하나의 학습 모듈에서 생성한 리소스를 재사용하므로 마지막 학습 모듈을 마치기 전까지 리소스를 삭제하지 않는 것을 권장합니다. 학습 모듈의 실습 과제들을 차근차근 따라 해 보면서 생성한 리소스를 활용하여 `학습 모듈 10. 확장성과 성능 최적화`을 완수하면 아래와 같은 클라우드 아키텍처를 완성할 수 있습니다.\r\r\n\r\r\n![모듈 10. 확장성과 성능 최적화.png](https://image.toast.com/aaaadh/alpha/2025/techblog/uBAA8uB4C8%2010.%20uD655uC7A5uC131uACFC%20uC131uB2A5%20uCD5CuC801uD654.png)\r\r\n\r\r\n\r\r\n> 오토 스케일링, 로드 밸런싱 서비스를 사용해 안정적인 데이터 관리를 위한 효율적이고 유연하며 확장 가능한 시스템을 완성할 수 있습니다.\r\r\n\r\r\n## 더 알아보기\r\r\n\r\r\nNHN Cloud 빠른 시작 가이드를 통해 NHN Cloud와 친숙해 지셨다면 한 걸음 더 나아가 NHN Cloud 교육센터를 통해 더 깊이있고 심화된 내용을 학습하실 수 있습니다. NHN Cloud는 NHN Cloud 콘솔을 직접 사용하며 배울 수 있는 교육 과정을 제공하고 있는데요. 빠른 시작 가이드에서 다루는 내용 뿐 아니라 클라우드 및 컨테이너에 대한 기본 개념과 NHN Cloud의 컨테이너 서비스인 `NHN Kubernetes Service(NKS)`와 `NHN Container Registry(NCR)`에 대해 심도있게 학습할 수 있습니다. NHN Cloud 교육센터에서 제공하는 클라우드 기초 지식부터 심화 내용을 다루는 교육 과정을 통해 클라우드 역량을 향상하고 더 나아가 NHN Cloud 자격증을 이수할 수 있습니다.\r\r\n\r\r\n [NHN Cloud 교육센터 바로가기](https://www.nhncloud.com/kr/edu)\r\r\n\r\r\n![footer.png](https://image.toast.com/aaaadh/alpha/2025/techblog/footer.png)",
        "contentSnippet": "![자산 2.png](https://image.toast.com/aaaadh/alpha/2025/techblog/uC790uC0B0%202.png)\r\r\n\r\r\n# 들어가며\r\r\n\r\r\nNHN Cloud 빠른 시작 가이드가 출시되었습니다. NHN Cloud는 현재까지 110개가 넘는 서비스를 제공 중인데요. 이렇게 다양하고 많은 서비스를 처음 사용하고자 할 때 어디서부터 시작해야 할지에 대한 과정은 설레면서도 막막함을 동반하는데요. NHN Cloud를 처음 접해보는 분들을 위해 최대한 빠르고 쉽게 NHN Cloud를 익힐 수 있도록 돕기 위한 빠른 시작 가이드를 소개합니다.\r\r\n\r\r\n# 빠른 시작 가이드란?\r\r\n\r\r\n빠른 시작 가이드는 사용자가 서비스를 신속하게 이해하고 바로 사용할 수 있도록 도와주는 간결한 문서입니다. 여기서 중요한 점은 **간결성**이데요. 빠른 시작 가이드는 간결하고 핵심적인 내용을 담고 있어 사용자가 서비스를 시작하는데 필요한 정보만 포함하고 불필요한 세부사항은 생략합니다.\r\r\n\r\r\n또한 **작업 중심적**으로 특정 작업을 빠르게 완료하기 위한 정보만 포함합니다. 따라서 NHN Cloud 빠른 시작 가이드도 총 12개의 학습 모듈에서 완수해야 할 작업을 중심으로 구성되어 있습니다. 각 학습 모듈에서 이전에 생성한 리소스를 재활용하여 복잡한 초기 설정 작업을 간소화해 주요 작업을 빠르게 진행할 수 있도록 설계하였습니다.\r\r\n\r\r\n빠른 시작 가이드와 튜토리얼이 같은 목적을 가진 문서로 보일 수 있지만 사실 두 문서는 서로 다른 목적을 가집니다. 두 문서 모두 어떤 기능을 사용하거나 작업을 완료하는 방법을 다루는 문서이지만 튜토리얼은 앞서 설명한 빠른 시작 가이드의 특징과 다르게 사용자가 더 넓고 복잡한 작업을 수행할 수 있도록 돕습니다. 따라서 타깃 대상도 처음 서비스를 사용하는 사용자가 아닌 심화 학습을 원하는 사용자이며 빠른 시작 가이드 대비 내용이 더 길고 복잡한 작업을 다룹니다.\r\r\n\r\r\n## NHN Cloud 빠른 시작 가이드\r\r\n\r\r\n**NHN Cloud 빠른 시작 가이드**는 NHN Cloud를 처음 이용하는 사용자를 위한 단계별 온보딩 가이드입니다. 본 가이드를 통해 빠른 시간 내에 다양한 클라우드 리소스를 효율적으로 관리하고 설정할 수 있는 통합 관리 도구인 NHN Cloud 콘솔의 사용법을 익히고 클라우드 서비스를 제공할 수 있습니다.\r\r\n\r\r\n가이드는 아래와 같이 12개의 학습 모듈로 구성되어 있습니다. 각 학습 모듈은 쉽게 따라 할 수 있도록 실습 예제를 제공합니다. NHN Cloud 회원 가입 이후부터 기본 콘솔 사용법을 익히고 최종적으로 간단한 클라우드 아키텍처를 구성해 서비스를 제공할 수 있습니다.\r\r\n\r\r\n [NHN Cloud 빠른 시작 가이드 바로가기](https://docs.nhncloud.com/ko/quickstarts/ko/overview/)\r\r\n\r\r\n\r\r\n![NHN Portal 개선 빠른 시작 가이드@2x (1).png](https://image.toast.com/aaaadh/alpha/2025/techblog/NHN%20Portal%20uAC1CuC120%20uBE60uB978%20uC2DCuC791%20uAC00uC774uB4DC2x%201.png)\r\r\n\r\r\n## 빠른 시작 가이드 구성\r\r\n\r\r\nNHN Cloud 빠른 시작 가이드의 학습 모듈은 크게 3가지 영역으로 구성됩니다.\r\r\n\r\r\n1. 학습 목표: 학습 모듈을 통해 배울 내용을 간략하게 보여줍니다.\r\r\n2. 시작하기 전에: 학습 모듈을 매끄럽게 수행하기 위해 필요한 준비 사항을 보여줍니다.\r\r\n3. 실습 과제: 학습 모듈에서 수행할 과제 내용을 다루며 여러 단계로 나누어 설명합니다.\r\r\n4. 참고 자료: 해당 학습 모듈과 관련된 더 깊이 있는 정보를 확인할 수 있습니다.\r\r\n\r\r\n\r\r\n빠른 시작 가이드는 NHN Cloud 입문자가 쉽게 익힐 수 있게 작성된 문서입니다. 따라서 각 학습 모듈에서 동일한 조직, 프로젝트, 리전, 가용성 영역을 사용하여 복잡한 설정 작업을 최대한 간소화하였습니다.\r\r\n\r\r\n* 조직: MyORG\r\r\n* 프로젝트: MyPRJ\r\r\n* 리전: 평촌 Region\r\r\n* VPC: MyVPC\r\r\n* 서브넷: MySubnet\r\r\n\r\r\n![0. 개요.png](https://image.toast.com/aaaadh/alpha/2025/techblog/0.%20uAC1CuC694.png)\r\r\n\r\r\n총 12개의 학습 모듈은 서로 연계되어 있습니다. 따라서 하나의 학습 모듈에서 생성한 리소스를 재사용하므로 마지막 학습 모듈을 마치기 전까지 리소스를 삭제하지 않는 것을 권장합니다. 학습 모듈의 실습 과제들을 차근차근 따라 해 보면서 생성한 리소스를 활용하여 `학습 모듈 10. 확장성과 성능 최적화`을 완수하면 아래와 같은 클라우드 아키텍처를 완성할 수 있습니다.\r\r\n\r\r\n![모듈 10. 확장성과 성능 최적화.png](https://image.toast.com/aaaadh/alpha/2025/techblog/uBAA8uB4C8%2010.%20uD655uC7A5uC131uACFC%20uC131uB2A5%20uCD5CuC801uD654.png)\r\r\n\r\r\n\r\r\n> 오토 스케일링, 로드 밸런싱 서비스를 사용해 안정적인 데이터 관리를 위한 효율적이고 유연하며 확장 가능한 시스템을 완성할 수 있습니다.\r\r\n\r\r\n## 더 알아보기\r\r\n\r\r\nNHN Cloud 빠른 시작 가이드를 통해 NHN Cloud와 친숙해 지셨다면 한 걸음 더 나아가 NHN Cloud 교육센터를 통해 더 깊이있고 심화된 내용을 학습하실 수 있습니다. NHN Cloud는 NHN Cloud 콘솔을 직접 사용하며 배울 수 있는 교육 과정을 제공하고 있는데요. 빠른 시작 가이드에서 다루는 내용 뿐 아니라 클라우드 및 컨테이너에 대한 기본 개념과 NHN Cloud의 컨테이너 서비스인 `NHN Kubernetes Service(NKS)`와 `NHN Container Registry(NCR)`에 대해 심도있게 학습할 수 있습니다. NHN Cloud 교육센터에서 제공하는 클라우드 기초 지식부터 심화 내용을 다루는 교육 과정을 통해 클라우드 역량을 향상하고 더 나아가 NHN Cloud 자격증을 이수할 수 있습니다.\r\r\n\r\r\n [NHN Cloud 교육센터 바로가기](https://www.nhncloud.com/kr/edu)\r\r\n\r\r\n![footer.png](https://image.toast.com/aaaadh/alpha/2025/techblog/footer.png)",
        "isoDate": "2025-05-28T06:40:47.000Z"
      }
    ]
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": [
      {
        "creator": "호돌맨",
        "title": "쿠팡을 이용한 결과",
        "link": "https://hodolman.tistory.com/76",
        "pubDate": "Sun, 1 Jun 2025 23:39:39 +0900",
        "author": "호돌맨",
        "comments": "https://hodolman.tistory.com/76#entry76comment",
        "content": "<div style=\"background-color: #ffffff; color: #080809; text-align: start;\">\n<div style=\"text-align: start;\">쿠팡에서의 제품 구입 패턴을 바꿔야겠다.</div>\n<div style=\"text-align: start;\">와우회원을 탈퇴하거나 네이버 쇼핑과 잘 믹스 해야겠다.</div>\n<div style=\"text-align: start;\">이유는 이렇다.</div>\n</div>\n<div style=\"background-color: #ffffff; color: #080809; text-align: start;\">\n<div style=\"text-align: start;\">- 저품질, 불만족스러운 제품을 많이 사게 됐다. 리뷰를 꼼꼼히 보고 샀지만, 쉽게 망가지거나 금방 해져버리는 물건들이 많았다. 흔히 말하는 &lsquo;불만족-알리택갈이&rsquo; 제품의 구매 비중이 점점 늘어났다는 얘기다. 특히 생활용품에서 이런 불만족이 컸다. 쿠팡이 그런 제품을 일부러 권한 건 아니지만, 문방구 앞 달고나처럼 달콤한 유혹을 뿌리칠 수 없었다.</div>\n</div>\n<div style=\"background-color: #ffffff; color: #080809; text-align: start;\">\n<div style=\"text-align: start;\">- <span style=\"text-align: inherit;\"></span>로켓배송은 사실 필요가 없었다. 구입 이력을 보니 &lsquo;꼭 오늘, 내일 필요해!&rsquo;라는 제품은 하나도 없었다. 당일이나 하루 만에 도착하는 배송이 편리하다는 착각에 빠져 있었던 것이다. 쾌락과 편리함의 경계를 제대로 구분하지 못한 탓이 크다.</div>\n</div>\n<div style=\"background-color: #ffffff; color: #080809; text-align: start;\">\n<div style=\"text-align: start;\">- 내 기준에 맞는 제품은 대부분 로켓배송이 아니거나, 가격에서 이점이 없다.</div>\n</div>\n<div style=\"background-color: #ffffff; color: #080809; text-align: start;\">\n<div style=\"text-align: start;\">- 쿠팡플레이는 애초에 보지 않는다.</div>\n</div>",
        "contentSnippet": "쿠팡에서의 제품 구입 패턴을 바꿔야겠다.\n와우회원을 탈퇴하거나 네이버 쇼핑과 잘 믹스 해야겠다.\n이유는 이렇다.\n- 저품질, 불만족스러운 제품을 많이 사게 됐다. 리뷰를 꼼꼼히 보고 샀지만, 쉽게 망가지거나 금방 해져버리는 물건들이 많았다. 흔히 말하는 ‘불만족-알리택갈이’ 제품의 구매 비중이 점점 늘어났다는 얘기다. 특히 생활용품에서 이런 불만족이 컸다. 쿠팡이 그런 제품을 일부러 권한 건 아니지만, 문방구 앞 달고나처럼 달콤한 유혹을 뿌리칠 수 없었다.\n- 로켓배송은 사실 필요가 없었다. 구입 이력을 보니 ‘꼭 오늘, 내일 필요해!’라는 제품은 하나도 없었다. 당일이나 하루 만에 도착하는 배송이 편리하다는 착각에 빠져 있었던 것이다. 쾌락과 편리함의 경계를 제대로 구분하지 못한 탓이 크다.\n- 내 기준에 맞는 제품은 대부분 로켓배송이 아니거나, 가격에서 이점이 없다.\n- 쿠팡플레이는 애초에 보지 않는다.",
        "guid": "https://hodolman.tistory.com/76",
        "categories": [
          "우당탕탕 대모험"
        ],
        "isoDate": "2025-06-01T14:39:39.000Z"
      }
    ]
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "누구를 위한 법이고, 누구를 위한 규제인가?",
        "link": "https://www.thestartupbible.com/2025/06/losers-will-be-losers.html",
        "pubDate": "Sun, 01 Jun 2025 21:33:00 +0000",
        "content:encodedSnippet": "우리가 투자한 회사 중 콘택트렌즈 사업을 하는 옵틱라이프라는 곳이 있다. 이 회사는 본인들이 직접 콘택트렌즈를 제조하고, 다른 회사의 제품 또한 유통하고 있는데, 한국은 콘택트렌즈의 온라인 판매가 법으로 금지되어 있어서, 옵틱라이프에서 고객이 원하는 렌즈에 대한 결제를 하고, 실제 픽업은 전국 가맹점 중 하나에서 한다. 가맹 안경점은 특별한 회비나 수수료는 내지 않고, 옵틱라이프가 구매 건당 이들에게 수수료를 지급한다.\n콘택트렌즈의 온라인 판매가 불법인 이유는 렌즈가 각막에 직접 접촉하는 의료기기로 분류되어서, 잘 못 사용 시 시력 저하나 감염 등의 위험이 있으므로 대면 판매를 통해 사용법 안내와 건강 상태 확인이 필요하다는 것이다. 이 규제의 취지는 잘 이해하지만, 국민 건강을 너무 과하게 강조하는 반면, 소비자의 편의성과 선택권은 너무 과하게 무시한다는 점에서는 반드시 바뀌어야 하는 법이라고 생각한다. 그리고, 이보다 더 불평등하다고 생각하는 점은, 이 법은 국민들의 건강보단, 대한안경사협회라는 특정 단체의 권익을 보호하기 위한 법이라는 것이다. 물론, 이건 내 개인적인 생각일 수도 있지만, 안경사협회 회원 5만여 명을 제외한 다른 사람들은 대부분 나와 비슷한 생각을 하는 걸 보면, 내 생각이 맞는 것 같다.\n어쨌든, 이런 법이 있기 때문에, 온라인으로 더 좋고, 더 다양하고, 더 저렴한 콘택트렌즈를 중간상인 없이 고객에게 직접 판매하려고 하는 스타트업들은 위에서 설명했던, 가맹점에서 렌즈를 픽업하는 복잡한 사업을 하고 있다. 실은, 이 모델을 좋아하는 안경사들도 상당히 많다. 안 그래도 오프라인 안경사의 트래픽과 매출이 점점 더 줄어들고 있는데, 픽업 서비스를 통해서 수수료 매출이 발생하기도 하고, 렌즈를 픽업하기 위해서 매장을 방문하는 고객들은 안경이나 다른 제품들을 구매할 확률이 있기 때문에 지속적인 추가 매출이 발생하기 때문이다. 솔직히 나는 이런 모델은 서로에게 유익한, 상생할 수 있는 비즈니스 모델이라고 생각했다.\n그런데 최근에 안경사협회가 렌즈 픽업 서비스를 하는 스타트업 몇 곳을 의료기사법 위반으로 고발했다. 여기에다 안경사협회 회원사 중 픽업 네트워크에 가맹한 안경원에 내용증명도 보내고, 계속 이 네트워크에 가입해 있으면 안경사 면허정지까지 실시하기로 했다고 한다.\n굳이 이렇게까지 할 필요가 있을까? 안경사협회는 국민 눈 건강을 위한 특단의 조치라고 하는데, 내가 보기엔 이들은 국민 눈 건강 걱정은 별로 안 한다. 그런 사람들이 안경원을 방문할 때마다 더 저렴하고 좋은 제품도 있는데, 무조건 비싼 제품을 불투명한 가격에 판매할 리가 없다. 이들은 국민 눈 건강 때문이 아니라, 쿠팡이 이마트 같은 오프라인 유통업체를 무력화했듯이, 새파란 스타트업에 잠식돼 이들의 렌즈 보관함으로 전락하는 걸 훨씬 더 우려한다. 즉, 오랫동안 스스로 노력도 안 하고, 변화하지 않아도 아주 단단했던 철밥그릇을 빼앗길까 봐 이런 싸움을 하는 것이다.\n여기서 가장 피해를 보는 건, 옵틱라이프와 같은 스타트업이 아니라. 바로 콘택트렌즈가 필요한 국민들이다. 온라인 플랫폼에서 선택하고, 안경원에서 픽업한 렌즈를 착용해서 각막이 손실되거나 눈 건강을 잃었다는 소비자는 거의 없는 것 같은데, 국민 눈 건강을 운운하면서 이런 서비스들을 다 막아버리면, 결국엔 소비자들이 오프라인 안경원에서 한정된 종류의 제품을 훨씬 더 비싼 가격에 구매할 수밖에 없다. 이렇게 되면 이건 안경사협회가 소비자의 권리를 침해한다고 주장할 수도 있는데, 이런 건 이분들이 어떻게 생각하는지 잘 모르겠다.\n전에 타다에 대한 글을 내가 꽤 많이 썼는데, 그때와 비슷한 생각이 든다. 도대체 누구를 위한 법이고, 누구를 위한 규제인지 잘 모르겠다. 이 산업을 자세히 보면, 한국에서 온라인 안경/콘택트렌즈 유니콘이 아직 안 나온 가장 큰 이유는 이런 규제 때문인 것 같은데, 이들도 세월의 흐름을 평생 막을 순 없을 것이다. 시간이 걸리더라도 법이나 규제는 다수의 국민과 소비자들의 편의를 위한 방향으로 수정될 것이고, 결국 법이 바뀌면, 기존 안경사들은 많이 망할 것이다.\n전 세계 그 어떤 나라에서도, 회사나 단체의 해자가 규제라면, 그리고 규제가 그 유일한 진입장벽이라면, 이런 조직들은 오래가지 못하고, 규제가 없어지는 그 순간에 단숨에 쓰러진다. 내가 이들이었다면, 소송에 시간과 에너지 낭비하지 말고, 그냥 자신의 체질 개선에 사활을 걸겠다. 왜냐하면, 소송에 이기든 지든 결국 세상은 바뀔 것이다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/06/losers-will-be-losers.html#respond",
        "content": "우리가 투자한 회사 중 콘택트렌즈 사업을 하는 옵틱라이프라는 곳이 있다. 이 회사는 본인들이 직접 콘택트렌즈를 제조하고, 다른 회사의 제품 또한 유통하고 있는데, 한국은 콘택트렌즈의 온라인 판매가 법으로 금지되어 있어서, 옵틱라이프에서 고객이 원하는 렌즈에 대한 결제를 하고, 실제 픽업은 전국 가맹점 중 하나에서 한다. 가맹 안경점은 특별한 회비나 수수료는 내지 않고, 옵틱라이프가 구매 건당 이들에게 수수료를(...)",
        "contentSnippet": "우리가 투자한 회사 중 콘택트렌즈 사업을 하는 옵틱라이프라는 곳이 있다. 이 회사는 본인들이 직접 콘택트렌즈를 제조하고, 다른 회사의 제품 또한 유통하고 있는데, 한국은 콘택트렌즈의 온라인 판매가 법으로 금지되어 있어서, 옵틱라이프에서 고객이 원하는 렌즈에 대한 결제를 하고, 실제 픽업은 전국 가맹점 중 하나에서 한다. 가맹 안경점은 특별한 회비나 수수료는 내지 않고, 옵틱라이프가 구매 건당 이들에게 수수료를(...)",
        "guid": "https://www.thestartupbible.com/?p=9458",
        "categories": [
          "Uncategorized",
          "B2C",
          "FoundersAtWork",
          "healthcare",
          "internet",
          "korea",
          "regulation",
          "Strong"
        ],
        "isoDate": "2025-06-01T21:33:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "일본의 1940년 체제. 한국은?",
        "link": "https://www.thestartupbible.com/2025/05/is-korea-okay.html",
        "pubDate": "Wed, 28 May 2025 21:37:00 +0000",
        "content:encodedSnippet": "올해 내가 한국의 직장인 분들은 모두 더 열심히 일해야 한다는 글을 여러 번 썼다. 예상친 못했지만, 이 주제가 상당히 민감한 주제이고, 몇몇 포스팅에는 엄청나게 많은 댓글이 달렸다. 댓글 다신 어떤 분이 ‘1940년 체제’라는 책을 추천해서 꽤 흥미롭게 읽었고, 나도 이 책에서 뭔가 배우고 참고할 만한 점들이 있는 것 같아서 내 생각을 여기서 그냥 특별한 흐름이나 순서 없이 적어본다.\n일단 이 책의 제목과 부제는 ‘1940년 체제 (일본 전후 경제사의 멍에를 해부하다)’ 이고 저자인 노구치 유키오는 일본에서는 꽤 유명한 분이라는 걸 주변 일본 친구들을 통해서 확인했다. 경제학자, 교수, 그리고 일본 재무성에서도 일했던 분인데, 반골 엘리트 기질이 상당히 강한 분이라서 이분을 열렬히 옹호하는 분들도 많지만, 죽도록 싫어하는 분들도 많다. 내가 일본이라는 나라를 잘 몰라서 요목조목 따질 순 없지만, 이 책의 전반적인 내용은 한 때 최강국이었던 일본이 왜 요새 이렇게 힘을 못 쓰는지에 대한 저자의 개인적인 분석이다. 이걸 꽤 재미있게, 그리고 설득력 있게 설명했다. 일본이 1980년대에는 전 세계에서 가장 잘 사는 나라였는데 – 나도 이 정도인 줄은 몰랐지만, 당시에 미국보다 더 잘 살았고, 일본 대학교수가 미국 대학교수보다 연봉이 높았다고 한다 – 그 영광은 오래 못 갔고, 오히려 지금은 30년~40년을 잃어버린 “이미 끝난” 나라라는 비난을 받는데, 그 원인은 2차 세계대전을 준비하기 위해 만들어진 1940년 체제 때문이라고 한다.\n한 권의 두꺼운 책으로 설명되는 1940년 체제를 간략하게 요약하는 건 힘들지만, 이 체제는 전쟁을 준비하기 위해 일본 정부가 만든 강력한 중앙집권화 체제이다. 이 시스템이 만들어낸 대표적인 제도가 종신고용과 연공서열이며, 이 제도가 전후에도 그대로 이어지면서 궁극적으론 일본 경제의 침체로 이어졌다는 상당히 설득력 있는 책이다. 우리나라도 많은 제도와 시스템을 일본으로부터 가져왔는데, 이 종신고용과 연공서열 제도는 그대로 한국으로 수입됐다. 그리고 이건 이 책을 보고 느낀 내 생각인데, 일본에서 그랬듯이, 한국에서도 초반에는 이 제도가 경제의 고속 성장을 이뤘지만, 한국이 경제적 후발주자에서 선발주자가 된 이 시점에선, 더 이상 성장 동력을 제공하기보단, 오히려 침체의 원인이 되는 것 같다.\n이런 제도가 그동안 몇 차례 변형되면서 만들어진 게 사람을 쉽게 해고할 수 없는 경직된 노동 시스템, 무능력한 직원도 자리에서 오래 버티면 자동으로 승진하는 시스템, 그리고 싫든 좋든 지켜야 하는 52시간 근무 제도이다. 이것도 모자라서, 어떤 분들은 주 4일제 근무를 주장하고 있는데, 이런 분들은 이 블로그 독자가 나에게 권장했듯이, 나도 이분들에게 1940년 체제를 꼭 읽어보라고 권장하고 싶다.\n이제 한국은 강대국의 대열에 들어왔다. 자국이 잘 살고, 다른 나라 사람들에게 문화적으로 영향력을 미치는 힘 있는 나라가 된 걸 누가 싫어하겠는가? 하지만, 이 유리한 위치를 우리가 오랫동안 지키고 싶다면, 나라의 성장에 방해되는 오래된 시스템은 빨리 없애야 한다고 생각한다. 다른 분들은 어떤 생각을 할지 모르겠지만, 나는 한국이 인당 GDP 5만 달러의 시대에 최대한 빨리 도달하고, 더 나아가서는 미국을 넘어 10만 달러의 초강국이 되길 정말 간절히 바란다.\n개개인들은 아무것도 안 하고, 국가만 뭔가를 해주길 기다리면 절대로 그날이 오지 않을 것이다. 우리 모두 개 같이 노력하고, 개 같이 일해야 한다. 그리고 이렇게 개 같이 노력하는 걸 막는 법과 제도는 없어져야 한다고 생각한다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/05/is-korea-okay.html#comments",
        "content": "올해 내가 한국의 직장인 분들은 모두 더 열심히 일해야 한다는 글을 여러 번 썼다. 예상친 못했지만, 이 주제가 상당히 민감한 주제이고, 몇몇 포스팅에는 엄청나게 많은 댓글이 달렸다. 댓글 다신 어떤 분이 ‘1940년 체제’라는 책을 추천해서 꽤 흥미롭게 읽었고, 나도 이 책에서 뭔가 배우고 참고할 만한 점들이 있는 것 같아서 내 생각을 여기서 그냥 특별한 흐름이나(...)",
        "contentSnippet": "올해 내가 한국의 직장인 분들은 모두 더 열심히 일해야 한다는 글을 여러 번 썼다. 예상친 못했지만, 이 주제가 상당히 민감한 주제이고, 몇몇 포스팅에는 엄청나게 많은 댓글이 달렸다. 댓글 다신 어떤 분이 ‘1940년 체제’라는 책을 추천해서 꽤 흥미롭게 읽었고, 나도 이 책에서 뭔가 배우고 참고할 만한 점들이 있는 것 같아서 내 생각을 여기서 그냥 특별한 흐름이나(...)",
        "guid": "https://www.thestartupbible.com/?p=9455",
        "categories": [
          "Uncategorized",
          "FoundersAtWork",
          "korea"
        ],
        "isoDate": "2025-05-28T21:37:00.000Z"
      }
    ]
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": [
      {
        "creator": "kimchihill",
        "title": "Looking Back on the Past 10 Years",
        "link": "https://kimchihill.com/2025/05/30/looking-back-on-the-past-10-years/?utm_source=rss&utm_medium=rss&utm_campaign=looking-back-on-the-past-10-years",
        "pubDate": "Fri, 30 May 2025 04:45:09 +0000",
        "content:encodedSnippet": "Today marks exactly 10 years since I joined Sendbird.\nOn May 30, 2015, I still remember walking into Maru180, a co-working space in Yeoksam, Seoul, plugging in my personal laptop, and getting to work. I wrote our very first company deck under the name “Jiver,” and we wrapped up the day with a small welcome dinner at a local chicken joint called “Hwadeok.” It feels like it all happened just yesterday.\nLooking back, if my younger self had known everything this journey would demand, I might have hesitated to take the leap into startups. Growth always comes at a cost, and sometimes, that cost felt too steep. There were tough goodbyes with teammates I thought I’d work with forever, long stretches away from family, countless sleepless nights, overwhelming schedules, demanding customers, and the emotional ups and downs that come with building something alongside people you care about.\nAnd yet, despite it all, I would still choose Sendbird.\nAt the time, I thought we’d go public in five years, become successful, and each move on to our next adventure. But over time, I came to realize that this wasn’t just a stepping stone. For me, Sendbird has become the once-in-a-lifetime ‘masterpiece’ I get to help build. One heartfelt challenge means more than a series of wins that don’t move you.\nWhat I’m most grateful for is the people I’ve met along the way.\nJohn, Joe, Forest, and Brandon, these aren’t just colleagues, but lifelong friends. Relationships like these are rare, and I treasure them deeply.\nI thought I’d be spending today surrounded by coworkers, receiving congratulations. Ironically, I’m on vacation for the first time in a long while, quietly spending time with my family at a resort. The loneliness I often carried with me since childhood has begun to fade, or maybe I’ve simply learned to live with it more peacefully. In either case, I’ve come to better understand what fulfilling relationships really feel like.\nNot everything in my life is perfect, career achievements, where I stand in the company, personal relationships, or family. But all of these things influence one another and find their own kind of balance. And in that balance, I find peace and contentment.\nThe past decade was a fierce battle in a niche space called chat APIs, so niche that even analysts didn’t pay attention to it. But what we’ve built here is meaningful. Now, we’re stepping into a new decade, this time in the broader, fast-evolving space of AI agents.\nTen years from now, I hope Sendbird will be a name we can proudly share in any market, with any customer, anywhere in the world. And I hope my journey here offers even a little courage or inspiration to someone else starting out.\nThe post Looking Back on the Past 10 Years appeared first on Kimchi hill.",
        "dc:creator": "kimchihill",
        "comments": "https://kimchihill.com/2025/05/30/looking-back-on-the-past-10-years/#respond",
        "content": "<p>Today marks exactly 10 years since I joined Sendbird. On May 30, 2015, I still remember walking into Maru180, a co-working space in Yeoksam, Seoul, plugging in my personal laptop, and getting to work. I wrote our very first company deck under the name “Jiver,” and we wrapped up the day with a small welcome<a class=\"more-link\" href=\"https://kimchihill.com/2025/05/30/looking-back-on-the-past-10-years/\">Continue reading <span class=\"screen-reader-text\">\"Looking Back on the Past 10 Years\"</span></a></p>\nThe post <a href=\"https://kimchihill.com/2025/05/30/looking-back-on-the-past-10-years/\">Looking Back on the Past 10 Years</a> appeared first on <a href=\"https://kimchihill.com\">Kimchi hill</a>.",
        "contentSnippet": "Today marks exactly 10 years since I joined Sendbird. On May 30, 2015, I still remember walking into Maru180, a co-working space in Yeoksam, Seoul, plugging in my personal laptop, and getting to work. I wrote our very first company deck under the name “Jiver,” and we wrapped up the day with a small welcomeContinue reading \"Looking Back on the Past 10 Years\"\nLooking Back on the Past 10 Years appeared first on Kimchi hill.",
        "guid": "https://kimchihill.com/?p=2863",
        "categories": [
          "Korean essay"
        ],
        "isoDate": "2025-05-30T04:45:09.000Z"
      },
      {
        "creator": "kimchihill",
        "title": "지난 10년을 회고하며",
        "link": "https://kimchihill.com/2025/05/30/kr-looking-back-on-the-past-10-years/?utm_source=rss&utm_medium=rss&utm_campaign=kr-looking-back-on-the-past-10-years",
        "pubDate": "Fri, 30 May 2025 04:34:54 +0000",
        "content:encodedSnippet": "오늘은 제가 센드버드에 입사한 지 정확히 10년이 되는 날입니다.\n10년 전 오늘, 2015년 5월 30일, 역삼동의 스타트업 공간 마루180에서 제 개인 노트북을 연결해 첫 업무를 시작했던 기억이 생생합니다. ‘자이버’라는 이름으로 사업 소개서를 만들고, 저녁에는 ‘화덕’이라는 치킨집에서 환영회를 했던 풍경도 아직 떠오릅니다.\n돌아보면, 만약 지금까지 해야만 했던 경험들을 10년 전의 제가 미리 알았더라면, 스타트업이라는 선택 자체를 망설였을지도 모르겠습니다. 성장은 언제나 값비싼 대가를 요구했고, 때로는 그 대가가 너무 커서 다시는 겪고 싶지 않다고 느낀 순간들도 많았습니다. 동료와의 이별, 가족과의 긴 공백, 셀 수 없는 밤샘 작업, 감당하기 버거운 일정과 고객의 요구사항, 동료들과의 갈등 등은 그 자체로 쉽지 않은 시간이었습니다.\n하지만, 결국은 다른 스타트업이 아닌 ‘센드버드’의 특별함이 있기에 10년전에도 같은 선택을 했을 것 같습니다. 당시에는 5년쯤 지나 이 회사가 상장하고, 모두가 부자가 되어 각자의 다음 여정을 준비할 것이라 기대했지만, 이제는 그보다 더 깊은 의미를 찾게 되었습니다. 센드버드는 저에게 인생에 단 한 번 만들 수 있는 ‘역작’과 같은 존재가 되었고, 여러 개의 성공보다 한 번의 진심 어린 도전이 더 값지게 느껴집니다.\n무엇보다도 이 여정 속에서 소중한 사람들을 만나게 된 것에 감사함을 느낍니다. John, Joe, Forest, Brandon과 같은 동료들은 직장을 넘어 제 인생에서 중요한 관계로 자리 잡았습니다.\n오늘은 축하를 받으며 동료들과 보내는 날일 거라 예상했지만, 아이러니하게도 지금은 오랜만에 가족과 함께 조용한 리조트에서 휴가를 보내고 있습니다. 어렸을 때 자주 느끼던 외로움의 정서가 조금씩 옅어졌고 (혹은 어떤 의미로는 외로움과 벗삼아 잘 지내게 되었고), 관계의 충만함이 어떤 것인지 새삼 느끼고 있습니다. 비록 지금의 사업적 성과, 제 위치, 인간관계, 가족의 모든 부분이 완벽하지는 않더라도, 서로 영향을 주고받으며 균형을 이루고 있기에 지금의 삶에 충분한 만족을 느낍니다.\n지난 10년은 채팅 API라는 한정된 시장에서의 치열한 도전이었습니다. 그간 애널리스트 리포트조차 주목하지 않던 이 시장에서 우리가 일궈낸 성과는 분명 의미가 있습니다. 이제는 AI 에이전트라는 더 넓은 시장에서 새로운 10년을 시작하려 합니다.\n10년 뒤, 전 세계 어느 시장, 누구와 마주하더라도 당당히 이야기할 수 있는 기업으로 센드버드가 성장해 있기를 기대합니다. 그리고 그 안에서의 제 여정 또한 누군가에게 용기와 영감을 줄 수 있기를 바랍니다. \nThe post 지난 10년을 회고하며 appeared first on Kimchi hill.",
        "dc:creator": "kimchihill",
        "comments": "https://kimchihill.com/2025/05/30/kr-looking-back-on-the-past-10-years/#respond",
        "content": "<p>오늘은 제가 센드버드에 입사한 지 정확히 10년이 되는 날입니다.10년 전 오늘, 2015년 5월 30일, 역삼동의 스타트업 공간 마루180에서 제 개인 노트북을 연결해 첫 업무를 시작했던 기억이 생생합니다. ‘자이버’라는 이름으로 사업 소개서를 만들고, 저녁에는 ‘화덕’이라는 치킨집에서 환영회를 했던 풍경도 아직 떠오릅니다. 돌아보면, 만약 지금까지 해야만 했던 경험들을 10년 전의 제가 미리 알았더라면, 스타트업이라는 선택 자체를 망설였을지도<a class=\"more-link\" href=\"https://kimchihill.com/2025/05/30/kr-looking-back-on-the-past-10-years/\">Continue reading <span class=\"screen-reader-text\">\"지난 10년을 회고하며\"</span></a></p>\nThe post <a href=\"https://kimchihill.com/2025/05/30/kr-looking-back-on-the-past-10-years/\">지난 10년을 회고하며</a> appeared first on <a href=\"https://kimchihill.com\">Kimchi hill</a>.",
        "contentSnippet": "오늘은 제가 센드버드에 입사한 지 정확히 10년이 되는 날입니다.10년 전 오늘, 2015년 5월 30일, 역삼동의 스타트업 공간 마루180에서 제 개인 노트북을 연결해 첫 업무를 시작했던 기억이 생생합니다. ‘자이버’라는 이름으로 사업 소개서를 만들고, 저녁에는 ‘화덕’이라는 치킨집에서 환영회를 했던 풍경도 아직 떠오릅니다. 돌아보면, 만약 지금까지 해야만 했던 경험들을 10년 전의 제가 미리 알았더라면, 스타트업이라는 선택 자체를 망설였을지도Continue reading \"지난 10년을 회고하며\"\n지난 10년을 회고하며 appeared first on Kimchi hill.",
        "guid": "https://kimchihill.com/?p=2850",
        "categories": [
          "Korean essay"
        ],
        "isoDate": "2025-05-30T04:34:54.000Z"
      }
    ]
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "주택 임대차 계약 신고제, 임차인의 권리 보호가 더 간편해져요",
        "link": "https://toss.im/tossfeed/article/36981",
        "pubDate": "Thu, 29 May 2025 23:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}\n.css-1kxrhf3{white-space:pre-wrap;}오는 6월 1일부터 주택 임대차 계약 신고제가 본격 시행돼요. 주택 임대차 계약을 체결했다면 .css-1swx3yz{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;font-weight:bold;}30일 이내 신고가 의무이고, 이를 어길 경우 최대 30만 원의 과태료가 부과되는데요. 그렇다면 이 제도는 무엇이고, 우리에게 어떤 변화가 생길까요?\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n주택 임대차 계약이란?\n주택 임대차 계약은 한 사람은 돈을 받고 집을 빌려주고(임대) 다른 사람은 그 집에 일정 기간 동안 살면서 보증금이나 월세를 내기로 약속하는(임차) 계약이 맺어지는 것을 말해요. 흔히 말하는 월세, 전세, 반전세 계약이 바로 이에 해당해요.\n주택 임대차 계약 신고제란?\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n주택 임대차 계약 신고제란, 간단히 말해 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}집을 임대·임차하는 계약이 이뤄졌을 때 이 내용을 지방자치단체에 반드시 신고하도록 한 제도에요. \n이전에는 확정일자* 도장을 받아야 보증금이나 임차인의 권리를 보호받을 수 있었어요. 혹시나 나중에 채무 문제로 집주인이 바뀌거나 집이 압류되는 경우를 대비해, 임차인이 임대차 계약서를 가지고 가까운 주민센터나 등기소에서 꼭 확정일자 도장을 받아야 했죠.\n주택 임대차 계약 신고제가 시행되면 그럴 필요 없이 임차인이 계약 내용만 지자체에 신고해도 .css-q3ktjb{white-space:pre-wrap;font-weight:bold;}자동으로 확정일자 기능이 부여돼요.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}*전월세를 계약할 때 ‘이 임대차 계약이 해당 날짜에 실제로 체결됐다’는 사실을 국가가 공식적으로 인정하고 증명해주는 제도\n무엇이 달라지나요?\n먼저 부동산 시장이 더욱 투명해질 것이라는 기대가 높아요. 임대차 계약 당사자가 계약 내용을 신고하면 임대차의 가격, 기간, 갱신율 같은 시장 정보가 공개될 수 있으니까요. 이를 통해 불법 계약이나 편법을 미리 차단할 수 있는 효과도 있을 것으로 예상돼요. \n또한 전월세 시세가 투명해질 수 있어요. 빌라나 원룸처럼 시세 파악이 어려운 주택의 전월세 실거래 정보가 공개되면 사기피해나 깜깜이 분양 문제가 상당 부분 해소될 것이란 기대가 커요.\n임차인의 권리 보호가 강화될 것이란 전망도 나와요. 계약이 공식적으로 기록되면 이후에 생길 분쟁에서도 중요한 증거자료로 활용될 수 있거든요.\n반면 신고 누락이나 위반 여부를 단속하는 것이 쉽지 않을 수 있다는 우려의 목소리도 있어요. 실효성을 확보하기 위해 현장 단속과 홍보 강화가 중요해 보입니다.\n\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\nQ&A\n\n\nQ. 6월 1일 이후에 갱신계약을 했다면 이것도 신고해야 하나요?\n임대료가 바뀌지 않았다면 신고하지 않아도 돼요. 반대로 임대료가 달라졌다면 계약 체결일로부터 30일 이내에 신고해야 해요.\nQ.지난 1월에 맺은 임대차 계약을 지금 신고하면 과태료를 내야 하나요?\n내지 않아도 돼요. 계도 기간(5월 31일까지)에 체결한 계약에 대해선 과태료를 받지 않으니까요. 6월 1일 이후 맺은 계약부터 신고를 안 할 경우 과태료를 내야해요.\nQ. 법원이나 등기소에서 확정일자를 받아도 임대차 신고를 따로 해야 하나요?\n확정일자만 먼저 받은 경우에는 임대차 신고를 따로 해야 해요. 반대로 임대차 신고할 때 계약서를 제출하면 확정일자가 자동으로 부여되고 ‘임대차계약신고필증’을 받을 때 확정일자 번호도 표기돼 확정일자 부여 신청을 따로 하지 않아도 돼요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 권민지 이지영 Graphic 최서윤 이제현",
        "content": "모르고 놓친다면 이제부터 과태료를 내야해요",
        "contentSnippet": "모르고 놓친다면 이제부터 과태료를 내야해요",
        "guid": "https://toss.im/tossfeed/article/36981",
        "isoDate": "2025-05-29T23:00:00.000Z"
      },
      {
        "title": "내가 만든 적 없는 금융상품? 자산 보호 알림 설정하세요",
        "link": "https://toss.im/tossfeed/article/toss-guide-safety2",
        "pubDate": "Thu, 29 May 2025 03:23:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}피싱, 해킹, 명의 도용으로 인한 금융상품 피해가 점점 교묘해지고 있어 “내 이름으로 금융 계좌나 카드가 개설된 건 아닌지” 걱정하시는 분들이 많습니다. 이런 사고를 방지하기 위해 토스에서 ‘자산 보호 알림’ 서비스를 새롭게 선보입니다. \n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n자산 보호 알림 서비스란?\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}본인 명의로 새로운 금융상품이 개설되었을 때 알림을 보내주는 서비스예요. 예적금·대출 계좌, 신용·체크카드 등 새롭게 생긴 자산을 매일 확인할 수 있어요.\n내가 개설하지 않은 금융상품이 조회되면, 해당 금융기관에 거래 정지 요청, 경찰서나 금융감독원에 신고, 통신사 소액결제 차단, 추가 명의 보호 조치 등 피해 확산을 막기 위한 방법도 함께 안내합니다.\n토스 자산 보호 알림 설정 방법\n(1) 토스 앱을 실행하고, 하단 메뉴에서 [전체]를 누른 뒤 ‘자산 보호 알림’을 검색하세요.\n(2) ’동의하고 알림받기’를 클릭하면 마이데이터에 연결된 금융기관의 정보를 기반으로 알림 신청이 완료됩니다.\n(3) 기존에 연결한 금융사 외에 다른 금융사도 추가로 연결하고 조회할 수 있어요. \n(4) 만약 신규 금융상품이 발견되면, 앱 접속 시에는 1일 1회 알림을, 미접속 시에도 주 1회 알림을 받습니다.\n(5) 소중한 사람들에게도 자산 보호 알림을 알려주세요. 작은 관심이 개인정보 보호에 큰 도움이 됩니다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n자주 묻는 질문 \n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}Q. 자산 보호 알림을 받으려면 마이데이터 동의가 필요한가요?\n→ 네. 자산 보호 알림은 마이데이터 기반 서비스로, 처음 한 번은 동의가 필요해요.\nQ. 어떤 금융상품까지 확인할 수 있나요?\n→ 은행 예적금, 대출 계좌, 신용카드, 체크카드 등 대부분의 주요 금융상품을 포함합니다.\n\n나도 모르는 새 내 명의의 금융상품이 개설될까봐 걱정된다면, 지금 바로 토스 ‘자산 보호 알림’ 서비스를 시작해보세요. 하루 한 번, 자동으로 확인하고 알림받을 수 있어 명의 도용 피해를 조기에 막을 수 있습니다. 토스 앱에서 ‘자산 보호 알림’ 검색 후 바로 설정해보세요.",
        "content": "내 명의 금융상품 매일 점검하고, 앱 접속 안 해도 알림 받는 법",
        "contentSnippet": "내 명의 금융상품 매일 점검하고, 앱 접속 안 해도 알림 받는 법",
        "guid": "https://toss.im/tossfeed/article/toss-guide-safety2",
        "isoDate": "2025-05-29T03:23:00.000Z"
      },
      {
        "title": "토스애즈 에이전시 초청 컨퍼런스 ‘블루원더랜드’ 개최",
        "link": "https://toss.im/tossfeed/article/tossadsblue",
        "pubDate": "Thu, 29 May 2025 02:40:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}올해로 3회째 맞은 행사에 약 300명 광고 업계 관계자 참여…전년 대비 2배 규모로 확대\n토스애즈와 에이전시 간 전략 및 협업 사례 공유 시간 마련해\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 자사 광고 서비스 ‘토스애즈(Toss Ads)’의 주요 파트너 에이전시를 초청한 컨퍼런스 ‘블루원더랜드(Blue Wonderland)’를 성황리에 마무리했다고 29일 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n‘블루원더랜드’는 토스애즈와 주요 에이전시 간의 전략과 협업 사례를 공유하는 대규모 네트워킹 행사로, 올해 3회째를 맞았다. 이번 행사는 지난 반년간 함께한 파트너 에이전시들의 노고에 감사를 전하고, 파트너십 강화를 위해 마련했다. 2024년 4월 첫 개최 이후부터 큰 호응을 얻어온 본 행사는, 올해 약 300명의 광고 업계 관계자들이 참석했고 전년 대비 두 배 이상 규모로 확대됐다.\n\n이번 행사는 5월 28일 서울 중구 크레스트72에서 열렸으며, 나스미디어, 메조미디어, 인크로스 등 약 50개 에이전시가 참석했다. 토스 김규하 최고사업책임자, 김형빈 광고사업총괄, 최선화 광고사업부문장 등이 연사로 나서 토스애즈의 비전과 성장 전략, 그리고 향후 광고 시장에서의 포지셔닝 방향을 직접 공유했다.\n\n김규하 최고사업책임자는 “토스애즈는 토스 내에서 가장 빠르게 성장 중인 사업 중 하나”라며, 토스애즈가 지향하는 사용자 행동 데이터 기반 광고 전략 차별화에 대해 설명했다. 이어 김형빈 광고사업총괄은 플랫폼의 성장 여정과 전략 미디어로의 진화 과정, 그리고 에이전시와의 소통 및 신뢰 구축을 중점으로 설명했다.\n실제 협업 성과로는, 더블랙레이블 소속 엔터테인먼트 관계자가 K-POP 걸그룹 ‘MEOVV’의 컴백 캠페인 사례를 발표했다. 고양이 키워드, 10대 타깃 등을 중심으로 기획된 본 캠페인은, 토스 퍼스트파티 데이터를 기반으로 한 정밀 타깃팅을 통해 기존 지면 중심 캠페인 대비 높은 참여율과 전환율을 기록했다.\n또한, 즉문즉답 세션, 타깃팅 게임 등 에이전시 실무자들이 직접 참여할 수 있는 다양한 프로그램을 구성해 토스애즈의 핵심 기능과 광고 제품 로드맵을 보다 직관적으로 이해할 수 있도록 했다. 아울러 현장에서는 각사 실무진 간의 경험 공유와 네트워킹이 활발히 이루어지며 협업 기반을 다지는 계기가 되었다.\n행사에 참여한 한 에이전시 관계자는 “블루원더랜드를 통해 토스애즈의 광고 플랫폼이 어떻게 설계되고 운영되는지 보다 명확하게 이해할 수 있었다”며 “다양한 에이전시 간의 교류를 통해 새로운 인사이트도 얻을 수 있는 유익한 시간이었다”고 소감을 전했다.\n토스 관계자는 “토스가 광고사업을 본격적으로 시작한지 약 2년 반 만에 빠르게 성장하고 있다”며 “앞으로도 파트너들과의 긴밀한 협업을 통해 보다 혁신적인 광고 경험을 제공하기 위해 노력할 것”이라고 밝혔다.",
        "content": "토스애즈와 에이전시 간 전략 및 협업 사례 공유 시간 마련",
        "contentSnippet": "토스애즈와 에이전시 간 전략 및 협업 사례 공유 시간 마련",
        "guid": "https://toss.im/tossfeed/article/tossadsblue",
        "isoDate": "2025-05-29T02:40:00.000Z"
      },
      {
        "title": "토스, 시각장애인 대상 맞춤형 금융교육 실시",
        "link": "https://toss.im/tossfeed/article/financialedu",
        "pubDate": "Thu, 29 May 2025 02:36:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}‘자산 관리’부터 ‘보험 증권 분석’까지…전문 강사가 나서 체험 기반 금융교육 실시\n“포용적 금융 환경 조성에 힘쓸 것”...맞춤형 커리큘럼 설계·지속 가능한 활동 약속\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 27일 서울 강동구에 위치한 한국시각장애인복지관에서 시각장애인을 대상으로 맞춤형 금융교육을 실시했다고 29일 밝혔다. 강사로는 토스의 비대면 상담 전문 계열사 토스씨엑스(대표 강희진) 소속인 금융교육 전문가들이 나섰다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n이번 교육은 한국시각장애인복지관(관장 백남식)과 협력해 시각장애인에게 실생활에 유용한 금융 지식을 전달하기 위해 마련됐다. 지난 4월 처음 시작된 이 교육 프로그램은 청소년 및 청장년 시각장애인을 대상으로 내달 초까지 총 아홉 차례에 걸쳐 운영된다.\n\n기존의 시각장애인 대상 경제교육은 안마사 등 특정 직업 활동에만 국한되어 있어, 일상과 밀접한 맞춤형 금융교육의 기회가 부족했다. 이에 토스는 시각장애인의 금융 이해도와 재정 관리 능력 향상을 목표로 이번 프로그램을 기획했다.\n\n토스는 지난해 초부터 자립준비청년 및 보호시설 아동 등을 대상으로 맞춤형 금융교육을 진행 중이다. 서울시, 청년재단 등과도 업무협약(MOU)을 체결하고 경계선지능인을 위한 금융교육을 지원한다. 교육에서는 토스가 만든 금융생활안내서인 '더 머니북' 등을 활용해 ▲예산 관리 ▲소비 습관 점검 ▲저축 및 투자 기초 등 실생활에 즉시 적용 가능한 금융 지식을 전달하고 있다.\n특히 이번 회차에는 법인보험대리점(GA) 토스인슈어런스 교육팀 직원들이 강사로 특별히 참여해 교육 내용을 더욱 풍성하게 채웠다. 이들 보험 교육 전문가들은 ▲보험료 절감 방법 ▲보험 기초이해 ▲보험 보장분석 등 평소 시각장애인이 접하기 어려웠던 보험 관련 내용을 중점적으로 설명했다.\n교육에 참석한 한 시각장애인은 “공감 기반의 설명 덕분에 이해가 더욱 쉬웠고, 강사의 세심한 배려 또한 인상 깊었다”며 “평소 어렵게 느껴졌던 자산관리 및 보험계약과 관련한 정보를 얻을 수 있어 정말 유익했다”고 교육에 참석한 소감을 밝혔다.\n토스는 앞으로도 시각장애인을 위한 지속 가능한 금융교육 프로그램을 수립해 금융 소외 계층의 자립을 지원하고 포용적 금융 환경 조성에 힘쓸 계획이다. 이를 위해 맞춤형 커리큘럼을 설계하고 토스앱 접근성 개선 의견도 적극 수렴하는 등 서비스 접근성 향상에 적극 나선다는 방침을 수립했다.\n토스 관계자는 “시각장애인을 포함한 모든 금융 소외 계층에게 실질적인 도움이 되는 것이 본 활동의 목적”이라며 “금융 사각지대를 밝히고 모두가 함께 성장하는 금융 생태계를 조성하는데 진정성 있는 노력을 다할 것”이라고 덧붙였다.\n한국시각장애인복지관 금융교실 담당자는 “이번 교육은 시각장애인의 자립적인 금융생활을 돕기 위한 뜻깊은 자리”라며 “토스와의 협력이 금융 이해와 접근성 향상에 큰 도움이 되고 있다\"고 밝혔다.\n한편, 토스는 지난해 12월 ‘더 머니북’의 수익금 1억 원을 한국시각장애인복지관에 기부한 바 있다. 당시 토스는 시각장애인을 위한 디지털 리터러시 교육, 정보화기기 체험 공간 조성, 맞춤형 금융교육 등 다양한 프로그램을 추진하겠다고 약속했다.",
        "content": "자산 관리’부터 ‘보험 증권 분석’까지 체험 기반 금융교육 실시",
        "contentSnippet": "자산 관리’부터 ‘보험 증권 분석’까지 체험 기반 금융교육 실시",
        "guid": "https://toss.im/tossfeed/article/financialedu",
        "isoDate": "2025-05-29T02:36:00.000Z"
      },
      {
        "title": "결국 마음이 머무는 곳에 시장이 생긴다",
        "link": "https://toss.im/tossfeed/article/fandustry-06",
        "pubDate": "Wed, 28 May 2025 08:39:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}2025년 초, 유니버설뮤직그룹(UMG: Universal Music Group)*은 ‘스트리밍 2.0’을 선언했다. 스트리밍 2.0이란 좋아하는 아티스트의 독점 콘텐츠에 더 많은 비용을 지불할 의향이 있는 열성 팬들을 중심으로 스트리밍 수익을 차등적으로 적용한다는 개념이다. 스포티파이(Spotify)도 열성 팬들을 위한 다양한 독점 혜택을 제공하는 방식으로 프리미엄 요금제를 출시 예정이라 밝혔다.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}* 유니버설뮤직그룹(UMG): 세계 최대의 음악 레이블. 테일러 스위프트, 포스트 말론, 아리아나 그란데, 빌리 아이리쉬 등의 아티스트들이 소속되어 있다.\n이밖에도 음악 산업계의 주요 플레이어들은 스트리밍 수익을 늘리기 위해 구독 상품의 세분화에 주력하고 있다. 이는 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}단순한 청취 횟수나 스트리밍 수치보다, 특정 아티스트를 향한 팬들의 충성도와 지불 의사가 음악 산업의 수익 모델을 재구성하는 데 핵심적인 요소로 작용하고 있음을 보여준다. 팬이 음악 시장의 가장 중요한 변수로 떠올랐다는 의미로 볼 수 있다.\n팬 중심으로 변화하는 음악 산업에서, 하이브의 ‘위버스’ 같은 팬덤 플랫폼(혹은 슈퍼팬 앱)은 주요 모델로 주목받고 있다. 유니버설뮤직그룹은 이미 하이브와 10년 독점 유통 협약을 체결하고 위버스에 슈퍼 스타들을 입점시키고 있다. 아리아나 그란데, 두아 리파, 메건 더 스탤리언, 코난 그레이 등이 이미 위버스에서 활동하고 있다.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}'규모'가 아니라 '밀도'가 중요하다\n골드만삭스는 2024년 음반 분야에서 슈퍼팬을 통한 수익 창출 시장 기회가 자그마치 45억 달러에 이른 것으로 추산했다. 과거에는 상품이나 콘텐츠 그 자체의 품질과 대중적 규모가 성패를 좌우했다면, 이제는 얼마나 충성도 높은 팬을 확보하느냐, 그들과 긴밀한 관계를 어떻게 맺느냐가 중요해진 것이다.\n개인이 미디어가 되는 시대에 콘텐츠가 홍수처럼 범람하는 요즘, 사람들의 관심(Attention)은 더더욱 중요해진다. 사람들이 쏟는 시간, 주의, 시선 등이 희소한 자원이 되며 이 자원을 둘러싼 경쟁이 핵심이 되는 경제 구조인 관심경제(Attention Economy)에서는 콘텐츠 간 경쟁이 치열하게 이뤄진다. 인터넷과 모바일의 확산으로 정보는 넘쳐나지만, 사람이 하루 24시간 내 소비할 수 있는 시간과 집중력은 한정적이기 때문이다.\n그렇다면 이런 시대에 사람들의 관심을 얻기 위해서는 어떻게 해야 할까? 시청자가 공감할 수 있는 이야기를 건네야 하고, 그 이야기가 어떤 감정의 파동을 불러일으킬 수 있어야 한다. 브랜드의 이야기와 철학이 잘 담긴 콘텐츠에 공감하는 사람들은 자연스럽게 하나의 커뮤니티로 발전하고, 이 커뮤니티는 지속적인 관계를 기반으로 성장할 수 있다. 이렇게 맺어진 ‘관계’는 경쟁자가 단순 할인이나 기능으로는 빼앗기 어려운 견고한 자산으로 발전한다.\n이 변화가 바로 팬덤을 부수적인 요소가 아닌, 비즈니스의 핵심 자산으로 만든다. 소비자는 이제 단순한 고객이 아니라 적극적으로 참여하고 지지하는 ‘창조적인 팬’으로 거듭난다. 팬의 개념이 달라지고 있는 셈이다.\n비즈니스를 관계 중심으로 접근할 때, 스타트업이든 엔터 기업이든 소수의 열정적인 고객을 확보해 성장의 모멘텀을 만든다. 이때 중요한 것은 열정적인 고객들(팬덤)의 ‘규모(scale)’가 아니라 ‘밀도(density)’다.\n그래서 기업들은 제품을 판매하는 것을 넘어 팬들이 참여하고 즐길 수 있는 경험을 설계하는데 집중하고 있다. 이를 ‘팬 인게이지먼트(Fan engagement) 전략’이라 부르는데, 그 핵심은 팬과 지속적으로 상호작용하면서 경험(Value)을 제공하는데 있다. 글로벌 아티스트나 케이팝 아이돌 그룹이 앨범 발매와 동시에 소셜미디어 라이브 방송, 팬미팅, 뮤직비디오 리액션 이벤트, 틱톡 챌린지 등을 통해 홍보하는 것도 이 때문이다.\n전통적인 마케팅은 얼마나 많은 사람에게 도달하느냐, 즉 규모에 초점을 두곤 했다. 그러나 팬덤 비즈니스에서는 밀도, 즉 얼마나 끈끈한 관계를 맺느냐가 더욱 중요해진다. 수백만 팔로워를 가진 인플루언서라도 정작 적극적으로 소비하고 지지하는 핵심 팬이 없다면 수익화나 장기적 성장에 한계가 있다. 반대로 규모는 작아도 열성 팬층이 두텁게 형성되어 있으면 안정적인 수익과 강력한 파급효과를 얻을 수 있다.\n이제는 모두가 콘텐츠 비즈니스를 한다\n하이브의 팬덤 플랫폼 위버스(Weverse)는 2022년에 전년 대비 17.4%의 매출이 증가했다. 팬들의 소비 덕분이다. 위버스는 최근 멤버십 구독제를 도입해 독점 콘텐츠 접근, 이벤트 참여 우선권, 멤버십 전용 상품 구매 등 슈퍼 팬들에게 더 많은 혜택을 제공하면서 수익 모델을 추가하고 있다. 밀도 높은 팬덤은 꾸준히 콘텐츠를 소비해주는 것은 물론, 입소문 효과를 일으키고, 주변 사람들을 팬덤으로 끌어들이는 전염성을 발휘하기 때문이다.\n최근 위버스는 자체적인 음원 스트리밍 서비스 ‘위버스 뮤직’을 도입해, 앱 안에서 음악을 감상하고 아티스트가 팬들과 리스닝 파티도 열 수 있는 기능도 제공한다. 이렇게 팬덤 플랫폼은 콘텐츠 소비 경험을 묶어두는 것으로 팬덤을 결집시킨다. 위버스에서는 2024년에만 5,787회의 라이브 방송이 진행되었고, 4억2천6백만 뷰를 기록했다.*\n* 출처: .css-114ityv{white-space:pre-wrap;cursor:pointer;-webkit-text-decoration:underline!important;text-decoration:underline!important;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}HYBE’s Joon Choi: ‘90% of Weverse traffic comes from regions outside of Korea. Most of our users are global superfans.’ - Music Business Worldwide\n이 팬들은 수동적인 소비자와 완전히 다른 존재들이다. 팬들은 콘텐츠 소비자에서 직접 커뮤니티를 만들고, 굿즈를 디자인하며, 팬픽(기존에 존재하는 영화, 드라마, 소설, 게임, 아이돌, 뮤지션 등을 소재로 팬이 자발적으로 창작한 2차 창작물)이나 팬메이드 영상을 창작하는 콘텐츠 생산자로 진화하고 있다.\n미국 Z세대의 66%는 원본 콘텐츠보다 2차 콘텐츠를 더 오래 시청한다는 보고서도 있다.* 젊은 팬들은 단순히 원작을 소비하는 데 그치지 않고 팬이 만든 해설, 리뷰, 패러디 영상 등 팬덤 문화 자체를 즐긴다. 다시 말해, 높은 밀도의 팬들은 비즈니스의 지속가능성과 파급력을 만든다. 따라서 팬덤 플랫폼은 팬들이 모이는 커뮤니티 공간인 동시에, 다양한 콘텐츠를 소비하는 미디어이며, 팬 대상 상품을 판매하는 쇼핑몰 역할도 한다.\n* 출처: A message to the entertainment industry: nurture fandom or risk losing control of your IP\n물론 팬덤 플랫폼이 만능 해결사는 아니다. 전통 소셜미디어나 유통 채널을 완전히 대체하기 어려운 측면도 있다. 아티스트나 브랜드를 기준으로 너무 많은 팬 플랫폼이 난립하면 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}팬들이 피로감을 느낀다는 지적도 있다. 특히 서양의 아티스트들은 기존에도 인스타그램, 트위터 등으로 팬과 소통해왔기 때문에 이러한 팬들이 굳이 별도 앱으로 옮길 이유도 적다.\n그럼에도 팬덤 플랫폼은 차별화된 가치를 제공하거나 여러 플랫폼의 데이터를 연계하는 등의 노력을 통해 차별화된 비전을 제시하고 있다. 워너뮤직은 팬덤 플랫폼을 크로스플랫폼 솔루션으로 정의하고 있고, 유니버설뮤직그룹은 아티스트-팬 관계 강화를 전략의 핵심으로 정의했다. 팬덤 플랫폼 전략은 일시적 유행이 아니라 미래 비즈니스의 필수 요소로 여겨야 한다는 뜻이다.\n모든 창작자와 기업에게 필요한 건 ‘관계의 감각’이다\n팬덤 비즈니스의 감각은 관계의 감각이다. 이러한 감각은 팬들의 마음을 읽고, 그들과 관계 맺는 능력을 뜻한다. 다시 말해 관계 중심의 사고방식, 제품을 팔 때 “이걸 얼마나 팔까”가 아니라 “이걸 통해 팬들과 어떤 .css-1swx3yz{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;font-weight:bold;}관계를 만들까”를 고민하는 접근법이 중요하다. 팬들과 섬세한 관계를 맺어나가는 기업과 창작자야말로 팬덤 시대에 지속가능한 성공을 거둘 수 있을 것이다.\n팬덤은 본질적으로 쌍방향 관계다. 팬은 일방적으로 소비만 하는 존재가 아니라, 때로는 창작자에게 영향을 미치고 영감을 주며 함께 브랜드를 만들어가는 파트너에 가깝다. 팬들은 자신의 목소리를 내고, 참여하고, 심지어 공동 창작에도 관여한다.\n따라서 팬덤 비즈니스를 이끄는 사람들은 팬을 친구에 가까운 존재로 대우할 필요가 있다. 팬의 의견을 경청하고 존중하며, 피드백을 빠르게 반영하고, 팬과 함께 성장하는 모습을 보여줄 때 팬덤은 더욱 견고해진다.\n팬덤 비즈니스는 결국 마음의 비즈니스다\n팬덤 비즈니스의 미래는 팬과 창작자의 경계가 더욱 허물어진 세계일 것이다. 논란은 있었지만, 최근 챗GPT의 지브리 풍 이미지 생성 열풍이 보여준 대로, AI를 비롯한 기술의 발달은 팬이 직접 무언가를 만들고 공유하고 확산시키는 과정에 드는 노력과 시간을 비약적으로 줄이고 있다. 이런 상황에서 팬은 어쩌면 아티스트와 함께 새로운 작품을 만들고, 나아가 콘텐츠의 권리를 공동으로 소유할 수도 있을지 모른다.\n아티스트의 입장에서 말하자면, 앞으로는 관계 맺는 감각이 부족한 창작자는 팬들이 만들어낸 2차 콘텐츠에 오히려 주도권을 빼앗길 위험도 생길 수 있다. 팬덤과의 건강한 관계를 구축하고 유지하는 능력은 단지 시대의 변화 때문이 아니라, 미래 비즈니스의 잠재적 가치를 지키고 위기에 대응하는 전략이기도 하다.\n이런 상황에서 팬 데이터는 더욱 중요해질 것이다. 그런데 팬 데이터란 무엇일까. 단순 팔로워 수나 조회수 같은 피상적 지표가 아니라, 능동적 참여도나 정체성의 공감대를 측정하는 데이터일 것이다. 팬이 얼마나 자주 댓글을 남기고, 다른 팬들과 교류하며, 그 브랜드를 자기 정체성의 일부로 여기는지를 알아내는 것이 바로 진짜 데이터다. 이것은 빅 데이터와는 다른 개념이다. 오히려 띡 데이터(Thick Data: 정량화하기 어려운 질적 정보로서 빅데이터를 보완하는 역할)에 가깝다.\n소셜 미디어의 시대에 우리는 그 어느 때보다 관계가 중요한 시대를 맞이하고 있다. 역사적으로 성공한 기업이나 브랜드, 아티스트는 모두 예외 없이 강력한 팬덤을 가졌고, 그들과 진정으로 의미있는 관계를 맺었다. 이제는 누구나 그러한 관계를 필요할 뿐 아니라 진정으로 원하게 되었다.\n그러나 이러한 팬덤은 하루아침에 이루어지지 않는다. 오랜 시간 쌓아온 신뢰 위에 쌓인 결과이기 때문이다. 따라서 신뢰는 바야흐로 자산이 되고, 우리는 관계를 기반으로 조금 더 높은 차원의 사업과 비전을 만들 수 밖에 없을 것이다.\n브랜드 담당자에게 팬덤은 가장 인간적인 방식으로 커뮤니케이션할 수 있는 대상이고, 일반인이 팬덤에 뛰어 드는 일은 단순 소비자를 넘어서는 존재가 되는 경험이다. 결국 팬덤 비즈니스의 궁극적인 지향점은 사람과 사람 사이의 연결이다. 기술이 비약적으로 발전하고, 미디어 환경이 급격하게 바뀌어도 ‘관심과 열정을 공유하는 사람들의 모임’이라는 팬덤의 본질은 변하지 않을 것이다.\n여기서 말하고자 하는 바는 사실 매우 단순하다. 관계는 성공의 문제가 아니라 생존의 문제다. 그래서 관계를 소중히 여기고, 팬을 소비자가 아닌 동료로 생각하고 함께 성장하려고 애쓰는 존재만이 앞으로의 비즈니스 환경에서 살아남을 것이다. 이것이 바로 새로운 시대의 비즈니스, 마음의 비즈니스다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 금혜원 Graphic 이은호",
        "content": "팬덤 비즈니스, 더 많은 사람보다 더 깊은 관계가 중요하다",
        "contentSnippet": "팬덤 비즈니스, 더 많은 사람보다 더 깊은 관계가 중요하다",
        "guid": "https://toss.im/tossfeed/article/fandustry-06",
        "isoDate": "2025-05-28T08:39:00.000Z"
      },
      {
        "title": "토스, 해외송금 서비스 도입…금융생활 영역 넓힌다",
        "link": "https://toss.im/tossfeed/article/moneytransfer",
        "pubDate": "Wed, 28 May 2025 00:49:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}내국인 고객 위해 ‘모인’과 협업…모인 해외송금 강점 토스앱에 그대로 구현\n‘센트비’와 협업한 국내 체류 외국인 전용 해외송금 서비스도 출시 예정\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 해외송금 전문 기업들과 손잡고 해외송금 서비스 제공에 나선다고 28일 밝혔다. 해외송금 분야에서 특화된 기술력과 경쟁력을 지닌 핀테크 기업들과의 협업을 통해 고객을 위한 더욱 폭넓은 금융 환경을 조성한다는 전략이다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n\n먼저 토스는 국내 대표 해외송금 전문 기업 ‘모인’(대표 서일석)의 서비스를 자사 앱에 연동, 내국인 고객을 대상으로 간편 해외송금 기능을 제공한다. 모인은 시중은행 대비 최대 4배 빠른 송금 속도와 최대 90% 저렴한 수수료를 강점으로 내세우며, 모든 통화에 환율 우대 100% 혜택을 적용해 사용자 부담을 크게 낮췄다.\n \n토스 앱 하단의 ‘전체’ 탭에서 '모인 해외송금'을 검색해 서비스에 접속할 수 있다. 사용자는 전 세계 60개국으로 연중무휴 24시간 송금이 가능하다. 기존 모인 사용자라면 별도의 인증이나 정보 입력 없이 토스 앱 내에서 바로 서비스 이용이 가능하며, 신규 고객도 간단한 본인 확인만 거치면 송금을 시작할 수 있다. 토스에서 모인 서비스를 먼저 이용한 경우, 모인 앱에서도 별도 가입 없이 계정이 자동 연동돼 이용 가능하다.\n \n한편, 토스는 2백만 국내 장기 체류 외국인을 위한 해외송금 서비스도 출시를 앞두고 있다. 이를 위해 토스는 글로벌 외환 토탈 솔루션 기업 ‘센트비’(대표 최성욱)와 손잡고 3분기 내 출시를 목표로 서비스를 준비 중이다.\n \n센트비는 외국인 고객을 중심으로 개인용 해외송금 서비스를 제공해온 핀테크 기업이다. 전체 개인 이용자 중 외국인 비중이 약 70%에 달하며, 영어, 중국어, 베트남어, 우즈베키스탄어 등 10개국 이상 언어로 고객 상담을 지원하고 있다.\n \n토스 관계자는 \"해외송금 분야에서도 고객이 신뢰할 수 있는 간편한 서비스를 제공하겠다는 목표로 협업을 추진해왔다\"며, \"앞으로도 다양한 핀테크 파트너들과의 연계를 통해 사용자 중심의 금융 생태계를 넓혀 나가겠다\"고 밝혔다.",
        "content": "‘센트비’와 협업한 국내 체류 외국인 전용 해외송금 서비스도 출시 예정",
        "contentSnippet": "‘센트비’와 협업한 국내 체류 외국인 전용 해외송금 서비스도 출시 예정",
        "guid": "https://toss.im/tossfeed/article/moneytransfer",
        "isoDate": "2025-05-28T00:49:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]