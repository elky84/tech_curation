[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": [
      {
        "creator": "리승환",
        "title": "설치형에서 SaaS로 사이버보안을 확장하다: 로그프레소 구동언 전무 인터뷰",
        "link": "https://ppss.kr/archives/270658",
        "pubDate": "Fri, 19 Sep 2025 01:26:54 +0000",
        "content:encodedSnippet": "10년간 매해 성장하고 퇴사율 10%가 안 되는 보안 기업\n이승환: 자기 소개 부탁드립니다.\n구동언: 사이버 보안 기업 ‘로그프레소’ 구동언 전무입니다. 서비스 명도 ‘로그프레소’예요. 창업한 지는 만으로 12년이 넘었습니다.\n건실한 보안 전문가\n이승환: 일단 회사 평균 연봉이 6천 넘게 나오는데, 굉장히 좋은 회사 같군요.\n구동언: 아니, 어디를 보고 그런 걸… 일단 저희 주 경쟁 대상이 글로벌 보안 SW다 보니, 우수한 인재들이 필요하고요. 또 보안 영역이 잠시 머물러서는 전문성을 키워나가기 힘들어요. 그래서 사람을 신중하게 뽑고, 이분들이 계속 일할 수 있도록 신경도 씁니다. 그래서 회사가 10년이 넘었는데도 누적 퇴사율이 10%가 안 돼요.\n계속해서 직원이 늘어가는 와중 엄청난 잡플래닛과 블라인드 평점 (출처: 피치덱)\n이승환: 그러면 매출은 얼마 정도 나옵니까?\n구동언: 2024년 기준 80억 조금 넘었고, 올해는 100억 넘기는 것을 목표로 합니다.\n이승환: 매출이 그렇게 빠르게 늘지는 않네요.\n구동언: 저희가 아직은 온프레미스(구축형) 비중이 높아요. SaaS 비중은 상대적으로 낮죠. 온프레미스는 인원 투입이 필요하고, 그렇게까지 빠르게 매출을 늘리기는 힘든 상황입니다. 다만 기업들이 점점 클라우드와 SaaS 환경으로 넘어가고 있고, 또 저희도 글로벌 진출을 모색하고 있어서 앞으로는 더 빠르게 매출이 상승할 거라 생각해요.\n꾸준히 매출이 상승하고 있다\n이승환: 투자는 얼마나 받으셨나요?\n구동언: 2023년에 60억을 KB인베스트먼트, K2인베스트먼트파트너스, CJ인베스트먼트로부터 투자받았어요. 2019년에 투자를 받긴 받았었는데, 그때는 정부 시책으로 금융권의 스타트업 투자가 활성화되면서 우리은행으로부터 10억을 받았고요. 덕택에 온프레미스를 넘어 SaaS 개발에 들어갈 수 있었고요.\n \n기업의 모든 기록 ‘로그’를 샅샅이 분석해 주는 로그프레소\n이승환: 알겠습니다. 그러면 회사 말고 SW ‘로그프레소’는 뭔가요?\n구동언: 기업들이 보안을 위해 여러 가지 솔루션을 많이 쓰는데요. 이와 관련해서 ‘로그’가 매우 많거든요. 이걸 한데 모아 보안 이슈가 없는지 실시간으로 분석하고, 의심스러운 상황이 발생하면 바로 알려주는 솔루션입니다. 이를 클라우드로 제공해서, 집에서도 회사 서비스에 문제가 없는지 살필 수 있죠. 업계에서는 보통 ‘심(SIEM; 보안 정보 및 이벤트 관리)’이라고 합니다.\n이 온갖 로그를 로그프레소가 모니터링한다\n이승환: 그러면 주요 고객사는 어디인가요?\n구동언: 보안 회사 특성상 고객사를 외부에 이야기하는 건 사실 쉽지 않아요. 우리가 아는 유명한 금융기관과 IT 서비스 대기업이 많습니다.\n이승환: IT 대기업이라면 뛰어난 보안, 인프라 엔지니어가 충분히 많을 것 같은데요?\n구동언: 대기업들 다 전문 에이전시 쓰는 거랑 마찬가지죠. 이 정도 되면 처리해야 하는 로그의 양이 엄청나게 많습니다. 그러나 보안 관련 규제를 준수하고, 각종 모니터링 요구사항을 충족하기 위해 직접 개발하는 것은 사실상 불가능한 일이죠. 그러니 저희 같은 전문 업체의 솔루션을 쓸 수밖에 없죠.\n이승환: 알겠습니다. 제가 문과라… ‘로그’가 뭔지부터 설명해 주실 수 있을까요?\n구동언: 예로 파일을 주고받았다면, 어떤 파일을 누구와 주고받았는지, 또 파일의 크기는 어떻게 되는지, 이런 게 다 기록에 남아요. 이런 기록 하나하나가 다 ‘로그’예요. 우리 회사가 하는 일은, 보안을 위해 중요한 로그를 잘 분석해 주는 겁니다.\n이승환: 어… 그러니까 우리는 IT 보안회사다?\n구동언: 일반인들은 ‘보안’이란 말 하나로 퉁치지만, 보안 영역은 굉장히 넓습니다. 오프라인에서도 대형 빌딩 들어올 때 보안 회사가 신분증 체크하잖아요? 사이버 보안은 훨씬 복잡합니다. 일반적인 개인 사용자는 V3 정도만 생각하지만요, 조직 구성원 개인이 쓰는 컴퓨터, 노트북, 스마트폰, 그 안에 있는 프로그램 하나하나… 여기에 랜선, 와이파이, LTE 등 통신 환경도 다양하고요.\n예로 은행 본점에 가면 ‘와이파이 시큐리티’라고 하는데, 회사가 허용해 놓은 와이파이 외에는 모두 접속을 차단하는 장비가 있어요. 설사 접속한다 해도, 이 장비가 회사에서 인증받은 장비인지 아닌지를 구분하죠. 굉장히 단순한 예이지만, 이런 식으로 무수한 보안 솔루션이 있습니다.\n \n점점 복잡도가 높아지며 글로벌에서 박터지게 경쟁하는 보안 시장\n이승환: 경우의 수를 따지면 끝도 없이 복잡하겠네요.\n구동언: 네. 이 복잡한 환경에서 뭐 하나 유출되지 않도록, 온갖 통제 설정을 다 해야 하죠. 작은 회사에서는 적당히 넘어가지만, 큰 회사일수록 이 정보 유출에 매우 민감하잖아요. 그래서 보통 대기업은 30~50여 가지의 보안 솔루션을 써요.\n영역별로 수많은 솔루션이 있다\n이승환: 어… 보통은 통합 솔루션으로 퉁치게 되지 않나요? 어떤 SW든 규모의 경제가 있으니, 점점 큰 특정 업체로 쏠리게 되는데…\n구동언: 사이버 보안은 그게 안 돼요. 기업은 정보가 털리면 큰 난리가 나잖아요. 그래서 ‘문제가 될 수 있는 모든 구간’을 관리해야 해요. 집에서는 와이파이를 아무렇지도 않게 쓰지만, 회사에서는 그러면 안 되잖아요. 또 랜선을 꽂았다 해도, 아무나 회사 내부망에 접근할 수 있어도 안되고요. 그래서 이런 요소 하나하나마다 통제하는 솔루션이 필요해요. 이를 ‘단위 보안 솔루션’이라 합니다.\n이승환: 이걸 하나의 SW가 책임질 수는 없다?\n구동언: 네. 엄청 단순하게 보면 PC용 보안 솔루션을 잘하는 것과, 모바일용 보안 솔루션을 잘하는 건 완전 다른 영역이거든요. 따지면 끝도 없이 나눌 수 있는데, 이 모든 영역을 하나의 회사가 잘할 수는 없어요. 여기에 글로벌 규제와 로컬 규제가 다르죠. 그러다 보니 굉장히 다양한 보안 회사가 공존하고 있습니다.\n일반인은 잘 모르지만 상장사만 이 정도일 정도로 보안산업의 규모는 크다\n이승환: 그래도 글로벌 탑 보안회사들이면, 이런 다양한 상황을 커버할 것 같은데요.\n구동언: 글로벌 보안업체 중 압도적인 매출 넘버원이 MS(마이크로소프트)예요. MS는 윈도우, 오피스(MS 365), DB(MSSQL), 클라우드(azure) 등을 동시에 잘하잖아요. 여기에 보안도 잘해요. 근데 이렇게 다양한 분야의 SW를 잘하는 곳은 MS가 유일해요. 다른 보안 SW, 우리 업계 말로 ‘사이버 시큐리티’를 잘하는 회사는 주로 전문 회사입니다. 팔로알토, 크라우드스트라이크, 포티넷 등 상장된 회사도 많아요.\n이승환: 음… 근데 MS는 본인들이 MSSQL과 애저를 가지고 있잖아요. 자기들이 만든 거니까 이해도가 제일 높고 당연히 보안도 잘한다…. 일 거 같은데요.\n구동언: 그런 면도 있죠. 예로 아마존도 끊임없이 AWS에 부가적인 보안 기능을 계속 추가하고 있어요. 하지만 말씀드렸듯 기술도 빠르게 바뀌고, 비즈니스도 빠르게 바뀌고 있기 때문에 변수가 너무 많습니다. 그래서 외부 보안 전문 업체들이 계속해서 성장하는 거죠. 구글 클라우드도 올해 거의 50조 들여서 사이버보안 업체 ‘위즈’를 인수했잖아요.\n글로벌 대형 IT 기업은 엄청나게 보안 회사에 투자하고 인수한다 (출처: CBINSIGHTS)\n이승환: 걍 아마존이랑 MS가 알아서 다 해주면 안 되나요…\n구동언: 그게 불가능한 게, 건물로 비유하자면 아마존이나 MS가 제공해주는 건 바닥과 벽을 튼튼하게 해줄 뿐, 건물 안에서 뭘 하든 그것에 대한 보안을 해주는 건 아니에요. 이건 “공유 책임 모델”이라고 하는데, 아무튼 그래서 기업의 시스템 구조와, 데이터 구조, 비즈니스 구조에 따른 개별 보안 솔루션이 필요합니다. 그리고 사이버 보안은 규제 산업이기 때문에, 글로벌 규제와 더불어 로컬의 규제를 충족해야 합니다. 그렇기 때문에 다양한 보안 회사가 존재할 수밖에 없어요.\n \n글로벌 위협에 걸맞은 SaaS 보안 서비스로 승부\n이승환: 글로벌 기업과 함께, 로컬 보안 회사들이 공존하는 구조로군요.\n구동언: 과거에는 한국의 보안 SW 회사들이 경쟁력이 있었어요. 왜냐? 보통 기업들이 회사 안에 서버를 두고, 이를 기반으로 일했거든요. 이를 ‘사내망’이라고 해요. 그래서 보안 SW도 사내 서버에 설치해야 했죠. 이를 ‘온프레미스(구축형)’라고 해요.\n이승환: 아, 하긴 대기업들은 같은 SW도 온프레미스, 구축형 많이 쓰더라고요.\n구동언: 네. 그런데 지금 시대는 클라우드와 SaaS의 시대로 넘어가고 있죠. 이제 털리면 안 되는 자료가 회사 안에 서버실 안에만 있지 않아요. 클라우드로 환경이 옮겨가고, 대부분 회사들이 업무 효율성을 위해서 SaaS를 도입해서 쓰고 있죠. 예전 온프레미스 환경에서는 국내 보안 기업을 선호한 이유가요. 글로벌 기업보다 SW 품질이나 기능이 좀 떨어져도, 현지에서 바로 출동해서 기술 지원을 해줄 수 있는 엔지니어가 있기 때문이었거든요.\n로그프레소는 국내 최초로 클라우드 SIEM 서비스를 출시했다\n이승환: 아… 한국에 콜센터에 출동할 수 있는 엔지니어까지 있으면 너무 좋죠.\n구동언: 근데 SaaS의 시대에는 이게 아니거든요. 365일 24시간 서비스센터를 돌려요. 인도, 헝가리, 베트남에 실력 있는 엔지니어들이 늘 대기하고 있고, 이제는 AI를 사용해서 그 엔지니어들은 한국어를 배우지 않아도 한국어로 대응할 수 있습니다. 그리고 정말 디테일한 기술적인 질문들은 콜센터가 2차로 본사에 올려서 대응합니다. 근데 이렇게 하면 기술도 기술인데, 지원 단가도 훨씬 저렴해져요. 한국에서 지금 인프라 테크니컬 트러블을 해결할 수 있는 엔지니어는 최소 5천만 원부터 줘야 하거든요.\n이승환: 아… 그런 이야기도 있더라고요. 이제 대기업 안에 보안을 책임질 IT 엔지니어가 부족하다고…\n구동언: 맞습니다. 설사 IT 서비스를 하는 회사라 해도, 이를 관리하는 IT 인프라 엔지니어는 많지 않아요. 예전처럼 사내 전산실에 서버를 도입해서 OS 세팅하고 SW 깔고, 이런 수준이 아니라 회사의 모든 부서가 업무를 위해 온갖 SW를 사용하니까요. 이 모든 걸 사내 IT 인프라 엔지니어가 관리하는 건 불가능하죠. 그러니까 경쟁의 지형이 완전히 바뀌었어요. 이제 글로벌하게 서비스를 하지 못하면, 애초에 이 경쟁에 뛰어들지 못하는 상황이에요.\n보안 시장은 엄청난 속도로 크고 있다\n이승환: 근데 여전히 구축형 쓰는 회사도 적지 않은 걸로 알고 있는데요.\n구동언: 아직 있긴 하죠. 하지만 점점 클라우드와 SaaS로 넘어가고 있어요. 옛날에는 회사에서 ‘IT’는 굉장히 제한적인 업무영역의 일이었어요. 엔지니어들만 IT를 다루면 됐었죠. 하지만 지금은 모든 업무가 디지털 환경에서 일어나요. 또 우리 회사만 쓰는 것도 아니고, 다른 회사랑도 협업하는 등등을 생각하면 사내망에 머물기는 힘들죠. 물론 여러 보안 이슈로 구축형이 사라지지는 않겠지만, 그 경우도 클라우드와 병행하는 회사가 많아요.\n이승환: 그러면 ‘로그프레소’는 클라우드 환경에서 발생하는, 여러 보안 이슈를 모니터링하며 문제가 생기지 않도록 관리해 준다.\n구동언: 네. 클라우드 환경만 하는 건 아니고, 기존의 구축형 환경에서도 모두 사용할 수 있어요. 업계에서는 보통 ‘가시성’이라고 하는데, 현재 상태와 중요한 위험 징후를 실시간으로 보여주는 거죠.\n \n각 기업에 어떤 보안 문제가 있는지 분석까지 제공\n이승환: 근데 잘 이해가 안 가는 게, 온라인에서는 관리해야 할 접점이 엄청 많다고 했잖아요. 그 모든 걸 하나하나 다 체크할 수 있나요?\n구동언: 사실 모든 걸 하나하나 다 본다는 건 불가능하죠. 그렇기에 사고가 나면 문제가 될 수 있는 것을 중심으로, 의심스러운 상황을 빨리 식별하는 것이 중요합니다. 예를 들어 중요한 서비스를 AWS 위에서 돌리고 있다면, AWS에 로그인하는 관리자 접속 모니터링이 굉장히 중요하겠죠.\n이승환: 전문가가 보면 바로 보이나요? 질문이 좀 웃긴 거 같은데…\n구동언: 탐지 룰, 그러니까 위험이 드러나는 시나리오 같은 게 있어요. 가령 우리 네트워크 트래픽을 봤더니 ‘원래 이쪽으로 통신을 하지 않았던 뭔가가 통신을 했다’, 그러면 뭔가 의심 가는 트래픽일 수 있잖아요? 아니면 평소에는 개인정보가 포함된 파일이 많이 오가지 않는데, 갑자기 많이 오가는 경우도 위험 신호일 수 있죠. 그러면 이를 실시간으로 통지해 주고, 이게 해킹으로 의심되는 행위인지, 이런 것까지 알려주는 거죠.\n이승환: 그런데 ‘로그프레소’는 모니터링 툴이니, 보안이 위험한 접점을 찾아주는 건 아니지 않나요?\n구동언: 네. 그래서 초기에 고객과 인터뷰를 많이 합니다. 비즈니스 구조와 인프라는 회사마다 각기 다르니, 어떤 보안 문제가 있는지, 뭐가 중요한지 아닌지 가리는 것부터 시작합니다. 요즘은 사실 어떤 정보가 중요하고 리스크가 있는지 식별하는 것조차도 쉽지 않아요. IT에 너무 많이 게 연결되어 있다 보니, 인프라 엔지니어가 다루는 영역, 그러니까 사이버 보안에서 다루는 영역 자체가 너무 거대해요. 그러니까 모든 업무가 IT로 갔지만, 실제로 제대로 관리하지 못하고 사용하는 것들이 너무 많죠.\n이승환: 하지만 우리한테 맡기면, 뭐가 중요한 건지 다 알려주겠다.\n구동언: 그렇죠. 내가 지켜야 할 정보 자산이 어디에 있는지, 또 중요도를 구분하는 게 굉장히 어려운 일이거든요. 물론 궁극적으로는 로그를 통해 핵심적인 지표를 볼 수 있게 하는 솔루션를 파는 게 저희의 목표이기는 해요.\n이승환: 컨설팅도 같이 파는 게, 더 돈 벌기 좋아 보이는데요.\n구동언: 말씀하신 것처럼 컨설팅을 팔면 당장 돈이 될 수 있겠지만, 컨설팅은 결국 사람의 시간을 파는 비즈니스라 한계가 있습니다. 저희는 고객사에서 문제를 해결한 경험을 제품에 녹여내, 같은 문제를 많은 기업들이 저희 솔루션을 도입해서 보안 문제를 파악하고 해결할 수 있도록 하는 것을 목표로 합니다. 로그를 연동하면 즉각적으로 클라우드와 각각의 PC에 얼마나 중요 정보가 있는지, 누가 비정상적인 행위를 하고 있는지 파악하고, 앞으로는 이렇게 정보 통제를 해야 한다… 이런 관리 지표를 즉각적으로 뽑아낼 수 있습니다.\n☞ 로그프레소 웹사이트 바로가기\n☞ 로그프레소에 바로 문의하기\n \n이제는 모두에게 실질적 위협이 된 해킹, 보안 SW가 반드시 필요\n이승환: 제가 해킹당한 대표님에게 직접 들은 적이 있는데요(…) 2단계 인증만 해도 어지간한 문제는 해결된다 들었는데요.\n구동언: MFA는 ID와 PW가 털렸을 때 최소한의 방어막인데, 문제는 MFA마저도 털리는 케이스가 아주 가끔씩은 있어요. ID, PW로 로그인하는 사이트를 만들어 놓고, 여기다가 MFA 코드 값까지 입력하라는 식이죠. 요즘은 ID, PW 방식보다 다른 방식을 많이 권유해요. 가깝게는 생체인증이 있고, 그 밖에도 다양한 방법이 있어요.\n이승환: 해커들도 진짜 꼼꼼하네요;;;\n구동언: 그래서 보안 모니터링, 저희가 하는 로그 분석이 이런 문제를 막는 시작이에요. 웹사이트를 운영하면 웹로그가 남잖아요. 웹로그를 들여다보면, 정상적이지 않은 사용자들이 로그인을 하면 남는 특성들이 있어요. 이런 게 발생하면 저희가 비정상적인 사용자임을 바로 확인하고 알려드리는 거죠. 경우에 따라서는 자동으로 차단하기도 하고요.\n로그프레소는 북한 해킹도 분석한다(…)\n이승환: 하긴 해킹 뉴스가 너무 많아서, 이젠 별달리 대단히 여겨지지도 않더라고요.\n구동언: 요즘 뉴스에 많이 나오는 게 ‘크리덴셜 스터핑’이라는 건데요. 우리가 브라우저에다가 ID와 패스워드를 저장하잖아요. 악성 코드에 감염돼서 그 브라우저에 저장되어 있는 ID와 패스워드가 많이 털리는 경우가 생각보다 많아요. 그래서 작년 KISA에서 ‘브라우저 자동 로그인 사용주의 권고’를 발표하기도 했어요. 그런 것들이 다크 웹으로 유출되고, 그걸로 뭔가 다른 여러 가지 나쁜 시도들을 하는 경우가 많아요.\n여기에 기업이 노출되는 순간 엄청난 사고가 터지는 거죠. 개인은 아무리 중요한 정보를 털려도 자기 자신만 책임지면 되지만, 기업은 사용자 전체를 책임져야 하니까요. 그 정보를 털어가서 “너 비트코인 몇 개 안 내놓으면 정보 유출한다”, “서버 다 날리고 파일 다크웹에 뿌려버릴 거야”, 이런 식으로 나오게 되죠. 순식간에 기업 신뢰가 곤두박질치고요.\n편하다고 좋은 게 아니라 참 위험합니다…\n이승환: 로그프레소를 쓰면, 그런 사고를 막을 수 있다…\n구동언: 로그프레소가 직접 막을 수 있는 것은 아니지만, 그런 사고의 징후를 파악할 수 있게 하는 모니터링 툴입니다. PC를 직접 감염시켜서 들어올 수도 있고, 아니면 접속한 웹사이트의 취약점을 통해서 들어올 수도 있고, 정말 복잡한 경로가 있어요. 어쨌든 저희의 역할은 비정상적인 어떤 행위가 있을 때, 즉각적으로 파악할 수 있도록 하는 겁니다.\n \n보안에 절대는 없다, 할 수 있는 한 위험을 제거해 나가야\n이승환: 그럼에도, 문제가 터지면 그 모니터링도 큰 의미가 없는 거 아닌가요?\n구동언: 그렇지 않습니다. 최소한 사고를 빠르게 인지하고 대응할 수 있는 체계 자체가 중요합니다. 어차피 보안에 완벽은 없어요. 하지만 그 많은 보안 사고에서 문제가 뭐냐 하면, 로그를 제대로 안 남겨놓지 않으니까 사고가 터졌는지 모르는 경우가 많아요.\n그러다 보면 모 인터넷 서점과 같은 끔찍한 일이 일어난다\n이승환: 하긴 해커로부터 메일이 온 후에야 인지하는 경우가 많더라고요.\n구동언: 네. 더 큰 문제는 ‘우리가 어디서 어떻게 뚫렸는지’에 대해서 기록이 없어요. 그게 있어야 최소한의 사고 수습을 하고, 또 향후 이런 문제를 방지할 수 있습니다. 그런데 로그도 없이 털려버리면, 우리가 어디가 어떻게 문제가 생겨서 털렸는지, 또 뒷수습을 어떻게 해야 하는지조차도 몰라요.\n그런데 로그프레소 같은 ‘심(SIEM)’을 도입하면, 로그를 다 모아보게 되잖아요. 그러면 뭐가 중요한 정보고, 우리 회사가 어떻게 위험에 노출되어 있는지 알 수 있는 경우가 많아요. 여러 로그 중에서, 가량 어떤 PC가 관리가 잘 안되고 있는지, AWS면 계정이 어떤 점에서 관리가 잘 안되고 있는지, 즉각적으로 로그를 통해서 알 수 있죠.\n이승환: 결국 ‘진단’의 영역인데, 그럼에도 ‘뚫리지 않는 것’이 중요하잖아요?\n구동언: 제가 보안쟁이로서 드릴 수 있는 말씀은, 보안에 ‘절대’는 없어요. 할 수 있는 한, 위험을 계속 감소시켜 나가는 거죠. SW는 완전한 존재가 아니에요. 출시 당시에는 생각하지 못했던 보안 관련 문제들이 계속 발견돼요. 아이폰 같은 경우에도 심각한 보안 취약점이 많이 있어요. 애플이 수많은 시큐리티 전문가들을 채용하고, 이 사실을 알아내서 바로바로 패치해서 보안 문제가 겉으로 드러나지 않는 거죠.\n이게 끝이 아니에요. IT 회사의 서비스와 보안이 바뀌면, 이에 맞춰 공격자들의 유형도 계속 바뀌어나가요. 그러면 보안 회사는 또 거기에 맞춰서 새롭게 업데이트하고요. 그렇기에 저희도 끊임없이 기능과 콘텐츠를 업데이트하고 있고요. 그래서 작지만 중요한 일이 ‘SW 업데이트’를 챙기는 겁니다. SW 패치 안해서 터지는 보안 사고가 절대 적지 않아요.\n귀찮다고 하지 말고 꾸준히 후다닥 하는 게 중요하다\n이승환: 저도 앞으로 업데이트를 열심히 하겠습니다…\n구동언: 그래서 보안 전문가들은 끊임없이 스터디해야 해요. 저희도 종종 ‘CTI(Cyber Threat Intelligence; 사이버 위협 인텔리전스) 리포트’라는 걸 내요. 최근 보안 위협 트렌드와, 국내외 보안 사고 사례를 분석해요. 예를 들어 최근 분석한 사례로는 ‘도로주행 위반 과징금 납부 고지서’ 이런 문자나, ‘텔레그램 정책 위반이니 인증 바랍니다’ 이런 메시지가 오잖아요? 대부분 스마트폰에 악성 앱을 설치하도록 유도해서아서 스마트폰의 정보를 털어가죠. 이렇게 나날이 발전하는 공격 수단을 지속적으로 업데이트할 필요가 있습니다.\n \n저렴한 가격에 주요 보안 SW를 연결 가능\n이승환: 이제 로그프레소가 어떤 일을 하는지는 잘 알겠습니다. 그러면 사람들이 묻겠죠. 얼마예요?\n구동언: 사실 기업마다 보안 위협이 크게 다르니 금액으로 딱 말하기는 힘들고요. 글로벌에서 제일 잘나가는 툴로 ‘데이터독’, ‘수모로직’, ‘스플렁크’ 등이 있는데요. 이들보다는 30~40% 가량 저렴합니다. 여기에 국내에서 직접 기술 지원이 가능한 것도 장점이고요.\n이승환: 네, 그래서 얼마예요?\n구동언: 얼마냐고요. 저기, 월 144만 원부터…\n이승환: 에… 그렇게 쌀 수가 있나요?\n구동언: 저희가 모니터링하는 로그의 양이 가장 적은 회사 기준이에요. 또 로그프레소 SW만 쓰는 경우이고요. 컨설팅이 필요하거나 구축 엔지니어가 들어가는 경우엔 별도 비용이 발생하고요.\n이승환: 구축 엔지니어가 필요하다면, 그쪽 서버 들어가서 직접 뭘 만져야 하나요?\n구동언: 서버에 들어가서 만지는건 아니구요, 우리가 이미 다양한 보안 솔루션을 쓰고 있을 거 아니예요? 이런 솔루션 로그를 어떻게 가져올지, 어떤 로그를 볼지에 대한 통합 작업을 하는 겁니다.\n이승환: 그러면 기존 보안 솔루션이랑 API 엄청 연결해야 하겠는데요.\n구동언: 네, 그래서 저희가 ‘로그프레스 얼라이언스’를 시작하고, 다양한 국내 보안 회사들과 공식적인 협업 체계를 만들어가고 있습니다. 더는 1개의 보안 회사 혼자 잘해서 뭔가 좋은 결과를 만들기가 어려운 시대예요. 예전에는 다양한 보안 솔루션 간 연결이 크게 중요하지 않았지만, 클라우드/AI 시대에는 여러 단위 보안 솔루션들과 좀 더 타이트하게 하나의 시스템처럼 연결되어 있어야 하거든요. 그러려면 보안 기업 간 협력이 필수적이고요.\n로그프레소는 여러 보안업체와 함께하고 있다\n이승환: 음… 그냥 API 연결하는 거랑 어떤 차이가 있죠?\n구동언: API만 있으면 연결은 됩니다. 하지만 실제 현장에서 제대로 된 보안 지표를 뽑아내려면 추가적인 노력이 많이 필요합니다. 반대로 로그프레소 얼라이언스는 양사가 미리 연동 방식을 맞춰놓습니다. 그래서 고객은 전기 콘센트에 플러그 꽂듯이, 그냥 연결만 하면 바로 필요한 보안 통제 항목을 확인할 수 있습니다. 사실 ‘국산 보안 솔루션은 연결하기 어렵다’는 편견이 있었는데, 저희는 이런 인식을 깨기 위해 여러 회사와 협력하고 있습니다. 현재도 SaaS용 PC 보안 ‘엑소스피어’, Criminal IP를 서비스하는 ‘AI 스페라’를 포함해 13개 이상의 국내 보안 기업과 긴밀하게 협업하고 있습니다.\n이승환: 그러면 개별 SW와의 연결은 어떻게 하나요? 어지간한 회사는 수십 개 쓰는데, 그 수백 개의 SW와 모두 연결하나요?\n구동언: 말씀하신 것 처럼 기업들은 구글 워크스페이스, MS 365, 슬랙처럼 다양한 솔루션을 수십 가지 쓰고, 각각 다 잠재적인 위험 요소가 됩니다. 이메일에 2차 인증이 안 걸려있거나, 구글 드라이브 파일을 외부에서 다운로드 가능하게 설정해 둔 채로 사고가 나는 경우가 적지 않습니다.\n그래서 저희는 “로그프레소 스토어”를 통해 200개 이상의 보안 솔루션과 서비스를 연동할 수 있도록 지원합니다. 스마트폰에 앱 설치하듯, 고객은 새로운 SaaS나 보안 솔루션을 도입해도, 연동 부담 없이 빠르게 확장할 수 있습니다.\n스토어를 통해 주요 SW와 연동 가능하다\n \nAI를 통해 더욱 정교한 보안 이뤄나갈 것\n이승환: ‘이런 기업에 꼭 로그프레소가 필요하다’는 회사가 있다면?\n구동언: 꼭 저희 로그프레소가 아니라도, 이런 로그 모니터링 SW는 무조건 써야죠. 스타트업을 예로 들면, 다 AWS나 애저를 쓰잖아요. 근데 AWS 내의 액세스 키로 누군가가 잘못 로그인을 했을 때 이를 즉각적으로 알려면, 그리고 내 AWS 엑세스 키가 어디서 어떻게 사용되고 있는지 알려면, 당연히 모니터링이 필수죠.\n그리고 ‘실시간 모니터링’이 중요한 게, 기업은 계속 변하잖아요? 새로운 IT 인프라와 SW도 지속적으로 도입하게 되죠. 작게는 신입 노트북 새로 사주는 것도 인프라의 변화예요. 그런 변화 속에서 사소한 위험이 생기게 되고, 이가 보안 사고로 이어질 때가 있거든요. 저희는 클라우드 서비스이니만큼, 세세한 변화에 맞춰 지속적으로 모니터링해준다는 점에서도 기업의 위험을 낮춰주죠.\n결국 이제 모두가 IT로 연결돼 있으니 모든 기업이 쓰라는 이야기(…)\n이승환: 남들 다 AI 도입한다는데, 로그프레소도 마찬가지인가요?\n구동언: 아주 중요하게 보고 있습니다. 저희는 ‘보안의 자율주행’이라고 이야기하는데, AI 기반으로 그동안 인간이 해왔던 것들을 자동 분석하는 것까지도 개발 중입니다. 사고와 사고에 대한 후속 조치까지, 모두 AI가 자동으로 내놓는 게 저희의 장기적 비전인 거죠.\n이승환: 굳이 AI 안 써도 되지 않나요? 어차피 패턴이란 게 있다면…\n구동언: 기존에 사용하던 탐지 패턴으로 정상과 비정상을 구분하는 건 이미 한계에 달했어요. 그렇기 때문에 AI를 적극적으로 활용해야 정상적인 인간의 행위인지, 공격자인지, 봇인지 빠르게 탐지하고 해결책을 찾아낼 수 있습니다. 저희가 궁극적으로 가고자 하는 길은, 보안 솔루션을 다 API로 연결하고, 위험을 찾아내고 대응하는 작업들까지 AI로 자동화하려고 하는 거예요. 로그프레소의 AI가 위험을 탐지하고, 검증해서 대응할 수 있게 하고, 고객은 중요한 의사결정에 집중할 수 있도록 할 겁니다.\n이제 AI도 활용하고 있는 로그프레소\n이승환: 감사합니다. 마지막으로 한마디 부탁 드립니다.\n구동언: 보안은 뭐랄까 끝없는 술래잡기입니다. 끝나지 않을 게임에서 한발 앞서 움직일 수 있도록 돕는 파트너가 되어드리겠습니다.\n☞ 로그프레소 웹사이트 바로가기\n☞ 로그프레소에 바로 문의하기",
        "enclosure": {
          "type": "image/jpeg",
          "length": "0",
          "url": "https://ppss.kr/wp-content/uploads/2025/09/19-3.jpg"
        },
        "dc:creator": "리승환",
        "content": "10년간 매해 성장하고 퇴사율 10%가 안 되는 보안 기업 이승환: 자기 소개 부탁드립니다. 구동언: 사이버 보안 기업 ‘로그프레소’ 구동언 전무입니다. 서비스 명도 ‘로그프레소’예요. 창업한 지는 만으로 12년이 넘었습니다. 이승환: 일단 회사 평균 연봉이 6천 넘게 나오는데, 굉장히 좋은 회사 같군요. 구동언: 아니, 어디를 보고 그런 걸… 일단 저희 주 경쟁 대상이 글로벌 보안 SW다 보니, [&#8230;]",
        "contentSnippet": "10년간 매해 성장하고 퇴사율 10%가 안 되는 보안 기업 이승환: 자기 소개 부탁드립니다. 구동언: 사이버 보안 기업 ‘로그프레소’ 구동언 전무입니다. 서비스 명도 ‘로그프레소’예요. 창업한 지는 만으로 12년이 넘었습니다. 이승환: 일단 회사 평균 연봉이 6천 넘게 나오는데, 굉장히 좋은 회사 같군요. 구동언: 아니, 어디를 보고 그런 걸… 일단 저희 주 경쟁 대상이 글로벌 보안 SW다 보니, […]",
        "guid": "https://ppss.kr/?p=270658",
        "categories": [
          "IT",
          "스타트업",
          "인터뷰"
        ],
        "isoDate": "2025-09-19T01:26:54.000Z"
      }
    ]
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "eBay News Team",
        "title": "eBay Honored at Fast Company's Innovation by Design Awards",
        "link": "https://innovation.ebayinc.com/stories/ebay-honored-at-fast-companys-innovation-by-design-awards/",
        "pubDate": "Thu, 18 Sep 2025 00:00:00 -0700",
        "dc:creator": "eBay News Team",
        "content": "<div style=\"margin-bottom: 10px;\"><img src=\"https://static.ebayinc.com/static/assets/Uploads/Blog/Posts/_resampled/FitWzIwMCwxMTNd/FASTCO-Image-01.jpg?fs=faaa40e77ce81737\" width=\"200\" height=\"113\" alt=\"eBay Honored at Fast Company&#039;s Innovation by Design Awards\" /></div><div>The eBay Evo brand and design system received three honorable mentions.</div>",
        "contentSnippet": "The eBay Evo brand and design system received three honorable mentions.",
        "guid": "https://innovation.ebayinc.com/stories/ebay-honored-at-fast-companys-innovation-by-design-awards/",
        "categories": [
          "article"
        ],
        "isoDate": "2025-09-18T07:00:00.000Z"
      }
    ]
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Maria Sharobaeva",
        "title": "JetBrains Academy – September Digest",
        "link": "https://blog.jetbrains.com/education/2025/09/19/jetbrains-academy-september/",
        "pubDate": "Fri, 19 Sep 2025 11:02:32 +0000",
        "content:encodedSnippet": "Do you remember, dancin’ in September? 🎶 This September, let JetBrains keep the rhythm of your studies strong with free JetBrains IDEs and tools for study, a brand-new collaboration between AWS and JetBrains Academy, exclusive opportunities for school students, and more. Ready to groove into learning? \nFree tools and prizes for students\nJetBrains Student Pack\nGet the full suite of JetBrains IDEs – IntelliJ IDEA, PyCharm Pro, CLion, DataGrip, and more – plus AI Assistant, Junie, Academy courses, and essential plugins, free for your entire study period.\nApply now\n                                                    \nShare Your Story, Win Big\nAlready using the Student Pack? Tell us about your coding journey. Prizes include a MacBook Air M4 and a popcorn machine! \nLearn more\n                                                    \nFree PyCharm Pro\nDiscover the benefits of PyCharm Pro for students. Get a complete set of tools for learning, projects, and your future career in tech at no cost.\n Learn more\n                                                    \nNew courses\n JetBrains Academy and AWS Skill Paths\nThis October, JetBrains Academy and AWS are launching joint Skill Paths that include IDE projects, AWS video lessons, and hands-on cloud labs. Join the waitlist to get early access, 10% off a Skill Path Pro subscription, and a free three-month PyCharm Pro subscription at launch. \nSave your spot\n                                                    \n Data Visualization in Python\nLearn how to turn data into insights with this beginner-friendly, practical, and career-relevant course. Use Python, Matplotlib, and Seaborn to build stunning charts – from simple line plots to complex heatmaps.\nStart learning\n                                                    \nOpportunities for secondary school students\nMath Club\n Sharpen your problem-solving skills with top instructors. Each week features 10–15 fun, progressively more challenging problems and a 90-minute live session every Saturday. The top students earn 5 points toward the entrance test for the fully funded Computer Science and AI BSc at Neapolis University Pafos. The club starts in October – don’t miss out!\nJoin the club\n                                                    \nAI Club\nCurious about AI or aiming for the International Olympiad in AI (IOAI)? This free club is for you. Get expert guidance, weekly live sessions, and practical homework tasks. Register now and start learning in October.\nJoin now\n                                                    \nCoding Club\nReady for competitive programming? Practice online, for free, and in a structured way with curated Codeforces problems each week. The club is perfect for school students and starts in October.\nRegister now  \n                                                    \nYouth Coding Challenge Competition\nTake part in the 2025 JetBrains Youth Coding Challenge! Winners will be invited to the prestigious Algorithm and Code Training School (ACTS) camps in Romania. Registration closes October 28, 2025.\nRegister now\n                                                    \nACTS Online\nTake part in a four-day intensive online camp for students aged 13–19 who want to level up their competitive programming skills.\nLearn more\n                                                    \nACTS 2026.1\nCompete with international champions and receive expert feedback at ACTS Romania. It’s perfect for students aged 16–19 who have competition or olympiad experience and aim to excel globally. 60 spots available. Fee: €100.\nRead more",
        "dc:creator": "Maria Sharobaeva",
        "content": "Do you remember, dancin’ in September? 🎶 This September, let JetBrains keep the rhythm of your studies strong with free JetBrains IDEs and tools for study, a brand-new collaboration between AWS and JetBrains Academy, exclusive opportunities for school students, and more. Ready to groove into learning?",
        "contentSnippet": "Do you remember, dancin’ in September? 🎶 This September, let JetBrains keep the rhythm of your studies strong with free JetBrains IDEs and tools for study, a brand-new collaboration between AWS and JetBrains Academy, exclusive opportunities for school students, and more. Ready to groove into learning?",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=635070",
        "categories": [
          "digest",
          "jetbrains-academy",
          "newsletter"
        ],
        "isoDate": "2025-09-19T11:02:32.000Z"
      },
      {
        "creator": "Maria Kosukhina",
        "title": "IntelliJ IDEA 2025.2.2 Is Out!",
        "link": "https://blog.jetbrains.com/idea/2025/09/intellij-idea-2025-2-2/",
        "pubDate": "Fri, 19 Sep 2025 09:53:11 +0000",
        "content:encodedSnippet": "IntelliJ IDEA 2025.2.2 has arrived with several valuable fixes.\nYou can update to this version from inside the IDE, using the Toolbox App, or using snaps if you are a Ubuntu user. You can also download it from our website.\nHere are the most notable updates included in this version:\nThe Run Maven Build icon is once again available in the Maven panel toolbar. [IDEA-376149] \nRemote SSH external tools now work as expected. [IJPL-200406]  \nThe IDE again correctly parses environment variables with semicolon values pasted in the Run/Debug dialog. [IJPL-200754] \nThe IDE now properly handles MAVEN_OPTS environment variables. [IDEA-368366] \nOn Windows, the Find in Files dialog again works as expected, closes correctly, and no longer shows a persistent green area. [IJPL-162798] \nSeveral issues with the terminal and WSL have been fixed. [IJPL-201390], [IJPL-183051] \nThe terminal now starts correctly and works as expected on Windows 10. [IJPL-200939] \nIt is once again possible to switch between split editors using the Switch popup. [IJPL-185383] \nThe distributionUrl for Gradle 9 now contains the proper version when creating a new project, preventing sync failures. [IDEA-378326]\n\n\n\n\nTo find out more details about the issues resolved, please refer to the release notes.\nIf you encounter any bugs, please report them to our issue tracker.\nHappy developing!",
        "dc:creator": "Maria Kosukhina",
        "content": "IntelliJ IDEA 2025.2.2 has arrived with several valuable fixes. You can update to this version from inside the IDE, using the&#160;Toolbox App, or using snaps if you are a Ubuntu user. You can also download it from our&#160;website. Here are the most notable updates included in this version: To find out more details about the [&#8230;]",
        "contentSnippet": "IntelliJ IDEA 2025.2.2 has arrived with several valuable fixes. You can update to this version from inside the IDE, using the Toolbox App, or using snaps if you are a Ubuntu user. You can also download it from our website. Here are the most notable updates included in this version: To find out more details about the […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=633633",
        "categories": [
          "releases",
          "bug-fix-update",
          "intellij-idea",
          "intellij-idea-2025-2"
        ],
        "isoDate": "2025-09-19T09:53:11.000Z"
      },
      {
        "creator": "Mehul Harry",
        "title": "Announcing: JetBrains .NET Days Online 2025",
        "link": "https://blog.jetbrains.com/dotnet/2025/09/18/announcing-jetbrains-net-days-online-2025/",
        "pubDate": "Thu, 18 Sep 2025 18:59:30 +0000",
        "content:encodedSnippet": "A free, online event for the .NET community.\nJetBrains .NET Days Online returns for two focused days of practical talks, live demos, and real-world tips from community speakers and the JetBrains .NET team.\nRegister now →\nEvent basics\nDates: 8–9 October, 2025\nLocation: Online (livestream with real-time chat)\nTime zone: Central European Summer Time – CEST (UTC+2:00)\nAll times listed on the agenda are in CEST.\nCost: Free\nRecordings: Sessions will be available on demand after the event\nRegistration: https://lp.jetbrains.com/dotnet-days-2025\n\n\n\n\nAgenda highlights\nHere’s a preview of what we’ve got in store for you:\nEffortless Distributed Systems With .NET Aspire – Jason Taylor\nClean Architecture With ASP.NET Core – Steve Smith\n#nullable enable – Unlock the Power of C# Nullability – Maarten Balliauw\nChoosing the Right Messaging Solution for Your Architecture (message queues) – Poornima Nayar\n.NET Apps Everywhere – Steve Bilogan (Uno Platform)\nTest Driven Development with Blazor – Scott Sauber\nChange Is Inevitable: Versioning Event-Driven Systems – Laila Bougria\nBuilding Scalable GenAI Apps Using Semantic Kernel and .NET Aspire – Mehdi Hadeli\nFunctional Programming in F#: Fad or Fabulous? – Ken Bonny\nHow We Found a 2 GB/Day Leak in 5 Minutes – dotMemory Meets Akka.NET – Aaron Stannard\nEverything You (Don’t) Want to Know About async/await in C# – Stefan Pölz\nConquering Distributed Cloud Logging Without Breaking the Bank: Your Step-by-Step Guide – Stathis Fylaktos\nDoes GenAI Mean the Death of Test-Driven Development (TDD) – Johan Smarius\nHow to join\nRegister: https://lp.jetbrains.com/dotnet-days-2025\nTune in live and join the discussion via our real-time chat\nStay in the loop\nFollow @JetBrainsRider and @ReSharper on X/Twitter, or watch this blog for updates.",
        "dc:creator": "Mehul Harry",
        "content": "A free, online event for the .NET community. JetBrains .NET Days Online returns for two focused days of practical talks, live demos, and real-world tips from community speakers and the JetBrains .NET team. Register now → Event basics Registration: https://lp.jetbrains.com/dotnet-days-2025 Agenda highlights Here’s a preview of what we’ve got in store for you: How to [&#8230;]",
        "contentSnippet": "A free, online event for the .NET community. JetBrains .NET Days Online returns for two focused days of practical talks, live demos, and real-world tips from community speakers and the JetBrains .NET team. Register now → Event basics Registration: https://lp.jetbrains.com/dotnet-days-2025 Agenda highlights Here’s a preview of what we’ve got in store for you: How to […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=626529",
        "categories": [
          "net-tools",
          "ai",
          "ai-assistant",
          "dotcover",
          "dotmemory",
          "dotpeek",
          "dottrace",
          "events",
          "resharper",
          "rider",
          "testing",
          "net-days-online",
          "conference",
          "webinars"
        ],
        "isoDate": "2025-09-18T18:59:30.000Z"
      },
      {
        "creator": "Sasha Ivanova",
        "title": "More Updates and Fixes for ReSharper and Rider 2025.2",
        "link": "https://blog.jetbrains.com/dotnet/2025/09/18/resharper-rider-2025-2-2/",
        "pubDate": "Thu, 18 Sep 2025 14:49:19 +0000",
        "content:encodedSnippet": "A second set of updates and bug fixes for the 2025.2 release of ReSharper and Rider has just been made public. \nLet’s take a look at what’s been improved.\nReSharper 2025.2.2\nTo make your transition to Visual Studio 2026 seamless, ReSharper now installs a lightweight migration extension bundled with the product. This extension will be carried over automatically by Visual Studio when you upgrade to the 2026 release. You will then be able to launch the ReSharper installer for Visual Studio 2026 from the Extensions menu by selecting ReSharper Installer | Install ReSharper.\nNotable fixes:\nWe’ve introduced support for xUnit v3 3.x, so you can now run tests without compatibility issues when upgrading from earlier xUnit versions. [RSRP-501333] \nThe Search Everywhere dialog now auto-fills with the text selected in the editor in Out-of-Process mode. [RSRP-500894]\nThere are no more false Cannot resolve symbol warnings for valid XML documentation references in C# code. [RSRP-501683]\nLicenses from the License Vault are once again applied automatically on Visual Studio startup. [RSRP-500218]\nRider no longer incorrectly reports valid symbols as unresolved after updating to 2025.2.1, both in Visual Studio and when running InspectCode. [RSRP-501671]\n\n\n\n\nFor the full list of changes included in this build, please refer to our issue tracker.\nDownload ReSharper 2025.2.2\n                                                    \nRider 2025.2.2 \nJunie is out of Beta\nThe AI coding agent by JetBrains now provides stable support across all languages and technologies supported in Rider.\n.NET Aspire support\nThe bundled .NET Aspire plugin now comes with the Add .NET Aspire Orchestration action for creating, running, and managing Aspire projects directly from the IDE.\nMajor fixes included in this build:\nThe working directory for .NET Run configurations now correctly points to the output directory (OutDir) instead of the project root when using launchSettings.json. [RIDER-128989]\nThe Deployment mode dropdown in Run configurations no longer disappears when new configurations are added. [RIDER-128856]\nNo more crashes when using autocomplete in C# code. [RIDER-129917]\nThere are no more false Cannot resolve symbol warnings for valid XML documentation references in C# code. [RSRP-501683]\nThe Flip context action now works correctly for method parameters in both declarations and invocations. [RIDER-126552]\n.uprojectdirs files now load correctly and no longer cause Rider to get stuck during the Loading projects step. [RIDER-129467]\nRunning and debugging on Xbox once again works reliably. [RIDER-129942]\nFull line code completion (FLCC) no longer duplicates already typed symbols in the editor. [RIDER-122389]\nScratches and Consoles files can now be added to Junie contexts without issues. [RIDER-128529] \n\n\n\n\nFor the full list of changes included in this build, please refer to our issue tracker.\nDownload Rider 2025.2.2",
        "dc:creator": "Sasha Ivanova",
        "content": "A second set of updates and bug fixes for the 2025.2 release of&#160;ReSharper&#160;and&#160;Rider&#160;has just been made public.&#160; Let’s take a look at what’s been improved. ReSharper 2025.2.2 To make your transition to Visual Studio 2026 seamless, ReSharper now installs a lightweight migration extension bundled with the product. This extension will be carried over automatically by [&#8230;]",
        "contentSnippet": "A second set of updates and bug fixes for the 2025.2 release of ReSharper and Rider has just been made public.  Let’s take a look at what’s been improved. ReSharper 2025.2.2 To make your transition to Visual Studio 2026 seamless, ReSharper now installs a lightweight migration extension bundled with the product. This extension will be carried over automatically by […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=627372",
        "categories": [
          "net-tools",
          "resharper",
          "rider",
          "junie"
        ],
        "isoDate": "2025-09-18T14:49:19.000Z"
      },
      {
        "creator": "Olga Bedrina",
        "title": "8 Common DevOps Problems And How to Solve Them With GoLand",
        "link": "https://blog.jetbrains.com/go/2025/09/17/8-common-devops-problems-and-how-to-solve-them-with-goland/",
        "pubDate": "Wed, 17 Sep 2025 18:15:54 +0000",
        "content:encodedSnippet": "One of the most popular posts on the /devops subreddit says, “After 24 years in IT, I’m done. I don’t want to debug another YAML file. This is not how I foresee spending my life.”\nDevOps can be frustrating, and the 3,000+ people who upvoted that post clearly agree. It doesn’t have to be this painful though. With the right tools and workflows, many of the struggles that DevOps engineers face daily can be simplified or even eliminated.\nHere are eight common DevOps problems and practical ways to solve them using GoLand, the JetBrains IDE for development in Go and DevOps work.\nWhy GoLand for DevOps?\nDevOps engineers traditionally have to manage a wide range of various tools, all with their own complex setups and features. Kubernetes, Terraform, Docker, Helm: no wonder articles like 73 Most Useful DevOps Tools in 2025 exist.\nAccording to the Developer Ecosystem: Data Playground, Go has become the go-to language for DevOps work, with over 760,000 DevOps engineers using it as their primary programming language. This makes sense, since Kubernetes and most modern DevOps tools are built in Go. When you need custom scripts, CLIs, or extensions, Go is the natural choice.\n\n\n\n\n\nGoLand provides direct access to the terminal, Kubernetes, Docker, and HTTP Client. The goal is to help engineers debug, deploy, and manage infrastructure faster, with less chaos and more confidence.\n\n\n\n\n\nNow let’s look at the specific problems that make DevOps work frustrating and how to fix them.\nProblem 1: Fixing broken Kubernetes deployments takes too many steps\nImagine deploying a new version of a service, but the container image itself is broken. The pod starts, it immediately fails, and you get errors in the logs.\nIn a typical workflow, you’d switch between several tools:\nCheck the logs with kubectl logs\nEdit the deployment manifest in a text editor\nReapply the manifest with kubectl apply\nCheck the pod status again in kubectl get pods to confirm everything is healthy\nThis constant switching between terminal, editor, and Docker tooling slows down recovery and makes it harder to stay focused on solving the issue.\nSolution: Fix issues in GoLand\nGoLand streamlines this entire troubleshooting loop inside one workspace. For example, imagine deploying a Go backend service connected to a Postgres database, where the pod crashes immediately upon startup. In GoLand, the process is much simpler because you can:\nOpen the logs directly in GoLand’s Kubernetes log viewer and spot the error – in this case, a misconfigured port number.\nEdit the deployment YAML in the IDE, with schema validation to avoid typos.\nReapply the fixed manifest directly from the Kubernetes integration.\nConfirm the pod starts correctly by watching its status turn green in the resources view.\nRe-check the logs inline to verify that the application is now running and connected to Postgres without errors.\nWith GoLand, you don’t have to jump between terminal, editor, and dashboards. Diagnosing, fixing, and redeploying all happen inside the IDE, helping you resolve issues quickly and keep services online.\n\n\n\n\nProblem 2: Manual and error-prone Kubernetes secret management\nManaging secrets in Kubernetes often requires a tedious workflow: run kubectl to fetch the secret, decode it with base64, make the necessary edits, re-encode it, and then apply it back. These steps are easy to mess up, especially when responding to incidents and emergencies.\nSolution: Edit secrets directly in GoLand\nGoLand’s bundled Kubernetes plugin lets you open secrets securely as plain text and edit them directly. No encoding steps, no command line switching: Simply open the secret, make your changes, and save them.\nAnd because this functionality is built and maintained by JetBrains, you can rely on the same level of security and quality as the rest of the IDE, without having to depend on unverified third-party plugins.\n\n\n\n\nProblem 3: Inefficient Kubernetes context and namespace switching\nMost engineers juggle multiple clusters and namespaces every day. Some resort to external apps like Docker Desktop just to switch the active cluster. Others rely on the terminal, repeatedly running kubectl config use-context and kubectl config set-context --namespace=….\nBoth approaches are repetitive, slow you down, and one wrong command can easily put you in the wrong cluster – something no one wants to happen in production.\nSolution: Switch contexts and namespaces in GoLand\nGoLand’s Kubernetes UI makes context and namespace switching faster and safer. You can now switch between them directly from a dropdown in the IDE, with clear visual indicators showing the active cluster and namespace.\nThis reduces the chance of accidentally applying changes to the wrong environment and eliminates repetitive terminal commands.\n\n\n\n\nProblem 4: Too much DevOps time is wasted on repetitive tasks\nMany DevOps tasks can be quite repetitive: writing Terraform templates, piecing together long cloud CLI commands, parsing JSON files, or combing through endless pod logs.\nThese tasks aren’t complex, but they are time-consuming, tedious, and take attention away from solving real problems.\nSolution: Let AI Assistant handle the repetitive work\nAI Assistant, which comes with GoLand (and other JetBrains IDEs) can help engineers offload mundane tasks so they can focus on what matters. Some use cases include:\nGenerating infrastructure code such as Terraform snippets or YAML manifests instead of writing boilerplate by hand.\nCreating cloud CLI commands and scripts on demand, e.g. finding AWS autoscaling groups and ECS services across regions, scaling them up, and triggering new deployments with a single prompt.\nAnalyzing logs automatically, highlighting suspicious entries, frequent errors, or summaries.\nHandling JSON parsing and data transformations automatically – tasks that would otherwise require writing ad-hoc scripts\nBy delegating routine work to AI, engineers save time on the “boring stuff” and keep their focus on solving critical incidents, improving infrastructure, and shipping value to users.\nUnlike using external AI tools in a separate window, GoLand’s AI Assistant keeps everything in one place, helping you avoid context switching.\n\n\n\n\nProblem 5: Managing infrastructure as code across different tools\nWorking with infrastructure as code means bouncing between different formats and technologies constantly – Terraform for provisioning, Helm charts for packaging and templating, and Kubernetes YAML for deployment.\nWhile you can add plugins in other editors, support is often inconsistent. Autocompletion may work for one tool but not another, validation can be inconsistent, and switching between terminal and editor tabs quickly gets messy.\nSolution: First-class support for Terraform, Helm, and Kubernetes in GoLand\nGoLand provides native, consistent support for the key technologies DevOps teams rely on:\nTerraform: advanced autocompletion, on-the-fly validation, and navigation between resources.\nHelm charts: templating support, syntax highlighting, and smart YAML editing inside templates.\nKubernetes manifests: schema validation, quick fixes, and integration with the Kubernetes plugin for applying actions directly.\nInstead of piecing together several plugins, you get a single environment where IaC files, CLI workflows, and cluster operations all work together out of the box.\n\n\n\n\nProblem 6: Difficulty tracking logs across services during incidents\nWhen something breaks in Kubernetes, logs are often the first place to look. Without centralized log aggregation, engineers use kubectl logs combined with grep or have to copy-paste outputs into a local editor.\nWith multiple pods and a high log volume, it’s easy to miss critical lines, especially when you’re searching for patterns like status codes or error messages under time pressure.\nSolution: Stream and filter logs directly in GoLand\nThe Kubernetes plugin that is bundled in GoLand provides a built-in log viewer that makes troubleshooting faster. With it, you can:\nStream logs from pods directly in the IDE.\nUse search, filtering, and highlighting to quickly spot relevant entries.\nParse structured logs (like JSON) and filter by fields: For example, surface only rows with status values greater than 500\nThis is especially valuable for teams that don’t yet use centralized log collectors (like Loki or Kibana).\n\n\n\n\nProblem 7: Limited visibility of CI/CD pipeline configs\nCI/CD pipelines get complicated quickly. Editing .gitlab-ci.yml or GitHub Actions workflows in plain text editors or web interfaces makes it easy to miss issues. Maybe a variable name has a typo, or indentation is wrong, and you only discover it after the pipeline fails, or a stage doesn’t exist, and you try to reference to it later.\nSolution: CI/CD pipeline editing with validation in GoLand\nGoLand helps catch issues before they hit runners. When editing GitHub Actions or GitLab CI configs, you get:\nAutocompletion for jobs, stages, and variables.\nInline documentation right in the editor.\nSchema validation highlighting mistakes as you type.\nCompared to terminal editing or web interfaces, GoLand provides immediate feedback, so you can spot mistakes before they waste a pipeline run.\n\n\n\n\nFor TeamCity users, the TeamCity plugin lets you browse builds, check logs, and connect configs directly to the IDE.\nProblem 8: Inconvenient tracking of multiple port forwards\nAccessing internal services in Kubernetes usually means running kubectl port-forward pod-name 8080:80 from the terminal. It works but ties up a terminal session and makes tracking active forwards difficult. It’s easy to forget stopping processes or mix up port numbers.\nSolution: Port forwarding made easier in GoLand\nGoLand’s Kubernetes integration handles port forwarding directly from the IDE. Right-click a pod or service to create a port-forward with a few clicks. Starting from GoLand 2025.3, it’ll also be possible to do it from the editor.\nActive forwards are shown in the IDE, so you always know which services are accessible and on which ports. As a result, your terminal stays available for other tasks.\nThis makes common scenarios faster and easier to manage, such as testing service endpoints locally, validating patches, or investigating incidents without public exposure.\n\n\n\n\nConclusion\nDevOps doesn’t have to feel like debugging YAML files forever. While toolchain complexity isn’t going away, having the right IDE can be a huge help when managing all the numerous tools that DevOps engineers have to handle daily.\nGoLand consolidates many common DevOps workflows into a single environment, reducing context switching and making infrastructure work more manageable. Think of it as a cockpit for your infrastructure: everything you need to see and control, without leaving your seat.\nReady to spend less time juggling tools and more time solving actual problems? GoLand offers a 30-day free trial with full access to all DevOps features.\nDownload GoLand",
        "dc:creator": "Olga Bedrina",
        "content": "One of the most popular posts on the /devops subreddit says, “After 24 years in IT, I&#8217;m done. I don&#8217;t want to debug another YAML file. This is not how I foresee spending my life.” DevOps can be frustrating, and the 3,000+ people who upvoted that post clearly agree. It doesn&#8217;t have to be this [&#8230;]",
        "contentSnippet": "One of the most popular posts on the /devops subreddit says, “After 24 years in IT, I’m done. I don’t want to debug another YAML file. This is not how I foresee spending my life.” DevOps can be frustrating, and the 3,000+ people who upvoted that post clearly agree. It doesn’t have to be this […]",
        "guid": "https://blog.jetbrains.com/?post_type=go&p=621615",
        "categories": [
          "features",
          "devops",
          "goland"
        ],
        "isoDate": "2025-09-17T18:15:54.000Z"
      },
      {
        "creator": "Siva Katamreddy",
        "title": "Spring Debugger: ApplicationContext at Your Fingertips",
        "link": "https://blog.jetbrains.com/idea/2025/09/spring-debugger-applicationcontext-at-your-fingertips/",
        "pubDate": "Wed, 17 Sep 2025 11:14:19 +0000",
        "content:encodedSnippet": "IntelliJ IDEA has great support for debugging Java and Kotlin applications. But if you are building Spring Boot applications, you may want to access Spring components along with their metadata. That’s where the Spring Debugger plugin comes in. It makes life easier by letting you explore and use the entire Spring ApplicationContext right from your debugger.\nLet’s dive into how this powerful plugin can revolutionize your debugging workflow.\n\n\nSpring Debugger: ApplicationContext at Your Fingertips \n\n\n\nBeyond the Scope: Access Any Spring Bean\nImagine you are building a bookmarks management application using Spring Boot and you have a Spring bean BookmarkService with createBookmark() method as follows:\n@Service\npublic class BookmarkService {\n   private final BookmarkRepository bookmarkRepository;\n   private final CategoryService categoryService;\n\n   public BookmarkService(BookmarkRepository bookmarkRepository,\n                          CategoryService categoryService) {\n       this.bookmarkRepository = bookmarkRepository;\n       this.categoryService = categoryService;\n   }\n\n   @Transactional\n   public Bookmark createBookmark(CreateBookmarkCmd cmd) {\n       var bookmark = new Bookmark(cmd.title(), cmd.url());\n       if(cmd.categoryName() != null) {\n           Category category = categoryService.findByName(cmd.categoryName()).orElse(null);\n           if (category == null) {\n               category = categoryService.createCategory(new Category(cmd.categoryName()));\n           }\n           bookmark.setCategory(category);\n       }\n       bookmarkRepository.save(bookmark);\n       return bookmark;\n   }\n}\nThe BookmarkService has BookmarkRepository and CategoryService beans injected. While creating a bookmark, we first check if there is a Category exists with the given name. If not, we will create a new Category and then save Bookmark.\nThe CategoryService is also a Spring bean with findByName(String) method as follows:\n@Service\npublic class CategoryService {\n   private final CategoryRepository categoryRepository;\n\n   public CategoryService(CategoryRepository categoryRepository) {\n       this.categoryRepository = categoryRepository;\n   }\n\n   @Cacheable(\"category-by-name\")\n   public Optional<Category> findByName(String name) {\n       return categoryRepository.findByNameEqualsIgnoreCase(name);\n   }\n}\nThe findByName() method is annotated with @Cacheable(\"category-by-name\") to cache the method result so that if you call this method with the same input it will return the cached result instead of executing the method logic again.\nNow, Imagine you’re debugging create bookmark use case. You hit a breakpoint in BookmarkService.createBookmark() method. Usually, you can access objects within the current scope, such as bookmarkRepository, bookmark, or categoryService. \nBut what if you need to inspect or interact with a bean that isn’t directly injected into your current class. For example, you may want to clear existing data or insert new data into the database by using a repository directly.\nLet’s say while debugging BookmarkService.createBookmark() method, we would like to temporarily delete all the categories using CategoryRepository.deleteAll()? Usually, you’d be out of luck.\nThis is where the Spring Debugger plugin shines. It allows you to access any Spring bean that exists within your ApplicationContext. Simply start typing the bean name into the expression input box, and the plugin will show matching beans. You can then invoke any methods on them, like calling categoryRepository.findAll() method and you can view the result. \n\n\n\n\nThis capability extends your debugging reach far beyond the immediate scope.\nManipulate Application State On-the-Fly\nConsider a common scenario: you have a service method, like CategoryService.findByName(), that caches its results. If you’re debugging an issue related to this method and call it repeatedly with the same input, the breakpoint won’t be hit because the results are served from the cache.\nTraditionally, you might need to restart your application or temporarily disable caching to force the breakpoint to hit. With the Spring Debugger plugin, there’s a much more elegant solution.\nYou can directly access the cacheManager bean from your ApplicationContext. Inspect the available caches, find the specific cache (e.g., category-by-name), and then invoke the invalidate() method on it.\n\n\n\n\nAfter invalidating the cache, when you resume execution, the breakpoint in CategoryService will now be hit because there’s no entry in the cache for that name.\nThis demonstrates the incredible power to invoke any method on any Spring bean to dynamically control and debug your application’s flow.\nAccess Core Spring Components and Properties\nSometimes we may get tricky problems due to configuration issues or misunderstanding of conventions. While debugging such issues, we may want to explore the application’s runtime configuration or access low-level components to interact with database or publish application events using ApplicationEventPublisher.\nThe utility of the Spring Debugger plugin isn’t limited to your custom beans. It also provides direct access to core Spring components that are part of your ApplicationContext:\nEntityManager: If you’re using JPA, you can directly access the entityManager and invoke any methods on it.\nEnvironment: Gain access to the environment bean, which provides an abstraction to all application properties. You can query specific property values to see their current configuration.\n\n\n\n\nStreamline Your Debugging Workflow and Save Time\nThe ability to access any Spring bean has significant implications for your overall debugging process.\nEliminate Temporary Code Changes: How many times have you temporarily injected a bean, added log statements, or introduced other debugging code, only to have to remove it once the issue is found? With Spring Debugger, you don’t need to make those temporary changes. You can directly access any bean and explore your use case as needed.\nEffortless Test Data Setup: Imagine debugging a scenario that requires specific test data, perhaps an action only an administrator can perform. Instead of logging out, and logging in as an administrator, performing the action, and then returning to your debug flow, you can simply access a service bean directly to insert test data into the database, bypassing complex setup steps.\n\n\n\n\n\nIn essence, the Spring Debugger plugin empowers you with all the power of the Spring ApplicationContext right at your fingertips while debugging. It significantly enhances your ability to understand, inspect, and manipulate your Spring Boot application’s state, making your debugging sessions more efficient and productive.\nGo ahead and install the Spring Debugger plugin to explore its powers yourself!",
        "dc:creator": "Siva Katamreddy",
        "content": "IntelliJ IDEA has great support for debugging Java and Kotlin applications. But if you are building Spring Boot applications, you may want to access Spring components along with their metadata. That&#8217;s where the Spring Debugger plugin comes in. It makes life easier by letting you explore and use the entire Spring ApplicationContext right from your [&#8230;]",
        "contentSnippet": "IntelliJ IDEA has great support for debugging Java and Kotlin applications. But if you are building Spring Boot applications, you may want to access Spring components along with their metadata. That’s where the Spring Debugger plugin comes in. It makes life easier by letting you explore and use the entire Spring ApplicationContext right from your […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=596461",
        "categories": [
          "idea",
          "java",
          "debugging",
          "intellij-idea",
          "springboot",
          "springdebugger"
        ],
        "isoDate": "2025-09-17T11:14:19.000Z"
      },
      {
        "creator": "Angelina Feofilova",
        "title": "The Early Access Program for Rider 2025.3 Is Now Open!",
        "link": "https://blog.jetbrains.com/dotnet/2025/09/17/the-early-access-program-for-rider-2025-3/",
        "pubDate": "Wed, 17 Sep 2025 09:01:46 +0000",
        "content:encodedSnippet": "We’re excited to kick off the Early Access Program (EAP) for Rider 2025.3!\nWith the first preview build now available, you can try out the new features we’ve been working on and let us know what you think. Your feedback plays a vital role in shaping the final release.\nIf you haven’t joined an EAP before, check out this blog post to see how it works and what you can expect. These builds are free to use, and you can get the latest EAP build in several ways:\nDownload it from our website.\nUse the Toolbox App.\nInstall the snap package from the Snapcraft store if you’re using a compatible Linux distribution.\nDownload Rider 2025.3 EAP 1\n                                                    \n\n\n\n\nRider 2025.3 EAP 1 release highlights\nThis first build brings a variety of updates for Unity, Unreal Engine, Godot, and more. Let’s take a closer look at the highlights of Rider 2025.3 EAP 1.\nUnity\nWe’ve added an IL Viewer for Unity projects (RIDER-86108). Previously, checking the IL code for Unity assemblies required manual steps and workarounds. Now Rider automatically finds the correct assemblies, so you can open the IL Viewer and inspect your Unity code right away.\nUnreal Engine\nRider now lets you customize which folders and files are included in the .uproject project model (RIDER-119424). This means that you can add extra projects, like a .csproj with your own file list, and Rider will load them automatically. This is especially useful if you work with additional scripting frameworks such as NoesisGUI.\nGodot\nWe’ve made several important updates to improve the Rider experience for Godot developers:\nGDExtension support: You can now work on GDExtensions in Rider using the new project template.\n\n\n\n\nTyped dictionaries support: No more parsing errors when working with typed dictionaries in GDScript in Rider.\n\n\n\n\nLeading whitespace style inspection: A new inspection detects inconsistent indentation (tabs vs. spaces) in GDScript files and provides a quick-fix to bring them in line with your configured code style.\n\n\n\n\nChickensoft GoDotTest support: You can now run and debug C# tests directly in Rider with the Chickensoft GoDotTest runner (RIDER-113850). \nAutomatic builds on focus change\nWe’ve introduced a new option that triggers a build whenever Rider loses focus (RIDER-127586). This makes working with Godot smoother, as it allows the Inspector to immediately reload and display updated exports without requiring manual builds. You can enable this option in Settings | Languages & Frameworks | Godot Engine.\n.slnx solution templates\nRider now lets you create .slnx solution files directly from its templates. Previously, the only way to create a .slnx solution file was to save a .sln file and rename it; that workaround is no longer needed.\nFor the complete list of updates in this build, head over to our issue tracker.\nDownload Rider 2025.3 EAP 1 today and take the new features for a spin. Your feedback drives Rider forward, and we can’t wait to hear what you think.\nThank you for being part of our Early Access Program!\nDownload Rider 2025.3 EAP 1",
        "dc:creator": "Angelina Feofilova",
        "content": "We’re excited to kick off the Early Access Program (EAP) for Rider 2025.3! With the first preview build now available, you can try out the new features we’ve been working on and let us know what you think. Your feedback plays a vital role in shaping the final release. If you haven’t joined an EAP [&#8230;]",
        "contentSnippet": "We’re excited to kick off the Early Access Program (EAP) for Rider 2025.3! With the first preview build now available, you can try out the new features we’ve been working on and let us know what you think. Your feedback plays a vital role in shaping the final release. If you haven’t joined an EAP […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=598107",
        "categories": [
          "news",
          "releases",
          "rider",
          "eap",
          "godot",
          "release",
          "unity",
          "unreal-engine"
        ],
        "isoDate": "2025-09-17T09:01:46.000Z"
      },
      {
        "creator": "Angelina Feofilova",
        "title": "The Early Access Program for ReSharper and .NET Tools 2025.3 Is Here!",
        "link": "https://blog.jetbrains.com/dotnet/2025/09/17/the-early-access-program-for-resharper-and-net-tools-2025-3/",
        "pubDate": "Wed, 17 Sep 2025 09:01:39 +0000",
        "content:encodedSnippet": "We’re happy to announce that the Early Access Program (EAP) has started for both ReSharper and .NET Tools 2025.3. The first preview build is now available, giving you an early opportunity to explore what’s coming in the next major release. Your feedback is essential in helping us polish these updates, so we’d love to hear your thoughts as you try out the new build.\nDownload ReSharper 2025.3 EAP 1\n                                                    \nIf this is your first time joining the EAP, take a look at this blog post to learn how the program works and what benefits it brings.\nThe first EAP build for ReSharper 2025.3 is compatible with Visual Studio 2026 Insiders. It also brings important improvements important improvements to ReSharper’s Out-of-Process (OOP) mode and several updates for ReSharper C++. Let’s take a closer look!\n\n\n\n\nFaster startup with Out-of-Process mode on .NET Core\nReSharper’s Out-of-Process mode now runs on .NET Core and starts up even faster, thanks to runtime performance gains. While stability and responsiveness remain the main goals of Out-of-Process mode, the faster startup is a nice bonus on top of these improvements. If you experience any issues with Out-of-Process mode, please let us know – drop a note in the comments or in our tracker.\nOut-of-Process mode enabled by default\nDuring this EAP cycle, ReSharper will run in Out-of-Process mode by default. Working out of process brings measurable performance improvements, but we want to hear your subjective experience. Is ReSharper faster or more responsive for you? Is it stable? \nPlease note:\nSome features are not yet available in Out-of-Process: .NET profilers (dotTrace, dotMemory), dotCover, Dynamic Program Analysis (DPA), and AI Assistant. Let us know which tools you rely on most so we can prioritize support. You can share your thoughts in this ticket.\nWhen running ReSharper in Out-of-Process mode, you may encounter exceptions. Most of them are diagnostic and not indicative of actual errors. Still, we’d appreciate you reporting them.\nIf you prefer, you can switch back to In-Process mode via ReSharper | Options | Environment | Products & Features by disabling the Run ReSharper in separate process option. Alternatively, start Visual Studio with the /ReSharper.InProcess flag to temporarily revert, and save this preference later in ReSharper’s Options.\nUpdates for C++ development\nReSharper C++ now supports several new C++26 features, including pack indexing, expansion statements, and structured bindings with packs (RSCPP-35817, RSCPP-36874, and RSCPP-36532).\n\n\n\n\nQuick Info in ReSharper C++ now shows class padding alongside size and alignment, helping you spot wasted memory at a glance (RSCPP-36866).\n\n\n\n\nWe’ve also added support for the GNU _Complex and _Imaginary keywords used in complex data types (RSCPP-15015).\n\n\n\n\nYou can now set the return value in the Extract Method refactoring to one of the local variables (RSCPP-23436).\nFor the full list of resolved issues and improvements, please refer to our issue tracker.\nTry it out and share your feedback\nThe latest EAP build is ready for you to explore. We encourage you to test the improvements and share your impressions. Your feedback directly shapes the future of ReSharper and .NET Tools, and we greatly appreciate your input.\nJoin the conversation in the comments or report issues via YouTrack. Stay tuned for more updates as the EAP cycle continues – there’s plenty more to come!\nDownload ReSharper 2025.3 EAP 1",
        "dc:creator": "Angelina Feofilova",
        "content": "We’re happy to announce that the Early Access Program (EAP) has started for both ReSharper and .NET Tools 2025.3. The first preview build is now available, giving you an early opportunity to explore what’s coming in the next major release. Your feedback is essential in helping us polish these updates, so we’d love to hear [&#8230;]",
        "contentSnippet": "We’re happy to announce that the Early Access Program (EAP) has started for both ReSharper and .NET Tools 2025.3. The first preview build is now available, giving you an early opportunity to explore what’s coming in the next major release. Your feedback is essential in helping us polish these updates, so we’d love to hear […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=598136",
        "categories": [
          "news",
          "releases",
          "resharper",
          "net-tools",
          "eap",
          "release"
        ],
        "isoDate": "2025-09-17T09:01:39.000Z"
      },
      {
        "creator": "Maksim Sobolevskiy",
        "title": "A Farewell to Consoles",
        "link": "https://blog.jetbrains.com/datagrip/2025/09/16/a-farewell-to-consoles/",
        "pubDate": "Tue, 16 Sep 2025 16:46:20 +0000",
        "content:encodedSnippet": "Starting from the 2025.3 release, DataGrip and other JetBrains IDEs with database support will stop using the term query console. From now on, we’ll use query file – because consoles were essentially files all along, and it’s time the UI reflected that. We’ve made the workflow simpler, more discoverable, and more consistent.\nA bit of history 🏛️\nWhy did we have consoles in the first place? Here’s the short story.\nBack when JetBrains first added database functionality to IntelliJ IDEA, Java developers mostly worked with databases from the terminal. The quickest way to bring that workflow into the IDE was to give people a temporary area for writing SQL – and that temporary SQL file was called a console.\nFor many years, the IDE provided just one default console per project, and that seemed fine, but users asked for more. They wanted multiple consoles, the ability to pick the database or schema, and better control over context via the UI.\nProblems 😬\nConsoles were essentially script files, similar to what other database tools provide, but with a few quirks:\nNot part of the project. Consoles lived outside the project structure, even though users worked in a project in DataGrip.\nHard to find. They were stored in an obscure folder (next to scratch files), causing people to create consoles and then not know where to look for them. Because DataGrip autosaves these consoles, nothing was lost – but that made discovery more difficult. Users wouldn’t get a “save” prompt, so they’d create consoles and later be surprised they couldn’t find them or change their context without extra steps.\nDifficult context switching. You couldn’t change the dialect, data source, or schema for a console file via the UI. If you wanted it to behave like a local file, you had to manually save or transfer it.\nConfusing name. The term query console didn’t communicate what the feature actually was, and we kept getting feedback that newcomers didn’t understand it.\nIn short, consoles were useful in spirit but awkward in practice. Something had to change.\nThe change 🧚🏻‍♀️\nWe agonized, deliberated, and then did the obvious: merged consoles and files.\nPractically, query editing is now file-based, so query scripts are visible in your project, easy to locate, and flexible to manage.\nHow it works now:\nTo write a query to the database, create a query file from the context menu of the data source or any of its objects, like you did before with query consoles. This new file will be named Query_[$DATA_SOURCE$].sql.  The name pattern can be customized in Settings.\n\n\n\n\n\n\n\n\n\n\nBy default, query files are saved in the queries folder, which is located in the project folder. The project folder (and the queries folder) is visible in the Files tool window. You can change the storage path in Settings, and any custom folder you select will also appear in the Files tool window.\n\n\n\n\nFiles with an attached database context now show a data-source-like icon instead of the generic database icon used before. This should make query files easier to spot. We’d especially love to hear your feedback about this visual update.\n\n\n\n\n\n\n\n\n\n\nAll prior console limitations are gone! You can now re-attach query files, change their dialect and data source, and treat them like ordinary project files.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Jump to Query Console button on the database explorer toolbar has been renamed to Jump to Query File and given a new icon. It now lists all query files associated with the current data source.\n\n\n\n\n\n\n\n\n\n\n\n\nWhen you upgrade DataGrip, a migration dialog will help you transfer all of your consoles to files and guide you through the new workflow.\n\n\n\n\n\n\n\n\n\n\nThe old Database Consoles folder under the Scratches and Consoles will remain for one more release cycle, after which we’ll remove it completely.\n\n\n\n\n\n\n\n\n\nFAQ ❓\nWill my existing consoles be lost? \n\nNo. We’re carefully converting them to *.sql files and keeping them in the old location, but only for one release cycle.\nCan I keep the old behavior?\n\nTechnically, you can, but only for one more release cycle and only for old projects. You will keep seeing a migration dialog after each IDE restart, however. For new projects, only the new logic will work.\nWhat happens to the consoles of global data sources?\nIn the migration dialog, you will be able to define a separate folder for migrating consoles of such data sources. This folder will be saved in the settings and will serve as the default location for query files created for global data sources. To access these files from the IDE, you will need to attach the folder to each specific project.\nWill the same thing happen in other JetBrains IDEs?\n\nYes, but for now it’s only released in DataGrip EAP. The only difference is that in other JetBrains IDEs with database functionality, query files are migrated by default to a folder inside the .idea subfolder within the project. This folder is usually listed in .gitignore.\nWhat’s next ⏭️\nLater in this 2025.3 release cycle, we’ll add a Query Files node to the database explorer. Clicking it will show all files associated with the current data source, further improving discoverability.\nWe’re rolling out this change in the first EAP build to gather feedback from our community. Please try it out and tell us what’s missing.\n\n\n\n\nLet us know what you think in any of these ways:\nComment in the corresponding YouTrack ticket\nComplete the feedback form: https://www.jetbrains.com/feedback/datagrip/\nEmail us at datagrip@jetbrains.com\nTag @DataGrip on X or follow https://x.com/datagrip\nWe look forward to hearing your feedback!\nThe DataGrip team",
        "dc:creator": "Maksim Sobolevskiy",
        "content": "Starting from the 2025.3 release, DataGrip and other JetBrains IDEs with database support will stop using the term query console. From now on, we’ll use query file – because consoles were essentially files all along, and it’s time the UI reflected that. We&#8217;ve made the workflow simpler, more discoverable, and more consistent. A bit of [&#8230;]",
        "contentSnippet": "Starting from the 2025.3 release, DataGrip and other JetBrains IDEs with database support will stop using the term query console. From now on, we’ll use query file – because consoles were essentially files all along, and it’s time the UI reflected that. We’ve made the workflow simpler, more discoverable, and more consistent. A bit of […]",
        "guid": "https://blog.jetbrains.com/?post_type=datagrip&p=598617",
        "isoDate": "2025-09-16T16:46:20.000Z"
      },
      {
        "creator": "Ilya Petrov",
        "title": "FAQ: New AI Quotas",
        "link": "https://blog.jetbrains.com/ai/2025/09/faq-new-ai-quota/",
        "pubDate": "Tue, 16 Sep 2025 15:01:26 +0000",
        "content:encodedSnippet": "We hear you. And you’re right – the new quotas are a reduction from what you experienced. When we launched, we had little usage data for agentic experiences and no top‑up feature existed, so we set quotas much higher than the real cost of AI usage (tokens from providers) as a temporary measure. That felt great, but it loses money at scale and puts the product at risk. We set expectations incorrectly. That’s on us.\nCheck more details about the new quotas in the original blog post.\nYour Most Frequent Questions\n“It’s not transparency; it’s paying more for less.”\nFirst, cost. There’s no scam here. We’re aligning usage to real, public provider prices per token. Whether you run through us or directly with providers, it will be similar. Discounts vary, and yes, some companies still burn VC money to attract users (also that’s changing). We’re a real business; we can’t play that game. This is the real price of AI. Our job now is to make sure the value you get from our product far exceeds what you spend.\nSecond, transparency. We’ll roll out UX updates with statistics in a few weeks, and more usage details and controls after that. Being transparent about a bad situation is better than having unclear or uncontrolled terms. Our previous quotas were a temporary measure, and so they were not transparent. With the new approach, the rules of the game are clear. This is a sustainable foundation that will help us look further into the future and design new products and services around it. \n\n\n\n\n“I can’t estimate how many credits I need for specific tasks.”\nAI usage isn’t a flat fee because it depends on the type of model you use and the amount of text (tokens) flowing in and out. That means the same question can cost differently depending on how it’s phrased, how much context is added, or how long the conversation goes. In agentic workflows, where the AI may iterate and correct itself, usage can naturally be higher.\nThat said, you don’t have to fly blind. We aim to give you the tools to get the best grasp on AI usage and make sure you stay in control:\nClear pricing per credit: We align with public provider costs, so you always know the unit price.\nTransparent usage stats: We’re rolling out UX updates that let you see exactly where credits go. It will roll out in waves, with the first wave in the next few weeks.\nBest-practice guides: We will share ways to phrase prompts and structure workflows so you get quality results faster (and spend less).\nSafeguards: Subscription quotas and alerts help prevent unexpected overuse, and you can always top up to continue your work.\nThink of credits like fuel for your AI workflows: you may not know the exact mileage before the trip, but you’ll always see your fuel gauge and can plan accordingly.\n“My quota runs out in half a day. Is it a bug?”\nNo – the quota got smaller for both AI Pro and AI Ultimate. In our data, about 80% of users (plan and usage dependent) won’t hit the new limits. The downside is that the most active AI users are the most affected.\nAgain, we’re not targeting you and we’re not slicing by some percentile; we’re aligning with costs so we don’t burn money indefinitely, while still giving away more (e.g. AI Ultimate includes roughly 15% more value than you pay each month, and annual plans can go up to about 40% more than your pay). \nThere’s another reason quotas can vanish fast: agentic workflows. Agents collect context and iterate through a plan; that means multiple, long requests that eat tokens. Junie, our coding agent, is built for quality on real‑world dev tasks. Speed and cost are part of the product. Early on, we took this risk on us. That was fine for kick‑off – but it’s not how this works long‑term.\nJunie is designed for complex tasks and provides high quality output. Code generation, verification and tests together take more AI credits – but it also helps Junie achieve the better result for your job. We don’t want to sacrifice quality over speed: we benchmark the models and choose the best for your tasks, we always prioritize Junie’s ability to compare the solutions and offer you the most suitable one. We train Junie to verify the steps it is taking – not just to generate code faster, but to create solutions that you can use and maintain. All this helps Junie perform like agents in more expensive plans (up to $200/month), but we aim to keep the cost of usage reasonable and constantly work on optimization.\nSmart ways to think about your AI quota\nTrack your usage (detailed stats are coming soon; for now, watch your in‑app meter).\nConsider the best tool for the task – whether it’s an AI agent (complex workflows, iterations, validation, etc.) or an AI assistant (more straightforward Q&A and one-step solutions). \nBe intentional with the way you prompt and the model choice (e.g., GPT‑5 is often cheaper than Claude 4 with comparable results – try switching if it works for you).\nStart over instead of a follow-up if you feel that the agent is lost. Based on the way LLMs work, multiple follow-ups (e.g., more than seven) usually drift away and take more credits (the longer the chat, the more context is passed with every request) but may not get you closer to the result you have in mind.\nFavor smaller/cheaper models for drafts (check the hints in AI Chat), then upgrade for final runs.\n“I just paid for an annual AI subscription based on the old patterns. Why no refund?”\nWe do have a refund policy, and some of you have already received refunds that extended your non‑AI subscriptions. Given this, we understand the frustration. Even if the refund window has passed, we’ve prepared a set of special alternatives for annual AI Pro and AI Ultimate users; you can select the one that works best for you. Keep in mind that we can’t grant refunds for All Products Pack and dotUltimate beyond regular policies, because AI Pro was included there at no extra charge.\nThat said, we still think annual subscriptions are a good deal. Example: AI Ultimate (annual) gives you 420 AI Credits for $300 — roughly 40% more credits than your payment at public rates.\n***\nAI is a great tool, and it’s changing how we build software. But it’s not magic — especially not free, unlimited magic. As professionals, we should understand how it works, how much it costs, and how to use it better. In the real world, speed and cost matter as much as quality. We believe that’s where the industry is heading. So let’s face it and start mastering these together.\nThank you to everyone who’s supported us – and for all the honest feedback. We’re building a sustainable business. Our future is tied to the value we create for you, so we’ll keep delivering exactly that step by step.",
        "dc:creator": "Ilya Petrov",
        "content": "We hear you. And you’re right – the new quotas are a reduction from what you experienced. When we launched, we had little usage data for agentic experiences and no top‑up feature existed, so we set quotas much higher than the real cost of AI usage (tokens from providers) as a temporary measure. That felt [&#8230;]",
        "contentSnippet": "We hear you. And you’re right – the new quotas are a reduction from what you experienced. When we launched, we had little usage data for agentic experiences and no top‑up feature existed, so we set quotas much higher than the real cost of AI usage (tokens from providers) as a temporary measure. That felt […]",
        "guid": "https://blog.jetbrains.com/?post_type=ai&p=608490",
        "categories": [
          "news",
          "ai-assistant",
          "ai-in-ides",
          "junie"
        ],
        "isoDate": "2025-09-16T15:01:26.000Z"
      },
      {
        "creator": "Maria Kosukhina",
        "title": "IntelliJ IDEA 2025.3 Early Access Program Is Open!",
        "link": "https://blog.jetbrains.com/idea/2025/09/intellij-idea-2025-3-eap/",
        "pubDate": "Tue, 16 Sep 2025 11:46:24 +0000",
        "content:encodedSnippet": "We’re kicking off the next development cycle and inviting you to join it.\nThe Early Access Program (EAP) for IntelliJ IDEA 2025.3 is now open, offering an early look at the new features and improvements we’re working on. By evaluating new features and sharing constructive feedback, you help us provide you with powerful, reliable tooling for professional development.\n\n\n\n\nAs always, EAP builds are free to use and can be installed side by side with your stable IDE version. You can get EAP builds from the Toolbox App, download them from the website, or use snaps for Ubuntu.\nDownload IntelliJ IDEA 2025.3 EAP\nPlease note that EAP builds are not fully tested and might be unstable, as the version is still a work in progress. Please keep this in mind when using them.\nIn this post, we’d like to share a glimpse of what’s in our planning dashboards for the upcoming release. The list below is neither final nor exhaustive, but it’s meant to show the direction we’re heading.\nSingle distribution \nIn 2025.3, IntelliJ IDEA will move to unified distribution, and several important changes related will appear during the EAP cycle. These include more features becoming available without subscription, such as wizards, basic highlighting for JavaScript, SQL, JPQL, template engines markup, and support database schema exploration. A detailed list of features going free will be published closer to the release.\nAlso there will be no IntelliJ IDEA Community Edition EAP builds available in the Toolbox App or from the IntelliJ Platform Gradle plugin. Please use the EAP builds of IntelliJ IDEA Ultimate instead. More information about Gradle builds will be published later on platform.jetbrains.com.\nTechnology updates \nWe’re continuing our effort to support the latest technologies you may use in your projects. This release brings full support for Java 25, Spring Boot 4, JUnit 6, all expected to be released within the next few months.\nSpring \nIn addition to supporting new features introduced for Spring 7, we’re working on significantly improving Spring Data JDBC support and extending the capabilities of the Spring Debugger introduced in v2025.2.\nKotlin\nKotlin support in the IDE continues to improve, with enhancements to code completion and overall quality in K2 mode. In addition to support for Spring 7, the Kotlin Routing DSL is getting better IDE assistance, along with various quality-of-life improvements for Spring development.\nFor Kotlin Notebook, we’re also improving stability and adding more improvements, like support for database integration – one of the most common scenarios in server-side development.\nKubernetes support\nStarting with 2025.3, we’re improving the experience of working with Kubernetes YAML files. We’re aiming to enable inlay quick actions in the editor for faster port forwarding, resource status updates, current context selection, and easier access to secrets.\nUser experience\nIn v2025.3, IntelliJ IDEA is getting a visual upgrade – the new Islands theme. Based on the feedback we’ve collected and our experiments in the previous release cycle, we’re now looking into making it the new default. We are going to share more details about the new theme soon.\nMeanwhile, you can try the Islands theme in this EAP build by enabling it in Settings | Appearance & Behavior | Appearance | Theme.\nAnother notable change we’re working on is the new Welcome screen that takes you straight into the IDE, with no extra dialog windows or additional clicks.\nWe’re also working on improving how the IDE communicates with you while project indexes are still being built. This includes a clearer overview of background tasks and more transparent, predictable progress indicators so you can stay focused on your code with fewer distractions.\nRemote development\nFollowing the improvements introduced in the previous release to refine the remote development experience, we’re continuing in the same direction. In v2025.3, we plan to enable smoother typing for more languages including CSS, JavaScript, TypeScript, and shell scripts. Additionally, the launch experience is being revamped to accelerate startup and make it more seamless.\nTerminal\nIn v2025.3, we’re bringing AI support to the terminal, starting with inline completion as the first step.\nStability\nA large portion of our team’s workload is dedicated to maintaining the quality and stability of the IDE. We’ll communicate those improvements in a dedicated What’s Fixed post, like we did for the previous release.\nFor the full list of fixes and improvements already included in the first 2025.3 EAP build, please refer to the release notes.\nShare your feedback\nTake part in the Early Access Program by trying out the EAP builds and sharing your feedback with us. You can get in touch with us on X, BlueSky or LinkedIn, or leave a comment below. If you come across a bug or something that doesn’t work as expected, please report it via our issue tracker.\nHappy developing!",
        "dc:creator": "Maria Kosukhina",
        "content": "We&#8217;re kicking off the next development cycle and inviting you to join it. The Early Access Program (EAP) for IntelliJ IDEA 2025.3 is now open, offering an early look at the new features and improvements we’re working on. By evaluating new features and sharing constructive feedback, you help us provide you with powerful, reliable tooling [&#8230;]",
        "contentSnippet": "We’re kicking off the next development cycle and inviting you to join it. The Early Access Program (EAP) for IntelliJ IDEA 2025.3 is now open, offering an early look at the new features and improvements we’re working on. By evaluating new features and sharing constructive feedback, you help us provide you with powerful, reliable tooling […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=599251",
        "categories": [
          "eap",
          "2025-3-eap",
          "intellij-idea",
          "intellij-idea-2025-3"
        ],
        "isoDate": "2025-09-16T11:46:24.000Z"
      },
      {
        "creator": "Marit van Dijk",
        "title": "Java 25 LTS and IntelliJ IDEA",
        "link": "https://blog.jetbrains.com/idea/2025/09/java-25-lts-and-intellij-idea/",
        "pubDate": "Tue, 16 Sep 2025 11:15:34 +0000",
        "content:encodedSnippet": "The Java release cadence means we get a new Java version every six months. Java 25 was released on September 16, 2025. At JetBrains, we are committed to supporting new technologies in IntelliJ IDEA and adding useful enhancements for both stable and preview features. In this blog post, we will give you an overview of some changes to the Java language and how they are supported in IntelliJ IDEA. This post is limited to stable features only. Preview features will be covered separately in dedicated blog posts on relevant topics.\nJava 25 includes several changes to the language that make Java easier to use. Features like compact source files and instance main methods, as well as module import declarations, make it easier to get started with Java, both for students and when creating small projects like prototypes or hobby projects. Flexible constructor bodies allow more flexibility in constructors, giving you the option to calculate or validate data before calling the constructor of the super class. Scoped values are a new model for thread-local variables, adapted to virtual threads. They will be more useful with structured concurrency, which is currently still in preview.\nApart from changes to the language itself, there are improvements to both performance and performance insights. Compact object headers reduce memory footprint and improve cache efficiency. Ahead-of-time method profiling lets the JVM warm up more quickly by using execution data from prior runs, improving startup performance. Improvements to garbage collection (GC) like generational Shenandoah, plus better class-loading and linking optimizations, contribute to noticeably smoother server-style workloads.\nAs Java 25 is an LTS (long-term support) release, many people will be migrating to this version from Java 21, 17, 11, or even earlier. If you are coming to Java 25 from Java 21, have a look at the section describing the most relevant changes since Java 21.\nBefore diving into the new features, let’s set up IntelliJ IDEA to use Java 25.\nUsing Java 25 in IntelliJ IDEA (setup)\nTo use Java 25, you will need to download the JDK. You can do so from inside IntelliJ IDEA or by using tools like SDKMAN! To download a JDK from IntelliJ IDEA, open the Project Structure, go to the tab Project Settings | Project, open the drop-down menu in the SDK field, and select Download JDK. \nDownloading JDK from inside IntelliJ IDEA\n\n\n\nIn the Download JDK popup that opens, set Version to 25, and in the Vendor field, select the vendor you want to use. \nYou can also download Early Access (EA) versions of the JDK from inside IntelliJ IDEA, for example, when the next release becomes available or if you’d like to try Valhalla (which is based on Java 23). IntelliJ IDEA will warn you that these are not intended for production use. \nDownloading an Early Access version\n\n\n\nNext, you need to configure IntelliJ IDEA to use the right language level. To use Java 25 stable features, which is recommended for production code, set Language level to 25 – Compact source files, module imports.\nSetting Language level to 25\n\n\n\nIf you want to try out preview features, set Language level to 25 (Preview) – Primitive Types in Patterns, etc.\nSetting Language level to 25 (Preview)\n\n\n\nNew stable features in Java 25\nLet’s take a look at some of the features Java 25 introduces and how IntelliJ IDEA can help you use them.\nCompact Source Files and Instance Main Methods (JEP 512)\nJava has been working on the so-called “on-ramp”, making the language easier to use. Compact source files and instance main methods are part of that effort. It is now possible for beginners to start writing code without needing to learn about language concepts that they won’t need until they start writing larger programs. For experienced programmers, this feature can help them quickly prototype ideas without needing a lot of boilerplate code. Code can be evolved and expanded as skills and applications grow. \nTo quickly see the difference, let’s look at a classic example: HelloWorld. We have probably all written a HelloWorld example when we first started, possibly in a language other than Java or English. The classic HelloWorld.java looks like this:\npublic class HelloWorld {\n   public static void main(String[] args) {\n       System.out.println(\"Hello, World!\");\n   }\n}\nTo write this code, you had to declare a class and a lengthy main method, including concepts like public and static that are not relevant to beginners. Let’s compare this to the HelloWorld example using new features from compact source files and instance main methods. \nWhen creating a new Java class via New | Java Class, in the New Java Class popup, select the Compact source file option. Note that this compact source file is created in the root directory of your project, even if you create it from another package. IntelliJ IDEA automatically adds an instance main method – void main() – to the file. Next, you can add a method to print “Hello, World!”. You can now use IO.println() as a convenience method without needing to understand what System.out means and without even needing to add a static import. If you do want to add a static import for java.lang.IO, IntelliJ IDEA offers a quick-fix to do so.\nCreating `HelloWorld.java`\n\n\n\nNote that different variations of the main method are now possible, as described here.\nIntelliJ IDEA has some new live templates to add a main method to an implicit class, either with or without arguments: main, maina, psvm, and psvma. Using the psvm or main live templates inside a compact source file will add the new main method, while they will continue to add the classic main method inside a class, as you can see in the preview.\nLive templates for the main method in a compact source file\n\n\n\nLive templates for the main method in a compact source file\n\n\n\nOur new version of HelloWorld now looks like this:\nvoid main() {\n   IO.println(\"Hello, World!\");\n}\nCompare this code to the original example. It is much shorter, contains less boilerplate, and is limited to only the things we need: a main method and a call to print a line with the provided “Hello, World!” String.\nAs beginners often need to interact with the console, a convenient readln() method was also added. This is an overloaded method which can take a String argument that is printed to the console before reading the input. Let’s expand our previous example to read a name from the console. To help you use these new convenience methods, IntelliJ IDEA introduces two new live templates: iop for println() and ior for readln().\nExpanding the example to use the convenience method readln()\n\n\n\nNote that these changes to the language are also taken into account when creating new projects. When you create a new Java project, set Build system to IntelliJ, and select Add sample code, a compact source file with a void main() method will be added. \nCreating a new project with the IntelliJ build system\n\n\n\nPrototyping and teaching\nWhile extremely useful for students and teachers, this feature does not just benefit beginners. It also allows experienced developers to quickly try out ideas or create a prototype. \nWhen you create a new Java project with Maven or Gradle as the selected build system, the generated source code will include a regular class, but with IO.println() instead of System.out.println(). If you are using Maven or Gradle, you’re likely working on something bigger, with actual classes instead of compact source files. Another reason to use classes is that a compact source file needs to be in the default package, and frameworks generally don’t support this. \nCreating a new project with Maven\n\n\n\nTo quickly create a prototype, you can create a Java compact file from the src/main/java directory in the Project tool window. IntelliJ IDEA will provide a default name for the file, so your thought process is not disrupted when you want to quickly try something out.\nCreating a Java compact file\n\n\n\nWhen prototyping, learning, or teaching, you can gradually expand your code to include features you might need when writing code that is part of a larger project, or when introducing new concepts to your students. You can convert an implicit class to a regular class using the Convert an implicitly declared class of a compact source file into a regular class quick-fix.\nConverting an implicitly declared class of a compact source file into a regular class\n\n\n\nShould you prefer to use an implicit class at any point, the reverse is also possible. Similarly, there are quick-fixes to convert IO.println() to System.out.println(), and vice versa. These are probably not things you would do as part of your daily work. But you might use features like this for coding challenges, like Advent of Code, or other fun side projects.\nThe new void main() method does not need String[] args. However, should you decide to use the args in your code, IntelliJ IDEA will help you by adding them to the method, as you can see below. If you like this kind of completion, please let us know in the comments what you are currently missing. \nCompletion to add `args` to the main method\n\n\n\nWith this feature, we finally have a separation in Java between prototypes and other small projects, and enterprise applications. IntelliJ IDEA supports both small and large applications. \nWe have already covered this feature in a previous Java 24 and IntelliJ IDEA post, when it was still in preview. Please have a look at that post to learn about additional support for this feature in IntelliJ IDEA. For a more in-depth explanation of this specific feature, see Mala Gupta’s previous post Java 24: ‘HelloWorld’ and ‘main()’ meet minimalistic. There are examples of practical use cases on when and how to use it to create small programs and prototypes in Java 24: Build Games, Prototypes, Utilities, and More – With Less Boilerplate. Note that (among other things) the following was changed in Java 25: Compact source files were previously called simple source files, and you now need to use the qualified name IO.println() or use an import statement.\nModule Import Declarations (JEP 511)\nModule import declarations simplify the importing of frequently used classes (java.base) or modular libraries, without having to keep adding individual import statements to keep the compiler happy (even though IntelliJ IDEA can do this for you 😉). This feature makes things easier. You can write code without needing to worry about imports, which is useful when learning or prototyping.\nAlternatively, if you have a class that imports multiple classes from a module, you can replace them with a module import statement. When you perform the Optimize imports action, the individual imports for classes imported by the module will be removed.\nAs your codebase grows, you might prefer to add import statements with specific imports, which you can do using the Replace with single class imports quick-fix.\nOptimizing imports\n\n\n\nIf you would like to remove unused module imports when performing Optimize imports, you can configure this in the settings. Open Settings | Editor | Code Style | Java and go to the Imports tab. Then, select the Delete unused module imports option.\nConfiguring the IDE to delete unused module imports\n\n\n\nTo see which packages are exported by a module, click on the module name in the editor or use the relevant shortcut for Go to Declaration or Usages, as shown here. \nYou might wonder what the difference is between module imports and wildcard imports. Wildcard imports in Java allow you to replace the import for multiple classes from the same package with one line, containing an *. Module imports allow you to import classes from different packages. One downside of this is the risk of potential namespace clashes. But don’t worry, IntelliJ IDEA can help you identify and fix these, as described here. \nShould you replace your current import statements with module imports? Probably not. In enterprise code, most developers prefer to have single imports. Note that IntelliJ IDEA allows you to configure the number of imports to add before replacing them with a wildcard. By default, this number is set to five. To change it, open Settings, go to Editor | Code Style | Java, and open the Imports tab. Then, set Class count to use import with ‘*’ to the desired number. Since most coding standards prefer single imports over wildcard imports, we assume the same will be true for module imports. For this reason, we are not planning to have an inspection to automatically replace existing imports with import module java.base;. \nHowever, even if you’re not using this feature explicitly, you will use it implicitly when using compact source files (described above). This feature was previously described in Java 24 and IntelliJ IDEA. For more background information, see Module Import Declarations: No More Import Hell by Mala Gupta.\nFlexible Constructor Bodies (JEP 513)\nWith flexible constructor bodies, previously known as “statements before super()”, you are now allowed to write statements in the constructor of a derived class before calling the constructor of the super class. This is useful if you want to validate or compute data in your constructor before passing it to super(), or when a superclass calls a method from its constructor that you want to override in the subclass and access a field from the subclass inside this method. \nPreviously, the call to super() had to be the first call in the constructor. IntelliJ IDEA would give you a warning if you tried to add statements before super().\nWarning about a statement before `super()`\n\n\n\nA workaround for this restriction is to call static methods inline, as arguments passed to super(). While this is still possible, you now have the flexibility to call these methods before calling super() with the results.\nThere are some limitations on which types of statements you can execute before the call to super(). The statements cannot access the object under construction, which means you cannot access instance members of a class before the execution of super() completes or call methods of the derived class.\nThis new functionality should be used responsibly. Just because you can put arbitrary code before super() doesn’t mean you should move every possible validation or I/O operation into constructors. Constructors are best kept lightweight, deterministic, and free of heavy side effects. Expensive operations, retries, or external resource access are better handled in factories, builders, or initialization methods.\nIn short, this feature lets you model object invariants more naturally through inheritance, but it doesn’t change the golden rule – constructors should remain focused and predictable.\nWhile this feature might not be that exciting by itself, it is a necessary step to make value classes and objects (currently in preview), as well as upcoming null-restricted value class types (currently in draft), possible. Both of these features are part of Project Valhalla. We will discuss this topic later in a separate blog post.\nFor a more detailed explanation of this feature and examples of how to use it, have a look at the following video featuring Dr. Venkat Subramaniam:\n\n\n\n\n\n\nThis feature was previously described in Java 24 and IntelliJ IDEA. For additional details and examples, see Mala Gupta’s previous blog post Constructor Makeover in Java 22. Note that this post was written when this feature was still in preview. The only significant change since then is that a constructor body is now allowed to initialize fields in the same class before invoking a constructor. \nScoped Values (JEP 506)\nScoped values are a new model for thread-local variables adapted to virtual threads. They make it possible to share immutable data within a thread and with child threads in a convenient, safe, and scalable way.\nIn some cases, you want to share data between components of your application or between your application and a framework, such as information about a logged-in user and their permissions. While it is possible to use thread-local variables (variables of type ThreadLocal), there are several downsides to doing so, which might cause potential issues.\nThreadLocal variables are mutable, which makes it hard to keep track of their current value and to reason about the code. The value of a ThreadLocal variable is retained for the lifetime of a thread, unless explicitly removed by calling the remove() method. Developers may forget to do so, which means data might be stored in memory longer than needed, leading to potential performance problems, as well as security issues because data might be visible to unrelated code running on the same thread. ThreadLocal variables can be inherited by a child thread, but each child thread will need to create a copy of the variable, which can add to the memory footprint.\nVirtual threads, added in Java 21, allow us to create many more threads than platform threads. If they each retain a copy of a thread-local variable, this will impact the memory usage. On the other hand, virtual threads may not live as long as platform threads, which minimizes the potential for memory leaks. \nTo use a ScopedValue, you need to first declare it. It makes sense to declare it as final. Next, you need to bind the ScopedValue to some data and pass a Runnable or ScopedValue.CallableOp, which may be realized as a lambda. This is done in the ScopedValue.where() method. The operation – and any code called from it – will be able to get the ScopedValue, but once it is done running, this data will be cleaned up. Scoped values have a clearly defined scope, which makes the code easier to reason about. If you try to use a ScopedValue that is not bound, a NoSuchElementException is thrown, as you can see in the following example.\nUsing `ScopedValue`\n\n\n\nWhile you cannot set a ScopedValue, you can rebind it. In the example below, the variable is bound to the value “24” inside the main method. The update() method is called from here, where the value is bound to “25” (24 + 1). When printed, it will print the current value, “25”.\npublic class RebindExample {\n   ScopedValue<Integer> JAVA_VERSION = ScopedValue.newInstance();\n   void main() {\n       ScopedValue.where(JAVA_VERSION, 24).run(this::update);\n   }\n\n   private void update() {\n       ScopedValue.where(JAVA_VERSION, JAVA_VERSION.get() + 1).run(() -> {\n           IO.println(\"Hello, Java \" + JAVA_VERSION.get()); // prints 25\n       });\n   }\n}\nScoped values are even more useful with structured concurrency, currently in its fifth preview.\nStructured concurrency will make it possible for data to be automatically inherited by any threads that a thread forks. The child threads’ scope will be contained in the parent thread’s scope. With scoped values, it is no longer necessary to make copies of the data, meaning they scale very well with many (virtual) threads. This topic deserves its own blog post, where we can dive deeper into new use cases, migration paths, and performance comparisons between different approaches. \nAs we have seen, scoped values solve several problems associated with ThreadLocal.They reduce memory overhead, improve predictability, and make reasoning about concurrent code much easier. Does this mean you should immediately rewrite all your code to use ScopedValue? Not necessarily. Frameworks like Spring and others still rely heavily on ThreadLocal, and migrating all existing components to Java 25 isn’t something that will happen overnight. Also, the intention behind scoped values was never to deprecate or replace ThreadLocal outright, but to offer a cleaner, safer alternative. However, you might consider using scoped values for new code or modules, especially where you are already facing typical ThreadLocal issues: leaks, context propagation, and cleanup.\nPerformance and profiler improvements\nLanguage features are just half of the story. Java 25 also brings significant runtime improvements. Let’s take a brief look at the changes:\nAhead-of-Time Method Profiling (JEP 515) speeds up warm-up by using method execution profile data from a prior run. The JVM can use that data immediately at startup so that hot methods are already known, reducing the delay before reaching peak performance. \nJFR Cooperative Sampling (JEP 518) and JFR Method Timing & Tracing (JEP 520) improve observability: Cooperative sampling lets threads report profiling data at safe points to reduce overhead and increase accuracy, and method timing and tracing give more precise, detailed call durations and call stack information. \nCompact Object Headers (JEP 519) shrink the object header on 64-bit JVMs from its larger experimental form to a compact 64-bit layout. This reduces memory overhead (especially with many small objects) and improves garbage collection (GC) and cache behavior. \nGenerational Shenandoah (JEP 521) adds generational GC support to the Shenandoah garbage collector so that young-generation objects can be collected more efficiently, reducing pause times and improving throughput for workloads with many short-lived objects.\nMoving from Java 21 to Java 25\nIf you are upgrading to Java 25 from Java 21, here is an overview of some of the stable features you might not be familiar with yet.\nStream Gatherers (JEP 485)\nStream Gatherers were added in Java 24. They improve the Stream API, added in Java 8. Stream gatherers allow you to add your own custom intermediate operations to a stream.\nFor an explanation of this feature and how you can use it, watch the following livestream with José Paumard:\n\n\n\n\n\n\nIf you’d like more background information on this feature, you might be interested in the following video we created when this feature was still in preview:\n\n\n\n\n\n\nFinally, we highly recommend this video from JavaOne by Viktor Klang, the creator of the feature:\n\n\n\n\n\n\nMarkdown Documentation Comments (JEP 467)\nMarkdown documentation comments were added in Java 23. As the name suggests, it is now possible to use Markdown in your JavaDoc. Back when Java was first created, HTML seemed like a logical choice for JavaDoc, but these days you might prefer Markdown. \nIntelliJ IDEA supports the adoption of this feature by offering a quick-fix to convert JavaDoc to Markdown. If you have JavaDoc that you would like to convert, press Alt+Enter when the cursor is on your JavaDoc and select the Convert to Markdown documentation comment option.\nConverting a documentation comment to Markdown\n\n\n\nDoes this mean you should convert your existing JavaDoc to Markdown? Not necessarily. You might just consider writing your documentation in Markdown from now on. However, should you want to convert it, IntelliJ IDEA can help you.\nFor more information on this feature, have a look at Markdown in Java Docs? Shut Up and Take My Comments! by Mala Gupta.\nIf you’re interested in more background on this feature, check out the video that was created when it was still in preview:\n\n\n\n\n\n\nUnnamed Variables & Patterns (JEP 456)\nUnnamed variables and patterns make it possible to use unnamed variables and unnamed patterns when variable declarations or nested patterns are required but the actual variables or patterns are not used. Denoting unnamed variables and patterns with an _ clearly conveys that they are not used elsewhere in the code. IntelliJ IDEA will detect when an unused local variable could be replaced with an underscore _ and offer a quick-fix to do so. \nRenaming a variable to ‘_’\n\n\n\nFor more details on this feature, see Drop the Baggage: Use ‘_’ for Unnamed Local Variables and Patterns in Java 22 by Mala Gupta.\nVirtual Threads (JEP 444) and Synchronize Virtual Threads without Pinning (JEP 491)\nAdded in Java 21, virtual threads are lightweight threads. Unlike platform threads, which are limited by the number of cores in your machine, you can create a potentially unlimited number of virtual threads. Virtual threads improve the scalability of your applications. They do need platform threads to perform their work, but can release them when they are waiting for blocking code. Tooling like jcmd and IntelliJ IDEA can collect thread dumps with virtual threads included.\nSynchronizing virtual threads without pinning (added in Java 24) improves the scalability of Java code that uses synchronized code. Virtual threads that block in synchronized blocks now release their underlying platform threads so they can be used by other virtual threads. This last improvement comes for free when you upgrade from Java 21 to Java 24 or higher. To see this in action, watch the demo we did in the What’s New in IntelliJ IDEA 2025.2 livestream.\n\n\n\n\n\n\nRuntime and security improvements\nJava 24 introduced some changes related to post-quantum cryptography readiness. The Java platform is preparing for the future of secure computing: \nQuantum-Resistant Module-Lattice-Based Key Encapsulation Mechanism (JEP 496) and Quantum-Resistant Module-Lattice-Based Digital Signature Algorithm (JEP 497), introduced in Java 24, are NIST-standardized post-quantum algorithms (lattice-based) aimed at replacing or augmenting classic public-key operations like RSA and ECDSA. Java also receives a performance boost. Garbage collection, memory footprint, and startup times all see measurable improvements:\nRegion Pinning for G1 (JEP 423) allows the G1 garbage collector to continue collecting parts of the heap even when some regions are in JNI critical sections. Instead of stalling GC during such critical regions, only “pinned” regions are excluded, reducing latency in mixed JNI/native workloads. \nThe Foreign Function & Memory API (JEP 454), added in Java 22, offers better performance and safety over the old JNI for foreign memory and calling native code. Bulk operations are more efficient, with less overhead in cross-boundary calls. \nZGC: Generational Mode by Default (JEP 474). The Z Garbage Collector, which is typically low-pause, uses generational mode by default starting with Java 23. Separation between young and old objects improves GC efficiency for applications that create many short-lived objects.\nAdditionally, there are further enhancements to core libraries, previews, and performance ergonomics – for example, improvements to default GC settings, memory management, etc. \nUpgrading from Java 21 to 25\nYou can find a video series that covers the Road to Java 25 on the official Java YouTube channel. We recommend watching How to Upgrade to Java 25 by Nikolai Parlog. The Oracle DevRel team also has a Java 25 livestream on September 16, 2025.\nConclusion\nAs you have seen, several additions to the language make Java easier to use, both for students and teachers, as well as experienced programmers. In fact, these features completely change the experience of using Java, by no longer requiring boilerplate code like the public static void main(String[] args) method, allowing statements before super(), offering the possibility to add custom intermediary operations in streams using gatherers, allowing underscores as variable names for unused variables, and and providing scoped values as a convenient, safe, and scalable alternative to ThreadLocal. With all of these changes, Java is moving forward fast. IntelliJ IDEA aims to move just as quickly by supporting these new features with relevant inspections and quick-fixes, as well as new live templates, and integrating them into existing features like the debugger. Other than improvements in the language, there are also runtime improvements that you get for free when upgrading your JDK.\nWe think Java 25 is the best Java release (so far!) and we recommend you switch to it as soon as you can. Even if you’re not using the Java language features, you will still benefit from using the new JDK. Java 25 offers a new baseline for the language, and the runtime is the fastest it has ever been.\nIf you are on Java 21, we have provided an overview of what you might have missed in terms of language features. And if you’re on an even older version of Java, now would be the time to start the process to upgrade, not just because of the benefits to you but also because the ecosystem is moving forward. Java 17 is the current baseline for Spring and Spring Boot as of Spring 6 or Spring Boot 3. The upcoming Maven 4 will require JDK 17 to run. But don’t worry, you can still compile projects with older Java versions! The upcoming JUnit 6 is also targeting JDK 17. If you are still on Java 8 (or older), now is the time to start upgrading!\nIntelliJ IDEA will continue to support the latest Java features with Java 26. If you would like to try them out, you can download the EA versions from inside IntelliJ IDEA as soon as they become available. And, as always, please let us know if you have any feedback.",
        "dc:creator": "Marit van Dijk",
        "content": "The Java release cadence means we get a new Java version every six months. Java 25 was released on September 16, 2025. At JetBrains, we are committed to supporting new technologies in IntelliJ IDEA and adding useful enhancements for both stable and preview features. In this blog post, we will give you an overview of [&#8230;]",
        "contentSnippet": "The Java release cadence means we get a new Java version every six months. Java 25 was released on September 16, 2025. At JetBrains, we are committed to supporting new technologies in IntelliJ IDEA and adding useful enhancements for both stable and preview features. In this blog post, we will give you an overview of […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=604053",
        "categories": [
          "java",
          "news",
          "tutorials",
          "update",
          "intellij-idea",
          "java-25-2",
          "java-release",
          "java-support",
          "jdk-25",
          "release"
        ],
        "isoDate": "2025-09-16T11:15:34.000Z"
      }
    ]
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Allie Barry, Praveen Sethuraman",
        "title": "Getting the most out of MCP in Visual Studio with Prompts, Resources, and Sampling",
        "link": "https://devblogs.microsoft.com/visualstudio/mcp-prompts-resources-sampling/",
        "pubDate": "Wed, 17 Sep 2025 17:30:37 +0000",
        "content:encodedSnippet": "We’re excited to announce that Visual Studio now supports MCP prompts, resources, and sampling (with even more coming soon!) to enhance your Copilot experience by bringing in more context from your engineering stack. These powerful new features unlock deeper integrations with your favorite tools and services, making your development workflow more intelligent and context aware.\nTry MCP in Visual Studio\n\nLet’s dive into each of these features and discuss some examples with specific MCP servers that can truly level up your AI-coding experience.\nMCP Resources and Resource Templates: Access External Data Seamlessly\nModel Context Protocol also provides a standardized way for servers to expose resources to clients. Resources allow servers to share data that provides context to language models, such as files, database schemas, or application-specific information. Each resource is uniquely identified by a URI, allowing you to get even more out of your MCP servers and pull in context directly in the IDE.\nExample: Azure DevOps Work Items\nWhen working with Azure DevOps, you can now reference work items, user stories, and project data directly in your chat conversations. The Azure DevOps MCP server exposes resources like work item templates, sprint information, and team capacity data that Copilot can use to provide more contextual suggestions about your project planning and development tasks.\n\nUsing MCP Resources\nTo use any MCP resources available to you, reference them in Copilot chat the same way you would reference any other piece of context – with a hashtag (#) followed by the resource URI.\nResource Templates for Dynamic Content\nJust like with prompts, MCP resources can have arguments that you can fill in to customize the resource for your specific needs. These are called resource templates. To configure them:\nUse the + Reference button in chat\nSelect the MCP resource option from the menu\nChoose your resource template and fill in any required arguments\nClick Add Resource to make this MCP resource referenceable in chat\nExample: Figma Design Context\nFor teams working closely with design systems, the Figma MCP server allows you to reference design components, style guides, and design specifications directly in your development conversations. This bridges the gap between design and development by making design context readily available to Copilot.\n\nMCP Prompts and Prompt Templates: Get Better Responses with Specialized Instructions\nMCP Prompts allow servers to provide structured messages and instructions for interacting with language models that are catered to the use case and content of the server in question, ensuring that you will get the best responses for a certain task.\nHow to Use MCP Prompts\nVisual Studio now allows you to discover available prompts, retrieve their contents, and provide arguments to customize them. To reference any prompts that may come from an MCP server:\nClick the + Reference button in chat\nSelect the Prompts option\nChoose MCP prompts from the flyout\nYou’ll see a pop-up where you can select the prompt you’d like to use, then click Insert Prompt to include the text from this prompt in chat.\nPrompt Templates with Custom Arguments\nSome MCP prompts will have arguments that you can fill in to customize the prompt for your specific needs – these are known as prompt templates. If you select a prompt in the modal dialog that contains arguments, you’ll be able to specify those values before inserting the prompt into chat.\nExample: GitHub Integration\nImagine you’re working on code reviews and want to leverage GitHub’s specialized prompts. With the GitHub MCP server, you can access prompts specifically designed for analyzing pull requests, generating commit messages, or reviewing code changes. These prompts understand GitHub’s context and can provide more targeted assistance than generic prompts.\n\nMCP Sampling: Enabling Advanced Agentic Behaviors\nSampling in MCP allows servers to implement agentic behaviors by enabling LLM calls to occur nested inside other MCP server features. This powerful feature allows an MCP server to make requests of an LLM, rather than the typical workflow of an LLM requesting content from an MCP server. Visual Studio now supports this advanced capability, allowing your MCP servers to perform more complex, multi-step tasks on your behalf.\nHow Sampling works\nThere’s nothing to configure to take advantage of sampling – as long as your MCP server supports it, Visual Studio will too. When Copilot determines that a request would benefit from a sampling call, you’ll see a dialog containing all details of the request, asking you to confirm the sampling call before anything happens behind the scenes. This ensures you maintain full control over any automated actions.\nExample: Playwright testing scenarios \nThe Playwright MCP server can use sampling to automatically generate comprehensive test scenarios based on your application’s current state. When you ask for help with testing, it might sample your application’s DOM structure, analyze user flows, and then generate targeted test scripts that cover critical user paths – all through intelligent sampling calls that you approve.\n\nGetting Started\nThese new MCP capabilities are available now in Visual Studio. To get the most out of these features, we recommend exploring the MCP servers that align with your development workflow. Each server brings unique prompts, resources, and potentially sampling capabilities that can significantly enhance your Copilot experience.\nTry out some other popular MCP servers in Visual Studio with one-click:\n – Discover and install custom prompts and instructions for GitHub Copilot.\n – Convert various file formats (PDF, Word, Excel, images, audio) to Markdown.\n – Query and analyze data in DuckDB databases locally and in the cloud.\n – Database operations and management. Execute queries, manage collections, aggregation pipelines, and document operations.\n – Access models, datasets, and Spaces on the Hugging Face Hub.\nThe seamless integration of external tools and services through MCP represents a major step forward in creating a truly connected development environment. By bringing context from your entire engineering stack directly into your IDE, these features help Copilot provide more accurate, relevant, and actionable assistance for your daily development tasks.\nGive us your feedback!\nWe’re excited to continue evolving the MCP experience in VS, and your input plays a big role—please give us your feedback here, and let us know what you’d like to see next!\nTry MCP in Visual Studio\n\nThe post Getting the most out of MCP in Visual Studio with Prompts, Resources, and Sampling appeared first on Visual Studio Blog.",
        "dc:creator": "Allie Barry, Praveen Sethuraman",
        "comments": "https://devblogs.microsoft.com/visualstudio/mcp-prompts-resources-sampling/#comments",
        "content": "<p>We&#8217;re excited to announce that Visual Studio now supports MCP prompts, resources, and sampling (with even more coming soon!) to enhance your Copilot experience by bringing in more context from your engineering stack. These powerful new features unlock deeper integrations with your favorite tools and services, making your development workflow more intelligent and context aware. [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/mcp-prompts-resources-sampling/\">Getting the most out of MCP in Visual Studio with Prompts, Resources, and Sampling</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "We’re excited to announce that Visual Studio now supports MCP prompts, resources, and sampling (with even more coming soon!) to enhance your Copilot experience by bringing in more context from your engineering stack. These powerful new features unlock deeper integrations with your favorite tools and services, making your development workflow more intelligent and context aware. […]\nThe post Getting the most out of MCP in Visual Studio with Prompts, Resources, and Sampling appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=254405",
        "categories": [
          "GitHub Copilot",
          "Visual Studio",
          "Artificial Intelligence",
          "Chat",
          "Copilot",
          "developer",
          "Extensions",
          "GitHub",
          "LLM",
          "MCP",
          "Model Context Protocol",
          "prompts",
          "Resources",
          "sampling",
          "server"
        ],
        "isoDate": "2025-09-17T17:30:37.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": [
      {
        "title": "노코드 도구 Dify 사용기",
        "link": "http://daddynkidsmakers.blogspot.com/2025/09/dify.html",
        "pubDate": "2025-09-16T07:16:00.000Z",
        "author": "Daddy Maker",
        "content": "<div style=\"text-align: left;\">이 글은&nbsp;노코드 도구 Dify 사용기이다.&nbsp;<br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgW_TD-4n57Xk8PWHweMa4J_q9CMHhlQvNwkU3HJpF3QDSdhIbfWJfFokjyM0FSIs8yvzMWiAEUWHth4wuMwQaEZVy0gAJtvXECnzFFPUFVn73LtDKmGjXCKZECSDyfxGo5-G-pqBDxagH5nofSMTFyeUBBeqJ0tLyl8iqTLb0lIEEwlHh1Vw2xXou0SLf9\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"1205\" data-original-width=\"786\" height=\"240\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgW_TD-4n57Xk8PWHweMa4J_q9CMHhlQvNwkU3HJpF3QDSdhIbfWJfFokjyM0FSIs8yvzMWiAEUWHth4wuMwQaEZVy0gAJtvXECnzFFPUFVn73LtDKmGjXCKZECSDyfxGo5-G-pqBDxagH5nofSMTFyeUBBeqJ0tLyl8iqTLb0lIEEwlHh1Vw2xXou0SLf9\" width=\"157\" /></a></div><br /></div><div style=\"text-align: left;\"><b>레퍼런스</b></div><div style=\"text-align: left;\"><ul style=\"text-align: left;\"><li><a href=\"https://medium.com/@tubelwj/guide-to-dify-an-open-source-platform-for-developing-large-language-model-llm-applications-e6cc2d39ecdf\">Guide to Dify, an open-source platform for developing large language model (LLM) applications | by Gen. Devin DL. | Medium</a></li><li><a href=\"https://dify-ai.medium.com/\">Dify.AI – Medium</a></li><li><a href=\"https://medium.com/@whiteking64/explore-dify-a-step-by-step-guide-to-building-a-simple-llm-powered-application-d1dd361a33ad\">Explore Dify: A Step-by-Step Guide to Building a Simple LLM-Powered Application | by Ken Maeda | Medium</a></li><li><a href=\"https://medium.com/@researchgraph/getting-started-with-dify-no-code-ai-application-development-52c98aef48f7\">Getting Started with Dify: No-Code AI Application Development | by Research Graph | Medium</a></li></ul></div><div style=\"text-align: left;\"><br /></div>",
        "contentSnippet": "이 글은 노코드 도구 Dify 사용기이다. \n\n\n레퍼런스\n\nGuide to Dify, an open-source platform for developing large language model (LLM) applications | by Gen. Devin DL. | Medium\nDify.AI – Medium\nExplore Dify: A Step-by-Step Guide to Building a Simple LLM-Powered Application | by Ken Maeda | Medium\nGetting Started with Dify: No-Code AI Application Development | by Research Graph | Medium",
        "id": "tag:blogger.com,1999:blog-5201956450461596914.post-8851914980377732492",
        "isoDate": "2025-09-16T07:16:00.000Z"
      },
      {
        "title": "노코드 도구 flowise 사용기",
        "link": "http://daddynkidsmakers.blogspot.com/2025/09/flowise.html",
        "pubDate": "2025-09-15T15:20:00.000Z",
        "author": "Daddy Maker",
        "content": "<div style=\"text-align: left;\">AI 채팅 플로우를 만드는 데 최적화된 노코드 도구입니다. LLM, RAG, 에이전트 등 AI 관련 기능을 시각적으로 쉽게 조합할 수 있다.</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEifUNMgWDxReR5ObMD5KFzEbOXAfVAd4kbeqH1051ZUymxltJ6aI5C5TukmOsSW9tYKzDJdcmH04e2M_HhIVgqahtlSunmtu2p7M3EsZSSxq-VNMg3geIsuxrxfE9qaREiOdZht88LSqi6OPGiwvFIk_HjIcknQjPlKzFFa2GIT_ABsGT5_xsSd90VqN7dY\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"1279\" data-original-width=\"2530\" height=\"162\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEifUNMgWDxReR5ObMD5KFzEbOXAfVAd4kbeqH1051ZUymxltJ6aI5C5TukmOsSW9tYKzDJdcmH04e2M_HhIVgqahtlSunmtu2p7M3EsZSSxq-VNMg3geIsuxrxfE9qaREiOdZht88LSqi6OPGiwvFIk_HjIcknQjPlKzFFa2GIT_ABsGT5_xsSd90VqN7dY\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://github.com/FlowiseAI/Flowise\">FlowiseAI/Flowise: Build AI Agents, Visually</a></div></div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\"><div>AI 개발에 최적화: RAG(문서 기반 답변) 챗봇이나 AI 에이전트를 매우 쉽고 빠르게 만들 수 있다.</div><div>직관적인 UI: AI 모델과 프롬프트를 연결하는 과정이 시각적이고 간단하여 입문자가 사용하기 좋다.</div><div>빠른 프로토타이핑: AI 챗봇 아이디어를 몇 분 만에 테스트 가능한 프로토타입으로 만들 수 있다.</div><div><br /></div><div>제한적인 자동화 기능: 다른 앱(슬랙, 구글 시트 등)과 연동하여 복잡한 업무 자동화를 구현하는 기능은 약하다.</div><div>챗봇 외 기능 부족: 사용자와 상호작용하는 챗봇이나 채팅 API 외의 다른 종류의 앱을 만들기 어렵다.</div><div><br /></div><div>반면 n8n은 서로 다른 앱과 서비스들을 연결하여 반복적인 업무를 자동화하는 워크플로우를 만드는 데 강력하다. AI 모델을 자동화의 한 단계로 사용할 수는 있지만, Flowise처럼 RAG나 에이전트 같은 복잡한 AI 로직을 설계하기는 어렵다. 사용자 화면을 만드는 기능이 없어 순수하게 백엔드 자동화에만 집중한다.</div></div><div style=\"text-align: left;\"><br /><b>레퍼런스<br /><ul style=\"text-align: left;\"><li><a href=\"https://cobusgreyling.medium.com/flowise-for-langchain-b7c4023ffa71\">Flowise For 🦜🔗LangChain. Flowise is an open source Graphic User… | by Cobus Greyling | Medium</a></li></ul></b></div>",
        "contentSnippet": "AI 채팅 플로우를 만드는 데 최적화된 노코드 도구입니다. LLM, RAG, 에이전트 등 AI 관련 기능을 시각적으로 쉽게 조합할 수 있다.\n\n\n\nFlowiseAI/Flowise: Build AI Agents, Visually\n\n\n\nAI 개발에 최적화: RAG(문서 기반 답변) 챗봇이나 AI 에이전트를 매우 쉽고 빠르게 만들 수 있다.\n직관적인 UI: AI 모델과 프롬프트를 연결하는 과정이 시각적이고 간단하여 입문자가 사용하기 좋다.\n빠른 프로토타이핑: AI 챗봇 아이디어를 몇 분 만에 테스트 가능한 프로토타입으로 만들 수 있다.\n\n\n제한적인 자동화 기능: 다른 앱(슬랙, 구글 시트 등)과 연동하여 복잡한 업무 자동화를 구현하는 기능은 약하다.\n챗봇 외 기능 부족: 사용자와 상호작용하는 챗봇이나 채팅 API 외의 다른 종류의 앱을 만들기 어렵다.\n\n\n반면 n8n은 서로 다른 앱과 서비스들을 연결하여 반복적인 업무를 자동화하는 워크플로우를 만드는 데 강력하다. AI 모델을 자동화의 한 단계로 사용할 수는 있지만, Flowise처럼 RAG나 에이전트 같은 복잡한 AI 로직을 설계하기는 어렵다. 사용자 화면을 만드는 기능이 없어 순수하게 백엔드 자동화에만 집중한다.\n\n레퍼런스\n\nFlowise For 🦜🔗LangChain. Flowise is an open source Graphic User… | by Cobus Greyling | Medium",
        "id": "tag:blogger.com,1999:blog-5201956450461596914.post-4051796819247668942",
        "isoDate": "2025-09-15T15:20:00.000Z"
      }
    ]
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "logsdb 인덱스 모드",
        "link": "https://kangmyounghun.blogspot.com/2025/09/logsdb.html",
        "pubDate": "2025-09-19T12:05:00.004Z",
        "author": "강명훈",
        "content": "<div>엘라스틱이 v8.17부터&nbsp;<a href=\"https://www.elastic.co/search-labs/blog/elasticsearch-logsdb-index-mode\" target=\"_blank\">logsdb 인텍스 모드</a>라는 기능을 제공하고 있더라. 디스크 저장 용량을 절약해준다고. 인덱스 모드를 지정해줘야 해서 템플릿 사용 필수.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjm8ihkjvkF0It7M-y5eqkI25ChefDh5th0fKigWCB6BcGmuqwJCfSbaH7DOZgTlNeCJAAFomVwoQsfRgQOvFRorjd0PkdGoolo3s5HU2N6d4y3ne-Co2TyI7dUd9dKS1RjGdjjAxOV_s-zvRUOahYcSFYNWTO0b_MaIgVk1_8SJrUgyNnaZ-Fhxyhjr-II/s1272/logsdb.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1272\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjm8ihkjvkF0It7M-y5eqkI25ChefDh5th0fKigWCB6BcGmuqwJCfSbaH7DOZgTlNeCJAAFomVwoQsfRgQOvFRorjd0PkdGoolo3s5HU2N6d4y3ne-Co2TyI7dUd9dKS1RjGdjjAxOV_s-zvRUOahYcSFYNWTO0b_MaIgVk1_8SJrUgyNnaZ-Fhxyhjr-II/s16000/logsdb.png\" /></a></div><br /><span><a name='more'></a></span><div>standard와 logsdb 인덱스 모드를 비교해봤다. 둘 다 같은 테이블 구조.</div><div><br /></div><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg9rBzMCchItBuyc9KIxVx01rYDHlJAaXSlOyihyphenhyphen4N8f_sfxU-Iw2wwXL1NS1YZ-Le40-5V8jmn98cl_ZpTHkTf_BIGlBYLpZdTd2NwTfTjuJvBjStoIkNArBULf3osSURRgBKSEWUsxof81cuczV8MG2KrB6DtlM5Yo-erzd6YqbJMtKD3uro6qX5JYx_Y/s1280/compare1.png\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"684\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg9rBzMCchItBuyc9KIxVx01rYDHlJAaXSlOyihyphenhyphen4N8f_sfxU-Iw2wwXL1NS1YZ-Le40-5V8jmn98cl_ZpTHkTf_BIGlBYLpZdTd2NwTfTjuJvBjStoIkNArBULf3osSURRgBKSEWUsxof81cuczV8MG2KrB6DtlM5Yo-erzd6YqbJMtKD3uro6qX5JYx_Y/s16000/compare1.png\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\"><b>standard 인덱스</b></td></tr></tbody></table>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiLpFbHR3LF0Z8mlnKuOPf3Pocs0LKTuOi8CoJ7b2VkAm3wNz-2QrCi9BYRneDrIhyHCsG_zqhSkcmdRhme0YIY5R6LMtmke32zS6NPex2nCNqUJs2U91Pv6sZ2hTIP4yRlG7WTK_v7gWeDwT1gpb3Pol_he1UmrlmSks1OFb29RcqTrk-3vUa0YaEk8Oo9/s1280/compare2.png\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"684\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiLpFbHR3LF0Z8mlnKuOPf3Pocs0LKTuOi8CoJ7b2VkAm3wNz-2QrCi9BYRneDrIhyHCsG_zqhSkcmdRhme0YIY5R6LMtmke32zS6NPex2nCNqUJs2U91Pv6sZ2hTIP4yRlG7WTK_v7gWeDwT1gpb3Pol_he1UmrlmSks1OFb29RcqTrk-3vUa0YaEk8Oo9/s16000/compare2.png\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\"><b>logsdb 인덱스</b></td></tr></tbody></table><div><br /></div><div>최대 65%까지 줄여준다고 하는데 정리 시간이 조금 걸리지만, 암튼 줄기는 준다. 용량 문제 때문에 text, keyword 필드 매핑 고민하는 분들에게 반가운 기능일 듯.&nbsp;</div><div><br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjJti4LAkn60qmmJ3pKpFyR_b9YcJy-qvUfIVWhtOaGgQwb6r6Op7XCzxLZdKVLABpMsW8afN_Qmec6xFmaNNUH78m1n2IpktnKhmYuy51ABxscikpQUopUuxS9kY17UBxvN_LngnMKpiWleLeRhUQHnONCEpqF1Y3dFdguKh4I-5BdvBpniy39bBPMXKwc/s1280/compare3.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"690\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjJti4LAkn60qmmJ3pKpFyR_b9YcJy-qvUfIVWhtOaGgQwb6r6Op7XCzxLZdKVLABpMsW8afN_Qmec6xFmaNNUH78m1n2IpktnKhmYuy51ABxscikpQUopUuxS9kY17UBxvN_LngnMKpiWleLeRhUQHnONCEpqF1Y3dFdguKh4I-5BdvBpniy39bBPMXKwc/s16000/compare3.png\" /></a></div><br /><div>참고로 같은 데이터의 스플렁크 저장 결과는 이렇다.</div><div><br /></div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgM5ocok9tqtVUxTXQkgZKvcI8Y_5OeQWTbXuUJ5TjCjckG_O9paQyn-nO8P0WrR7hQcdUnF-1q1xiaeofM2_5bPbXulgIoVkYCa-rP556rqk28Hq11pxoDfb4wsrg98IYeXcnaIsEw7cmGkVdWwxFvpzLCLBfMVTgtdcwWKiKc1VLb-O3v0dgm7j58IB9U/s1280/splunk.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"491\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgM5ocok9tqtVUxTXQkgZKvcI8Y_5OeQWTbXuUJ5TjCjckG_O9paQyn-nO8P0WrR7hQcdUnF-1q1xiaeofM2_5bPbXulgIoVkYCa-rP556rqk28Hq11pxoDfb4wsrg98IYeXcnaIsEw7cmGkVdWwxFvpzLCLBfMVTgtdcwWKiKc1VLb-O3v0dgm7j58IB9U/s16000/splunk.png\" /></a></div></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgEOqd8P7BzRf1sOJziGHYQNhCGwRgee1q97GQI7omlW3UuQDbz8chqLxLSzxtAPFsEgNSFXYx9TB_wHTMrI9USUOA9e6nAkwjdt4tyxEzBirF6PLNAhVVgW16zkm2nOfX44se4q8Tqn10b3SC-TFIrov0i0aeJ6ksIPNYB7hjewxRyKNJN2c7FKCEI-k61/s1280/splunk2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"690\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgEOqd8P7BzRf1sOJziGHYQNhCGwRgee1q97GQI7omlW3UuQDbz8chqLxLSzxtAPFsEgNSFXYx9TB_wHTMrI9USUOA9e6nAkwjdt4tyxEzBirF6PLNAhVVgW16zkm2nOfX44se4q8Tqn10b3SC-TFIrov0i0aeJ6ksIPNYB7hjewxRyKNJN2c7FKCEI-k61/s16000/splunk2.png\" /></a></div><div><br /></div><div><a href=\"https://docs.splunk.com/Documentation/Splunk/9.4.2/Admin/Propsconf#Field_extraction_configuration\" target=\"_blank\">KV_MODE</a> 기능 때문에 필드 개수가 4배 가까이 많은데도 디스크 용량을 압도적으로 절약할 수 있다. 읽기 스키마 기반이라 실제 디스크에 기록되는 필드는 몇 개 안 되니 당연한 결과. <strike><span style=\"font-size: x-small;\">대신 라이센스가 비쌈</span></strike></div><div><br /></div><div><div><b>관련 글</b></div><div><ul><li><a href=\"https://kangmyounghun.blogspot.com/2025/04/elasticsearch-90.html\">Elasticsearch 9.0의 변화</a></li></ul></div></div>",
        "contentSnippet": "엘라스틱이 v8.17부터 logsdb 인텍스 모드라는 기능을 제공하고 있더라. 디스크 저장 용량을 절약해준다고. 인덱스 모드를 지정해줘야 해서 템플릿 사용 필수.\n\n\n\n\nstandard와 logsdb 인덱스 모드를 비교해봤다. 둘 다 같은 테이블 구조.\n\n\n\n\nstandard 인덱스\n\n\n\nlogsdb 인덱스\n\n\n\n최대 65%까지 줄여준다고 하는데 정리 시간이 조금 걸리지만, 암튼 줄기는 준다. 용량 문제 때문에 text, keyword 필드 매핑 고민하는 분들에게 반가운 기능일 듯. \n\n\n\n\n참고로 같은 데이터의 스플렁크 저장 결과는 이렇다.\n\n\n\n\n\n\n\nKV_MODE 기능 때문에 필드 개수가 4배 가까이 많은데도 디스크 용량을 압도적으로 절약할 수 있다. 읽기 스키마 기반이라 실제 디스크에 기록되는 필드는 몇 개 안 되니 당연한 결과. 대신 라이센스가 비쌈\n\n\n관련 글\n\nElasticsearch 9.0의 변화",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-5874379893451276157",
        "isoDate": "2025-09-19T12:05:00.004Z"
      },
      {
        "title": "opensearch-3.2.0",
        "link": "https://kangmyounghun.blogspot.com/2025/09/opensearch-320.html",
        "pubDate": "2025-09-17T13:39:00.001Z",
        "author": "강명훈",
        "content": "<div>opensearch 윈도우 버전은 도커 이미지만 있었는데 이제 <a href=\"https://docs.opensearch.org/latest/install-and-configure/install-opensearch/windows/\" target=\"_blank\">설치 버전</a>도 제공한다. 환경변수<span style=\"font-size: x-small;\">(관리자 패스워드)</span> 등록 및 보안 플러그인 셋업<span style=\"font-size: x-small;\">(opensearch-windows-install.bat)</span> 과정이 좀 낯설지만 매뉴얼대로만 하면 어렵진 않음.&nbsp;&nbsp;</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgKvElwzjga9fsaeteti9wgL3C_OeRlFNx19bEzLBXQ4-nKekJhZ4VogFibx3Ych9_nFnvZCCiVYe5RuJpymvrW2HvE-em0VOkNH_1NQzWEvildv_2kR3L94d6iP1s0PI4ZG0vuHgzGJk-Kj-Sj5o80ulgbFQmypk3MNSopSAyM_021QoZBljLz5gKNN2Qb/s1203/opensearch.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"694\" data-original-width=\"1203\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgKvElwzjga9fsaeteti9wgL3C_OeRlFNx19bEzLBXQ4-nKekJhZ4VogFibx3Ych9_nFnvZCCiVYe5RuJpymvrW2HvE-em0VOkNH_1NQzWEvildv_2kR3L94d6iP1s0PI4ZG0vuHgzGJk-Kj-Sj5o80ulgbFQmypk3MNSopSAyM_021QoZBljLz5gKNN2Qb/s16000/opensearch.png\" /></a></div>\n<span><a name='more'></a></span>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEigNFM6YHamos8xwj3I8c5X_bnLXYWCYhcbWEmpGf4Ndy7rqUF5uRKfWRC4MMLCViFhvI8yVMUVCY5xq4VwL5wmmAy5-moDZW4chrXiw0RoD-yWBwyvKdGoxim02xvwQleHY0_lxxm-0VXPAGPsBic55cW0LCvz8sfFzsmHNtrAOjdbTCLm3rqhqGXyp8gC/s1278/opensearch-dashboard.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1278\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEigNFM6YHamos8xwj3I8c5X_bnLXYWCYhcbWEmpGf4Ndy7rqUF5uRKfWRC4MMLCViFhvI8yVMUVCY5xq4VwL5wmmAy5-moDZW4chrXiw0RoD-yWBwyvKdGoxim02xvwQleHY0_lxxm-0VXPAGPsBic55cW0LCvz8sfFzsmHNtrAOjdbTCLm3rqhqGXyp8gC/s16000/opensearch-dashboard.png\" /></a></div><br /><div>데이터 수집툴은&nbsp;<a href=\"https://opensearch.org/downloads/\" target=\"_blank\">data-prepper</a>라는 게&nbsp;있는데 로그스태시가 편해서 opensearch 플러그인만 추가 설치.</div><div><br /></div>\n<div class=\"colorscripter-code\" style=\"color: #010101; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; overflow: auto; position: relative;\"><table cellpadding=\"0\" cellspacing=\"0\" class=\"colorscripter-code-table\" style=\"background-color: #fafafa; border-radius: 4px; border: none; margin: 0px; padding: 0px;\"><tbody><tr><td style=\"padding: 6px 0px; text-align: left;\"><div style=\"color: #010101; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; line-height: 130%; margin: 0px; padding: 0px;\"><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">PS&nbsp;D:\\ELK\\logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span><span style=\"color: #0099cc;\">9.</span><span style=\"color: #0099cc;\">1.</span><span style=\"color: #0099cc;\">3</span>\\bin<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">&gt;</span>&nbsp;.\\logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>plugin&nbsp;install&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>opensearch</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\"><span style=\"color: #63a35c;\">\"Using&nbsp;bundled&nbsp;JDK:&nbsp;D:\\ELK\\logstash-9.1.3\\jdk\\bin\\java.exe\"</span></div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">Validating&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>opensearch</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">Resolving&nbsp;mixin&nbsp;dependencies</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">Updating&nbsp;mixin&nbsp;dependencies&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>mixin<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>ecs_compatibility_support</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">Bundler&nbsp;attempted&nbsp;to&nbsp;update&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>mixin<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>ecs_compatibility_support&nbsp;but&nbsp;its&nbsp;version&nbsp;stayed&nbsp;the&nbsp;same</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">Installing&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>opensearch</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">Installation&nbsp;successful</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">PS&nbsp;D:\\ELK\\logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span><span style=\"color: #0099cc;\">9.</span><span style=\"color: #0099cc;\">1.</span><span style=\"color: #0099cc;\">3</span>\\bin<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">&gt;</span>&nbsp;.\\logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>plugin&nbsp;list&nbsp;output</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\"><span style=\"color: #63a35c;\">\"Using&nbsp;bundled&nbsp;JDK:&nbsp;D:\\ELK\\logstash-9.1.3\\jdk\\bin\\java.exe\"</span></div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>integration<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>aws</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;├──&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>codec<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>cloudfront</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;├──&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>codec<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>cloudtrail</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;├──&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>input<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>cloudwatch</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;├──&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>input<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>s3</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;├──&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>input<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>sqs</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;├──&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>cloudwatch</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;├──&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>s3</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;├──&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>sns</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;└──&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>sqs</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>integration<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>kafka</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;├──&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>input<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>kafka</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;└──&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>kafka</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>integration<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>logstash</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;├──&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>input<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>logstash</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;└──&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>logstash</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>integration<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>rabbitmq</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;├──&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>input<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>rabbitmq</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;└──&nbsp;logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>rabbitmq</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>csv</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>elasticsearch</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>email</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>file</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>graphite</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>http</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>lumberjack</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>nagios</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>null</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>opensearch</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>pipe</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>redis</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>stdout</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>tcp</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>udp</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">logstash<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>output<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>webhdfs</div></div><div style=\"font-size: 9px; font-style: italic; margin-right: 5px; margin-top: -13px; text-align: right;\"><a href=\"http://colorscripter.com/info#e\" style=\"color: #e5e5e5text-decoration:none;\" target=\"_blank\">Colored by Color Scripter</a></div></td><td style=\"padding: 0px 2px 4px 0px; vertical-align: bottom;\"><a href=\"http://colorscripter.com/info#e\" style=\"color: white; text-decoration: none;\" target=\"_blank\"><span style=\"background-color: #e5e5e5; border-radius: 10px; color: white; font-size: 9px; padding: 1px; word-break: normal;\">cs</span></a></td></tr></tbody></table></div>\n<div><br /></div><div>opensearch 플러그인 제공하는 거 보니 아마존이랑 엘라스틱 잘 화해한 모양.</div><div><br /></div><div><b>관련 글</b><br /><ul><li><a href=\"https://kangmyounghun.blogspot.com/2021/02/elasticsearch-sql-2nd.html\" target=\"\">Elasticsearch SQL - 2nd</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2019/03/open-distro-for-elasticsearch.html\" target=\"\">Open Disto for Elasticsearch</a></li></ul></div>",
        "contentSnippet": "opensearch 윈도우 버전은 도커 이미지만 있었는데 이제 설치 버전도 제공한다. 환경변수(관리자 패스워드) 등록 및 보안 플러그인 셋업(opensearch-windows-install.bat) 과정이 좀 낯설지만 매뉴얼대로만 하면 어렵진 않음.  \n\n\n\n\n\n\n데이터 수집툴은 data-prepper라는 게 있는데 로그스태시가 편해서 opensearch 플러그인만 추가 설치.\n\n\n\n\n\nPS D:\\ELK\\logstash-9.1.3\\bin> .\\logstash-plugin install logstash-output-opensearch\n\"Using bundled JDK: D:\\ELK\\logstash-9.1.3\\jdk\\bin\\java.exe\"\nValidating logstash-output-opensearch\nResolving mixin dependencies\nUpdating mixin dependencies logstash-mixin-ecs_compatibility_support\nBundler attempted to update logstash-mixin-ecs_compatibility_support but its version stayed the same\nInstalling logstash-output-opensearch\nInstallation successful\nPS D:\\ELK\\logstash-9.1.3\\bin> .\\logstash-plugin list output\n\"Using bundled JDK: D:\\ELK\\logstash-9.1.3\\jdk\\bin\\java.exe\"\nlogstash-integration-aws\n ├── logstash-codec-cloudfront\n ├── logstash-codec-cloudtrail\n ├── logstash-input-cloudwatch\n ├── logstash-input-s3\n ├── logstash-input-sqs\n ├── logstash-output-cloudwatch\n ├── logstash-output-s3\n ├── logstash-output-sns\n └── logstash-output-sqs\nlogstash-integration-kafka\n ├── logstash-input-kafka\n └── logstash-output-kafka\nlogstash-integration-logstash\n ├── logstash-input-logstash\n └── logstash-output-logstash\nlogstash-integration-rabbitmq\n ├── logstash-input-rabbitmq\n └── logstash-output-rabbitmq\nlogstash-output-csv\nlogstash-output-elasticsearch\nlogstash-output-email\nlogstash-output-file\nlogstash-output-graphite\nlogstash-output-http\nlogstash-output-lumberjack\nlogstash-output-nagios\nlogstash-output-null\nlogstash-output-opensearch\nlogstash-output-pipe\nlogstash-output-redis\nlogstash-output-stdout\nlogstash-output-tcp\nlogstash-output-udp\nlogstash-output-webhdfs\n\nColored by Color Scripter\ncs\n\n\n\n\nopensearch 플러그인 제공하는 거 보니 아마존이랑 엘라스틱 잘 화해한 모양.\n\n\n관련 글\n\nElasticsearch SQL - 2nd\nOpen Disto for Elasticsearch",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-6489833138404246302",
        "isoDate": "2025-09-17T13:39:00.001Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": [
      {
        "creator": "고명환",
        "title": "비트마인의 이더리움 매입 전략&nbsp; - 마이크로스트레티지 모델의 확장판?",
        "link": "https://brunch.co.kr/@@LOc/311",
        "pubDate": "Thu, 18 Sep 2025 03:00:17 GMT",
        "author": "고명환",
        "content": "1. 왜 지금 이더리움인가? 최근 글로벌 크림토 시장에서는 기업이 재무 전략 창원에서 암호화폐를 매입하는 흐름이 확산되고 있습니다. 대표적인 사례가 바로 마이크로스트레티지의 비트코인 대량 매입 전략입니다.  마이크로스트레티지는 비트코인을 기업 재무 자산으로 편입해 약 24만 BTC 이상을 확보하면서 &nbsp;&quot;비트코인 ETF를 뛰어넘는 기업형 BTC 금고&quot;라는 평<img src= \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2FLOc%2Fimage%2FGtP-VRDw9XAIyadlPSV6pcC2lac\" width=\"500\" />",
        "contentSnippet": "1. 왜 지금 이더리움인가? 최근 글로벌 크림토 시장에서는 기업이 재무 전략 창원에서 암호화폐를 매입하는 흐름이 확산되고 있습니다. 대표적인 사례가 바로 마이크로스트레티지의 비트코인 대량 매입 전략입니다.  마이크로스트레티지는 비트코인을 기업 재무 자산으로 편입해 약 24만 BTC 이상을 확보하면서  \"비트코인 ETF를 뛰어넘는 기업형 BTC 금고\"라는 평",
        "guid": "https://brunch.co.kr/@@LOc/311",
        "isoDate": "2025-09-18T03:00:17.000Z"
      }
    ]
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": [
      {
        "creator": "bahamoth",
        "title": "Mobile Attribution in The Privacy-First Era",
        "link": "https://01010011.blog/2025/09/17/mobile-attribution-in-the-privacy-first-era/",
        "pubDate": "Wed, 17 Sep 2025 11:47:41 +0000",
        "content:encodedSnippet": "개요\n개인정보 보호의 중요성이 대두되면서 모바일 어트리뷰선의 패러다임은 크게 변화하였다. 과거에는 IDFA, GAID 등의 광고 식별자를 통해 명확한 측정이 가능하였으나, 사용자의 개인정보 보호를 최우선으로 하는 현대에는 더이상 Deterministic한 사용자 식별이 불가능하다.\n이 글에서는 Apple의 SKAdNetwork(SKAN)와 Google의 Privacy Sandbox로 대표하는 모바일 환경의 개인정보 보호 프레임워크에 대해 설명하고, 어떻게 확률론적으로 모바일 어트리뷰선을 획득하는지에 대해 알아보겠다.\n어떻게 알고 오셨어요?\n1970년대, 미국 디트로이트의 자동차 판매원 ‘조 지라드(Joe Girard)’는 15년간 13,001대의 차를 팔아 ‘세계에서 가장 위대한 세일즈맨’으로 기네스북에 올랐다.\n그의 성공 비결은 차를 파는 기술이 아니라, 고객을 끊임없이 만들어내는 ‘시스템’에 있었다. 그는 자신의 고객이 될 만한 사람을 소개해 주는 사람들을 ‘버드 도그(Bird Dogs, 사냥개)’ 라고 불렀다. 이발사, 식당 주인, 은행원 등 주변의 모든 사람이 그의 ‘버드 도그’가 될 수 있었다.\n그의 규칙은 간단했다. “저에게 손님을 보내주십시오. 그 손님이 차를 사면, 제가 바로 당신에게 25달러를 보내드리겠습니다.”\n이 시스템이 완벽하게 돌아가려면 가장 중요한 전제 조건이 있었다. 바로 “이 고객을 누가 보냈는가?” 를 한 치의 오차도 없이 파악하는 것이었다.\n조 지라드는 새로운 고객이 오면 가장 먼저 “누가 당신을 제게 보냈습니까?”라고 물었다. 그리고 판매가 성사되면 장부에 꼼꼼히 기록해 두었다가, 약속한 25달러를 소개자에게 반드시 보냈다.\n조 지라드의 일화와 마찬가지로 모바일 앱 서비스 생태계에서는 어떤 광고활동이나 마케팅이 고객의 유입이나 결제로 이어졌는지 추적하고 그 공로를 찾아내는데, 그 과정을 Mobile Attribution 이라고 한다.\nDeterministic Attribution\nAttribution을 정확히 측정하는 것은 매우 중요하다. 이 손님이 이발사의 소개를 받고 왔는지, 은행원의 소개를 받고 왔는지를 알아야 누구에게 얼마의 광고료를 줄지 판단할 수 있기 때문이다.\n‘이 손님은 누구의 소개를 받고 왔는가?’ 이 질문에 답하기 위해 모바일 플랫폼은 Ad Network에게 다음 정보를 전달하였다.\nIDFA (Identifier for Advertisers): Apple이 iOS 기기를 위해 제공하는, 사용자가 재설정할 수 있는 광고 식별자\nGAID (Google Advertising ID): Google이 Google Play 서비스가 설치된 Android 기기를 위해 제공하는 광고 식별자\nIDFA, GAID는 모두 사용자의 기기를 정확히 식별할 수 있는 고유의 값이다. 따라서 IDFA 와 GAID 를 알면 정확한 Mobile Attribution을 획득할 수 있다.\n사용자가 광고를 클릭\nAd Network는 해당 기기의 IDFA / GAID를 캡처 후 저장\n사용자가 앱을 설치, 처음으로 실행\n100% 정확한 사용자 유입 경로를 알 수 있는 Attribution 획득\n이러한 Deterministic 한 Attribution 획득 방식으로 인해, 광고주들은 어떤 광고가 어떤 사용자를 유입시켰는지에 대한 명확한 데이터를 확보할 수 있었고, 이는 모바일 광고 생태계를 성장시키는 기반이었다. 하지만 이제 공짜점심은 끝났다. 모바일 플랫폼의 개인정보 보호 강화 기조 아래, 사용자 동의 없이 Deterministic Attribution 획득은 불가능하다. 이 글을 읽고 있는 당신도 그러겠지만, 사용자들은 더 이상 나를 특정할 수 있는 개인정보 제공에 동의하지 않는다.\nProbabilistic Attribution\nApple의 ATT(AppTrackingTransparency)와 SKAN(SKAdNetwork) Framework\n상술하였듯, 애플은 더 이상 사용자 동의 없이 IDFA를 제공하지 않는다.(정확히 말하면 ‘명시적인’ 사용자 동의 없이).\n\n\n\n\n따라서 iOS14+ 이후부터는 기기의 IDFA 값을 가져오려면 ATT(AppTrackingTransparency) 프레임워크를 통해 반드시 명시적으로 사용자의 권한을 획득하여야 한다. 사용자가 동의를 거부하면 상기 스샷과 같이 IDFA 값은 000000~ 으로 비워진다.\n이는 광고주 및 Ad Network 모두에게 치명적인 문제다. 내 광고가 누구에 의해 노출이 되었는지 명확히 알지 못하기 때문에 어느 경로를 통해 고객이 유입되었는지 파악할 수 없고, 광고 비즈니스의 대전제(어떻게 알고 오셨어요?)가 무너지게 된다.\n대안으로, 애플은 개인을 특정할 수는 없는 제한된 정보를 제공하는 광고 식별자 획득 방식을 제공하는데, 그것이 SKAN(SKAdNetwork)이다.\n\n\n\n\nSKAN 의 데이터 흐름은 다음과 같다.\nAd Network: 광고를 개제\nAd Network: 제한된 Attribution(Postback) 수집 URL 등록\n사용자: 광고를 클릭 -> 앱 설치\nApple: 광고사업자가 개인 추적이 어렵도록 일정 기간 지연(~최대 144시간)\nAd Network: 일정시간 경과 후 Postback 으로 캠페인 ID 및 제한된 사용자 정보(Conversion Value) 수신(IDFA 없음)\n여기서 유일하게 사용자 정보를 얻어낼 수단은 CV(Conversion Value) 뿐이다. CV는 0~63 사이의 정수로 표현되는 6bit 값으로, 광고주는 64 가지 값에 매핑하여 사용자의 앱 설치 후 행동을 수집할 수 있다. 예를 들어 CV가 1이면 튜토리얼 완료, CV가 2이면 최초 인앱 구매 완료 등의 값을 사전에 정의, Postback 시점에 획득하여 사용자를 분석할 수 있다. 알고 있겠지만 6bit 는 메우 제한된 값으로, CV를 단독으로 이용하여 사용자를 특정할 방법은 없다.\n말하자면 Apple 은 데이터 측정의 심판이자 유일한 처리자 역할을 자처한다. 광고주, Ad Network 는 모두 Apple 이 정해둔 엄격한 규칙 안에서 Apple이 제공하는 최종 결과물을 수동적으로 받아 해석해야 한다.\nAndroid 의 Privacy Sandbox와 Attribution Reporting API\n앞서 Apple이 모든 Attribution 획득 경로에 관여, 통제하면서 결과만 전달하는 방식과는 대조적으로, Google은 광고 생태계 참여자들이 개인정보 보호 기술을 기반으로 자체적인 프라이버시 보호 솔루션을 구축할 수 있도록 빌딩블록을 제공한다. 그 핵심 빌딩블록이 바로 Privacy Sandbox 이다.\nPrivacy Sandbox는 다음 3가지 핵심 목표를 갖는다.\n기존의 추적 메커니즘을 대체할 새로운 개인정보 보호기술을 구축하는 것.\n퍼블리셔와 개발자가 침해적인 추적 없이도 무료 온라인 컨텐츠를 계속 제공할 수 있도록 지원하는 것.\n업계와의 협력을 통해 새로운 인터넷 개인정보 보호 표준을 구축하는 것.\n요약하면, 개인정보를 보호하면서도 퍼블리셔와 개발자가 광고 기반 비즈니스를 지속할 수 있도록 하는 업계 표준을 만드는 것이다.\n\n\n\n\nGoogle의 Privacy Sandbox가 기존의 Attribution 획득방식과 기술적으로 가장 크게 구별되는 부분은 사용자 디바이스 안에서 Ad Network 정보와 매칭되는 Attribution을 만들어낸다는 점이다.\n디바이스 안에서 Attribution을 획득하기 때문에 광고 비즈니스 사업자는 사용자의 개인정보를 디바이스 밖으로 빼내지 넘기지 않고도 유의미한 사용자 전환 정보를 얻을 수 있다.\n이렇게 사용자 단말에서 생성된 익명화된 Attribution은 Attribution Reporting API(줄여서 ARA)를 통해 수집된다.\nARA를 통해 수집되는 리포트는 크게 2가지 유형이 존재한다.\nEvent-Level Report: “어떤 광고가 전환을 유도했는가?”와 같이 제한적이지만 세분화된 정보\nSummary Reports: “캠페인의 총매출액과 ROI는 얼마인가?”와 같이 구매 금액 등 상세한 전환 데이터를 암호화 및 집계된 형태로 제공\nEvent Level Report는 익명화된 개별 정보이다. 개별정보이지만 익명화 되어 있기 때문에 많은 정보가 담겨있지는 않다. Attribution 정보와 사용자 클릭, 조회 등의 이벤트를 매핑한 데이터를 제공한다. 이 리포트는 캠페인 도달율 측정이나 Attribution 집계 등의 용도로 적합하다.\n반면, Summary Report는 사용자 데이터를 집계한 통계 결과물이다. 개별화된 정보는 없지만 전환가치, ROI, 사용자 세그먼트 별 캠페인 성과분석 등 깊이있는 리포트를 제공한다.\n이 데이터들은 암호화된 형태(=encrypted aggregatable report)로 Ad tech platform(Appsflyer, Meta, Applovin 등등..)에게 전달되며, 이 암호화된 데이터를 기반으로 필요한 쿼리를 Cloud Trusted Execution Environment에 위치한 Aggregation Service 에 질의한다.\nCloud Trusted Execution Environment(TEE)?\nTEE란 구글에서 제안하는 보안 기준을 충족하는 & 신뢰할만한 클라우드 제공자의 인프라 위에서 동작하는 격리된 환경이다. TEE의 보안 기준을 충족하면 Ad Tech Platform 기업에서 자체적으로 구축, 운영할 수 있다.\nExecutive Summary\n지금까지 개인정보 보호의 시대에 어떻게 Mobile Attribution 획득 과정이 달라지는지에 대하여 알아보았다. 과거처럼 Deterministic하게 Attribution을 획득하던 시대는 끝났으며 개발자를 포함, 각 이해관계자들은 개인정보 보호의 시대의 Attribution 획득 방식을 준비해야 한다.\n결정론적 시대의 종말: 개인정보 보호 강화로 IDFA, GAID 기반의 1:1 사용자 추적이 불가능해졌다.\n확률론적 시대로의 전환: 이제는 명확한 데이터 대신, 제한된 데이터를 바탕으로 성과를 ‘추론’해야 한다.\nApple (SKAN)의 접근: Apple이 모든 과정을 통제하는 ‘블랙박스’ 방식이다.\nGoogle (샌드박스)의 접근: ‘온디바이스 매칭’ 을 핵심으로, 광고 생태계가 활용할 수 있는 ‘빌딩 블록’ 을 제공한다.\nAd Tech의 역할 변화: MMP, 광고 네트워크 등 Ad Tech는 암호화된 리포트를 받아, 직접 클라우드 보안 환경(TEE)에 ‘Aggregation Service’ 를 구축하고 운영하여 데이터를 처리해야 한다.",
        "dc:creator": "bahamoth",
        "comments": "https://01010011.blog/2025/09/17/mobile-attribution-in-the-privacy-first-era/#respond",
        "content": "개요 개인정보 보호의 중요성이 대두되면서 모바일 어트리뷰선의 패러다임은 크게 변화하였다. 과거에는 IDFA, GAID 등의 광고 식별자를 통해 명확한 측정이 가능하였으나, 사용자의 개인정보 보호를 최우선으로 하는 현대에는 더이상 Deterministic한 사용자 식별이 불가능하다. 이 글에서는 Apple의 SKAdNetwork(SKAN)와 Google의 Privacy Sandbox로 대표하는 모바일 환경의 개인정보 보호 프레임워크에 대해 설명하고, 어떻게 확률론적으로 모바일 어트리뷰선을 획득하는지에 대해 알아보겠다. 어떻게 알고 [&#8230;]",
        "contentSnippet": "개요 개인정보 보호의 중요성이 대두되면서 모바일 어트리뷰선의 패러다임은 크게 변화하였다. 과거에는 IDFA, GAID 등의 광고 식별자를 통해 명확한 측정이 가능하였으나, 사용자의 개인정보 보호를 최우선으로 하는 현대에는 더이상 Deterministic한 사용자 식별이 불가능하다. 이 글에서는 Apple의 SKAdNetwork(SKAN)와 Google의 Privacy Sandbox로 대표하는 모바일 환경의 개인정보 보호 프레임워크에 대해 설명하고, 어떻게 확률론적으로 모바일 어트리뷰선을 획득하는지에 대해 알아보겠다. 어떻게 알고 […]",
        "guid": "https://01010011.blog/?p=2435",
        "categories": [
          "programming"
        ],
        "isoDate": "2025-09-17T11:47:41.000Z"
      }
    ]
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "｜RULIWEB｜",
        "title": "[MULTI] 입문하려면 지금이다, 편안한 승차감 '하늘의 궤적 the 1st'",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2362",
        "pubDate": "Fri, 19 Sep 2025 17:22:01 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i3.ruliweb.com/thumb/25/09/19/19960b8439151ad6b.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2025-09-19T08:22:01.000Z"
      },
      {
        "creator": "「RULIWEB」",
        "title": "[MULTI] 선택을 버리고 복수에 전념하여, 다잉 라이트: 더 비스트",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2361",
        "pubDate": "Fri, 19 Sep 2025 01:00:03 +0900",
        "author": "「RULIWEB」",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/25/09/19/1995d73ee124cacdc.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2025-09-18T16:00:03.000Z"
      },
      {
        "creator": "｜RULIWEB｜",
        "title": "악역영애 4컷 만화 - 19화, 악역영애 행동인 데스와",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2360",
        "pubDate": "Wed, 17 Sep 2025 18:29:12 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/25/09/17/199570142c151ad6b.jpg\">",
        "contentSnippet": "",
        "categories": [
          "웹툰"
        ],
        "isoDate": "2025-09-17T09:29:12.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "P-Canvas, 팀을 이해하기 위한 엔지니어링 기법",
        "link": "https://techblog.lycorp.co.jp/ko/p-canvas-a-technique-for-understanding-your-team",
        "pubDate": "Fri, 19 Sep 2025 02:00:00 GMT",
        "content": "매니징도 엔지니어링이 가능할까?안녕하세요. ABC Studio에서 ABC Platform 팀을 맡고 있는 송재욱입니다.저희 팀에서는 '재생산 비용을 낮추는 행위'를 엔지니어링으로 ...",
        "contentSnippet": "매니징도 엔지니어링이 가능할까?안녕하세요. ABC Studio에서 ABC Platform 팀을 맡고 있는 송재욱입니다.저희 팀에서는 '재생산 비용을 낮추는 행위'를 엔지니어링으로 ...",
        "guid": "https://techblog.lycorp.co.jp/ko/p-canvas-a-technique-for-understanding-your-team",
        "isoDate": "2025-09-19T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": [
      {
        "title": "Kubernetes CPU Limit을 사용하면 벌어지는 일",
        "link": "https://meetup.nhncloud.com/posts/395",
        "pubDate": "Sun, 14 Sep 2025 23:39:12 GMT",
        "content": "[![NHN Cloud_meetup banner_K8s CPU limit_202509-01.png](https://image.toast.com/aaaadh/real/2025/techblog/NHN%20Cloudmeetup%20bannerK8s%20CPU%20limit20250901.png)](https://www.nhncloud.com/kr)\r\r\n\r\r\n## 들어가며\r\r\n오늘날 대부분의 서비스가 컨테이너 환경을 이용하고 있고, 컨테이너를 실행하는 환경으로는 Kubernetes가 표준으로 자리 잡고 있습니다. Kubernetes에서 컨테이너를 실행할 때는 Pod를 사용하는데요. Pod를 사용할 때 컨테이너의 리소스를 얼마나 할당할 것인가는 클러스터의 안정성과 연결되어 있기 때문에 중요한 문제 중 하나입니다. Pod의 컴퓨팅 리소스는 보통 다음과 같이 **requests**와 **limit**으로 설정할 수 있습니다.\r\r\n\r\r\n```\r\r\napiVersion: v1\r\r\nkind: Pod\r\r\nmetadata:\r\r\n  name: frontend\r\r\nspec:\r\r\n  containers:\r\r\n  - name: app\r\r\n    image: images.my-company.example/app:v4\r\r\n    resources:\r\r\n      requests:\r\r\n        memory: \"64Mi\"\r\r\n        cpu: \"250m\"\r\r\n      limits:\r\r\n        memory: \"128Mi\"\r\r\n        cpu: \"500m\"\r\r\n  - name: log-aggregator\r\r\n    image: images.my-company.example/log-aggregator:v6\r\r\n    resources:\r\r\n      requests:\r\r\n        memory: \"64Mi\"\r\r\n        cpu: \"250m\"\r\r\n      limits:\r\r\n        memory: \"128Mi\"\r\r\n        cpu: \"500m\"\r\r\n\r\r\n```\r\r\n<br>\r\r\n리소스를 설정할 때 우리는 보통 메모리를 중심으로 정하는데요, 컨테이너의 메모리 사용량이 한계값에 도달하면 Pod는 재실행됩니다.\r\r\n그렇다면, CPU 사용량의 경우에는 어떨까요? 자주 사용되진 않지만 한 번쯤 알아두면 좋은 CPU 사용량 제한에 대해 알아보았습니다.\r\r\n<br>\r\r\n## Kubernetes CPU Resource 설정\r\r\n먼저 Pod의 Resource 항목에서 설정 가능한 CPU의 Request와 Limit, 그리고 단위에 대해 알아보도록 하겠습니다.\r\r\n\r\r\n### 1. CPU Requests\r\r\nCPU requests는 컨테이너가 정상적으로 실행하기 위한 최소한의 CPU 양을 의미합니다. requests는 kube-scheduler가 Pod를 노드에 할당하는 스케줄링 작업에서 사용합니다. kube-scheduler는 Pod의 requests 값을 합산하여 할당 가능한 노드를 찾아서 Pod를 배치합니다. 노드에 Pod의 requests를 수용할 만한 여유가 있어야 할당이 되는 것이죠. 이 조건을 만족하는 노드가 없다면 Pod는 pending 상태로 스케줄링되지 않습니다.\r\r\nPod가 특정 노드에 스케줄링되었다면 요청된 CPU의 양은 보장됩니다. 이 말은 requests의 양만큼 CPU를 항상 점유한다는 뜻은 아닙니다. CPU 사용에 경합이 발생했을 때도 요청한 만큼의 CPU 시간을 할당 받는 것을 보장합니다. requests의 값이 없다면 Pod가 비효율적으로 배치될 수 있고 필요 이상의 클러스터 자원을 사용하여 불필요한 비용 지출이 발생할 수 있습니다.\r\r\n\r\r\n### 2. CPU Limits\r\r\nCPU limits는 컨테이너가 사용할 수 있는 CPU의 절대적인 최댓값을 의미하며 kubelet이 관리합니다. Pod의 컨테이너가 limits를 초과하여 CPU를 사용하려 할 때 해당 컨테이너의 CPU 사용을 인위적으로 낮추는 스로틀링(Throttling)을 통해 상한선을 강제합니다. limits는 여러 서비스가 동시에 실행되고 있는 Kubernetes 클러스터에서 하나의 컨테이너가 CPU를 과점하여 다른 컨테이너의 성능에 영향을 주거나 노드의 안정성을 해치는 CPU 기아 상태를 방지하는 데 의미가 있습니다.\r\r\n\r\r\n### 3. CPU Unit\r\r\nKubernetes에서 CPU의 단위는 절대적인 양으로 사용되며 1 Kubernetes CPU는 1vCPU 또는 물리적인 1 CPU 코어의 컴퓨팅 파워와 동일한 것으로 간주합니다.\r\r\nKubernetes에서는 코어를 밀리코어(millicore)로 더 작게 나누어 설정할 수 있습니다. 1000m은 1 CPU와 동일하며 0.5 CPU는 500m과 같습니다.\r\r\n\r\r\n### 4. QoS(quality of service, 서비스 품질) 클래스\r\r\nKubernetes는 설정한 requests와 limits에 따라서 자동으로 QoS 클래스를 할당합니다.\r\r\n• **Guaranteed (보장)**: Pod 내의 모든 컨테이너가 CPU와 메모리에 대해 requests와 limits를 모두 설정하고, 그 값이 서로 동일할 때(requests.cpu == limits.cpu) 할당됩니다. 이 Pod들은 가장 높은 우선순위를 가지며, 노드에 리소스 압박이 발생했을 때 가장 마지막에 축출(eviction)됩니다.\r\r\n• **Burstable (버스트 가능)**: Pod 내에 최소 하나 이상의 컨테이너가 CPU 또는 메모리 requests를 설정했지만, Guaranteed 클래스의 조건을 충족하지 못할 때 할당됩니다(예: requests.cpu < limits.cpu). 이 Pod들은 노드에 여유 리소스가 있을 경우, 요청한 양보다 더 많은 리소스를 \"버스트(burst)\"하여 사용할 수 있습니다.\r\r\n• **BestEffort (최선 노력)**: Pod 내의 어떤 컨테이너도 CPU나 메모리에 대한 requests나 limits를 설정하지 않았을 때 할당됩니다. 이 Pod들은 가장 낮은 우선순위를 가지며, 노드 리소스가 부족해지면 가장 먼저 축출 대상이 됩니다. \r\r\n<br>\r\r\n## 리눅스 커널의 CPU 관리 메커니즘\r\r\nKubernetes에서 설정한 requests와 limits를 리눅스 커널이 어떻게 실제로 CPU를 할당하고 제한하는지 알아보도록 하겠습니다. 여기에는 컨테이너 기술을 탄생시킨 cgroup(Control Group)과 CFS(Completely Fair Scheduler)가 사용됩니다.\r\r\n\r\r\n### 1. 리눅스 컨트롤 그룹(cgroup)\r\r\ncgroup은 프로세스들의 집합에 대해 CPU, 메모리, I/O와 같은 시스템 리소스의 사용량을 제한하고, 추적하며, 격리합니다. cgroup은 /sys/fs/cgroup/이라는 가상 파일 시스템 내에 계층적 구조로 구성됩니다. Kubernetes는 이 구조 내에 kubepods.slice라는 전용 경로를 만들어 Pod들의 리소스를 관리합니다.\r\r\nCPU 리소스 관리를 담당하는 cgroup의 특정 모듈을 ‘컨트롤러’ 또는 ‘서브시스템’이라 부르며, Kubernetes가 CPU requests와 limits를 구현하기 위해 사용하는 것이 바로 CPU 서브시스템입니다.\r\r\n\r\r\n### 2. Completely Fair Scheduler(CFS)\r\r\nCFS는 리눅스 커널의 기본 프로세스 스케줄러로, 그 이름처럼 ‘완전한 공정성’을 목표로 합니다. CFS는 마치 ‘이상적인 멀티태스킹 CPU’가 존재하는 것처럼, 실행 가능한 모든 태스크(프로세스)가 정확히 동일한 비율의 CPU 시간을 할당 받도록 노력합니다.\r\r\n실제 하드웨어는 한 번에 하나의 작업만 실행할 수 있기 때문에, CFS는 ‘가상 런타임(virtual runtime, vruntime)’이라는 개념을 사용합니다. CFS는 항상 가장 작은 vruntime 값을 가진 작업, 즉 지금까지 가장 적게 실행된 작업을 선택하여 실행함으로써 장기적인 관점에서 공정성을 보장합니다.\r\r\n\r\r\n### 3. Kubernetes와 커널의 매핑\r\r\nkubelet은 Kubernetes의 yaml 명세를 실제 커널에 적용하기 위해서 변환 작업을 수행합니다. kubelet은 resources 설정을 읽어 해당 컨테이너의 cgroup 디렉터리 내 특정 파일에 값을 덮어쓰는 방식으로 커널에 지시를 내립니다.\r\r\n\r\r\n#### **3.1. Requests와 cpu.shares: 상대적 가중치 시스템**\r\r\nPod의 resources.requests.cpu 값은 cgroup의 cpu.shares 파일 값으로 변환됩니다. 공식은 다음과 같습니다.\r\r\n```\r\r\ncpu.shares=requests.cpu (millicores)×1024/1000.\r\r\n```\r\r\n예를 들어, 1000m(1 코어) 요청은 1024 shares로, 500m 요청은 512 shares로 변환됩니다. 가장 중요한 점은 cpu.shares가 **노드에 CPU 경합이 있을 때만 의미를 가지는 상대적 가중치**라는 것입니다. 만약 CPU 자원을 두고 경쟁하는 두 컨테이너가 있고, 하나는 2048 shares, 다른 하나는 1024 shares를 가지고 있다면, 전자는 후자보다 두 배의 CPU 시간을 할당 받게 됩니다. 하지만 노드가 유휴 상태이고 CPU 경합이 없다면, 컨테이너는 자신의 shares 값과 무관하게 필요한 만큼의 CPU를 사용할 수 있습니다.\r\r\n\r\r\n#### **3.2. Limits와 cpu.cfs_period_us & cpu.cfs_quota_us: 절대적 시간 할당량 시스템**\r\r\nPod의 resources.limits.cpu 값은 CFS 대역폭 제어라는 메커니즘을 통해 강제됩니다. 이 메커니즘은 두 가지 파라미터에 의해서 결정됩니다.\r\r\n• cpu.cfs_period_us: 할당량을 정산하는 주기로 단위는 마이크로초입니다. Kubernetes는 기본값인 100000(즉 100ms)을 사용합니다. 이 한 window 내에서 할당량이 정해집니다.\r\r\n• cpu.cfs_quota_us: 위에서 정의된 period 동안 cgroup이 소비할 수 있는 총 CPU 시간을 정의합니다. 단위는 마이크로초입니다. 이 값은 resources.limitscpu로부터 계산됩니다. limits가 없을 경우 -1로 할당량 없음을 의미합니다.\r\r\n\r\r\n변환 공식은 다음과 같습니다.\r\r\n```\r\r\ncpu.cfs_quota_us=limits.cpu (cores)×cpu.cfs_period_us.\r\r\n```\r\r\n예를 들어, limits.cpu를 500m(0.5 코어)로 설정하면, cpu.cfs_quota_us=0.5×100000=50000이 됩니다. 이는 해당 컨테이너가 매 100ms 주기마다 최대 50,000 마이크로초(50ms)의 CPU 시간만 사용할 수 있음을 의미합니다.\r\r\n\r\r\n#### 요약\r\r\n| Kubernetes 설정 | Kubernetes에서의 목적 | 리눅스 cgroup 파일 | 동작 |\r\r\n| --- | --- | --- | --- |\r\r\n| resources.requests.cpu | 스케줄링 및 경합 시 최소 CPU 보장 | cpu.shares | 상대적 가중치; CPU 경합 시에만 활성화 |\r\r\n| resources.lmits.cpu | 런타임 시 최대 CPU사용량 제한 | cpu.cfs_quota_us | 절대적 시간 할당량; 항상 활성화, 스로틀링 발생 |\r\r\n<br>\r\r\n## Limits 적용으로 발생할 수 있는 현상\r\r\nCPU limits를 설정했을 때 발생하는 가장 중요하고 종종 오해 받는 현상이 바로 CPU 스로틀링입니다. 스로틀링은 단순히 성능을 약간 늦추는 것이 아니라, 애플리케이션의 지연 시간에 심각하고 예측 불가능한 영향을 미칠 수 있는 ‘정지-대기(stop-wait)’ 프로세스입니다.\r\r\n\r\r\n### 1. CPU 스로틀링과 발생 원인\r\r\nCPU 스로틀링은 컨테이너 내의 프로세스들이 현재의 cfs_period_us(보통 100ms) 동안 할당된 cfs_quota_us를 모두 소진했을 때 발생합니다. 할당량을 모두 사용한 컨테이너의 프로세스들은 커널 스케줄러에 의해 실행이 '정지'됩니다. 그리고 다음 100ms 주기가 시작되어 할당량이 다시 채워질 때까지 대기해야 합니다.\r\r\n이 현상은 특히 멀티 스레드 애플리케이션에서 증폭되어 나타납니다. 예를 들어, 한 컨테이너가 1 코어(cfs_quota_us=100000)의 limit을 가지고 있지만, 4개의 바쁜 스레드를 동시에 실행한다고 가정해 봅시다.\r\r\n이 컨테이너는 4개의 코어를 동시에 사용하여 단 25ms의 실제 시간만에 100ms의 CPU 시간 할당량을 모두 소진할 수 있습니다. 그 후, 해당 컨테이너는 남은 75ms 동안 노드에 유휴 코어가 있더라도 완전히 스로틀링되어 아무 작업도 수행할 수 없게 됩니다.\r\r\n![K8s_CPU limit_1.png](https://image.toast.com/aaaadh/real/2025/techblog/K8sCPU%20limit1.png)\r\r\n\r\r\n### 2. CPU 스로틀링으로 인한 지연 시간 증가\r\r\n![K8s_CPU limit_2.png](https://image.toast.com/aaaadh/real/2025/techblog/K8sCPU%20limit2.png)\r\r\n스로틀링은 애플리케이션 요청 처리 시간에 직접적으로 지연을 추가합니다. 예를 들어, 어떤 작업을 완료하는 데 순수하게 300ms의 CPU 시간이 필요한 애플리케이션이 100ms 주기당 50ms의 limit에 의해 제한된다고 가정해 봅시다. 이 작업은 다른 시스템 부하가 전혀 없더라도 최소 6개의 주기, 즉 600ms의 실제 시간이 걸려야 완료될 수 있습니다. 이러한 지연은 타임아웃, 연쇄적인 장애, 그리고 궁극적으로는 나쁜 사용자 경험으로 이어질 수 있습니다.\r\r\n스로틀링은 전통적인 CPU 사용률 지표로는 확인하기가 힘든 경우가 있습니다. 어떤 컨테이너가 CPU 사용률 50%(자신의 limit 값)를 보이고 있더라도, 실제로는 심각하게 스로틀링되어 매우 느린 상태일 수 있습니다. 이 경우 CPU는 전통적인 의미에서 '최대치로 사용'되는 것이 아니라, 인위적으로 억제되고 있는 상태입니다.\r\r\n\r\r\n\r\r\n### 3. '시끄러운 이웃' 오해\r\r\nlimits가 ‘시끄러운 이웃(noisy neighbor)’ 문제, 즉 하나의 애플리케이션이 리소스를 독점하여 다른 애플리케이션에 영향을 주는 것을 막아 줄 수 있을 것처럼 보입니다. 하지만 실제로는 requests에 의해 결정되는 cpu.shares가 경합 상황에서도 적절하게 리소스를 배분할 수 있는 시스템이라고 할 수 있습니다. 만약 모든 Pod에 적절한 requests가 설정되어 있다면, CFS 스케줄러는 shares 값에 비례하여 CPU 시간을 분배함으로써 특정 Pod가 다른 Pod들이 기아 상태에 빠지는 것을 방지합니다. 반면 limits는 다른 누구도 CPU를 필요로 하지 않는 상황에서조차 Pod의 사용량을 제한하는 무딘 도구에 가깝습니다.\r\r\n<br>\r\r\n## 스로틀링 테스트\r\r\n테스트를 위해 한 웹 애플리케이션을 만들었습니다. 이 애플리케이션에 1 CPU를 할당하면 작업을 완료하는 데 대략 12초 정도 걸립니다.\r\r\n이 애플리케이션에 각각 1 CPU, 0.1 CPU를 할당하여 CPU 사용량과 작업 시간을 확인하여 지금까지 확인한 현상이 발생하는지 테스트해 보았습니다.\r\r\n\r\r\n### 테스트용 Pod 준비\r\r\n아래와 같이 CPU limit만 다르게 설정하여 Pod를 생성하였습니다.\r\r\n```\r\r\napiVersion: apps/v1\r\r\nkind: Deployment\r\r\nmetadata:\r\r\n  name: cpu-test-app\r\r\n  labels:\r\r\n    app: cpu-test-app\r\r\nspec:\r\r\n  replicas: 1\r\r\n  selector:\r\r\n    matchLabels:\r\r\n      app: cpu-test-app\r\r\n  template:\r\r\n    metadata:\r\r\n      labels:\r\r\n        app: cpu-test-app\r\r\n    spec:\r\r\n      containers:\r\r\n      - name: cpu-test-app\r\r\n        image: cpu-test-app\r\r\n        ports:\r\r\n        - containerPort: 8081\r\r\n        resources:\r\r\n          requests:\r\r\n            memory: \"64Mi\"\r\r\n            cpu: \"100m\"    # 0.1 코어\r\r\n          limits:\r\r\n            memory: \"128Mi\"\r\r\n            cpu: \"100m\"    # 0.1 코어로 제한\r\r\n        livenessProbe:\r\r\n          httpGet:\r\r\n            path: /health\r\r\n            port: 8080\r\r\n          initialDelaySeconds: 10\r\r\n          periodSeconds: 30\r\r\n        readinessProbe:\r\r\n          httpGet:\r\r\n            path: /health\r\r\n            port: 8080\r\r\n          initialDelaySeconds: 5\r\r\n          periodSeconds: 10\r\r\n---\r\r\n# 1 코어 제한 버전\r\r\napiVersion: apps/v1\r\r\nkind: Deployment\r\r\nmetadata:\r\r\n  name: cpu-test-app-1core\r\r\n  labels:\r\r\n    app: cpu-test-app-1core\r\r\nspec:\r\r\n  replicas: 1\r\r\n  selector:\r\r\n    matchLabels:\r\r\n      app: cpu-test-app-1core\r\r\n  template:\r\r\n    metadata:\r\r\n      labels:\r\r\n        app: cpu-test-app-1core\r\r\n    spec:\r\r\n      containers:\r\r\n      - name: cpu-test-app\r\r\n        image: cpu-test-app\r\r\n        ports:\r\r\n        - containerPort: 8080\r\r\n        resources:\r\r\n          requests:\r\r\n            memory: \"64Mi\"\r\r\n            cpu: \"1000m\"   # 1 코어\r\r\n          limits:\r\r\n            memory: \"128Mi\"\r\r\n            cpu: \"1000m\"   # 1 코어로 제한\r\r\n        livenessProbe:\r\r\n          httpGet:\r\r\n            path: /health\r\r\n            port: 8080\r\r\n          initialDelaySeconds: 10\r\r\n          periodSeconds: 30\r\r\n        readinessProbe:\r\r\n          httpGet:\r\r\n            path: /health\r\r\n            port: 8080\r\r\n          initialDelaySeconds: 5\r\r\n          periodSeconds: 10\r\r\n```\r\r\n\r\r\n### 응답 시간 비교\r\r\n0.1 CPU를 할당한 애플리케이션에서는 122초가 소요된 반면 1 CPU가 할당된 애플리케이션에서는 11.51초만 소요된 것을 확인할 수 있었습니다.\r\r\n![K8s_CPU limit_3.png](https://image.toast.com/aaaadh/real/2025/techblog/K8sCPU%20limit3.png)\r\r\n\r\r\n### 그라파나를 통한 스로틀링 현상 확인\r\r\n* <span style=\"background-color:#DCFFE4\">초록색: 1 CPU</span>\r\r\n* <span style=\"background-color:#fff5b1\">노란색: 0.1 CPU</span>\r\r\n\r\r\nCPU 사용률에서 노란색 그래프가 CPU limits가 0.1로 설정되어 그 이상 사용하지 못하는 모습을 보여줍니다. CPU 할당 횟수에서 노란색이 Limits에 걸려서 더 많은 cpu 할당이 발생한 것을 확인할 수 있습니다. 이것은 스로틀링으로 인한 지연 시간 증가 시뮬레이션과 일치하는 결과입니다. 당연하게도 스로틀링 비율도 노란색이 더 높은 것을 알 수 있습니다.\r\r\n![K8s_CPU limit_4.png](https://image.toast.com/aaaadh/real/2025/techblog/K8sCPU%20limit4.png)\r\r\n중요한 지표는 스로틀링 비율로서 비율이 5%를 지속적으로 넘는 현상이 발생한다면 스로틀링이 빈번하게 발생하여 성능에 제약을 받아 서비스가 느려져 있을 가능성이 있으므로 조치를 취해야 합니다.\r\r\n\r\r\n#### 스로틀링 비율 지표 예시\r\r\n```\r\r\nsum by (namespace, pod) (rate(container_cpu_cfs_throttled_periods_total{container!=\"\"}[5m]))\r\r\n/\r\r\nsum by (namespace, pod) (rate(container_cpu_cfs_periods_total{container!=\"\"}[5m]))\r\r\n```\r\r\n<br>\r\r\n## 나가며\r\r\n결론은 아래와 같습니다.\r\r\n* 일반적인 경우,\r\r\n\t* request만 설정하여 자원이 더 필요할 때는 노드의 가용 자원을 사용하고 자원이 모자랄 때는 비율로 할당 받도록 하는 것이 좋은 것 같습니다. (QoS는 Burstable로 설정됨)\r\r\n\t* QoS가 Burstable로 설정되지만 CPU는 Eviction의 조건이 아니기 때문에 throttling이 발생할지언정 pod가 eviction 되지는 않습니다.\r\r\n* limit만 설정하는 경우는 피해야 합니다. limit만 설정할 경우 request가 0이 되어 자원 가용량이 없는 노드에도 스케줄링 될 수 있으며 런타임 시 예측이 어려워집니다.\r\r\n* CPU request는 Pod가 노드에 할당될 때는 절댓값으로 사용되고 할당된 뒤에는 상대적인 비율로 사용됩니다.\r\r\n\r\r\n<br>\r\r\n긴 글을 읽어 주셔서 감사합니다. \r\r\n<br>\r\r\n### 참고 문헌\r\r\n• Kubernetes, Resource Management for Pods and Containers, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\r\r\n• KubeBlog, Understanding CPU Requests and Limits, 2023. 10. 5., https://www.kubeblog.com/basics/understanding-cpu-requests-and-limits/\r\r\n• Itiel Shwartz, Kubernetes CPU Limits: What’s the Right Way to Assign CPU Resources?, 2025. 1. 14., https://komodor.com/learn/kubernetes-cpu-limits-throttling/\r\r\n• Eliran Cohen, For the love of god, learn when to use CPU limits on Kubernetes., 2023. 3. 5., https://medium.com/@eliran89c/for-the-love-of-god-learn-when-to-use-cpu-limits-on-kubernetes-2225341e9dbd\r\r\n• Max Levin, Kubernetes CPU Throttling: What it is, and Best Practices, 2024. 6. 6., https://www.groundcover.com/blog/kubernetes-cpu-throttling\r\r\n• CODE FARM, Linux CGroups and Containers, 2024. 2. 3., https://blog.codefarm.me/2021/11/23/linux-cgroups-containers/\r\r\n• Andreas Karis Blog, Quick guide for cgroups, 2020. 9. 3., https://andreaskaris.github.io/blog/linux/cgroups/\r\r\n• Martin, Cgroups - Deep Dive into Resource Management in Kubernetes, 2023. 2. 20., https://martinheinz.dev/blog/91\r\r\n• Jianhao, Kubernetes CPU requests and limits, 2021. 11. 11., https://jaanhio.me/blog/kubernetes-cpu-requests-limits/\r\r\n• Red Hat, Resource Management Guide > CPU, https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/6/html/resource_management_guide/sec-cpu\r\r\n• Real-time Ubuntu, Linux kernel schedulers, https://documentation.ubuntu.com/real-time/latest/explanation/schedulers/\r\r\n• Rifewang, Kubernetes: CPU Configuration, Linux CFS, and Performance Issues with Programming Languages, 2024. 12. 11., https://medium.com/@rifewang/kubernetes-cpu-configuration-linux-cfs-and-performance-issues-with-programming-languages-ccef783ed22e\r\r\n• JettyCloud, Making Sense of Kubernetes CPU Requests And Limits, 2023. 3. 20., https://medium.com/@jettycloud/making-sense-of-kubernetes-cpu-requests-and-limits-390bbb5b7c92\r\r\n• Tania Duggal, PerfectScale, Kubernetes CPU Limit: Best Practices for Optimal Performance, 2024. 10. 24., https://www.perfectscale.io/blog/kubernetes-cpu-limit-best-practises\r\r\n• Shane Corbett, AWS Blogs, Using Prometheus to Avoid Disasters with Kubernetes CPU Limits, 2022. 9. 21., https://aws.amazon.com/blogs/containers/using-prometheus-to-avoid-disasters-with-kubernetes-cpu-limits/\r\r\n\r\r\n\r\r\n[![NHN Cloud_meetup banner_footer_blue_202509.png](https://image.toast.com/aaaadh/real/2025/techblog/NHN%20Cloudmeetup%20bannerfooterblue202509.png)](https://www.nhncloud.com/kr)",
        "contentSnippet": "[![NHN Cloud_meetup banner_K8s CPU limit_202509-01.png](https://image.toast.com/aaaadh/real/2025/techblog/NHN%20Cloudmeetup%20bannerK8s%20CPU%20limit20250901.png)](https://www.nhncloud.com/kr)\r\r\n\r\r\n## 들어가며\r\r\n오늘날 대부분의 서비스가 컨테이너 환경을 이용하고 있고, 컨테이너를 실행하는 환경으로는 Kubernetes가 표준으로 자리 잡고 있습니다. Kubernetes에서 컨테이너를 실행할 때는 Pod를 사용하는데요. Pod를 사용할 때 컨테이너의 리소스를 얼마나 할당할 것인가는 클러스터의 안정성과 연결되어 있기 때문에 중요한 문제 중 하나입니다. Pod의 컴퓨팅 리소스는 보통 다음과 같이 **requests**와 **limit**으로 설정할 수 있습니다.\r\r\n\r\r\n```\r\r\napiVersion: v1\r\r\nkind: Pod\r\r\nmetadata:\r\r\n  name: frontend\r\r\nspec:\r\r\n  containers:\r\r\n  - name: app\r\r\n    image: images.my-company.example/app:v4\r\r\n    resources:\r\r\n      requests:\r\r\n        memory: \"64Mi\"\r\r\n        cpu: \"250m\"\r\r\n      limits:\r\r\n        memory: \"128Mi\"\r\r\n        cpu: \"500m\"\r\r\n  - name: log-aggregator\r\r\n    image: images.my-company.example/log-aggregator:v6\r\r\n    resources:\r\r\n      requests:\r\r\n        memory: \"64Mi\"\r\r\n        cpu: \"250m\"\r\r\n      limits:\r\r\n        memory: \"128Mi\"\r\r\n        cpu: \"500m\"\r\r\n\r\r\n```\r\r\n\r\r\n리소스를 설정할 때 우리는 보통 메모리를 중심으로 정하는데요, 컨테이너의 메모리 사용량이 한계값에 도달하면 Pod는 재실행됩니다.\r\r\n그렇다면, CPU 사용량의 경우에는 어떨까요? 자주 사용되진 않지만 한 번쯤 알아두면 좋은 CPU 사용량 제한에 대해 알아보았습니다.\r\r\n\r\r\n## Kubernetes CPU Resource 설정\r\r\n먼저 Pod의 Resource 항목에서 설정 가능한 CPU의 Request와 Limit, 그리고 단위에 대해 알아보도록 하겠습니다.\r\r\n\r\r\n### 1. CPU Requests\r\r\nCPU requests는 컨테이너가 정상적으로 실행하기 위한 최소한의 CPU 양을 의미합니다. requests는 kube-scheduler가 Pod를 노드에 할당하는 스케줄링 작업에서 사용합니다. kube-scheduler는 Pod의 requests 값을 합산하여 할당 가능한 노드를 찾아서 Pod를 배치합니다. 노드에 Pod의 requests를 수용할 만한 여유가 있어야 할당이 되는 것이죠. 이 조건을 만족하는 노드가 없다면 Pod는 pending 상태로 스케줄링되지 않습니다.\r\r\nPod가 특정 노드에 스케줄링되었다면 요청된 CPU의 양은 보장됩니다. 이 말은 requests의 양만큼 CPU를 항상 점유한다는 뜻은 아닙니다. CPU 사용에 경합이 발생했을 때도 요청한 만큼의 CPU 시간을 할당 받는 것을 보장합니다. requests의 값이 없다면 Pod가 비효율적으로 배치될 수 있고 필요 이상의 클러스터 자원을 사용하여 불필요한 비용 지출이 발생할 수 있습니다.\r\r\n\r\r\n### 2. CPU Limits\r\r\nCPU limits는 컨테이너가 사용할 수 있는 CPU의 절대적인 최댓값을 의미하며 kubelet이 관리합니다. Pod의 컨테이너가 limits를 초과하여 CPU를 사용하려 할 때 해당 컨테이너의 CPU 사용을 인위적으로 낮추는 스로틀링(Throttling)을 통해 상한선을 강제합니다. limits는 여러 서비스가 동시에 실행되고 있는 Kubernetes 클러스터에서 하나의 컨테이너가 CPU를 과점하여 다른 컨테이너의 성능에 영향을 주거나 노드의 안정성을 해치는 CPU 기아 상태를 방지하는 데 의미가 있습니다.\r\r\n\r\r\n### 3. CPU Unit\r\r\nKubernetes에서 CPU의 단위는 절대적인 양으로 사용되며 1 Kubernetes CPU는 1vCPU 또는 물리적인 1 CPU 코어의 컴퓨팅 파워와 동일한 것으로 간주합니다.\r\r\nKubernetes에서는 코어를 밀리코어(millicore)로 더 작게 나누어 설정할 수 있습니다. 1000m은 1 CPU와 동일하며 0.5 CPU는 500m과 같습니다.\r\r\n\r\r\n### 4. QoS(quality of service, 서비스 품질) 클래스\r\r\nKubernetes는 설정한 requests와 limits에 따라서 자동으로 QoS 클래스를 할당합니다.\r\r\n• **Guaranteed (보장)**: Pod 내의 모든 컨테이너가 CPU와 메모리에 대해 requests와 limits를 모두 설정하고, 그 값이 서로 동일할 때(requests.cpu == limits.cpu) 할당됩니다. 이 Pod들은 가장 높은 우선순위를 가지며, 노드에 리소스 압박이 발생했을 때 가장 마지막에 축출(eviction)됩니다.\r\r\n• **Burstable (버스트 가능)**: Pod 내에 최소 하나 이상의 컨테이너가 CPU 또는 메모리 requests를 설정했지만, Guaranteed 클래스의 조건을 충족하지 못할 때 할당됩니다(예: requests.cpu < limits.cpu). 이 Pod들은 노드에 여유 리소스가 있을 경우, 요청한 양보다 더 많은 리소스를 \"버스트(burst)\"하여 사용할 수 있습니다.\r\r\n• **BestEffort (최선 노력)**: Pod 내의 어떤 컨테이너도 CPU나 메모리에 대한 requests나 limits를 설정하지 않았을 때 할당됩니다. 이 Pod들은 가장 낮은 우선순위를 가지며, 노드 리소스가 부족해지면 가장 먼저 축출 대상이 됩니다. \r\r\n\r\r\n## 리눅스 커널의 CPU 관리 메커니즘\r\r\nKubernetes에서 설정한 requests와 limits를 리눅스 커널이 어떻게 실제로 CPU를 할당하고 제한하는지 알아보도록 하겠습니다. 여기에는 컨테이너 기술을 탄생시킨 cgroup(Control Group)과 CFS(Completely Fair Scheduler)가 사용됩니다.\r\r\n\r\r\n### 1. 리눅스 컨트롤 그룹(cgroup)\r\r\ncgroup은 프로세스들의 집합에 대해 CPU, 메모리, I/O와 같은 시스템 리소스의 사용량을 제한하고, 추적하며, 격리합니다. cgroup은 /sys/fs/cgroup/이라는 가상 파일 시스템 내에 계층적 구조로 구성됩니다. Kubernetes는 이 구조 내에 kubepods.slice라는 전용 경로를 만들어 Pod들의 리소스를 관리합니다.\r\r\nCPU 리소스 관리를 담당하는 cgroup의 특정 모듈을 ‘컨트롤러’ 또는 ‘서브시스템’이라 부르며, Kubernetes가 CPU requests와 limits를 구현하기 위해 사용하는 것이 바로 CPU 서브시스템입니다.\r\r\n\r\r\n### 2. Completely Fair Scheduler(CFS)\r\r\nCFS는 리눅스 커널의 기본 프로세스 스케줄러로, 그 이름처럼 ‘완전한 공정성’을 목표로 합니다. CFS는 마치 ‘이상적인 멀티태스킹 CPU’가 존재하는 것처럼, 실행 가능한 모든 태스크(프로세스)가 정확히 동일한 비율의 CPU 시간을 할당 받도록 노력합니다.\r\r\n실제 하드웨어는 한 번에 하나의 작업만 실행할 수 있기 때문에, CFS는 ‘가상 런타임(virtual runtime, vruntime)’이라는 개념을 사용합니다. CFS는 항상 가장 작은 vruntime 값을 가진 작업, 즉 지금까지 가장 적게 실행된 작업을 선택하여 실행함으로써 장기적인 관점에서 공정성을 보장합니다.\r\r\n\r\r\n### 3. Kubernetes와 커널의 매핑\r\r\nkubelet은 Kubernetes의 yaml 명세를 실제 커널에 적용하기 위해서 변환 작업을 수행합니다. kubelet은 resources 설정을 읽어 해당 컨테이너의 cgroup 디렉터리 내 특정 파일에 값을 덮어쓰는 방식으로 커널에 지시를 내립니다.\r\r\n\r\r\n#### **3.1. Requests와 cpu.shares: 상대적 가중치 시스템**\r\r\nPod의 resources.requests.cpu 값은 cgroup의 cpu.shares 파일 값으로 변환됩니다. 공식은 다음과 같습니다.\r\r\n```\r\r\ncpu.shares=requests.cpu (millicores)×1024/1000.\r\r\n```\r\r\n예를 들어, 1000m(1 코어) 요청은 1024 shares로, 500m 요청은 512 shares로 변환됩니다. 가장 중요한 점은 cpu.shares가 **노드에 CPU 경합이 있을 때만 의미를 가지는 상대적 가중치**라는 것입니다. 만약 CPU 자원을 두고 경쟁하는 두 컨테이너가 있고, 하나는 2048 shares, 다른 하나는 1024 shares를 가지고 있다면, 전자는 후자보다 두 배의 CPU 시간을 할당 받게 됩니다. 하지만 노드가 유휴 상태이고 CPU 경합이 없다면, 컨테이너는 자신의 shares 값과 무관하게 필요한 만큼의 CPU를 사용할 수 있습니다.\r\r\n\r\r\n#### **3.2. Limits와 cpu.cfs_period_us & cpu.cfs_quota_us: 절대적 시간 할당량 시스템**\r\r\nPod의 resources.limits.cpu 값은 CFS 대역폭 제어라는 메커니즘을 통해 강제됩니다. 이 메커니즘은 두 가지 파라미터에 의해서 결정됩니다.\r\r\n• cpu.cfs_period_us: 할당량을 정산하는 주기로 단위는 마이크로초입니다. Kubernetes는 기본값인 100000(즉 100ms)을 사용합니다. 이 한 window 내에서 할당량이 정해집니다.\r\r\n• cpu.cfs_quota_us: 위에서 정의된 period 동안 cgroup이 소비할 수 있는 총 CPU 시간을 정의합니다. 단위는 마이크로초입니다. 이 값은 resources.limitscpu로부터 계산됩니다. limits가 없을 경우 -1로 할당량 없음을 의미합니다.\r\r\n\r\r\n변환 공식은 다음과 같습니다.\r\r\n```\r\r\ncpu.cfs_quota_us=limits.cpu (cores)×cpu.cfs_period_us.\r\r\n```\r\r\n예를 들어, limits.cpu를 500m(0.5 코어)로 설정하면, cpu.cfs_quota_us=0.5×100000=50000이 됩니다. 이는 해당 컨테이너가 매 100ms 주기마다 최대 50,000 마이크로초(50ms)의 CPU 시간만 사용할 수 있음을 의미합니다.\r\r\n\r\r\n#### 요약\r\r\n| Kubernetes 설정 | Kubernetes에서의 목적 | 리눅스 cgroup 파일 | 동작 |\r\r\n| --- | --- | --- | --- |\r\r\n| resources.requests.cpu | 스케줄링 및 경합 시 최소 CPU 보장 | cpu.shares | 상대적 가중치; CPU 경합 시에만 활성화 |\r\r\n| resources.lmits.cpu | 런타임 시 최대 CPU사용량 제한 | cpu.cfs_quota_us | 절대적 시간 할당량; 항상 활성화, 스로틀링 발생 |\r\r\n\r\r\n## Limits 적용으로 발생할 수 있는 현상\r\r\nCPU limits를 설정했을 때 발생하는 가장 중요하고 종종 오해 받는 현상이 바로 CPU 스로틀링입니다. 스로틀링은 단순히 성능을 약간 늦추는 것이 아니라, 애플리케이션의 지연 시간에 심각하고 예측 불가능한 영향을 미칠 수 있는 ‘정지-대기(stop-wait)’ 프로세스입니다.\r\r\n\r\r\n### 1. CPU 스로틀링과 발생 원인\r\r\nCPU 스로틀링은 컨테이너 내의 프로세스들이 현재의 cfs_period_us(보통 100ms) 동안 할당된 cfs_quota_us를 모두 소진했을 때 발생합니다. 할당량을 모두 사용한 컨테이너의 프로세스들은 커널 스케줄러에 의해 실행이 '정지'됩니다. 그리고 다음 100ms 주기가 시작되어 할당량이 다시 채워질 때까지 대기해야 합니다.\r\r\n이 현상은 특히 멀티 스레드 애플리케이션에서 증폭되어 나타납니다. 예를 들어, 한 컨테이너가 1 코어(cfs_quota_us=100000)의 limit을 가지고 있지만, 4개의 바쁜 스레드를 동시에 실행한다고 가정해 봅시다.\r\r\n이 컨테이너는 4개의 코어를 동시에 사용하여 단 25ms의 실제 시간만에 100ms의 CPU 시간 할당량을 모두 소진할 수 있습니다. 그 후, 해당 컨테이너는 남은 75ms 동안 노드에 유휴 코어가 있더라도 완전히 스로틀링되어 아무 작업도 수행할 수 없게 됩니다.\r\r\n![K8s_CPU limit_1.png](https://image.toast.com/aaaadh/real/2025/techblog/K8sCPU%20limit1.png)\r\r\n\r\r\n### 2. CPU 스로틀링으로 인한 지연 시간 증가\r\r\n![K8s_CPU limit_2.png](https://image.toast.com/aaaadh/real/2025/techblog/K8sCPU%20limit2.png)\r\r\n스로틀링은 애플리케이션 요청 처리 시간에 직접적으로 지연을 추가합니다. 예를 들어, 어떤 작업을 완료하는 데 순수하게 300ms의 CPU 시간이 필요한 애플리케이션이 100ms 주기당 50ms의 limit에 의해 제한된다고 가정해 봅시다. 이 작업은 다른 시스템 부하가 전혀 없더라도 최소 6개의 주기, 즉 600ms의 실제 시간이 걸려야 완료될 수 있습니다. 이러한 지연은 타임아웃, 연쇄적인 장애, 그리고 궁극적으로는 나쁜 사용자 경험으로 이어질 수 있습니다.\r\r\n스로틀링은 전통적인 CPU 사용률 지표로는 확인하기가 힘든 경우가 있습니다. 어떤 컨테이너가 CPU 사용률 50%(자신의 limit 값)를 보이고 있더라도, 실제로는 심각하게 스로틀링되어 매우 느린 상태일 수 있습니다. 이 경우 CPU는 전통적인 의미에서 '최대치로 사용'되는 것이 아니라, 인위적으로 억제되고 있는 상태입니다.\r\r\n\r\r\n\r\r\n### 3. '시끄러운 이웃' 오해\r\r\nlimits가 ‘시끄러운 이웃(noisy neighbor)’ 문제, 즉 하나의 애플리케이션이 리소스를 독점하여 다른 애플리케이션에 영향을 주는 것을 막아 줄 수 있을 것처럼 보입니다. 하지만 실제로는 requests에 의해 결정되는 cpu.shares가 경합 상황에서도 적절하게 리소스를 배분할 수 있는 시스템이라고 할 수 있습니다. 만약 모든 Pod에 적절한 requests가 설정되어 있다면, CFS 스케줄러는 shares 값에 비례하여 CPU 시간을 분배함으로써 특정 Pod가 다른 Pod들이 기아 상태에 빠지는 것을 방지합니다. 반면 limits는 다른 누구도 CPU를 필요로 하지 않는 상황에서조차 Pod의 사용량을 제한하는 무딘 도구에 가깝습니다.\r\r\n\r\r\n## 스로틀링 테스트\r\r\n테스트를 위해 한 웹 애플리케이션을 만들었습니다. 이 애플리케이션에 1 CPU를 할당하면 작업을 완료하는 데 대략 12초 정도 걸립니다.\r\r\n이 애플리케이션에 각각 1 CPU, 0.1 CPU를 할당하여 CPU 사용량과 작업 시간을 확인하여 지금까지 확인한 현상이 발생하는지 테스트해 보았습니다.\r\r\n\r\r\n### 테스트용 Pod 준비\r\r\n아래와 같이 CPU limit만 다르게 설정하여 Pod를 생성하였습니다.\r\r\n```\r\r\napiVersion: apps/v1\r\r\nkind: Deployment\r\r\nmetadata:\r\r\n  name: cpu-test-app\r\r\n  labels:\r\r\n    app: cpu-test-app\r\r\nspec:\r\r\n  replicas: 1\r\r\n  selector:\r\r\n    matchLabels:\r\r\n      app: cpu-test-app\r\r\n  template:\r\r\n    metadata:\r\r\n      labels:\r\r\n        app: cpu-test-app\r\r\n    spec:\r\r\n      containers:\r\r\n      - name: cpu-test-app\r\r\n        image: cpu-test-app\r\r\n        ports:\r\r\n        - containerPort: 8081\r\r\n        resources:\r\r\n          requests:\r\r\n            memory: \"64Mi\"\r\r\n            cpu: \"100m\"    # 0.1 코어\r\r\n          limits:\r\r\n            memory: \"128Mi\"\r\r\n            cpu: \"100m\"    # 0.1 코어로 제한\r\r\n        livenessProbe:\r\r\n          httpGet:\r\r\n            path: /health\r\r\n            port: 8080\r\r\n          initialDelaySeconds: 10\r\r\n          periodSeconds: 30\r\r\n        readinessProbe:\r\r\n          httpGet:\r\r\n            path: /health\r\r\n            port: 8080\r\r\n          initialDelaySeconds: 5\r\r\n          periodSeconds: 10\r\r\n---\r\r\n# 1 코어 제한 버전\r\r\napiVersion: apps/v1\r\r\nkind: Deployment\r\r\nmetadata:\r\r\n  name: cpu-test-app-1core\r\r\n  labels:\r\r\n    app: cpu-test-app-1core\r\r\nspec:\r\r\n  replicas: 1\r\r\n  selector:\r\r\n    matchLabels:\r\r\n      app: cpu-test-app-1core\r\r\n  template:\r\r\n    metadata:\r\r\n      labels:\r\r\n        app: cpu-test-app-1core\r\r\n    spec:\r\r\n      containers:\r\r\n      - name: cpu-test-app\r\r\n        image: cpu-test-app\r\r\n        ports:\r\r\n        - containerPort: 8080\r\r\n        resources:\r\r\n          requests:\r\r\n            memory: \"64Mi\"\r\r\n            cpu: \"1000m\"   # 1 코어\r\r\n          limits:\r\r\n            memory: \"128Mi\"\r\r\n            cpu: \"1000m\"   # 1 코어로 제한\r\r\n        livenessProbe:\r\r\n          httpGet:\r\r\n            path: /health\r\r\n            port: 8080\r\r\n          initialDelaySeconds: 10\r\r\n          periodSeconds: 30\r\r\n        readinessProbe:\r\r\n          httpGet:\r\r\n            path: /health\r\r\n            port: 8080\r\r\n          initialDelaySeconds: 5\r\r\n          periodSeconds: 10\r\r\n```\r\r\n\r\r\n### 응답 시간 비교\r\r\n0.1 CPU를 할당한 애플리케이션에서는 122초가 소요된 반면 1 CPU가 할당된 애플리케이션에서는 11.51초만 소요된 것을 확인할 수 있었습니다.\r\r\n![K8s_CPU limit_3.png](https://image.toast.com/aaaadh/real/2025/techblog/K8sCPU%20limit3.png)\r\r\n\r\r\n### 그라파나를 통한 스로틀링 현상 확인\r\r\n* 초록색: 1 CPU\r\r\n* 노란색: 0.1 CPU\r\r\n\r\r\nCPU 사용률에서 노란색 그래프가 CPU limits가 0.1로 설정되어 그 이상 사용하지 못하는 모습을 보여줍니다. CPU 할당 횟수에서 노란색이 Limits에 걸려서 더 많은 cpu 할당이 발생한 것을 확인할 수 있습니다. 이것은 스로틀링으로 인한 지연 시간 증가 시뮬레이션과 일치하는 결과입니다. 당연하게도 스로틀링 비율도 노란색이 더 높은 것을 알 수 있습니다.\r\r\n![K8s_CPU limit_4.png](https://image.toast.com/aaaadh/real/2025/techblog/K8sCPU%20limit4.png)\r\r\n중요한 지표는 스로틀링 비율로서 비율이 5%를 지속적으로 넘는 현상이 발생한다면 스로틀링이 빈번하게 발생하여 성능에 제약을 받아 서비스가 느려져 있을 가능성이 있으므로 조치를 취해야 합니다.\r\r\n\r\r\n#### 스로틀링 비율 지표 예시\r\r\n```\r\r\nsum by (namespace, pod) (rate(container_cpu_cfs_throttled_periods_total{container!=\"\"}[5m]))\r\r\n/\r\r\nsum by (namespace, pod) (rate(container_cpu_cfs_periods_total{container!=\"\"}[5m]))\r\r\n```\r\r\n\r\r\n## 나가며\r\r\n결론은 아래와 같습니다.\r\r\n* 일반적인 경우,\r\r\n\t* request만 설정하여 자원이 더 필요할 때는 노드의 가용 자원을 사용하고 자원이 모자랄 때는 비율로 할당 받도록 하는 것이 좋은 것 같습니다. (QoS는 Burstable로 설정됨)\r\r\n\t* QoS가 Burstable로 설정되지만 CPU는 Eviction의 조건이 아니기 때문에 throttling이 발생할지언정 pod가 eviction 되지는 않습니다.\r\r\n* limit만 설정하는 경우는 피해야 합니다. limit만 설정할 경우 request가 0이 되어 자원 가용량이 없는 노드에도 스케줄링 될 수 있으며 런타임 시 예측이 어려워집니다.\r\r\n* CPU request는 Pod가 노드에 할당될 때는 절댓값으로 사용되고 할당된 뒤에는 상대적인 비율로 사용됩니다.\r\r\n\r\r\n\r\r\n긴 글을 읽어 주셔서 감사합니다. \r\r\n\r\r\n### 참고 문헌\r\r\n• Kubernetes, Resource Management for Pods and Containers, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\r\r\n• KubeBlog, Understanding CPU Requests and Limits, 2023. 10. 5., https://www.kubeblog.com/basics/understanding-cpu-requests-and-limits/\r\r\n• Itiel Shwartz, Kubernetes CPU Limits: What’s the Right Way to Assign CPU Resources?, 2025. 1. 14., https://komodor.com/learn/kubernetes-cpu-limits-throttling/\r\r\n• Eliran Cohen, For the love of god, learn when to use CPU limits on Kubernetes., 2023. 3. 5., https://medium.com/@eliran89c/for-the-love-of-god-learn-when-to-use-cpu-limits-on-kubernetes-2225341e9dbd\r\r\n• Max Levin, Kubernetes CPU Throttling: What it is, and Best Practices, 2024. 6. 6., https://www.groundcover.com/blog/kubernetes-cpu-throttling\r\r\n• CODE FARM, Linux CGroups and Containers, 2024. 2. 3., https://blog.codefarm.me/2021/11/23/linux-cgroups-containers/\r\r\n• Andreas Karis Blog, Quick guide for cgroups, 2020. 9. 3., https://andreaskaris.github.io/blog/linux/cgroups/\r\r\n• Martin, Cgroups - Deep Dive into Resource Management in Kubernetes, 2023. 2. 20., https://martinheinz.dev/blog/91\r\r\n• Jianhao, Kubernetes CPU requests and limits, 2021. 11. 11., https://jaanhio.me/blog/kubernetes-cpu-requests-limits/\r\r\n• Red Hat, Resource Management Guide > CPU, https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/6/html/resource_management_guide/sec-cpu\r\r\n• Real-time Ubuntu, Linux kernel schedulers, https://documentation.ubuntu.com/real-time/latest/explanation/schedulers/\r\r\n• Rifewang, Kubernetes: CPU Configuration, Linux CFS, and Performance Issues with Programming Languages, 2024. 12. 11., https://medium.com/@rifewang/kubernetes-cpu-configuration-linux-cfs-and-performance-issues-with-programming-languages-ccef783ed22e\r\r\n• JettyCloud, Making Sense of Kubernetes CPU Requests And Limits, 2023. 3. 20., https://medium.com/@jettycloud/making-sense-of-kubernetes-cpu-requests-and-limits-390bbb5b7c92\r\r\n• Tania Duggal, PerfectScale, Kubernetes CPU Limit: Best Practices for Optimal Performance, 2024. 10. 24., https://www.perfectscale.io/blog/kubernetes-cpu-limit-best-practises\r\r\n• Shane Corbett, AWS Blogs, Using Prometheus to Avoid Disasters with Kubernetes CPU Limits, 2022. 9. 21., https://aws.amazon.com/blogs/containers/using-prometheus-to-avoid-disasters-with-kubernetes-cpu-limits/\r\r\n\r\r\n\r\r\n[![NHN Cloud_meetup banner_footer_blue_202509.png](https://image.toast.com/aaaadh/real/2025/techblog/NHN%20Cloudmeetup%20bannerfooterblue202509.png)](https://www.nhncloud.com/kr)",
        "isoDate": "2025-09-14T23:39:12.000Z"
      }
    ]
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "욕심과 능력의 조율",
        "link": "https://www.thestartupbible.com/2025/09/aligning-wants-and-capabilities.html",
        "pubDate": "Wed, 17 Sep 2025 21:34:00 +0000",
        "content:encodedSnippet": "관련해서 내가 여러 번 포스팅했고, 우리 투자사 대표님들을 포함, 나를 만나본 분들은 나한테 자주 듣는 말인데, 하고 싶은 것과 할 수 있는 것 관련 내용이다. 작든 크든, 회사를 운영할 때 대표이사는 스스로에게 매우 냉정하게 물어보고 확인해야 할 것들이 여러 가지가 있는데, 그중 하나가 바로 본인과 팀이 할 수 있는 것과 하고 싶은 것을 스스로에게 물어보고, 구분해야 하는 중요한 작업이다.\n여기서 말하는 ‘할 수 있는 것’은 바로 회사의 스킬과 능력이다. 예를 들어, 팀이 그동안 해왔던 게 개발이라면, 이 팀이 잘하는 건 개발이다. ‘하고 싶은 것’은 말 그대로 회사의 능력과는 상관없이 이 팀이 하고 싶은 일이다. 즉, 욕심이다. 잘하는 건 개발일 수도 있지만, 대표이사가 오래전부터 개인적으로 관심을 두고 열심히 취미 생활을 했던 건 케이팝 공연 기획일 수도 있다. 이 회사는 개발을 해야할까 케이팝 공연을 기획해야 할까?\n이렇게 회사가 잘할 수 있는 것과 하고 싶은 것이 다르면, 사업의 첫 단추부터 잘 못 끼워질 확률이 높다. 이 경우에 너무 많은 창업가가 본인과 팀이 정말 잘할 수 있는 일은 무시하고 과소평가하고, 하고 싶은 것에만 초점을 맞춰서 회사의 모든 자원을 여기에 집중한다. 최악의 경우엔, 한 번도 해보지 않았지만, 너무나 하고 싶은 일에 계속 무모한 도전을 하면서 시간과 돈만 낭비하는 걸 너무 많이 봤다.\n이 구조에 따라서 사업을 멀리서 바라보면 – 너무 가까이서 보면 내가 지금 잘하는 걸 하는지, 아니면 내가 그냥 하고 싶은 걸 하는지, 이게 잘 안 보일 때가 있다 – 내가 잘하는 것과 내가 하고 싶은 것이라는 두 원이 일치하는 완벽한 교집합에서 사업을 하면 성공의 확률이 매우 높다는 결론을 내릴 수 있다. 이론적으론 이게 맞지만, 이 완벽한 교집합에서 사업하는 사람들은 거의 없어서 나는 대부분의 창업가들에게 이 두 원이 조금이라도 겹치는 접점에서 아이디어를 생각해 내고, 이 아이디어를 기반으로 창업하면 그나마 조금이라도 성공의 확률을 높일 수 있다고 한다.\n내가 잘하는 것과 하고 싶은 것의 교집합은 지금 당장 내가 상대적으로 쉽게 시작할 수 있는 일일 테고, 그 교집합의 면적이 작아서 일단 작게 시작해 보면, 작지만, 눈에 띄는 결과를 만들 수 있을 것이다. 내가 하고 싶은 일이고, 내가 잘하는 일이기 때문에. 그리고 작지만, 그 작은 목표 또한 상대적으로 쉽게 달성할 수 있다. 이 과정을 통해서 어느 정도의 성과와 자신감이 생기면, 이를 기반으로 실력을 더 강화한 후 이 두 원의 교집합의 면적을 더 크게 만들 수 있을 것이다.\n내 결론은 무조건 내가 잘하는 것으로부터 시작해야 한다. 내가 잘하는 것을 파악하고, 이게 모든 결정의 시작이 돼야 한다. 내가 잘하는 것을 기반으로, 이게 내가 하고 싶은 것인지를 판단해 보고, 아니라면 하지 말거나, 내가 하고 싶은 것을 조금이라도 내가 잘하는 것과 일치시킬 수 있는 방법에 대해 고민해 봐야 한다.\n그리고 마지막으로, 내가 잘하는 것과 내가 하고 싶은 것을 기반으로, 이게 내가 지금 해야 하는 것인지를 – 즉, 시장이 존재하는지 – 냉정하게 판단해야 한다. 항상 강조하지만, 이 세 가지가 완벽하게 일치하는 경우는 거의 없지만, 완벽하게 일치하는 분야에서 창업한다면, 그만큼 성공 확률이 높다. 하지만, 세 가지 중 두 가지만 어느 정도 일치해도 도전해 볼 가치는 충분히 있다고 나는 생각한다. 두 가지가 어느 정도 일치되면, 나머지 하나의 원과 교집합이 만들어질 수 있게 다양한 시도를 해볼 수 있고, 운 좋으면 이 과정에서 완벽하진 않지만, 접점을 만들 수도 있기 때문이다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/09/aligning-wants-and-capabilities.html#respond",
        "content": "관련해서 내가 여러 번 포스팅했고, 우리 투자사 대표님들을 포함, 나를 만나본 분들은 나한테 자주 듣는 말인데, 하고 싶은 것과 할 수 있는 것 관련 내용이다. 작든 크든, 회사를 운영할 때 대표이사는 스스로에게 매우 냉정하게 물어보고 확인해야 할 것들이 여러 가지가 있는데, 그중 하나가 바로 본인과 팀이 할 수 있는 것과 하고 싶은 것을 스스로에게 물어보고,(...)",
        "contentSnippet": "관련해서 내가 여러 번 포스팅했고, 우리 투자사 대표님들을 포함, 나를 만나본 분들은 나한테 자주 듣는 말인데, 하고 싶은 것과 할 수 있는 것 관련 내용이다. 작든 크든, 회사를 운영할 때 대표이사는 스스로에게 매우 냉정하게 물어보고 확인해야 할 것들이 여러 가지가 있는데, 그중 하나가 바로 본인과 팀이 할 수 있는 것과 하고 싶은 것을 스스로에게 물어보고,(...)",
        "guid": "https://www.thestartupbible.com/?p=9562",
        "categories": [
          "Uncategorized",
          "FoundersAtWork",
          "general",
          "strategy",
          "Strong"
        ],
        "isoDate": "2025-09-17T21:34:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "아시아연합",
        "link": "https://www.thestartupbible.com/2025/09/asian-union.html",
        "pubDate": "Sun, 14 Sep 2025 21:27:00 +0000",
        "content:encodedSnippet": "“한국은 시장이 작다.”\n이 말은 내가 13년 넘게 한국에 투자하면서 셀 수 없을 정도로 너무나 많이 듣던 말이다. 우리 같은 VC에게 자금을 제공하는 한국과 외국 투자자들이 입에 달고 다닐 정도로 너무 많이 하는 지적이고, 심지어 창업가들도 한국 시장이 너무 작기 때문에 항상 해외 시장을 타겟 하거나 아예 본사를 해외로 옮기는 걸 고민하는 경우를 너무 자주 본다. 시장이 작다는 건 다양한 방식으로 해석할 수 있지만, 한국 시장이 작다고 말하는 분들은 대부분 한국의 5,000만 명 인구를 의미한다. 5,000만 인구로 만들 수 있는 GDP와 같은 출력은 한정되어 있기 때문에 한국 시장은 완전히 의미 없을 정도로 작진 않지만, 아무리 커져도 확실히 한계가 있다는 의미이다.\n내가 전에 이 글에서 이제 한국 창업가들이 드디어 글로벌 시장으로 나갈 능력, 배짱, 그리고 자신감이 생겼기 때문에 이제 우리의 TAM(Total Addressable Market)은 한국의 5,000만 명으로 국한되는 게 아니라 일본이나 동남아 시장도 우리의 시장이라고 볼 수 있다고 했다. 이렇게 보면 한국이라는 나라는 인구 5,000만 명의 나라지만, 한국 창업가들의 시장은 이보다 훨씬 더 크다고 할 수 있다.\n물론, 이 외에도 경제 전문가들이 말하는 한국 시장 크기의 한계를 극복하는 두 가지 방법은 북한과의 통일, 그리고 더 많은 외국인을 수입하는 것이다. 현실적으로 북한과의 통일은 단기간 내에 이룩하기 어렵고, 솔직히 요새 많은 분과 이야기해 보면 통일을 오히려 원치 않는다는 느낌을 받기도 한다. 더 많은 외국인을 – 그리고 여기서 말하는 외국인은 외국인 노동자보단, 지식근로자를 의미한다 – 한국으로 수입하기 위해서는 한국의 외국인 비자 정책을 더 쉽고 간단하게 만들어야 한다. 한국의 외국인 비자 프로그램은 생각보다 더 복잡하고 까다로워서 외국인들이 한국에 와서 일하고 사는 게 은근히 어렵다. 그리고 아직도 일부는 한국 젊은이들도 취업을 못 하는데, 외국인들이 한국에 와서 그나마 없는 일자리를 다 “뺐어” 가는 것에 대해서 상당한 불만을 표시하는 분들도 있어서 이 또한 단시간 내에 해결하기 어려운 문제 같다.\n내가 요새 생각하는 한국의 경제 규모와 시장 크기를 확장하는 다른 한 가지 방법은 조금 뜬금없지만, 우리의 가깝고도 먼 이웃 일본과 경제공동체를 만드는 것이다. 그리고 조금 더 나아가선 한국-일본-대만, 이렇게 세 나라가 EU와 같은 경제공동체 AU(Asian Union)를 만드는 것이다. 세 나라는 공통점이 많다. 모두 다 아시아 문화권이고, 모두 다 잘 사는 나라들이고, 모두 다 인구밀도도 비슷해서 이 바닥에서 말하는 ARPU가 높게 나올 수 있다. 그리고 모두 다 서로를 좋아하고 교류가 많다. 이런 말을 전에 공개적으로 했는데, 어떤 분들은 일본과 우리가 경제공동체를 만들어야 한다는 아이디어에 매우 민감하게 반응했다. 대부분 나이가 든 노인들이었는데, 나는 이분들에게 얼마나 많은 한국 젊은이가 일본을 좋아하고, 얼마나 많은 일본 젊은이가 한국을 좋아하는지 강조했다. 솔직히 잘 먹히진 않았지만, 어차피 노인들은 곧 죽을 것이고, 양국의 정치 또한 젊은이들이 할 것이라서 나는 이 아이디어가 그렇게 가능성이 없다고 생각하지 않는다.\n솔직히 대만은 중국이 있어서 좀 어렵긴 할 것 같지만, 이미 월드 클래스인 세 나라가 공동체를 만들 수 있다면, 시장 크기, 인구 크기, 경제 크기, 이 모든 면에서 정말 거대하고 대단한 규모의 시장을 만들 수 있을 것이다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/09/asian-union.html#comments",
        "content": "“한국은 시장이 작다.” 이 말은 내가 13년 넘게 한국에 투자하면서 셀 수 없을 정도로 너무나 많이 듣던 말이다. 우리 같은 VC에게 자금을 제공하는 한국과 외국 투자자들이 입에 달고 다닐 정도로 너무 많이 하는 지적이고, 심지어 창업가들도 한국 시장이 너무 작기 때문에 항상 해외 시장을 타겟 하거나 아예 본사를 해외로 옮기는 걸 고민하는 경우를 너무 자주(...)",
        "contentSnippet": "“한국은 시장이 작다.” 이 말은 내가 13년 넘게 한국에 투자하면서 셀 수 없을 정도로 너무나 많이 듣던 말이다. 우리 같은 VC에게 자금을 제공하는 한국과 외국 투자자들이 입에 달고 다닐 정도로 너무 많이 하는 지적이고, 심지어 창업가들도 한국 시장이 너무 작기 때문에 항상 해외 시장을 타겟 하거나 아예 본사를 해외로 옮기는 걸 고민하는 경우를 너무 자주(...)",
        "guid": "https://www.thestartupbible.com/?p=9560",
        "categories": [
          "Uncategorized",
          "korea"
        ],
        "isoDate": "2025-09-14T21:27:00.000Z"
      }
    ]
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "DOGE를 알면 시장이 보인다",
        "link": "https://toss.im/tossfeed/article/US-Investment-Insights-3",
        "pubDate": "Fri, 19 Sep 2025 07:14:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}📃 토스증권 리서치센터 리포트\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1kxrhf3{white-space:pre-wrap;}⟨다녀왔습니다 워싱턴 D.C. - 03. DOGE는 진짜다⟩\n토스증권 리서치센터 애널리스트들이 워싱턴 D.C.를 찾은 이유는 트럼프 2기 정부가 출범한 이후 정책이 금융시장에 미치는 영향이 점점 더 커지고 있기 때문입니다.\n이번 출장에서 만난 여러 기업, 싱크탱크, 정부 관계자들 역시 이러한 변화를 인지하고 대응하고 있었습니다. 그들과 이야기를 나누면서 저희는 세 번째 인사이트를 얻었습니다.\n “DOGE는 밈이 아니라, 진짜구나.”\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\nDOGE 얘기부터 꺼내는 \n기업 관계자들\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}DOGE(Department of Government Efficiency)는 트럼프 정부가 신설한 공식 기관으로, ‘정부효율부’라는 뜻입니다. 이름 자체도 그렇고, 공동 수장으로 일론 머스크가 임명됐다는 사실도 ‘이슈 메이킹’에 초점이 맞춰진 듯해 처음엔 다소 농담처럼 여겨졌습니다. 한국 언론 역시 ‘일론 머스크와 트럼프의 긴밀한 관계’에 주목하는 기사를 쏟아냈죠.\n그런데 현장 분위기는 달랐습니다. 우리가 만난 기업 경영진들은 DOGE를 ‘정책의 핵심 축’으로 보고 있었어요. 부동산, IT, 방위산업, 정책 분석 플랫폼 등 전혀 다른 업종의 기업들이 우리가 묻기도 전에 DOGE를 먼저 언급하며 대응 전략을 설명했습니다. 기관투자자들로부터 이미 여러 차례 DOGE 관련 질문을 받아본 듯한 느낌이었죠. 실제로 어닝콜*에서 DOGE를 언급하는 기업들도 점차 늘어나는 추세입니다.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}* 기업의 경영진이 실적 발표와 함께 향후 전망을 설명하고 투자자들과 질의응답을 진행하는 행사\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n재정적자의 해결책?\n미국 정부가 ‘효율화’에 박차를 가하는 이유는 만성적인 재정적자 때문입니다. 이는 한두 해 예산 삭감으로 해결될 문제가 아니기에, 아예 전담 조직을 만들어 장기적인 플랜으로 재정 구조를 개혁하려는 것이죠. 미국 정부의 강한 의지를 보여주듯, DOGE는 이미 재정적자 축소에 기여할 수 있는 실질적이고 과감한 시도들을 하고 있습니다.\nDOGE가 하는 일을 한 줄로 요약하면, ‘연방정부의 손익계산서를 면밀히 검토해 불필요한 지출은 줄이고 운영 효율을 높이는 것’입니다.\nDOGE 공식 홈페이지에 따르면 자산 매각, 계약 취소 및 재협상, 사기성 지출 정리, 보조금 축소, 이자 비용 감축, 규제 완화, 인력 감축 등을 통해 총 2,050억 달러의 절감 효과를 거둔 것으로 자체 추산하고 있습니다. 절감 항목과 규모는 매주 홈페이지에 업데이트돼 누구나 쉽게 확인할 수 있습니다.\nAI로 ‘효율화의 효율’ 높이기\nDOGE가 우선적으로 집중하는 분야는 비국방·비긴급 예산입니다. 미국 연방정부 전체 예산 6.75조 달러 중 약 14%를 차지하는 항목인데요. DOGE는 2026년까지 이 영역에서만 1,630억 달러를 절감하겠다는 목표를 세웠습니다.\n\n이를 위해 DOGE는 AI를 적극 활용하고 있습니다. 광범위한 예산 속 비효율을 빠르게 찾아내려면 방대한 데이터를 수집하고 분석해야 하는데, 여기에 AI가 쓰이고 있는 겁니다.\n출범 초기, 일론 머스크와 함께 테슬라 출신 엔지니어들이 DOGE에 참여했다는 소식이 전해졌는데요. 이들이 개발한 ‘규제 완화 결정 도구(DOGE AI Tool)’가 지금은 효율화 작업에 적극 활용되고 있습니다.\n출범 6개월, \nDOGE에 대한 현지 평가\n긍정·부정 평가가 엇갈리긴 했지만, 정부 관계자·언론·싱크탱크·상하원 의원 등은 여전히 DOGE의 영향력에 주목하고 있었습니다. 트럼프 행정부의 인사관리처 수장 스콧 쿠포는 “DOGE의 방식이 다소 강압적이지만, 그러한 시도가 효율화 흐름을 촉발한 것은 사실”이라고 인정했습니다. ‘포브스’와 ‘로이터’는 DOGE가 성공할 경우 정부가 국민을 위해 더 나은 서비스를 제공하는 방향으로 발전할 수 있다는 기대를 내놓기도 했습니다.\n물론 모든 평가가 긍정적인 건 아닙니다. 미국의 싱크탱크 브루킹스(Brookings)는 DOGE가 여러 정부 부처에서 대규모 해고를 단행하며 국정 운영에 차질이 생긴 점을 지적했습니다. 민주당 상원 의원 리처드 블루멘털(Richard Blumenthal)은 “세금 절감은커녕 오히려 세금 낭비를 키웠다”라는 비판적 논조의 보고서를 발표하기도 했습니다.\nDOGE에서 얻을 수 있는\n투자 인사이트\n여기까지 읽고 “효율화든 구조조정이든, 그게 투자자에게 중요한가요?”라고 궁금하실 수 있습니다. 네, 정말 중요합니다. 실제로 현지 관계자들을 만나 보니 몇 가지 투자 인사이트를 얻을 수 있었습니다.\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n상업용 부동산 시장이 위축될 수 있습니다. 정부가 계약을 해지하고 사무실을 줄이기 시작했기 때문입니다. 워싱턴 D.C. 지역은 이미 흔들리고 있다고 합니다.\n정부를 주요 고객으로 둔 중소형 협력사들은 더욱 타격이 큽니다. 효율을 중시하게 되면, 계약 하나로 다양한 일을 한꺼번에 맡길 수 있는 대형 기업이 유리하기 때문입니다. 규모가 큰 회사일수록 경험이 풍부하고 업무 역량도 넓어, 시장은 앞으로 이들 중심으로 재편될 가능성이 큽니다.\n국방·보안 기업은 DOGE의 영향에서 자유로워 보였습니다. 국가적으로 워낙 중요한 분야라 국방 예산은 DOGE도 쉽게 손을 대지 못한다고 합니다.\n디지털 전환, 사이버보안 기업에겐 기회가 될 수 있습니다. 정부가 효율화를 위해 IT 시스템 전반을 바꾸고 있어, 관련 기술을 보유한 기업이라면 더 큰 성장 기회를 얻을 수 있습니다.\n\n일론 머스크가 트럼프와 갈등을 빚고 DOGE를 떠났다는 뉴스보다 중요한 건 따로 있습니다. 바로 DOGE가 이끌고 있는 구조적 변화입니다. DOGE는 일시적인 해프닝이 아니라 큰 변화의 시작입니다. 실제로 수많은 기업이 DOGE의 예산 기준에 맞춰 사업 전략을 수정하고 있으며, 이 변화는 각 산업의 수요·수익·리스크 전반에 영향을 미치고 있습니다.\n지금 DOGE를 이해하는 건, 앞으로 미국 정부가 어디에 돈을 쓰고 또 어디에 쓰지 않을지를 파악하는 일입니다. 그리고 그건 기업의 변화를 이해하는 데 점점 더 중요한 요소가 될 것입니다.\n\n💡 다음 글 예고\n\n워싱턴 D.C. 출장 얘기는 이번 편으로 마무리하고, 다음 편에서는 텍사스에서 보고 들은 이야기를 전해드리겠습니다. 미국의 과거, 현재, 미래가 공존하는 텍사스에서 얻은 인사이트를 잘 정리해 가져올 테니 많이 기대해주세요. 감사합니다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nWriter 이지선 애널리스트 Edit 기명균 윤동해 Graphic 고영진 최서윤",
        "content": "정부 지출 변화에서 읽는 투자 전략",
        "contentSnippet": "정부 지출 변화에서 읽는 투자 전략",
        "guid": "https://toss.im/tossfeed/article/US-Investment-Insights-3",
        "isoDate": "2025-09-19T07:14:00.000Z"
      },
      {
        "title": "토스, ‘1사 1교’ 결연 통해 한전초서 초등학생 대상 금융교육 실시",
        "link": "https://toss.im/tossfeed/article/tossedu2025",
        "pubDate": "Thu, 18 Sep 2025 16:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}강원도 양구 한전초와 결연 맺고 인근 초등학생도 초청… 총 66명 금융 교육 성료\n자산 관리 강의부터 경제 체험 활동까지… 청소년 맞춤 교육 구성에 학생 참여 활발\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 강원도 양구군에 있는 한전초등학교와 첫 번째 ‘1사 1교’ 결연을 맺고, 인근 임당초등학교와 양구초등학교를 포함한 총 66명의 초등학생에게 금융 교육을 진행했다고 19일 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n금융감독원이 주관하는 1사 1교 프로그램은 학생들이 금융에 대한 올바른 인식을 어려서부터 형성할 수 있도록 금융 회사와 학교가 결연을 맺어 교육하는 제도다. 토스는 올해 한전초등학교와 첫 결연을 맺고, 금융 교육 기회가 적은 지역으로 찾아가는 특강을 통해 학생들이 필요로 하는 생활 경제 지식을 제공했다.\n\n특강은 9월 15일과 9월 18일, 총 2회에 걸쳐 성공적으로 마무리됐다. 특히 인근 임당초등학교와 양구초등학교의 요청으로 해당 학생들을 한전초로 초청해 총 66명의 학생들을 만났다. 이번 초청은 지역 사회와 배움의 가치를 나누고, 많은 학생들이 건강한 금융 습관을 기를 수 있도록 교육 기회의 접근성을 높인 의미 있는 사례다.\n\n1회차 교육은 ‘나의 첫 번째 금융 이야기’라는 주제 아래 ▲ 돈의 이해와 슬기로운 금융 생활 ▲ 용돈 계획 세우기 조별 활동 ▲ 금융 사기 및 도박 예방 교육 등의 내용으로 약 150분간 실시됐다. 학생들은 전문 강사의 강의를 듣고, 자산 관리 계획을 세우며 돈에 대한 감각을 익혔다.\n\n이어진 ‘토스와 함께하는 경제 놀이터’에서는 학교 안에 가상의 경제 마을을 짓고, 학생들이 직접 대출·은행 업무, 근로계약서 작성·아르바이트, 소비·기부 등 전반적인 경제 활동을 체험할 수 있도록 했다. 여기에는 토스 사내 봉사단 ‘토스피스’도 함께해 OX 퀴즈쇼와 실시간 경제 뉴스 등 다양한 프로그램을 진행하며 몰입도를 높였다.\n\n학생들은 “체험 활동을 통해 경제를 배우니 쉽게 이해할 수 있었다”, “종이 통장을 처음 봐서 인상 깊었다”, “어른이 되면 진짜 기부를 해보고 싶다” 등의 소감을 남겼다. 한전초 관계자는 “아이들이 평소 접하기 어려운 금융 교육을 진행할 수 있어 기뻤고, 학생들은 특강을 통해 시장 원리를 몸소 익히며 특별한 추억을 쌓았다”고 전했다.\n토스 관계자는 “강원도 양구 지역 초등학생들과 직접 소통하며 금융에 대한 흥미와 자신감을 심어줄 수 있어 뜻깊은 시간이었다”며 “토스는 ‘누구에게나 쉽고 편리한 금융’이라는 기업 철학을 꾸준히 실천하며 지역간 금융 교육 격차를 줄이는데 기여하겠다”라고 밝혔다.",
        "content": "인근 초등학생도 초청… 총 66명 대상 금융 교육 성료",
        "contentSnippet": "인근 초등학생도 초청… 총 66명 대상 금융 교육 성료",
        "guid": "https://toss.im/tossfeed/article/tossedu2025",
        "isoDate": "2025-09-18T16:00:00.000Z"
      },
      {
        "title": "What makes a good product?",
        "link": "https://toss.im/tossfeed/article/tossproductprinciples",
        "pubDate": "Wed, 17 Sep 2025 08:09:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}At Toss, Product Principles are at the heart of the products* we create. They define what quality means to us and provide the foundation for meaningful feedback and improvement.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}*A “Product” at Toss refers to the wide range of services we offer our customers, from money transfer and loans to step tracking and credit checks.\nAt the core of our Product Principles is .css-1odxvuk{white-space:pre-wrap;font-style:italic;}Simplicity. A product should never require users to “know” or “learn” how to use it. The simpler the product, the more people use it, and the faster and bigger the service grows.\nBehind every Toss service is rigorous thinking, relentless experimentation, and bold challenges. Along this journey, we have discovered the following 10 principles for creating products that truly succeed.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n01. Casual Concept\nAre complex ideas presented in a way that feels familiar and easy to understand? Here at Toss, we replace technical jargon with everyday language that anyone can grasp instantly.\n02. Simple Policy\nAn intuitive product starts with a simple policy. No matter how polished the UI, if the rules are complicated, the product will feel complicated.\n03. Value First\nIt’s our job to show users that our product is worth their time and money. By clearly communicating its benefits before asking them to act, we guide users seamlessly to complete the task at hand.\n04. Clear Action\nIs the required action to achieve the desired result obvious at a glance? Without reading a word, users should know exactly what to do next.\n05. Context Based\nWas the entire user journey considered in the design? Every product flow should feel natural from beginning to end. A fragmented or forced experience will only push users away.\n06. Easy to Answer\nCan users answer every question within three seconds? If users find something hard to decide, we provide recommendations. When they can’t recall something, we retrieve the information for them. Three simple questions are always better than one difficult one, but none is the best.\n07. Explain Why\nDid users receive a clear explanation of why they needed to complete the action? Never assume what’s obvious to us is obvious to users. Always explain the reason behind an action so they can move forward with confidence.\n08. One Thing\nEach page should deliver a single, clear core message, refined to its essentials.\n09. No More Loading\nHave we completely removed waiting for users? Long wait time drifts users away. Pull all levers to eliminate delays —whether by redesigning flows, improving policies, or adopting new technology.\n10. Minimum Features\nMore features in a product mean more complexity, slower updates, and more bugs. Adding a new feature often brings more cost than value, and should be a last resort.\nFollow us on .css-114ityv{white-space:pre-wrap;cursor:pointer;-webkit-text-decoration:underline!important;text-decoration:underline!important;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}LinkedIn and explore more detailed updates about Toss.",
        "guid": "https://toss.im/tossfeed/article/tossproductprinciples",
        "isoDate": "2025-09-17T08:09:00.000Z"
      },
      {
        "title": "토스, 하반기 커머스 전직군 대규모 경력 공개 채용",
        "link": "https://toss.im/tossfeed/article/commercetalents",
        "pubDate": "Tue, 16 Sep 2025 16:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}개발자·엠디·데이터 분석·디자인 등 총 9개 전직군 모집\n연차 상관없이 지원 가능… 오는 30일까지 서류 접수\n“커머스 혁신을 선도할 창립 멤버급 인재 채용”\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 2025년 하반기 커머스 전직군 대규모 경력 공개 채용을 진행한다고 17일 밝혔다. 상반기에 이어, 우수 인재를 선제적으로 확보해 커머스 경쟁력을 확보하겠다는 전략이다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n모집 분야는 ▲머신러닝(ML) 엔지니어 ▲데이터 엔지니어 ▲데이터 애널리틱스 엔지니어 ▲데이터 분석 ▲서버 개발자 ▲프론트엔드(FE) 개발자 ▲엠디(MD) ▲프로덕트 오너 ▲프로덕트 디자이너 등 총 9개 전직군이다. 채용 규모는 세 자릿수 수준이다. 저연차.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}·고연차를 막론하고 뛰어난 역량을 가진 누구나 지원할 수 있다.\n이번 채용은 오는 30일까지 서류 접수를 받는다. 이후 직무 인터뷰, 컬쳐 인터뷰 순으로 진행된다. 직무 특성에 따라 일부 지원자들은 과제 또는 코딩 테스트 전형을 추가로 실시한다. 분야 별로 자세한 요건과 직무 설명 등은 토스 채용 공식 홈페이지를 통해 확인할 수 있다.\n지원자들의 궁금증 해소에 도움이 될 수 있도록 커머스 총괄과 커머스 테크 헤드가 직접 공유해주는 영상 콘텐츠도 준비했다. 토스 커머스가 가지고 있는 경쟁력과 비전을  포함해 해결하고자 하는 문제들,  토스 고유의 조직문화 등을 직접 설명한다.\n토스는 유연한 출퇴근시간을 기본으로 하는 ‘유연근무제’를 운영 중이며, 만 3년 근속 시 1개월 리프레시 유급 휴가를 제공한다. 이밖에도 다양한 사내 복지 제도와 커리어 개발 프로그램은 물론, 일과 가정이 양립할 수 있도록 포괄적인 복지 인프라를 제공하고 있다.\n박웅도 토스 커머스 총괄은 “이번 대규모 채용은 토스 커머스를 본격적으로 시작하기 위한 도약의 출발점”이라며 “커머스의 본질에 다시 질문을 던지고, 새롭게 정의할 동료들의 적극적인 지원을 기대한다”고 말했다.",
        "content": "세 자릿수 규모, 연차 상관없이 지원 가능",
        "contentSnippet": "세 자릿수 규모, 연차 상관없이 지원 가능",
        "guid": "https://toss.im/tossfeed/article/commercetalents",
        "isoDate": "2025-09-16T16:00:00.000Z"
      },
      {
        "title": "빚 다 갚으면 연체 기록도 지워주는 ‘신용회복’, 나도 대상자일까?",
        "link": "https://toss.im/tossfeed/article/tossmoment-17",
        "pubDate": "Tue, 16 Sep 2025 09:32:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}신용회복이란 특정 기한 내 연체가 발생했지만 이후 전액 상환을 완료한 분들의 연체 기록을 삭제하는 정부 지원 제도.css-1kxrhf3{white-space:pre-wrap;}예요.\n코로나19와 고금리로 생긴 빚을 모두 갚았지만 일부 서민과 소상공인은 과거 연체 기록 때문에 여전히 대출이 거절되거나 카드 발급이 제한 등의 금융 제약을 받고 있었어요. 정부는 이를 개선하기 위해 '신용회복 지원' 제도를 도입했습니다. 재기 의지를 보인 성실상환자들이 정상적인 금융생활로 복귀할 수 있도록 돕고, 불법사금융으로 내몰리는 것을 방지하는 것이 주요 목적이에요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}Q. 누가 신용회복 대상자인가요?\n신용회복 대상자는 2020년 1월 1일부터 2025년 8월 31일 사이에 5,000만 원 이하의 연체 금액이 발생한 개인 및 사업자예요. 이때 중요한 조건은 2025년 12월 31일까지 전액 상환을 완료해야 한다는 점입니다. 다시 말해 2025년 연말까지 상환을 완료해야 신용회복 혜택을 받을 수 있어요.\nQ. 신용회복 신청은 어떻게 하나요?\n2025년 9월 30일, 신용회복 시스템이 정식 오픈되면 조건에 해당하는 경우 별도의 신청 절차 없이 자동으로 회복돼요.\n조금 더 구체적으로 말하면 9월 30일 전까지 상환을 완료하면 시스템 오픈과 동시에 연체 기록이 사라지고요. 10월 1일부터 12월 31일 사이에 상환하는 경우에는 다음 날 연체 기록이 없어져요. 복잡한 서류 작성이나 승인 과정 없이, 빚만 다 갚으면 즉시 신용이 회복되죠.\nQ. 신용회복이 되면 어떤 점이 달라지나요?\n신용회복이 되면 우선 신용점수가 크게 오릅니다. 개인은 평균 39점, 개인사업자는 평균 101점까지 올라가기도 해요. 덕분에 더 나은 조건의 대출이나 카드를 신청하거나, 기존에 쓰던 카드의 한도를 상향하는 등 정상적인 금융생활로 돌아갈 수 있어요.\n다만 신용회복을 받은 후에도 새로운 연체가 발생하지 않도록 계획적인 금융관리를 지속하는 것이 중요해요.\n토스 신용회복 사전알림 신청하고 반가운 소식 놓치지 마세요!\n‘나도 신용회복 대상일지’ 궁금하다면, 토스에서 사전알림 서비스를 활용해보세요. 아래 버튼을 통해 사전알림을 신청해 두시면 9월 30일 오픈과 동시에 대상 여부를 빠르게 확인할 수 있어요.\n이미 대출 상환을 완료하신 경우에도 시스템 오픈과 동시에 신용회복 대상자인지 바로 알려드려요. 아래 버튼을 눌러 사전알림 신청하고 반가운 소식 놓치지 마세요.",
        "content": "대상자 확인부터 상환 방법까지 2025년 최신 버전을 알려드려요  ",
        "contentSnippet": "대상자 확인부터 상환 방법까지 2025년 최신 버전을 알려드려요",
        "guid": "https://toss.im/tossfeed/article/tossmoment-17",
        "isoDate": "2025-09-16T09:32:00.000Z"
      },
      {
        "title": "치열한 미·중 갈등 속에서 찾는 투자 전략",
        "link": "https://toss.im/tossfeed/article/US-Investment-Insights-2",
        "pubDate": "Mon, 15 Sep 2025 09:19:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}📃 토스증권 리서치센터 리포트\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n⟨다녀왔습니다 워싱턴 D.C. - 02. 미국엔 중국이 가득했다⟩\n.css-1kxrhf3{white-space:pre-wrap;}토스증권 리서치센터 애널리스트들은 최근 미국 정치의 심장 워싱턴 D.C.를 다녀왔습니다. 트럼프 당선 이후 정치가 글로벌 주식시장을 흔드는 지금, 현장에서 투자 아이디어를 찾기 위해서였죠.\n그곳에서 얻은 두 번째 인사이트를 한줄로 요약하면 이렇습니다. “미국은 중국 견제에 진심이다!”\n\n워싱턴 D.C에 머무는 동안 인상 깊었던 건 도시 곳곳에서 열리는 세미나와 공개 행사였습니다. 평일 낮임에도 불구하고 많은 사람들이 모여 치열하게 토론하는 모습에서 정책에 대한 높은 사회적 관심이 느껴졌습니다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}토론에서 유독 자주 등장하는 키워드는 바로 ‘중국’이었어요. 현지인들은 중국과의 구도가 경제, 외교, 안보 등 다방면에서 가장 중요한 변수라고 여기고 있었습니다. 중국 얘기를 계속 듣다 보니 궁금해졌습니다. 미국은 왜 이렇게까지 중국을 견제할까요? 이러한 집중 견제는 어떤 결과로 이어질까요?\n이번 글에서는 미국이 중국을 견제하는 이유가 무엇인지, 미·중 갈등이 지속될 경우 투자자는 어떻게 대응해야 하는지를 차근차근 말씀드릴게요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n미국 vs 중국, 4가지 경쟁 구도\n출장에서 만난 현지 전문가들에 따르면, 미국은 관세뿐 아니라 여러 방면에서 중국을 견제하고 있었습니다. 그 말인즉슨, 중국의 부상을 억제하려면 그만큼 복합적인 전략이 필요하다는 의미입니다.\na) 체제 경쟁\n후버 연구소의 조셉 토리지안은 시진핑 주석이 부친의 숙청 경험과 문화대혁명을 반면교사 삼아 ‘중국식 현대화 모델’을 채택했다고 말합니다. 공산당 이념에 디지털 통제를 융합한 이 모델이 장기 집권을 정당화하는 데 쓰이고 있다는 거죠.\n미국이 경계하는 건 이러한 체제가 중국 외 다른 나라로 확산되는 것입니다. 실제로 중국은 우간다, 짐바브웨 같은 아프리카 기업에 AI 기반 감시 카메라나 안면인식 군중분석 시스템 등 감시 인프라를 수출했어요. 이를 두고 허드슨 연구소의 토마스 벤슨은 중국이 전 세계로 확산될 ‘기술 기반 전체주의 모델’을 선도하고 있다고 우려했습니다.\nb) 금융 자본 경쟁\n미국은 중국으로 금융자본이 유입되는 상황에 대해서도 강한 경계심을 갖고 있었습니다. 토마스 벤슨은 특히 미국과 유럽의 자본이 홍콩 증시를 통해 제재 대상인 중국 기업으로 흘러갈 수 있음을 지적했어요.\n예를 들어, 미국은 인권 문제를 이유로 신장 위구르 지역에서 생산된 제품의 수입을 금지하고 있습니다. 하지만 이들 기업도 금융시장을 통하면 미국으로부터 자금을 조달할 수 있죠. 당연히 제재 효과는 약해질 수밖에 없습니다.\nc) 기술 패권 경쟁\nAI, 반도체, 위성 등 첨단 기술은 국가 경쟁력의 핵심으로 여겨져요. 미국이 중국의 기술 발전을 경계하는 이유도 여기에 있습니다. 실제로 미국은 AI 산업의 핵심인 GPU 가 중국으로 수출되는 것에 제한을 두고 있죠.\n우려가 현실로 드러난 사례도 있었습니다. 올해 초 중국 딥시크(Deepseek)가 등장하면서 미국 주식시장에서 엔비디아 등 관련 기업의 주가가 크게 하락한 것입니다. 이후 주가는 회복되었지만, 중국의 기술 발전이 미국의 AI 및 반도체 산업에 타격을 줄 수 있다는 걸 보여준 사건이었어요.\nd) 공급망 확보 경쟁\n코로나19 당시 미국은 면봉이나 시약 같은 기본적인 의료 물품조차 중국에 의존해야 했어요. 쓰라린 경험을 통해 미국은 공급망 확보의 중요성을 새삼 깨달았죠. 이후 미국은 헬스케어 산업뿐 아니라 반도체, 에너지, 클라우드 등 핵심 산업 전반에 걸쳐 공급망 국내화를 추진하고 있습니다.\n바이든 정부가 인플레이션 감축법(IRA)*, 칩스법(Chips Act)** 등 미국 내 에너지/반도체 생산 기업에 보조금을 지급한 것도 공급망 국내화 전략의 일환이었습니다. 칩스법에는 ‘미국에서 보조금을 받는 기업은 중국 내 첨단 반도체 투자를 금지한다’는 조항이 포함되어 있죠. 인플레이션 감축법 또한 ‘중국에서 생산된 소재 및 부품을 사용할 경우 보조금 대상에서 제외한다’는 조건을 담고 있고요.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}* 미국 내에서 생산된 전기차·배터리 등 친환경 산업에 보조금을 주는 법\n** 미국 내 반도체 공장 투자와 생산에 보조금과 세제 혜택을 지원하는 법\n과거 미국이 견제했던 다른 나라들\n미국은 과거에도 특정 국가를 견제한 적이 있습니다. 바로 소련과 일본이에요.\n\na) 소련 - 냉전시대의 경쟁자\n1950년대, 공산주의 진영을 대표하던 소련은 산업화에 성공하며 세계 2위 경제대국으로 올라섰어요. 군사력도 막강했죠. 미국 입장에서는 위기감이 들 수밖에 없었습니다. 그때 미국 외교관 조지 캐넌이 대통령에게 편지 한 통을 보냅니다.\n.css-2sk6rv{font-size:19px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);white-space:pre-wrap;margin:24px 0;padding-left:20px;position:relative;}.css-2sk6rv::before{content:'';display:block;position:absolute;top:4px;left:0;width:2px;height:calc(100% - 4px * 2);padding:4px 0;background-color:var(--adaptiveGrey800);}\n소련은 공산주의 확산을 꿈꾸고 있습니다. 정치, 경제, 외교로 봉쇄해야 해요..css-7mseny>*{margin-left:0;margin-right:0;}.css-7mseny>:last-child{margin-bottom:0;}blockquote>.css-7mseny:first-child>:first-child{margin-top:0;}\n이 편지를 계기로 소련 봉쇄 전략이 구체화됐어요.\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n마셜 플랜: 유럽 경제 재건 지원으로 소련의 영향력 차단\n나토(NATO): 서유럽 국가들을 군사 동맹으로 묶어 소련 견제\n\n쉽게 말해 미국이 소련을 왕따시킨 셈이었죠. 당시 미·소 갈등은 자유주의와 공산주의의 ‘진영 싸움’이었기에 가능했어요. 결국 막대한 군비 지출에 허덕이던 소련은 붕괴했습니다.\nb) 일본 - 한때 반도체 생산량 1위\n1980년대에는 일본이 미국을 긴장하게 했습니다. 일본의 반도체, 자동차, 전자제품이 세계 시장을 휩쓸면서 미국의 핵심 산업을 위협했거든요. 당시 미국 무역적자의 40%가 일본 때문일 정도였어요.\n미국은 곧바로 대응했습니다. 엔화 가치를 올리는 ‘플라자 합의’로 일본의 수출 경쟁력을 꺾고, 반도체 협정을 맺어 일본 기업들이 만든 반도체의 가격과 시장 점유율에 관여하기 시작했죠.\n미국과의 무역에 기대 성장한 일본에는 뼈아픈 견제였습니다. 결국 일본은 버블 붕괴와 함께 ‘잃어버린 20년’을 맞이하게 됩니다.\n중국과의 싸움은\n조금 더 복잡하고 어렵다\n소련도 눌렀고 일본도 눌렀으니, 중국과의 대결에서도 미국이 간단히 승리할까요? 생각만큼 그리 간단하지 않습니다. 중국은 과거 라이벌인 소련과 일본보다 훨씬 까다로운 상대거든요.\n\n중국은 소련처럼 체제가 달라 동맹을 맺기는 어려운 상대인데, 일본처럼 무역으로 긴밀히 얽혀 있어 완전히 끊어내기도 어렵기 때문입니다. 이른바 ‘복합 경쟁자’인 셈이죠.\n게다가 중국은 과거 소련과 일본의 사례에서 교훈도 얻었어요. 소련처럼 무리한 군비 경쟁에 뛰어들지도 않고, 일본처럼 불리한 협상 테이블에 앉지도 않고 있죠. 대신 수출과 내수 시장을 함께 키우는 ‘쌍순환 전략’으로 버틸 힘을 기르겠다는 영리한 전략을 펴고 있어요.\n투자자는 어떻게 대응해야 할까요?\n1. 장기전을 염두에 두기\n미국과 중국의 갈등은 길어질 거예요. 두 나라의 복잡한 관계를 고려했을 때, 미국과 중국의 갈등이 단기간에 끝나진 않을 거거든요. 그러니 앞으로 장기전이 될 가능성이 높다는 걸 염두에 두셔야 해요.\n2. 기술 패권 경쟁에 주목하기\n기술 패권을 둘러싼 치열한 경쟁은 기술 기업에게 기회가 될 수 있어요.css-1swx3yz{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;font-weight:bold;}. 두 나라 모두 기술 패권을 유지하는 것이 얼마나 중요한 일인지 잘 알고 있기 때문에, 경쟁이 치열할수록 산업의 성장 속도도 빨라질 거예요. 인공지능, 우주, 로봇 등 기술 패권을 좌우할 분야는 이미 윤곽이 드러나고 있습니다.\n3. 잠재적 리스크 관리하기\n지속되는 갈등은 잠재적인 리스크예요. 미·중 갈등이 언제든 다시 격화될 수 있다는 점을 염두에 둘 필요가 있어요. 세계 1, 2위 국가의 충돌은 글로벌 증시에 큰 충격을 줄 수 있어요. 이는 트럼프의 임기가 끝나든, 집권 정당이 바뀌든 마찬가지입니다. 미·중 갈등을 사라지지 않을 ‘상수’로 받아들이는 것이 중요합니다.\n\n💡 다음 글 예고\n\n트럼프 2기 정부 출범과 함께 신설된 DOGE(정부효율부), 혹시 잊으셨나요?\n우리가 워싱턴에서 만난 기업 관계자들은 하나같이 DOGE(Department of Government Efficiency)의 영향력에 대해 이야기하고 있었어요. 다음 글에서는 DOGE 의 진짜 목적은 무엇이며 향후 미국 경제에는 어떤 영향을 미칠지, 기업과 언론, 정치권의 평가는 어떤지, 결국 투자자가 알아야 할 것들은 무엇일지에 대해 말씀드리겠습니다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nWriter 한상원 애널리스트 Edit 기명균 윤동해 Graphic 고영진 윤자영",
        "content": "중국 견제에 진심인 미국과 버틸 힘을 기르는 중국",
        "contentSnippet": "중국 견제에 진심인 미국과 버틸 힘을 기르는 중국",
        "guid": "https://toss.im/tossfeed/article/US-Investment-Insights-2",
        "isoDate": "2025-09-15T09:19:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]