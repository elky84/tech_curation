[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Augustin Popa",
        "title": "What’s New in vcpkg (January 2025)",
        "link": "https://devblogs.microsoft.com/cppblog/whats-new-in-vcpkg-january-2025/",
        "pubDate": "Thu, 23 Jan 2025 18:44:37 +0000",
        "content:encodedSnippet": "This blog post summarizes changes to the vcpkg package manager as part of the 2025.01.13 registry release, 2025-01-11 tool release, as well as changes to vcpkg documentation throughout January. This release includes minor improvements and bug fixes.\nSome stats for this period:\nThere are now 2,524 total ports available in the vcpkg curated registry. A port is a versioned recipe for building a package from source, such as a C or C++ library.\n12 new ports were added to the curated registry.\n177 updates were made to existing ports. As always, we validate each change to a port by building all other ports that depend on or are depended by the library that is being updated for our 13 main triplets.\n63 community contributors made commits.\nThe main vcpkg repo has over 6,600 forks and 23,800 stars on GitHub.\nvcpkg changelog (2025.01.13 release)\nThe following notable changes were made in January:\nMoved vcpkgTools.xml data into a JSON file, removed the XML parsing code, added architecture field to tool metadata, and removed the requirement of force system binaries on arm64 Linux platforms (PR: Microsoft/vcpkg-tool#1553).\nAdded some checks to prevent vcpkg from sometimes using an incompatible version of CMake, resulting in an error for the user (PR: Microsoft/vcpkg-tool#1562, thanks @autoantwort!).\nOther minor bug fixes.\nDocumentation changes\nThere are no changes to vcpkg documentation this month.\nIf you have any suggestions for our documentation, please submit an issue in our GitHub repo or see the box at the bottom of a particular article.\n\nTotal ports available for tested triplets\ntriplet\nports available\n\n\nx64-windows\n2,422\n\n\nx86-windows\n2,315\n\n\nx64-windows-static\n2,294\n\n\nx64-windows-static-md\n2,344\n\n\narm64-windows\n2,029\n\n\narm64-windows-static-md\n2,010\n\n\nx64-uwp\n1,346\n\n\narm64-uwp\n1,312\n\n\nx64-linux\n2,399\n\n\nx64-osx\n2,273\n\n\narm64-osx\n2,191\n\n\narm-neon-android\n1,690\n\n\nx64-android\n1,764\n\n\narm64-android\n1,732\n\n\n\nWhile vcpkg supports a much larger variety of target platforms and architectures (as community triplets), the list above is validated exhaustively to ensure updated ports don’t break other ports in the catalog.\nThank you to our contributors\nvcpkg couldn’t be where it is today without contributions from our open-source community. Thank you for your continued support! The following people contributed to the vcpkg, vcpkg-tool, or vcpkg-docs repos in this release (listed alphabetically by GitHub username):\nAenBleidd\nalagoutte\nan-tao\nautoantwort\nboris-bc\nbshoshany\nbuck-yeh\nc8ef\ncffk\nchiphogg\ndanielaparker\ndavidepianca98\ndeniskovalchuk\nDeveloperPaul123\ndg0yt\ndonny-dont\ndrdanz\neyalroz\nflarive\nGabeRundlett\ngastineau\ngfeyer\nhosseinmoein\nilya-lavrenov\nJackBoosY\nJacobBarthelmeh\njcelerier\njeremy-rifkin\nJoergAtGithub\njreichel-nvidia\nlesomnus\nliuzicheng1987\nluadebug\nluncliff\nm-kuhn\nmarcodiiga\nMehdiChinoune\nmichael-doubez\nmiyanyan\nmsclock\nmyd7349\nNeumann-A\nnickdademo\nnlogozzo\noleg-derevenetz\nPavelKisliak\nrioki\nRobbertProost\nRT2Code\nrtzoeller\nrustyconover\nsalman-javed-nz\nscotthart\nSunBlack\ntalregev\ntartanpaint\nTradias\nwalbourn\nweypro\nwikiwang1991\nxb284524239\nxiaozhuai\nyurybura\nLearn more\nYou can find the main release notes on GitHub. Recent updates to the vcpkg tool can be viewed on the vcpkg-tool Releases page. To contribute to vcpkg documentation, visit the vcpkg-docs repo. If you’re new to vcpkg or curious about how a package manager can make your life easier as a C/C++ developer, check out the vcpkg website – vcpkg.io.\nIf you would like to contribute to vcpkg and its library catalog, or want to give us feedback on anything, check out our GitHub repo. Please report bugs or request updates to ports in our issue tracker or join more general discussion in our discussion forum.\n \nThe post What’s New in vcpkg (January 2025) appeared first on C++ Team Blog.",
        "dc:creator": "Augustin Popa",
        "comments": "https://devblogs.microsoft.com/cppblog/whats-new-in-vcpkg-january-2025/#respond",
        "content": "<p>This blog post summarizes changes to the vcpkg package manager as part of the 2025.01.13 registry release, 2025-01-11 tool release, as well as changes to vcpkg documentation throughout January. This release includes minor improvements and bug fixes. Some stats for this period: There are now 2,524 total ports available in the vcpkg curated registry. A [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/whats-new-in-vcpkg-january-2025/\">What’s New in vcpkg (January 2025)</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "This blog post summarizes changes to the vcpkg package manager as part of the 2025.01.13 registry release, 2025-01-11 tool release, as well as changes to vcpkg documentation throughout January. This release includes minor improvements and bug fixes. Some stats for this period: There are now 2,524 total ports available in the vcpkg curated registry. A […]\nThe post What’s New in vcpkg (January 2025) appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=35041",
        "categories": [
          "C++",
          "Vcpkg",
          "vcpkg"
        ],
        "isoDate": "2025-01-23T18:44:37.000Z"
      }
    ]
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": [
      {
        "creator": "",
        "title": "Bringing Jetpack Compose to Instagram for Android",
        "link": "https://engineering.fb.com/2025/01/24/android/bringing-jetpack-compose-to-instagram-for-android/",
        "pubDate": "Fri, 24 Jan 2025 17:30:53 +0000",
        "content:encodedSnippet": "Introducing a new Android UI framework like Jetpack Compose into an existing app is more complicated than importing some AARS and coding away. What if your app has specific performance goals to meet? What about existing design components, integrations with navigation, and logging frameworks?\nOn this episode of the Meta Tech Podcast Pascal Hartig is joined by Summer, a software engineer whose team handles large-scale migrations for Instagram. Summer walks through the various thoughtful and intricate phases that Instagram goes through to ensure that developers have the best possible experience when working on our codebases. She also discusses balancing all of this with Meta’s infrastructure teams, who have to maintain multiple implementations at once.\nLearn how Meta approaches the rollout of a new framework and more!\nDownload or listen to the podcast episode below:\n\nSpotify\nApple Podcasts\nPocket Casts\nOvercast\nThe Meta Tech Podcast is a podcast, brought to you by Meta, where we highlight the work Meta’s engineers are doing at every level – from low-level frameworks to end-user features.\nSend us feedback on Instagram, Threads, or X.\nAnd if you’re interested in learning more about career opportunities at Meta visit the Meta Careers page.\nThe post Bringing Jetpack Compose to Instagram for Android appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>Introducing a new Android UI framework like Jetpack Compose into an existing app is more complicated than importing some AARS and coding away. What if your app has specific performance goals to meet? What about existing design components, integrations with navigation, and logging frameworks? On this episode of the Meta Tech Podcast Pascal Hartig is [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/01/24/android/bringing-jetpack-compose-to-instagram-for-android/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/01/24/android/bringing-jetpack-compose-to-instagram-for-android/\">Bringing Jetpack Compose to Instagram for Android</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "Introducing a new Android UI framework like Jetpack Compose into an existing app is more complicated than importing some AARS and coding away. What if your app has specific performance goals to meet? What about existing design components, integrations with navigation, and logging frameworks? On this episode of the Meta Tech Podcast Pascal Hartig is [...]\nRead More...\nThe post Bringing Jetpack Compose to Instagram for Android appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22155",
        "categories": [
          "Android",
          "Culture",
          "DevInfra",
          "Instagram",
          "Meta Tech Podcast"
        ],
        "isoDate": "2025-01-24T17:30:53.000Z"
      },
      {
        "creator": "",
        "title": "How Meta discovers data flows via lineage at scale",
        "link": "https://engineering.fb.com/2025/01/22/security/how-meta-discovers-data-flows-via-lineage-at-scale/",
        "pubDate": "Thu, 23 Jan 2025 05:00:45 +0000",
        "content:encodedSnippet": "Data lineage is an instrumental part of Meta’s Privacy Aware Infrastructure (PAI) initiative, a suite of technologies that efficiently protect user privacy. It is a critical and powerful tool for scalable discovery of relevant data and data flows, which supports privacy controls across Meta’s systems. This allows us to verify that our users’ everyday interactions are protected across our family of apps, such as their religious views in the Facebook Dating app, the example we’ll walk through in this post.\nIn order to build high-quality data lineage, we developed different techniques to collect data flow signals across different technology stacks: static code analysis for different languages, runtime instrumentation, and input and output data matching, etc. We then built an intuitive UX into our tooling that enables developers to effectively consume all of this lineage data in a systematic way, saving significant engineering time for building privacy controls. \nAs we expanded PAI across Meta, we gained valuable insights about the data lineage space. Our understanding of the privacy space evolved, revealing the need for early focus on data lineage, tooling, a cohesive ecosystem of libraries, and more. These initiatives have assisted in accelerating the development of data lineage and implementing purpose limitation controls more quickly and efficiently.\nAt Meta, we believe that privacy enables product innovation. This belief has led us to developing Privacy Aware Infrastructure (PAI), which offers efficient and reliable first-class privacy constructs embedded in Meta infrastructure to address different privacy requirements, such as purpose limitation, which restricts the purposes for which data can be processed and used. \nIn this blog, we will delve into an early stage in PAI implementation: data lineage. Data lineage refers to the process of tracing the journey of data as it moves through various systems, illustrating how data transitions from one data asset, such as a database table (the source asset), to another (the sink asset). We’ll also walk through how we track the lineage of users’ “religion” information in our Facebook Dating app.\nMillions of data assets are vital for supporting our product ecosystem, ensuring the functionality our users anticipate, maintaining high product quality, and safeguarding user safety and integrity. Data lineage enables us to efficiently navigate these assets and protect user data. It enhances the traceability of data flows within systems, ultimately empowering developers to swiftly implement privacy controls and create innovative products.\nNote that data lineage is dependent on having already completed important and complex preliminary steps to inventory, schematize, and annotate data assets into a unified asset catalog. This took Meta multiple years to complete across our millions of disparate data assets, and we’ll cover each of these more deeply in future blog posts:\nInventorying involves collecting various code and data assets (e.g., web endpoints, data tables, AI models) used across Meta.\nSchematization expresses data assets in structural detail (e.g., indicating that a data asset has a field called “religion”).\nAnnotation labels data to describe its content (e.g., specifying that the identity column contains religion data).\nUnderstanding data lineage at Meta\nTo establish robust privacy controls, an essential part of our PAI initiative is to understand how data flows across different systems. Data lineage is part of this discovery step in the PAI workflow, as shown in the following diagram:\n\nData lineage is a key precursor to implementing Policy Zones, our information flow control technology, because it answers the question, “Where does my data come from and where does it go?” – helping inform the right places to apply privacy controls. In conjunction with Policy Zones, data lineage provides the following key benefits to thousands of developers at Meta: \nScalable data flow discovery: Data lineage answers the question above by providing an end-to-end, scalable graph of relevant data flows. We can leverage the lineage graphs to visualize and explain the flow of relevant data from the point where it is collected to all the places where it is processed.\nEfficient rollout of privacy controls: By leveraging data lineage to track data flows, we can easily pinpoint the optimal integration points for privacy controls like Policy Zones within the codebase, streamlining the rollout process. Thus we have developed a powerful flow discovery tool as part of our PAI tool suite, Policy Zone Manager (PZM), based on data lineage. PZM enables developers to rapidly identify multiple downstream assets from a set of sources simultaneously, thereby accelerating the rollout process of privacy controls.\nContinuous compliance verification: Once the privacy requirement has been fully implemented, data lineage plays a vital role in monitoring and validating data flows continuously, in addition to the enforcement mechanisms such as Policy Zones.\nTraditionally, data lineage has been collected via code inspection using manually authored data flow diagrams and spreadsheets. However, this approach does not scale in large and dynamic environments, such as Meta, with billions of lines of continuously evolving code. To tackle this challenge, we’ve developed a robust and scalable lineage solution that uses static code analysis signals as well as runtime signals.\nWalkthrough: Implementing data lineage for religion data\nWe’ll share how we have automated lineage tracking to identify religion data flows through our core systems, eventually creating an end-to-end, precise view of downstream religion assets being protected, via the following two key stages:\nCollecting data flow signals: a process to capture data flow signals from many processing activities across different systems, not only for religion, but for all other types of data, to create an end-to-end lineage graph. \nIdentifying relevant data flows: a process to identify the specific subset of data flows (“subgraph”) within the lineage graph that pertains to religion. \nThese stages propagate through various systems including function-based systems that load, process, and propagate data through stacks of function calls in different programming languages (e.g., Hack, C++, Python, etc.) such as web systems and backend services, and batch-processing systems that process data rows in batch (mainly via SQL) such as data warehouse and AI systems. \nFor simplicity, we will demonstrate these for the web, the data warehouse, and AI, per the diagram below.\n\nCollecting data flow signals for the web system\nWhen setting up a profile on the Facebook Dating app, people can populate their religious views. This information is then utilized to identify relevant matches with other people who have specified matched values in their dating preferences. On Dating, religious views are subject to purpose limitation requirements, for example, they will not be used to personalize experiences on other Facebook Products. \n\nWe start with someone entering their religion information on their dating media profile using their mobile device, which is then transmitted to a web endpoint. The web endpoint subsequently logs the data into a logging table and stores it in a database, as depicted in the following code snippet:\n\nNow let’s see how we collect lineage signals. To do this, we need to employ both static and runtime analysis tools to effectively discover data flows, particularly focusing on where religion is logged and stored. By combining static and runtime analysis, we enhance our ability to accurately track and manage data flows.\nStatic analysis tools simulate code execution to map out data flows within our systems. They also emit quality signals to indicate the confidence of whether a data flow signal is a true positive. However, these tools are limited by their lack of access to runtime data, which can lead to false positives from unexecuted code.\nTo address this limitation, we utilize Privacy Probes, a key component of our PAI lineage technologies. Privacy Probes automate data flow discovery by collecting runtime signals. These signals are gathered in real time during the execution of requests, allowing us to trace the flow of data into loggers, databases, and other services. \nWe have instrumented Meta’s core data frameworks and libraries at both the data origin points (sources) and their eventual outputs (sinks), such as logging framework, which allows for comprehensive data flow tracking. This approach is exemplified in the following code snippet:\n\nDuring runtime execution, Privacy Probes does the following:\nCapturing payloads: It captures source and sink payloads in memory on a sampled basis, along with supplementary metadata such as event timestamps, asset identifiers, and stack traces as evidence for the data flow. \nComparing payloads: It then compares the source and sink payloads within a request to identify data matches, which helps in understanding how data flows through the system. \nCategorizing results: It categorizes results into two sets. The match-set includes pairs of source and sink assets where data matches exactly or one is contained by another, therefore providing high confidence evidence of data flow between the assets. The full-set includes all source and sink pairs within a request no matter whether the sink is tainted by the source. Full-set is a superset of match-set with some noise but still important to send to human reviewers since it may contain transformed data flows. \nThe above procedure is depicted in the diagram below:\n\nLet’s look at the following examples where various religions are received in an endpoint and various values (copied or transformed) being logged in three different loggers:\nInput Value (source)\nOutput Value (sink)\nData Operation\nMatch Result\nFlow Confidence\n\n\n“Atheist”\n“Atheist”\nData Copy\nEXACT_MATCH\nHIGH\n\n\n“Buddhist”\n{metadata: {religion: Buddhist}}\nSubstring\nCONTAINS\nHIGH\n\n\n{religions:\n[“Catholic”, “Christian”]}\n{count : 2}\nTransformed\nNO_MATCH\nLOW\n\n\n\n\n\nThese signals together are used to construct a lineage graph to understand the flow of data through our web system as shown in the following diagram:\n\nCollecting data flow signals for the data warehouse system\nWith the user’s religion logged in our web system, it can propagate to the data warehouse for offline processing. To gather data flow signals, we employ a combination of both runtime instrumentation and static code analysis in a different way from the web system. The involved SQL queries are logged for data processing activities by the Presto and Spark compute engines (among others). Static analysis is then performed for the logged SQL queries and job configs in order to extract data flow signals.\nLet’s examine a simple SQL query example that processes data for the data warehouse as the following:\n\nWe’ve developed a SQL analyzer to extract data flow signals between the input table, “safety_log_tbl” and the output table, “safety_training_tbl” as shown in the following diagram. In practice, we also collect more granular-level lineage such as at column-level (e.g., “user_id” -> “target_user_id”, “religion” -> “target_religion”).\nThere are instances where data is not fully processed by SQL queries, resulting in logs that contain data flow signals for either reads or writes, but not both. To ensure we have complete lineage data, we leverage contextual information (such as execution environments; job or trace IDs) collected at runtime to connect these reads and writes together. \nThe following diagram illustrates how the lineage graph has expanded:\n\nCollecting data flow signals for the AI system\nFor our AI systems, we collect lineage signals by tracking relationships between various assets, such as input datasets, features, models, workflows, and inferences. A common approach is to extract data flows from job configurations used for different AI activities such as model training.\n\nFor instance, in order to improve the relevance of dating matches, we use an AI model to recommend potential matches based on shared religious views from users. Let’s take a look at the following training config example for this model that uses religion data:\n\nBy parsing this config obtained from the model training service, we can track the data flow from the input dataset (with asset ID asset://hive.table/dating_training_tbl) and feature (with asset ID asset://ai.feature/DATING_USER_RELIGION_SCORE) to the model (with asset ID asset://ai.model/dating_ranking_model).\nOur AI systems are also instrumented so that asset relationships and data flow signals are captured at various points at runtime, including data-loading layers (e.g., DPP) and libraries (e.g., PyTorch), workflow engines (e.g., FBLearner Flow), training frameworks, inference systems (as backend services), etc. Lineage collection for backend services utilizes the approach for function-based systems described above. By matching the source and sink assets for different data flow signals, we are able to capture a holistic lineage graph at the desired granularities:\n\nIdentifying relevant data flows from a lineage graph\nNow that we have the lineage graph at our disposal, how can we effectively distill a subset of data flows pertinent to a specific privacy requirement for religion data? To address this question, we have developed an iterative analysis tool that enables developers to pinpoint precise data flows and systematically filter out irrelevant ones. The tool kicks off a repetitive discovery process aided by the lineage graph and privacy controls from Policy Zones, to narrow down the most relevant flows. This refined data allows developers to make a final determination about the flows they would like to use, producing an optimal path for traversing the lineage graph. The following are the major steps involved, captured holistically in the diagram, below:\nDiscover data flows: identify data flows from source assets and stop at downstream assets with low-confidence flows (yellow nodes). \nExclude and include candidates: Developers or automated heuristics exclude candidates (red nodes) that don’t have religion data or include remaining ones (green nodes). By excluding the red nodes early on, it helps to exclude all of their downstream in a cascaded manner, and thus saves developer efforts significantly. As an additional safeguard, developers also implement privacy controls via Policy Zones, so all relevant data flows can be captured.\nRepeat discovery cycle: use the green nodes as new sources and repeat the cycle until no more green nodes are confirmed. \n\nWith the collection and data flow identification steps complete, developers are able to successfully locate granular data flows that contain religion across Meta’s complex systems, allowing them to move forward in the PAI workflow to apply necessary privacy controls to safeguard the data. This once-intimidating task has been completed efficiently. \nOur data lineage technology has provided developers with an unprecedented ability to quickly understand and protect religion and similar sensitive data flows. It enables Meta to scalably and efficiently implement privacy controls via PAI to protect our users’ privacy and deliver products safely.\nLearnings and challenges\nAs we’ve worked to develop and implement lineage as a core PAI technology, we’ve gained valuable insights and overcome significant challenges, yielding some important lessons:\nFocus on lineage early and reap the rewards: As we developed privacy technologies like Policy Zones, it became clear that gaining a deep understanding of data flows across various systems is essential for scaling the implementation of privacy controls. By investing in lineage, we not only accelerated the adoption of Policy Zones but also uncovered new opportunities for applying the technology. Lineage can also be extended to other use cases such as security and integrity.\nBuild lineage consumption tools to gain engineering efficiency: We initially focused on building a lineage solution but didn’t give sufficient attention to consumption tools for developers. As a result, owners had to use raw lineage signals to discover relevant data flows, which was overwhelmingly complex. We addressed this issue by developing the iterative tooling to guide engineers in discovering relevant data flows, significantly reducing engineering efforts by orders of magnitude.\nIntegrate lineage with systems to scale the coverage: Collecting lineage from diverse Meta systems was a significant challenge. Initially, we tried to ask every system to collect lineage signals to ingest into the centralized lineage service, but the progress was slow. We overcame this by developing reliable, computationally efficient, and widely applicable PAI libraries with built-in lineage collection logic in various programming languages (Hack, C++, Python, etc.). This enabled much smoother integration with a broad range of Meta’s systems.\nMeasurement improves our outcomes: By incorporating the measurement of coverage, we’ve been able to evolve our data lineage so that we stay ahead of the ever-changing landscape of data and code at Meta. By enhancing our signals and adapting to new technologies, we can maintain a strong focus on privacy outcomes and drive ongoing improvements in lineage coverage across our tech stacks.\nThe future of data lineage\nData lineage is a vital component of Meta’s PAI initiative, providing a comprehensive view of how data flows across different systems. While we’ve made significant progress in establishing a strong foundation, our journey is ongoing. We’re committed to:\nExpanding coverage: continuously enhance the coverage of our data lineage capabilities to ensure a comprehensive understanding of data flows.\nImproving consumption experience: streamline the consumption experience to make it easier for developers and stakeholders to access and utilize data lineage information.\nExploring new frontiers: investigate new applications and use cases for data lineage, driving innovation and collaboration across the industry.\nBy advancing data lineage, we aim to foster a culture of privacy awareness and drive progress in the broader fields of study. Together, we can create a more transparent and accountable data ecosystem.\nAcknowledgements\nThe authors would like to acknowledge the contributions of many current and former Meta employees who have played a crucial role in developing data lineage technologies over the years. In particular, we would like to extend special thanks to (in alphabetical order) Amit Jain, Aygun Aydin, Ben Zhang, Brian Romanko, Brian Spanton, Daniel Ramagem, David Molnar, Dzmitry Charnahalau, Gayathri Aiyer, George Stasa, Guoqiang Jerry Chen, Graham Bleaney, Haiyang Han, Howard Cheng, Ian Carmichael, Ibrahim Mohamed, Jerry Pan, Jiang Wu, Jonathan Bergeron, Joanna Jiang, Jun Fang, Kiran Badam, Komal Mangtani, Kyle Huang, Maharshi Jha, Manuel Fahndrich, Marc Celani, Lei Zhang, Mark Vismonte, Perry Stoll, Pritesh Shah, Qi Zhou, Rajesh Nishtala, Rituraj Kirti, Seth Silverman, Shelton Jiang, Sushaant Mujoo, Vlad Fedorov, Yi Huang, Xinbo Gao, and Zhaohui Zhang. We would also like to express our gratitude to all reviewers of this post, including (in alphabetical order) Aleksandar Ilic, Avtar Brar, Benjamin Renard, Bogdan Shubravyi, Brianna O’Steen, Chris Wiltz, Daniel Chamberlain, Hannes Roth, Imogen Barnes, Jason Hendrickson, Koosh Orandi, Rituraj Kirti, and Xenia Habekoss. We would like to especially thank Jonathan Bergeron for overseeing the effort and providing all of the guidance and valuable feedback, Supriya Anand for leading the editorial effort to shape the blog content, and Katherine Bates for pulling all required support together to make this blog post happen.\nThe post How Meta discovers data flows via lineage at scale appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>Data lineage is an instrumental part of Meta’s Privacy Aware Infrastructure (PAI) initiative, a suite of technologies that efficiently protect user privacy. It is a critical and powerful tool for scalable discovery of relevant data and data flows, which supports privacy controls across Meta’s systems. This allows us to verify that our users’ everyday interactions [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/01/22/security/how-meta-discovers-data-flows-via-lineage-at-scale/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/01/22/security/how-meta-discovers-data-flows-via-lineage-at-scale/\">How Meta discovers data flows via lineage at scale</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "Data lineage is an instrumental part of Meta’s Privacy Aware Infrastructure (PAI) initiative, a suite of technologies that efficiently protect user privacy. It is a critical and powerful tool for scalable discovery of relevant data and data flows, which supports privacy controls across Meta’s systems. This allows us to verify that our users’ everyday interactions [...]\nRead More...\nThe post How Meta discovers data flows via lineage at scale appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22168",
        "categories": [
          "Security"
        ],
        "isoDate": "2025-01-23T05:00:45.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "eBay News Team",
        "title": "Announcing a New Collaboration Between eBay and OpenAI",
        "link": "https://innovation.ebayinc.com/tech/features/ebay-openai-operator-assistant/",
        "pubDate": "Thu, 23 Jan 2025 00:00:00 -0800",
        "dc:creator": "eBay News Team",
        "content": "<div style=\"margin-bottom: 10px;\"><img src=\"https://static.ebayinc.com/static/assets/Uploads/Blog/Posts/_resampled/FitWzIwMCwxMTNd/ebay-hq-inc-13.jpg?fs=be5a541c54d3a565\" width=\"200\" height=\"113\" alt=\"Announcing a New Collaboration Between eBay and OpenAI\" /></div><div>We're leveraging the latest advances in AI to redefine the future of ecommerce for enthusiasts.</div>",
        "contentSnippet": "We're leveraging the latest advances in AI to redefine the future of ecommerce for enthusiasts.",
        "guid": "https://innovation.ebayinc.com/tech/features/ebay-openai-operator-assistant/",
        "categories": [
          "article"
        ],
        "isoDate": "2025-01-23T08:00:00.000Z"
      }
    ]
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Netflix TechBlog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Anastasia Khramushina",
        "title": "JetBrains and LinkedIn Partner to Launch a Professional Certificate",
        "link": "https://blog.jetbrains.com/team/2025/01/29/jetbrains-and-linkedin-partner-to-launch-a-professional-certificate/",
        "pubDate": "Wed, 29 Jan 2025 17:48:51 +0000",
        "content:encodedSnippet": "JetBrains has partnered with LinkedIn to offer the Java Foundations Professional Certificate, exclusively available on LinkedIn Learning.\nWith over 1 billion members on the platform and 7 people hired every minute, LinkedIn provides unmatched access to professional growth opportunities. Together, with our expertise in software development and education, we’re combining the best of both worlds: expert-led credentials and career-oriented networking.\n\n\n\n    \nSTART LEARNING\n                                                    \nWhat’s a professional certificate?\nLinkedIn Learning offers professional certificates from industry leaders, including Microsoft, Atlassian, GitHub, Adobe, and now JetBrains. Professional certificates make it easy to complete courses, take assessments, and share your credentials without leaving LinkedIn – great for making your profile stand out to recruiters.\n\n\n\n\nWith over 20 years of expertise in software development and the trust of 11.4 million developers, we can ensure you’re learning from the best. The Java Foundations Professional Certificate enhances your LinkedIn profile, validates your Java skills, and gives you real-world experience. You’ll work in IntelliJ IDEA, the industry’s leading IDE for Java development, gaining practical knowledge essential for your career.\nWhy Java?\nWith 78% of Java developers choosing IntelliJ IDEA and over a million learners on JetBrains Academy, the Java Foundations Professional Certificate on LinkedIn Learning was a natural progression for us. But in a world buzzing with AI, why is learning Java still important?\nJava provides a strong foundation in programming concepts. Learning Java makes it easier to dive into specialized fields like AI later. Our Computer Science Learning Curve Survey 2024, conducted among more than 23,000 learners, shows that most of them begin their journey with foundational languages like Java.\nJava remains one of the most widely used programming languages. It powers industries from mobile development to large-scale enterprise solutions. Its demand continues to grow, offering stability and opportunities in your career path.\nWhat you’ll learn\nThe Java Foundations Professional Certificate consists of five courses that are designed to take you from zero experience to proficiency in Java. By the end of the series, you’ll have gained the skills required to apply for junior developer positions right on LinkedIn.\nSyntax and Structure\nStart your journey by learning how to install Java and IntelliJ IDEA and work with variables, data types, and key language components. You’ll also practice controlling program flow with conditional logic and loops, as well as using Java collections.\nObjects and APIs\nIn this course, you’ll go through the fundamentals of objects and APIs in Java. You’ll learn about inheritance, polymorphism, abstraction, interfaces, and data structures, in addition to getting tips on handling exceptions, resolving errors, and preventing memory leaks.\nObject-Oriented Programming (OOP)\nThis course covers the fundamentals of OOP in Java to help you write secure, scalable, and maintainable code. You’ll find out how object-oriented principles are built into the language with classes, instances, and constructors to represent real-world objects.\nData Structures\nData structures are crucial for nearly all applications. This course covers essential data structures and their uses, as well as considerations like speed and performance. You’ll learn about arrays, their benefits and drawbacks, and how to use them effectively. The course also delves into Java Collections, emphasizing the Collection interface, which underlies most Java data structures.\nJava Database Connectivity (JDBC) API\nDevelopers building mobile, web, or desktop apps often need to integrate relational databases. In this course, you’ll be introduced to the JDBC API and learn how to use it to manage data from databases like Postgres, Oracle, MySQL, and SQL Server in Java applications.\nWe can’t wait to see you getting started with the Java Foundations Professional Certificate and taking your first steps on the path to becoming a developer. Make sure you let us know how you get on, and don’t forget to share your certificate and tag us on LinkedIn!\nThe JetBrains team",
        "dc:creator": "Anastasia Khramushina",
        "content": "JetBrains has partnered with LinkedIn to offer the Java Foundations Professional Certificate, exclusively available on LinkedIn Learning. With over 1 billion members on the platform and 7 people hired every minute, LinkedIn provides unmatched access to professional growth opportunities. Together, with our expertise in software development and education, we’re combining the best of both worlds: [&#8230;]",
        "contentSnippet": "JetBrains has partnered with LinkedIn to offer the Java Foundations Professional Certificate, exclusively available on LinkedIn Learning. With over 1 billion members on the platform and 7 people hired every minute, LinkedIn provides unmatched access to professional growth opportunities. Together, with our expertise in software development and education, we’re combining the best of both worlds: […]",
        "guid": "https://blog.jetbrains.com/?post_type=team&p=541151",
        "categories": [
          "java",
          "learning-courses",
          "news",
          "partners",
          "certificate",
          "linkedin"
        ],
        "isoDate": "2025-01-29T17:48:51.000Z"
      },
      {
        "creator": "Julia Shashkova",
        "title": "9 Tips for Productive Java Development With Databases in IntelliJ IDEA",
        "link": "https://blog.jetbrains.com/idea/2025/01/tips-for-productive-java-development-with-databases-in-intellij-idea/",
        "pubDate": "Wed, 29 Jan 2025 15:41:10 +0000",
        "content:encodedSnippet": "In this article, we’ll share nine time-saving ways IntelliJ IDEA can boost your productivity when developing Java applications with databases – whether you’re starting a new project or diving into an ongoing one.\nGet IntelliJ IDEA Ultimate\nCreate data sources automatically from properties\nIntelliJ IDEA makes it easy to create a data source for your Spring project right from the application.properties file – simply open it and click on a gutter icon next to the properties. \n\n\n\n\nIn the opened Data Sources and Drivers dialog, you’ll see a data source already assigned and the database-related fields prefilled – all you need to do is to test connectivity (just in case) and click OK. The data source will be created for you.\nTest Spring Data JPA query methods without running the application\nIntelliJ IDEA simplifies Spring Data JPA method query verification! It provides autocompletion for names and the ability to check generated queries without running the application. Just click the dedicated gutter icon to execute repository methods directly in the JPQL console.\n\n\n\n\nReview database schemas as diagrams\nDatabase diagrams are great for quickly grasping the structure of databases and understanding the relationships between their various objects. IntelliJ IDEA can create detailed diagrams for data sources, schemas, or tables to help you analyze the data structure more effectively. To generate a diagram, right-click a database object in the Database tool window and select Diagrams | Show Diagram.\n\n\n\n\nYou can also assign colors to diagram objects to further enhance the way you interact with and comprehend your database structure.\n\n\n\n\nReview query results right in the editor\nIntelliJ IDEA provides a compact way to review query results right in the editor. To enable it, click the In-Editor Results button in the query console before running your query. ​​This is especially useful for working with smaller datasets or data samples.\n\n\n\n\nModify query data in the results set view\nWhen you need to make changes to cell values in IntelliJ IDEA, you don’t have to write and re-run queries! Simply click on a cell value that you want to edit, enter the new value, then click the Submit button (⬆) or ⌘↩/Ctrl+Enter to push changes to the database.\n\n\n\n\nView query results as charts\nCharts provide a powerful and user-friendly way to quickly gain actionable insights from your query results. This feature is particularly useful when analyzing large datasets, looking for patterns, or presenting trends in an easily comprehensible format.\nTo open chart settings, click the Switch to Chart icon on the data editor toolbar. You can choose from a wide range of chart types, including bar charts, pie charts, area charts, line charts, and more, depending on what best suits your needs.\n\n\n\n\nWhen you need to present your findings or keep snapshots of data dynamics, you can export charts in .png format. To save a chart snapshot, simply click the Export to PNG button in Series Settings.\n\n\n\n\nProfile your query with an execution plan\nYou can also visualize execution plans for queries, illustrating the set of steps that were used to access data in a database and the cost of each step – in other words, how long it takes to run the statement. \nTo open the execution plan, right-click an SQL statement, select Explain Plan | Explain Plan, and then click on the Show Diagram icon.\n\n\n\n\nUse DB migration libraries to update application databases\nDatabase schemas evolve over time as business requirements change, and database schema updates and migration can be tricky and error-prone when done manually. Instead, take advantage of IntelliJ IDEA’s built-in support for automatically generating migration scripts based on existing JPA entities. For more information, refer to this article.\n\n\n\n\nLeverage AI Assistant\nAI Assistant makes data query and managing data faster and more efficient. It helps speed up SQL query generation, provides explanations, suggests fixes, and can even generate test data tables!\n\n\n\n\n\n\n\n\nBy following these tips, you can optimize your workflow, save time, and make working with databases more productive and enjoyable. Check out this page to learn more about the database tools in IntelliJ IDEA.\nHappy developing!",
        "dc:creator": "Julia Shashkova",
        "content": "In this article, we’ll share nine time-saving ways IntelliJ IDEA can boost your productivity when developing Java applications with databases – whether you&#8217;re starting a new project or diving into an ongoing one. Get IntelliJ IDEA Ultimate Create data sources automatically from properties IntelliJ IDEA makes it easy to create a data source for your [&#8230;]",
        "contentSnippet": "In this article, we’ll share nine time-saving ways IntelliJ IDEA can boost your productivity when developing Java applications with databases – whether you’re starting a new project or diving into an ongoing one. Get IntelliJ IDEA Ultimate Create data sources automatically from properties IntelliJ IDEA makes it easy to create a data source for your […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=541248",
        "categories": [
          "tips-tricks",
          "database-tools",
          "productivity"
        ],
        "isoDate": "2025-01-29T15:41:10.000Z"
      },
      {
        "creator": "Elena Pishkova",
        "title": "YouTrack 2025 Roadmap",
        "link": "https://blog.jetbrains.com/youtrack/2025/01/youtrack-2025-roadmap/",
        "pubDate": "Wed, 29 Jan 2025 13:01:08 +0000",
        "content:encodedSnippet": "Our commitment to you\nWe remain fully committed, as we have been all these years, to developing YouTrack as a platform that evolves with your needs. Our promise to you is to ensure that YouTrack continues to be available in both Server and Cloud versions, giving you the freedom to choose the hosting option that best fits your organization and data governance policies.\nLearning from experience as teams choose YouTrack\nYouTrack is growing faster than ever, with a double-digit percentage increase in the customer base over the last year. We see adoption increasing in various team functions across small and medium enterprises. Together with our consulting partners, we work closely to help the largest enterprises with thousands of employees migrate their processes to YouTrack.\nWe know how tough it is to find the right project management tools – so many are out there! Teams often spend months exploring solutions to find the one that fits their needs.\nMany teams switch to YouTrack to save costs without losing functionality or to find a server solution suitable for teams of a few to several hundred employees. Others transition from lightweight tools or development-specific issue-tracking platforms to gain more flexibility for growing teams and to bring various departments to work together. Some are just beginning their journey, moving from email or chat-based coordination to smart solutions like YouTrack that can support the existing business flows.\nAfter adopting YouTrack, many teams have shared invaluable feedback, shaping our immediate priorities for 2025 and our roadmap for the future. Still, we remain flexible with our planning, leaving room to respond to your needs while staying true to our long-term vision and commitment to YouTrack as a flexible and powerful solution.\nA bold new design for YouTrack\nThe big step in 2025\nWe’ll start 2025 with a bold new look and feel for YouTrack, introducing changes that reflect years of learning and exploration into how teams work on projects.\nNew navigation panel\nThe main menu will move from the top to the left side of the screen, accommodating the growing number of features and pages in YouTrack. We aim to make all the YouTrack key sections more accessible, reducing clicks and making navigation faster for all users. Starting in early 2025, the new navigation panel will be enabled by default for all users. While you will temporarily have the option to switch back to the old one in version 2025.1, we recommend embracing the new interface as we hope it will become the standard by midyear.\n\n\n\n\nProject hierarchy path for tasks, tickets, and articles\nThis project-centric hierarchy will provide clickable breadcrumb paths for tasks, tickets, and articles, allowing you to navigate through project-related information effortlessly. For example, if you’re part of a design team contributing to a specific project, you will only ever be a couple of clicks away from any of the tasks and articles related to your design project.\n\n\n\n\nRedesigned Issues page\nOne of the main differences between YouTrack Lite and Classic has been the layout of the Issues page. This meant that if you had a layout preference, your choice between YouTrack Lite and Classic was restricted. You don’t need to worry about that anymore! The unified Issues page will eliminate the need to choose between Classic and Lite, combining their capabilities into a unified experience. It will include customizable settings, allowing you to tailor your task list to a table or list view with as much or as little detail as you need. We’re also working to improve the way you can search and filter tasks. Once implemented, this redesign will be the default, and there will not be an option to revert it.\n\n\n\n\nFurther UX improvements for everyone\nLater in 2025 and beyond, we will focus on expanding and enriching the new design with:\nRevamped project pages for teams to stay connected to their work context.\nAdvanced project-centric navigation to keep you in your project’s context when needed.\nA My Work page with a personalized view designed to help you focus on your tasks and priorities.\nOnboarding for new users to guide them more easily through YouTrack’s features and help them be productive from day one.\nAI assistance for team members and managers\nWe’re dedicating resources to delivering AI automation features for team members and their project managers. The free AI assistance that comes out of the box in YouTrack will be enhanced with options that are useful in daily work.\nLet AI complete content for you. We are improving AI’s ability to suggest text completions, making drafting tasks or updates faster and more intuitive.\nTask field suggestions from AI. Intelligent suggestions for completing fields in your tasks can streamline work and help you provide critical details effortlessly in no time.\nFuture AI capabilities. Looking ahead, we are working hard to implement the AI-based automation of your routine at a new level. We want to make it possible for you to start your day by reviewing the jobs done for you by AI agents and approving suggestions for moving forward with your projects, either in YouTrack or in the other connected systems.\nExpanding Helpdesk for internal and B2B support teams\nWhile our Helpdesk solution currently allows standard users to be contributors when they are involved in helping your support teams with customer tickets, our customer feedback has highlighted another important scenario – internal helpdesk projects. In these cases, standard users also need to be able to act as reporters in internal helpdesk or service desk setups. To address this, we will also focus on improving the user interface for tickets submitted by internal reporters, improving email notifications for internal reporters, ensuring proper visibility and comment settings for users, and resolving other issues related to ticket visibility and comments for such a scenario.\nOur long-term goal with the Helpdesk solution is to introduce advanced capabilities for separating and managing client organizations within it. This will enable B2B support teams to provide tailored experiences for different clients.\nMore flexibility for project managers\nPlanning canvas\nWe’re working on introducing a planning canvas to make project planning more visual and collaborative. This feature will allow teams to start working using a whiteboard-style interface where ideas can be drafted and transformed into actionable tasks with just a few clicks. Teams will also be able to move existing tasks to the canvas for better visualization and interactive adjustments.\nCustomized naming for tasks\nWould you like to call your tasks something other than “issues”? You may want to call them “documents” for legal projects, “purchase orders” for finance ones, or “jobs” or “employees” for HR and recruitment workflows. We’re continuing to work on a feature that will give you the flexibility to tailor the naming and structure of your entries when starting a specific project.\nMore apps for your teams\nYouTrack apps already allow you to add significant functionality, including entire new pages. For example, the Diagram Editor app lets teams create and manage visual diagrams directly within YouTrack.\nWe are committed to further supporting our partners and customers in building apps. If you have an idea for a new app or feature, feel free to contact us – we’d love to collaborate and discuss how we can help.\n\n\n\n\nExtended enterprise features\nIn relation to YouTrack Server, for our large enterprise customers, we plan to introduce more tools to help you monitor database performance and manage workloads effectively. These updates will help teams ensure stability and optimize resource usage as they scale.\nWe’ll prioritize Docker images as the primary method for installing and upgrading server instances, with .zip distribution support ending in early 2025. As containerized deployments offering secure and isolated environments become the IT standard, we aim to align with industry best practices by focusing exclusively on containerized solutions. \nFor YouTrack Cloud, we’re committed to providing a guaranteed cloud service uptime of 99.99% and confirming this in our terms of service.\nWe’re also expanding single sign-on (SSO) support to include automated user provisioning and deprovisioning. Okta and Entra ID integration improvements are coming in early in 2025, with additional updates to follow. To further enhance user management for enterprise teams, we’re introducing:\nSCIM 2.0 protocol support to further enhance user management capabilities.\nOIDC protocol support to make it possible to sign-in with even more identity providers.\nLet’s shape the future of YouTrack together\nWe’d love to hear from you! Your feedback shapes YouTrack’s future, and we’re always open to ideas, suggestions, and insights. Whether you want to share a feature request, an improvement suggestion, or just your thoughts, get in touch with us by commenting on this blog or using our public project tracker. \nThank you for being a part of the YouTrack community. Together, we’re building a more powerful YouTrack for 2025 and beyond.\nYour YouTrack team,\nCelebrating 15 years with you!",
        "dc:creator": "Elena Pishkova",
        "content": "Our commitment to you We remain fully committed, as we have been all these years, to developing YouTrack as a platform that evolves with your needs. Our promise to you is to ensure that YouTrack continues to be available in both Server and Cloud versions, giving you the freedom to choose the hosting option that [&#8230;]",
        "contentSnippet": "Our commitment to you We remain fully committed, as we have been all these years, to developing YouTrack as a platform that evolves with your needs. Our promise to you is to ensure that YouTrack continues to be available in both Server and Cloud versions, giving you the freedom to choose the hosting option that […]",
        "guid": "https://blog.jetbrains.com/?post_type=youtrack&p=538837",
        "categories": [
          "features",
          "news",
          "roadmap",
          "ai-assistance",
          "apps",
          "helpdesk",
          "youtrack-cloud",
          "youtrack-server"
        ],
        "isoDate": "2025-01-29T13:01:08.000Z"
      },
      {
        "creator": "Vladimir Dvorak",
        "title": "JITWatch4i: Analyzing IntelliJ IDEA’s Startup",
        "link": "https://blog.jetbrains.com/platform/2025/01/jitwatch4i-analyzing-intellij-idea-s-startup/",
        "pubDate": "Wed, 29 Jan 2025 11:40:05 +0000",
        "content:encodedSnippet": "Introduction\nA typical Java or Kotlin programmer spends most of their productive time either creating application code in an editor or searching for bugs in a debugger. Occasionally, they might dive into a profiler when looking for places where the application spends too much time. However, they almost never venture into the Java C1 or C2 compilers and their resulting products – low-level assembly code. For the most part, the Java compilers are black boxes that typically remain closed under normal circumstances.\nSome time ago, I tried to analyze the startup of larger projects, such as IntelliJ IDEA. When analyzing program startup in a JIT-based virtual machine, it’s essential to realize that standard profiling tools don’t provide an accurate picture of CPU load or the performance of individual methods. The final times are distorted because some code runs in a non-optimized form and some CPU capacity is used for compiling methods. This led me to search for a tool that could display compilation processes, and that’s how I found JITWatch.\nThis article introduces JITWatch4i, an IntelliJ IDEA plugin based on JITWatch, designed for analyzing and visualizing compilation processes directly within IntelliJ IDEA. After laying a theoretical foundation with a general overview of Java’s tiered compilation process, we’ll demonstrate the plugin in action, comparing IntelliJ IDEA’s startup speed under different values of the -XX:TieredOldPercentage parameter.\nJITWatch\nDeveloped by Chris Newland, JITWatch is a Java program that analyzes JVM (HotSpot) compilation logs and provides a detailed analysis of the behavior of both compilers in the Java Virtual Machine.\nWhy JITWatch4i?\nFrom my point of view, the original JITWatch is undoubtedly a useful tool for analyzing JIT processes in the JVM. However, while using it, I encountered several issues that made my work more difficult:\nConfiguration requires you to set paths to source files, that is, to all modules containing code for the analyzed project. For large applications like IntelliJ IDEA, whose complete structure you may not even know, this is quite time-consuming.\nConfiguration requires you to set class locations, essentially duplicating the classpath of the analyzed program.\nJITWatch uses JavaFX for its UI. It takes a long time to visualize a project with tens of thousands of compilations in JavaFX, and some charts are practically unusable.\nInstalling and running JITWatch isn’t complicated, but it also isn’t a one-click process.\nWhen I used JITWatch, I particularly struggled with its lack of direct integration into a modern development environment – specifically the environment of the project I was working on. Eventually, I concluded that such an integration could bring new life to this great project, which led me to create JITWatch4i.\nJITWatch4i is a plugin for IntelliJ IDEA that integrates the JIT analysis visualization features of the original JITWatch directly into the IDE. Integration with IntelliJ IDEA removes the need to manually configure paths to source code or compiled classes, as the IDE already has information about the structure of the currently open project and its dependencies, which the plugin can directly use.\nFurthermore, the original JavaFX framework was replaced with the older but simpler Swing library, which is significantly optimized in the JetBrains Runtime. As a result, visualizing large projects is still reasonably fast, even when dealing with a large number of compilations.\nTypical JITWatch use cases\nAccording to the documentation of the original JITWatch project, this tool is useful in several key areas. It allows you to:\nVerify whether methods you consider performance-critical were JIT-compiled during program execution.\nFind out exactly when certain methods were compiled and better understand the impact of JVM compilation threshold settings.\nLearn how long the compilation of individual methods took, which ones took the compiler the longest, or which generated the most native code.\nBetter understand how Java compilers work.\nTrack how your source code is translated into bytecode and ultimately into machine code.\nIntroduction to Java compilation\nTo delve further into this topic, it’s helpful to have a basic understanding of Java compilers.\nFundamentally, the JVM contains an interpreter, which is used for a limited number of initial method calls, and two main compilers:\nC1, which is capable of quickly generating less-optimized native code. By default, C1 generates code that also collects profiling statistics later used by C2. This mode is called tiered compilation.\nC2, although slower than C1, creates code that is significantly faster. C2 leverages statistics collected by the code compiled with C1 to decide how to optimize the code. Statistics for a given method are gathered while it is running in an interpreter or in code compiled with additional profile-gathering code.\nCompilation levels\nIn this context, you’ll often hear about five compilation levels labeled L0–L4:\nL0 – A term indicating that a method is executed in the interpreter, during which basic statistics, such as the number of calls and backward jumps, are collected.\nL1 – C1 compilation that does not include profiling for C2. It provides the fastest possible output from C1 and is mainly used for trivial methods where deep optimization in C2 wouldn’t provide a significant benefit.\nL2 – C1 compilation with limited profiling, with statistics collected on the number of method calls and backward jumps. This allows us to determine which methods are actively used so that their subsequent compilations can be planned. L2-compiled code is on average about 30% faster than L3-compiled code. At application startup, when the C2 compiler is overloaded, it’s more time-efficient to compile code using L2. If the method remains active, the scheduler’s decision mechanism will later choose to compile it at L4.\nL3 – C1 compilation with full profiling. Unlike L2, this level also gathers statistics on conditional branches and information about which classes are used in the method. L3 code is the slowest compiled code produced by the C1 compiler. The compiler scheduler aims to minimize the time a method spends running in L3 code.\nL4 – Compilation with C2, which leverages the statistics collected previously. This makes it possible to generate faster, more efficient native code.\nCompilation queue\nThe JVM uses a compilation queue to manage and prioritize tasks across compiler threads. Methods are queued based on a compilation policy that prioritizes those likely to benefit most from optimization, ensuring the efficient use of resources and delivering performance gains.\nCompilation parameters\nDuring its lifetime, a single method can run under 5 different compilation levels (L0–L4). Transitions between the per-method compilation levels (L1–L4) in the JVM are controlled by a set of key parameters. These parameters dictate when a particular method is promoted to a higher level of optimization, which in turn influences both startup speed and long-term performance. Below are the most important ones:\n-XX:Tier3InvocationThreshold – The number of calls required to transition to L3. Default value: 2,000.\n-XX:Tier4InvocationThreshold – The number of calls required to transition to L4 (C2). Default value: 15,000.\n-XX:TieredOldPercentage – A somewhat mysterious parameter that significantly impacts startup speed. It specifies the percentage threshold after which a method is considered old and ceases to be prioritized, based on the length of the compilation queue. Default value: 1000.\nThese parameters influence how quickly methods transition between compilation levels. Compilation levels are normally upgraded, with the exceptions being cases of deoptimization or when the C2 compiler is overloaded. Lowering these parameters accelerates the progression of code through its compilation levels, effectively speeding up its “maturity.” However, this comes at the cost of increased overhead during application startup, as methods are compiled more frequently and at earlier stages.\nAnalyzing the startup of IntelliJ IDEA\nOne use case for the JITWatch4i plugin is analyzing an application’s startup. Let’s demonstrate this with an example of IntelliJ IDEA’s startup under different values of the -XX:TieredOldPercentage parameter. For simplicity, we’ll compare two tests: one with -XX:TieredOldPercentage=100000, which is the default value in IntelliJ IDEA, and another with -XX:TieredOldPercentage=1000, which is the default value in the JVM.\nTo analyze the startup, we need to run IntelliJ IDEA with parameters that generate compilation logs, which we will then load into JITWatch4.\nFor the first test, we set the following in idea64.vmoptions (the configuration of TieredOldPercentage is already in use):\n-XX:TieredOldPercentage=100000\n-XX:+UnlockDiagnosticVMOptions\n-XX:+LogCompilation\n-XX:LogFile=compilation_100k.log\nFor the second test, we set this in idea64.vmoptions:\n-XX:TieredOldPercentage=1000\n-XX:+UnlockDiagnosticVMOptions\n-XX:+LogCompilation\n-XX:LogFile=compilation_1k.log\nFor easier comparison, we use the following command to make IntelliJ IDEA run for the same amount of time in both cases:\ntimeout --kill-after=5 20 ./idea.sh\nWe load the compilation logs into JITWatch4i and compare them using the Timeline and Comp. Activity tabs.\nTimeline\nThe graph on the Timeline tab illustrates the L1–L4 compilations over time, with each line color representing a specific compilation level:\nBlack – Total compilations\nBlue – L1\nRed – L2\nMagenta – L3\nGreen – L4\n-XX:TieredOldPercentage=100000\n\n\n\n-XX:TieredOldPercentage=1000\n\n\n\nWhen comparing the charts, it’s clear that:\nWith -XX:TieredOldPercentage=100000, there are far more L2 (red line) compilations than with -XX:TieredOldPercentage=1000. Typically, a method follows the path L0 → L3 → L4 unless the C2 compiler is overloaded. When C2 is overloaded, a method may be compiled from L0 to L2 instead of to L3. Whether a method takes the L2 path or skips straight to L3 or L4 depends on how busy the C2 compiler is and whether the method is considered “old”.\nIf the compiler is overloaded, the method may go to L2.\nIf the method is old, L2 is skipped entirely and the method goes from L0 to L3 or L3 to L4.\nThe TieredOldPercentage parameter determines when a method is considered old by adjusting the JVM *Threshold parameters at which a method changes levels. Once a method is classified as old, the JVM stops routing it through L2. An issue arises, however, when the C2 compiler is overloaded and unable to accept new tasks, which means methods cannot graduate from L3 to L4, leaving them stuck at L3 for an extended period. This slows performance because L3 compilation involves collecting extensive statistics.\nThe charts show that for -XX:TieredOldPercentage=100000, the numbers of L3 and L4 compilations are almost the same. In this case, methods that do not progress to L4 remain in L2 instead of being promoted to or staying in the slower L3 code. L2 code is approximately 30% faster than L3 code, so this configuration avoids generating an excess of slower L3 methods. As a result, IntelliJ IDEA starts faster with this parameter.\nCompilation queue\n-XX:TieredOldPercentage=100000\n\n\n\n-XX:TieredOldPercentage=1000\n\n\n\nIn the Compiler Queues chart on the Comp.Activity tab, you can see the length of the compiler queue over time. Comparing them reveals that the -XX:TieredOldPercentage=1000 queue is initially more overloaded than the -XX:TieredOldPercentage=100000 queue.\nCompilation activity\n-XX:TieredOldPercentage=100000\n\n\n\n-XX:TieredOldPercentage=1000\n\n\n\nLet’s compare the lengths of individual method compilations in the Native Size chart on the Comp.Activity tab. The X-axis represents time, and the rectangles correspond to the compilation of individual methods. The height of a rectangle is proportional to the length of the resulting native method. It is apparent that the compilation of some methods in C2 is truly long. \nFurther gains may be achievable by postponing the compilation of methods in C2 that take a long time. Initial experiments suggest this does yield results. Though the improvements have only been marginal so far, further tweaking the set of postponed methods could boost them.\nConclusion\nJITWatch4i expands the capabilities of the original JITWatch through a plugin-based integration with IntelliJ IDEA, eliminating source-path setups and speeding up visualization for large projects. The example of IntelliJ IDEA’s startup under different -XX:TieredOldPercentage values shows how the JVM balances quick-to-compile L2 code versus slower but highly optimized L4 code. Using the analysis in JITWatch4i, these optimization steps become transparent, allowing you to understand the impact of your settings and ultimately leading to more informed performance tuning and faster startup times.\nReferences:\nJITWatch4i\nJITWatch",
        "dc:creator": "Vladimir Dvorak",
        "content": "Introduction A typical Java or Kotlin programmer spends most of their productive time either creating application code in an editor or searching for bugs in a debugger. Occasionally, they might dive into a profiler when looking for places where the application spends too much time. However, they almost never venture into the Java C1 or [&#8230;]",
        "contentSnippet": "Introduction A typical Java or Kotlin programmer spends most of their productive time either creating application code in an editor or searching for bugs in a debugger. Occasionally, they might dive into a profiler when looking for places where the application spends too much time. However, they almost never venture into the Java C1 or […]",
        "guid": "https://blog.jetbrains.com/?post_type=platform&p=541247",
        "categories": [
          "idea",
          "jetbrains-runtime",
          "intellij-idea",
          "intellij-platform",
          "performance-profiling"
        ],
        "isoDate": "2025-01-29T11:40:05.000Z"
      },
      {
        "creator": "Roman Pronskiy",
        "title": "PHP Annotated – January 2025",
        "link": "https://blog.jetbrains.com/phpstorm/2025/01/php-annotated-january-2025/",
        "pubDate": "Wed, 29 Jan 2025 11:26:50 +0000",
        "content:encodedSnippet": "@media (min-width: 769px) { main .article-section .content ul:not([class]):not([id]) li ul:not([class]):not([id]) { margin-top: 0; margin-bottom: 24px; } } main .article-section .content ul:not([class]):not([id]) li, main .article-section .content ul:not([class]):not([id]) > li {padding-bottom: 18px;}  main .article-section .content ul:not([class]):not([id]) li ul:not([class]):not([id]) li {padding-bottom: 0;} img.alignico {margin-right: 10px;margin-top: 5px;float: left;}  summary {display: list-item;cursor: pointer;font-style: italic; } section.article-section a {color: #7755f3} code {color: red;} #roman-pronskiy,.copy-heading:has(#roman-pronskiy){margin-top: 0;} main li a[href^=\"https://github.com\"]:before {background: no-repeat 2px center url(data:image/svg+xml;utf8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxNCIgaGVpZ2h0PSIxNCIgZmlsbD0ibm9uZSIgdmlld0JveD0iMCAwIDMyIDMyIj48cGF0aCBmaWxsPSIjMjQyOTJFIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiIGQ9Ik0xNiAwYTE2IDE2IDAgMCAwLTUgMzEuMmMuNy4xIDEtLjQgMS0uOHYtM2MtNCAuOC01LTEtNS40LTEuOC0uMS0uNS0xLTItMS42LTIuMy0uNi0uMy0xLjQtMSAwLTEgMS4yIDAgMi4xIDEuMSAyLjQgMS42IDEuNSAyLjQgMy44IDEuNyA0LjcgMS4zLjEtMSAuNi0xLjcgMS0yLjEtMy41LS40LTcuMy0xLjgtNy4zLTggMC0xLjcuNy0zLjEgMS43LTQuMi0uMi0uNC0uNy0yIC4xLTQuMyAwIDAgMS40LS40IDQuNCAxLjdhMTQuOCAxNC44IDAgMCAxIDggMGMzLjEtMi4xIDQuNC0xLjcgNC40LTEuNyAxIDIuMi40IDMuOS4yIDQuM2E2IDYgMCAwIDEgMS42IDQuM2MwIDYuMS0zLjcgNy41LTcuMyA3LjkuNi41IDEuMSAxLjQgMS4xIDN2NC4zYzAgLjQuMyAxIDEuMS44QTE2IDE2IDAgMCAwIDE2IDBaIiBjbGlwLXJ1bGU9ImV2ZW5vZGQiLz48L3N2Zz4=);content: \"\";padding-left: 20px;} main li a[href^=\"https://www.youtube.com\"]:before {background: no-repeat 0px center url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='100%25' version='1.1' viewBox='0 0 68 48' width='100%25'%3E%3Cpath class='ytp-large-play-button-bg' d='m .66,37.62 c 0,0 .66,4.70 2.70,6.77 2.58,2.71 5.98,2.63 7.49,2.91 5.43,.52 23.10,.68 23.12,.68 .00,-1.3e-5 14.29,-0.02 23.81,-0.71 1.32,-0.15 4.22,-0.17 6.81,-2.89 2.03,-2.07 2.70,-6.77 2.70,-6.77 0,0 .67,-5.52 .67,-11.04 l 0,-5.17 c 0,-5.52 -0.67,-11.04 -0.67,-11.04 0,0 -0.66,-4.70 -2.70,-6.77 C 62.03,.86 59.13,.84 57.80,.69 48.28,0 34.00,0 34.00,0 33.97,0 19.69,0 10.18,.69 8.85,.84 5.95,.86 3.36,3.58 1.32,5.65 .66,10.35 .66,10.35 c 0,0 -0.55,4.50 -0.66,9.45 l 0,8.36 c .10,4.94 .66,9.45 .66,9.45 z' fill='%23FF0000' fill-opacity='0.81'%3E%3C/path%3E%3Cpath d='m 26.96,13.67 18.37,9.62 -18.37,9.55 -0.00,-19.17 z' fill='%23fff'%3E%3C/path%3E%3Cpath d='M 45.02,23.46 45.32,23.28 26.96,13.67 43.32,24.34 45.02,23.46 z' fill='%23ccc'%3E%3C/path%3E%3C/svg%3E\"); content: \"\";padding-left: 18px;background-size: 16px;}\nWelcome to the January edition of PHP Annotated! This recap is carefully handcrafted and brings you the most interesting developments in the PHP community over the past couple of months, so you don’t have to sift through the noise, we’ve done it for you.\nHighlights\nPHP 8.4\n        PHP 8.4 was officially released on November 21, 2024, and by now, version 8.4.3 is already available.\n        This major language update brings many new features, such as property hooks, asymmetric visibility, an updated DOM API, performance improvements, bug fixes, and general code cleanup.\n        If you want to learn more about all the goodies in the release, visit php.watch and stitcher.io.\n        There are also some lesser known improvements that you can learn more about from the Tideways blog:\nPHP 8.4 improves Closure Naming for simplified debugging.\nWhat’s new in PHP 8.4 in terms of performance, debugging, and operations.\n        Install or upgrade to PHP 8.4\nWindows: Compiled binaries available at windows.php.net.\nFedora/RHEL/CentOS: Available as a software collection (php84) from the Remi repo.\nmacOS: PHP 8.4 can be installed via Homebrew using the shivammathur/homebrew-php tap.\nDocker: PHP 8.4 images are now available on Docker Hub with 8.4 tags.\nHerd also comes with PHP 8.4 supported.\n        Watch a 📺 Celebrating PHP 8.4 stream with Nicolas, Brent, and Roman:\n\n    \nPHP 8.2 goes in security-fixes-only phase\n        Starting this year, PHP versions now follow a four-year support timeline: two years of active support followed by two years of security fixes.\n        For PHP 8.1 security patches will be provided until December 31, 2025, while PHP 8.2 will be maintained until December 31, 2026. The recent PHP 8.2.27 release marked the end of its active support phase.\n    \nPHPStan 2.0 has been released\n        This update introduces Level 10 code analysis with stricter handling of mixed types, and adds support for the List type. You can also expect reduced memory consumption and improved performance.\n        Markus Staab shares interesting technical insights about improving PHPStan:\nA mixed type PHPStan journey, PHPStan performance on different hardware, My new PHPStan focus: multi-phpversion support.\n    \n🎂 The PHP Foundation turned three\n\n        The PHP Foundation was established three years ago. Over the past year, the PHP Foundation has supported the work of ten core developers, and made a significant contribution to the PHP language.\n        Consider supporting the PHP Foundation via OpenCollective or GitHub Sponsors.\n        The PHP Foundation has been also active with developments:\nPHP 8.4: How Property Hooks Happened – Larry Garfield details the decade-long journey of implementing Property Hooks in PHP 8.4.\nThe PHP Installer for Extensions php/pie reached version 0.5!\nPie: new extension installer for PHP post by Grzegorz Korba.\n            \nRector 2.0\n5 new features.\n    \nFrankenPHP 1.3\nConductor – Automatic dependency updates for Composer\nYou can now run code examples directly on the php.net website\nPHP Core\n✅ RFC: Add persistent curl share handles\n\n        PHP 8.5 will bring a new function curl_share_init_persistent(), which would allow cURL handles to be stored in global memory and reused in subsequent requests.\n        Persistence allows PHP scripts to eliminate the overhead of establishing a connection (and DNS lookups, SSL session IDs, etc.) and can improve performance and reliability.\n    \n✅ RFC: Support Closures in constant expressions\n        In PHP 8.5 it will be possible to use closures in previously\nIn attribute parameters,\nAs default values of properties and parameters.\nConstants and class constants.\n✅ RFC: Attributes on Constants\n        Attributes were first introduced in the RFC: Attributes v2. Daniel Scherzer proposes to add support for attributes on compile-time non-class constants.\n✅ RFC: Error Backtraces v2\n\n        Previously, unlike exceptions, PHP errors did not provide backtraces, which made it difficult to figure out their underlying cause. PHP 8.5 will come with a new ini setting fatal_error_backtraces=1 which will generate detailed error messages and trace for E_ERRORs.\n    \n📣 RFC: Records vs. RFC: Data Class vs. RFC: Structs\n        Apparently, there is a big interest in the community to add a simple native way of creating Value Objects in PHP.\n        Which one would you prefer?\n    \n\n    \nTools\nringPHP/php-mrloop – A PHP port of the mrloop eventware designed to harness the powers of io_uring. Read an Introducing ext-mrloop blog post to learn why io_ring is better than select(), poll(), and epoll() async io implementations.\nloupe-php/loupe – A full text search engine with tokenization, stemming, typo tolerance, filters, and geo support based on only PHP and SQLite.\ntwigstan/twigstan – TwigStan is a static analyzer for Twig templates powered by PHPStan.\nazjezz/psl – A modern, consistent, centralized, well-typed, non-blocking set of APIs for PHP programmers.\nFull LAMP Sandbox – (PHP + WebServer + DB) running 100% inside your browser.\ncarthage-software/mago – A toolchain for PHP that aims to provide a set of tools to help developers write better code. Built in Rust.\nsmoqadam/pvm – A simple bash script to manage multiple PHP versions on Linux and macOS.\ntnylea/php-ext – A Chrome extension to show PHP (Laravel) devtools console.\nphikiphp/phiki – Syntax highlighting powered by TextMate grammars in PHP.\ncoduo/php-humanizer – A useful tool to transform different strings and numbers to human-readable form.\nRoadRunner v2024.3.0 – The PHP application server got a major update with auto workers scaling.\nAI\necholabsdev/prism – A unified interface for working with LLMs in Laravel. Supports Anthropic, DeepSeek, Gemini, Groq, Mistral, Ollama, OpenAI, and xAI APIs.\n        Also extensible with jordan-price/toolbox.\n    \nCodeWithKyrian/whisper.php – Local Speech to Text in PHP made easy thanks to Whisper.cpp and OpenAI.\ndeepseek-php/deepseek-php-client – Supercharged community-maintained PHP API client that allows you to interact with deepseek API.\nPhpStorm\nPhpStorm 2024.3 is now available\n\n        The new PhpStorm comes with full PHP 8.4 support, inline AI prompts, Laravel Herd support.\n        Support for .env files is now built into PhpStorm. Previously it required installing a separate plugin.\n        JetBrains also announced a closed beta for Junie, AI Coding Agent for IDEs.\n    \nMetaStorm – This plugin allows extending PhpStorm’s behaviour and adding support for your custom frameworks with a few lines in a config file. It unlocks both references and autocompletion at regular places such as method($object,\n), render(), etc.\n    \nbuggregator/phpstorm-plugin – This plugin works in the pair with buggregator/trap and allows dumping and debugging PHP projects just inside the IDE. Supports VarDumper server, Xhprof profiler, local SMTP server, local Sentry, and much more.\nCron & Crontab Support Plugin\n    \nFrameworks\nSymfony 7.2.0 has been released\nLiving on the Edge category on this blog to learn about the main features of this new stable release.\n    \nDrupal CMS\nDrupal Starshot Initiative, Drupal CMS is the new way of creating web apps based on Drupal with no-code building experience.\n    \nthedevdojo/wave – The SaaS starter kit based on Laravel.\nWordPress as a git repo by Adam Zieliński – A promising addition that might be landed in WordPress core, allowing using markdown files as a backend for WordPress site.\nHow Geocodio keeps 300M addresses up to date with Laravel and SQLite.\nNaoray/laravel-github-monolog – Laravel log Channel for GitHub issues.\nMisc\nBuilding Maintainable PHP Applications: Data Transfer Objects by Davor Minchorov.\nPlaytime with PHP Attributes by Pete Wond.\nWhy Final Classes make Rector and PHPStan more powerful by Tomas Votruba.\nProperty Hooks in PHP 8.4: Game Changer or Hidden Trap? by David Grudl.\nPHP version stats: January, 2025 by Brent.\nUnleash: Feature flags in PHP by Dominik Chrástecký.\nThe Dangers of PHP’s unserialize and How to stay safe by Sheikh Heera.\nStop using Pseudo-Types by Frédéric Bouchery.\nImporting 1.7 billion rows of CSV data from Stripe by Jon Purvis.\nazjezz/php-pretty-diff – A nice demo repository on how to use Rust code in a PHP project with FFI.\n# symbol in comments and attributes in PHP!\n\n    \nConferences\nThese PHP events are all worth a visit, and some are still accepting presentation proposals:\nLaracon EU 2025 – Amsterdam, The Netherlands, February 3–4.\nPHP UK Conference 2025 – London, UK, February 19.\nLaracon India 2025 – Ahmedabad, India, March 8–9. CFP\n    \nPHP Conference Odawara 2025 – Japan, April 12.\nphp[tek] 2025 – Chicago, IL, USA, May 20–22.\nPHPers Summit 2025 – Poznań, Poland, May 24–25. CFP\n    \nSummer Camp – Opatija, Croatia, July 3–5. CFP 🆕\nTo find a PHP meetup happening near you, check out the calendar on php.net.\nFun\n\n    \n\n    \nIf you have any interesting or useful links to share via PHP Annotated, please leave a comment on this post or let us know on X/Twitter.\nSubscribe to PHP Annotated\nRoman Pronskiy\nDeveloper Advocate at @PhpStorm, Executive Director at @The PHP Foundation.\nTwitter | GitHub",
        "dc:creator": "Roman Pronskiy",
        "content": "Welcome to the January edition of PHP Annotated! This recap is carefully handcrafted and brings you the most interesting developments in the PHP community over the past couple of months, so you don’t have to sift through the noise, we’ve done it for you. Highlights PHP 8.4 PHP 8.4 was officially released on November 21, [&#8230;]",
        "contentSnippet": "Welcome to the January edition of PHP Annotated! This recap is carefully handcrafted and brings you the most interesting developments in the PHP community over the past couple of months, so you don’t have to sift through the noise, we’ve done it for you. Highlights PHP 8.4 PHP 8.4 was officially released on November 21, […]",
        "guid": "https://blog.jetbrains.com/?post_type=phpstorm&p=541415",
        "categories": [
          "news",
          "laravel",
          "php",
          "php-8-3",
          "php-8-4",
          "php-annotated-monthly",
          "rfc",
          "symfony"
        ],
        "isoDate": "2025-01-29T11:26:50.000Z"
      },
      {
        "creator": "Evgenia Verbina",
        "title": "An Introduction to Django Views",
        "link": "https://blog.jetbrains.com/pycharm/2025/01/django-views/",
        "pubDate": "Wed, 29 Jan 2025 10:51:08 +0000",
        "content:encodedSnippet": "Views are central to Django’s architecture pattern, and having a solid grasp of how to work with them is essential for any developer working with the framework. If you’re new to developing web apps with Django or just need a refresher on views, we’ve got you covered. \nGaining a better understanding of views will help you make faster progress in your Django project. Whether you’re working on an API backend or web UI flows, knowing how to use views is crucial.\nRead on to discover what Django views are, their different types, best practices for working with them, and examples of use cases.\nWhat are Django views?\nViews are a core component of Django’s MTV (model-template-view) architecture pattern. They essentially act as middlemen between models and templates, processing user requests and returning responses.\nYou may have come across views in the MVC (model-view-controller) pattern. However, these are slightly different from views in Django and don’t translate exactly. Django views are essentially controllers in MVC, while Django templates roughly align with views in MVC. This makes understanding the nuances of Django views vital, even if you’re familiar with views in an MVC context.\nViews are part of the user interface in Django, and they handle the logic and data processing for web requests made to your Django-powered apps and sites. They render your templates into what the user sees when they view your webpage. Each function-based or class-based view takes a user’s request, fetches the data from its models, applies business logic or data processing, and then prepares and returns an HTTP response to a template.\nThis response can be anything a web browser can display and is typically an HTML webpage. However, Django views can also return images, XML documents, redirects, error pages, and more.\nRendering and passing data to templates\nDjango provides the render() shortcut to make template rendering simple from within views. Using render() helps avoid the boilerplate of loading the template and creating the response manually.\nPyCharm offers smart code completion that automatically suggests the render() function from django.shortcuts when you start typing it in your views. It also recognizes template names and provides autocompletion for template paths, helping you avoid typos and errors.\nThe user provides the request, the template name, and a context dictionary, which gives data for the template. Once the necessary data is obtained, the view passes it to the template, where it can be rendered and presented to the user.\nfrom django.shortcuts import render\n\ndef my_view(request):\n    # Some business logic to obtain data\n    data_to_pass = {'variable1': 'value1', 'variable2': 'value2'}\n\n    # Pass the data to the template\n    return render(request, 'my_template.html', context=data_to_pass)\nIn this example, data_to_pass is a dictionary containing the data you want to send to the template. The render function is then used to render the template (my_template.html) with the provided context data.\nNow, in your template (my_template.html), you can access and display the data.\n<!DOCTYPE html>\n<html>\n<head>\n    <title>My Template</title>\n</head>\n<body>\n    <h1>{{ variable1 }}</h1>\n    <p>{{ variable2 }}</p>\n</body>\n</html>\nIn the template, you use double curly braces ({{ }}) to indicate template variables. These will be replaced with the values from the context data passed by the view.\nPyCharm offers completion and syntax highlighting for Django template tags, variables, and loops. It also provides in-editor linting for common mistakes. This allows you to focus on building views and handling logic, rather than spending time manually filling in template elements or debugging common errors.\n\n\n\n    \nStart with PyCharm Pro for free\n                                                    \nFunction-based views\nDjango has two types of views: function-based views and class-based views.\nFunction-based views are built using simple Python functions and are generally divided into four basic categories: create, read, update, and delete (CRUD). This is the foundation of any framework in development. They take in an HTTP request and return an HTTP response.\nfrom django.http import HttpResponse\n\ndef my_view(request):\n\n    # View logic goes here\n    context = {\"message\": \"Hello world\"}\n\n    return HttpResponse(render(request, \"mytemplate.html\", context))\nThis snippet handles the logic of the view, prepares a context dictionary for passing data to a template that is rendered, and returns the final template HTML in a response object.\nFunction-based views are simple and straightforward. The logic is contained in a single Python function instead of spread across methods in a class, making them most suited to use cases with minimal processing.\nPyCharm allows you to automatically generate the def my_view(request) structure using live templates. Live templates are pre-defined code snippets that can be expanded into boilerplate code. This feature saves you time and ensures a consistent structure for your view definitions.\nYou can invoke live templates simply by pressing ⌘J, typing Listview, and pressing the tab key. \n\n\n\n\nMoreover, PyCharm includes a Django Structure tool window, where you can see a list of all the views in your Django project, organized by app. This allows you to quickly locate views, navigate between them, and identify which file each view belongs to.\n\n\n\n\nClass-based views\nDjango introduced class-based views so users wouldn’t need to write the same code repeatedly. They don’t replace function-based views but instead have certain applications and advantages, especially in cases where complex logic is required.\nClass-based views in Django provide reusable parent classes that implement various patterns and functionality typically needed by web application views. You can take your views from these parent classes to reduce boilerplate code. \nClass-based views offer generic parent classes like:\nListView\nDetailView\nCreateView\nAnd many more.\nBelow are two similar code snippets demonstrating a simple BookListView. The first shows a basic implementation using the default class-based conventions, while the second illustrates how you can customize the view by specifying additional parameters. \nBasic implementation: \nfrom django.views.generic import ListView\nfrom .models import Book \n\nclass BookListView(ListView):\n    model = Book\n    # The template_name is omitted because Django defaults to 'book_list.html' \n    # based on the convention of <model_name>_list.html for ListView.\nWhen BookListView gets rendered, it automatically queries the Book records and passes them under the variable books when rendering book_list.html. This means you can create a view to list objects quickly without needing to rewrite the underlying logic.\nCustomized implementation:\nfrom django.views.generic import ListView\nfrom .models import Book \n\nclass BookListView(ListView):\n\n    model = Book\n\t# You can customize the view further by adding additional attributes or methods \n    def get_queryset(self):\n\t# Example of customizing the queryset to filter books\n\treturn Book.objects.filter(is_available=True)\nIn the second snippet, we’ve introduced a custom get_queryset() method, allowing us to filter the records displayed in the view more precisely. This shows how class-based views can be extended beyond their default functionality to meet the needs of your application. \nClass-based views also define methods that tie into key parts of the request and response lifecycle, such as: \nget() – logic for GET requests.\npost() – logic for POST requests.\ndispatch() – determines which method to call get() or post().\nThese types of views provide structure while offering customization where needed, making them well-suited to elaborate use cases.\nPyCharm offers live templates for class-based views like ListView, DetailView, and TemplateView, allowing you to generate entire view classes in seconds, complete with boilerplate methods and docstrings.\n\n\n\n\nCreating custom class-based views\nYou can also create your own view classes by subclassing Django’s generic ones and customizing them for your needs. \nSome use cases where you might want to make your own classes include:\nAdding business logic, such as complicated calculations.\nMixing multiple generic parents to blend functionality.\nManaging sessions or state across multiple requests.\nOptimizing database access with custom queries. \nReusing common rendering logic across different areas. \nA custom class-based view could look like this:\nfrom django.views.generic import View\nfrom django.shortcuts import render\nfrom . import models\n\nclass ProductSalesView(View):\n\n    def get(self, request):\n     \n        # Custom data processing \n        sales = get_sales_data()\n        \n        return render(request, \"sales.html\", {\"sales\": sales})\n\n    def post(self, request):\n\n        # Custom form handling\n        form = SalesSearchForm(request.POST)  \n        if form.is_valid():\n            results = models.Sale.objects.filter(date__gte=form.cleaned_data['start_date'])\n            context = {\"results\": results}\n            return render(request, \"search_results.html\", context)\n            \n        # Invalid form handling\n        errors = form.errors\n        return render(request, \"sales.html\", {\"errors\": errors})\nHere, custom get and post handlers enable you to extend the existing ones between requests.\nWhen to use each view type\nFunction-based and class-based views can both be useful depending on the complexity and needs of the view logic. \nThe main differences are that class-based views:\nPromote reuse via subclassing and parents inheriting behavior.\nAre ideal for state management between requests.\nProvide more structure and enforced discipline.\nYou might use them working with:\nDashboard pages with complex rendering logic. \nPublic-facing pages that display dynamic data.\nAdmin portals for content management.\nList or detail pages involving database models.\nOn the other hand, function-based views:\nAre simpler and take less code to create.\nCan be easier for Python developers to grasp.\nAre highly flexible and have fewer constraints.\nTheir use cases include: \nPrototyping ideas.\nSimple CRUD or database views.\nLanding or marketing pages. \nAPI endpoints for serving web requests.\nIn short, function-based views are flexible, straightforward, and are easier to reason about. However, for more complex cases, you’ll need to create more code that you can’t reuse.\nClass-based views in Django enforce structure and are reusable, but they can be more challenging to understand and implement, as well as harder to debug.\nViews and URLs\nAs we’ve established, in Django, views are the functions or classes that determine how a template is rendered. Each view links to a specific URL pattern, guiding incoming requests to the right place.\nUnderstanding the relationship between views and URLs is important for managing your application’s flow effectively. \nEvery view corresponds with a URL pattern defined in your Django app’s urls.py file. This URL mapping ensures that when a user navigates to a specific address in your application, Django knows exactly which view to invoke. \nLet’s take a look at a simple URL configuration: \nfrom django.urls import path\nfrom .views import BookListView\n\nurlpatterns = [\n    path('books/', BookListView.as_view(), name='book-list'),\n]\nIn this setup, when a user visits /books/, the BookListView kicks in to render the list of books. By clearly mapping URLs to views, you make your codebase easier to read and more organized.\nSimplify URL management with PyCharm\nManaging and visualizing endpoints in Django can become challenging as your application grows. PyCharm addresses this with its Endpoints tool window, which provides a centralized view of all your app’s URL patterns, linked views, and HTTP methods. This feature allows you to see a list of every endpoint in your project, making it easier to track which views are tied to specific URLs. \nInstead of searching through multiple urls.py files, you can instantly locate and navigate to the corresponding views with just a click. This is especially useful for larger Django projects where URL configurations span multiple files or when working in teams where establishing context quickly is crucial.\nFurthermore, the Endpoints tool window lets you visualize all endpoints in a table-like interface. Each row displays the URL path, the HTTP method (GET, POST, etc.), and the associated view function or class of a given endpoint. \nThis feature not only boosts productivity but also improves code navigation, allowing you to spot missing or duplicated URL patterns with ease. This level of visibility is invaluable for debugging routing issues or onboarding new developers to a project.\nCheck out this video for more information on the Endpoints tool window and how you can benefit from it. \n\n\n\n\n\n\nBest practices for using Django views\nHere are some guidelines that can help you create well-structured and maintainable views.\nKeep views focused\nViews should concentrate on handling requests, fetching data, passing data to templates, and controlling flow and redirects. Complicated business logic and complex processing should happen elsewhere, such as in model methods or dedicated service classes. \nHowever, you should be mindful not to overload your models with too much logic, as this can lead to the “fat model” anti-pattern in Django. Django’s documentation on views provides more insights about structuring them properly. \nKeep views and templates thin\nIt’s best to keep both views and templates slim. Views should handle request processing and data retrieval, while templates should focus on presentation with minimal logic.\nComplex processing should be done in Python outside the templates to improve maintainability and testing. For more on this, check out the Django templates documentation.\nDecouple database queries\nExtracting database queries into separate model managers or repositories instead of placing them directly in views can help reduce duplication. Refer to the Django models documentation for guidance on managing database interactions effectively. \nUse generic class-based views when possible\nDjango’s generic class-based views, like DetailView and ListView, provide reusability without requiring you to write much code. Opt for using them over reinventing the wheel to make better use of your time. The generic views documentation is an excellent resource for understanding these features. \nFunction-based views are OK for simple cases\nFor basic views like serving APIs, a function can be more effective than a class. Reserve complex class-based views for intricate UI flows. The writing views documentation page offers helpful examples.\nStructure routes and URLs cleanly\nOrganize routes and view handlers by grouping them into apps by functionality. This makes it easier to find and navigate the source. Check out the Django URL dispatcher documentation for best practices in structuring your URL configurations. \nNext steps \nNow that you have a basic understanding of views in Django, you’ll want to dig deeper into the framework and other next steps.\nBrush up on your Django knowledge with our How to Learn Django blog post, which is ideal for beginners or those looking to refresh their expertise.\nDiscover how to create and run your first Django project in PyCharm, with our tutorial on crafting a basic to-do application, or explore our complete list of Django project ideas for further inspiration. \nExplore the state of Django to see the latest trends in Django development for further inspiration.\nIf you’re still deciding which Python framework to use, our Django vs. Flask and Django vs. FastAPI comparison guides can help.\nDjango support in PyCharm\nPyCharm Professional is the best-in-class IDE for Django development. It allows you to code faster with Django-specific code assistance, project-wide navigation and refactoring, and full support for Django templates. You can connect to your database in a single click and work on TypeScript, JavaScript, and frontend frameworks. PyCharm also supports Flask and FastAPI out of the box. \nCreate better applications and streamline your code. Get started with PyCharm now for an effortless Django development experience.\nStart with PyCharm Pro for free",
        "dc:creator": "Evgenia Verbina",
        "content": "Views are central to Django’s architecture pattern, and having a solid grasp of how to work with them is essential for any developer working with the framework. If you’re new to developing web apps with Django or just need a refresher on views, we’ve got you covered.&#160; Gaining a better understanding of views will help [&#8230;]",
        "contentSnippet": "Views are central to Django’s architecture pattern, and having a solid grasp of how to work with them is essential for any developer working with the framework. If you’re new to developing web apps with Django or just need a refresher on views, we’ve got you covered.  Gaining a better understanding of views will help […]",
        "guid": "https://blog.jetbrains.com/?post_type=pycharm&p=540782",
        "categories": [
          "how-tos",
          "web-development",
          "django"
        ],
        "isoDate": "2025-01-29T10:51:08.000Z"
      },
      {
        "creator": "Kerry Beetge",
        "title": "Curious About The State of Software Quality?",
        "link": "https://blog.jetbrains.com/qodana/2025/01/state-of-software-quality/",
        "pubDate": "Tue, 28 Jan 2025 13:39:11 +0000",
        "content:encodedSnippet": "We’ve just released the first edition of the JetBrains Qodana Software Quality Report which looks at key findings from 2024. We decided to conduct this research to gain a deeper understanding of best practices for delivering quality software today, and how companies of different sizes and maturity levels determine when their product is production-ready.\nTo this end, we surveyed 808 software developers, QA engineers and other technical professionals to document real-world feedback from all corners of the software development community. This, resulted in unexpected findings all of which are unpacked in this comprehensive, 26-part report.\nView Report\nA taste of what’s inside\nThe report showcases a shift in intensity with regards to code quality, as products evolve from launch to maturity, which we can see in a marked increase in using quality gates, testing priority and \nThe use of automated quality gates increased from 27% in the development stage to 40% after launch.\nThe larger the development team, the more priority was placed on automated tests. \n52% of partipants said they faced technical challenges and 45% said organizational and process challenges, even if there was companywide consensus on implementing code quality measures.\nThe argument for improving quality processes was clear in terms of returns cited and offers a compelling narrative for how software development is evolving with improved product reliability and performance and so much more. \nRead the full report to get these and other details, as well as: \nBest and worst practices: A snapshot of how software quality practices are managed, and the key factors influencing decision-making during software releases.\nPerspectives specific to product maturity and company growth: Insights into how the stage of a project and the company’s size shape its approach to code quality.\nQuality investment trends: Analysis of when and why companies choose to invest more in quality.\nChallenges and solutions: A look at the common hurdles in the release and quality assurance process, and some unconventional strategies for overcoming them.\nBe one of the first to access these team and software quality insights\nEverything you’ll find in the State of Software Quality report offers useful insight into what code quality looks like now and specific ways in which you can refine your team’s current tech stack and workflow to see new results. Click the button below to get access. \nView Report\nJoin the Qodana community\nBe the first to know about new insights into code quality, as well as tool and product updates from JetBrains Qodana. Join us on X, LinkedIn, and Reddit or subscribe to updates.",
        "dc:creator": "Kerry Beetge",
        "content": "We’ve just released the first edition of the JetBrains Qodana Software Quality Report which looks at key findings from 2024. We decided to conduct this research to gain a deeper understanding of best practices for delivering quality software today, and how companies of different sizes and maturity levels determine when their product is production-ready. To [&#8230;]",
        "contentSnippet": "We’ve just released the first edition of the JetBrains Qodana Software Quality Report which looks at key findings from 2024. We decided to conduct this research to gain a deeper understanding of best practices for delivering quality software today, and how companies of different sizes and maturity levels determine when their product is production-ready. To […]",
        "guid": "https://blog.jetbrains.com/?post_type=qodana&p=540890",
        "categories": [
          "best-practices",
          "research",
          "report"
        ],
        "isoDate": "2025-01-28T13:39:11.000Z"
      },
      {
        "creator": "Evgenia Verbina",
        "title": "PyCharm 2024.3.2: uv Package Management Support and More!",
        "link": "https://blog.jetbrains.com/pycharm/2025/01/pycharm-2024-3-2/",
        "pubDate": "Tue, 28 Jan 2025 10:21:35 +0000",
        "content:encodedSnippet": "PyCharm 2024.3.2 is here with uv package management support, flame graph visualization, and other improvements!\nGet the latest version from our download page or update through our free Toolbox App. \nRead this blog post to learn more about new features.\nDownload now\n                                                    \nSupport for uv package management\nTake your environment management to the next level with uv integration in PyCharm. Create new environments from scratch or use a new environment type option to apply uv to existing ones. Additionally, when importing projects from version control, enjoy the flexibility to choose between venv and uv as your virtual environment manager.\n\n\n\n\nFlame graph visualization [PyCharm Professional]\nYou can now quickly find out where your code spends most of its execution time. Flame graphs display the application call tree, allowing you to check how long each call takes in the entire snapshot or in the call’s direct parent. You can even set a threshold, search for specific methods, and zoom the graph to focus on it.\n\n\n\n\nQuick-fix: Install missing packages from PyPI\nIf a package is not available in the default Conda repository, PyCharm now throws an error message and gives you the option to install the missing package from PyPI. You can either select Install from PyPI and proceed as normal or Abort Installation if you prefer to take a different route.\n\n\n\n    \nDownload now\n                                                    \nVisit our What’s New page to learn about the latest bug fixes, or read the release notes for the full breakdown of the changes.\nIf you encounter any problems, please report them via our issue tracker so we can address them promptly.\nWe’d love to hear your feedback on PyCharm 2024.3.2 – leave your comments below or connect with us on X.",
        "dc:creator": "Evgenia Verbina",
        "content": "PyCharm 2024.3.2 is here with uv package management support, flame graph visualization, and other improvements! Get the latest version from our download page or update through our free Toolbox App.&#160; Read this blog post to learn more about new features. Support for uv package management Take your environment management to the next level with uv [&#8230;]",
        "contentSnippet": "PyCharm 2024.3.2 is here with uv package management support, flame graph visualization, and other improvements! Get the latest version from our download page or update through our free Toolbox App.  Read this blog post to learn more about new features. Support for uv package management Take your environment management to the next level with uv […]",
        "guid": "https://blog.jetbrains.com/?post_type=pycharm&p=538294",
        "categories": [
          "releases",
          "flame-graph",
          "pypi",
          "uv"
        ],
        "isoDate": "2025-01-28T10:21:35.000Z"
      },
      {
        "creator": "Alyona Chernyaeva",
        "title": "Kotlin for Server-Side Content Creators ",
        "link": "https://blog.jetbrains.com/kotlin/2025/01/kotlin-for-server-side-content-creators/",
        "pubDate": "Mon, 27 Jan 2025 15:25:58 +0000",
        "content:encodedSnippet": "More and more developers are using Kotlin for server-side development, building reliable and efficient backend systems. Many of them also share their experiences through articles, videos, and sample projects. If you’re one of these creators, we want to recognize your work!\nSharing your knowledge helps others solve real problems, improve their skills, and discover better ways to use Kotlin for their server-side projects.\nThat’s why we’re launching the Kotlin for Server-Side Content Creators. Creating useful, high-quality content takes time and effort, and we want to make sure it gets the attention and recognition it deserves. Let us help showcase your work and increase your content’s reach.\nRecent picks from the community\nHere’s some great Kotlin server-side content we’ve come across recently:\n[📖 Article] Ktor – Create asynchronous applications the Kotlin way!!\n[🎥 Video] How to build a REAL Webapp with Kotlin & Spring Boot\n[💻 Sample] A demo app by Simon Vergauwen, written in Kotlin, with Ktor, Arrow, SQLDelight, and kotlinx.serialization\nIf you’re creating something like this, we’d love to hear about it.\nWhat’s in it for you?\nWe want more people to see your work. Once every three months, the Kotlin team will choose their favorite content and help promote it by:\nFeaturing it on the Kotlin blog.\nSharing it on our @Kotlin X, Kotlin Slack (get an invite here), and YouTube community.\nNeed ideas?\nNot sure what to cover? Here’s a list of the most requested topics related to Kotlin for server-side development:\nAdopting Kotlin for backend development\nMigrating a Java Spring backend to Kotlin\nHow Kotlin can improve your microservices architecture\nTutorials on building with Ktor or Spring Boot in Kotlin\nUsing Kotlin for AI-powered backend systems \nBut don’t let this limit you – if you’ve got experience or tips to share, we’d love to see it!\nHow to share your work\nTo make your content easier to discover, add the tag #KotlinServerSide if the platform allows it.\nWe’re excited to see what you create!",
        "dc:creator": "Alyona Chernyaeva",
        "content": "More and more developers are using Kotlin for server-side development, building reliable and efficient backend systems. Many of them also share their experiences through articles, videos, and sample projects. If you’re one of these creators, we want to recognize your work! Sharing your knowledge helps others solve real problems, improve their skills, and discover better [&#8230;]",
        "contentSnippet": "More and more developers are using Kotlin for server-side development, building reliable and efficient backend systems. Many of them also share their experiences through articles, videos, and sample projects. If you’re one of these creators, we want to recognize your work! Sharing your knowledge helps others solve real problems, improve their skills, and discover better […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=541041",
        "categories": [
          "kotlin"
        ],
        "isoDate": "2025-01-27T15:25:58.000Z"
      },
      {
        "creator": "Alena Gupaisova",
        "title": "Livestream alret: Programming Prep Guide for the CSAI Entrance Test",
        "link": "https://blog.jetbrains.com/education/2025/01/27/livestream-alret-programming-prep-guide-for-the-csai-entrance-test/",
        "pubDate": "Mon, 27 Jan 2025 14:18:48 +0000",
        "content:encodedSnippet": "Want to study computer science in Europe? Enroll in the Computer Science and AI bachelor’s program at Neapolis University Pafos. Exclusive JetBrains scholarships are up for grabs!\nRegister now\n                                                    \nJoin us on February 11, at 4:00 pm UTC, for a special preparation session to help you ace the entrance test for this program. You’ll get first-hand tips from JetBrains Researcher Pavel Mavrin (known within the Codeforces community as pashka). An expert in algorithms and data structures, Pavel has participated in many programming competitions and was the ICPC World Champion in 2004.",
        "dc:creator": "Alena Gupaisova",
        "content": "Want to study computer science in Europe? Enroll in the Computer Science and AI bachelor&#8217;s program at Neapolis University Pafos. Exclusive JetBrains scholarships are up for grabs! Join us on February 11, at 4:00 pm UTC, for a special preparation session to help you ace the entrance test for this program. You&#8217;ll get first-hand tips [&#8230;]",
        "contentSnippet": "Want to study computer science in Europe? Enroll in the Computer Science and AI bachelor’s program at Neapolis University Pafos. Exclusive JetBrains scholarships are up for grabs! Join us on February 11, at 4:00 pm UTC, for a special preparation session to help you ace the entrance test for this program. You’ll get first-hand tips […]",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=541002",
        "categories": [
          "jetbrains-academy",
          "offline-programs",
          "csai"
        ],
        "isoDate": "2025-01-27T14:18:48.000Z"
      },
      {
        "creator": "Daniela Bentrup",
        "title": "Fleet 1.45 Is Here With Auto-Import for Gradle, Improved Preview for Markdown, and More Enhancements",
        "link": "https://blog.jetbrains.com/fleet/2025/01/fleet-1-45-is-here-with-auto-import-for-gradle-improved-preview-for-markdown-and-more-enhancements/",
        "pubDate": "Mon, 27 Jan 2025 11:02:58 +0000",
        "content:encodedSnippet": "Explore our latest release, which introduces many new features designed to improve your development experience. You can update to this version using our Toolbox App.\nLet’s take a closer look at the highlights.\nDownload Fleet 1.45\nNew features\nFleet now supports auto-import for Gradle projects. This feature can be disabled by going to Settings | Tools | Gradle and clicking Automatically import project model when build script is saved.\n\n\n\n\n\nRenaming files will now automatically update the file references. For Kotlin and Java, it also updates package names accordingly.\nYou can now preview Markdown scratch files without closing and opening the tab, and without saving the file. You can also preview Markdown files after opening them with the context menu, and without saving the file. You can also preview Markdown files after (right-clicking the .md file and going to Open with Fleet).\n\n\n\n\n\nZig plugin now supports debugging code for run configurations (zig-run and zig-build-run). We also added support for dynamically created run configurations in the context of main and test declarations. Simply execute the Run in Context action to create and use them. Recent changes also improve highlighting for .zig files and add handlers for various contexts.\nImprovements\nIndents now work as expected with soft-wrapping.\n\n\n\nBug fixes\nWe’ve also fixed several bugs:\nWhen using the Debug tool in Fleet, hidden frames can now be shown. [FL-26222]\nWhen using the Android device manager, the entered information after creating a new device is now saved when switching to another tab. [FL-30167]\nSee the full release notes for more details about Fleet 1.45.\nPlease report any problems you encounter to our issue tracker, and stay tuned for further exciting announcements.\nJoin the JetBrains Tech Insights Lab to participate in surveys, interviews, and UX studies, and help us make JetBrains Fleet better!",
        "dc:creator": "Daniela Bentrup",
        "content": "Explore our latest release, which introduces many new features designed to improve your development experience. You can update to this version using our Toolbox App. Let’s take a closer look at the highlights. Download Fleet 1.45 New features Improvements Bug fixes We&#8217;ve also fixed several bugs: See the full release notes for more details about [&#8230;]",
        "contentSnippet": "Explore our latest release, which introduces many new features designed to improve your development experience. You can update to this version using our Toolbox App. Let’s take a closer look at the highlights. Download Fleet 1.45 New features Improvements Bug fixes We’ve also fixed several bugs: See the full release notes for more details about […]",
        "guid": "https://blog.jetbrains.com/?post_type=fleet&p=539891",
        "categories": [
          "news",
          "releases"
        ],
        "isoDate": "2025-01-27T11:02:58.000Z"
      },
      {
        "creator": "Regina Muradova",
        "title": "JetBrains Academy: Top Courses and Projects of 2024",
        "link": "https://blog.jetbrains.com/education/2025/01/24/jetbrains-academy-top-courses-and-projects-of-2024/",
        "pubDate": "Fri, 24 Jan 2025 08:42:41 +0000",
        "content:encodedSnippet": "This International Day of Education, we’re celebrating that in 2024 over 340,000 new coders joined JetBrains Academy, making our community almost 1.5 million members strong. \nTo mark this impressive milestone, we’re looking back at the most popular JetBrains Academy offerings of 2024 – including JetBrains IDE courses (designed exclusively for IDEs) and Hyperskill projects (available both in-browser and in-IDE). \nLet’s dive in!\nPython\nPython was a favorite topic among JetBrains Academy learners in 2024, and it’s no wonder why! The language is beginner-friendly and widely used in everything from web development to data science. \nIntroduction to Python (In-IDE course)\nOne of JetBrains Academy’s most loved offerings, this course is designed for absolute beginners wanting to learn Python from scratch. With easy-to-follow lessons, you’ll build a solid foundation in coding, understand core concepts, and gain the confidence to explore more advanced Python projects.\n\n\n\n\n100 Days of Code – The Complete Python Pro Bootcamp (In-IDE course) \nThis course by Angela Yu offers a practical way to learn Python by building 100 projects in 100 days. From web apps to automation tools, you’ll gain hands-on experience and develop the skills needed to code professionally.\nHyperskill projects \nFor those looking to build their developer portfolio with real-world projects from Hyperskill, these were the top picks in 2024, each of which was designed to make learning interactive and fun:\nMy First Project with Python – For mastering the basics. \nSimple Chat Bot – For sharpening logical thinking skills.\nZookeeper – For practicing data management.\nFor more advanced learners, the Password Hacker with Python project was a favorite, helping learners practice the skills needed for technical interviews at top tech companies.\nJava\nHyperskill projects \nJava projects in 2024 were all about having fun, overcoming challenges, and building practical skills to kickstart a developer career. Beginners started with My First Project with Java, Simple Chat Bot with Java, and Simple Tic-Tac-Toe. \nTo get a taste of Java, advanced learners programmed a virtual barista with Coffee Machine Simulator with Java.\n\n\n\n\nData Science\nHyperskill projects \nData science continues to be a top choice for our learners, blending analytical thinking with hands-on coding. Explore why our learners love this topic by trying out these projects: Nobel Laureates and House Classification.\nKotlin\nAtomicKotlin (In-IDE-course)\nDesigned for both beginners and experienced programmers, this course contains exercises that accompany the Atomic Kotlin book. You can read an “atom” of information in the book and lock in your understanding of the material by completing the exercises in the course.\n\n\n\n\nKotlin Koans (In-IDE-course)\nThis is an interactive course that helps you practice and understand Kotlin’s syntax, idioms, and core features. If you prefer hands-on problem-solving over lectures, this one’s for you.\nHyperskill projects \nTo update your developer portfolio and to have some fun learning Kotlin, try these popular projects:\nBuild a virtual animal caretaker in Zookeeper. \nCreate your own interactive game with Simple Tic-Tac-Toe. \n\n\n\n\nFrontend\nHyperskill project \nThe Color Guess Game was a hit among frontend enthusiasts. This project is a good opportunity to enhance the skills needed to create an engaging web interface while practicing DOM manipulations, managing user interactions, and controlling game flow with loops and conditions.\n\n\n\n\nRust\nLearn Rust (In-IDE-course)\nLast but not least, this Rust course was at the top of our list. Its hands-on exercises help beginners learn quickly to read and write Rust programs.\nAll in-IDE courses are free of charge, and, as a student, you can get a free license for any JetBrains IDE! \nInterested in learning more? Check out our full course catalog. With over 90 hands-on courses, JetBrains Academy helps you improve your CV, build a standout portfolio, and ace IT interviews. \nHappy learning!\nThe JetBrains Academy team",
        "dc:creator": "Regina Muradova",
        "content": "This International Day of Education, we’re celebrating that in 2024 over 340,000 new coders joined JetBrains Academy, making our community almost 1.5 million members strong.&#160; To mark this impressive milestone, we’re looking back at the most popular JetBrains Academy offerings of 2024 – including JetBrains IDE courses (designed exclusively for IDEs) and Hyperskill projects (available [&#8230;]",
        "contentSnippet": "This International Day of Education, we’re celebrating that in 2024 over 340,000 new coders joined JetBrains Academy, making our community almost 1.5 million members strong.  To mark this impressive milestone, we’re looking back at the most popular JetBrains Academy offerings of 2024 – including JetBrains IDE courses (designed exclusively for IDEs) and Hyperskill projects (available […]",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=540494",
        "categories": [
          "data-science",
          "jetbrains-academy",
          "learning-courses",
          "project-based-learning",
          "python",
          "frontend",
          "online-learning"
        ],
        "isoDate": "2025-01-24T08:42:41.000Z"
      }
    ]
  },
  {
    "name": "Airbnb Engineering & Data Science",
    "category": "기업",
    "posts": []
  },
  {
    "name": "PayPal Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Aaron Yim",
        "title": "Iterate across multiple files more efficiently with GitHub Copilot Edits (Preview)",
        "link": "https://devblogs.microsoft.com/visualstudio/iterate-across-multiple-files-more-efficiently-with-github-copilot-edits-preview/",
        "pubDate": "Tue, 28 Jan 2025 13:00:58 +0000",
        "content:encodedSnippet": "GitHub Copilot Edits (Preview) in Visual Studio 2022 combines the conversational flow of chat and an inline review experience to help you iterate across your codebase with more control and efficiency.\n Here’s how Copilot Edits helps with iterating across multiple files:\nPreview with clarity: Review a clear summary that highlights affected files and proposed changes.\nReview with flow: View code diffs inline, directly in your editor. Either the TAB key to accept and Alt+Del keys to reject individual changes, or apply/dismiss all at once.\nIterate with confidence: Use checkpoints to revisit earlier iterations of a code file or try an alternative approach anytime for novel ideas.\ndocument.createElement('video');\nhttps://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/01/edits-final-_-jan-16-_-captions.mp4\n\nAvailable in Visual Studio 2022 Preview\nCopilot Edits is available in versions 17.13 Preview 3 and later of Visual Studio 2022.\nTo use Copilot Edits, sign in to Visual Studio 2022 with a GitHub account that has access to Copilot, now available to all users with Copilot Free.\nGet Visual Studio 2022 Preview\n\nGet started with GitHub Copilot Edits in Visual Studio\nStart an Edits thread: In the Copilot Chat window, click the Edits thread button (a “+” symbol with a pencil icon).\nDescribe your changes: Use natural language to describe your edits, just as you would in Copilot Chat.\nSpecify context or let Copilot discover: Copilot Edits will automatically consider your current file, open files, or search for related files across your codebase. You can also specify context using # commands like #errors, #file, #solution.\n\nFor more details on how to use Copilot Edits, visit our documentation.\nWe appreciate your feedback\nYour feedback is invaluable for helping us improve Copilot Edits – please share with us on the Developer Community ticket for Copilot Edits or the Send Feedback button in Visual Studio.\nThe post Iterate across multiple files more efficiently with GitHub Copilot Edits (Preview) appeared first on Visual Studio Blog.",
        "enclosure": {
          "url": "https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/01/edits-final-_-jan-16-_-captions.mp4",
          "length": "13169216",
          "type": "video/mp4"
        },
        "dc:creator": "Aaron Yim",
        "content": "<p>GitHub Copilot Edits (Preview) in Visual Studio 2022 combines the conversational flow of chat and an inline review experience to help you iterate across your codebase with more control and efficiency. 💡 Here’s how Copilot Edits helps with iterating across multiple files: Preview with clarity: Review a clear summary that highlights affected files and proposed [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/iterate-across-multiple-files-more-efficiently-with-github-copilot-edits-preview/\">Iterate across multiple files more efficiently with GitHub Copilot Edits (Preview)</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "GitHub Copilot Edits (Preview) in Visual Studio 2022 combines the conversational flow of chat and an inline review experience to help you iterate across your codebase with more control and efficiency. 💡 Here’s how Copilot Edits helps with iterating across multiple files: Preview with clarity: Review a clear summary that highlights affected files and proposed […]\nThe post Iterate across multiple files more efficiently with GitHub Copilot Edits (Preview) appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=252165",
        "categories": [
          "Visual Studio",
          "#Githubcopilot",
          "Conversational AI",
          "Copilot",
          "GitHub Copilot",
          "GitHub Copilot Chat",
          "Visual Studio 2022"
        ],
        "isoDate": "2025-01-28T13:00:58.000Z"
      },
      {
        "creator": "Rhea Patel",
        "title": "Announcing a free GitHub Copilot for Visual Studio",
        "link": "https://devblogs.microsoft.com/visualstudio/announcing-a-free-github-copilot-for-visual-studio/",
        "pubDate": "Thu, 23 Jan 2025 17:37:46 +0000",
        "content:encodedSnippet": "We’re excited to announce an all new free plan for GitHub Copilot, available for everyone today in Visual Studio. All you need is a GitHub account. No trial. No subscription. No credit card.\nEnable GitHub Copilot Free\n With GitHub Copilot Free, you’ll receive:\n2,000 code completions per month\n50 chat messages per month\nAccess to the latest AI models with Anthropic Claude 3.5 Sonnet and Open AI’s GPT-4o.\n\nGitHub Copilot’s Features in Visual Studio\nGitHub Copilot transforms your Visual Studio experience with powerful features designed to save you time and supercharge your productivity:\nCopilot Edits: Multi-File Editing\nCopilot Edits helps you quickly make changes to multiple files with just one prompt. Edits combines the conversational flow of chat and an inline review experience to help you write code faster and better.\nPreview with clarity: Know exactly what’s being modified with a summary of the affected files and the proposed changes.\nReview with flow: View code diffs inline, directly in your editor. Use the TAB key to accept or the Alt+Del key to reject individual changes or apply/dismiss all at once.\nIterate with confidence: Use checkpoints to revisit earlier iterations of a code file or try an alternative approach anytime for novel ideas.\n\nChat with @workspace and @vs\nCopilot Chat is deeply integrated into your workflow. It understands your entire solution and your Visual Studio environment. Just use commands like @workspace or @vs to get context-specific responses. will intuitively take in your related files and knowledge about the traits your solution to always give you the most relevant responses.\n\nNever write a commit message again \nCopilot will automatically review staged changes and suggest a commit message for you. You can even customize the prompt to make the generated message sound like you or follow your team’s conventions.\n\nUse Copilot to fix your errors \nResolve code errors effortlessly with GitHub Copilot’s file awareness. Now integrated into the lightbulb and error list, Copilot offers fixes and explanations for C# and C++ issues.\n\nSet your breakpoints automatically\nUse Copilot to help you quickly find where to apply breakpoints without manually crafting complex expressions, speed up the debugging process and make it easier to pinpoint and resolve issues in your code.\n\nGitHub Copilot is Everywhere in Visual Studio\nDiscover the amazing features GitHub Copilot brings to Visual Studio! From boosting productivity to simplifying your coding journey, there’s so much to explore. Check out this video for a deeper dive into all the features and tips to get started.\nEnable GitHub Copilot Free\n\nWant to stay in the loop on the newest and most exciting updates for Visual Studio? Follow us on Twitter and LinkedIn, and keep an eye on our blogs for the latest announcements!\nThe post Announcing a free GitHub Copilot for Visual Studio appeared first on Visual Studio Blog.",
        "dc:creator": "Rhea Patel",
        "content": "<p>We&#8217;re excited to announce an all new free plan for GitHub Copilot, available for everyone today in Visual Studio. All you need is a GitHub account. No trial. No subscription. No credit card. With GitHub Copilot Free, you’ll receive: 2,000 code completions per month 50 chat messages per month Access to the latest AI models with [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/announcing-a-free-github-copilot-for-visual-studio/\">Announcing a free GitHub Copilot for Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "We’re excited to announce an all new free plan for GitHub Copilot, available for everyone today in Visual Studio. All you need is a GitHub account. No trial. No subscription. No credit card. With GitHub Copilot Free, you’ll receive: 2,000 code completions per month 50 chat messages per month Access to the latest AI models with […]\nThe post Announcing a free GitHub Copilot for Visual Studio appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=252073",
        "categories": [
          "Copilot",
          "GitHub Copilot",
          "Visual Studio",
          "#Githubcopilot",
          "CopilotFree"
        ],
        "isoDate": "2025-01-23T17:37:46.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김범진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": [
      {
        "title": "생성AI, LLM, AI Agent와 그래픽, 디자인, 미디어아트 관련 자료 소개",
        "link": "http://daddynkidsmakers.blogspot.com/2025/01/ai-llm-ai-agent.html",
        "pubDate": "2025-01-27T07:33:00.000Z",
        "author": "Daddy Maker",
        "content": "<div style=\"text-align: left;\">이 글은&nbsp;생성AI, LLM, AI Agent와 그래픽, 디자인, 미디어아트에 관한 자료를 정리한 것이다. 관련 도구 및 예제는 다음 링크에 자세히 설명하였으니 참고한다.</div><div style=\"text-align: left;\"><ul style=\"text-align: left;\"><li><a href=\"https://github.com/mac999/llm-media-art-demo\">mac999/llm-media-art-demo</a></li></ul></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEiMKcSoz0KlxzRwrACD4ETJ_QVTgPHuSnwdZlGSPua6ThFYmOv7iDT91VuO3YhrlOJbEQeUb_lTcmP6k2sdNsxK4pYUNXSsHPgq2qKyz-HH9goSHU72R0sugMX_cF2iVs5-KVFySG2r0cuomWH5Xcl05ouP1bc5ERcVCXe-zN5d5i2JYaZZJjFALLCJLafL\" style=\"font-weight: 700; margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"1440\" data-original-width=\"2557\" height=\"180\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEiMKcSoz0KlxzRwrACD4ETJ_QVTgPHuSnwdZlGSPua6ThFYmOv7iDT91VuO3YhrlOJbEQeUb_lTcmP6k2sdNsxK4pYUNXSsHPgq2qKyz-HH9goSHU72R0sugMX_cF2iVs5-KVFySG2r0cuomWH5Xcl05ouP1bc5ERcVCXe-zN5d5i2JYaZZJjFALLCJLafL\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">프롬프트에서 생성된 그래픽스 예시</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div><div style=\"text-align: left;\"><b>Blender LLM 기반 그래픽 모델링 관련 자료</b></div><div style=\"text-align: left;\">LLM, ollama, Blender python library 등을 이용하면, 프롬프트를 입력해, 3차원 모델을 자동 생성할 수 있다. 다음은 관련 예시를 보여준다.&nbsp;</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEi6CLm9igiCylVoCqTR431R5bSX8Epow6C5JiGbmvWN6930ZJF6sA4iRd7mg1VADjfXJ1muLKBNaEx86oWT0hgWMtYJVGNuD9RK_pG6pNp_UhW9jaIIkRmoghXvakx9__Ts3YE9mO700lLBrTU_HV2E02Yihzl4CTobM7quYUP-TvYRbUf6fAylyY7ZZMD1\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"1435\" data-original-width=\"2560\" height=\"224\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEi6CLm9igiCylVoCqTR431R5bSX8Epow6C5JiGbmvWN6930ZJF6sA4iRd7mg1VADjfXJ1muLKBNaEx86oWT0hgWMtYJVGNuD9RK_pG6pNp_UhW9jaIIkRmoghXvakx9__Ts3YE9mO700lLBrTU_HV2E02Yihzl4CTobM7quYUP-TvYRbUf6fAylyY7ZZMD1=w400-h224\" width=\"400\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEhGc2wKcxfapMoAJ8Jg_aTBXJuSiwY3QliRlFCkUxiBbPrjzalCigQJDYg8CnZ4sXQbnVYSxNoDMvX7KBN3p8CUzHvgaQjFiQvVeAwkZEGG0wDKMTrcEKxB4IMxhj955QJF1fue-2X9EnXggwxyGMpmvygCTL1IC2ZCeiGMaXwMn9FlQSNTS5E_6NMwzBAL\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"1440\" data-original-width=\"2560\" height=\"225\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhGc2wKcxfapMoAJ8Jg_aTBXJuSiwY3QliRlFCkUxiBbPrjzalCigQJDYg8CnZ4sXQbnVYSxNoDMvX7KBN3p8CUzHvgaQjFiQvVeAwkZEGG0wDKMTrcEKxB4IMxhj955QJF1fue-2X9EnXggwxyGMpmvygCTL1IC2ZCeiGMaXwMn9FlQSNTS5E_6NMwzBAL=w400-h225\" width=\"400\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">Prompt: Create 100 cubes. The y position of each cube follows the cosine function along the x-axis with random color.</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEi0vVROrQij9YN29m5rBS0MANXb-bzNFInS--9wiiAxxo1YWk6qQOF_RR9i3sqmPQD5wO1TLi-r6mCQC02v7VoI4t7wDoguU1k8Y9iN-sxYyPQTDJi3I1ZX8zZZ2Q-3nKiyZoJSHbAasxOTr4LHEuIAxrbZxAuEaT430d_xsYw1jpWS7rkzCHCcWZqn8jzZ\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"1440\" data-original-width=\"2558\" height=\"225\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEi0vVROrQij9YN29m5rBS0MANXb-bzNFInS--9wiiAxxo1YWk6qQOF_RR9i3sqmPQD5wO1TLi-r6mCQC02v7VoI4t7wDoguU1k8Y9iN-sxYyPQTDJi3I1ZX8zZZ2Q-3nKiyZoJSHbAasxOTr4LHEuIAxrbZxAuEaT430d_xsYw1jpWS7rkzCHCcWZqn8jzZ=w400-h225\" width=\"400\" /></a></div><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">이를 이용해 다음과 같은 GPT 에이전트가 구현된다.&nbsp;</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><iframe allowfullscreen=\"\" class=\"BLOG_video_class\" height=\"266\" src=\"https://www.youtube.com/embed/YUytEtaVrrc\" width=\"320\" youtube-src-id=\"YUytEtaVrrc\"></iframe></div></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><b><br /></b></div><div class=\"separator\" style=\"clear: both; text-align: left;\">상세한 동작 메커니즘은 다음 링크를 참고한다.</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><ul style=\"text-align: left;\"><li><a href=\"https://github.com/mac999/blender-llm-addin\">mac999/blender-llm-addin</a></li></ul></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><b><br /></b></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><b>LLM과 컴퓨터 그래픽스</b></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: left;\">앞에서 사용한 방법과 동일하게, OpenGL, processing.org 등 3차원 가시화 도구를 이용해 실시간으로 프롬프트를 통해 컴퓨터 그래픽스 장면을 생성할 수 있다. 다음은 프롬프트를 통해 생성된 그래픽스를 보여준다.&nbsp;</div><br /><div class=\"separator\" style=\"clear: both; text-align: left;\"><div class=\"separator\" style=\"clear: both; font-weight: bold; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEg45dwr8HkBpedqUpbzr51ueAXeWTTYtMvNoGOBILRgdH8ZDEZK0dNQwWKs7g9h_Lpz0eWm57MFmCznnzUz6nt8KgypitH7Pf43ln0PTrOzDiC_MnPno7I7IYc_VwUR0yx1i6asB4e04-02jtbCE3HpzEF6IySlFkBmTMJ7h_mKr5CVV8Swil-Ol-Rbb9N8\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"588\" data-original-width=\"1163\" height=\"162\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEg45dwr8HkBpedqUpbzr51ueAXeWTTYtMvNoGOBILRgdH8ZDEZK0dNQwWKs7g9h_Lpz0eWm57MFmCznnzUz6nt8KgypitH7Pf43ln0PTrOzDiC_MnPno7I7IYc_VwUR0yx1i6asB4e04-02jtbCE3HpzEF6IySlFkBmTMJ7h_mKr5CVV8Swil-Ol-Rbb9N8\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">데이터 기반 그래픽스 렌더링 예시</div><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">생성된 그래픽스 코드는 다음과 같다.&nbsp;</div><div class=\"separator\" style=\"clear: both;\"><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">from p5 import *</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">import pandas as pd</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"># Load the dataset</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">data = pd.read_csv('input.csv')</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">def setup():</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; size(720, 400)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; no_stroke()</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">def draw_cone(size_x, size_y, position):</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; with push_matrix():</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; translate(*position)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; cone(size_x, size_y)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">def draw():</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; background(20, 100, 24)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; lights()</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; rotate_x(frame_count * 0.01)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; # rotate_y(frame_count * 0.01)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; blinn_phong_material()</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; interval = 200</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; for i, row in data.iterrows():</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; x = (i % 3) * interval - interval</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; y = 0</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; z = (i // 3) * interval - interval</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; draw_cone(row['energy'], row['temperature'], (x, y, z))</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; locX = mouse_x - width/2</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; locY = mouse_y - height/2</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; light_specular(0, 0, 255)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; point_light(360, 360*1.5, 360, locX, locY, 400)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">if __name__ == '__main__':</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; run(mode='P3D')</span></div></div><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><b>LLM과 사운드 엔지니어링</b></div><div class=\"separator\" style=\"clear: both; text-align: left;\">동일한 원리로 사운드를 개발할 수 있다. 다음은 LLM을 통해 생성된 사운드 코드를 실행한 결과이다.&nbsp;</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><iframe allowfullscreen=\"\" class=\"BLOG_video_class\" height=\"266\" src=\"https://www.youtube.com/embed/lcP9c8LYGD4\" width=\"320\" youtube-src-id=\"lcP9c8LYGD4\"></iframe></div><div class=\"separator\" style=\"clear: both; text-align: center;\">사운드 생성 예</div><b><br /></b></div><div class=\"separator\" style=\"clear: both; text-align: left;\">생성된 코드는 다음과 같다.</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">from psonic import *</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">import time</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">from threading import Thread, Condition</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">set_server_parameter_from_log(\"127.0.0.1\")</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">def play_mozart(condition):</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; while True:</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; with condition:</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; condition.notifyAll() # Message to threads&nbsp; &nbsp; &nbsp;&nbsp;</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; beat = 0.33</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; melody = [</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; E5, E5, F5, G5, G5, F5, E5, D5, C5, C5, D5, E5, E5, D5, D5,</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; E5, E5, F5, G5, G5, F5, E5, D5, C5, C5, D5, E5, D5, C5, C5</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; ]</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; # Drum beat pattern</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; def play_beat():</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(DRUM_HEAVY_KICK, amp=1.5)&nbsp; # Strong kick drum</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(ELEC_CHIME, amp=1.2)&nbsp; # Electric guitar sample</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(BD_ZOME, amp=1.5)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sleep(beat / 2)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(DRUM_CYMBAL_CLOSED, amp=1.2)&nbsp; # Closed cymbal</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(ELEC_CHIME, amp=0.6)&nbsp;&nbsp;</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(BD_ZOME, amp=0.6)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sleep(beat / 2)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(DRUM_SNARE_HARD, amp=1.3)&nbsp; # Strong snare</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(ELEC_CHIME, amp=1.2)&nbsp; &nbsp;</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(BD_ZOME, amp=1.3)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sleep(beat / 2)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp;&nbsp;</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(DRUM_CYMBAL_CLOSED, amp=1.2)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(ELEC_CHIME, amp=0.6)&nbsp;&nbsp;</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(BD_ZOME, amp=0.6)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sleep(beat / 2)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; # Melody, Beat Channel Play&nbsp;</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; for note in melody:</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; play(note, amp=1.0) # , release=0.2)&nbsp; # Melody</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; play_beat()&nbsp; # Beat Pattern</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">condition = Condition()</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">mozart_thread = Thread(name='producer', target=play_mozart, args=(condition,))</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">mozart_thread.start()</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">input(\"Press Enter to continue...\")</span></div></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><b>LLM과 피지컬 컴퓨팅</b></div><div class=\"separator\" style=\"clear: both; text-align: left;\">피지컬 컴퓨팅에 많이 사용되는 아두이노 등을 이용해, 프롬프트로 명령을 주면, 임베딩 컴퓨터가 명령을 실행할 수 있는 코드를 LLM이 생성해, 모터, 조명과 같은 액추에이터를 동작시킬 수 있다. 다음은 그 예를 보여준다.&nbsp;</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><iframe allowfullscreen=\"\" class=\"BLOG_video_class\" height=\"266\" src=\"https://www.youtube.com/embed/2VpRcF7pqug\" width=\"320\" youtube-src-id=\"2VpRcF7pqug\"></iframe></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://neural-maze.github.io/blog/posts/202405-crewai-ollama-arduino/\">Arduino programming with CrewAI · The Neural Maze</a></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">참고로, 아두이노의 경우, .ino 코드 파일을 실시간으로 컴파일해 아두이노보드로 전송하는 cli 도구가 설치 시 포함되어 있다. 이를 이용해, 컴파일 에이전트를 구현할 수 있다.&nbsp;</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgYkSl780s8vW_zXTN8LO36a-L-q_cv8OB3vA1DIPOBlR3NobI1BOfgobcWcIc8vv75m3c45YpO6Q5bz7trUbT3e0WF78bYX30PZOGXWKZaAJgzcaYBe1yQJwhXTPMbQgwNH_2NpwJrdGUPF6ev5mHrzfa_E0aA-wo4mtFr_4IJT4hm8tX3YKIwJfID_Gsj\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"384\" data-original-width=\"956\" height=\"129\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgYkSl780s8vW_zXTN8LO36a-L-q_cv8OB3vA1DIPOBlR3NobI1BOfgobcWcIc8vv75m3c45YpO6Q5bz7trUbT3e0WF78bYX30PZOGXWKZaAJgzcaYBe1yQJwhXTPMbQgwNH_2NpwJrdGUPF6ev5mHrzfa_E0aA-wo4mtFr_4IJT4hm8tX3YKIwJfID_Gsj\" width=\"320\" /></a></div>Arduino CLI 도구</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">이 주제와 관련된 레퍼런스는 다음과 같다.</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><b>레퍼런스</b></div></div><div style=\"text-align: left;\"><span style=\"font-size: x-small;\"><br /></span></div><div style=\"text-align: left;\"><span style=\"font-size: x-small;\">AI 에이전트</span></div><div style=\"text-align: left;\"><ul style=\"text-align: left;\"><li><a href=\"https://blenderartists.org/t/can-i-install-pandas-or-other-modules-into-blenders-python/1375122/6\"><span style=\"font-size: x-small;\">Can I install Pandas (or other modules) into Blender's Python? - Coding / Python Support - Blender Artists Community</span></a></li><li><a href=\"https://medium.com/@rameshkannanyt0078/the-best-ollama-models-for-developers-and-programmers-1662dae514a7\"><span style=\"font-size: x-small;\">The Best Ollama Models for Developers and Programmers | by Ramesh kannan s | Dec, 2024 | Medium</span></a></li><li><a href=\"https://www.reddit.com/r/LocalLLaMA/comments/1gkewyp/best_llm_model_for_coding/\"><span style=\"font-size: x-small;\">Best LLM Model for coding : r/LocalLLaMA</span></a></li><li><a href=\"https://ollama.com/library/codellama:7b\"><span style=\"font-size: x-small;\">codellama:7b</span></a></li><li><a href=\"https://blog.context.ai/comparing-leading-multi-agent-frameworks/\"><span style=\"font-size: x-small;\">Comparing multi-agent frameworks</span></a></li><li><a href=\"https://www.crewai.com/\"><span style=\"font-size: x-small;\">CrewAI</span></a></li></ul><div><span style=\"font-size: x-small;\">그래픽 모델링</span></div><div><ul><li><a href=\"https://www.youtube.com/watch?v=YUytEtaVrrc\"><span style=\"font-size: x-small;\">5 Steps to setup VSCode for Blender Python (on Windows)</span></a></li><li><a href=\"https://github.com/nutti/fake-bpy-module\"><span style=\"font-size: x-small;\">Fake Blender Python API module collection for the code completion.</span></a></li><li><a href=\"https://ollama.com/blog/vision-models\"><span style=\"font-size: x-small;\">Vision models · Ollama Blog</span></a></li><li><a href=\"https://p5.readthedocs.io/en/latest/\"><span style=\"font-size: x-small;\">P5 library documentation</span></a></li></ul></div><div><span style=\"font-size: x-small;\">사운드 엔지니어링</span></div><div><ul style=\"text-align: left;\"><li><a href=\"https://medium.com/@9derick/music-coding-sonic-pi-337d501cf2f1\"><span style=\"font-size: x-small;\">Music + Coding = Sonic PI. I love music. I love listening to it… | by Derick Castillo | Medium</span></a></li><li><a href=\"https://github.com/gkvoelkl/python-sonic/tree/master\"><span style=\"font-size: x-small;\">Python-sonic: Programming Music with Python, Sonic Pi and Supercollider</span></a></li><li><a href=\"https://github.com/sonic-pi-net/sonic-pi\"><span style=\"font-size: x-small;\">sonic-pi: Code. Music. Live.</span></a></li><li><a href=\"https://sonic-pi.net/\"><span style=\"font-size: x-small;\">Sonic Pi - The Live Coding Music Synth for Everyone</span></a></li><li><a href=\"https://github.com/belangeo/pyo\"><span style=\"font-size: x-small;\">Python DSP module</span></a></li><li><a href=\"https://github.com/csound/csound\"><span style=\"font-size: x-small;\">csound: Main repository for Csound</span></a></li><li><a href=\"https://github.com/librosa/librosa/blob/main/LICENSE.md\"><span style=\"font-size: x-small;\">librosa</span></a></li><li><a href=\"https://github.com/CPJKU/madmom\"><span style=\"font-size: x-small;\">Python audio and music signal processing library</span></a></li><li><a href=\"https://in-thread.sonic-pi.net/t/link-sonic-pi-to-python/2938/5\"><span style=\"font-size: x-small;\">Link sonic pi to Python - Support, Help &amp; Resources - in_thread</span></a></li><li><a href=\"https://www.restack.io/p/real-time-audio-libraries-for-ai-answer-python-sound-synthesis-cat-ai\"><span style=\"font-size: x-small;\">Python Sound Synthesis Libraries | Restackio</span></a></li></ul></div><div><span style=\"font-size: x-small;\">피지컬 컴퓨팅</span></div><div><ul><li><a href=\"https://medium.com/@lmpo/ai-assisted-arduino-programming-dcc256f34846\"><span style=\"font-size: x-small;\">AI-Assisted Arduino Programming. The rapid advancement of Large Language… | by LM Po | Medium</span></a></li><li><a href=\"https://docs.m5stack.com/en/guide/llm/llm/arduino\"><span style=\"font-size: x-small;\">M5 board</span></a></li><li><a href=\"https://community.home-assistant.io/t/using-llama-3-to-control-home-assistant/743937/6\"><span style=\"font-size: x-small;\">Using Llama 3 to control Home Assistant - Configuration / Voice Assistant - Home Assistant Community</span></a></li><li><a href=\"https://fixtse.com/blog/llama-3-home-assistant\"><span style=\"font-size: x-small;\">Using Llama 3 to Control Home Assistant | fixtSE</span></a></li><li><a href=\"https://dev.to/nite_dev/programming-arduino-with-python-18k8\"><span style=\"font-size: x-small;\">Programming Arduino with Python - DEV Community</span></a></li><li><a href=\"https://www.tinkerassist.com/blog/compile-upload-arduino-code-with-python\"><span style=\"font-size: x-small;\">Compile &amp; Upload Arduino Code with Python | Tinker Assist Blog</span></a></li></ul></div></div>",
        "contentSnippet": "이 글은 생성AI, LLM, AI Agent와 그래픽, 디자인, 미디어아트에 관한 자료를 정리한 것이다. 관련 도구 및 예제는 다음 링크에 자세히 설명하였으니 참고한다.\n\nmac999/llm-media-art-demo\n\n\n프롬프트에서 생성된 그래픽스 예시\n\n\nBlender LLM 기반 그래픽 모델링 관련 자료\nLLM, ollama, Blender python library 등을 이용하면, 프롬프트를 입력해, 3차원 모델을 자동 생성할 수 있다. 다음은 관련 예시를 보여준다. \n\n\n\n\nPrompt: Create 100 cubes. The y position of each cube follows the cosine function along the x-axis with random color.\n\n\n이를 이용해 다음과 같은 GPT 에이전트가 구현된다. \n\n\n\n\n\n상세한 동작 메커니즘은 다음 링크를 참고한다.\n\nmac999/blender-llm-addin\n\n\n\nLLM과 컴퓨터 그래픽스\n\n앞에서 사용한 방법과 동일하게, OpenGL, processing.org 등 3차원 가시화 도구를 이용해 실시간으로 프롬프트를 통해 컴퓨터 그래픽스 장면을 생성할 수 있다. 다음은 프롬프트를 통해 생성된 그래픽스를 보여준다. \n\n\n데이터 기반 그래픽스 렌더링 예시\n\n생성된 그래픽스 코드는 다음과 같다. \n\nfrom p5 import *\nimport pandas as pd\n\n\n# Load the dataset\ndata = pd.read_csv('input.csv')\n\n\ndef setup():\n  size(720, 400)\n  no_stroke()\n\n\ndef draw_cone(size_x, size_y, position):\n  with push_matrix():\n    translate(*position)\n    cone(size_x, size_y)\n\n\ndef draw():\n  background(20, 100, 24)\n  lights()\n  rotate_x(frame_count * 0.01)\n  # rotate_y(frame_count * 0.01)\n  blinn_phong_material()\n\n\n  interval = 200\n  for i, row in data.iterrows():\n    x = (i % 3) * interval - interval\n    y = 0\n    z = (i // 3) * interval - interval\n    draw_cone(row['energy'], row['temperature'], (x, y, z))\n\n\n  locX = mouse_x - width/2\n  locY = mouse_y - height/2\n  light_specular(0, 0, 255)\n  point_light(360, 360*1.5, 360, locX, locY, 400)\n\n\nif __name__ == '__main__':\n  run(mode='P3D')\n\n\nLLM과 사운드 엔지니어링\n동일한 원리로 사운드를 개발할 수 있다. 다음은 LLM을 통해 생성된 사운드 코드를 실행한 결과이다. \n\n\n사운드 생성 예\n\n\n생성된 코드는 다음과 같다.\n\nfrom psonic import *\nimport time\nfrom threading import Thread, Condition\n\n\nset_server_parameter_from_log(\"127.0.0.1\")\n\n\ndef play_mozart(condition):\n  while True:\n    with condition:\n      condition.notifyAll() # Message to threads      \n\n\n    beat = 0.33\n\n\n    melody = [\n      E5, E5, F5, G5, G5, F5, E5, D5, C5, C5, D5, E5, E5, D5, D5,\n      E5, E5, F5, G5, G5, F5, E5, D5, C5, C5, D5, E5, D5, C5, C5\n    ]\n\n\n    # Drum beat pattern\n    def play_beat():\n      sample(DRUM_HEAVY_KICK, amp=1.5)  # Strong kick drum\n      sample(ELEC_CHIME, amp=1.2)  # Electric guitar sample\n      sample(BD_ZOME, amp=1.5)\n      sleep(beat / 2)\n\n\n      sample(DRUM_CYMBAL_CLOSED, amp=1.2)  # Closed cymbal\n      sample(ELEC_CHIME, amp=0.6)  \n      sample(BD_ZOME, amp=0.6)\n      sleep(beat / 2)\n\n\n      sample(DRUM_SNARE_HARD, amp=1.3)  # Strong snare\n      sample(ELEC_CHIME, amp=1.2)   \n      sample(BD_ZOME, amp=1.3)\n      sleep(beat / 2)\n      \n      sample(DRUM_CYMBAL_CLOSED, amp=1.2)\n      sample(ELEC_CHIME, amp=0.6)  \n      sample(BD_ZOME, amp=0.6)\n      sleep(beat / 2)\n\n\n    # Melody, Beat Channel Play \n    for note in melody:\n      play(note, amp=1.0) # , release=0.2)  # Melody\n      play_beat()  # Beat Pattern\n\n\n\n\ncondition = Condition()\nmozart_thread = Thread(name='producer', target=play_mozart, args=(condition,))\nmozart_thread.start()\n\n\ninput(\"Press Enter to continue...\")\n\n\nLLM과 피지컬 컴퓨팅\n피지컬 컴퓨팅에 많이 사용되는 아두이노 등을 이용해, 프롬프트로 명령을 주면, 임베딩 컴퓨터가 명령을 실행할 수 있는 코드를 LLM이 생성해, 모터, 조명과 같은 액추에이터를 동작시킬 수 있다. 다음은 그 예를 보여준다. \n\nArduino programming with CrewAI · The Neural Maze\n\n\n참고로, 아두이노의 경우, .ino 코드 파일을 실시간으로 컴파일해 아두이노보드로 전송하는 cli 도구가 설치 시 포함되어 있다. 이를 이용해, 컴파일 에이전트를 구현할 수 있다. \n\n\nArduino CLI 도구\n\n\n이 주제와 관련된 레퍼런스는 다음과 같다.\n\n\n레퍼런스\n\n\n\nAI 에이전트\n\nCan I install Pandas (or other modules) into Blender's Python? - Coding / Python Support - Blender Artists Community\nThe Best Ollama Models for Developers and Programmers | by Ramesh kannan s | Dec, 2024 | Medium\nBest LLM Model for coding : r/LocalLLaMA\ncodellama:7b\nComparing multi-agent frameworks\nCrewAI\n\n그래픽 모델링\n\n5 Steps to setup VSCode for Blender Python (on Windows)\nFake Blender Python API module collection for the code completion.\nVision models · Ollama Blog\nP5 library documentation\n\n사운드 엔지니어링\n\nMusic + Coding = Sonic PI. I love music. I love listening to it… | by Derick Castillo | Medium\nPython-sonic: Programming Music with Python, Sonic Pi and Supercollider\nsonic-pi: Code. Music. Live.\nSonic Pi - The Live Coding Music Synth for Everyone\nPython DSP module\ncsound: Main repository for Csound\nlibrosa\nPython audio and music signal processing library\nLink sonic pi to Python - Support, Help & Resources - in_thread\nPython Sound Synthesis Libraries | Restackio\n\n피지컬 컴퓨팅\n\nAI-Assisted Arduino Programming. The rapid advancement of Large Language… | by LM Po | Medium\nM5 board\nUsing Llama 3 to control Home Assistant - Configuration / Voice Assistant - Home Assistant Community\nUsing Llama 3 to Control Home Assistant | fixtSE\nProgramming Arduino with Python - DEV Community\nCompile & Upload Arduino Code with Python | Tinker Assist Blog",
        "id": "tag:blogger.com,1999:blog-5201956450461596914.post-2529442541951005452",
        "isoDate": "2025-01-27T07:33:00.000Z"
      },
      {
        "title": "CAD 모델 생성AI 및 LLM 기술 조사",
        "link": "http://daddynkidsmakers.blogspot.com/2025/01/cad-ai-llm.html",
        "pubDate": "2025-01-23T02:23:00.000Z",
        "author": "Daddy Maker",
        "content": "<div style=\"text-align: left;\">이 글은&nbsp;CAD 모델 생성AI 및 LLM 기술을 조사한다.</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgKnHeldVqMfPXAIE-ybSWV70HZMpQXx0k1YrSx9sMCnQkBXO0Knp0jLIYny7CBoqPmszkV57YV0vzeoOcKsWcPy260bSLDCaAbib_8lDVUj2fJ01R8GzEg67qVTXUFoCJvLIvK0jfH8urMvUfOKw1SOWLoZhuQS9Wx3oC67cmbYuB4-RNdzCLD-5y7AR9S\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"258\" data-original-width=\"803\" height=\"158\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgKnHeldVqMfPXAIE-ybSWV70HZMpQXx0k1YrSx9sMCnQkBXO0Knp0jLIYny7CBoqPmszkV57YV0vzeoOcKsWcPy260bSLDCaAbib_8lDVUj2fJ01R8GzEg67qVTXUFoCJvLIvK0jfH8urMvUfOKw1SOWLoZhuQS9Wx3oC67cmbYuB4-RNdzCLD-5y7AR9S=w489-h158\" width=\"489\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">SolidGen (Autodesk)</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div></div><div style=\"text-align: left;\">조사를 위해 다음 키워드로 구글링, GITHUB, 논문 검색을 수행한다.&nbsp;</div><div style=\"text-align: center;\">'CAD', 'Scketch', 'LLM', 'Generative AI', 'Transformers', 'github', 'huggingface'</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">다음은 검색된 기술 결과를 보여준다.&nbsp;</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEggmbsKltLYfN3hqkB4djXVj8dG8x-XXPz2YlBeFCRZMWApn0GeSOQXbSp0U9uF5_e8-ucw2V4lp2Dlz8AxToA2H7IAvAH8riaDFegyWu_u7iivypO8tEvGQjTAhEaq2uYRzv0P7bnauOwt2S2o3SkJ4-R6QtNrGjMLhn2XmDd2f8UX5XZxvTs_2az3pBdZ\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"348\" data-original-width=\"750\" height=\"148\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEggmbsKltLYfN3hqkB4djXVj8dG8x-XXPz2YlBeFCRZMWApn0GeSOQXbSp0U9uF5_e8-ucw2V4lp2Dlz8AxToA2H7IAvAH8riaDFegyWu_u7iivypO8tEvGQjTAhEaq2uYRzv0P7bnauOwt2S2o3SkJ4-R6QtNrGjMLhn2XmDd2f8UX5XZxvTs_2az3pBdZ\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://archive.nyu.edu/handle/2451/43778\">ABC: A Big CAD Model Dataset For Geometric Deep Learning : Faculty Digital Archive : NYU Libraries</a></div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjnmIXAHRwKLEzTDXpj0CIlcKsYn3ZrpTnF2cRyo8BnIyxTnt0So15dE-9ZOJ2_3EF3lVjKf5dLvhbJGzpiFpxWv8eOWOj1qYLbA4Asnc31qNw3UVeAbPHppf3Xc7GGtC0NO6judmLTOx_-CUYubXpteNc7CsjccD_VX1zUnc702FNS2z4Ddw82brrXa8Cn\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"293\" data-original-width=\"687\" height=\"136\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjnmIXAHRwKLEzTDXpj0CIlcKsYn3ZrpTnF2cRyo8BnIyxTnt0So15dE-9ZOJ2_3EF3lVjKf5dLvhbJGzpiFpxWv8eOWOj1qYLbA4Asnc31qNw3UVeAbPHppf3Xc7GGtC0NO6judmLTOx_-CUYubXpteNc7CsjccD_VX1zUnc702FNS2z4Ddw82brrXa8Cn\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://arxiv.org/pdf/2401.15563\">BrepGen: A B-rep Generative Diffusion Model with Structured Latent Geometry</a></div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEhjk8V05v5esg9kP7TM03W-ShmXbadh_102dgYd4xsIq7i6vJ3k-jnuOovlgE3sBPkHYHzPYCMpRHCCv6z2v11P-L1YYayXm4BSwuxoMUV8MXu5wWMmp7T6uny6f3H-UaFYP9hhyqg5w7S5kTqUYIp3msmUoJhwYToqIP4yzUsdFfiH1bWsEJA4J7iyhzN5\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"353\" data-original-width=\"591\" height=\"191\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhjk8V05v5esg9kP7TM03W-ShmXbadh_102dgYd4xsIq7i6vJ3k-jnuOovlgE3sBPkHYHzPYCMpRHCCv6z2v11P-L1YYayXm4BSwuxoMUV8MXu5wWMmp7T6uny6f3H-UaFYP9hhyqg5w7S5kTqUYIp3msmUoJhwYToqIP4yzUsdFfiH1bWsEJA4J7iyhzN5\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">Text2CAD: Text to 3D CAD Generation via Technical Drawings</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEiiTgNHZ92LIe-w1Qw4QNOvw8yiyMJp_pREnO8KeqYSkk3bwKmq17iWPYbnc2w2LpyBTvxu10tRrc41ofFJc60AddYNdtkqtP23EWidh_2B-Fny6KVFnQP0MK_MFYzBROQnrvIRRx96mzxICmJZ_dbD8yanqevyYgr-1qAhgAD1xyf60KXovQ4NNGk4qhxq\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"688\" data-original-width=\"552\" height=\"367\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEiiTgNHZ92LIe-w1Qw4QNOvw8yiyMJp_pREnO8KeqYSkk3bwKmq17iWPYbnc2w2LpyBTvxu10tRrc41ofFJc60AddYNdtkqtP23EWidh_2B-Fny6KVFnQP0MK_MFYzBROQnrvIRRx96mzxICmJZ_dbD8yanqevyYgr-1qAhgAD1xyf60KXovQ4NNGk4qhxq=w295-h367\" width=\"295\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://arxiv.org/pdf/2411.15279\">Don’t Mesh with Me: Generating Constructive Solid Geometry Instead of  Meshes by Fine-Tuning a Code-Generation LLM</a></div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjqA0ffRUffnsZ2nM0-WEH8OdA7asD1yke043xOO5JLX6ExVDf4sTfgkFNe8vgMkObozNZdNI-TDINNYlUKYNlkKQHlQnrsh-xCbG5gnEyf7Wl2if3jiwI_u38cw2Gy04owXk11uQaZHRQGvpLkEw35bgoAipBYBE2UrKGTSLEv42DTxgUHnOQJvkiA3kVt\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"703\" data-original-width=\"1367\" height=\"236\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjqA0ffRUffnsZ2nM0-WEH8OdA7asD1yke043xOO5JLX6ExVDf4sTfgkFNe8vgMkObozNZdNI-TDINNYlUKYNlkKQHlQnrsh-xCbG5gnEyf7Wl2if3jiwI_u38cw2Gy04owXk11uQaZHRQGvpLkEw35bgoAipBYBE2UrKGTSLEv42DTxgUHnOQJvkiA3kVt=w458-h236\" width=\"458\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://arxiv.org/pdf/2412.19663\">CAD-GPT: Synthesising CAD Construction Sequence with Spatial  Reasoning-Enhanced Multimodal LLMs</a></div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEhtYING8rrI1UNpUM04MOfFPv7WUEELby0PmLOjhgsjoYmaQDscdmxoLo0Fn-M62J86XgZCv4bWsV586XmQATEL0v1qWtSkLkfajivVoVf1Il_au-_nRFCTolvCvVaUVS7zcXS78dm5icHeKVmNFLri5Avsrle9jKcI7KcQyfKo5pvo-lU66qsmB5oTQuLj\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"481\" data-original-width=\"822\" height=\"187\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhtYING8rrI1UNpUM04MOfFPv7WUEELby0PmLOjhgsjoYmaQDscdmxoLo0Fn-M62J86XgZCv4bWsV586XmQATEL0v1qWtSkLkfajivVoVf1Il_au-_nRFCTolvCvVaUVS7zcXS78dm5icHeKVmNFLri5Avsrle9jKcI7KcQyfKo5pvo-lU66qsmB5oTQuLj\" width=\"320\" /></a></div><div style=\"text-align: center;\"><a href=\"https://github.com/lingxiaoli94/SPFN\">SPFN: Source code for \"Supervised Fitting of Geometric Primitives to 3D Point Clouds\" [CVPR 2019].</a></div><div><br /></div><div style=\"text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEg5xHVPg_p-rzjEGSECiBSlvUVaOXh5kvjG2zADCwYEo-1htB42_tMNKM2RDr_mdQRwgn_Dz2900tKp8m06XKCxoEiKj4VwzjIrqOaXy_jySPziMnkNCsKbwf-snUlYhzmjQb07JOyRP6svlQ4TUSFvrP2wOM2FVdJzQQNSF8nMRJgFs0ddQnZ0DBuIpo1h\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"672\" data-original-width=\"1364\" height=\"158\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEg5xHVPg_p-rzjEGSECiBSlvUVaOXh5kvjG2zADCwYEo-1htB42_tMNKM2RDr_mdQRwgn_Dz2900tKp8m06XKCxoEiKj4VwzjIrqOaXy_jySPziMnkNCsKbwf-snUlYhzmjQb07JOyRP6svlQ4TUSFvrP2wOM2FVdJzQQNSF8nMRJgFs0ddQnZ0DBuIpo1h\" width=\"320\" /></a></div></div><div style=\"text-align: center;\"><a href=\"https://github.com/Hippogriff/parsenet-codebase\">Hippogriff/parsenet-codebase: Code base of ParSeNet: ECCV 2020</a></div><div style=\"text-align: center;\"><br /></div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEhx56SODF9J8m4M4uJXqmOvNNA3qWaLLjezDfVC6DafvmQWkAxNcetQBvrZ1HMipyduxPN2AHSpMj52ntxoGqdHYZwXigRfRX4L-6qvi221Vksv1LKeStAUIK98X1mjX-0QHSQqGhnVAc2kOf8abBsUhOmPQfdJZb6qol91IKBnx6Vld1DDc3B-HZjE-xsk\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"275\" data-original-width=\"776\" height=\"162\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhx56SODF9J8m4M4uJXqmOvNNA3qWaLLjezDfVC6DafvmQWkAxNcetQBvrZ1HMipyduxPN2AHSpMj52ntxoGqdHYZwXigRfRX4L-6qvi221Vksv1LKeStAUIK98X1mjX-0QHSQqGhnVAc2kOf8abBsUhOmPQfdJZb6qol91IKBnx6Vld1DDc3B-HZjE-xsk=w458-h162\" width=\"458\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEil_pEHkyh1_5vInEmcJGumUzKjGk45wkRVytKcUuuG8btiuKEwiGuObav4k_76rl0ntdrk5j9AB8hUTJMTvxJtCg_EEzSE0tsBFIZXiZeDgnmIj9a-75quP0oqTQvER_7rCFR1U_mF9vO5Z3Lwh6Hp9WsjA9_eb_5TCCQ9qvTC7zWdTdvNghXzAHFPXz7I\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"1818\" data-original-width=\"2260\" height=\"240\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEil_pEHkyh1_5vInEmcJGumUzKjGk45wkRVytKcUuuG8btiuKEwiGuObav4k_76rl0ntdrk5j9AB8hUTJMTvxJtCg_EEzSE0tsBFIZXiZeDgnmIj9a-75quP0oqTQvER_7rCFR1U_mF9vO5Z3Lwh6Hp9WsjA9_eb_5TCCQ9qvTC7zWdTdvNghXzAHFPXz7I\" width=\"298\" /></a></div></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgN2_a_6efxkVvk9LBrw0dOgRoWJff250BJJBer2AHE6nTzJGpMwXR4MDP8c7BiJyb0wBTudntAegl9ZGzuwkD36XhaDzrKJ3g8ah7dgRX3UqtlOYFGH4UAntWlhGP1ml-IWC75zXsdm50d5oWQmfWF1Fcbszt_d1CHeQW89TnHPzZ9ByuCFYko0JlogJ5P\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"720\" data-original-width=\"2000\" height=\"176\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgN2_a_6efxkVvk9LBrw0dOgRoWJff250BJJBer2AHE6nTzJGpMwXR4MDP8c7BiJyb0wBTudntAegl9ZGzuwkD36XhaDzrKJ3g8ah7dgRX3UqtlOYFGH4UAntWlhGP1ml-IWC75zXsdm50d5oWQmfWF1Fcbszt_d1CHeQW89TnHPzZ9ByuCFYko0JlogJ5P=w490-h176\" width=\"490\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"></div></div></div><div style=\"text-align: center;\"><a href=\"https://manycore-research.github.io/CAD2Program/\">From 2D CAD Drawings to 3D Parametric Models: A Vision-Language Approach</a></div><div style=\"text-align: center;\"><br /></div><div style=\"text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEiuCkg6lb7GVHPL7XZZhR8VCD5uLXEDa_h1LnCpGUwGdV_MIdzb1p61FfbNQzquusLtCRN1hlQ8vxOyF7OZbBrON5encS9lzu41ad-c6VmYpRGEHv8ugp_XXeKLydsw7cXiwAhxPo-FQjsENzw3yS3RphQUPg65MxJiqIJoM6XBdd8H5u9ansgP0IWb6vSj\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"539\" data-original-width=\"1280\" height=\"207\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEiuCkg6lb7GVHPL7XZZhR8VCD5uLXEDa_h1LnCpGUwGdV_MIdzb1p61FfbNQzquusLtCRN1hlQ8vxOyF7OZbBrON5encS9lzu41ad-c6VmYpRGEHv8ugp_XXeKLydsw7cXiwAhxPo-FQjsENzw3yS3RphQUPg65MxJiqIJoM6XBdd8H5u9ansgP0IWb6vSj=w491-h207\" width=\"491\" /></a></div><a href=\"https://damassets.autodesk.net/content/dam/autodesk/www/pdfs/sketch-a-shape.pdf\">Sketch-A-Shape: Zero-Shot Sketch-to-3D Shape Generation</a></div><div style=\"text-align: center;\"><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEiNE95hV3UkHsJzFhS9vCArZKczORTidZi-YuGxtq5t3u0GuJqqxGyJIbNL5j_s5QzjJE6tOsUHO-IYUpK_hRCoBPkQ_LwY8UKXjg1rXxKd7kULel3rIeU1vgy_zNrQuTKIIQ-NwexdLdjKqvmdsGNL9b_SM6juukez1UeE3GTBc71pPyrftxR99pR38XTO\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"523\" data-original-width=\"662\" height=\"240\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEiNE95hV3UkHsJzFhS9vCArZKczORTidZi-YuGxtq5t3u0GuJqqxGyJIbNL5j_s5QzjJE6tOsUHO-IYUpK_hRCoBPkQ_LwY8UKXjg1rXxKd7kULel3rIeU1vgy_zNrQuTKIIQ-NwexdLdjKqvmdsGNL9b_SM6juukez1UeE3GTBc71pPyrftxR99pR38XTO\" width=\"304\" /></a></div><a href=\"https://www.research.autodesk.com/app/uploads/2024/05/hg-cad.pdf\">HG-CAD: Hierarchical Graph Learning for Material Prediction and Recommendation in Computer-Aided Design</a><br /><br /></div><div style=\"text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjl0fL9AlSfmL_cOrLANpqTQkPCmB_73o4vssLfaleX0cp5jNRqF3XZgWXjTtoEalQpdUbPsnMIFBvuG-n8MgKFJYOGnt8k_f3NwJiOIW6wKVWKq3OiU443bZhezYS4RALCy7ANgZlpXBKSSJeoyyjfqgleEhrtjCvmma5eT-aDicqvRvb3lYyRKDaITGsE\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"906\" data-original-width=\"992\" height=\"240\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjl0fL9AlSfmL_cOrLANpqTQkPCmB_73o4vssLfaleX0cp5jNRqF3XZgWXjTtoEalQpdUbPsnMIFBvuG-n8MgKFJYOGnt8k_f3NwJiOIW6wKVWKq3OiU443bZhezYS4RALCy7ANgZlpXBKSSJeoyyjfqgleEhrtjCvmma5eT-aDicqvRvb3lYyRKDaITGsE\" width=\"263\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgBDL7ghXXrFbVgeMtLJWLFn6JLVnH-tn_JijNqhV3WdacJJReXBouLBdG-s3kQ5bOCJek3P-ypF9hbW2dw1Qi-YYm6uwm-fqlLJZcx9XRPrHRzuDPLmNiYQH1UnYh22iq2m31oSkZab9_9Ba5pMFTddEOVyo-NMP-DL7eGmAkdDnQzmI_E395X41drPAWx\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"348\" data-original-width=\"1636\" height=\"110\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgBDL7ghXXrFbVgeMtLJWLFn6JLVnH-tn_JijNqhV3WdacJJReXBouLBdG-s3kQ5bOCJek3P-ypF9hbW2dw1Qi-YYm6uwm-fqlLJZcx9XRPrHRzuDPLmNiYQH1UnYh22iq2m31oSkZab9_9Ba5pMFTddEOVyo-NMP-DL7eGmAkdDnQzmI_E395X41drPAWx=w516-h110\" width=\"516\" /></a></div></div><div style=\"text-align: center;\"><a href=\"https://huggingface.co/spaces/filapro/cad-recode\">Cad Recode - a Hugging Face Space by filapro</a>&nbsp;(<a href=\"https://free3d.com/3d-model/wooden-house-752597.html\" style=\"text-align: left;\">Wooden House Free 3D Model - .fbx .obj .stl - Free3D</a>)</div><div style=\"text-align: center;\"><br /></div><div style=\"text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEiYSRp-M0iOgJlAgOZq35_-Eatl3OA4UUozbtss4tMbpd8wSw6u1U0z6AyX73d3tWVEXRnTUEMPIhBc4JwPgGwy3B4QUHgtQhlJR3gXfFLiqR1r5waf7uH7jMrHSJuc_VfqaY3xVntpIX5jCw_99XvvJ_tOa1-EvT6QZ62C-iEhD2z_iyczhLN-AnOvqVgU\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"661\" data-original-width=\"1600\" height=\"132\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEiYSRp-M0iOgJlAgOZq35_-Eatl3OA4UUozbtss4tMbpd8wSw6u1U0z6AyX73d3tWVEXRnTUEMPIhBc4JwPgGwy3B4QUHgtQhlJR3gXfFLiqR1r5waf7uH7jMrHSJuc_VfqaY3xVntpIX5jCw_99XvvJ_tOa1-EvT6QZ62C-iEhD2z_iyczhLN-AnOvqVgU\" width=\"320\" /></a></div></div><div style=\"text-align: center;\"><a href=\"https://github.com/CadQuery/cadquery\">CadQuery/cadquery: A python parametric CAD scripting framework based on OCCT</a></div><div style=\"text-align: center;\"><br /></div><div style=\"text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjp_8EAYMCu5bDgjIEevmb82rhVt3x1XtjrN42ZF-dr8cT90JAsszRyP1bdd_qRdL8a5YUgeg-yjmwrD7PBSfLnMWmfsUM7OkFxaYVEQh8Gqu4ljPtZPsWJdzDwa4AO7m_sJzREb9s_qPy1bIJHt4KfPPHswQjIwd_9C7I21Ef5EwF5b6qwu1Fsqx34zAWy\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"769\" data-original-width=\"1013\" height=\"240\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjp_8EAYMCu5bDgjIEevmb82rhVt3x1XtjrN42ZF-dr8cT90JAsszRyP1bdd_qRdL8a5YUgeg-yjmwrD7PBSfLnMWmfsUM7OkFxaYVEQh8Gqu4ljPtZPsWJdzDwa4AO7m_sJzREb9s_qPy1bIJHt4KfPPHswQjIwd_9C7I21Ef5EwF5b6qwu1Fsqx34zAWy\" width=\"316\" /></a></div></div><div style=\"text-align: center;\"><a href=\"https://github.com/huggingface/diffusers\">huggingface/diffusers: 🤗 Diffusers: State-of-the-art diffusion models for image, video, and audio generation in PyTorch and FLAX.</a></div><div style=\"text-align: center;\"><br /></div><div style=\"text-align: left;\"><b>레퍼런스</b></div><div style=\"text-align: left;\"><ul style=\"text-align: left;\"><li><a href=\"https://www.research.autodesk.com/app/uploads/2024/05/cadllm_neurips2023_workshop-1.pdf\">CAD-LLM:Large Language Model for CAD  Generation</a></li><li><a href=\"https://www.research.autodesk.com/app/uploads/2024/05/hg-cad.pdf\">HG-CAD: Hierarchical Graph Learning for Material Prediction and Recommendation in Computer-Aided Design</a></li><li><a href=\"https://www.research.autodesk.com/app/uploads/2024/02/SolidGen_Paper.pdf\"> SolidGen: An Autoregressive Model for Direct B-rep</a></li><li><a href=\"https://github.com/krrish94/chamferdist\">Pytorch package to compute Chamfer distance between point sets (pointclouds).</a></li><li><a href=\"https://damassets.autodesk.net/content/dam/autodesk/www/pdfs/sketch-a-shape.pdf\">Sketch-A-Shape: Zero-Shot Sketch-to-3D Shape Generation</a></li><li><a href=\"https://github.com/bertjiazheng/Awesome-CAD\">A list of awesome Computer-Aided Design (CAD) papers</a></li><li><a href=\"https://github.com/samxuxiang/BrepGen\">BrepGen: [SIGGRAPH 2024] Official PyTorch Implementation of \"BrepGen: A B-rep Generative Diffusion Model with Structured Latent Geometry\"</a></li><li><a href=\"https://archive.nyu.edu/handle/2451/43778\">ABC: A Big CAD Model Dataset For Geometric Deep Learning : Faculty Digital Archive : NYU Libraries</a></li><li><a href=\"https://github.com/AutodeskAILab/occwl\">AutodeskAILab/occwl: Lightweight Pythonic wrapper around pythonocc</a></li><li><a href=\"https://dev.opencascade.org/doc/overview/html/index.html\">Open CASCADE Technology: Introduction</a></li><li><a href=\"https://arxiv.org/pdf/2411.06206\">Text2CAD: Text to 3D CAD Generation via Technical Drawings</a></li><li><a href=\"https://arxiv.org/abs/2203.13944\">SolidGen: An Autoregressive Model for Direct B-rep Synthesis</a></li><li><a href=\"https://arxiv.org/abs/2412.19663\">CAD-GPT: Synthesising CAD Construction Sequence with Spatial Reasoning-Enhanced Multimodal LLMs</a></li><li><a href=\"https://github.com/lingxiaoli94/SPFN\">SPFN: Source code for \"Supervised Fitting of Geometric Primitives to 3D Point Clouds\" [CVPR 2019]</a></li><li><a href=\"https://github.com/Hippogriff/parsenet-codebase\">parsenet-codebase: Code base of ParSeNet: ECCV 2020.</a></li><li><a href=\"https://github.com/guohaoxiang/ComplexGen\">ComplexGen: Code for SIGGRAPH 2022 paper: ComplexGen: CAD Reconstruction by B-Rep Chain Complex Generation</a></li><li><a href=\"https://manycore-research.github.io/CAD2Program/\">From 2D CAD Drawings to 3D Parametric Models: A Vision-Language Approach</a></li><li><a href=\"https://github.com/bertjiazheng/Awesome-CAD\">Awesome-CAD: 😎 A list of awesome Computer-Aided Design (CAD) papers</a></li><li><a href=\"https://github.com/MarkMoHR/Awesome-Sketch-Based-Applications\">Awesome-Sketch-Based-Applications: :books: A collection of sketch based application papers</a></li></ul></div>",
        "contentSnippet": "이 글은 CAD 모델 생성AI 및 LLM 기술을 조사한다.\n\n\nSolidGen (Autodesk)\n\n\n조사를 위해 다음 키워드로 구글링, GITHUB, 논문 검색을 수행한다. \n'CAD', 'Scketch', 'LLM', 'Generative AI', 'Transformers', 'github', 'huggingface'\n\n\n다음은 검색된 기술 결과를 보여준다. \n\n\n\nABC: A Big CAD Model Dataset For Geometric Deep Learning : Faculty Digital Archive : NYU Libraries\n\n\nBrepGen: A B-rep Generative Diffusion Model with Structured Latent Geometry\n\n\nText2CAD: Text to 3D CAD Generation via Technical Drawings\n\n\n\nDon’t Mesh with Me: Generating Constructive Solid Geometry Instead of  Meshes by Fine-Tuning a Code-Generation LLM\n\n\nCAD-GPT: Synthesising CAD Construction Sequence with Spatial  Reasoning-Enhanced Multimodal LLMs\n\n\nSPFN: Source code for \"Supervised Fitting of Geometric Primitives to 3D Point Clouds\" [CVPR 2019].\n\n\n\n\nHippogriff/parsenet-codebase: Code base of ParSeNet: ECCV 2020\n\n\n\n\n\n\n\n\n\nFrom 2D CAD Drawings to 3D Parametric Models: A Vision-Language Approach\n\n\n\nSketch-A-Shape: Zero-Shot Sketch-to-3D Shape Generation\n\n\nHG-CAD: Hierarchical Graph Learning for Material Prediction and Recommendation in Computer-Aided Design\n\n\n\n\n\nCad Recode - a Hugging Face Space by filapro (Wooden House Free 3D Model - .fbx .obj .stl - Free3D)\n\n\n\n\nCadQuery/cadquery: A python parametric CAD scripting framework based on OCCT\n\n\n\n\nhuggingface/diffusers: 🤗 Diffusers: State-of-the-art diffusion models for image, video, and audio generation in PyTorch and FLAX.\n\n\n레퍼런스\n\nCAD-LLM:Large Language Model for CAD  Generation\nHG-CAD: Hierarchical Graph Learning for Material Prediction and Recommendation in Computer-Aided Design\n SolidGen: An Autoregressive Model for Direct B-rep\nPytorch package to compute Chamfer distance between point sets (pointclouds).\nSketch-A-Shape: Zero-Shot Sketch-to-3D Shape Generation\nA list of awesome Computer-Aided Design (CAD) papers\nBrepGen: [SIGGRAPH 2024] Official PyTorch Implementation of \"BrepGen: A B-rep Generative Diffusion Model with Structured Latent Geometry\"\nABC: A Big CAD Model Dataset For Geometric Deep Learning : Faculty Digital Archive : NYU Libraries\nAutodeskAILab/occwl: Lightweight Pythonic wrapper around pythonocc\nOpen CASCADE Technology: Introduction\nText2CAD: Text to 3D CAD Generation via Technical Drawings\nSolidGen: An Autoregressive Model for Direct B-rep Synthesis\nCAD-GPT: Synthesising CAD Construction Sequence with Spatial Reasoning-Enhanced Multimodal LLMs\nSPFN: Source code for \"Supervised Fitting of Geometric Primitives to 3D Point Clouds\" [CVPR 2019]\nparsenet-codebase: Code base of ParSeNet: ECCV 2020.\nComplexGen: Code for SIGGRAPH 2022 paper: ComplexGen: CAD Reconstruction by B-Rep Chain Complex Generation\nFrom 2D CAD Drawings to 3D Parametric Models: A Vision-Language Approach\nAwesome-CAD: 😎 A list of awesome Computer-Aided Design (CAD) papers\nAwesome-Sketch-Based-Applications: :books: A collection of sketch based application papers",
        "id": "tag:blogger.com,1999:blog-5201956450461596914.post-3452899801746435343",
        "isoDate": "2025-01-23T02:23:00.000Z"
      }
    ]
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권영재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권혁우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김준형",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": [
      {
        "title": "Spring Data MongoDB Repository 확장 - Aggregation 기반 페이징 처리",
        "link": "https://cheese10yun.github.io/spring-data-mongo-repository-2/",
        "pubDate": "2025-01-29T16:19:23.000Z",
        "content": "<p>기존 <a href=\"https://cheese10yun.github.io/spring-data-mongo-repository/\">Spring Data MongoDB Repository 확장</a> 포스팅에서는 복잡한 쿼리 로직을 분리하여 상위 레벨에서는 구현 디테일을 신경 쓰지 않고, 데이터 접근 로직을 단순화할 수 있는 방법을 다루었습니다.</p><p>특히, <strong>Slice 기반 및 Page 기반의 페이징 처리</strong>를 적용하여 다음과 같은 장점을 얻을 수 있었습니다:</p><ul><li><strong>Page 기반 페이징 처리</strong>:<ul><li>카운트 쿼리와 컨텐츠 쿼리를 <strong>병렬로 실행</strong>하여 성능 최적화</li></ul></li><li><strong>Slice 기반 페이징 처리</strong>:<ul><li><code>hasNext</code> 처리를 위임하여 반복적인 코드 없이 페이징을 처리</li></ul></li></ul><p>그러나 이러한 방식은 <strong>단순히 도큐먼트 객체(<code>T</code>) 타입</strong>을 기준으로 설계되어, <strong>복잡한 데이터 변환</strong>, <strong>조인</strong>, <strong>그룹화</strong> 등 다양한 데이터 처리 작업을 다루는 데 한계가 있었습니다. 특히, <strong>프로젝션</strong>을 활용한 <strong>데이터 조회</strong>나 <strong>복잡한 쿼리</strong>는 <code>Aggregation</code>을 사용하여 해결해야 하기 때문에, <strong><code>Aggregation</code>을 기반으로 하는 페이징 처리</strong>가 필요합니다.<br>따라서, 이번 포스팅에서는 <strong><code>MongoTemplate</code>을 기반으로 <code>Aggregation</code>을 활용한 페이징 처리</strong> 방법을 확장하여 이 문제를 해결하는 방법을 다루겠습니다.</p><h2><span id=\"기존-query-기반-pagination과-slice-처리\">기존 Query 기반 Pagination과 Slice 처리</span></h2><p>기존 <code>applyPagination</code>과 <code>applySlice</code>는 <code>MongoTemplate</code>을 활용하여 <code>Query</code> 기반으로 페이징을 처리하는 방식이었습니다.</p><h3><span id=\"query-기반-pagination-및-slice-추상화\">Query 기반 Pagination 및 Slice 추상화</span></h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;S : T&gt;</span> <span class=\"title\">applyPagination</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    pageable: <span class=\"type\">Pageable</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    contentQuery: (<span class=\"type\">Query</span>)</span></span> -&gt; List&lt;S&gt;,</span><br><span class=\"line\">    countQuery: (Query) -&gt; <span class=\"built_in\">Long</span></span><br><span class=\"line\">) = runBlocking &#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> content = async &#123; contentQuery(Query().with(pageable)) &#125;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> totalCount = async &#123; countQuery(Query()) &#125;</span><br><span class=\"line\">    PageImpl(content.await(), pageable, totalCount.await())</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;S : T&gt;</span> <span class=\"title\">applySlice</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    pageable: <span class=\"type\">Pageable</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    contentQuery: (<span class=\"type\">Query</span>)</span></span> -&gt; List&lt;S&gt;</span><br><span class=\"line\">): Slice&lt;S&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> content = contentQuery(Query().with(pageable))</span><br><span class=\"line\">    <span class=\"keyword\">val</span> hasNext = content.size &gt;= pageable.pageSize</span><br><span class=\"line\">    <span class=\"keyword\">return</span> SliceImpl(content, pageable, hasNext)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h3><span id=\"사용-예시\">사용 예시</span></h3><p>기존 <code>applyPagination</code>과 <code>applySlice</code>를 활용하면 <code>MongoTemplate</code>을 사용하여 데이터를 간단하게 조회할 수 있습니다.</p><h4><span id=\"slice-조회\">Slice 조회</span></h4><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">findSlice</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    pageable: <span class=\"type\">Pageable</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    name: <span class=\"type\">String</span>?,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    email: <span class=\"type\">String</span>?,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    memberId: <span class=\"type\">String</span>?</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">)</span></span>: Slice&lt;Member&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> criteria = Criteria()</span><br><span class=\"line\">        .apply &#123;</span><br><span class=\"line\">            name?.let &#123; <span class=\"keyword\">this</span>.and(<span class=\"string\">\"name\"</span>).`<span class=\"keyword\">is</span>`(it) &#125;</span><br><span class=\"line\">            email?.let &#123; <span class=\"keyword\">this</span>.and(<span class=\"string\">\"email\"</span>).`<span class=\"keyword\">is</span>`(it) &#125;</span><br><span class=\"line\">            memberId?.let &#123; <span class=\"keyword\">this</span>.and(<span class=\"string\">\"member_id\"</span>).`<span class=\"keyword\">is</span>`(it) &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> applySlice(</span><br><span class=\"line\">        pageable = pageable,</span><br><span class=\"line\">        contentQuery = &#123;</span><br><span class=\"line\">            mongoTemplate.find&lt;Member&gt;(it.addCriteria(criteria))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h4><span id=\"page-조회\">Page 조회</span></h4><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">findPage</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    pageable: <span class=\"type\">Pageable</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    name: <span class=\"type\">String</span>?,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    email: <span class=\"type\">String</span>?,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    memberId: <span class=\"type\">String</span>?</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">)</span></span>: Page&lt;Member&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> criteria = Criteria().apply &#123;</span><br><span class=\"line\">        name?.let &#123; <span class=\"keyword\">this</span>.and(<span class=\"string\">\"name\"</span>).`<span class=\"keyword\">is</span>`(it) &#125;</span><br><span class=\"line\">        email?.let &#123; <span class=\"keyword\">this</span>.and(<span class=\"string\">\"email\"</span>).`<span class=\"keyword\">is</span>`(it) &#125;</span><br><span class=\"line\">        memberId?.let &#123; <span class=\"keyword\">this</span>.and(<span class=\"string\">\"member_id\"</span>).`<span class=\"keyword\">is</span>`(it) &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> applyPagination(</span><br><span class=\"line\">        pageable = pageable,</span><br><span class=\"line\">        contentQuery = &#123; mongoTemplate.find&lt;Member&gt;(it.addCriteria(criteria)) &#125;,</span><br><span class=\"line\">        countQuery = &#123; mongoTemplate.count(it.addCriteria(criteria), documentClass) &#125;</span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>이 방식은 기본적인 도큐먼트(<code>T</code>) 조회에는 적합 하지만, 프로젝션을 활용한 데이터 조회에는 적용할 수 없는 한계가 있습니다.</p><h2><span id=\"aggregation을-활용한-projection-및-pagination-확장\">Aggregation을 활용한 Projection 및 Pagination 확장</span></h2><p>MongoDB에서는 <strong>Aggregation</strong>을 활용하여 특정 필드만 선택하거나, 데이터를 변환하는 <strong>프로젝션</strong> 외에도, <strong>조인(<code>$lookup</code>)</strong>, <strong>그룹화(<code>$group</code>)</strong>, <strong>집계(<code>$count</code>)</strong>, <strong>정렬(<code>$sort</code>)</strong> 등 다양한 작업을 수행할 수 있습니다. 이러한 복잡한 데이터 처리 작업을 효율적으로 다루기 위해서는 <strong>Aggregation</strong> 기반의 페이징을 활용하는 것이 필요합니다. 이 방식은 기존 <code>Query</code> 기반 페이징 처리 방식에 비해 더 유연하고 강력한 쿼리 작성이 가능하며, 복잡한 데이터 변환 및 집계도 손쉽게 처리할 수 있습니다.</p><h3><span id=\"aggregation-기반-pagination-및-slice-추상화-코드-설명\">Aggregation 기반 Pagination 및 Slice 추상화 코드 설명</span></h3><p>이 두 메서드는 MongoDB에서 <strong>Aggregation</strong>을 사용하여 페이징 처리 및 Slice 또는 Page 결과를 반환하는 기능을 제공합니다. 각 메서드는 <strong>Aggregation의 파이프라인</strong>을 동적으로 수정하고, <code>skip</code>과 <code>limit</code>을 추가하여 페이지네이션을 처리합니다.</p><h3><span id=\"applypaginationaggregation-메서드\">applyPaginationAggregation 메서드</span></h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;S&gt;</span> <span class=\"title\">applyPaginationAggregation</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    pageable: <span class=\"type\">Pageable</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    contentAggregation: <span class=\"type\">Aggregation</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    countAggregation: <span class=\"type\">Aggregation</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    contentQuery: (<span class=\"type\">Aggregation</span>)</span></span> -&gt; AggregationResults&lt;S&gt;,</span><br><span class=\"line\">    countQuery: (Aggregation) -&gt; AggregationResults&lt;MongoCount&gt;</span><br><span class=\"line\">): PageImpl&lt;S&gt; = runBlocking &#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> skip = pageable.pageNumber * pageable.pageSize</span><br><span class=\"line\">    <span class=\"keyword\">val</span> limit = pageable.pageSize</span><br><span class=\"line\"></span><br><span class=\"line\">    contentAggregation.pipeline.apply &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.add(Aggregation.skip(skip.toLong()))</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.add(Aggregation.limit(limit.toLong()))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    countAggregation.pipeline.apply &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.add(Aggregation.count().`<span class=\"keyword\">as</span>`(<span class=\"string\">\"count\"</span>))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Perform queries asynchronously</span></span><br><span class=\"line\">    <span class=\"keyword\">val</span> contentDeferred = async &#123; contentQuery(contentAggregation) &#125;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> countDeferred = async &#123; countQuery(countAggregation) &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">val</span> content = contentDeferred.await().mappedResults</span><br><span class=\"line\">    <span class=\"keyword\">val</span> totalCount = countDeferred.await().uniqueMappedResult?.count ?: <span class=\"number\">0</span>L</span><br><span class=\"line\"></span><br><span class=\"line\">    PageImpl(content, pageable, totalCount)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h3><span id=\"설명\">설명</span></h3><ol><li><strong><code>contentAggregation</code></strong>:<ul><li>페이지네이션을 적용하기 위해 <code>skip</code>과 <code>limit</code>을 <code>contentAggregation</code>에 추가합니다. <code>skip</code>은 현재 페이지의 첫 번째 항목부터 건너뛸 수 있도록 하며, <code>limit</code>은 페이지당 보여줄 항목의 개수를 설정합니다.</li></ul></li><li><strong><code>countAggregation</code></strong>:<ul><li>카운트 쿼리를 처리하기 위해 <code>countAggregation</code>에서 <code>$count</code>를 사용하여 총 항목 수를 계산합니다. 이 단계에서는 <code>skip</code>과 <code>limit</code>을 적용하지 않고, 전체 항목 수만 계산합니다.</li></ul></li><li><strong><code>runBlocking</code></strong>:<ul><li>비동기 처리를 위해 <code>runBlocking</code>을 사용하여 <code>contentQuery</code>와 <code>countQuery</code>를 동시에 실행합니다. 이렇게 함으로써 <strong>페이징 처리 쿼리</strong>와 <strong>카운트 쿼리</strong>를 병렬로 실행하여 성능을 최적화합니다.</li></ul></li><li><strong>쿼리 실행</strong>:<ul><li><strong><code>contentQuery(contentAggregation)</code></strong>: <code>contentAggregation</code>을 기반으로 데이터를 조회합니다.</li><li><strong><code>countQuery(countAggregation)</code></strong>: <code>countAggregation</code>을 기반으로 총 개수를 조회합니다.</li></ul></li><li><strong>응답 생성</strong>:<ul><li><strong><code>content</code></strong>: 페이징된 결과 목록.</li><li><strong><code>totalCount</code></strong>: 전체 항목 수.</li><li><code>PageImpl</code> 객체를 생성하여 결과를 반환합니다.</li></ul></li></ol><h3><span id=\"사용된-mongodb-쿼리\">사용된 MongoDB 쿼리</span></h3><h4><span id=\"페이징-쿼리\">페이징 쿼리</span></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.members.aggregate([</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;$match&quot;: &#123;</span><br><span class=\"line\">      &quot;member_id&quot;: &quot;memberId&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;$project&quot;: &#123;</span><br><span class=\"line\">      &quot;name&quot;: 1.0,</span><br><span class=\"line\">      &quot;email&quot;: 1.0</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;$skip&quot;: 0.0</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;$limit&quot;: 10.0</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">])</span><br></pre></td></tr></table></figure><h4><span id=\"카운트-쿼리\">카운트 쿼리</span></h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.members.aggregate([</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;$match&quot;: &#123;</span><br><span class=\"line\">      &quot;member_id&quot;: &quot;memberId&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;$count&quot;: &quot;count&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">])</span><br></pre></td></tr></table></figure><p>이 두 쿼리는 각각 페이징 처리된 결과와 전체 항목 수를 계산하는 쿼리입니다. <code>contentAggregation</code>에서는 <code>skip</code>과 <code>limit</code>을 적용하여 데이터를 제한하고, <code>countAggregation</code>에서는 총 항목 수를 계산합니다.</p><h3><span id=\"applysliceaggregation-메서드\">applySliceAggregation 메서드</span></h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;S&gt;</span> <span class=\"title\">applySliceAggregation</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    pageable: <span class=\"type\">Pageable</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    contentAggregation: <span class=\"type\">Aggregation</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    contentQuery: (<span class=\"type\">Aggregation</span>)</span></span> -&gt; AggregationResults&lt;S&gt;</span><br><span class=\"line\">): Slice&lt;S&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> skip = pageable.pageNumber * pageable.pageSize</span><br><span class=\"line\">    <span class=\"keyword\">val</span> limit = pageable.pageSize</span><br><span class=\"line\">   contentAggregation.pipeline.apply &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.add(Aggregation.skip(skip.toLong()))</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.add(Aggregation.limit(limit.toLong()))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   <span class=\"keyword\">val</span> results = contentQuery(contentAggregation)</span><br><span class=\"line\">    <span class=\"keyword\">val</span> content = results.mappedResults</span><br><span class=\"line\">    <span class=\"keyword\">val</span> hasNext = content.size &gt;= pageable.pageSize</span><br><span class=\"line\">    <span class=\"keyword\">return</span> SliceImpl(content, pageable, hasNext)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h3><span id=\"설명\"><strong>설명</strong>:</span></h3><ol><li><strong><code>contentAggregation</code></strong>:<ul><li><strong><code>contentAggregation</code></strong> 는 사용자가 제공한 Aggregation 객체입니다. 이 객체에는 <code>$match</code>, <code>$project</code>와 같은 데이터 변환 및 필터링 로직이 포함됩니다.</li><li><code>contentAggregation</code>에 <strong><code>skip</code></strong> 과 <strong><code>limit</code></strong> 을 추가하여 페이징을 처리합니다. 이를 통해 주어진 <code>pageable</code>에 맞게 데이터를 조회할 수 있습니다.</li></ul></li><li><strong><code>contentQuery</code></strong>:<ul><li><code>contentAggregation</code>을 기반으로 데이터를 조회하는 <code>contentQuery</code> 함수입니다. 이 함수는 <code>Aggregation</code>을 받아서 <code>mongoTemplate.aggregate</code>를 사용해 데이터를 가져옵니다.</li></ul></li><li><strong>쿼리 실행</strong>:<ul><li><code>contentQuery(contentAggregation)</code>를 실행하여 페이징된 결과를 가져옵니다.</li><li><code>skip</code>과 <code>limit</code>을 포함한 <code>contentAggregation</code>을 전달하여 데이터를 필터링합니다.</li></ul></li><li><strong>응답 생성</strong>:<ul><li><strong><code>content</code></strong>: 페이징된 결과.</li><li><strong><code>hasNext</code></strong>: <code>content</code>의 크기가 <code>pageable.pageSize</code>보다 크거나 같으면, 더 많은 데이터가 있다는 뜻으로 <code>hasNext</code>를 설정합니다.</li><li><code>SliceImpl</code> 객체를 생성하여 결과를 반환합니다.</li></ul></li></ol><h3><span id=\"사용된-mongodb-쿼리\">사용된 MongoDB 쿼리</span></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.members.aggregate([</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;$match&quot;: &#123;</span><br><span class=\"line\">      &quot;name&quot;: &quot;11-name&quot;,</span><br><span class=\"line\">      &quot;email&quot;: &quot;11-asd@asd.com&quot;,</span><br><span class=\"line\">      &quot;member_id&quot;: &quot;memberId&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;$project&quot;: &#123;</span><br><span class=\"line\">      &quot;name&quot;: 1.0,</span><br><span class=\"line\">      &quot;email&quot;: 1.0</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;$skip&quot;: 0.0</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;$limit&quot;: 10.0</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">])</span><br></pre></td></tr></table></figure><h3><span id=\"aggregation-기반-page-및-slice-조회-예시\">Aggregation 기반 <code>Page</code> 및 <code>Slice</code> 조회 예시</span></h3><h4><span id=\"slice-조회\">Slice 조회</span></h4><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">findSliceAggregation</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    pageable: <span class=\"type\">Pageable</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    name: <span class=\"type\">String</span>?,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    email: <span class=\"type\">String</span>?,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    memberId: <span class=\"type\">String</span>?</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">)</span></span>: Slice&lt;MemberProjection&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> match = Aggregation.match(</span><br><span class=\"line\">        Criteria().apply &#123;</span><br><span class=\"line\">            name?.let &#123; <span class=\"keyword\">this</span>.and(<span class=\"string\">\"name\"</span>).`<span class=\"keyword\">is</span>`(it) &#125;</span><br><span class=\"line\">            email?.let &#123; <span class=\"keyword\">this</span>.and(<span class=\"string\">\"email\"</span>).`<span class=\"keyword\">is</span>`(it) &#125;</span><br><span class=\"line\">            memberId?.let &#123; <span class=\"keyword\">this</span>.and(<span class=\"string\">\"member_id\"</span>).`<span class=\"keyword\">is</span>`(it) &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"keyword\">val</span> projection = Aggregation.project()</span><br><span class=\"line\">        .andInclude(<span class=\"string\">\"name\"</span>)</span><br><span class=\"line\">        .andInclude(<span class=\"string\">\"email\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.applySliceAggregation(</span><br><span class=\"line\">        pageable = pageable,</span><br><span class=\"line\">       contentAggregation = Aggregation.newAggregation(match, projection),</span><br><span class=\"line\">        contentQuery = &#123; mongoTemplate.aggregate(it, Member.DOCUMENT_NAME, MemberProjection::<span class=\"class\"><span class=\"keyword\">class</span>.<span class=\"title\">java</span>) &#125;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h4><span id=\"page-조회\">Page 조회</span></h4><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">findPageAggregation</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    pageable: <span class=\"type\">Pageable</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    name: <span class=\"type\">String</span>?,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    email: <span class=\"type\">String</span>?,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    memberId: <span class=\"type\">String</span>?</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">)</span></span>: Page&lt;MemberProjection&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">val</span> match = Aggregation.match(</span><br><span class=\"line\">        Criteria().apply &#123;</span><br><span class=\"line\">            name?.let &#123; <span class=\"keyword\">this</span>.and(<span class=\"string\">\"name\"</span>).`<span class=\"keyword\">is</span>`(it) &#125;</span><br><span class=\"line\">            email?.let &#123; <span class=\"keyword\">this</span>.and(<span class=\"string\">\"email\"</span>).`<span class=\"keyword\">is</span>`(it) &#125;</span><br><span class=\"line\">            memberId?.let &#123; <span class=\"keyword\">this</span>.and(<span class=\"string\">\"member_id\"</span>).`<span class=\"keyword\">is</span>`(it) &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    )</span><br><span class=\"line\">    <span class=\"keyword\">val</span> projection = Aggregation.project()</span><br><span class=\"line\">        .andInclude(<span class=\"string\">\"name\"</span>)</span><br><span class=\"line\">        .andInclude(<span class=\"string\">\"email\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> applyPaginationAggregation(</span><br><span class=\"line\">        pageable = pageable,</span><br><span class=\"line\">        contentAggregation = Aggregation.newAggregation(match, projection),</span><br><span class=\"line\">        countAggregation = Aggregation.newAggregation(match),</span><br><span class=\"line\">        contentQuery = &#123; mongoTemplate.aggregate(it, Member.DOCUMENT_NAME, MemberProjection::<span class=\"class\"><span class=\"keyword\">class</span>.<span class=\"title\">java</span>) &#125;,<span class=\"type\"></span></span></span><br><span class=\"line\">        countQuery = &#123; mongoTemplate.aggregate(it, Member.DOCUMENT_NAME, MongoCount::<span class=\"class\"><span class=\"keyword\">class</span>.<span class=\"title\">java</span>) &#125;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h2><span id=\"결론\"><strong>결론</strong></span></h2><ul><li>기존 <code>Query</code> 기반 페이징에서 <code>T</code> 타입 한계를 벗어나 <strong>Projection을 지원</strong>하도록 확장</li><li><strong><code>Aggregation</code>을 활용한 페이징 처리</strong>로 다양한 데이터 변환 및 성능 최적화 가능</li><li><strong>비동기(<code>async</code>) 처리로 성능 최적화</strong>하며, 코드 재사용성을 높임</li></ul><p>이제 Spring Data MongoDB에서 <strong>확장 가능한 Projection 기반 Pagination을 활용한 Repository를 구축</strong>할 수 있습니다.</p>",
        "contentSnippet": "기존 Spring Data MongoDB Repository 확장 포스팅에서는 복잡한 쿼리 로직을 분리하여 상위 레벨에서는 구현 디테일을 신경 쓰지 않고, 데이터 접근 로직을 단순화할 수 있는 방법을 다루었습니다.\n특히, Slice 기반 및 Page 기반의 페이징 처리를 적용하여 다음과 같은 장점을 얻을 수 있었습니다:\n\nPage 기반 페이징 처리:\n카운트 쿼리와 컨텐츠 쿼리를 병렬로 실행하여 성능 최적화\n\nSlice 기반 페이징 처리:\nhasNext 처리를 위임하여 반복적인 코드 없이 페이징을 처리\n\n\n그러나 이러한 방식은 단순히 도큐먼트 객체(T) 타입을 기준으로 설계되어, 복잡한 데이터 변환, 조인, 그룹화 등 다양한 데이터 처리 작업을 다루는 데 한계가 있었습니다. 특히, 프로젝션을 활용한 데이터 조회나 복잡한 쿼리는 Aggregation을 사용하여 해결해야 하기 때문에, Aggregation을 기반으로 하는 페이징 처리가 필요합니다.\n따라서, 이번 포스팅에서는 MongoTemplate을 기반으로 Aggregation을 활용한 페이징 처리 방법을 확장하여 이 문제를 해결하는 방법을 다루겠습니다.\n기존 Query 기반 Pagination과 Slice 처리\n기존 applyPagination과 applySlice는 MongoTemplate을 활용하여 Query 기반으로 페이징을 처리하는 방식이었습니다.\nQuery 기반 Pagination 및 Slice 추상화\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\nprotected fun <S : T> applyPagination(\n    pageable: Pageable,\n    contentQuery: (Query) -> List<S>,\n    countQuery: (Query) -> Long\n) = runBlocking {\n    val content = async { contentQuery(Query().with(pageable)) }\n    val totalCount = async { countQuery(Query()) }\n    PageImpl(content.await(), pageable, totalCount.await())\n}\n\nprotected fun <S : T> applySlice(\n    pageable: Pageable,\n    contentQuery: (Query) -> List<S>\n): Slice<S> {\n    val content = contentQuery(Query().with(pageable))\n    val hasNext = content.size >= pageable.pageSize\n    return SliceImpl(content, pageable, hasNext)\n}\n\n\n사용 예시\n기존 applyPagination과 applySlice를 활용하면 MongoTemplate을 사용하여 데이터를 간단하게 조회할 수 있습니다.\nSlice 조회\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\noverride fun findSlice(\n    pageable: Pageable,\n    name: String?,\n    email: String?,\n    memberId: String?\n): Slice<Member> {\n    val criteria = Criteria()\n        .apply {\n            name?.let { this.and(\"name\").`is`(it) }\n            email?.let { this.and(\"email\").`is`(it) }\n            memberId?.let { this.and(\"member_id\").`is`(it) }\n        }\n\n    return applySlice(\n        pageable = pageable,\n        contentQuery = {\n            mongoTemplate.find<Member>(it.addCriteria(criteria))\n        }\n    )\n}\n\n\nPage 조회\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\noverride fun findPage(\n    pageable: Pageable,\n    name: String?,\n    email: String?,\n    memberId: String?\n): Page<Member> {\n    val criteria = Criteria().apply {\n        name?.let { this.and(\"name\").`is`(it) }\n        email?.let { this.and(\"email\").`is`(it) }\n        memberId?.let { this.and(\"member_id\").`is`(it) }\n    }\n\n    return applyPagination(\n        pageable = pageable,\n        contentQuery = { mongoTemplate.find<Member>(it.addCriteria(criteria)) },\n        countQuery = { mongoTemplate.count(it.addCriteria(criteria), documentClass) }\n    )\n}\n\n\n이 방식은 기본적인 도큐먼트(T) 조회에는 적합 하지만, 프로젝션을 활용한 데이터 조회에는 적용할 수 없는 한계가 있습니다.\nAggregation을 활용한 Projection 및 Pagination 확장\nMongoDB에서는 Aggregation을 활용하여 특정 필드만 선택하거나, 데이터를 변환하는 프로젝션 외에도, 조인($lookup), 그룹화($group), 집계($count), 정렬($sort) 등 다양한 작업을 수행할 수 있습니다. 이러한 복잡한 데이터 처리 작업을 효율적으로 다루기 위해서는 Aggregation 기반의 페이징을 활용하는 것이 필요합니다. 이 방식은 기존 Query 기반 페이징 처리 방식에 비해 더 유연하고 강력한 쿼리 작성이 가능하며, 복잡한 데이터 변환 및 집계도 손쉽게 처리할 수 있습니다.\nAggregation 기반 Pagination 및 Slice 추상화 코드 설명\n이 두 메서드는 MongoDB에서 Aggregation을 사용하여 페이징 처리 및 Slice 또는 Page 결과를 반환하는 기능을 제공합니다. 각 메서드는 Aggregation의 파이프라인을 동적으로 수정하고, skip과 limit을 추가하여 페이지네이션을 처리합니다.\napplyPaginationAggregation 메서드\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\nprotected fun <S> applyPaginationAggregation(\n    pageable: Pageable,\n    contentAggregation: Aggregation,\n    countAggregation: Aggregation,\n    contentQuery: (Aggregation) -> AggregationResults<S>,\n    countQuery: (Aggregation) -> AggregationResults<MongoCount>\n): PageImpl<S> = runBlocking {\n    val skip = pageable.pageNumber * pageable.pageSize\n    val limit = pageable.pageSize\n\n    contentAggregation.pipeline.apply {\n        this.add(Aggregation.skip(skip.toLong()))\n        this.add(Aggregation.limit(limit.toLong()))\n    }\n\n    countAggregation.pipeline.apply {\n        this.add(Aggregation.count().`as`(\"count\"))\n    }\n\n    // Perform queries asynchronously\n    val contentDeferred = async { contentQuery(contentAggregation) }\n    val countDeferred = async { countQuery(countAggregation) }\n\n    val content = contentDeferred.await().mappedResults\n    val totalCount = countDeferred.await().uniqueMappedResult?.count ?: 0L\n\n    PageImpl(content, pageable, totalCount)\n}\n\n\n설명\n\ncontentAggregation:\n페이지네이션을 적용하기 위해 skip과 limit을 contentAggregation에 추가합니다. skip은 현재 페이지의 첫 번째 항목부터 건너뛸 수 있도록 하며, limit은 페이지당 보여줄 항목의 개수를 설정합니다.\n\ncountAggregation:\n카운트 쿼리를 처리하기 위해 countAggregation에서 $count를 사용하여 총 항목 수를 계산합니다. 이 단계에서는 skip과 limit을 적용하지 않고, 전체 항목 수만 계산합니다.\n\nrunBlocking:\n비동기 처리를 위해 runBlocking을 사용하여 contentQuery와 countQuery를 동시에 실행합니다. 이렇게 함으로써 페이징 처리 쿼리와 카운트 쿼리를 병렬로 실행하여 성능을 최적화합니다.\n\n쿼리 실행:\ncontentQuery(contentAggregation): contentAggregation을 기반으로 데이터를 조회합니다.\ncountQuery(countAggregation): countAggregation을 기반으로 총 개수를 조회합니다.\n\n응답 생성:\ncontent: 페이징된 결과 목록.\ntotalCount: 전체 항목 수.\nPageImpl 객체를 생성하여 결과를 반환합니다.\n\n\n사용된 MongoDB 쿼리\n페이징 쿼리\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\ndb.members.aggregate([\n  {\n    \"$match\": {\n      \"member_id\": \"memberId\"\n    }\n  },\n  {\n    \"$project\": {\n      \"name\": 1.0,\n      \"email\": 1.0\n    }\n  },\n  {\n    \"$skip\": 0.0\n  },\n  {\n    \"$limit\": 10.0\n  }\n])\n\n\n카운트 쿼리\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\ndb.members.aggregate([\n  {\n    \"$match\": {\n      \"member_id\": \"memberId\"\n    }\n  },\n  {\n    \"$count\": \"count\"\n  }\n])\n\n\n이 두 쿼리는 각각 페이징 처리된 결과와 전체 항목 수를 계산하는 쿼리입니다. contentAggregation에서는 skip과 limit을 적용하여 데이터를 제한하고, countAggregation에서는 총 항목 수를 계산합니다.\napplySliceAggregation 메서드\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\nprotected fun <S> applySliceAggregation(\n    pageable: Pageable,\n    contentAggregation: Aggregation,\n    contentQuery: (Aggregation) -> AggregationResults<S>\n): Slice<S> {\n    val skip = pageable.pageNumber * pageable.pageSize\n    val limit = pageable.pageSize\n   contentAggregation.pipeline.apply {\n        this.add(Aggregation.skip(skip.toLong()))\n        this.add(Aggregation.limit(limit.toLong()))\n    }\n   val results = contentQuery(contentAggregation)\n    val content = results.mappedResults\n    val hasNext = content.size >= pageable.pageSize\n    return SliceImpl(content, pageable, hasNext)\n}\n\n\n설명:\n\ncontentAggregation:\ncontentAggregation 는 사용자가 제공한 Aggregation 객체입니다. 이 객체에는 $match, $project와 같은 데이터 변환 및 필터링 로직이 포함됩니다.\ncontentAggregation에 skip 과 limit 을 추가하여 페이징을 처리합니다. 이를 통해 주어진 pageable에 맞게 데이터를 조회할 수 있습니다.\n\ncontentQuery:\ncontentAggregation을 기반으로 데이터를 조회하는 contentQuery 함수입니다. 이 함수는 Aggregation을 받아서 mongoTemplate.aggregate를 사용해 데이터를 가져옵니다.\n\n쿼리 실행:\ncontentQuery(contentAggregation)를 실행하여 페이징된 결과를 가져옵니다.\nskip과 limit을 포함한 contentAggregation을 전달하여 데이터를 필터링합니다.\n\n응답 생성:\ncontent: 페이징된 결과.\nhasNext: content의 크기가 pageable.pageSize보다 크거나 같으면, 더 많은 데이터가 있다는 뜻으로 hasNext를 설정합니다.\nSliceImpl 객체를 생성하여 결과를 반환합니다.\n\n\n사용된 MongoDB 쿼리\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\ndb.members.aggregate([\n  {\n    \"$match\": {\n      \"name\": \"11-name\",\n      \"email\": \"11-asd@asd.com\",\n      \"member_id\": \"memberId\"\n    }\n  },\n  {\n    \"$project\": {\n      \"name\": 1.0,\n      \"email\": 1.0\n    }\n  },\n  {\n    \"$skip\": 0.0\n  },\n  {\n    \"$limit\": 10.0\n  }\n])\n\n\nAggregation 기반 Page 및 Slice 조회 예시\nSlice 조회\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\noverride fun findSliceAggregation(\n    pageable: Pageable,\n    name: String?,\n    email: String?,\n    memberId: String?\n): Slice<MemberProjection> {\n    val match = Aggregation.match(\n        Criteria().apply {\n            name?.let { this.and(\"name\").`is`(it) }\n            email?.let { this.and(\"email\").`is`(it) }\n            memberId?.let { this.and(\"member_id\").`is`(it) }\n        }\n    )\n    val projection = Aggregation.project()\n        .andInclude(\"name\")\n        .andInclude(\"email\")\n\n    return this.applySliceAggregation(\n        pageable = pageable,\n       contentAggregation = Aggregation.newAggregation(match, projection),\n        contentQuery = { mongoTemplate.aggregate(it, Member.DOCUMENT_NAME, MemberProjection::class.java) }\n    )\n}\n\n\nPage 조회\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\noverride fun findPageAggregation(\n    pageable: Pageable,\n    name: String?,\n    email: String?,\n    memberId: String?\n): Page<MemberProjection> {\n\n    val match = Aggregation.match(\n        Criteria().apply {\n            name?.let { this.and(\"name\").`is`(it) }\n            email?.let { this.and(\"email\").`is`(it) }\n            memberId?.let { this.and(\"member_id\").`is`(it) }\n        }\n    )\n    val projection = Aggregation.project()\n        .andInclude(\"name\")\n        .andInclude(\"email\")\n\n    return applyPaginationAggregation(\n        pageable = pageable,\n        contentAggregation = Aggregation.newAggregation(match, projection),\n        countAggregation = Aggregation.newAggregation(match),\n        contentQuery = { mongoTemplate.aggregate(it, Member.DOCUMENT_NAME, MemberProjection::class.java) },\n        countQuery = { mongoTemplate.aggregate(it, Member.DOCUMENT_NAME, MongoCount::class.java) }\n    )\n}\n\n\n결론\n\n기존 Query 기반 페이징에서 T 타입 한계를 벗어나 Projection을 지원하도록 확장\nAggregation을 활용한 페이징 처리로 다양한 데이터 변환 및 성능 최적화 가능\n비동기(async) 처리로 성능 최적화하며, 코드 재사용성을 높임\n\n이제 Spring Data MongoDB에서 확장 가능한 Projection 기반 Pagination을 활용한 Repository를 구축할 수 있습니다.",
        "summary": "\n    \n      \n      \n        <p>기존 <a href=\"https://cheese10yun.github.io/spring-data-mongo-repository/\">Spring Data MongoDB Repository 확장</a> 포스팅에서는 복잡한 쿼리 로직을 분리하여 상위 \n      \n    \n    ",
        "id": "https://cheese10yun.github.io/spring-data-mongo-repository-2/",
        "isoDate": "2025-01-29T16:19:23.000Z"
      }
    ]
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김상훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": [
      {
        "title": "리눅스 데스크탑 적응을 위한 리눅스 서버",
        "link": "https://elky84.github.io/2025/01/26/linux_desktop/",
        "pubDate": "Sun, 26 Jan 2025 00:00:00 +0000",
        "content": "<h1 id=\"개요\">개요</h1>\n\n<p>리눅스는 서버로써는 메이저다.</p>\n\n<p>그에 비해서 데스크탑으로는 마이너인데, 여러가지 이유가 있겠지만 나의 경우에도 불편함을 이겨내는 구간과, 같은 일을 더 능숙하게 처리할 수 있는 환경이 있는 문제로 적응이 쉽지 않았다.</p>\n\n<p>그래서 오히려 리눅스 서버에 익숙해진 시점 이후에 리눅스 데스크탑을 더 잘 쓸 수 있었는데, 아마도 대부분 맥이나 윈도우와는 다르게 리눅스는 <strong>“굳이”</strong> 라는 생각이 들 수 있을 거라고 생각한다.</p>\n\n<p>나의 경험상, 그리고 나의 주변 동료들이 리눅스 데스크탑을 쓰게 된 방법 중 하나로 리눅스 서버에 익숙해지기를 달성한 뒤에 넘어가면 좋을 듯 해서 몇가지 방법을 추천한다.</p>\n\n<h1 id=\"라즈베리-파이\">라즈베리 파이</h1>\n<p>지금은 가격도 많이 오르고, 보급도 애매하며 가성비도 애매해져버렸고, 특히 몇년 지난 미니 PC 중고 가격을 감안하면 더더욱 애매하지만 한 시대를 풍미했다고 봐도 무방한 제품이다</p>\n\n<p>아주 저렴한 가성비로 미니 게임기 혹은 휴대용 게임기로 커스터마이징 하는 걸로도 인기를 끌었지만, ARM 미니 PC로 ARM 기반이라 x86 기반과는 달랐지만 서버에 익숙해지기엔 충분했다.</p>\n\n<p>나는 라즈베리 파이4쯤 되면 데스크탑으로 쓸만하지 않을까라는 기대를 했지만 아쉽게도 그정도의 스펙에 다가가지는 못했다.</p>\n\n<p>여하튼 ARM 기반이다 보니 초반에는 여러가지 호환성 이슈가 있었는데 라즈베리파이와 ARM 지원이 활성화 되면서 많이 해소되었고, 홈 서버로 운용하기에 (성능이 많이 아쉽지만) 충분한 상태라고 볼 수 있겠다.</p>\n\n<h1 id=\"맥-미니\">맥 미니</h1>\n\n<p>x86시절만해도 맥 미니에 윈도우 깔아서 쓰는 사람도 적지 않았다.</p>\n\n<p>해킨토시로 맥을 설치해서 쓰는 경우도 종종 봤고…  파코즈 쪽에서는 이렇게 하는 것이 유행처럼 번졌던 시기도 있기도 했다.</p>\n\n<p>여하튼 맥 미니는 M1으로 오면서 확장성은 떨어졌지만 가성비가 좋아졌다.</p>\n\n<p>특히 이번 M4 맥미니는 엄청난 가성비와 높은 성능을 보여주는 상태.</p>\n\n<p>맥은 사실 리눅스가 아니지만, 윈도우를 WSL 기반으로 써오지 않았다면 리눅스 서버에서 사용 가능한 많은 메커니즘이나 bash 명령어, 쉘 기반 문화에 대한 익숙함이 생길 수 있다.</p>\n\n<p>특히 맥을 서버로 VNC가 아닌 SSH로 운용한다면 더욱 도움이 될 것이다.</p>\n\n<h1 id=\"미니-pc\">미니 PC</h1>\n\n<p>많은 종류의 미니 PC가 CentOS나 Ubuntu와 같은 메이저 리눅스와 호환 된다.</p>\n\n<p>미니 PC를 홈 서버로 쓰게 된다면 자연스레 리눅스에 대한 이해도가 높아질 수 있다.</p>\n\n<h1 id=\"docker\">Docker</h1>\n\n<p>Docker를 쓰면 운용이 편한 대신 추상화 된 레이어에 대한 이해도가 떨어질 수 있다.</p>\n\n<p>그렇다고 안 쓰기에는 Docker는 사실상 배포 및 운용 환경에서 가장 메이저한 선택지로 떠올랐는데 안쓰고 운용하기는 쉽지 않을 수 있다.</p>\n\n<p>사실 리눅스 서버를 어떤 용도로 다루는 가가 더 중요하긴 하지만, 기본적으로 단순히 서비스 가동용으로 쓴다면 리눅스 이해도가 많이 높아지지 않을 수 있다.</p>\n\n<p>그래서 이야기 하고자 하는 것은 Docker 사용의 유무보다, 많이 문제를 만드는 것이 중요하다.</p>\n\n<p>이를 해결하는 과정에서 다양한 리눅스 명령어와 쉘 기반 문화에 익숙해지면 자연스레 리눅스 데스크탑을 쓸 때의 수 많은 문제를 잘 해결할 수 있는 역량을 갖추게 된다고도 볼 수 있다.</p>\n\n<h1 id=\"마치며\">마치며</h1>\n\n<p>사실 리눅스 데스크탑을 꼭 쓸 필요는 없다.</p>\n\n<p>하지만 추상화가 많이 이뤄진 지금 시기에도 수 많은 이슈를 원인을 파악하고 해결 할 때  리눅스 이해도는 중요하다.</p>\n\n<p>사실 꼭 리눅스가 아니더라도 OS의 원리나 메커니즘에 대한 이해가 있으면 좋은데, 우리는 Linux 환경으로 서비스를 가동하는 경우가 많으니 기왕이면 Linux 이해도를 높여두는 것이 좋고, 생각보다 난제에 빠지지만 이를 해결해야 되는 상황을 자주 맞이하는 Linux Desktop으로 넘어가보면 어떨까 생각한다.</p>\n\n<p>윈도우나 맥처럼 편하게 어플리케이션 설치가 되는 환경에서, 이슈가 있거나, 정식 지원이 되지 않아서 우회해서 설치하는 과정의 경험을 겪다보면 여러가지 궁금증과 동기부여가 될 수 있기 때문인데, 꼭 나와 같은 방식이 아니더라도 리눅스 데스크탑을 한번쯤 써보는 건 어떨까?</p>\n",
        "contentSnippet": "개요\n리눅스는 서버로써는 메이저다.\n그에 비해서 데스크탑으로는 마이너인데, 여러가지 이유가 있겠지만 나의 경우에도 불편함을 이겨내는 구간과, 같은 일을 더 능숙하게 처리할 수 있는 환경이 있는 문제로 적응이 쉽지 않았다.\n그래서 오히려 리눅스 서버에 익숙해진 시점 이후에 리눅스 데스크탑을 더 잘 쓸 수 있었는데, 아마도 대부분 맥이나 윈도우와는 다르게 리눅스는 “굳이” 라는 생각이 들 수 있을 거라고 생각한다.\n나의 경험상, 그리고 나의 주변 동료들이 리눅스 데스크탑을 쓰게 된 방법 중 하나로 리눅스 서버에 익숙해지기를 달성한 뒤에 넘어가면 좋을 듯 해서 몇가지 방법을 추천한다.\n라즈베리 파이\n지금은 가격도 많이 오르고, 보급도 애매하며 가성비도 애매해져버렸고, 특히 몇년 지난 미니 PC 중고 가격을 감안하면 더더욱 애매하지만 한 시대를 풍미했다고 봐도 무방한 제품이다\n아주 저렴한 가성비로 미니 게임기 혹은 휴대용 게임기로 커스터마이징 하는 걸로도 인기를 끌었지만, ARM 미니 PC로 ARM 기반이라 x86 기반과는 달랐지만 서버에 익숙해지기엔 충분했다.\n나는 라즈베리 파이4쯤 되면 데스크탑으로 쓸만하지 않을까라는 기대를 했지만 아쉽게도 그정도의 스펙에 다가가지는 못했다.\n여하튼 ARM 기반이다 보니 초반에는 여러가지 호환성 이슈가 있었는데 라즈베리파이와 ARM 지원이 활성화 되면서 많이 해소되었고, 홈 서버로 운용하기에 (성능이 많이 아쉽지만) 충분한 상태라고 볼 수 있겠다.\n맥 미니\nx86시절만해도 맥 미니에 윈도우 깔아서 쓰는 사람도 적지 않았다.\n해킨토시로 맥을 설치해서 쓰는 경우도 종종 봤고…  파코즈 쪽에서는 이렇게 하는 것이 유행처럼 번졌던 시기도 있기도 했다.\n여하튼 맥 미니는 M1으로 오면서 확장성은 떨어졌지만 가성비가 좋아졌다.\n특히 이번 M4 맥미니는 엄청난 가성비와 높은 성능을 보여주는 상태.\n맥은 사실 리눅스가 아니지만, 윈도우를 WSL 기반으로 써오지 않았다면 리눅스 서버에서 사용 가능한 많은 메커니즘이나 bash 명령어, 쉘 기반 문화에 대한 익숙함이 생길 수 있다.\n특히 맥을 서버로 VNC가 아닌 SSH로 운용한다면 더욱 도움이 될 것이다.\n미니 PC\n많은 종류의 미니 PC가 CentOS나 Ubuntu와 같은 메이저 리눅스와 호환 된다.\n미니 PC를 홈 서버로 쓰게 된다면 자연스레 리눅스에 대한 이해도가 높아질 수 있다.\nDocker\nDocker를 쓰면 운용이 편한 대신 추상화 된 레이어에 대한 이해도가 떨어질 수 있다.\n그렇다고 안 쓰기에는 Docker는 사실상 배포 및 운용 환경에서 가장 메이저한 선택지로 떠올랐는데 안쓰고 운용하기는 쉽지 않을 수 있다.\n사실 리눅스 서버를 어떤 용도로 다루는 가가 더 중요하긴 하지만, 기본적으로 단순히 서비스 가동용으로 쓴다면 리눅스 이해도가 많이 높아지지 않을 수 있다.\n그래서 이야기 하고자 하는 것은 Docker 사용의 유무보다, 많이 문제를 만드는 것이 중요하다.\n이를 해결하는 과정에서 다양한 리눅스 명령어와 쉘 기반 문화에 익숙해지면 자연스레 리눅스 데스크탑을 쓸 때의 수 많은 문제를 잘 해결할 수 있는 역량을 갖추게 된다고도 볼 수 있다.\n마치며\n사실 리눅스 데스크탑을 꼭 쓸 필요는 없다.\n하지만 추상화가 많이 이뤄진 지금 시기에도 수 많은 이슈를 원인을 파악하고 해결 할 때  리눅스 이해도는 중요하다.\n사실 꼭 리눅스가 아니더라도 OS의 원리나 메커니즘에 대한 이해가 있으면 좋은데, 우리는 Linux 환경으로 서비스를 가동하는 경우가 많으니 기왕이면 Linux 이해도를 높여두는 것이 좋고, 생각보다 난제에 빠지지만 이를 해결해야 되는 상황을 자주 맞이하는 Linux Desktop으로 넘어가보면 어떨까 생각한다.\n윈도우나 맥처럼 편하게 어플리케이션 설치가 되는 환경에서, 이슈가 있거나, 정식 지원이 되지 않아서 우회해서 설치하는 과정의 경험을 겪다보면 여러가지 궁금증과 동기부여가 될 수 있기 때문인데, 꼭 나와 같은 방식이 아니더라도 리눅스 데스크탑을 한번쯤 써보는 건 어떨까?",
        "guid": "https://elky84.github.io/2025/01/26/linux_desktop/",
        "categories": [
          "Windows",
          "Linux",
          "OS",
          "OS"
        ],
        "isoDate": "2025-01-26T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": [
      {
        "title": "USB를 이용한 전원 공급 (1) - USB BC",
        "link": "https://blog.seulgi.kim/2025/01/usb-1-usb-bc.html",
        "pubDate": "2025-01-26T16:29:00.003Z",
        "author": "Seulgi Kim",
        "summary": "USB는 데이터 전송을 목적으로 설계되었지만, 전원 공급 기능도 포함하고 있다. 이는 USB로 연결된 간단한 저전력 기기를 동작시키기 위한 것이다. 그래서 USB 2.0에서는 5V 전압과 0.5A의 전류를, USB 3.2에서는 5V 전압과 0.9A의 전류 공급이 가능하다. 하지만 이 스펙은 어디까지나 USB를 통한 데이터 통신을 하는 데 필요한 디바이스를 동작시키기 위함이지, USB를 전원 공급을 위해 이용하려는 목적은 아니었다. 따라서 저전력 기기가 아닌 외장 하드 같은 디바이스는 별도의 전원 공급을 필요로 했고, USB를 통한 전원 충전은 USB가 본래 의도했던 기능이 아닌 일종의 부작용에 가까운 일이었다.\n\n하지만 iPod을 비롯한 많은 MP3 플레이어나 PMP 플레이어들이 이를 이용한 충전 기능을 ",
        "id": "tag:blogger.com,1999:blog-5754933877504806384.post-4520463327671374095",
        "isoDate": "2025-01-26T16:29:00.003Z"
      }
    ]
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕홍",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": [
      {
        "creator": "고명환",
        "title": "희망리턴패키지 사업계획서 작성 방법 및 사례 2 - 소상공인",
        "link": "https://brunch.co.kr/@@LOc/261",
        "pubDate": "Fri, 24 Jan 2025 01:46:57 GMT",
        "author": "고명환",
        "content": "희망리턴패키지 사업은 소상공인의 재창업 및 경영개선을 위한 사업으로 소상공인과 관련된 정부지원사업 중 가장 많은 사업화 자금이 지원됩니다. 소상공인 분들이 평소에 사업계획서를 작성할 일이 없어서 신청에 애로사항이 있기 때문에 이를 조금이나마 도움을 드리고자 사례를 들여서 작성 방법을 설명드리겠습니다. 2번째 목차를 설명하는 포스팅으로 이 전에 포스팅을 먼저<img src= \"https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2FLOc%2Fimage%2FZYLUskkbBOUvz7rmTRqb7mn4e_Y.jpg\" width=\"500\" />",
        "contentSnippet": "희망리턴패키지 사업은 소상공인의 재창업 및 경영개선을 위한 사업으로 소상공인과 관련된 정부지원사업 중 가장 많은 사업화 자금이 지원됩니다. 소상공인 분들이 평소에 사업계획서를 작성할 일이 없어서 신청에 애로사항이 있기 때문에 이를 조금이나마 도움을 드리고자 사례를 들여서 작성 방법을 설명드리겠습니다. 2번째 목차를 설명하는 포스팅으로 이 전에 포스팅을 먼저",
        "guid": "https://brunch.co.kr/@@LOc/261",
        "isoDate": "2025-01-24T01:46:57.000Z"
      }
    ]
  },
  {
    "name": "강성희",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "윈도우 업데이트 오류 해결방법 총정리 &ndash; 중지, 멈춤, 무한로딩까지",
        "link": "http://muzbox.tistory.com/483530",
        "pubDate": "Wed, 29 Jan 2025 15:08:21 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483530#entry483530comment",
        "content": "<p data-ke-size=\"size16\">&nbsp;윈도우 업데이트 오류 때문에 고민이신가요? 업데이트 중지, 멈춤, 무한 로딩 문제까지 해결할 수 있는 종합 가이드를 제공합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"윈도우 업데이트 오류 해결방법 총정리.jpg\" data-origin-width=\"500\" data-origin-height=\"500\"><span data-url=\"https://blog.kakaocdn.net/dn/bn9s5T/btsL2BTekML/G7RGLBTEnm3955rauacSZ0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bn9s5T/btsL2BTekML/G7RGLBTEnm3955rauacSZ0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bn9s5T/btsL2BTekML/G7RGLBTEnm3955rauacSZ0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbn9s5T%2FbtsL2BTekML%2FG7RGLBTEnm3955rauacSZ0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"윈도우 업데이트 오류 해결방법 총정리 &ndash; 중지, 멈춤, 무한로딩까지\" loading=\"lazy\" width=\"500\" height=\"500\" data-filename=\"윈도우 업데이트 오류 해결방법 총정리.jpg\" data-origin-width=\"500\" data-origin-height=\"500\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;윈도우 업데이트는 시스템의 보안과 성능을 유지하는 데 필수적이지만, 예상치 못한 오류로 인해 사용자를 당황하게 만들기도 해요. 업데이트가 중간에 멈추거나, 무한 로딩 화면에서 빠져나오지 못하는 경우가 많죠. 저도 몇 번 이런 문제를 겪으면서 다양한 해결 방법을 시도해 봤는데, 다행히 효과적인 방법을 찾을 수 있었어요. 오늘은 <b>윈도우 업데이트 오류 해결 방법</b>을 단계별로 알려드릴게요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>윈도우 업데이트 오류의 주요 원인</b></span></h2>\n<p data-ke-size=\"size16\">윈도우 업데이트 오류가 발생하는 원인은 다양하지만, 대표적인 원인은 다음과 같아요.</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>인터넷 연결 문제</b> &ndash; 업데이트 도중 네트워크가 불안정하면 중단될 수 있어요.</li>\n<li><b>디스크 공간 부족</b> &ndash; 업데이트를 설치할 충분한 공간이 필요해요.</li>\n<li><b>손상된 시스템 파일</b> &ndash; 윈도우 파일이 손상되면 업데이트가 실패할 수 있어요.</li>\n<li><b>백그라운드 프로세스 충돌</b> &ndash; 백그라운드에서 실행 중인 프로그램이 업데이트를 방해할 수 있어요.</li>\n<li><b>보안 소프트웨어 간섭</b> &ndash; 바이러스 백신이 업데이트를 차단할 수도 있어요.</li>\n</ol>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>윈도우 업데이트 오류 해결 방법  </b></span></h2>\n<p data-ke-size=\"size16\">윈도우 업데이트가 멈추거나 중지될 경우, 다음 단계를 차례로 따라 해보세요.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">1. 기본적인 확인 사항 체크 ✅</span></h3>\n<p data-ke-size=\"size16\">가장 먼저 확인해야 할 사항은 다음과 같아요.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>인터넷 연결 상태 확인:</b> 유선 연결 또는 Wi-Fi 재설정</li>\n<li><b>디스크 공간 확보:</b> C 드라이브 여유 공간 20GB 이상 확보</li>\n<li><b>PC 재부팅:</b> 간단한 재부팅만으로 해결될 수도 있어요.</li>\n</ul>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">2. 윈도우 업데이트 문제 해결사 실행  ️</span></h3>\n<p data-ke-size=\"size16\">윈도우에는 자체적으로 제공하는 문제 해결 도구가 있어요.</p>\n<p data-ke-size=\"size16\"><b>방법:</b></p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>[설정] &rarr; [업데이트 및 보안] &rarr; [문제 해결] &rarr; [추가 문제 해결사]</b></li>\n<li><b>&lsquo;Windows 업데이트 문제 해결사 실행&rsquo;</b> 클릭</li>\n<li>문제를 자동으로 감지하고 수정해 줍니다.</li>\n</ol>\n<p data-ke-size=\"size16\">  <b>Tip:</b> 업데이트 문제 해결사를 실행한 후 반드시 PC를 다시 시작하세요.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">3. 업데이트 임시 파일 삭제  </span></h3>\n<p data-ke-size=\"size16\">손상된 업데이트 파일이 남아 있다면 오류가 반복될 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>방법:</b></p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>Win + R</b> 키를 누르고 <code>services.msc</code> 입력 후 실행</li>\n<li>'Windows Update' 서비스를 중지</li>\n<li><code>C:\\Windows\\SoftwareDistribution</code> 폴더로 이동 후 모든 파일 삭제</li>\n<li>'Windows Update' 서비스를 다시 시작</li>\n</ol>\n<p data-ke-size=\"size16\"><b>이 작업을 통해 새롭게 업데이트 파일을 다운로드할 수 있습니다.</b></p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">4. 명령 프롬프트를 통한 수동 해결 방법  </span></h3>\n<p data-ke-size=\"size16\">CMD(명령 프롬프트)를 사용해 시스템 파일을 복구하고, 업데이트 문제를 해결할 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>방법:</b></p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>검색창에 &lsquo;CMD&rsquo;를 입력한 후 관리자 권한으로 실행</b></li>\n<li>다음 명령어 입력 후 Enter&nbsp;</li>\n<li class=\"jboss-cli\"><code>sfc /scannow</code></li>\n<li>복구가 완료되면 아래 명령어도 실행\n<pre class=\"jboss-cli\"><code>dism /online /cleanup-image /restorehealth</code></pre>\n</li>\n<li>완료 후 시스템을 재부팅하고 업데이트를 다시 시도</li>\n</ol>\n<p data-ke-size=\"size16\"><b>이 방법은 시스템 파일 손상 문제를 해결하는 데 효과적이에요.</b></p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">5. 수동으로 업데이트 파일 다운로드  </span></h3>\n<p data-ke-size=\"size16\">마이크로소프트 업데이트 카탈로그를 이용하면 특정 업데이트를 직접 다운로드할 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>방법:</b></p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><a href=\"https://www.catalog.update.microsoft.com/\">Microsoft 업데이트 카탈로그</a> 방문</li>\n<li>해당 업데이트 코드(KB번호)를 검색</li>\n<li>OS에 맞는 업데이트 파일을 다운로드 후 실행</li>\n</ol>\n<p data-ke-size=\"size16\">  <b>Tip:</b> 최신 업데이트 KB번호는 윈도우 업데이트 설정에서 확인할 수 있어요.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">6. Windows Update 서비스 재설정  </span></h3>\n<p data-ke-size=\"size16\">업데이트 서비스 자체에 문제가 있다면 재설정을 진행해 보세요.</p>\n<p data-ke-size=\"size16\"><b>방법:</b></p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li>CMD(명령 프롬프트)를 관리자 권한으로 실행</li>\n<li>아래 명령어를 차례로 입력\n<pre class=\"arduino\"><code>net stop wuauserv\nnet stop bits\nnet stop cryptsvc\nnet stop msiserver</code></pre>\n</li>\n<li>업데이트 폴더 삭제\n<pre class=\"taggerscript\"><code>ren C:\\Windows\\SoftwareDistribution SoftwareDistribution.old\nren C:\\Windows\\System32\\catroot2 catroot2.old</code></pre>\n</li>\n<li>서비스를 다시 시작\n<pre class=\"dos\"><code>net start wuauserv\nnet start bits\nnet start cryptsvc\nnet start msiserver</code></pre>\n</li>\n</ol>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">7. 백신 및 방화벽 일시 중지  ️</span></h3>\n<p data-ke-size=\"size16\">일부 백신 소프트웨어가 업데이트를 차단할 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>방법:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>백신 프로그램을 일시적으로 비활성화 후 업데이트 시도</li>\n<li>윈도우 방화벽 설정에서 <code>Windows Update</code>가 차단되지 않았는지 확인</li>\n</ul>\n<p data-ke-size=\"size16\">⚠️ <b>주의:</b> 보안이 중요한 만큼, 업데이트 후 반드시 다시 활성화하세요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"722\"><span data-url=\"https://blog.kakaocdn.net/dn/CCK6k/btsL1gwjHsp/qHUW2DP8znWhKNkBtiBMuk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/CCK6k/btsL1gwjHsp/qHUW2DP8znWhKNkBtiBMuk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/CCK6k/btsL1gwjHsp/qHUW2DP8znWhKNkBtiBMuk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FCCK6k%2FbtsL1gwjHsp%2FqHUW2DP8znWhKNkBtiBMuk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"윈도우 업데이트 오류 유형별 해결 방법\" loading=\"lazy\" width=\"700\" height=\"395\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"722\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b><span style=\"color: #009a87;\">업데이트 오류 유형별 해결 방법</span></b></h2>\n<p data-ke-size=\"size16\">다양한 오류 코드가 나타날 수 있는데, 주요 오류별 해결 방법을 정리해 봤어요.</p>\n<table style=\"border-collapse: collapse; text-align: center;\" border=\"1\" cellspacing=\"0\" cellpadding=\"10\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr style=\"background-color: #f2f2f2; font-weight: bold;\">\n<th>오류 코드</th>\n<th>해결 방법</th>\n</tr>\n<tr>\n<td>0x80070002</td>\n<td>업데이트 파일 삭제 후 다시 시도</td>\n</tr>\n<tr>\n<td>0x8024a105</td>\n<td>인터넷 연결 점검 및 문제 해결사 실행</td>\n</tr>\n<tr>\n<td>0x80070020</td>\n<td>백신 비활성화 후 재시도</td>\n</tr>\n<tr>\n<td>0x800f0922</td>\n<td>시스템 파일 검사 및 복구 시도</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>마무리하며</b></span></h2>\n<p data-ke-size=\"size16\">윈도우 업데이트 오류는 누구에게나 발생할 수 있는 문제지만, 올바른 방법을 알면 쉽게 해결할 수 있어요. 위의 방법들을 하나씩 적용해 보면서 해결할 수 있을 거예요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">혹시 여전히 해결이 안 된다면, 최신 윈도우 업데이트 정보를 확인하거나 전문가의 도움을 받아보세요.</p>\n<p data-ke-size=\"size16\"><b>여러분은 윈도우 업데이트 오류를 어떻게 해결하셨나요? 댓글로 경험을 공유해 주세요!</b></p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>Q&amp;A 섹션</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q1. 윈도우 업데이트가 무한 로딩될 때 어떻게 해야 하나요?</b><br />  강제 종료 후 안전 모드에서 업데이트 파일을 삭제하고 다시 시도해 보세요.</p>\n<p data-ke-size=\"size16\"><b>Q2. 업데이트 도중 멈추는 문제를 해결하려면?</b><br />  인터넷 연결 상태를 확인하고, 문제 해결사를 실행해 보세요.</p>\n<p data-ke-size=\"size16\"><b>Q3. 업데이트 후 PC가 느려졌어요. 어떻게 해야 하나요?</b><br />  불필요한 백그라운드 프로그램을 정리하고, 디스크 정리를 실행하세요.</p>\n<p data-ke-size=\"size16\"><b>Q4. 업데이트를 수동으로 설치할 수 있나요?</b><br />  네, 마이크로소프트 업데이트 카탈로그에서 수동 다운로드가 가능합니다.</p>\n<p data-ke-size=\"size16\"><b>Q5. 업데이트 후 블루스크린이 발생하면 어떻게 해야 하나요?</b><br />  최근 설치한 업데이트를 제거하고, 복원 지점을 이용해 되돌려 보세요.</p>\n<p><textarea style=\"display: none;\">&lt;script type=\"application/ld+json\"&gt;\n  {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n      {\n        \"@type\": \"Question\",\n        \"name\": \"윈도우 업데이트가 무한 로딩될 때 어떻게 해야 하나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  강제 종료 후 안전 모드에서 업데이트 파일을 삭제하고 다시 시도해 보세요.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"업데이트 도중 멈추는 문제를 해결하려면?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  인터넷 연결 상태를 확인하고, 문제 해결사를 실행해 보세요.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"업데이트 후 PC가 느려졌어요. 어떻게 해야 하나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  불필요한 백그라운드 프로그램을 정리하고, 디스크 정리를 실행하세요.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"업데이트를 수동으로 설치할 수 있나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  네, 마이크로소프트 업데이트 카탈로그에서 수동 다운로드가 가능합니다.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"업데이트 후 블루스크린이 발생하면 어떻게 해야 하나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  최근 설치한 업데이트를 제거하고, 복원 지점을 이용해 되돌려 보세요.\"\n        }\n      }\n    ]\n  }\n&lt;/script&gt;\n</textarea></p>",
        "contentSnippet": "윈도우 업데이트 오류 때문에 고민이신가요? 업데이트 중지, 멈춤, 무한 로딩 문제까지 해결할 수 있는 종합 가이드를 제공합니다.\n\n\n \n 윈도우 업데이트는 시스템의 보안과 성능을 유지하는 데 필수적이지만, 예상치 못한 오류로 인해 사용자를 당황하게 만들기도 해요. 업데이트가 중간에 멈추거나, 무한 로딩 화면에서 빠져나오지 못하는 경우가 많죠. 저도 몇 번 이런 문제를 겪으면서 다양한 해결 방법을 시도해 봤는데, 다행히 효과적인 방법을 찾을 수 있었어요. 오늘은 윈도우 업데이트 오류 해결 방법을 단계별로 알려드릴게요.\n \n \n윈도우 업데이트 오류의 주요 원인\n윈도우 업데이트 오류가 발생하는 원인은 다양하지만, 대표적인 원인은 다음과 같아요.\n인터넷 연결 문제 – 업데이트 도중 네트워크가 불안정하면 중단될 수 있어요.\n디스크 공간 부족 – 업데이트를 설치할 충분한 공간이 필요해요.\n손상된 시스템 파일 – 윈도우 파일이 손상되면 업데이트가 실패할 수 있어요.\n백그라운드 프로세스 충돌 – 백그라운드에서 실행 중인 프로그램이 업데이트를 방해할 수 있어요.\n보안 소프트웨어 간섭 – 바이러스 백신이 업데이트를 차단할 수도 있어요.\n \n윈도우 업데이트 오류 해결 방법  \n윈도우 업데이트가 멈추거나 중지될 경우, 다음 단계를 차례로 따라 해보세요.\n1. 기본적인 확인 사항 체크 ✅\n가장 먼저 확인해야 할 사항은 다음과 같아요.\n인터넷 연결 상태 확인: 유선 연결 또는 Wi-Fi 재설정\n디스크 공간 확보: C 드라이브 여유 공간 20GB 이상 확보\nPC 재부팅: 간단한 재부팅만으로 해결될 수도 있어요.\n2. 윈도우 업데이트 문제 해결사 실행  ️\n윈도우에는 자체적으로 제공하는 문제 해결 도구가 있어요.\n방법:\n[설정] → [업데이트 및 보안] → [문제 해결] → [추가 문제 해결사]\n‘Windows 업데이트 문제 해결사 실행’ 클릭\n문제를 자동으로 감지하고 수정해 줍니다.\n  Tip: 업데이트 문제 해결사를 실행한 후 반드시 PC를 다시 시작하세요.\n3. 업데이트 임시 파일 삭제  \n손상된 업데이트 파일이 남아 있다면 오류가 반복될 수 있어요.\n방법:\nWin + R 키를 누르고 services.msc 입력 후 실행\n'Windows Update' 서비스를 중지\nC:\\Windows\\SoftwareDistribution 폴더로 이동 후 모든 파일 삭제\n'Windows Update' 서비스를 다시 시작\n이 작업을 통해 새롭게 업데이트 파일을 다운로드할 수 있습니다.\n4. 명령 프롬프트를 통한 수동 해결 방법  \nCMD(명령 프롬프트)를 사용해 시스템 파일을 복구하고, 업데이트 문제를 해결할 수 있어요.\n방법:\n검색창에 ‘CMD’를 입력한 후 관리자 권한으로 실행\n다음 명령어 입력 후 Enter \nsfc /scannow\n복구가 완료되면 아래 명령어도 실행\ndism /online /cleanup-image /restorehealth\n완료 후 시스템을 재부팅하고 업데이트를 다시 시도\n이 방법은 시스템 파일 손상 문제를 해결하는 데 효과적이에요.\n5. 수동으로 업데이트 파일 다운로드  \n마이크로소프트 업데이트 카탈로그를 이용하면 특정 업데이트를 직접 다운로드할 수 있어요.\n방법:\nMicrosoft 업데이트 카탈로그 방문\n해당 업데이트 코드(KB번호)를 검색\nOS에 맞는 업데이트 파일을 다운로드 후 실행\n  Tip: 최신 업데이트 KB번호는 윈도우 업데이트 설정에서 확인할 수 있어요.\n6. Windows Update 서비스 재설정  \n업데이트 서비스 자체에 문제가 있다면 재설정을 진행해 보세요.\n방법:\nCMD(명령 프롬프트)를 관리자 권한으로 실행\n아래 명령어를 차례로 입력\nnet stop wuauserv\nnet stop bits\nnet stop cryptsvc\nnet stop msiserver\n업데이트 폴더 삭제\nren C:\\Windows\\SoftwareDistribution SoftwareDistribution.old\nren C:\\Windows\\System32\\catroot2 catroot2.old\n서비스를 다시 시작\nnet start wuauserv\nnet start bits\nnet start cryptsvc\nnet start msiserver\n7. 백신 및 방화벽 일시 중지  ️\n일부 백신 소프트웨어가 업데이트를 차단할 수 있어요.\n방법:\n백신 프로그램을 일시적으로 비활성화 후 업데이트 시도\n윈도우 방화벽 설정에서 Windows Update가 차단되지 않았는지 확인\n⚠️ 주의: 보안이 중요한 만큼, 업데이트 후 반드시 다시 활성화하세요.\n \n\n\n \n업데이트 오류 유형별 해결 방법\n다양한 오류 코드가 나타날 수 있는데, 주요 오류별 해결 방법을 정리해 봤어요.\n오류 코드\n해결 방법\n\n\n0x80070002\n업데이트 파일 삭제 후 다시 시도\n\n\n0x8024a105\n인터넷 연결 점검 및 문제 해결사 실행\n\n\n0x80070020\n백신 비활성화 후 재시도\n\n\n0x800f0922\n시스템 파일 검사 및 복구 시도\n\n\n\n \n \n마무리하며\n윈도우 업데이트 오류는 누구에게나 발생할 수 있는 문제지만, 올바른 방법을 알면 쉽게 해결할 수 있어요. 위의 방법들을 하나씩 적용해 보면서 해결할 수 있을 거예요.\n \n혹시 여전히 해결이 안 된다면, 최신 윈도우 업데이트 정보를 확인하거나 전문가의 도움을 받아보세요.\n여러분은 윈도우 업데이트 오류를 어떻게 해결하셨나요? 댓글로 경험을 공유해 주세요!\nQ&A 섹션\nQ1. 윈도우 업데이트가 무한 로딩될 때 어떻게 해야 하나요?\n  강제 종료 후 안전 모드에서 업데이트 파일을 삭제하고 다시 시도해 보세요.\nQ2. 업데이트 도중 멈추는 문제를 해결하려면?\n  인터넷 연결 상태를 확인하고, 문제 해결사를 실행해 보세요.\nQ3. 업데이트 후 PC가 느려졌어요. 어떻게 해야 하나요?\n  불필요한 백그라운드 프로그램을 정리하고, 디스크 정리를 실행하세요.\nQ4. 업데이트를 수동으로 설치할 수 있나요?\n  네, 마이크로소프트 업데이트 카탈로그에서 수동 다운로드가 가능합니다.\nQ5. 업데이트 후 블루스크린이 발생하면 어떻게 해야 하나요?\n  최근 설치한 업데이트를 제거하고, 복원 지점을 이용해 되돌려 보세요.\n<script type=\"application/ld+json\">\n  {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n      {\n        \"@type\": \"Question\",\n        \"name\": \"윈도우 업데이트가 무한 로딩될 때 어떻게 해야 하나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  강제 종료 후 안전 모드에서 업데이트 파일을 삭제하고 다시 시도해 보세요.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"업데이트 도중 멈추는 문제를 해결하려면?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  인터넷 연결 상태를 확인하고, 문제 해결사를 실행해 보세요.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"업데이트 후 PC가 느려졌어요. 어떻게 해야 하나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  불필요한 백그라운드 프로그램을 정리하고, 디스크 정리를 실행하세요.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"업데이트를 수동으로 설치할 수 있나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  네, 마이크로소프트 업데이트 카탈로그에서 수동 다운로드가 가능합니다.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"업데이트 후 블루스크린이 발생하면 어떻게 해야 하나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  최근 설치한 업데이트를 제거하고, 복원 지점을 이용해 되돌려 보세요.\"\n        }\n      }\n    ]\n  }\n</script>",
        "guid": "http://muzbox.tistory.com/483530",
        "categories": [
          "윈도우 사용팁/윈도우11 사용법",
          "도우 업데이트 오류 해결방법",
          "무한로딩",
          "문제 해결사 실행",
          "시스템 파일 복구",
          "업데이트 멈춤",
          "업데이트 문제 해결",
          "업데이트 실패",
          "윈도우 업데이트 안됨",
          "윈도우 업데이트 중지",
          "윈도우 업데이트 팁"
        ],
        "isoDate": "2025-01-29T06:08:21.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "넷플릭스 비밀 코드 공개! 영화 탐색이 쉬워지는 장르별 코드",
        "link": "http://muzbox.tistory.com/483531",
        "pubDate": "Mon, 27 Jan 2025 14:06:12 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483531#entry483531comment",
        "content": "<p data-ke-size=\"size16\">넷플릭스 비밀 코드를 사용하면 원하는 장르의 영화를 빠르게 검색할 수 있습니다. 액션, 코미디, 드라마 등 숨겨진 넷플릭스 카테고리를 쉽게 찾는 방법을 알아보세요!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"722\"><span data-url=\"https://blog.kakaocdn.net/dn/qDywA/btsL3kRuATM/mBYHpEKZZi035JVqJ0k7Nk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/qDywA/btsL3kRuATM/mBYHpEKZZi035JVqJ0k7Nk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/qDywA/btsL3kRuATM/mBYHpEKZZi035JVqJ0k7Nk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FqDywA%2FbtsL3kRuATM%2FmBYHpEKZZi035JVqJ0k7Nk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"넷플릭스 비밀 코드 공개! 영화 탐색이 쉬워지는 장르멸 코드\" loading=\"lazy\" width=\"700\" height=\"395\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"722\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">넷플릭스를 켤 때마다 \"뭘 봐야 할지 모르겠다\"는 고민을 하신 적 있으신가요? 넷플릭스의 방대한 콘텐츠 라이브러리 속에서 나에게 딱 맞는 작품을 찾기란 쉬운 일이 아닙니다. 그렇다고 마냥 추천 콘텐츠만 보기엔 아쉬움이 남기 마련이죠.</p>\n<p data-ke-size=\"size16\">이럴 때 유용한 것이 바로 <b>\"넷플릭스 비밀 코드\"</b>입니다. 이 코드들은 넷플릭스의 숨겨진 콘텐츠를 빠르게 찾아볼 수 있도록 해주는 도구로, 장르별로 특정 코드가 부여되어 있습니다. 이를 통해 일반적인 검색창에서는 보이지 않는 콘텐츠까지 쉽게 찾을 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">오늘은 넷플릭스 비밀 코드의 개념부터 활용 방법, 그리고 인기 있는 장르 코드 리스트까지 모두 알려드릴게요!  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>넷플릭스 비밀 코드란?  </b></span></h2>\n<p data-ke-size=\"size16\">넷플릭스는 사용자의 시청 패턴을 분석해 맞춤형 콘텐츠를 제공하지만, 여전히 많은 장르가 검색에 노출되지 않습니다. 넷플릭스의 <b>비밀 장르 코드(Secret Netflix Codes)</b>는 특정 장르나 테마에 맞춘 콘텐츠를 한눈에 볼 수 있도록 해주는 숫자 코드입니다.</p>\n<p data-ke-size=\"size16\">이 코드를 사용하면 평소 알고 있던 범위를 벗어나 다양한 장르를 빠르게 탐색할 수 있습니다. 예를 들어, 넷플릭스에는 \"액션 코미디\"라는 장르가 숨겨져 있으며, 이를 <b>코드 43040</b>을 통해 직접 접속할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">비밀 코드의 장점 ✅</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>정확한 장르 탐색:</b> 원하는 특정 장르로 바로 이동 가능</li>\n<li><b>새로운 콘텐츠 발견:</b> 추천 시스템이 놓친 숨겨진 보석 찾기</li>\n<li><b>시간 절약:</b> 긴 검색 시간 없이 몇 초 만에 원하는 작품 도달</li>\n<li><b>모든 디바이스에서 활용 가능:</b> PC, 스마트폰 브라우저에서 적용 가능</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>넷플릭스 비밀 코드 활용 방법  </b></span></h2>\n<p data-ke-size=\"size16\">넷플릭스 비밀 코드를 사용하는 방법은 간단합니다. 아래의 절차를 따르면 누구나 쉽게 원하는 콘텐츠를 검색할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">1. 넷플릭스 접속</span></h3>\n<p data-ke-size=\"size16\">먼저, <a href=\"https://www.netflix.com/\">넷플릭스 공식 웹사이트</a>에 접속하세요. 모바일 앱에서는 직접 코드 검색이 어렵기 때문에 브라우저에서 검색하는 것이 좋습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">2. 검색 URL 구성</span></h3>\n<p data-ke-size=\"size16\">코드를 입력하는 URL 형식은 다음과 같습니다.</p>\n<pre class=\"vim\"><code>https://www.netflix.com/browse/genre/코드번호</code></pre>\n<p data-ke-size=\"size16\">예를 들어, **로맨틱 코미디(코드: 5475)**를 검색하고 싶다면 다음과 같이 입력하세요:</p>\n<pre class=\"vim\"><code>https://www.netflix.com/browse/genre/5475</code></pre>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">3. 북마크 활용</span></h3>\n<p data-ke-size=\"size16\">자주 찾는 장르의 코드를 <b>브라우저 북마크</b>에 추가하면 빠르게 다시 접속할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">4. 모바일에서 활용하기</span></h3>\n<p data-ke-size=\"size16\">모바일 사용자는 코드를 직접 입력할 수 없으므로, PC에서 검색 후 '내 리스트'에 추가하는 방법을 추천합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>인기 넷플릭스 비밀 코드 모음  </b></span></h2>\n<p data-ke-size=\"size16\">넷플릭스의 수많은 콘텐츠를 보다 쉽게 탐색할 수 있도록 대표적인 장르별 코드를 정리했습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">  액션 &amp; 어드벤처</span></h3>\n<table style=\"border-collapse: collapse; width: 100%; border: 1px solid black;\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr style=\"background-color: #e50914; color: white;\">\n<th style=\"border: 1px solid black; padding: 10px;\">장르</th>\n<th style=\"border: 1px solid black; padding: 10px;\">코드</th>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">액션 코미디</td>\n<td style=\"border: 1px solid black; padding: 10px;\">43040</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">스파이 액션</td>\n<td style=\"border: 1px solid black; padding: 10px;\">10702</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">무술 영화</td>\n<td style=\"border: 1px solid black; padding: 10px;\">8985</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">서부 영화</td>\n<td style=\"border: 1px solid black; padding: 10px;\">7700</td>\n</tr>\n</tbody>\n</table>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">  드라마</span></h3>\n<table style=\"border-collapse: collapse; width: 100%; border: 1px solid black;\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr style=\"background-color: #e50914; color: white;\">\n<th style=\"border: 1px solid black; padding: 10px;\">장르</th>\n<th style=\"border: 1px solid black; padding: 10px;\">코드</th>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">실화 기반 드라마</td>\n<td style=\"border: 1px solid black; padding: 10px;\">3653</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">법정 드라마</td>\n<td style=\"border: 1px solid black; padding: 10px;\">2748</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">정치 드라마</td>\n<td style=\"border: 1px solid black; padding: 10px;\">6616</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">전쟁 드라마</td>\n<td style=\"border: 1px solid black; padding: 10px;\">11</td>\n</tr>\n</tbody>\n</table>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">  애니메이션</span></h3>\n<table style=\"border-collapse: collapse; width: 100%; border: 1px solid black;\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr style=\"background-color: #e50914; color: white;\">\n<th style=\"border: 1px solid black; padding: 10px;\">장르</th>\n<th style=\"border: 1px solid black; padding: 10px;\">코드</th>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">판타지 애니메이션</td>\n<td style=\"border: 1px solid black; padding: 10px;\">11146</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">공포 애니메이션</td>\n<td style=\"border: 1px solid black; padding: 10px;\">10695</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">드라마 애니메이션</td>\n<td style=\"border: 1px solid black; padding: 10px;\">452</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\"><br />더 많은 코드를 보려면 본문아래 첨부된 <span style=\"color: #006dd7;\"><b>넷플릭스 장르 코드 PDF</b> </span>를 확인해보세요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>넷플릭스 비밀 코드 활용 꿀팁  </b></span></h2>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>기분에 맞는 영화 찾기</b>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>웃고 싶다면? &rarr; 코미디(6548)</li>\n<li>긴장감을 느끼고 싶다면? &rarr; 스릴러(8933)</li>\n</ul>\n</li>\n<li><b>테마별 저녁 영화 선택</b>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>가족과 함께라면 &rarr; 디즈니(67673)</li>\n<li>친구와 함께라면 &rarr; 스포츠 코미디(5286)</li>\n</ul>\n</li>\n<li><b>다양한 국가별 영화 탐색</b>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>프랑스 영화 &rarr; 58807</li>\n<li>한국 영화 &rarr; 5685</li>\n<li>일본 영화 &rarr; 10398</li>\n</ul>\n</li>\n</ol>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>넷플릭스 비밀 코드 한글 번역본 배포  </b></span></h2>\n<p data-ke-size=\"size16\">넷플릭스의 비밀 장르 코드를 더욱 쉽게 활용할 수 있도록 <b>한글 번역본 코드집</b>을 함께 배포합니다. 이 코드집에는 주요 장르의 한글 설명과 코드 번호가 정리되어 있어, 누구나 쉽게 원하는 콘텐츠를 찾을 수 있습니다.  </p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">한글 번역본 코드집의 특징:</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>모든 코드 한눈에 보기:</b> 넷플릭스의 다양한 장르를 한글로 쉽게 확인 가능</li>\n<li><b>카테고리별 정리:</b> 액션, 코미디, 드라마 등 주요 장르별로 코드 정리</li>\n<li><b>사용 방법 가이드 포함:</b> 초보자도 쉽게 따라할 수 있도록 단계별 설명 제공</li>\n<li><b>모바일 및 PC 최적화:</b> PDF 형식으로 제공되어 모든 디바이스에서 편리하게 사용 가능</li>\n</ul>\n<p data-ke-size=\"size16\">이제 넷플릭스의 방대한 콘텐츠를 더욱 쉽게 검색하고, 가족 및 친구들과 원하는 영화를 더 빠르게 찾을 수 있습니다. 한글 코드집은 본 블로그에서 무료로 다운로드하실 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">  넷플릭스 비밀 코드 PDF 한글 번역본 다운로드</span></h3>\n<p data-ke-size=\"size16\">넷플릭스를 더 스마트하게 즐길 준비가 되셨나요? 지금 바로 한글 코드집을 활용해 보세요!  </p>\n<script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8195497734535830\"\n     crossorigin=\"anonymous\"></script>\n<ins class=\"adsbygoogle\"\n     style=\"display:block; text-align:center;\"\n     data-ad-layout=\"in-article\"\n     data-ad-format=\"fluid\"\n     data-ad-client=\"ca-pub-8195497734535830\"\n     data-ad-slot=\"1494233468\"></ins>\n<script>\n     (adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p><figure class=\"fileblock\" data-ke-align=\"alignCenter\"><a href=\"https://blog.kakaocdn.net/dn/dhoExi/btsL1dGMBcK/CRZrk5hKRuK7Lb7EO1H7Qk/Secret%20Netflix%20Codes.zip?attach=1&amp;knm=tfile.zip\" class=\"\">\n    <div class=\"image\"></div>\n    <div class=\"desc\"><div class=\"filename\"><span class=\"name\">Secret Netflix Codes.zip</span></div>\n<div class=\"size\">0.25MB</div>\n</div>\n  </a></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>마치며  </b></span></h2>\n<p data-ke-size=\"size16\">넷플릭스의 숨겨진 장르 코드를 활용하면, 보다 세분화된 검색이 가능하며, 나에게 딱 맞는 콘텐츠를 쉽게 찾을 수 있습니다. 넷플릭스를 더 효율적으로 사용하고 싶다면, 비밀 코드를 활용해 보세요!  </p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>Q&amp;A</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q1. 넷플릭스 비밀 코드는 공식적으로 제공되나요?</b><br />A1. 넷플릭스가 공식적으로 발표한 정보는 아니지만, 넷플릭스 내부 카테고리를 통해 확인할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q2. 모바일 앱에서도 비밀 코드를 사용할 수 있나요?</b><br />A2. 직접 검색은 불가능하지만, PC에서 찾은 후 '내 리스트'에 추가하여 시청할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q3. 코드가 유효하지 않으면 어떻게 하나요?</b><br />A3. 넷플릭스는 일부 코드를 변경하거나 삭제할 수 있으므로 최신 코드를 확인해야 합니다.</p>\n<p><textarea style=\"display: none;\">&lt;script type=\"application/ld+json\"&gt;\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n        {\n            \"@type\": \"Question\",\n            \"name\": \"넷플릭스 비밀 코드는 공식적으로 제공되나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"넷플릭스가 공식적으로 발표한 정보는 아니지만, 넷플릭스 내부 카테고리를 통해 확인할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"모바일 앱에서도 비밀 코드를 사용할 수 있나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"직접 검색은 불가능하지만, PC에서 찾은 후 '내 리스트'에 추가하여 시청할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"코드가 유효하지 않으면 어떻게 하나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"넷플릭스는 일부 코드를 변경하거나 삭제할 수 있으므로 최신 코드를 확인해야 합니다.\"\n            }\n        }\n    ]\n}\n&lt;/script&gt;\n</textarea></p>",
        "contentSnippet": "넷플릭스 비밀 코드를 사용하면 원하는 장르의 영화를 빠르게 검색할 수 있습니다. 액션, 코미디, 드라마 등 숨겨진 넷플릭스 카테고리를 쉽게 찾는 방법을 알아보세요!\n\n\n \n넷플릭스를 켤 때마다 \"뭘 봐야 할지 모르겠다\"는 고민을 하신 적 있으신가요? 넷플릭스의 방대한 콘텐츠 라이브러리 속에서 나에게 딱 맞는 작품을 찾기란 쉬운 일이 아닙니다. 그렇다고 마냥 추천 콘텐츠만 보기엔 아쉬움이 남기 마련이죠.\n이럴 때 유용한 것이 바로 \"넷플릭스 비밀 코드\"입니다. 이 코드들은 넷플릭스의 숨겨진 콘텐츠를 빠르게 찾아볼 수 있도록 해주는 도구로, 장르별로 특정 코드가 부여되어 있습니다. 이를 통해 일반적인 검색창에서는 보이지 않는 콘텐츠까지 쉽게 찾을 수 있습니다.\n \n오늘은 넷플릭스 비밀 코드의 개념부터 활용 방법, 그리고 인기 있는 장르 코드 리스트까지 모두 알려드릴게요!  \n \n \n넷플릭스 비밀 코드란?  \n넷플릭스는 사용자의 시청 패턴을 분석해 맞춤형 콘텐츠를 제공하지만, 여전히 많은 장르가 검색에 노출되지 않습니다. 넷플릭스의 비밀 장르 코드(Secret Netflix Codes)는 특정 장르나 테마에 맞춘 콘텐츠를 한눈에 볼 수 있도록 해주는 숫자 코드입니다.\n이 코드를 사용하면 평소 알고 있던 범위를 벗어나 다양한 장르를 빠르게 탐색할 수 있습니다. 예를 들어, 넷플릭스에는 \"액션 코미디\"라는 장르가 숨겨져 있으며, 이를 코드 43040을 통해 직접 접속할 수 있습니다.\n비밀 코드의 장점 ✅\n정확한 장르 탐색: 원하는 특정 장르로 바로 이동 가능\n새로운 콘텐츠 발견: 추천 시스템이 놓친 숨겨진 보석 찾기\n시간 절약: 긴 검색 시간 없이 몇 초 만에 원하는 작품 도달\n모든 디바이스에서 활용 가능: PC, 스마트폰 브라우저에서 적용 가능\n \n넷플릭스 비밀 코드 활용 방법  \n넷플릭스 비밀 코드를 사용하는 방법은 간단합니다. 아래의 절차를 따르면 누구나 쉽게 원하는 콘텐츠를 검색할 수 있습니다.\n1. 넷플릭스 접속\n먼저, 넷플릭스 공식 웹사이트에 접속하세요. 모바일 앱에서는 직접 코드 검색이 어렵기 때문에 브라우저에서 검색하는 것이 좋습니다.\n2. 검색 URL 구성\n코드를 입력하는 URL 형식은 다음과 같습니다.\nhttps://www.netflix.com/browse/genre/코드번호\n예를 들어, **로맨틱 코미디(코드: 5475)**를 검색하고 싶다면 다음과 같이 입력하세요:\nhttps://www.netflix.com/browse/genre/5475\n3. 북마크 활용\n자주 찾는 장르의 코드를 브라우저 북마크에 추가하면 빠르게 다시 접속할 수 있습니다.\n4. 모바일에서 활용하기\n모바일 사용자는 코드를 직접 입력할 수 없으므로, PC에서 검색 후 '내 리스트'에 추가하는 방법을 추천합니다.\n \n \n인기 넷플릭스 비밀 코드 모음  \n넷플릭스의 수많은 콘텐츠를 보다 쉽게 탐색할 수 있도록 대표적인 장르별 코드를 정리했습니다.\n  액션 & 어드벤처\n장르\n코드\n\n\n액션 코미디\n43040\n\n\n스파이 액션\n10702\n\n\n무술 영화\n8985\n\n\n서부 영화\n7700\n\n\n\n  드라마\n장르\n코드\n\n\n실화 기반 드라마\n3653\n\n\n법정 드라마\n2748\n\n\n정치 드라마\n6616\n\n\n전쟁 드라마\n11\n\n\n\n  애니메이션\n장르\n코드\n\n\n판타지 애니메이션\n11146\n\n\n공포 애니메이션\n10695\n\n\n드라마 애니메이션\n452\n\n\n\n\n더 많은 코드를 보려면 본문아래 첨부된 넷플릭스 장르 코드 PDF 를 확인해보세요.\n \n \n \n넷플릭스 비밀 코드 활용 꿀팁  \n기분에 맞는 영화 찾기\n\n웃고 싶다면? → 코미디(6548)\n긴장감을 느끼고 싶다면? → 스릴러(8933)\n테마별 저녁 영화 선택\n\n가족과 함께라면 → 디즈니(67673)\n친구와 함께라면 → 스포츠 코미디(5286)\n다양한 국가별 영화 탐색\n\n프랑스 영화 → 58807\n한국 영화 → 5685\n일본 영화 → 10398\n \n넷플릭스 비밀 코드 한글 번역본 배포  \n넷플릭스의 비밀 장르 코드를 더욱 쉽게 활용할 수 있도록 한글 번역본 코드집을 함께 배포합니다. 이 코드집에는 주요 장르의 한글 설명과 코드 번호가 정리되어 있어, 누구나 쉽게 원하는 콘텐츠를 찾을 수 있습니다.  \n한글 번역본 코드집의 특징:\n모든 코드 한눈에 보기: 넷플릭스의 다양한 장르를 한글로 쉽게 확인 가능\n카테고리별 정리: 액션, 코미디, 드라마 등 주요 장르별로 코드 정리\n사용 방법 가이드 포함: 초보자도 쉽게 따라할 수 있도록 단계별 설명 제공\n모바일 및 PC 최적화: PDF 형식으로 제공되어 모든 디바이스에서 편리하게 사용 가능\n이제 넷플릭스의 방대한 콘텐츠를 더욱 쉽게 검색하고, 가족 및 친구들과 원하는 영화를 더 빠르게 찾을 수 있습니다. 한글 코드집은 본 블로그에서 무료로 다운로드하실 수 있습니다.\n  넷플릭스 비밀 코드 PDF 한글 번역본 다운로드\n넷플릭스를 더 스마트하게 즐길 준비가 되셨나요? 지금 바로 한글 코드집을 활용해 보세요!  \n\n\n\n     (adsbygoogle = window.adsbygoogle || []).push({});\n\n\n    \n\n    \nSecret Netflix Codes.zip\n0.25MB\n\n\n \n \n마치며  \n넷플릭스의 숨겨진 장르 코드를 활용하면, 보다 세분화된 검색이 가능하며, 나에게 딱 맞는 콘텐츠를 쉽게 찾을 수 있습니다. 넷플릭스를 더 효율적으로 사용하고 싶다면, 비밀 코드를 활용해 보세요!  \nQ&A\nQ1. 넷플릭스 비밀 코드는 공식적으로 제공되나요?\nA1. 넷플릭스가 공식적으로 발표한 정보는 아니지만, 넷플릭스 내부 카테고리를 통해 확인할 수 있습니다.\nQ2. 모바일 앱에서도 비밀 코드를 사용할 수 있나요?\nA2. 직접 검색은 불가능하지만, PC에서 찾은 후 '내 리스트'에 추가하여 시청할 수 있습니다.\nQ3. 코드가 유효하지 않으면 어떻게 하나요?\nA3. 넷플릭스는 일부 코드를 변경하거나 삭제할 수 있으므로 최신 코드를 확인해야 합니다.\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n        {\n            \"@type\": \"Question\",\n            \"name\": \"넷플릭스 비밀 코드는 공식적으로 제공되나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"넷플릭스가 공식적으로 발표한 정보는 아니지만, 넷플릭스 내부 카테고리를 통해 확인할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"모바일 앱에서도 비밀 코드를 사용할 수 있나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"직접 검색은 불가능하지만, PC에서 찾은 후 '내 리스트'에 추가하여 시청할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"코드가 유효하지 않으면 어떻게 하나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"넷플릭스는 일부 코드를 변경하거나 삭제할 수 있으므로 최신 코드를 확인해야 합니다.\"\n            }\n        }\n    ]\n}\n</script>",
        "guid": "http://muzbox.tistory.com/483531",
        "categories": [
          "유튜브,넷플릭스 사용법/넷플릭스 (netflix) 사용법",
          "넷플릭스 비밀 코드",
          "넷플릭스 숨겨진 콘텐츠",
          "넷플릭스 장르 코드",
          "넷플릭스 팁",
          "넷플릭스 활용법",
          "드라마 추천",
          "스트리밍 서비스",
          "영화 추천",
          "장르별 영화",
          "코드 검색"
        ],
        "isoDate": "2025-01-27T05:06:12.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": []
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "코드 이해도 향상. Visual Studio 2022 17.11의 GitHub Copilot 기능",
        "link": "https://jacking75.github.io/tech-ai_20250128/",
        "pubDate": "Tue, 28 Jan 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vTbc2NJZOevZNIO1LtDsuKcrDgtjgeJC0JcmASGwAGdb0WiuGjL0tVh1KJLKdLWnKWgb1OdeFcMhHke/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/tech-ai_20250128/",
        "isoDate": "2025-01-27T15:00:00.000Z"
      },
      {
        "title": "golang - Go의 병행 처리를 깨끗하고 안전하게 쓸 수 있는 sourcegraph/conc",
        "link": "https://jacking75.github.io/go_20250125/",
        "pubDate": "Sat, 25 Jan 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vRRJ0Aa_FFBuUxHhw5VK1FwXR9vN6lArY0ziGBSgGnjaOTesMYzdYTqbBa7Lu434ZiYRzAiAftwae5C/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/go_20250125/",
        "isoDate": "2025-01-24T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "인간을 위헙하는 외계인들에 대한 정보는 이미 인간이 알고 있다.",
        "link": "http://serverdown.tistory.com/1123",
        "pubDate": "Wed, 29 Jan 2025 23:55:38 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1123#entry1123comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=ePvJmTobFVA&amp;t=39s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=ePvJmTobFVA&amp;t=39s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=ePvJmTobFVA\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bHHise/hyX7WEyOaI/yUN2jXRkURFYtpsUBokLok/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/bCWhMD/hyX7UUgdzd/mKrgPICEOTNXRYZEhb1a10/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"두족류로 표현된 무시무시한 존재들 (어째서 두족류 형태일까?)\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/ePvJmTobFVA\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">굳이 외계인을 보지 않더라도&nbsp;</p>\n<p data-ke-size=\"size16\">인류는 외계인을보면 바로 위험한 존재인지 알 수 있습니다.</p>\n<p data-ke-size=\"size16\">영상에서는 여러가지 외계인 관련 정보를 문학을 통해 설명해줍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">인간은 이미 공포가 DNA 로 들어가있기 때문에 보면 바로 알 것입니다.</p>\n<p data-ke-size=\"size16\">그리고 외계에만 있을 것 같은 존재들은 이미 지구에 있습니다.</p>\n<p data-ke-size=\"size16\">문어 새우 같은걸 보시면 아주 다르게 생겼지만 지구에 있는거 처럼요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=ePvJmTobFVA&t=39s\n\n\n\n굳이 외계인을 보지 않더라도 \n인류는 외계인을보면 바로 위험한 존재인지 알 수 있습니다.\n영상에서는 여러가지 외계인 관련 정보를 문학을 통해 설명해줍니다.\n \n인간은 이미 공포가 DNA 로 들어가있기 때문에 보면 바로 알 것입니다.\n그리고 외계에만 있을 것 같은 존재들은 이미 지구에 있습니다.\n문어 새우 같은걸 보시면 아주 다르게 생겼지만 지구에 있는거 처럼요",
        "guid": "http://serverdown.tistory.com/1123",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2025-01-29T14:55:38.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "중국 공상은행 파산 소문 큰거오나?",
        "link": "http://serverdown.tistory.com/1122",
        "pubDate": "Sun, 26 Jan 2025 19:27:41 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1122#entry1122comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://youtu.be/3oV97V7KWdA?t=616\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://youtu.be/3oV97V7KWdA?t=616</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=3oV97V7KWdA\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bIsAvg/hyX7SuZAC0/DPKu4VBUHX7Rw53QHWXuSk/img.jpg?width=1280&amp;height=720&amp;face=478_146_748_440,https://scrap.kakaocdn.net/dn/fgB88/hyX7V6jJ9J/CW3xJPqrBPDpBv2jtOX18K/img.jpg?width=1280&amp;height=720&amp;face=478_146_748_440\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"중국 금융권이 힘들어지자 정부에서 마련한 정책!\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/3oV97V7KWdA\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">10분에 나옵니다.</p>\n<p data-ke-size=\"size16\">중국 공상은행 파산 설이 있었다고 합니다.</p>\n<p data-ke-size=\"size16\">단순 소문이긴하겠지만 그것때문인지 은행 연봉이 줄줄이 감봉되고있긴합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">중국 공상은행은 농협정도의 위치에 있나봅니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">중국은 바보인지 돈을 안찍네요 환율 포기하고 돈찍어서 버티면 될텐데 이상하네요</p>\n<p data-ke-size=\"size16\">비상식이 판치고 있습니다.</p>",
        "contentSnippet": "영상: https://youtu.be/3oV97V7KWdA?t=616\n\n\n\n10분에 나옵니다.\n중국 공상은행 파산 설이 있었다고 합니다.\n단순 소문이긴하겠지만 그것때문인지 은행 연봉이 줄줄이 감봉되고있긴합니다.\n \n중국 공상은행은 농협정도의 위치에 있나봅니다.\n \n중국은 바보인지 돈을 안찍네요 환율 포기하고 돈찍어서 버티면 될텐데 이상하네요\n비상식이 판치고 있습니다.",
        "guid": "http://serverdown.tistory.com/1122",
        "categories": [
          "유튜브",
          "중국"
        ],
        "isoDate": "2025-01-26T10:27:41.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "마윈이 기분 좋았던 시절의 이야기 / 특공 물 음식 하지만 공기는 ...",
        "link": "http://serverdown.tistory.com/1121",
        "pubDate": "Sat, 25 Jan 2025 19:48:53 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1121#entry1121comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://youtu.be/eemg-ZEKyrM?t=1392\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://youtu.be/eemg-ZEKyrM?t=1392</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=eemg-ZEKyrM\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bT5MsM/hyX7UGeJqc/FBc1quUA2J32wuiq3IU8v1/img.jpg?width=1280&amp;height=720&amp;face=108_116_206_224,https://scrap.kakaocdn.net/dn/c5pPvr/hyX4xeQI8V/tqDekVgK9Yf2Q6GGgv4eq1/img.jpg?width=1280&amp;height=720&amp;face=108_116_206_224\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"중국발 미세먼지 무엇을 상상하든 상상 그 이상입니다...!\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/eemg-ZEKyrM\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">23분에 나옵니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">특별한 상위 계급들은 건강에 관련된 물건은 특별이 공급 (특공) 받습니다.</p>\n<p data-ke-size=\"size16\">일반인들은 오염된 음식과 물을 먹고 살고 있지요</p>\n<p data-ke-size=\"size16\">하지만&nbsp;오늘은 기분이 매우 좋습니다.</p>\n<p data-ke-size=\"size16\">공기는 특공 할 수 없습니다.</p>",
        "contentSnippet": "영상: https://youtu.be/eemg-ZEKyrM?t=1392\n\n\n\n23분에 나옵니다.\n \n특별한 상위 계급들은 건강에 관련된 물건은 특별이 공급 (특공) 받습니다.\n일반인들은 오염된 음식과 물을 먹고 살고 있지요\n하지만 오늘은 기분이 매우 좋습니다.\n공기는 특공 할 수 없습니다.",
        "guid": "http://serverdown.tistory.com/1121",
        "categories": [
          "유튜브",
          "특공"
        ],
        "isoDate": "2025-01-25T10:48:53.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "재판의 결과가 이상하게 나오는 이유 / 솜방망이",
        "link": "http://serverdown.tistory.com/1120",
        "pubDate": "Sat, 25 Jan 2025 01:20:04 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1120#entry1120comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/shorts/EyO5PSV8Wow\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/shorts/EyO5PSV8Wow</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/shorts/EyO5PSV8Wow\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/f3ydT/hyX4oa4H38/Epxp8v1AAN3lSKIYVvhfE0/img.jpg?width=405&amp;height=720&amp;face=142_237_272_379,https://scrap.kakaocdn.net/dn/cunsIg/hyX7SVRIZb/evqbthtcjago2nwzf86Ej0/img.jpg?width=405&amp;height=720&amp;face=142_237_272_379\" data-video-width=\"405\" data-video-height=\"720\" data-video-origin-width=\"405\" data-video-origin-height=\"720\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"한국 판결이 이상한 이유\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/EyO5PSV8Wow\" width=\"405\" height=\"720\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">특수한 선례를 남겨야</p>\n<p data-ke-size=\"size16\">은퇴후 로펌에 들어가서 그 판례를 이용해 빠저나가는 결과를 만들 수 있다고 합니다.</p>\n<p data-ke-size=\"size16\">즉 돈이 되기 때문입니다.</p>",
        "contentSnippet": "영상: https://www.youtube.com/shorts/EyO5PSV8Wow\n\n\n\n특수한 선례를 남겨야\n은퇴후 로펌에 들어가서 그 판례를 이용해 빠저나가는 결과를 만들 수 있다고 합니다.\n즉 돈이 되기 때문입니다.",
        "guid": "http://serverdown.tistory.com/1120",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2025-01-24T16:20:04.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "2차전지 바닥이다",
        "link": "http://serverdown.tistory.com/1119",
        "pubDate": "Thu, 23 Jan 2025 19:16:29 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1119#entry1119comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=QroRBwk7cYw&amp;t=3s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=QroRBwk7cYw&amp;t=3s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=QroRBwk7cYw\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/6geJs/hyX4q7CuXW/5BMFhLa3kkd88QC1pAvYKK/img.jpg?width=1280&amp;height=720&amp;face=858_160_994_308,https://scrap.kakaocdn.net/dn/JTZXM/hyX4r6xDS5/P7fqQbwFhAEekZSKO8uocK/img.jpg?width=1280&amp;height=720&amp;face=858_160_994_308\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"2차전지 '트럼프 쇼크' 진실은? / 윤석천 경제평론가 [대담한 대담] | Market Now 2 (20250123)\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/QroRBwk7cYw\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">트럼프가 여러가지로저질렀는데</p>\n<p data-ke-size=\"size16\">그런다고 팔면 안됩니다.&nbsp;</p>\n<p data-ke-size=\"size16\">트럼프 취임과 동시에 전기자동차 보조금 패지로<br />모든 악재가 나왔습니다.</p>\n<p data-ke-size=\"size16\">이제 무슨 악재가 있겠습니까?</p>\n<p data-ke-size=\"size16\">트럼프가 베터리는 중국게 싸니까 그거 쓰세요 라고 하겠습니까?<br />(실제로 그런 방향으로 간다고 해도 말은 안할 것입니다.)</p>\n<p data-ke-size=\"size16\">호재를 봅시다.</p>\n<p data-ke-size=\"size16\">1. 정부 반도체 / 2차전지 직접투자 50조원</p>\n<p data-ke-size=\"size16\">아예 직접 투자해버린다는군요.<br />못올라도 바닥은 이걸로 지켜질 것입니다.</p>\n<p data-ke-size=\"size16\">2. AI 테마</p>\n<p data-ke-size=\"size16\">드론 자율주행 로봇 모든 산업은 더 좋은 베터리를 사용해야합니다.<br />전기차 보다도 훨씬 안전한 베터리를 써야하는 환경이기 때문입니다.</p>\n<p data-ke-size=\"size16\">3. BYD 한국 상륙</p>\n<p data-ke-size=\"size16\">이젠 경쟁을 해야합니다.<br />이것은 악재가 아니고 호재입니다.</p>\n<p data-ke-size=\"size16\">이전에는 경쟁할 필요가 없었습니다. 국가도 전기차 보급의 의지도 없었구요.<br />이제 보조금을 잘못 쓰면 중국차를 파는데 도와주는 꼴이기 때문에 방법이 없습니다.</p>\n<p data-ke-size=\"size16\">BYD 는 렌터카쪽을 치고 장악을 시작할 것입니다.</p>\n<p data-ke-size=\"size16\">매국노가 아닌이상 한국 업계에 유리하도록 보조금을 차별해야합니다.<br />착한 선비 정신이 나올때가 아닙니다.</p>\n<p data-ke-size=\"size16\">이젠 정말 정부에서 움직임이 절실한 상황입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=QroRBwk7cYw&t=3s\n\n\n\n트럼프가 여러가지로저질렀는데\n그런다고 팔면 안됩니다. \n트럼프 취임과 동시에 전기자동차 보조금 패지로\n모든 악재가 나왔습니다.\n이제 무슨 악재가 있겠습니까?\n트럼프가 베터리는 중국게 싸니까 그거 쓰세요 라고 하겠습니까?\n(실제로 그런 방향으로 간다고 해도 말은 안할 것입니다.)\n호재를 봅시다.\n1. 정부 반도체 / 2차전지 직접투자 50조원\n아예 직접 투자해버린다는군요.\n못올라도 바닥은 이걸로 지켜질 것입니다.\n2. AI 테마\n드론 자율주행 로봇 모든 산업은 더 좋은 베터리를 사용해야합니다.\n전기차 보다도 훨씬 안전한 베터리를 써야하는 환경이기 때문입니다.\n3. BYD 한국 상륙\n이젠 경쟁을 해야합니다.\n이것은 악재가 아니고 호재입니다.\n이전에는 경쟁할 필요가 없었습니다. 국가도 전기차 보급의 의지도 없었구요.\n이제 보조금을 잘못 쓰면 중국차를 파는데 도와주는 꼴이기 때문에 방법이 없습니다.\nBYD 는 렌터카쪽을 치고 장악을 시작할 것입니다.\n매국노가 아닌이상 한국 업계에 유리하도록 보조금을 차별해야합니다.\n착한 선비 정신이 나올때가 아닙니다.\n이젠 정말 정부에서 움직임이 절실한 상황입니다.",
        "guid": "http://serverdown.tistory.com/1119",
        "categories": [
          "투자",
          "2차전지"
        ],
        "isoDate": "2025-01-23T10:16:29.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "품앗이 문화에서 타 조직의 프로젝트를 하는 것",
        "link": "https://jojoldu.tistory.com/816",
        "pubDate": "Tue, 28 Jan 2025 11:18:29 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/816#entry816comment",
        "content": "<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">워크샵 중 QnA로 받은 내용 중 일부를 옮깁니다.<br />이전의 글 <a href=\"https://jojoldu.tistory.com/810\">품앗이 문화</a> 를 읽고 오면 좋습니다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">Q. 제품팀 전체가 하나의 팀처럼 움직이기 위해 Cell 제품이 아니여도 일정이 되면 다른 Cell의 프로젝트를 해줄 때가 있다.<br />근데 프로젝트가 단발성으로 진행이 되다보니 끝나면 원래 Cell이 그 제품을 이어가게 된다.<br />그 프로젝트를 했던 Cell은 프로젝트에 대한 효과나 추적, 개선을 이어서 진행할 수 없다.<br />프로젝트 런칭하고 다른 프로젝트 시작하고,<br />그게 끝나면 다시 또 다른 프로젝트하고.<br />수행한 프로젝트에 대한 추적과 개선을 계속 연결해서 가져갈 수 없나?</p>\n<p data-ke-size=\"size16\">A. 진행한 프로젝트에 대해서 잘 성장하고 있는지 지표를 계속해서 보는 것은 언제든지 하셔도 됩니다.<br />그런면에서 우리는 핵클을 통한 AB테스트나, 믹스패널, 빅쿼리, 루커스튜디오 등 데이터를 볼 수 있는 환경은 잘 갖춰져있으니 데이터 보는 연습으로도 좋다고 봅니다.<br />대부분의 PM 분들은 매일 출근하면 프로젝트나 제품의 지표들을 보고 있습니다.<br />그만큼 데이터를 보는 것에 대해서는 현재까지 제약이나 제한을 두고 있진 않습니다.</p>\n<p data-ke-size=\"size16\">다만, \"타 Cell의 업무를 임시로 한 것에 이어 계속 개선해 나가고 싶다\" 는 것에 대해서는 조심스럽게 생각하고 있습니다.<br />우리가 가진 가장 큰 경쟁력은 \"<b>담당하는 제품이 아니더라도 중요하고 급하다면 일정이 가능한 어느 조직이든 그 일을 당장 해결한다</b>\" 입니다.</p>\n<p data-ke-size=\"size16\">\"<b>RnR은 있지만 RnR을 따지지는 않는 조직</b>\"<br />다른 수많은 회사들과 비교했을때 저희가 가징 가장 큰 장점인데요.<br /><a href=\"https://inflab-team.slack.com/archives/CDC0CT9D3/p1732232560418989\">세계에서 가장 작은 대기업이라고 불리는 엔비디아 역시 저희와 비슷하게 용병제도를 운영하고 있습니다</a>.<br />저희는 이를 품앗이 문화라고 부르고 있으며, 굉장히 잘 운영되고 있습니다.</p>\n<p data-ke-size=\"size16\">이걸 계속해서 잘 지키려면 <b>내 것에 너무 매몰되지 않는 것이 중요</b>합니다.<br />나 혹은 우리 Cell이 했으니 계속해서 개선해나가고 싶은 마음은 오너십 관점에서 대단히 좋다고 보고 장려합니다.<br />다만, 그게 너무 강해지면 <b>일에 대한 위임이 어렵습니다</b>.<br />\"일은 일로 봐라\" 같은 의미가 아니라,<br /><b>다른 사람이, 다른 Cell이 이 일을 이어받아도 더 잘해줄 것이라는 믿음</b>이 중요합니다.<br />그래야만 유기적으로 <b>각 Cell이 전사의 중요한 과제에 니것내것 구분 없이 빠르게 실행하고 몰입할 수 있습니다</b>.</p>\n<p data-ke-size=\"size16\"><b>꼭 내가 그 일을 하지 않더라도 혹은 내가 한 일을 다른 사람들이 이어가더라도 내 일처럼 도와주고 지원해준다면</b> 저희는 정말로 최고의 조직이 될 수 있다고 믿습니다.</p>\n<p data-ke-size=\"size16\">아직 저희가 그리고 있는 큰 그림에서 구현하지 못한 것들이 너무나 많습니다.<br />여러 사업 전개에 필요한, 운영/사업에서 필요로 하는 도구들과 기능들도 너무나 많이 남아있습니다.<br />이렇게 해야할 것들이 많을 때는 완성도 있게 하나하나 심혈을 기울이기 보다는 <b>가능한 MVP를 빠르게 출시해서</b> <b>어디 하나 과락이 없는 상태</b>를 만들어가는 것이 중요합니다.</p>\n<p data-ke-size=\"size16\">그런 면에서 <b>RnR은 있지만, RnR을 따지지 않고 유기적으로 지원하고 위임할 수 있는 조직</b>의 형태를 계속 유지되길 바라고 있습니다.</p>",
        "contentSnippet": "워크샵 중 QnA로 받은 내용 중 일부를 옮깁니다.\n이전의 글 품앗이 문화 를 읽고 오면 좋습니다.\nQ. 제품팀 전체가 하나의 팀처럼 움직이기 위해 Cell 제품이 아니여도 일정이 되면 다른 Cell의 프로젝트를 해줄 때가 있다.\n근데 프로젝트가 단발성으로 진행이 되다보니 끝나면 원래 Cell이 그 제품을 이어가게 된다.\n그 프로젝트를 했던 Cell은 프로젝트에 대한 효과나 추적, 개선을 이어서 진행할 수 없다.\n프로젝트 런칭하고 다른 프로젝트 시작하고,\n그게 끝나면 다시 또 다른 프로젝트하고.\n수행한 프로젝트에 대한 추적과 개선을 계속 연결해서 가져갈 수 없나?\nA. 진행한 프로젝트에 대해서 잘 성장하고 있는지 지표를 계속해서 보는 것은 언제든지 하셔도 됩니다.\n그런면에서 우리는 핵클을 통한 AB테스트나, 믹스패널, 빅쿼리, 루커스튜디오 등 데이터를 볼 수 있는 환경은 잘 갖춰져있으니 데이터 보는 연습으로도 좋다고 봅니다.\n대부분의 PM 분들은 매일 출근하면 프로젝트나 제품의 지표들을 보고 있습니다.\n그만큼 데이터를 보는 것에 대해서는 현재까지 제약이나 제한을 두고 있진 않습니다.\n다만, \"타 Cell의 업무를 임시로 한 것에 이어 계속 개선해 나가고 싶다\" 는 것에 대해서는 조심스럽게 생각하고 있습니다.\n우리가 가진 가장 큰 경쟁력은 \"담당하는 제품이 아니더라도 중요하고 급하다면 일정이 가능한 어느 조직이든 그 일을 당장 해결한다\" 입니다.\n\"RnR은 있지만 RnR을 따지지는 않는 조직\"\n다른 수많은 회사들과 비교했을때 저희가 가징 가장 큰 장점인데요.\n세계에서 가장 작은 대기업이라고 불리는 엔비디아 역시 저희와 비슷하게 용병제도를 운영하고 있습니다.\n저희는 이를 품앗이 문화라고 부르고 있으며, 굉장히 잘 운영되고 있습니다.\n이걸 계속해서 잘 지키려면 내 것에 너무 매몰되지 않는 것이 중요합니다.\n나 혹은 우리 Cell이 했으니 계속해서 개선해나가고 싶은 마음은 오너십 관점에서 대단히 좋다고 보고 장려합니다.\n다만, 그게 너무 강해지면 일에 대한 위임이 어렵습니다.\n\"일은 일로 봐라\" 같은 의미가 아니라,\n다른 사람이, 다른 Cell이 이 일을 이어받아도 더 잘해줄 것이라는 믿음이 중요합니다.\n그래야만 유기적으로 각 Cell이 전사의 중요한 과제에 니것내것 구분 없이 빠르게 실행하고 몰입할 수 있습니다.\n꼭 내가 그 일을 하지 않더라도 혹은 내가 한 일을 다른 사람들이 이어가더라도 내 일처럼 도와주고 지원해준다면 저희는 정말로 최고의 조직이 될 수 있다고 믿습니다.\n아직 저희가 그리고 있는 큰 그림에서 구현하지 못한 것들이 너무나 많습니다.\n여러 사업 전개에 필요한, 운영/사업에서 필요로 하는 도구들과 기능들도 너무나 많이 남아있습니다.\n이렇게 해야할 것들이 많을 때는 완성도 있게 하나하나 심혈을 기울이기 보다는 가능한 MVP를 빠르게 출시해서 어디 하나 과락이 없는 상태를 만들어가는 것이 중요합니다.\n그런 면에서 RnR은 있지만, RnR을 따지지 않고 유기적으로 지원하고 위임할 수 있는 조직의 형태를 계속 유지되길 바라고 있습니다.",
        "guid": "https://jojoldu.tistory.com/816",
        "categories": [
          "생각정리",
          "rnr",
          "엔비디아",
          "용병 제도",
          "팀 문화",
          "품앗이 문화"
        ],
        "isoDate": "2025-01-28T02:18:29.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "사용성을 지키면서 광고 매출 극대화하기, 가능할까요?",
        "link": "https://techblog.lycorp.co.jp/ko/maximizing-ad-revenue-while-preserving-usability",
        "pubDate": "Fri, 24 Jan 2025 02:00:00 GMT",
        "content": "안녕하세요. LINE Plus ABC Studio 기획자 한영주입니다. 저는 일본 최대 규모의 배달 서비스인 데마에칸(Demaecan, 出前館) 앱을 기획하고 있습니다.\n한국의 배...",
        "contentSnippet": "안녕하세요. LINE Plus ABC Studio 기획자 한영주입니다. 저는 일본 최대 규모의 배달 서비스인 데마에칸(Demaecan, 出前館) 앱을 기획하고 있습니다.\n한국의 배...",
        "guid": "https://techblog.lycorp.co.jp/ko/maximizing-ad-revenue-while-preserving-usability",
        "isoDate": "2025-01-24T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황의윤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Build a Great Product",
    "category": "개인",
    "posts": []
  },
  {
    "name": "지금 써보러 갑니다",
    "category": "개인",
    "posts": []
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "쿠팡 엔지니어링",
    "category": "기업",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "리멤버 (드라마 앤 컴퍼니)",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "토스, 2024년 ‘혜택’ 결산",
        "link": "https://blog.toss.im/article/2024benefit",
        "pubDate": "Fri, 24 Jan 2025 01:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}토스 고객 누구나 평생 무료 송금 혜택...지난해 약 9억 8000만 건 이루어져\n만보기, 함께 토스 켜고 포인트 받기 등 사용자에게 일상 속 소소한 혜택 제공\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n모바일 금융 서비스 ‘토스’를 운영하는 비바리퍼블리카(이하 ‘토스’)가 2024년 한 해 동안 사용자들에게 제공한 주요 혜택 데이터를 공개했다. 토스 '혜택'은 무료 송금과 같이 비용을 절감해 주는 서비스와 '만보기'처럼 리워드를 제공하는 서비스로 나뉜다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n2024년 한 해 동안 토스 이용자들의 송금 횟수는 약 9억 8000만 회를 기록했다. 송금 수수료를 500원으로 계산하면, 1인당 연평균 약 4만 원의 송금 수수료를 아낀 셈이다. 토스는 2015년 간편송금 서비스를 시작했다. 2021년부터 업계에서 선도적으로 모든 고객에게 평생 무료 송금을 제공하고 있다.\n토스 앱 하단 ‘혜택’ 메뉴를 통해 현금성 포인트를 적립할 수 있는 서비스는 1월 말 현재 35가지에 이른다. 매일 새로운 혜택이 추가되고, 바로 참여할 수 있는 이벤트도 확인할 수 있다. 대표적인 서비스로는 ▲만보기 ▲함께 토스 켜고 포인트 받기 ▲고양이 키우고 간식 받기 등이 있다.\n‘만보기’는 토스 가입자의 40%가 넘는 약 1150만 명이 사용하고 있다. 만보기 이용자는 주당 평균 2회 이상 만보기를 사용하고, 하루 평균 약 5000보를 걸은 것으로 나타났다. 이용자들은 평균 약 2900원을 적립했다. 토스 만보기는 1만 보 이내에서 정해진 걸음 수에 따라 포인트와 복권을 제공한다.\n‘함께 토스 켜고 포인트 받기’는 2023년 처음 선보인 서비스로 이른바 ‘토스 성지’라는 유행어를 낳은 토스의 인기 혜택 서비스다. 오프라인에서 이용자 주변에 토스 앱을 켠 또 다른 이용자가 있을 때 포인트를 받는 방식이다. 지난해 ‘함께 토스 켜고 포인트 받기’를 통해 가장 많은 포인트를 적립한 이용자는 약 7만 원을 적립한 것으로 나타났다. 1인당 평균 약 3400원의 포인트를 적립했다.\n‘고양이 키우고 간식 받기’는 토스페이 결제 시 가상의 고양이를 키울 수 있는 서비스다. 결제 시 고양이를 키울 수 있는 아이템을 받고, 이를 e쿠폰으로 교환하는 식이다. 작년 한 해 동안 ‘고양이 키우고 간식 받기’에서 e쿠폰을 가장 많이 받은 이용자는 120장의 쿠폰을 수령했다. 이용자 1인당 평균은 약 2700원으로 햄버거 하나와 교환할 수 있는 e쿠폰을 받았다.\n이 밖에 ‘오늘의 행운복권’, ‘이번 주 미션’ 등도 토스 사용자가 즐겨 찾는 혜택 서비스로 나타났다. 이 혜택 서비스를 통해 가장 많은 포인트를 적립한 사용자는 1년 동안 약 99만 원을 모았다. 매일 2700원 이상의 혜택을 적립한 셈이다.\n토스 관계자는 \"토스는 이용자들에게 금융 서비스부터 일상 속 이벤트 등 다양한 영역에서 체감할 수 있는 혜택을 제공해 오고 있다\"며 \"앞으로도 사용자 친화적인 서비스로 편리하고 유익한 앱 사용 경험을 줄 수 있도록 노력하겠다\"고 말했다.",
        "content": "인당 송금 수수료 4만 원 절약",
        "contentSnippet": "인당 송금 수수료 4만 원 절약",
        "guid": "https://blog.toss.im/article/2024benefit",
        "isoDate": "2025-01-24T01:00:00.000Z"
      },
      {
        "title": "2025년부터 달라지는 정책: 금융·경제·복지 제도 25가지",
        "link": "https://blog.toss.im/article/new-policies-2025",
        "pubDate": "Thu, 23 Jan 2025 02:04:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}2025년을 맞아 금융·경제·복지 분야의 많은 정책들이 새롭게 시행돼요. 이 중에서 특히 눈에 띄는 정책 25가지를 골라서 정리했어요. 최저시급 인상부터 스트레스 DSR 3단계까지. 우리 일상에 큰 영향을 주는 정책의 변화를 하나씩 살펴볼까요?\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}많은 분들이 받을 수 있는 혜택\n1. 최저시급이 1만 원을 돌파했어요\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}2025년 최저임금이 지난해 시간당 9,860원에서 10,030원으로 1.7% 인상됐어요. 주 40시간 일했을 때 받는 월급은 209만 6,270원으로, 작년보다 35,530원 올랐어요. 최저시급이 1만 원을 넘은 건 제도 도입 이후 37년 만의 일이에요.\n2. 실업급여도 함께 올랐어요\n실업급여 하한액이 하루 8시간 일하는 근로자의 일급을 기준으로 64,192원으로 인상돼요. 한 달로 계산하면 192만 5,760원 받을 수 있어요.\n3. 모바일 주민등록증을 간편하게 발급받을 수 있어요\n3월부터 17세 이상 국민이라면 누구나 모바일 주민등록증을 무료로 발급받을 수 있어요. 실물 주민등록증과 동일하게 사용할 수 있고, 행정복지센터(주민센터)에 방문하거나 정부24에서 온라인으로 신청하면 돼요.\n4. 문화비 소득공제가 헬스장과 수영장에도 적용돼요\n7월부터 도서 구입, 공연 관람 등에 적용되던 문화비 소득공제가 헬스장과 수영장 이용에도 확대돼요. 연 소득 7천만 원 이하인 근로소득자는 시설 이용료의 30%를 300만 원 한도 내에서 소득공제 받을 수 있어요. ‘체육시설법’에 따라 신고된 헬스장과 수영장 중 문화비 소득공제 제도 참여에 신청한 업체에만 적용돼요.\n5. 예금보호 한도가 상향돼요\n예금보호 한도가 5천만 원에서 1억 원으로 올라요. 내 돈을 맡긴 은행이 파산하더라도 최대 1억 원까지 안전하게 돌려받을 수 있어요. 1월 중에 예금자보호법 개정안이 공포된다면, 금융위원회의 결정에 따라 올해 안으로 예금보호 한도가 상향될 예정이에요.\n6. 국민내일배움카드 훈련비 지원이 늘어요\n내일배움카드 계좌 한도 300만 원을 모두 소진했을 때 100만 원을 추가로 지원받을 수 있었는데, 2025년부터는 200만 원을 추가로 지원받아 더 많은 훈련 기회를 보장받을 수 있어요.\n출산·양육 지원 확대\n7. 육아휴직 급여가 인상돼요\n육아휴직수당 상한액이 월 150만 원에서 250만 원으로 올랐어요. 부모 동반 휴직 시 받는 첫 달 급여 상한액도 250만 원, 한부모 근로자의 첫 3개월 급여도 300만 원으로  50만 원씩 올랐어요. 휴직 중 75% 복직 후 25%를 지원하던 기존의 사후지급 방식은 폐지되어, 육아휴직 기간 동안 육아휴직 급여를 100% 받을 수 있어요.\n8. 육아 휴직 기간이 늘어나요\n2월 23일부터 육아휴직 기간이 기존 최대 1년에서 1년 6개월로 확대돼요. 배우자의 출산휴가도 10일에서 20일로 늘어나며, 사용 기준도 출산일 이후 90일에서 120일 이내로 변경돼요.\n9. 2자녀 가구도 자동차 취득세가 감면돼요\n다자녀 가구의 자동차 취득세 감면 기준이 3자녀 이상에서 2자녀 가구로 확대됐어요. 이에 따라 2자녀 가구도 자동차 취득세 50%를 감면받을 수 있게 되었어요.\n10. 근로장려금을 받을 수 있는 맞벌이 가구가 많아져요\n맞벌이 가구 근로장려금 소득상한금액이 기존 3,800만 원에서 4,400만 원으로 확대됐어요. 단독가구 소득상한금액인 연 2,200만 원의 두 배 수준에 맞춘 것으로, 일하는 저소득 결혼가구에 대한 지원을 강화하기 위한 조치예요.\n11. 혼인신고를 하면 세액공제 혜택을 받을 수 있어요\n혼인신고 시 부부 1인당 50만 원씩 세액이 공제돼요. 초혼∙재혼 관계없이 생애 1회 한정으로, 지난해 1월1일 이후 혼인신고 분부터 소급적용이 가능하고, 결혼세액공제 제도의 기한은 2026년 12월 31일까지예요.\n12. 기업의 출산지원금이 전액 비과세로 변경돼요\n기업이 근로자에게 지급하는 출산지원금이 전액 비과세로 바뀌어요. 출산 후 2년 이내에 지급한 경우에만 해당돼요.\n13. 자녀·손자녀 세액공제 금액이 확대돼요\n양육비 부담 완화를 위해 1월 1일부터 발생하는 소득부터 자녀·손자녀(8~20세)에 대한 자녀세액공제 금액이 확대돼요. 공제금액은 첫째 25만 원, 둘째 30만 원, 셋째 이후 인당 40만 원으로 작년보다 10만 원씩 늘어났어요.\n14. 아이돌봄 서비스 지원이 확대돼요\n아이돌봄 서비스 대상을 기준 중위소득 150% 이하 가구에서 200% 이하 가구로 확대했어요. 또, 돌봄수당은 지난해 1만 1,630원에서 4.7% 오른 1만 2,180원으로 책정됐어요. 36개월 이하 영아를 돌볼 때는 시간당 1,500원의 추가 수당까지 신규 지급해요.\n15. 늘봄학교 대상 지원 확대돼요\n학교와 지역사회의 다양한 교육자원을 연계해 정규수업 외 교육 프로그램을 제공하는 늘봄학교가 지난해까지는 초등학교 1학년을 우선 대상으로 운영됐지만, 2025년 1학기부터는 그 대상이 초등학교 2학년까지 확대돼요.\n미래를 위한 새로운 기회\n16. 고교학점제가 전면 시행돼요\n학생이 스스로 진로와 적성에 맞춰 과목을 선택하고 이수할 수 있는 고교학점제가 올해부터 전면 도입돼요. 모든 고등학생이 진로에 맞춰 과목을 선택하고 학점을 이수할 수 있어요. 3년간 192학점을 취득하면 졸업할 수 있어요.\n17. 청년도약계좌 정부기여금이 확대돼요\n청년도약계좌 정부기여금이 월 최대 2만 4,000원에서 3만 3,000원으로 늘어나면서 5년간 198만 원까지 지원 받을 수 있어요. 이 계좌를 3년 이상 유지하다가 중도에 해지하면, 비과세 혜택과 정부 기여금의 60%를 받을 수 있어요. 이전에는 중도해지 시 비과세 혜택이 적용되지 않고, 가입 기간 동안 받은 정부 기여금을 전액 반환해야 했어요.\n18. 무주택 청년을 위한 주택대출상품이 새로 나와요\n청년들의 내 집 마련을 돕기 위해 금리 2%대에 분양가의 80%까지 대출해주는 ‘청년주택드림대출’이 올해 상반기 시행돼요. 청년주택드림청약에 가입한 뒤 1년 이상 돈을 납입한 20~39세 무주택자 청년 중 연 소득이 7천만 원(부부는 1억 원) 이하인 사람이 6억 원 이하(전용 85㎡ 이하) 주택을 분양받을 때 이 대출을 이용할 수 있어요.\n19. 군인 월급이 올랐어요\n올해에도 병 봉급이 인상되면서 군 장병들이 받는 월급은 계급에 따라 이병이 64만 원에서 75만 원, 일병은 80만 원에서 90만 원, 상병은 100만 원에서 120만 원, 병장은 125만 원에서 150만 원으로 올랐어요.\n20. 장병내일준비적금 정부지원금도 커졌어요\n전역 시 목돈 마련을 지원해주는 장병내일준비적금 지원금도 월 최대 40만 원에서 55만 원으로 늘어났어요.\n내 집 마련을 위한 정책 변화\n21. 대출금 중도 상환 수수료가 낮아졌어요\n주택담보대출 중도상환수수료가 절반으로 줄어들어요. 2025년 1월 중순부터 신규 대출 상품에만 적용돼요. 현재 시중 은행의 주택담보대출 수수료는 약 1.2~1.4%, 신용대출은 0.6~0.8% 수준인데 앞으로 각각 0.6~0.7%, 0.4% 수준으로 낮아질 전망이에요.\n22. 주택청약종합저축 소득공제 혜택이 커져요\n연 소득 7천만 원 이하 무주택 근로자라면 납입액의 40%를 300만 원 한도 내에서 공제받을 수 있어요. 세대주 외에 배우자도 추가로 소득공제 받을 수 있어요.\n23. 신생아 특례 대출 요건이 완화돼요\n올해 1월 1일 이후 아이를 출산한 가구에 한해 신생아 특례  대출 소득 요건이 기존 부부 합산 1억 3천만 원에서 2억 5천만 원으로 완화돼요. 특례 대출 기간에 아이를 더 낳으면 우대금리가 추가로 0.4% 적용돼요. 이 제도는 2027년까지 3년간 시행돼요.\n24. 비아파트 구입자를 청약시 무주택으로 인정해주는 범위가 확대돼요\n빌라와 같은 비아파트 구입자가 아파트 청약에서 불이익을 받지 않도록 청약시 무주택으로 인정하는 비아파트의 범위가 공시가격 1억 원(수도권 1.6억 원) 이하, 전용면적 60㎡ 이하 주택에서 3억 원 이하(수도권 5억 원), 85㎡ 이하 주택으로 확대됐어요.\n25. 스트레스 DSR 3단계가 시행돼요\n2025년 7월부터 스트레스 *DSR 3단계가 시행돼요. 스트레스 DSR은 대출 심사 시 금리 상승 가능성을 반영해 가산금리를 부과하는 제도로, 가계 빚을 줄이기 위해 도입됐어요. 금융위원회는 시장 충격을 최소화하기 위해 작년 2월부터 이를 단계적으로 시행해왔죠. 스트레스 3단계가 적용되면 같은 소득이라도 이전 단계보다 대출 이자율이 높아지고 대출 한도도 줄어들어요. 올해 대출을 고려하고 있다면 미리 알아보는 게 좋아요.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}*DSR이란 내 연봉 대비 빌릴 수 있는 돈의 비율을 뜻해요. 주택담보대출뿐 아니라 학자금대출, 마이너스대출, 자동차할부, 카드론 등 내가 받은 모든 대출의 원리금을 합한 금액이 내 연봉의 일정 비율을 넘을 수 없어요.\n2025년에도 다양한 정책 변화가 우리의 일상에 큰 영향을 줄 거예요. 나에게 해당하는 혜택은 놓치지 않길 바랍니다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 윤동해 Graphic 이제현",
        "content": "내 일상에 도움이 되는 혜택을 함께 살펴봐요",
        "contentSnippet": "내 일상에 도움이 되는 혜택을 함께 살펴봐요",
        "guid": "https://blog.toss.im/article/new-policies-2025",
        "isoDate": "2025-01-23T02:04:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]