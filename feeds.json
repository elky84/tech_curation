[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Sy Brand",
        "title": "Pure Virtual C++ 2025 is Tomorrow",
        "link": "https://devblogs.microsoft.com/cppblog/pure-virtual-cpp-2025-is-tomorrow/",
        "pubDate": "Tue, 29 Apr 2025 09:07:40 +0000",
        "content:encodedSnippet": "Pure Virtual C++ is our free, one-day, virtual conference for the whole C++ community. It’s running live tomorrow, 30th April, from 14:00 to 16:30 UTC.\nRegister for Free\n\nThe talks are:\n14:00 UTC: Welcome to v1.0 of the meta::[[verse]]! with Inbal Levi\n14:30 UTC: Proxy: Next Generation Polymorphism with Mingxin Wang\n15:00 UTC: Making unfamiliar C++ code familiar with GitHub Copilot with Sinem Akinci\n15:30 UTC: C++ Modules Myth Busting with Cameron DaCamara\n16:00 UTC: constexpr everything?! with Hana Dusíková\nWe also have a host of pre-conference content available on YouTube.\nWe look forward to seeing you there!\nThe post Pure Virtual C++ 2025 is Tomorrow appeared first on C++ Team Blog.",
        "dc:creator": "Sy Brand",
        "comments": "https://devblogs.microsoft.com/cppblog/pure-virtual-cpp-2025-is-tomorrow/#respond",
        "content": "<p>Pure Virtual C++ is our free, one-day, virtual conference for the whole C++ community. It&#8217;s running live tomorrow, 30th April, from 14:00 to 16:30 UTC. The talks are: 14:00 UTC: Welcome to v1.0 of the meta::[[verse]]! with Inbal Levi 14:30 UTC: Proxy: Next Generation Polymorphism with Mingxin Wang 15:00 UTC: Making unfamiliar C++ code familiar with [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/pure-virtual-cpp-2025-is-tomorrow/\">Pure Virtual C++ 2025 is Tomorrow</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "Pure Virtual C++ is our free, one-day, virtual conference for the whole C++ community. It’s running live tomorrow, 30th April, from 14:00 to 16:30 UTC. The talks are: 14:00 UTC: Welcome to v1.0 of the meta::[[verse]]! with Inbal Levi 14:30 UTC: Proxy: Next Generation Polymorphism with Mingxin Wang 15:00 UTC: Making unfamiliar C++ code familiar with […]\nThe post Pure Virtual C++ 2025 is Tomorrow appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=35414",
        "categories": [
          "Announcement",
          "C++",
          "Pure Virtual C++"
        ],
        "isoDate": "2025-04-29T09:07:40.000Z"
      },
      {
        "creator": "Sy Brand",
        "title": "Pure Virtual C++ 2025: Pre-Conference Videos",
        "link": "https://devblogs.microsoft.com/cppblog/pure-virtual-cpp-2025-pre-conference-videos/",
        "pubDate": "Wed, 23 Apr 2025 18:46:32 +0000",
        "content:encodedSnippet": "Pure Virtual C++ is our free, one-day, virtual conference for the whole C++ community. It is running on 30th April.\nRegister for Free\n\nThe first half of our pre-conference videos is now available on YouTube. The videos are:\nMSVC C++23 Conformance\nSimplifying your Cross-Platform Development with Visual Studio\nC++ Dynamic Debugging\nHow Debuggers Work\nA Year in Review: Microsoft’s Latest CMake Improvements in Visual Studio and VS Code\nCMake Debugger for Projects Targeting Remote Linux Systems\nAI-generated doc comments in Visual Studio\nWe look forward to seeing you at Pure Virtual C++!\nThe post Pure Virtual C++ 2025: Pre-Conference Videos appeared first on C++ Team Blog.",
        "dc:creator": "Sy Brand",
        "comments": "https://devblogs.microsoft.com/cppblog/pure-virtual-cpp-2025-pre-conference-videos/#respond",
        "content": "<p>Pure Virtual C++ is our free, one-day, virtual conference for the whole C++ community. It is running on 30th April. The first half of our pre-conference videos is now available on YouTube. The videos are: MSVC C++23 Conformance Simplifying your Cross-Platform Development with Visual Studio C++ Dynamic Debugging How Debuggers Work A Year in Review: [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/pure-virtual-cpp-2025-pre-conference-videos/\">Pure Virtual C++ 2025: Pre-Conference Videos</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "Pure Virtual C++ is our free, one-day, virtual conference for the whole C++ community. It is running on 30th April. The first half of our pre-conference videos is now available on YouTube. The videos are: MSVC C++23 Conformance Simplifying your Cross-Platform Development with Visual Studio C++ Dynamic Debugging How Debuggers Work A Year in Review: […]\nThe post Pure Virtual C++ 2025: Pre-Conference Videos appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=35406",
        "categories": [
          "Announcement",
          "C++",
          "Pure Virtual C++"
        ],
        "isoDate": "2025-04-23T18:46:32.000Z"
      }
    ]
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": [
      {
        "creator": "",
        "title": "Introducing AutoPatchBench: A Benchmark for AI-Powered Security Fixes",
        "link": "https://engineering.fb.com/2025/04/29/ai-research/autopatchbench-benchmark-ai-powered-security-fixes/",
        "pubDate": "Tue, 29 Apr 2025 17:15:17 +0000",
        "content:encodedSnippet": "We are introducing AutoPatchBench, a benchmark for the automated repair of vulnerabilities identified through fuzzing.\nBy providing a standardized benchmark, AutoPatchBench enables researchers and practitioners to objectively evaluate and compare the effectiveness of various AI program repair systems. \nThis initiative facilitates the development of more robust security solutions, and also encourages collaboration within the community to address the critical challenge of software vulnerability repair.\nAutoPatchBench is available now on GitHub.\nAI is increasingly being applied to solve security challenges, including repairing vulnerabilities identified through fuzzing. However, the lack of a standardized benchmark for objectively assessing AI-driven bug repair agents specific to fuzzing has impeded progress in academia and the broader community. Today, we are publicly releasing AutoPatchBench, a benchmark designed to evaluate AI program repair systems. AutoPatchBench sits within CyberSecEval 4, Meta’s new benchmark suite for evaluating AI capabilities to support defensive use cases. It features 136 fuzzing-identified C/C++ vulnerabilities in real-world code repos along with verified fixes sourced from the ARVO dataset. \nAutoPatchBench provides a standardized evaluation framework for assessing the effectiveness of AI-assisted vulnerability repair tools. This benchmark aims to facilitate a comprehensive understanding of the capabilities and limitations of various AI-driven approaches to repairing fuzzing-found bugs. By offering a consistent set of evaluation criteria, AutoPatchBench fosters transparency and reproducibility in research, enabling both academic and industry professionals to identify best practices and areas for improvement.\nFixing fuzzing-found vulnerabilities with AI\nFuzzing is a cornerstone in automated testing, renowned for its effectiveness in uncovering security vulnerabilities. By bombarding a target program with vast amounts of pseudo-random input data, fuzz testing exposes critical security and reliability issues, such as memory corruption, invalid pointer dereference, integer overflow, and parsing errors. \nHowever, resolving a fuzzing crash is often a labor intensive task, demanding intricate debugging and thorough code review to pinpoint and rectify the underlying cause. This process can be both time-consuming and resource-intensive. Unlike regular test failures, fuzzing bugs frequently reveal security vulnerabilities that pose severe threats to system integrity and user data. Given these stakes, automating the repair of fuzzing bugs with AI becomes not just advantageous but essential. AI’s ability to swiftly analyze patterns and propose solutions significantly reduces the time and effort required for repairs, making it an invaluable ally in safeguarding our digital environments.\nLet’s explore the process of addressing bugs identified through fuzzing by examining a demonstrative example. Consider the following C function, which harbors a read/write buffer overflow vulnerability:\n#include <stdio.h>\r\n#include <string.h>\r\nvoid process_input(const char *input) {\r\n    char buffer[8];\r\n    strcpy(buffer, input); // Potential buffer overflow\r\n    printf(\"Processed: %s\\n\", buffer);\r\n}\r\n\nIn this scenario, a fuzzing harness might supply an input that surpasses the buffer’s capacity, leading to a crash due to buffer overflow. A typical stack trace from such a crash might appear as follows:\n== Fuzzer Crash Report ==\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x00007ffff7af1223 in strcpy () from /lib/x86_64-linux-gnu/libc.so.6\r\n(gdb) bt\r\n#0  0x00007ffff7af1223 in strcpy ()\r\n#1  0x0000555555555140 in process_input (input=0x7fffffffe695 \"AAAAAA...\")\r\n#2  0x0000555555555162 in main (argc=2, argv=0x7fffffffe5f8)\nHere, the process_input function invokes strcpy on a string that exceeds the eight-character buffer, causing a segmentation fault. A straightforward patch involves ensuring the copy operation remains within the buffer’s limits. This can be achieved by using a bounded copy function like strncpy or implementing a length check before copying:\nvoid process_input(const char *input) {\r\n    char buffer[8];\r\n    strncpy(buffer, input, sizeof(buffer) - 1);\r\n    buffer[sizeof(buffer) - 1] = '\\0';\r\n    printf(\"Processed: %s\\n\", buffer);\r\n}\r\n\nThis patch ensures that the string remains within the buffer’s limits, effectively preventing out-of-bounds writes. Its correctness can be confirmed by verifying that the fuzzing input, which previously caused the crash, no longer does so. Additional checks can be conducted to ensure the patch doesn’t introduce any unintended side effects.\nAs illustrated, fixing a fuzzing crash involves:\nAnalyzing the crash stack trace and the target code. \nPinpointing the root cause. \nPatching the vulnerable code. \nVerifying the fix’s accuracy. \nAn AI-based solution can automate these steps by utilizing an LLM’s capability to understand and generate code.\nWhy we developed AutoPatchBench\nAutoPatchBench is informed by key advancements in the field of AI-driven program repair, particularly those focusing on fuzzing-found vulnerabilities. Among the notable contributions is Google’s tech report on AI-powered patching, which pioneered the use of LLMs for addressing fuzzing crashes, achieving a 15% fix rate with their proprietary dataset. Subsequently, Google’s study on generic program repair agents introduced the GITS-Eval benchmark, encompassing 178 bugs across various programming languages. \nIn the realm of AI software engineering agents, benchmarks like SWE-Bench and SWE-Bench Verified have gained widespread acceptance for evaluating generic AI SWE agents. However, these benchmarks do not specifically tackle the unique challenges posed by fuzzing-found vulnerabilities, which demand specialized approaches that utilize fuzzing-specific artifacts and address security concerns. \nAutoPatchBench addresses this gap by offering a dedicated benchmark focused on a wide variety of C/C++ vulnerabilities of 11 crash types identified through fuzzing with automated verification capability. Unlike the broader focus of GITS-Eval and SWE-Bench, AutoPatchBench is specifically designed to assess the effectiveness of AI-driven tools in repairing security-critical bugs typically uncovered by fuzzing. This targeted approach enables a more precise evaluation of AI capabilities in meeting the complex requirements of fuzzing-found vulnerabilities, thereby advancing the field of AI-assisted program repair in a focused manner.\nInside AutoPatchBench\nWe’re making AutoPatchBench publicly available as part of CyberSecEval 4 to encourage community collaboration in tackling the challenge of automating fuzzing crash repairs. This benchmark is specifically designed for AI program repair agents focusing on C/C++ bugs identified through fuzzing. It includes real-world C/C++ vulnerabilities with verified fixes sourced from the ARVO dataset, and incorporates additional verification of AI-generated patches through fuzzing and white-box differential testing.\nARVO dataset\nThe ARVO dataset serves as the foundation for AutoPatchBench, offering a comprehensive collection of real-world vulnerabilities that are essential for advancing AI-driven security research. Sourced from C/C++ projects identified by Google’s OSS-Fuzz, ARVO includes over 5,000 reproducible vulnerabilities across more than 250 projects. Each entry is meticulously documented with a triggering input, a canonical developer-written patch, and the capability to rebuild the project in both its vulnerable and patched states. \nHowever, there are notable challenges when using the ARVO dataset as a benchmark for AI patch generation:\nWhile reproducibility is vital for a reliable benchmark, the ARVO dataset includes samples where crashes are not consistently reproducible. Some samples lack crash stack traces, making it exceedingly difficult to address the crash.\nAlthough ARVO provides a ground-truth fix for each identified vulnerability, it lacks an automated mechanism to verify the correctness of a generated patch. Objective automated verification is essential for a benchmark focused on patch generation.\nAutoPatchBench addresses these challenges by creating a curated subset and by employing a comprehensive and automated verification process.\nSelection criteria\nTo ensure the reliability and effectiveness of AutoPatchBench, we meticulously filtered the ARVO dataset samples based on the following criteria:\nValid C/C++ vulnerability: The ground-truth fix shall edit one or more C/C++ source files that are not fuzzing harnesses.\nDual-container setup: Each vulnerability is accompanied by two containers—one that contains vulnerable code and another for the fixed code—that build without error.\nReproducibility: The crash must be consistently reproducible within the vulnerable container.\nValid stack trace: A valid stack trace must be present within the vulnerable container to facilitate accurate diagnosis and repair.\nSuccessful compilation: The vulnerable code must compile successfully within its designated container, ensuring that the environment is correctly set up for testing.\nFixed code verification: The fixed code must also compile successfully within its respective container, confirming that the patch does not introduce new build issues.\nCrash resolution: The crash must be verified as resolved within the fixed container, demonstrating the effectiveness of the patch.\nFuzzing pass: The fixed code must pass a comprehensive fuzzing test without finding new crashes, ensuring that the ground-truth patch maintains the integrity and functionality of the software.\nAfter applying these rigorous selection criteria, we retained 136 samples for AutoPatchBench that fulfill the necessary conditions for both patch generation and verification. From this refined set, we created a down-sampled subset of 113 AutoPatchBench-Lite samples to provide a focused benchmark for testing AI patch generation tools. These subsets preserves the diversity and complexity of real-world vulnerabilities including 11 distinct crash types, offering a solid foundation for advancing AI-driven security solutions.\nPatch verification\nIn the process of patch generation, the patch generator utilizes two automated methods to verify the viability of a generated patch before submitting it for evaluation. The first method involves attempting to build the patched program, which checks for syntactic correctness. The second method involves attempting to reproduce the crash by running the input that initially triggered it. If the crash no longer occurs, it suggests that the issue has been resolved. However, these steps alone are insufficient to guarantee the correctness of the patch, as a patch might not maintain the program’s intended functionality, rendering it incorrect despite resolving the crash.\nTo address this issue, AutoPatchBench adopts a comprehensive approach to automate the evaluation of generated patches. This involves subjecting the patched code to further fuzz testing using the original fuzzing harness that initially detected the crash. Additionally, white-box differential testing compares the runtime behavior of the patched program against the ground truth repaired program, confirming that the patch has effectively resolved the underlying bug without altering the program’s intended functionality. Since a patch can potentially be made in multiple places, we cannot assume that the LLM will patch the same function as the groundtruth patch does. Instead we find all the callstacks for each call to a patched function. Then we find the lowest common ancestor (LCA) across all pairs of stacktraces offered by the groundtruth patch and the LLM patch. We then utilize debug information to inspect arguments, return values, and local variables at the first function above the LCA, differential testing offers a detailed view of the patch’s impact on the program state. \nThis process evaluates whether the generated patch produces a program state identical to the ground truth program after the patched function returns. By using a diverse set of inputs obtained from fuzzing, this gives higher confidence that the bug is fixed without changing the visible behavior of the patched functions. This differential testing is implemented using a Python script that leverages LLDB APIs to dump all visible states and identify differences between the ground truth and the patched program. \nHowever, as with all attempts to solve provably undecidable problems (in this case: program equivalence), there are some failure modes for this verification step. For example, sometimes the analysis fails with timeouts, in which case we consider the semantics to be preserved if both the ground truth and the LLM patch timed out. Programs might also behave non-deterministically, and we run each input three times to identify nondeterministic struct fields and values. Such fields will not be compared to avoid false alarms from noisy, random values. Additionally, we strip any fields that contain the substring “build” or “time” as we’ve observed false positives from build-ids (that happen to be deterministic within a program, but not across different patches). \nIt should also be noted that on a number of examples, the crashing PoC never actually triggered the breakpoints on the ground truth patch, making comparison of the resulting states impossible. However, our case study showed that white-box differential testing is still effective in filtering out a majority of incorrect patches despite its limitation, which will be discussed in the case study.\nAutoPatchBench and AutoPatchBench-Lite\nAutoPatchBench is a comprehensive benchmark dataset of 136 samples. It encompasses a wide range of real-world vulnerabilities, providing a robust framework for assessing the capabilities of automated patch generation systems. \nWithin this benchmark, we have also created a subset called AutoPatchBench-Lite that consists of 113 samples. AutoPatchBench-Lite focuses on a simpler subset of vulnerabilities where the root cause of the crash is confined to a single function. This version is designed to cater to scenarios where the complexity of the bug is relatively low, making it more accessible for tools that are in the early stages of development or for those that specialize in handling straightforward issues.\nThe rationale for creating AutoPatchBench-Lite stems from the observation that when root causes are distributed across multiple locations within the code, the difficulty of generating a correct patch increases significantly. Addressing such “hard” crashes requires a tool to possess advanced reasoning capabilities to analyze larger codebases and apply patches to multiple areas simultaneously. This complexity not only challenges the tool’s design but also demands a higher level of sophistication in its algorithms to ensure accurate and effective patching.\nBy offering both AutoPatchBench and AutoPatchBench-Lite, we provide a tiered approach to benchmarking, allowing developers to progressively test and refine their tools. This structure supports the development of more advanced solutions capable of tackling both simple and complex vulnerabilities, ultimately contributing to the enhancement of AI-assisted bug repair techniques.\nExpected use cases\nAutoPatchBench offers significant value to a diverse range of users. Developers of auto-patch tools can leverage our open-sourced patch generator to enhance their tools and assess their effectiveness using the benchmark. Software projects employing fuzzing can incorporate our open-sourced patch generator to streamline vulnerability repair. Additionally, model developers can integrate the benchmark into their development cycles to build more robust and specialized expert models for bug repair. The tooling around the patch generator provided here can also be used in reinforcement learning as a reward signal during training. This data helps train models to better understand the nuances of bug repair, enabling them to learn from past fixes and improve their ability to generate accurate patches. \nReference implementation\nWe developed a basic patch generator to establish a baseline performance using AutoPatchBench. This generator is specifically designed to address simple crashes that involve patching a single function. We have open-sourced this reference implementation to encourage the community to build and expand upon it.\nFigure 1 shows a high-level overview of its design. The patch generator takes crash stack trace and target source code as input. It identifies the source locations from the stack trace and extracts every function that contains those locations. It then asks the LLM to identify the root cause and repair the crash by patching one of the functions. Upon receiving a response from the LLM, the patch generator extracts the revised code, applies the patch, compiles the program, and tests it against the original input that caused the crash. If the build or test fails, we re-engage the LLM with the error message from the build or test output, requesting it to attempt a solution again until the crash is resolved. If a fix trajectory fails to reach a valid solution that passes build and crash reproduction within a finite number of steps, we start a new trajectory to reset the context window, preventing prolonged entrapment in an incorrect path.\nFigure 1: Patch generation flowchart.\nThe example prompt below also captures the essence of our approach. Note that the actual prompt is more detailed and divided into multiple segments to promote chain-of-thought reasoning.\nAs an experienced Security Engineer at Meta, your task is to address the following security-critical fuzzing crash. Below is the stack trace of the crash:\r\n\r\n== Fuzzer Crash Report ==\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x00007ffff7af1223 in strcpy () from /lib/x86_64-linux-gnu/libc.so.6\r\n(gdb) bt\r\n#0  0x00007ffff7af1223 in strcpy ()\r\n#1  0x0000555555555140 in process_input (input=0x7fffffffe695 \"AAAAAA...\")\r\n#2  0x0000555555555162 in main (argc=2, argv=0x7fffffffe5f8)\r\n\r\nHere is the source code for the functions involved in the stack trace:\r\n\r\nstrcpy() {...}\r\n\r\nvoid process_input(const char *input) {\r\n    char buffer[8];\r\n    strcpy(buffer, input); // Potential buffer overflow\r\n    printf(\"Processed: %s\\n\", buffer);\r\n}\r\n\r\nint main() {...}\r\n\r\nAssuming the root cause of the crash is within one of these functions, generate a patched version of the faulty function to resolve the fuzzing crash. Ensure that you provide a complete rewrite of the function so that the patch can be applied and the code compiled without errors.\r\n\nA case study with AutoPatchBench-Lite\nIn the case study, we demonstrate the use of AutoPatchBench by evaluating our reference patch generator with several LLM models. Given that our reference implementation is limited to addressing simple issues, we conducted our evaluation with AutoPatchBench-Lite, which contains 113 samples. To prevent fix trajectories from becoming excessively prolonged, we capped the maximum length of each trajectory at five. Additionally, we set the maximum number of retries to 10. \nPlease note that the case study is not intended to provide a statistically rigorous comparison of model performance. Instead, it aims to present preliminary results to establish a baseline expectation. We encourage future research to build upon these findings.\nEffectiveness of patch generation and verification\nWe evaluated the effectiveness of the patch generator and our automated verification processes while using different LLM models as back-end. The figure below illustrates the effectiveness of patch generation and verification by presenting the percentage of samples that successfully passed each sequential verification step: (1) patch validity: build and crash reproducibility check, (2) fuzzing pass: passes 10-minute fuzzing, and (3) testing pass: passes white-box differential testing. It is important to note that the patch generation process only utilizes step (1) to verify the build and crash reproducibility. The fuzzing and differential testing are conducted post-generation to assess correctness.\nFigure 2: Patch generation and verification success rate.\nFigure 2 shows that all models achieved similar generation success rates of around 60% and similar post-verification success rates of around 5-11% with overlapping confidence intervals, and therefore, we do not draw any conclusion about their relative performance. The graph does, however, reveal that a substantial portion of the generated patches are found to be incorrect when subjected to fuzzing and white-box differential testing. For instance, Gemini 1.5 Pro achieved a 61.1% patch generation success rate, yet fewer than 15% of these patches (5.3% out of total set) were found to be correct. This gap highlights that build and crash reproduction are not good enough signals to infer the correctness of generated patches, and that future patch generation approaches should scrutinize the semantic preservation of generated patches more thoroughly. This gap also underscores the vital role of the comprehensive verification processes that checks semantic equivalence, a distinctive contribution of AutoPatchBench.\nEffect of inference-time computation\nTo assess the impact of inference-time computation on improving the patch generation success rate, we present the distribution of retry counts among the 73 patches produced by Llama 4 Maverick.\n\nFigure 3: Percentage of generated patches per number of iterations.\nFigure 3 shows that 44 out of 73 patches, or 60.2%, were successfully generated on the first attempt. The remaining 40% of the samples required more than two iterations, with no evident plateau until the 10th iteration. This outcome demonstrates that allocating more computational resources during inference-time leads to a higher success rate and suggests that increasing the number of retries could yield better results.\nManual validation\nIn our investigation of the precision and recall of white-box differential testing, we conducted a manual validation of 44 patches that passed 10-minute fuzzing against human-written ground truth fixes with the help of security experts. These patches were selected from a pool of 73 generated by Llama 4 Maverick. The following table shows the confusion matrix.\nTable 1: Confusion matrix between human judgement and differential testing\n\nTest pass\nTest fail\nSum\n\n\nHuman pass\n5\n0\n5\n\n\nHuman reject\n7\n32\n39\n\n\nSum\n12\n32\n44\n\n\n\n \nThe results showed that the differential testing achieved an accuracy of 84.1% for this sample (5 + 32 / 44), indicating a high overall agreement with the human assessment. However, a closer examination of the confusion matrix revealed a notable discrepancy between precision and recall. Specifically, the testing method demonstrated 100.0% recall in this case study, correctly identifying all 5 instances that humans judged as correct. In contrast, precision was relatively low (41.7%), with 7 false positives out of 12 total positive predictions. This suggests that differential testing reported success on some incorrect patches as well, highlighting the need for manual validation of patch correctness. Despite this shortcoming, the result clearly shows the utility of differential testing in automatically rejecting a substantial number of incorrect patches, which will substantially save the manual validation effort.\nKey insights\nOur case study revealed several limitations of the current patch generator.\nThe root cause may not exist in the stack trace\nFrequently, crashes are the result of state contamination that occurs prior to the crash being triggered. Consequently, none of the functions within the stack frames may include the code responsible for the root cause. Since our current implementation requires the LLM to assume that the root cause is located within one of the functions in the stack trace, it is unable to generate an accurate patch in such cases. Solving this problem would require a more autonomous agent which can reason about the root cause on its own with a code browsing capability.\nCheating\nIn some instances, the LLM resorted to “cheating” by producing patches that superficially resolved the issue without addressing the underlying problem. This can occur when the generator modifies or removes code in a way that prevents the crash from occurring, but does not actually fix the root cause of the issue. We observed that cheating happens more frequently when we request the LLM to retry within the same trajectory. A potential solution to this could be to empower the LLM to say “I cannot fix it,” which may come with a tradeoff with success rate. However, note that most of the cheating was caught in the verification step, highlighting the utility of differential testing.\nNeed for enhanced patch verification methods\nFuzzing and white-box differential testing have shown that a large majority of generated patches are incorrect when compared to the ground-truth patches. This finding highlights the challenge of generating accurate patches without enhanced verification capabilities. To address this gap, several approaches can be considered:\nA patch generator could provide additional code context when querying the LLM for a patch so that LLM can better understand the consequence of a code patch.\nA patch generator could make additional LLM queries to verify the perseverance of existing functionality.\nA patch generator can attempt to generate multiple valid patches by exploring multiple trajectories in parallel, and let LLM choose the best option that is most likely to be correct.\nIn a well-tested real-world codebase, a patch generator can utilize existing tests to validate the patches it creates. This process complements building the code and checking for crash reproduction, allowing the patch generator to retry if a patch fails the tests. The accuracy of the generated patches is largely dependent on the thoroughness of the existing tests.\nIn conclusion, while our study has identified several challenges with the current patch generation process, it also opens up opportunities for improvement. By addressing these limitations with innovative solutions, we can enhance the accuracy and reliability of patch generation, paving the way for more robust and effective automated tools.\nGet started with AutoPatchBench\nAutoPatchBench is now available on GitHub. We welcome pull requests to integrate new/additional agent architectures into the framework, and look forward to seeing how well they perform on AutoPatchBench.\nThe post Introducing AutoPatchBench: A Benchmark for AI-Powered Security Fixes appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>We are introducing AutoPatchBench, a benchmark for the automated repair of vulnerabilities identified through fuzzing. By providing a standardized benchmark, AutoPatchBench enables researchers and practitioners to objectively evaluate and compare the effectiveness of various AI program repair systems.  This initiative facilitates the development of more robust security solutions, and also encourages collaboration within the community [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/04/29/ai-research/autopatchbench-benchmark-ai-powered-security-fixes/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/04/29/ai-research/autopatchbench-benchmark-ai-powered-security-fixes/\">Introducing AutoPatchBench: A Benchmark for AI-Powered Security Fixes</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "We are introducing AutoPatchBench, a benchmark for the automated repair of vulnerabilities identified through fuzzing. By providing a standardized benchmark, AutoPatchBench enables researchers and practitioners to objectively evaluate and compare the effectiveness of various AI program repair systems.  This initiative facilitates the development of more robust security solutions, and also encourages collaboration within the community [...]\nRead More...\nThe post Introducing AutoPatchBench: A Benchmark for AI-Powered Security Fixes appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22391",
        "categories": [
          "AI Research"
        ],
        "isoDate": "2025-04-29T17:15:17.000Z"
      },
      {
        "creator": "",
        "title": "Building Private Processing for AI tools on WhatsApp",
        "link": "https://engineering.fb.com/2025/04/29/security/whatsapp-private-processing-ai-tools/",
        "pubDate": "Tue, 29 Apr 2025 17:15:00 +0000",
        "content:encodedSnippet": "We are inspired by the possibilities of AI to help people be more creative, productive, and stay closely connected on WhatsApp, so we set out to build a new technology that allows our users around the world to use AI in a privacy-preserving way.\nWe’re sharing an early look into Private Processing, an optional capability that enables users to initiate a request to a confidential and secure environment and use AI for processing messages where no one — including Meta and WhatsApp — can access them.\nTo validate our implementation of these and other security principles, independent security researchers will be able to continuously verify our privacy and security architecture and its integrity.\nAI has revolutionized the way people interact with technology and information, making it possible for people to automate complex tasks and gain valuable insights from vast amounts of data. However, the current state of AI processing — which relies on large language models often running on servers, rather than mobile hardware — requires that users’ requests are visible to the provider. Although that works for many use cases, it presents challenges in enabling people to use AI to process private messages while preserving the level of privacy afforded by end-to-end encryption.\nWe set out to enable AI capabilities with the privacy that people have come to expect from WhatsApp, so that AI can deliver helpful capabilities, such as summarizing messages, without Meta or WhatsApp having access to them, and in the way that meets the following principles:\nOptionality: Using Meta AI through WhatsApp, including features that use Private Processing, must be optional. \nTransparency: We must provide transparency when our features use Private Processing.\nUser control: For people’s most sensitive chats that require extra assurance, they must be able to prevent messages from being used for AI features like mentioning Meta AI in chats, with the help of WhatApp’s Advanced Chat Privacy feature.\nIntroducing Private Processing\nWe’re excited to share an initial overview of Private Processing, a new technology we’ve built to support people’s needs and aspirations to leverage AI in a secure and privacy-preserving way. This confidential computing infrastructure, built on top of a Trusted Execution Environment (TEE), will make it possible for people to direct AI to process their requests — like summarizing unread WhatsApp threads or getting writing suggestions — in our secure and private cloud environment. In other words, Private Processing will allow users to leverage powerful AI features, while preserving WhatsApp’s core privacy promise, ensuring no one except you and the people you’re talking to can access or share your personal messages, not even Meta or WhatsApp. \nTo uphold this level of privacy and security, we designed Private Processing with the following foundational requirements:\nConfidential processing: Private Processing must be built in such a way that prevents any other system from accessing user’s data — including Meta, WhatsApp or any third party — while in processing or in transit to Private Processing.\nEnforceable guarantees: Attempts to modify that confidential processing guarantee must cause the system to fail closed or become publicly discoverable via verifiable transparency.\nVerifiable transparency: Users and security researchers must be able to audit the behavior of Private Processing to independently verify our privacy and security guarantees.\nHowever, we know that technology platforms like ours operate in a highly adversarial environment where threat actors continuously adapt, and software and hardware systems keep evolving, generating unknown risks. As part of our defense-in-depth approach and best practices for any security-critical system, we’re treating the following additional layers of requirements as core to Private Processing on WhatsApp:\nNon-targetability: An attacker should not be able to target a particular user for compromise without attempting to compromise the entire Private Processing system.\nStateless processing and forward security: Private Processing must not retain access to user messages once the session is complete to ensure that the attacker can not gain access to historical requests or responses.\nThreat modeling for Private Processing\nBecause we set out to meet these high-security requirements, our work to build Private Processing began with developing a threat model to help us identify potential attack vectors and vulnerabilities that could compromise the confidentiality, integrity, or availability of user data. We’ve worked with our peers in the security community to audit the architecture and our implementation to help us continue to harden them. \nBuilding in the open\nTo help inform our industry’s progress in building private AI processing, and to enable independent security research in this area, we will be publishing components of Private Processing, expanding the scope of our Bug Bounty program to include Private Processing, and releasing a detailed security engineering design paper, as we get closer to the launch of Private Processing in the coming weeks. \nWhile AI-enabled processing of personal messages for summarization and writing suggestions at users’ direction is the first use case where Meta applies Private Processing, we expect there will be others where the same or similar infrastructure might be beneficial in processing user requests. We will continue to share our learnings and progress transparently and responsibly.\nHow Private Processing works\nPrivate Processing creates a secure cloud environment where AI models can analyze and process data without exposing it to unauthorized parties. \nHere’s how it works:\nAuthentication: First, Private Processing obtains anonymous credentials to verify that the future requests are coming from authentic WhatsApp clients.\nThird-party routing and load balancing: In addition to these credentials, Private Processing fetches HPKE encryption public keys from a third-party CDN in order to support Oblivious HTTP (OHTTP).\nWire session establishment: Private Processing establishes an OHTTP connection from the user’s device to a Meta gateway via a third-party relay which hides requester IP from Meta and WhatsApp.\nApplication session establishment: Private Processing establishes a Remote Attestation + Transport Layer Security (RA-TLS) session between the user’s device and the TEE. The attestation verification step cross-checks the measurements against a third-party ledger to ensure that the client only connects to code which satisfies our verifiable transparency guarantee.\nRequest to Private Processing: After the above session is established, the device makes a request to Private Processing (e.g., message summarization request), that is encrypted end-to-end between the device and Private Processing with an ephemeral key that Meta and WhatsApp cannot access. In other words, no one except the user’s device or the selected TEEs can decrypt the request.\nPrivate Processing: Our AI models process data in a confidential virtual machine (CVM), a type of TEE, without storing any messages, in order to generate a response. CVMs may communicate with other CVMs using the same RA-TLS connection clients use to complete processing. \nResponse from Private Processing: The processed results are then returned to the user’s device, encrypted with a key that only the device and the pre-selected Private Processing server ever have access to. Private Processing does not retain access to messages after the session is completed.\nThe threat model\nIn designing any security-critical system, it is important to develop a threat model to guide how we build its defenses. Our threat model for Private Processing includes three key components:\nAssets: The sensitive data and systems that we need to protect.\nThreat actors: The individuals or groups that may attempt to compromise our assets.\nThreat scenarios: The ways in which our assets could be compromised, including the tactics, techniques, and procedures (TTPs) that threat actors might use.\nAssets\nIn the context of applying Private Processing to summarizing unread messages or providing writing suggestions at users’ direction, we will use Private Processing to protect messaging content, whether they have been received by the user, or still in draft form. We use the term “messages” to refer to these primary assets in the context of this blog.\nIn addition to messages, we also include additional, secondary assets which help support the goal of Private Processing and may interact with or directly process assets: the Trusted Computing Base (TCB) of the Confidential Virtual Machine (CVM), the underlying hardware, and the cryptographic keys used to protect data in transit.\nThreat actors\nWe have identified three threat actor types that could attack our system to attempt to recover assets.\nMalicious or compromised insiders with access to our infrastructure.\nA third party or supply chain vendor with access to components of the infrastructure.\nMalicious end users targeting other users on the platform.\nThreat scenarios\nWhen building Private Processing to be resilient against these threat actors, we consider relevant threat scenarios that may be pursued against our systems, including (but not limited to) the following:\nExternal actors directly exploit the exposed product attack surface or compromise the services running in Private Processing CVMs to extract messages.\nAnywhere the system processes untrusted data, there is potentially an attack surface for a threat actor to exploit. Examples of these kinds of attacks include exploitation of zero-day vulnerabilities or attacks unique to AI such as prompt injection. \nPrivate Processing is designed to reduce such an attack surface through limiting the exposed entry points to a small set of thoroughly reviewed components which are subject to regular assurance testing. The service binaries are hardened and run in a containerized environment to mitigate the risks of code execution and limit a compromised binary’s ability to exfiltrate data from within the CVM to an external party.\nInternal or external attackers extract messages exposed through the CVM.\nObservability and debuggability remains a challenge in highly secure environments as they can be at odds with the goal of confidential computing, potentially exposing side channels to identify data and in the worst case accidentally leaking messages themselves. However, deploying any service at scale requires some level of observability to identify failure modes, since they may negatively impact many users, even when the frequency is uncommon. We implement a log-filtering system to limit export to only allowed log lines, such as error logs.\nLike any complex system, Private Processing is built of components to form a complex supply chain of both hardware and software. Internally, our CVM build process occurs in restricted environments that maintain provenance and require multi-party review. Transparency of the CVM environment, which we’ll provide through publishing a third-party log of CVM binary digests and CVM binary images, will allow external researchers to analyze, replicate, and report instances where they believe logs could leak user data.\nInsiders with physical or remote access to Private Processing hosts interfere with the CVM at boot and runtime, potentially bypassing the protections in order to extract messages.\nTEE software exploitation is a growing area of security research, and vulnerability researchers have repeatedly demonstrated the ability to bypass TEE guarantees. Similarly, physical attacks on Private Processing hosts may be used to defeat TEE guarantees or present compromised hosts as legitimate to an end user.\nTo address these unknown risks, we built Private Processing on the principle of defense-in-depth by actively tracking novel vulnerabilities in this space, minimizing and sanitizing untrusted inputs to the TEE, minimizing attack surface through CVM hardening and enabling abuse detection through enhanced host monitoring.\nBecause we know that defending against physical access introduces significant complexity and attack surface even with industry-leading controls, we continuously pursue further attack surface hardening. In addition, we reduce these risks through measures like encrypted DRAM and standard physical security controls to protect our datacenters from bad actors.\nTo further address these unknown risks, we seek to eliminate the viability of targeted attacks via routing sessions through a third-party OHTTP relay to prevent an attacker’s ability to route a specific user to a specific machine.\nDesigning Private Processing\nHere is how we designed Private Processing to meet these foundational security and privacy requirements against the threat model we developed. \n(Further technical documentation and security research engagements updates are coming soon).\nConfidential processing\nData shared to Private Processing is processed in an environment which does not make it available to any other system. This protection is further upheld by encrypting data end-to-end between the client and the Private Processing application, so that only Private Processing, and no one in between – including Meta, WhatsApp, or any third-party relay – can access the data.\nTo prevent possible user data leakage, only limited service reliability logs are permitted to leave the boundaries of CVM.\nSystem software\nTo prevent privileged runtime access to Private Processing, we prohibit remote shell access, including from the host machine, and implement security measures including code isolation. Code isolation ensures that only designated code in Private Processing has access to user data. Prohibited remote shell access ensures that neither the host nor a networked user can gain access to the CVM shell.\nWe defend against potential source control and supply chain attacks by implementing established industry best practices. This includes building software exclusively from checked-in source code and artifacts, where any change requires multiple engineers to modify the build artifacts or build pipeline.\nAs another layer of security, all code changes are auditable. This allows us to ensure that any potential issues are discovered — either through our continuous internal audits of code, or by external security researchers auditing our binaries.\nSystem hardware\nPrivate Processing utilizes CPU-based confidential virtualization technologies, along with Confidential Compute mode GPUs, which prevent certain classes of attacks from the host operating system, as well as certain physical attacks.\nEnforceable guarantees\nPrivate Processing utilizes CPU-based confidential virtualization technologies which allow attestation of software based in a hardware root of trust to guarantee the security of the system prior to each client-server connection. Before any data is transmitted, Private Processing checks these attestations, and confirms them against a third-party log of acceptable binaries.\nStateless and forward secure service\nWe operate Private Processing as a stateless service, which neither stores nor retains access to messages after the session has been completed.\nAdditionally, Private Processing does not store messages to disk or external storage, and thus does not maintain durable access to this data.\nAs part of our data minimization efforts, requests to Private Processing only include data that is useful for processing the prompt — for example, message summarization will only include the messages the user directed AI to summarize.\nNon-targetability\nPrivate Processing implements the OHTTP protocol to establish a secure session with Meta routing layers. This ensures that Meta and WhatsApp do not know which user is connecting to what CVM. In other words, Meta and WhatsApp do not know the user that initiated a request to Private Processing while the request is in route, so that a specific user cannot be routed to any specific hardware.\nPrivate Processing uses anonymous credentials to authenticate users over OHTTP. This way, Private Processing can authenticate users to the Private Processing system, but remains unable to identify them. Private Processing does not include any other identifiable information as part of the request during the establishment of a system session. We limit the impact of small-scale attacks by ensuring that they cannot be used to target the data of a specific user.\nVerifiable transparency\nTo provide users visibility into the processing of their data and aid in validation of any client-side behaviors, we will provide capabilities to obtain an in-app log of requests made to Private Processing, data shared with it, and details of how that secure session was set up. \nIn order to provide verifiability, we will make available the CVM image binary powering Private Processing. We will make these components available to researchers to allow independent, external verification of our implementation.\nIn addition, to enable deeper bug bounty research in this area, we will publish source code for certain components of the system, including our attestation verification code or load bearing code.\nWe will also be expanding the scope of our existing Bug Bounty program to cover Private Processing to enable further independent security research into Private Processing’s design and implementation. \nFinally, we will be publishing a detailed technical white paper on the security engineering design of Private Processing to provide further transparency into our security practices, and aid others in the industry in building similar systems.\nGet Involved\nWe’re deeply committed to providing our users with the best possible messaging experience while ensuring that only they and the people they’re talking to can access or share their personal messages. Private Processing is a critical component of this commitment, and we’re excited to make it available in the coming weeks.\nWe welcome feedback from our users, researchers, and the broader security community through our security research program:\nMore details: Meta Bug Bounty\nContact us\nThe post Building Private Processing for AI tools on WhatsApp appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>We are inspired by the possibilities of AI to help people be more creative, productive, and stay closely connected on WhatsApp, so we set out to build a new technology that allows our users around the world to use AI in a privacy-preserving way. We’re sharing an early look into Private Processing, an optional capability [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/04/29/security/whatsapp-private-processing-ai-tools/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/04/29/security/whatsapp-private-processing-ai-tools/\">Building Private Processing for AI tools on WhatsApp</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "We are inspired by the possibilities of AI to help people be more creative, productive, and stay closely connected on WhatsApp, so we set out to build a new technology that allows our users around the world to use AI in a privacy-preserving way. We’re sharing an early look into Private Processing, an optional capability [...]\nRead More...\nThe post Building Private Processing for AI tools on WhatsApp appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22434",
        "categories": [
          "Security & Privacy",
          "WhatsApp"
        ],
        "isoDate": "2025-04-29T17:15:00.000Z"
      },
      {
        "creator": "",
        "title": "How Meta understands data at scale",
        "link": "https://engineering.fb.com/2025/04/28/security/how-meta-understands-data-at-scale/",
        "pubDate": "Mon, 28 Apr 2025 16:30:19 +0000",
        "content:encodedSnippet": "Managing and understanding large-scale data ecosystems is a significant challenge for many organizations, requiring innovative solutions to efficiently safeguard user data. Meta’s vast and diverse systems make it particularly challenging to comprehend its structure, meaning, and context at scale.\nTo address these challenges, we made substantial investments in advanced data understanding technologies, as part of our Privacy Aware Infrastructure (PAI). Specifically, we have adopted a “shift-left” approach, integrating data schematization and annotations early in the product development process. We also created a universal privacy taxonomy, a standardized framework providing a common semantic vocabulary for data privacy management across Meta’s products that ensures quality data understanding and provides developers with reusable and efficient compliance tooling.\nWe discovered that a flexible and incremental approach was necessary to onboard the wide variety of systems and languages used in building Meta’s products. Additionally, continuous collaboration between privacy and product teams was essential to unlock the value of data understanding at scale.\nWe embarked on the journey of understanding data across Meta a decade ago with millions of assets in scope ranging from structured and unstructured, processed by millions of flows across many of the Meta App offerings. Over the past 10 years, Meta has cataloged millions of data assets and is classifying them daily, supporting numerous privacy initiatives across our product groups. Additionally, our continuous understanding approach ensures that privacy considerations are embedded at every stage of product development. \nAt Meta, we have a deep responsibility to protect the privacy of our community. We’re upholding that by investing our vast engineering capabilities into building cutting-edge privacy technology. We believe that privacy drives product innovation. This led us to develop our Privacy Aware Infrastructure (PAI), which integrates efficient and reliable privacy tools into Meta’s systems to address needs such as purpose limitation—restricting how data can be used while also unlocking opportunities for product innovation by ensuring transparency in data flows \nData understanding is an early step in PAI. It involves capturing the structure and meaning of data assets, such as tables, logs, and AI models. Over the past decade, we have gained a deeper understanding of our data, by embedding privacy considerations into every stage of product development, ensuring a more secure and responsible approach to data management.\n\nWe embarked on our data understanding journey by employing heuristics and classifiers to automatically detect semantic types from user-generated content. This approach has evolved significantly over the years, enabling us to scale to millions of assets. However, conducting these processes outside of developer workflows presented challenges in terms of accuracy and timeliness. Delayed classifications often led to confusion and unnecessary work, while the results were difficult to consume and interpret.\nData understanding at Meta using PAI\nTo address shortcomings, we invested in data understanding by capturing asset structure (schematization), describing meaning (annotation), and inventorying it into OneCatalog (Meta’s system that discovers, registers, and enumerates all data assets) across all Meta technologies. We developed tools and APIs for developers to organize assets, classify data, and auto-generate annotation code. Despite significant investment, the journey was not without challenges, requiring innovative solutions and collaboration across the organization.\nChallenge\nApproach\n\n\nUnderstanding at scale (lack of foundation)\nAt Meta, we manage hundreds of data systems and millions of assets across our family of apps.\nEach product features its own distinct data model, physical schema, query language, and access patterns. This diversity created a unique hurdle for offline assets: the inability to reuse schemas due to the limitations of physical table schemas in adapting to changing definitions. Specifically, renaming columns or making other modifications had far-reaching downstream implications, rendering schema evolution challenging, thus propagation required careful coordination to ensure consistency and accuracy across multiple systems and assets. \nWe introduced a shared asset schema format as a logical representation of the asset schema that can be translated back and forth with the system-specific format. Additionally, it offers tools to automatically classify data and send out annotation changes to asset owners for review, effectively managing long-tail systems.\n\n\nInconsistent definitions (lack of shared understanding)\nWe encountered difficulties with diverse data systems that store data in various formats, and customized data labels that made it challenging to recognize identical data elements when they are stored across multiple systems.\nWe introduced a unified taxonomy of semantic types, which are compiled into different languages. This ensured that all systems can share the same canonical set of labels.\n\n\nMissing annotations (lack of quality)\nA solution that relied solely on data scanning and pattern matching was prone to false positives due to limited contextual information. For instance, a 64-bit integer could be misclassified as either a timestamp or a user identifier without additional context. Moreover, manual human labeling is not feasible at scale because it relies heavily on individual developers’ expertise and knowledge.\nWe shifted left by combining schematization together with annotations in code, in addition improving and utilizing multiple classification signals. Strict measurements provided precision/recall guarantees. Protection was embedded in everything we built, without requiring every developer to be a privacy expert.\n\n\nOrganizational barriers (lack of a unified approach)\nMeta’s data systems, with their bespoke schematization and practices, posed significant challenges in understanding data across the company. As we navigated complex interactions and with ever evolving privacy requirements, it became clear that fragmented approaches to data understanding hindered our ability to grasp data comprehensively.\nBy collaborating with asset owners to develop intuitive tooling and improve coverage, we tackled adoption barriers such as poor developer experience and inaccurate classification. This effort laid the groundwork for a unified data understanding foundation, which was seamlessly integrated into the developer workflow. As a result, we drove a cultural shift towards reusable and efficient privacy practices, ultimately delivering value to product teams and fostering a more cohesive approach to data management.\n\n\n\n\nWalkthrough: Understanding user data for the “Beliefs” feature in Facebook Dating \nTo illustrate our approach and dive into the technical solution, let’s consider a scenario involving structured user data. When creating a profile on the Facebook Dating app, users have the option to include their religious views to help match with others who share similar values.\n\nOn Facebook Dating, religious views are subject to purpose limitation requirements. Our five-step approach to data understanding provides a precise, end-to-end view of how we track and protect sensitive data assets, including those related to religious views:\n\nEven a simple feature can involve data being processed by dozens of heterogenous systems, making end-to-end data protection critical. To ensure comprehensive protection, it is essential to apply the necessary steps to all systems that store or process data, including distributed systems (web systems, chat, mobile and backend services) and data warehouses.\nConsider the data flow from online systems to the data warehouse, as shown in the diagram below. To ensure that religious belief data is identified across all these systems, we have implemented measures to prevent its use for any purpose other than the stated one.\n\nStep 1 – Schematizing\nAs part of the PAI initiative, Meta developed DataSchema, a standard format that is used to capture the structure and relationships of all data assets, independent of system implementation. Creating a canonical representation for compliance tools. Understanding DataSchema requires grasping schematization, which defines the logical structure and relationships of data assets, specifying field names, types, metadata, and policies.\nImplemented using the Thrift Interface Description Language, DataSchema is compatible with Meta systems and languages. It describes over 100 million schemas across more than 100 data systems, covering granular data units like database tables, key-value stores, data streams from distributed systems (such as those used for logging), processing pipelines, and AI models. Essentially, a data asset is like a class with annotated attributes. \nLet’s examine the source of truth (SoT) for a user’s dating profile schema, modeled in DataSchema. This schema includes the names and types of fields and subfields:\n  - user_id (uint)\r\n  - name (string)\r\n  - age (uint)\r\n  - religious_views (enum)\r\n  - photos (array<struct>):\r\n     - url (url)\r\n     - photo (blob)\r\n     - caption (string)\r\n     - uploaded_date (timestamp)\r\nDating profile DataSchema\nThe canonical SoT schema serves as the foundation for all downstream representations of the dating profile data. In practice, this schema is often translated into system-specific schemas (source of record – “SoR”), optimized for developer experience and system implementation in each environment. \nStep 2 – Predicting metadata at scale\nBuilding on this schematization foundation, we used annotations to describe data, enabling us to quickly and reliably locate user data, such as religious beliefs, across Meta’s vast data landscape. This is achieved through a universal privacy taxonomy, a framework that provides a common semantic vocabulary for data privacy management across Meta’s apps. It offers a consistent language for data description and understanding, independent of specific programming languages or technologies.\nThe universal privacy taxonomy works alongside data classification, which scans systems across Meta’s product family to ensure compliance with privacy policies. These systems use taxonomy labels to identify and classify data elements, ensuring privacy commitments are met and data is handled appropriately according to its classification.\nPrivacy annotations are represented by taxonomy facets and their values. For example, an asset might pertain to an Actor.Employee, with data classified as SemanticType.Email and originating from DataOrigin.onsite, not a third party. The SemanticType annotation is our standard facet for describing the meaning, interpretation, or context of data, such as user names, email addresses, phone numbers, dates, or locations. \nBelow, we illustrate the semantic type taxonomy node for our scenario, Faith Spirituality:\n\nAs data models and collected data evolve, annotations can become outdated or incorrect. Moreover, new assets may lack annotations altogether. To address this, PAI utilizes various techniques to continuously verify our understanding of data elements and maintain accurate, up-to-date annotations:\n\nOur classification system leverages machine learning models and heuristics to predict data types by sampling data, extracting features, and inferring annotation values. Efficient data sampling, such as Bernoulli sampling, and processing techniques enable scaling to billions of data elements with low-latency classifications. \nKey components include:\nScheduling component: manages the set of data assets to scan, accommodating different data system architectures by either pulling data via APIs or receiving data pushed directly into the scanning service.\nScanning service: processes and analyzes data from various sources by accumulating samples in memory, deserializing rows (e.g., JSON) into fields and sub-fields, and extracting features using APIs available in multiple languages (C++, Python, Hack). It ensures comprehensive data capture, even for ephemeral data.\nClassification service: utilizes heuristic rules and machine learning models to classify data types with high accuracy.\n\nHeuristic rules: handle straightforward, deterministic cases by identifying specific data formats like dates, phone numbers, and user IDs.\nMachine learning models: trained on labeled datasets using supervised learning and improved through unsupervised learning to identify patterns and anomalies in unlabeled data.\nGround truth calibration and verification: ensures system accuracy and reliability, allowing for model fine-tuning and improved classification performance.\nLineage and propagation: We integrate classification rules with high-confidence lineage signals to ensure accurate data tracking and management. Our propagation mechanism enables the seamless annotation of data as needed, ensuring that exact copies of data across systems receive equivalent classification. This approach not only maintains data integrity but also optimizes the developer experience by streamlining the process of managing data classifications across our diverse systems.\nStep 3 – Annotating\nThe integration of metadata predictions and developer input creates a comprehensive picture of a data asset’s structure (schema) and its meaning (annotation). This is achieved by attaching these elements to individual fields in data assets, providing a thorough understanding of the data.\nBuilding on the predicting data at scale initiative (step 2), where we utilize the universal privacy taxonomy and classification systems to identify and classify data elements, the generated metadata predictions are then used to help developers annotate their data assets efficiently and correctly.\nPortable annotation APIs: seamlessly integrate into developer workflows ensuring:\nConsistent representation of data across all systems at Meta.\nAccurate understanding of data, enabling the application of privacy safeguards at scale.\nEfficient evidencing of compliance with regulatory requirements.\nMetadata predictions and developer input: Two key components work together to create a comprehensive data asset picture:\nMetadata predictions: Classifiers generate predictions to aid developers in annotating data assets efficiently and correctly. If the confidence score exceeds a certain threshold, assignment can be automated, saving developer time.\nDeveloper input: Developers manually refine and verify annotations, ensuring that the data’s context and privacy requirements are accurately captured. Human oversight guarantees the accuracy and reliability of the data asset picture.\n- user_id (enum) \t\t→ SemanticType::id_userID\r\n  - name (string) \t\t\t→ SemanticType::identity_name\r\n  - age (uint) \t\t\t→ SemanticType::age\r\n  - religious_views (enum) \t→ SemanticType::faithSpirituality\r\n  - photos (array<struct>):\r\n     - url (url) \t\t\t→ SemanticType::electronicID_uri_mediaURI_imageURL\r\n     - photo (blob) \t\t→ SemanticType::media_image\r\n     - caption (string) \t\t→ SemanticType::media_text_naturalLanguageText\r\n     - uploaded_date (timestamp) → SemanticType::uploadedTime\r\n\nEnsuring complete schemas with annotations: To maintain a high standard of data understanding, we have integrated data understanding into our data model lifecycle. This includes auto-generating code to represent the schema of newly created assets when missing, ensuring that no new assets are created without a proper schema.\nFor example, in the context of our religious beliefs in Facebook Dating, we have defined its structure, including fields like ‘Name,’ ‘EmailAddress,’ and ‘Religion.’ Furthermore, we have annotated the asset with Actor::user(), signifying that the data pertains to a user of our products. This level of detail enables us to readily identify fields containing privacy-related data and implement appropriate protective measures, such as applying the applicable purpose limitation policy.\nIn the case of the “dating profile” data asset, we have defined its structure, including fields like ‘Name’: \nfinal class DatingProfileSchema extends DataSchemaDefinition {\r\n\r\n <<__Override>>\r\n public function configure(ISchemaConfig $config): void {\r\n   $config->metadataConfig()->description('Represents a dating profile);\r\n   $config->annotationsConfig()->annotations(Actor::user());\r\n }\r\n\r\n <<__Override>>\r\n public function getFields(): dict<string, ISchemaField> {\r\n   return dict[\r\n     'Name' => StringField::create(\"name\")\r\n        ->annotations(SemanticType::identity_name())\r\n        ->example('John Doe'),\r\n     'Age' => StringInt::create('age')\r\n        ->description(“The age of the user.”)\r\n        ->annotations(SemanticType::age())\r\n        ->example('24'),\r\n     'ReligiousViews' => EnumStringField::create('religious_views')\r\n        ->annotations(SemanticType::faithSpirituality())\r\n        ->example('Atheist'),\r\n   ];\r\n }\r\n}\r\n\nIn order to optimize for developer experience, the details of the schema representation differ in each environment. For example, in the data warehouse, it’s represented as a Dataset – an in-code Python class capturing the asset’s schema and metadata. Datasets provide a native API for creating data pipelines. \nHere is an example of such a schema:\n​​@hive_dataset(\r\n\t\"dim_all_dating_users\", // table name\r\n\t\"dating\", // namespace\r\n\toncall=\"dating_analytics\",\r\n\tdescription=\"This is the primary Dating user dimension table containing one row per Dating user per day along with their profile, visitation, and key usage information.\",\r\n\tmetadata=Metadata(Actor.User),\r\n)\r\nclass dim_all_dating_users(DataSet):\r\nds: Varchar = Partition(\"datestamp\")\r\nuserid: DatingUserID = Column(\"User id of the profile\")\r\nemail: EmailAddress = Column(\"User's email address\"),\r\n\tage: PersonAge = Column(\"User's stated age on date ds\")\r\n\treligious_views: ReligionOptions = Column(\"User's provided religious views\")\r\n\nOur warehouse schema incorporates rich types, a privacy-aware type system designed to enhance data understanding and facilitate effective data protection. Rich types, such as DatingUserID, EmailAddress, PersonAge, and ReligionOptions, are integrated into the schema, offering a comprehensive approach to data management while encoding privacy metadata. They provide a developer-friendly way to annotate data and enable the enforcement of data quality rules and constraints at the type level, ensuring data consistency and accuracy across the warehouse. For instance, they can detect issues like joining columns with different types of user IDs or mismatched enums before code execution. \nHere is an example definition:\nReligionOptions = enum_from_items(\r\n    \"ReligionOptions\",\r\n    items=[\r\n        EnumItem(\"Atheist\", \"Atheist\"),\r\n        EnumItem(\"Buddhist\", \"Buddhist\"),\r\n        EnumItem(\"Christian\", \"Christian\"),\r\n        EnumItem(\"Hindu\", \"Hindu\"),\r\n        EnumItem(\"Jewish\", \"Jewish\"),\r\n        EnumItem(\"Muslim\", \"Muslim\"),\r\n  ...\r\n    ],\r\n    annotations=(SemanticType.faithSpirituality,),\r\n)\r\n\nStep 4 – Inventorying assets and systems\nA central inventory system is crucial for managing data assets and their metadata, offering capabilities like search and compliance tracking. Meta’s OneCatalog is a comprehensive system that discovers, registers, and enumerates all data assets across Meta’s apps, providing inventory for easier management and tracking. \nKey functions of OneCatalog:\nRegistering all data systems: OneCatalog defines a data system as a logical abstraction over resources that persist data for a common purpose. It exhaustively examines resources across Meta’s environments to discover and register all data systems hosting data assets.\nEnumerating all data assets: Eligible data systems must enumerate their assets through the asset enumeration platform, generating a comprehensive list of assets and their metadata in the central inventory. These assets are grouped by “asset classes” based on shared patterns, enabling efficient management and understanding of data assets.\n\nGuarantees provided by OneCatalog:\nCompleteness: The system regularly checks for consistency between the data defined in its configuration and the actual data stored in the inventory. This ongoing comparison ensures that all relevant data assets are accurately accounted for and up-to-date.\nFreshness: In addition to regularly scheduled pull-based enumeration, the system subscribes to changes in data systems and updates its inventory in real time.\nUniqueness of asset ID (XID): Each asset is assigned a globally unique identifier, similar to URLs, which facilitates coordination between multiple systems and the exchange of information about assets by providing a shared key. The globally unique identifier follows a human-readable structure, e.g., asset://[asset-class]/[asset-name].\n\nUnified UI: On top of the inventory, OneCatalog provides a unified user interface that consolidates all asset metadata, serving as the central hub for asset information. This interface offers a single point of access to view and manage assets, streamlining the process of finding and understanding data.\nFor example, in the context of our “religious beliefs in the Dating app” scenario, we can use OneCatalog’s unified user interface to view the warehouse dating profile table asset, providing a comprehensive overview of its metadata and relationships.\n\nCompliance and privacy assurance: OneCatalog’s central inventory is utilized by various privacy teams across Meta to ensure that data assets meet requirements. With its completeness and freshness guarantees, OneCatalog serves as a reliable source of truth for privacy and compliance efforts.\nBy providing a single view of all data assets, OneCatalog enables teams to efficiently identify and address potential risks or vulnerabilities, such as unsecured data or unauthorized access.\nStep 5 – Maintaining data understanding\nTo maintain high coverage and quality of schemas and annotations across Meta’s diverse apps, we employed a robust process that involves measuring precision and recall for both predicted metadata and developer-provided annotations. This enables us to guide the implementation of our privacy and security controls and ensure their effectiveness.\nBy leveraging data understanding, tooling can quickly build end-to-end compliance solutions. With schema and annotations now front and center, we’ve achieved continuous understanding, enabling our engineers to easily track and protect user data, implement various security and privacy controls, and build new features at scale.\nOur strategy for maintaining data understanding over time includes:\nShifting left on creation time: We provided intuitive APIs for developers to provide metadata at asset creation time, ensuring that schemas and annotations were applied consistently in downstream use cases.\nDetecting and fixing annotation gaps: We surfaced prediction signals to detect coverage and quality gaps and evolved our prediction and annotation capabilities to ensure new systems and workflows were covered.\nCollecting ground truth: We established a baseline to measure automated systems against, with the help of subject matter experts, to continuously measure and improve them.\nProviding canonical consumption APIs: We developed canonical APIs for common compliance usage patterns, such as detecting user data, to ensure consistent interpretation of metadata and low entry barriers.\nPutting it all together\nComing back to our scenario: As developers on the Facebook Dating team collect or generate new data, they utilize familiar APIs that help them schematize and annotate their data. These APIs provide a consistent and intuitive way to define the structure and meaning of the data.\nWhen collecting data related to “Faith Spirituality,”the developers use a data classifier that confirms their semantic type annotations once the data is scanned during testing. This ensures that the data is accurately labeled and can be properly handled by downstream systems.\nTo ensure the quality of the classification system, ground truth created by subject matter experts is used to measure its accuracy. A feedback loop between the product and PAI teams keeps the unified taxonomy updated, ensuring that it remains relevant and effective.\nBy using canonical and catalogued metadata, teams across Meta can implement privacy controls that are consistent and effective. This enables the company to maintain user trust and meet requirements.\nIn this scenario, the developers on the Facebook Dating team are:\n\nSchematizing and annotating their data using familiar APIs.\nUsing a data classifier to confirm semantic type annotations.\nLeveraging ground truth to measure the quality of the classification system.\nUtilizing a feedback loop to keep the unified taxonomy updated.\nImplementing privacy controls using canonical and catalogued metadata.\nLearnings and takeaways\nBuilding an understanding of all data at Meta was a monumental effort that not only required novel infrastructure but also the contribution of thousands of engineers across all teams at Meta, and years of investment.\nCanonical everything: Data understanding at scale relies on a canonical catalog of systems, asset classes, assets, and taxonomy labels, each with globally unique identifiers. This foundation enables an ecosystem of compliance tooling, separating the concerns of data understanding from consuming canonical metadata.\nIncremental and flexible approach: To tackle the challenge of onboarding hundreds of systems across Meta, we developed a platform that supports pulling schemas from existing implementations. We layered solutions to enhance existing untyped APIs, meeting developers where they are—whether in code, configuration, or a UI defining their use case and data model. This incremental and flexible approach delivers value at every step.\nCollaborating for data classification excellence: Building the platform was just the beginning. The infrastructure and privacy teams also collaborated with subject matter experts to develop best-in-class classifiers for our data, addressing some of the most challenging problems. These include detecting user-generated content, classifying data embedded in blobs, and creating a governed taxonomy that allows every developer to describe their data with the right level of detail.\nCommunity engagement with a tight feedback loop: Our success in backfilling schemas and integrating with the developer experience was made possible by a strong partnership with product teams. By co-building solutions and establishing an immediate feedback loop, we refined our approach, addressed misclassifications, and improved classification quality. This collaboration is crucial to our continued evolution and refinement of data understanding. \nThe future of data understanding\nData understanding has become a crucial component of Meta’s PAI initiative, enabling us to protect user data in a sustainable and effective manner. By creating a comprehensive understanding of our data, we can address privacy challenges durably and more efficiently than traditional methods.\nOur approach to data understanding aligns closely with the developer workflow, involving the creation of typed data models, collection of annotated data, and processing under relevant policies. At Meta’s scale, this approach has saved significant engineering effort by automating annotation on millions of assets (i.e., fields, columns, tables) with specific labels from an inventory that are deemed commitment-critical. This automation has greatly reduced the manual effort required for annotation, allowing teams to focus on higher-priority tasks. \nAs data understanding continues to evolve, it is expected to have a significant impact on various aspects of operations and product offerings. Here are some potential future use cases:\nImproved AI and machine learning: leveraging data understanding to improve the accuracy of AI-powered content moderation and recommendation systems.\nStreamlined developer workflows: integrating data understanding into Meta’s internal development tools to provide clear data context and reduce confusion.\nOperational and developer efficiency: By automating data classification and annotation for millions of assets across Meta’s platforms, we can significantly improve operational efficiency. This automation enables us to leverage metadata for various use cases, such as accelerating product innovation. For instance, we’re now utilizing this metadata to help developers efficiently find the right data assets, streamlining their workflow and reducing the time spent on manual searches.\nProduct innovation: With a comprehensive understanding of data, Meta can drive product innovation by leveraging insights to create personalized and engaging user experiences.\nWhile there is still more work to be done, such as evolving taxonomies to meet future compliance needs and developing novel ways to schematize data, we are excited about the potential of data understanding. By harnessing canonical metadata, we can deepen our shared understanding of data, unlocking unprecedented opportunities for innovation not only at Meta, but across the industry.\nAcknowledgements\nThe authors would like to acknowledge the contributions of many current and former Meta employees who have played a crucial role in developing data understanding over the years. In particular, we would like to extend special thanks to (in alphabetical order) Aaron Morris, Adrian Zgorzalek, Alex Gorelik, Alex Kalinin, Alex Uslontsev, Ali Fakeri Tabrizi, Amit Sarkar, Anchit Arora, Andras Belokosztolszki, Anthony O’Sullivan, Archit Jain, Aygun Aydin, Ayoade Adeniyi, Ben Warren, Bob Baldwin, Brani Stojkovic, Brian Romanko, Can Lin, Carrie (Danning) Jiang, Chao Yang, Chris Ventura, Daniel Ohayon, Danny Gagne, David Taieb, Dmitry Ponomarev, Dong Jia, Dong Zhao, Eero Neuenschwander, Fang Wang, Ferhat Sahinkaya, Ferdi Adeputra, Fred Liu, Gayathri Aiyer, George Stasa, Guoqiang Jerry Chen, Haiyang Han, Haydar Imren, Henry Swanson, Ian Carmichael, Jared Greene, Jerry Pan, Jiang Wu, Johnnie Ballentyne, Joanna Jiang, Jonathan Bergeron, Joseph Li, Jun Fang, Kaustubh Karkare, Komal Mangtani, Kuldeep Chaudhary, Lea Li, Lei Zhang, Liu Yang, Loka Potnuru, Luiz Ribeiro, Marc Celani, Matthieu Martin, Max Mazzeo, Meg Dymek, Mellany Flores, Mike Tarasyuk, Mital Mehta, Nevzat Sevim, Nick Gardner, Nikolay Kondratyev, Oliver Dodd, Pankaj Landge, Perry Stoll, Peter Nieuwenhuizen, Pranet Verma, Prashanth Bandaru, Piyush Khemka, Rahul Nambiar, Rajesh Nishtala, Rituraj Kirti, Roger (Wei) Li, Rujin Cao, Sahil Garg, Satish Sampath, Sean Wang, Seth Silverman, Shridhar Iyer, Simran Patil, Sriguru Chakravarthi, Sushaant Mujoo, Susmit Biswas, Taha Bekir Eren, Tejas Kudrimoti, Tony Harper, Vineet Chaudhary, Vishal Jain, Vitali Haravy, Vlad Fedorov, Vlad Gorelik, Wolfram Schuttle, Xiaotian Guo, Yatu Zhang, Yi Huang, Yuxi Zhang, Zejun Zhang, and Zhaohui Zhang. We would also like to express our gratitude to all reviewers of this post, including (in alphabetical order) Aleksandar Ilic, Avtar Brar, Brianna O’Steen, Chloe Lu, Chris Wiltz, Imogen Barnes, Jason Hendrickson, Rituraj Kirti, Xenia Habekoss and Yuri Claure. We would like to especially thank Jonathan Bergeron for overseeing the effort and providing all of the guidance and valuable feedback, and Ramnath Krishna Prasad for pulling required support together to make this blog post happen.\nThe post How Meta understands data at scale appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>Managing and understanding large-scale data ecosystems is a significant challenge for many organizations, requiring innovative solutions to efficiently safeguard user data. Meta&#8217;s vast and diverse systems make it particularly challenging to comprehend its structure, meaning, and context at scale. To address these challenges, we made substantial investments in advanced data understanding technologies, as part of [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/04/28/security/how-meta-understands-data-at-scale/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/04/28/security/how-meta-understands-data-at-scale/\">How Meta understands data at scale</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "Managing and understanding large-scale data ecosystems is a significant challenge for many organizations, requiring innovative solutions to efficiently safeguard user data. Meta’s vast and diverse systems make it particularly challenging to comprehend its structure, meaning, and context at scale. To address these challenges, we made substantial investments in advanced data understanding technologies, as part of [...]\nRead More...\nThe post How Meta understands data at scale appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22393",
        "categories": [
          "Security & Privacy"
        ],
        "isoDate": "2025-04-28T16:30:19.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Aleksandra Aganezova",
        "title": "Jens Oliver Meiert: How WebStorm and AI Assistant Fit Right Into My Workflow",
        "link": "https://blog.jetbrains.com/webstorm/2025/04/jens-oliver-meiert-how-webstorm-and-ai-assistant-fit-right-into-my-workflow/",
        "pubDate": "Tue, 29 Apr 2025 17:04:46 +0000",
        "content:encodedSnippet": "For more than two decades, Jens Oliver Meiert has been at the forefront of web development, working with industry giants like Google and Miro, as well as leading engineering teams across various companies. With extensive experience in frontend development, he has witnessed firsthand how tools and workflows have evolved over time. In this interview, Jens shares what keeps him coming back to JetBrains IDEs, his experience with WebStorm, and how AI is reshaping modern development.\nHi Jens, we’re excited to chat with you! To kick things off, let’s go back to where it all started. You’ve been using JetBrains products for over 20 years. How did your journey with them begin?\nI started using JetBrains products in 2001 when I worked for a Java-focused company. IntelliJ IDEA was a cutting-edge editor, offering features that felt ahead of their time. While my focus has always been on frontend development, I found IntelliJ IDEA to be a great fit for my work even back then. Over the years, I’ve tried other editors — Sublime Text, Eclipse, and also VS Code at certain points — but I always came back to JetBrains IDEs because they consistently offer a well-thought-out developer experience.\nA few years ago, I switched to WebStorm, and it has been my go-to editor ever since. The design, coding assistance, and integrations make it a natural choice for my projects. It just works the way I expect an IDE to work, supporting my projects seamlessly and staying out of my way when I need to focus.\nWhat makes WebStorm stand out from other editors?\nWebStorm has a level of polish and reliability that’s hard to find elsewhere. It’s not just about features — it’s about how those features work together to make development smoother. The experience feels well-structured, and even when I return after trying other tools, I don’t feel like I’m missing anything.\nOne of the things I appreciate most is how JetBrains editors stay true to their philosophy of supporting developers without interfering. Features like autosave, intelligent refactoring, and a consistent UI make coding more efficient. It’s clear that JetBrains puts thought into every aspect of the developer experience, and that’s why I continue using their tools after all these years.\nYou’ve recently started using AI Assistant in WebStorm. How has it impacted your workflow?\nAI Assistant has been a very useful addition. While I wouldn’t say I’m using 100% of its capabilities yet, the features I do use have already had a noticeable impact on my daily work. One of the areas where it helps me the most is with commit messages — with more than 10,000 commits a year, generating clear, meaningful messages saves me a lot of time. It also integrates well with GitHub Copilot and other AI coding tools I use, allowing me to experiment with different AI-assisted workflows.\nAdditionally, AI Assistant provides great support for debugging and code explanations. When I come across a piece of code that isn’t working as expected, instead of searching through documentation, I can ask AI Assistant for insights. It often provides a quick, helpful answer, making my debugging process significantly faster.\nHow does AI Assistant compare to other AI coding tools?\nOne of the key advantages of AI Assistant is how seamlessly it integrates into WebStorm. Unlike external AI tools that feel like an add-on, AI Assistant is built directly into the IDE, making it a natural extension of my workflow. I don’t have to switch between different applications or browser tabs — it’s always there when I need it.\nAnother aspect I appreciate is its contextual understanding. AI Assistant provides recommendations that align with the JetBrains way of working, which means its suggestions are often more relevant than those from generic AI-powered tools. It’s designed to enhance my existing workflow rather than disrupt it, which makes a big difference in usability.\nHave you encountered any challenges using AI Assistant?\nThere was a period when it was necessary to re-authenticate every day to use AI Assistant, which was a little frustrating. However, JetBrains quickly addressed the issue, and it has been working smoothly since then.\nAside from that, my main challenge is making sure I’m getting the most out of AI Assistant. It’s a powerful tool, and I know I’ve only scratched the surface. There’s probably a lot more I could be doing with it to improve my efficiency.\nAs someone who has been in the industry for more than 20 years, what are your thoughts on AI’s role in the future of development?\nAI is undeniably reshaping software development. I believe it would be foolish not to embrace it in some capacity. However, I don’t think AI will replace developers — it will augment our capabilities. AI excels at automating repetitive tasks, generating boilerplate code, and assisting with debugging, but it still requires human oversight, especially when it comes to architectural decisions, code maintainability, and creative problem-solving.\nOne area where AI is already making a big impact is code reviews. It can help spot patterns, enforce best practices, and speed up the review process, though I don’t see it fully replacing human reviewers anytime soon. The key is learning how to leverage AI effectively rather than relying on it blindly.\nWhat advice would you give to developers considering AI-powered tools like AI Assistant?\nTry it out, but don’t just accept AI-generated code without thinking critically. Use it as a way to enhance your workflow. Also, experiment with different features — even if you don’t use AI Assistant for everything, you may find certain capabilities that save you a significant amount of time.\nFinally, stay open to how AI evolves. We’re in the early stages of AI integration in development tools, and the landscape is changing rapidly. Developers who take the time to understand and adapt to these tools will have a significant advantage in the long run.\nNo interview is complete without this question: what’s your favorite shortcut?\nWithout a doubt, double Shift (Search Everywhere). It’s such a simple yet powerful feature that lets me quickly find files, actions, and settings. It’s one of those things that just feels right, and I use it constantly.\nFinal thoughts?\nI’m excited to see where AI-powered development goes next. WebStorm and AI Assistant — as well as Junie, which I just got to evaluate — are already making a big difference in my workflow, and I expect that over time, these tools will only become more powerful and intuitive. But more broadly, I keep coming back to JetBrains because of the reliability and care they put into their products. With WebStorm, I know I’m working with a tool that supports me rather than gets in my way.\nWe’d like to thank Jens for taking part in this interview!\nIf you haven’t tried AI Assistant yet, you can now explore it with the new free tier. Give it a spin and see how it works for you.\nThe WebStorm team",
        "dc:creator": "Aleksandra Aganezova",
        "content": "For more than two decades, Jens Oliver Meiert has been at the forefront of web development, working with industry giants like Google and Miro, as well as leading engineering teams across various companies. With extensive experience in frontend development, he has witnessed firsthand how tools and workflows have evolved over time. In this interview, Jens [&#8230;]",
        "contentSnippet": "For more than two decades, Jens Oliver Meiert has been at the forefront of web development, working with industry giants like Google and Miro, as well as leading engineering teams across various companies. With extensive experience in frontend development, he has witnessed firsthand how tools and workflows have evolved over time. In this interview, Jens […]",
        "guid": "https://blog.jetbrains.com/?post_type=webstorm&p=563763",
        "categories": [
          "interviews",
          "ai-assistant"
        ],
        "isoDate": "2025-04-29T17:04:46.000Z"
      },
      {
        "creator": "Sasha Ivanova",
        "title": "The First Set of Bug Fixes for ReSharper and Rider 2025.1 Is Here!",
        "link": "https://blog.jetbrains.com/dotnet/2025/04/29/2025-1-1-hot-fix/",
        "pubDate": "Tue, 29 Apr 2025 06:53:33 +0000",
        "content:encodedSnippet": "Hello everyone,\nThe ReSharper and Rider 2025.1.1 bug-fix updates have just been released! If you haven’t upgraded to the 2025.1 versions of our products, we highly recommend that you check out these two blog posts:\nReSharper 2025.1: Comprehensive improvements to C# language support, including initial support for C# 14 preview features, performance enhancements, and more.\nRider 2025.1: A major upgrade to AI Assistant, remote development on Windows host machines, numerous enhancements to .NET and C++ debugging, and a whole host of other improvements. \n\n\n\n\nAnd now, let’s go over the most important fixes in 2025.1.1.\nReSharper 2025.1.1 \nThe first bug-fix update fixes the issue in dotTrace. Copying a tab in dotTrace Viewer now correctly clones the tab along with its selected filters. [DTRC-31677]\nDownload ReSharper 2025.1.1\n                                                    \nRider 2025.1.1\nThis update includes the following fixes:\nCorrect syntax highlighting for Unity identifiers and classes has been fixed. [RIDER-124907] \nRider no longer freezes when editing Razor .cshtml files in .NET 8 MVC applications. [RIDER-124864]\n\n\n\n    \nDownload Rider 2025.1.1\n                                                    \nYou can download the latest builds from our website (Rider, ReSharper) or via the Toolbox App. You can also update Rider as a snap.",
        "dc:creator": "Sasha Ivanova",
        "content": "Hello everyone, The ReSharper and Rider 2025.1.1 bug-fix updates have just been released! If you haven’t upgraded to the 2025.1 versions of our products, we highly recommend that you check out these two blog posts: And now, let’s go over the most important fixes in 2025.1.1. ReSharper 2025.1.1&#160; The first bug-fix update fixes the issue [&#8230;]",
        "contentSnippet": "Hello everyone, The ReSharper and Rider 2025.1.1 bug-fix updates have just been released! If you haven’t upgraded to the 2025.1 versions of our products, we highly recommend that you check out these two blog posts: And now, let’s go over the most important fixes in 2025.1.1. ReSharper 2025.1.1  The first bug-fix update fixes the issue […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=563498",
        "categories": [
          "net-tools",
          "bugfix",
          "news",
          "releases",
          "resharper",
          "rider"
        ],
        "isoDate": "2025-04-29T06:53:33.000Z"
      },
      {
        "creator": "Anna Maltseva",
        "title": "JetBrains AI Assistant: Smarter, More Capable, and a New Free Tier",
        "link": "https://blog.jetbrains.com/ai/2025/04/jetbrains-ai-assistant-2025-1/",
        "pubDate": "Mon, 28 Apr 2025 15:45:42 +0000",
        "content:encodedSnippet": "This release introduces major enhancements to boost productivity and reduce repetitive work. Updates include smarter code completion, support for new cloud models like OpenAI GPT-4.1, Claude 3.7 Sonnet, and Gemini 2.5 Pro, advanced RAG-based context awareness, and a new edit mode for multi-file edits directly from the chat. Plus, our revamped subscription model includes both AI Assistant and Junie under one plan across the Free, Pro, and Ultimate tiers. \nGet Started\n                                                    \nAccess JetBrains AI features in your IDE with the new free tier\nTo make JetBrains AI accessible to all, we’ve redesigned our subscription model, bringing both AI Assistant and Junie, our coding agent, under a single subscription. With the 2025.1 release, all JetBrains AI features are accessible for free in JetBrains IDEs. This includes unlimited code completion and local model support, with limited quota-based access to features powered by third-party cloud models. The new subscription model makes it easy to scale up as needed with the AI Pro and AI Ultimate tiers. See pricing for more details.\nJetBrains AI Pro now included in All Products Pack and dotUltimate subscriptions\nIf you’re subscribed to the All Products Pack or the dotUltimate bundle, you now get JetBrains AI Pro at no extra cost. This plan unlocks a larger quota for AI features powered by external cloud models, like AI chat, multi-file edits, code generation, and smart workflows for refactoring, unit test creation, and commit message suggestions.\nTo help you manage usage, your remaining cloud quota is displayed as a progress bar in the JetBrains AI widget, covering both AI Assistant and Junie usage. \nWhat if you’ve already paid for AI Pro separately? You can double your AI Pro quota by switching between your purchased license and your All Products Pack or dotUltimate license. If you’re eligible, you can request a refund. You can find more details in this post. Please contact JetBrains Support if you need any help.\nNeed a higher quota? You can purchase AI Ultimate as a separate subscription. Please note that there’s currently no upgrade path from AI Pro to AI Ultimate, but we are considering possible solutions.\nAI Assistant just got smarter – here’s what’s new:\n[Beta] Multi-file changes in edit mode \nEditing multiple files has never been easier! AI Assistant now supports multi-file edits in the chat, suggesting changes across your project while leveraging retrieval-augmented generation (RAG) to locate the most relevant files. Reduce repetitive tasks and implement modifications across multiple files with a single interaction.\n\n\n\n\nApply snippets from chat\nNow, when the AI chat suggests a code snippet, you can use the Apply button to automatically find the optimal place to insert the newly generated code – no more manual copy-pasting. This feature significantly streamlines your workflow.\n\n[Beta] Model Context Protocol: Smarter AI with external context \nAI Assistant can now securely access external data sources and tools via the Model Context Protocol (MCP). By configuring MCP servers, you can provide the assistant with additional context from sources such as third-party tools, file systems, and APIs.\nYou can connect external tools right from the AI chat using the / command. From the context menu that appears, select Add Command…\n\n\n\n\nOffline mode: work with local models\nAI Assistant gives you the flexibility to work with local models offline or leverage cloud-based AI processing. With the new offline mode, you can now work without an internet connection while still benefiting from AI-powered coding assistance. Use local models via Ollama or LM Studio for chat, code generation, commit messages, inline documentation, and more.\n\n\n\n\nWeb search from chat\nWith the new /web command, AI Assistant can now fetch documentation, troubleshooting tips, and the latest technical resources directly from the web – right inside your chat window. No more switching tabs or searching manually!\n\n\n\n\nSmarter AI context awareness\nAI Assistant now understands your entire project better, using advanced RAG to surface the most relevant files, methods, and classes. In addition, the context now includes recently accessed files, making interactions even more relevant to your workflow. Because you can now also add or remove attachments sent as context, you maintain full control over the AI’s context. \n\nExpanded selection of LLMs in chat\nThe AI model selection in the chat has just been expanded! Now, you can take full control of your AI experience by choosing from the latest and most advanced language models, including:\nClaude 3.7 Sonnet\nGemini 2.5 Pro\nOpenAI GPT-4.1\nAnd we’re not stopping here! JetBrains is committed to continuously integrating AI models to ensure you have access to the most up-to-date AI technologies.\nExclude files from AI context\nYou can further enhance your control over what AI Assistant sees by configuring an .aiignore file. This allows you to prevent JetBrains AI from accessing specific files or folders, ensuring that sensitive information is never processed. \n\nExplore AI Assistant and share your feedback\nGetting started with JetBrains AI Assistant is easy – open the JetBrains AI widget in your JetBrains IDE version 2025.1, start the installation, and follow the on-screen instructions. You can also customize your experience directly from the JetBrains AI widget, for example, by enabling offline mode, setting your code completion preferences, or accessing extended settings. Check out the installation guide for more details.\n\nAs always, we look forward to hearing your feedback. You can also tell us about your experience via the Share your feedback link in the AI Chat tool window or by submitting feature requests or bug reports in YouTrack.\nHappy developing!",
        "dc:creator": "Anna Maltseva",
        "content": "This release introduces major enhancements to boost productivity and reduce repetitive work. Updates include smarter code completion, support for new cloud models like OpenAI GPT-4.1, Claude 3.7 Sonnet, and Gemini 2.5 Pro, advanced RAG-based context awareness, and a new edit mode for multi-file edits directly from the chat. Plus, our revamped subscription model includes both [&#8230;]",
        "contentSnippet": "This release introduces major enhancements to boost productivity and reduce repetitive work. Updates include smarter code completion, support for new cloud models like OpenAI GPT-4.1, Claude 3.7 Sonnet, and Gemini 2.5 Pro, advanced RAG-based context awareness, and a new edit mode for multi-file edits directly from the chat. Plus, our revamped subscription model includes both […]",
        "guid": "https://blog.jetbrains.com/?post_type=ai&p=563275",
        "categories": [
          "ai-assistant"
        ],
        "isoDate": "2025-04-28T15:45:42.000Z"
      },
      {
        "creator": "Ilya Muradyan",
        "title": "How to Use Kotlin Notebooks for Productive Development ",
        "link": "https://blog.jetbrains.com/idea/2025/04/how-to-use-kotlin-notebooks-for-productive-development/",
        "pubDate": "Mon, 28 Apr 2025 15:02:45 +0000",
        "content:encodedSnippet": "Kotlin Notebook is a new interactive environment for JVM developers. This article will cover the main Notebook features and how you can utilize them to improve your productivity. \nHow to use Kotlin Notebook\nKotlin Notebook is bundled with IntelliJ IDEA starting from the 2025.1 release, and it is easier than ever to start working with notebooks across various contexts. You can create notebooks in three main ways:\nCreating a notebook in a project\nFrom within a project, right-click the source root or a folder in the Project view, then choose New | Kotlin Notebook.\nThis will create an .ipynb file inside your project. Notebooks are generally placed in notebooks or samples subdirectories, but you can place them anywhere within your project.\n\n\n\n\nCreating a scratch notebook\nImagine you want to experiment with code without having to add new files to your project. The Scratch notebook should come in handy for this. To create a notebook that isn’t part of a specific project, follow these steps:\nUse the New Scratch File action (Cmd+Shift+N on macOS or Ctrl+Alt+Shift+Insert on Windows/Linux).\nSelect Kotlin Notebook from the list.\n\n\n\n\nThis creates a file in the Scratches and Consoles | Kotlin Notebooks directory, and the notebook can be accessed across all projects, making it easy to store random pieces of code and refer to them whenever you need to.\n\n\n\n\nCreating a notebook from the Welcome screen\nYou can open or create a Kotlin notebook directly from the Welcome screen without even opening a project. Navigate to the Kotlin Notebooks tab and click New Notebook. You’ll be prompted to name the notebook and choose whether it should be saved as a scratch file or within a specified folder.\n\n\n\n\nBasics: Interactive cell execution and kernel control\nKotlin Notebook provides a familiar notebook interface within IntelliJ IDEA, making it easy to run code and manage the execution state. Each notebook consists of cells that can be executed independently or in sequence. The toolbar at the top of the notebook includes controls for running cells and managing the Kotlin kernel:\n\n\n\n\n\nRun a single cell: Click the Run button on the left of a code cell or press Ctrl+Enter/ Cmd+Enter. The cell’s code will run, and the output will appear directly beneath the cell. \nRun multiple cells: Click Run All to execute every cell in the notebook from top to bottom. If you want to run all cells below a certain point (for example, to resume from the middle of a notebook), you can right-click that cell and choose Run All Below. This flexibility lets you rerun the entire notebook or just a section without having to run each cell manually.\nInterrupt execution: If a cell is taking too long or has entered an infinite loop, click the Interrupt button (⏹). This stops the currently running cell without affecting the state of the already executed ones. It’s useful for pausing long-running computations or canceling mistaken operations.\nRestart or stop the session: Use the Restart Kernel button (🔄) to reset the Kotlin kernel. Restarting will terminate the current session and clear the runtime state, so all variables and imports become unresolved. This is helpful to ensure a clean slate (for example, if you want to run the notebook from scratch or recover from a bad state). You can also stop the session entirely by closing the notebook or using the standard Stop action in the Kotlin Notebook tool window, which shuts down the kernel process.\nConfigure Kotlin notebook: The gear icon on the toolbar opens the Kotlin Notebook settings, where you can adjust the notebook’s configuration. This settings panel lets you control the Kotlin kernel environment, such as the JDK or kernel version used.\nUsing these controls, you can execute code interactively and manage the notebook’s state, with each executed cell getting a number. \nThis is important because the notebook’s state depends on execution order, not just the linear order of cells. For example, if one cell defines a variable and a later cell uses it, you must run them in the correct sequence. Kotlin Notebook will help by marking cells with an asterisk if they haven’t been run yet, and by updating the execution count on each cell as you run it.\nSharing notebooks via Gist and Datalore\nOne of the advantages of using the standard .ipynb notebook format is the ease with which you can share your work. Kotlin Notebook provides convenient ways to share notebooks with others or publish your results online:\nGitHub Gist: You can quickly share your current notebook as a GitHub Gist. Simply click the Create Gist button (the icon with the GitHub logo) on the toolbar. The IDE will export your notebook to a Gist on your GitHub account and provide you with the URL, which you send to colleagues, knowing they can view the notebook on GitHub or download it. This is perfect for sharing a quick example or including notebook content in issues and forums. The Gist will contain the notebook in JSON format, which GitHub can render for preview. All code, output, and markdown from your Kotlin notebook are preserved.\n\n\n\n\n\nJetBrains Datalore: Because Kotlin Notebook uses the same file format and Kotlin Jupyter kernel as Datalore, JetBrains’ online data science notebook platform, your notebooks are fully compatible with it. You can simply upload the .ipynb file to Datalore to share it or continue working in the cloud. This means you can collaborate with others by simply moving the notebook to Datalore – no conversion needed. \nBy leveraging Gists for quick snippets and Datalore for cloud collaboration, Kotlin Notebook makes sharing results and prototypes effortless. Whether you’re posting a code snippet publicly or working on data analysis with a teammate, you can move from IntelliJ IDEA to the web and back without missing a beat.\nTesting REST APIs\nKotlin Notebook provides a powerful tool for backend and API developers: the ability to call and test RESTful APIs directly from your notebook, with full support for HTTP methods, JSON serialization, and IDE-based code completion. This is enabled through integration with Kotlin’s HTTP client, powered by Ktor.\nTo get started, simply add %use ktor-client to a code cell. This command pulls in a Ktor-based HTTP client and the kotlinx.serialization library, both of which are ready to use. After that, you have access to a pre-configured HTTP client instance in your notebook, available through the http variable.\nStrongly-typed HTTP calls: With the HTTP client integration, you can perform HTTP requests with Kotlin code and get typed results. For example, to fetch JSON data from an API, you might write:\nval response = http.get(\"https://jsonplaceholder.typicode.com/todos/1\")\n\nresponse.bodyAsText()\nThis will perform a GET request and return the response as pretty-printed and highlighted JSON output.\n\n\n\n\nAutomatic JSON serialization: The notebook’s HTTP client is integrated with Kotlin Serialization, and your responses can be automatically deserialized:\n\n\n\n\nThe Ktor client integration will automatically handle class generation and JSON deserialization itself. This means you get a typed Kotlin object with proper fields, instead of manually dealing with JSON parsing. If you have a pre-defined data class, you can also call the body() method of a response with the appropriate type argument.\nUnder the hood, this feature relies on the open-source kotlin-jupyter-http-util library, which brings together the Ktor client and serialization for use in notebooks. In practice, it means your Kotlin notebook can act like a full-fledged HTTP client tool (akin to Postman or a REST client), but with the added benefit of being able to script and assert on the responses in Kotlin. This is extremely handy for trying out endpoints, testing microservices, or scraping web APIs – all within the comfort of IntelliJ IDEA.\nWorking with data: Tables and visualizations\nData explorers will feel at home in Kotlin Notebook. The 2025.1 release enhances how data is displayed and plotted, through tight integration with the Kotlin DataFrame library for tabular data and Kandy for charts. These integrations turn your notebook into an interactive data exploration tool.\nDataFrame integration – interactive tables\nWhen you add the DataFrame library, simply by putting %use dataframe in a cell, you gain access to a powerful DSL for data manipulation. It builds type information from the runtime the same way HTTP integration logic does, for example:\n\n\n\n\nAny time you display a DataFrame (for example, by evaluating a variable holding a table or by calling df.head()), Kotlin Notebook will render it using a special UI component rather than plain text. It offers:\nScrollable pagination: Large datasets are handled gracefully. Instead of trying to dump thousands of rows, the table output shows a limited number of rows per page and offers navigation controls.\nSortable columns: You can sort the table by a column with a single click on its header.\nHierarchical data drilling: If your DataFrame has nested data (for example, a column that contains another table or complex objects), you can expand that data inline. Click on cells that contain nested structures to drill down into sub-tables. This approach to exploration is great for hierarchical JSON datasets loaded into DataFrames.\nOpen in separate tabs: Sometimes you want to compare two tables side by side. You can now move a DataFrame output into its own tab within the notebook interface. Each table you open in a new tab stays accessible, so you can switch between multiple data views.\nExport to file: The output panel now has an Export button (💾). With a couple of clicks, you can export the displayed DataFrame to a file in common formats like CSV, JSON, or XML. This is useful if you’ve transformed some data and want to save the results. By default, the DataFrame will be saved to your project directory, but you can choose any location. The exported data respects the currently displayed state (for instance, if you’ve sorted the view by a column, the export will follow that sorted order, so you get exactly what you see).\n\n\n\n\nIt’s also possible to just drop a CSV onto your notebook: necessary code will be automatically generated and executed. You’ll be able to work with the loaded dataframe right away.\nWith Kotlin DataFrame, you can load CSV and JSON files, as well as SQL query results, into tables and then filter, aggregate, and transform them with Kotlin code. Kotlin Notebook will back you up by displaying each step’s result in a user-friendly way. It’s like having a mini data grid inside your IDE for instant feedback on your data manipulations.\nCheck out the official documentation to learn more about Kotlin DataFrame’s full capabilities.\nVisualizing data with Kandy\nNo data science notebook is complete without visualization. Kotlin Notebook integrates with Kandy, a plotting library built on LetsPlot by JetBrains and created by the Kotlin team to deliver the best experience when working with Kotlin DataFrame and Kotlin Notebook. Run %use kandy in a cell to load the Kandy library and enable its rendering support in the notebook. This allows you to create charts using Kandy’s simple, type-safe DSL and have them appear right below your code.\nFor example, you can quickly produce a line chart for a DataFrame, df, with the columns Year and Population:\n%use kandy\n\ndf.plot {\n\n    line {\n\n        x(Year)\n\n        y(Population)\n\n  width = 3.5\n\n  color = Color.LIGHT_BLUE\n\n    } \n\nlayout.title = \"Population Growth\"\n\n}\nWhen you execute this cell, a chart will be displayed in the notebook output area.\n\n\n\n\nYou can see many examples of charts in the Kandy documentation and gallery.\nExporting and copying plots: You can easily save your charts or copy them. Every plot output has an output menu (accessible via a small icon that appears at the top-right of the output when you hover over it). From this menu, select Export Plot As… to save the chart as an image file. \nIf you need to use the plot in another application immediately, you can choose Copy Plot, which will copy the chart image to your clipboard so you can paste it into a document or chat. This workflow makes sharing visual insights from your data trivial: run a cell to create a chart, then export or copy that visualization in just a couple of clicks.\n\n\n\n\nKandy’s plotting capabilities, combined with DataFrame, enable a smooth data exploration experience. You can load and prepare data in a table and then visualize patterns with a chart – all in Kotlin. You can even iterate, adjusting your data transformation and re-running the plot cell to see updates instantly. Kotlin Notebook ensures the charts render efficiently inside the IDE, so you don’t have to switch to an external browser for interactive visuals. For more advanced usage (like interactive plots or complex layouts), refer to the Kandy documentation, but for most needs, a few lines of Kotlin code will produce the desired chart.\nUsing JVM libraries and project code\nKotlin has a rich ecosystem of libraries and integrates seamlessly with Java. Kotlin Notebook embraces these strengths by allowing you to bring in external libraries or your project’s own code into a notebook session easily.\nAdding external libraries with %use and USE {}\nYou have two primary options when it comes to using a third-party JVM library (for example, an HTTP client, a CSV parser, or a machine learning toolkit) in your notebook:\nIntegrated libraries via %use: Kotlin Notebook comes with a collection of pre-defined library descriptors for many popular libraries (Kotlin DataFrame, Kandy, Ktor, KotlinDL, etc.). You can import these libraries with the magical  %use libraryName, without the need to think about dependencies! For example, as we saw, %use dataframe brings in the Kotlin DataFrame library and sets up its renderer, and %use ktor-client brings in Ktor and related utilities. We maintain a list of supported libraries and their descriptors on GitHub, and many community libraries are already integrated.\n\n\n\n\nUnintegrated libraries via Gradle syntax: If %use doesn’t support a given library, or you need to specify the version, you can still add it manually using a Gradle-style dependency block. Kotlin Notebook supports a special USE { ... } code block where you can declare repositories and dependencies, for example:\nUSE {\n\n    repositories {\n\n        maven(\"https://my.repo/url\")\n\n    }\n\n    dependencies {\n\n        implementation(\"com.example:my-library:1.2.3\")\n\n        implementation(\"org.apache.commons:commons-text:1.10.0\")\n\n    }\n\n}\nThis will fetch the specified Maven artifacts and add them to the notebook’s classpath. To fine-tune how libraries are resolved, use Kotlin Notebook options.\n\n\n\n\nWhen you use either of these methods to load a library, the Kotlin Notebook kernel may perform additional integration steps if a descriptor or integration class is present. Read more about defining your own library integration.\nIf you add a library in one cell, code in subsequent cells can use it, but code in the same cell may not see it until after that cell is executed. A best practice is to put your %use commands or USE {} blocks at the top of the notebook or at least in their own cells. Also, if you ever restart the kernel, you’ll need to re-run those dependency cells to re-establish the classpath.\nPrototyping with project code and module dependencies\nKotlin Notebook can also interact with the code in your project, making it incredibly useful for prototyping and debugging. For example, if you have a large codebase, you can create a scratch notebook to experiment with your own APIs or data models interactively, without having to write a temporary main function or unit test.\nIn the 2025.1 release, using project code in notebooks has become easier, and there are more configuration options:\nModule classpath selection: By default, when you open a notebook file in an IntelliJ IDEA project, the notebook’s classpath will not include any project dependencies. However, you can also set the notebook up to depend on all project libraries or on a particular project module with all the dependencies inside it. Switch between these options using the combobox in the notebook’s toolbar.\n\n\n\n\n\nUp-to-date code: Notebooks use the compiled classes from your project. To ensure that the latest compiled .class files are available, you should build your project before running a notebook. If you edit a source file in your project while the notebook is open, a notification will remind you to rebuild the module and restart the notebook to see the changes take effect in the notebook’s output.\nIntegrations: If your project defines any integration classes for a Kotlin notebook in the module your notebook depends on, those integrations will also be loaded.\nKotlin Notebook’s approach to libraries and dependencies allows you to incorporate whatever you need – be it a well-known library or your own code – and use it interactively. Because Kotlin notebooks have access to your project code, you can do things like instantiate your application’s classes, call functions from your business logic, or run quick experiments on your data models. You can even use notebooks to write exploratory tests against your APIs, since notebooks allow you to run code in any order and inspect the results, which can be more flexible than a fixed unit test.\nWhat’s next?\nThe next article will tell you about Kotlin Notebook’s advanced features. Stay tuned!\nIf you have any questions or suggestions, you can:\nAsk them right under this post.\nYouTrack: Create a #ktnb ticket to report bugs or suggest features.\nSlack: Check out #notebooks for discussions and questions.\nEmail: Email teodor.irkhin@jetbrains.com with any suggestions or requests for functionality that would allow you to incorporate Kotlin Notebook into your workflow.",
        "dc:creator": "Ilya Muradyan",
        "content": "Kotlin Notebook is a new interactive environment for JVM developers. This article will cover the main Notebook features and how you can utilize them to improve your productivity.&#160; How to use Kotlin Notebook Kotlin Notebook is bundled with IntelliJ IDEA starting from the 2025.1 release, and it is easier than ever to start working with [&#8230;]",
        "contentSnippet": "Kotlin Notebook is a new interactive environment for JVM developers. This article will cover the main Notebook features and how you can utilize them to improve your productivity.  How to use Kotlin Notebook Kotlin Notebook is bundled with IntelliJ IDEA starting from the 2025.1 release, and it is easier than ever to start working with […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=563391",
        "categories": [
          "kotlin",
          "tutorials",
          "intellij-idea",
          "kotlin-notebook"
        ],
        "isoDate": "2025-04-28T15:02:45.000Z"
      },
      {
        "creator": "Anton Semenkin",
        "title": "Mellum: How We Trained a Model to Excel in Code Completion",
        "link": "https://blog.jetbrains.com/ai/2025/04/mellum-how-we-trained-a-model-to-excel-in-code-completion/",
        "pubDate": "Thu, 24 Apr 2025 12:45:44 +0000",
        "content:encodedSnippet": "Code completion has always been a defining strength of JetBrains products. So, when adding AI into our products, we knew it had to deliver top-tier code completion. This post covers how we trained the model behind our cloud-based completion.\nInitial research: What about obvious model options?\nWe started by testing both closed-source LLMs via APIs and open-source alternatives. But we quickly hit some roadblocks:\nAs we were aiming for on-the-fly completion, typical chat LLMs proved themselves impractical due to high costs and substantial latency. Such models were also missing critical code completion features, like fill in the middle (FIM) and token healing. \nChat models also tend to provide their outputs in inconsistent format, making it harder to properly process the response and insert suggestions in the editor.\nOne of our biggest concerns was the lack of transparency about the data used for training, which could lead to potential risks related to the use of licensed code. While some open-source models do offer transparency in their data sources, we opted not to use them due to production stability issues.\nMellum: A bird’s-eye view of the model\nAfter evaluating our options, we concluded that a relatively small in-house code completion model was the way to go. We set a goal of training a high-quality model with reasonable inference costs and latency using transparent data. We determined that staying under 4B parameters would allow us to support efficient inference for all users. Additionally, since our model has been trained primarily on code, its token vocabulary is specialized for coding tasks. \nTo train the model, we implemented a three-stage process, with each stage bringing in new knowledge and improving the generation quality. We started with basic pre-training on a large corpus of standalone files and then fine-tuned on a smaller number of contextual examples. Finally, to align the model to our product needs and remove undesired generations, we used reinforcement learning with AI feedback (RLAIF). \nLet’s take a look at the training steps in detail.\nPre-training stage\nTo avoid risks connected with training data, we started training from scratch. The goal of the pre-training stage was to introduce the model to a wide variety of languages, make it learn the syntax, patterns, and general programming concepts. \nDataset\nWe used TheStack as the main source of code data in various languages. It’s not fully up to date, but we addressed this by collecting additional data with fresh code, filtering it by repo and files licenses and cleaning it of personal identifiable information (PII). This ensures that our dataset is both legally compliant and useful.\nPre-training process\nFor pre-training, we sampled our combined dataset multiple times to reach approximately 3 trillion tokens. We used an 8192-token context window and split the dataset into chunks of matching size. For half of the files in each chunk, we applied a fill-in-the-middle (FIM) transformation. This involves splitting the file into three parts (prefix, middle, and suffix), then rearranging them so that the model learns to predict the missing middle segment given the surrounding context. This technique encourages the model to consider both the preceding and following code when generating suggestions, which better mimics real-world usage in code editors.\nThe pre-training was conducted on a cluster of 16 nodes with 8 H100 GPUs each, and it took about 15 days to complete. The result was our 4B-parameter Mellum-base model. For comparison, 100M code completion models, which we deploy locally in JetBrains IDEs, typically train in about a week on a single 8 H100 GPUs node.\nThe pre-training produces a general-purpose code completion model with broad knowledge across many programming languages. However, at this step the model is trained to achieve one simple objective: prediction of the next token in a randomly selected segment of a file. Without more context, the model won’t understand your code structure and won’t know when to stop generating.\nThese limitations are precisely what the fine-tuning stage is designed to address.\nContext-aware fine-tuning\nBetter fill-in-the-middle examples\nUnlike pre-training – where we randomly select chunks of code for prediction – fine-tuning focuses on slicing the code in more meaningful ways, i.e. by extracting fragments you’re more likely to see “in the wild”.\nThe visual below illustrates this approach. The code shown in blue is what we ask the model to predict. In the second example, for instance, the selected fragment stays within the scope of a single function. This setup better reflects a typical user scenario.\n\n\n\n\nBuilding contextual examples\nEven with improved fill-in-the-middle splitting, we’re still operating within the scope of a single file, which doesn’t accurately reflect how most developers work. In practice, completing code often requires an understanding of surrounding files and broader project context.\nOne of JetBrains’ superpowers is expertise in symbol resolution, usage search, and other IDE tooling. So, for the sake of scalable data pre-processing, we launched an internal project called Code Engine: a cross-platform SDK providing a lightweight, high-performance CLI tool designed to collect contextual information directly from plain files, without requiring the project to be indexed. Such an SDK allowed us to build contextual examples across thousands of repositories on the internal MapReduce cluster in a reasonable amount of time.\nHowever, finding the right algorithms took some trial and error. Here are a few examples to give you an idea of some of the challenges we had to overcome while trying to find the best context collection approach for our model: \nSorting files that are most similar by Jaccard distance on lines\nUsing files from import statements\nCreating a repomap\n…and much more. \nLanguage-specific fine-tuning\nWe hypothesized that smaller models like ours could benefit significantly from specialization. While the base model is trained on over 80 programming languages, most users typically work with just one or two (e.g. Java or Python). As a result, we fine-tune separate models for some of the most popular languages, allowing them to better capture language-specific patterns, libraries, and developer workflows:\nmellum-all – supports the majority of languages and dialects available in JetBrains’ IDEs, but the completion quality is slightly lower than that of specialized models\nmellum-python – specialized for Python and Jupyter\nmellum-jotlin – specialized for Java and Kotlin\nmellum-web – specialized for the web (coming soon!)\nRefining with RLAIF\nThe final step in our training pipeline focuses on removing undesired behaviors due to misalignment between the model’s training objectives and user expectations. For instance, from a training perspective, it’s perfectly valid to generate placeholders like TODO(“Not implemented”) or pass since these patterns are common in public code repositories. However, these are not likely to be helpful as actual code completion suggestions.\nTo address such issues, we apply an additional training phase using reinforcement learning from AI feedback (RLAIF), incorporating synthetic data crafted from rules and model-generated preferences. We construct a dataset of completion pairs in two main categories:\nRule-based completion pairs: We take real examples from our dataset and deliberately degrade them – replacing meaningful code with generic placeholders like pass, comments, or TODO statements.\nMellum-generated completion pairs: For a given prompt, we generate two completions – one with low temperature (more deterministic and often higher quality), and another with high temperature (typically more erratic or lower quality). We then use an external LLM to rank the two completions, producing a labeled positive-negative pair.\n\n\n\n\nThis dataset is then used to train the model to better reflect user preferences. Currently, we use the direct preference optimization (DPO) algorithm, which makes the model more inclined to generate positive or preferred completion examples.\nThis approach not only increases the evaluation score but also reduces the number of annoying generation artifacts.\nHow good is Mellum?\nSpoiler: the model performs extremely well for its size! Here’s how we evaluated it:\nFirst, we evaluated our models on the internal benchmark that we call “JetBrains BigCode”.\nThen, we ran our models on well-known public benchmarks like SAFIM.\nFinally, we measured the user-centric metrics by leveraging feature usage logs.\nBelow, we break our feedback loops down into two categories: offline evaluation (with pre-determined datasets) and online evaluation (with real user data).\nOffline evaluation\nDiscussing datasets is always nice, but what about the metrics?\nWhile creating the dataset is challenging enough, it’s even more challenging to create a good metric that compares the ground truth completion with the one proposed by the neural model. We did a little research and ended up with a combination of two main metrics:\nEM:\n\nExact match – a popular choice for code completion evaluation.\nThe prediction is considered good if the first line of the completion matches the first line of the ground truth with minimal pre-processing. \nKK:\n\nThe metric was named after its authors, Karol and Katya, who designed it and manually annotated the threshold-estimating dataset.\nThe number of suggested lines that are found in the ground truth, divided by the total number of lines in the suggested completion.\nWe also use some additional evaluation techniques, including chrF and LLM-as-a-Judge, for comparing the model variations, but we won’t be covering them here for the sake of keeping the blog post concise. Keep following our updates for more!\nJetBrains BigCode\nWe evaluated the model using a benchmark dataset derived from our internal tool, JetBrains BigCode, covering the most popular languages supported by Mellum – including Python, Kotlin, and Java. We ensured that our evaluation dataset has no overlap with the training dataset and transformed it to the FIM structure with contexts gathered using Code Engine.\nOne of the key advantages of the JetBrains BigCode dataset is its ability to slice code snippets based on various features, such as repository topic, popularity, age, whether the code is main or test code, and recent activity (e.g. commits in the past year). This is done for two primary reasons. First, a well-performing model should demonstrate strong results across all these slices, not just on a subset of them. Second, public benchmarks often end up in model training datasets over time, leading to evaluation contamination. To mitigate the latter risk, we designed our age and activity slices to better reflect real-world conditions. \nAs a result, by maintaining full control over our dataset rather than relying on public benchmarks, we can more reliably assess model quality across different coding styles and practices. According to our experiments on JetBrains BigCode, the complicated nature of the base model does pay dividends in terms of performance. So, it’s demonstrably a good idea to have a strong base model, then fine-tune it, and then align it with DPO.\n\n\n\n\nAdditionally, our JetBrains BigCode evaluation runs show that we are in good company with well-known battle-tested polyglot models, while being smaller and more efficient. Of course, larger models do outperform us, but they come with significantly higher serving costs, making them less practical for our products.\nSingle-line suggestions quality (EM metric)\n\n\n\nPublic benchmarks\nBesides evaluation on an internal dataset, we compared the capabilities of our models on different public benchmarks like multilingual benchmark SAFIM (syntax-aware fill in the middle). Stay tuned as we will share benchmarks data for Mellum soon!\nThat said, it’s important to remember that benchmarks like JetBrains BigCode and SAFIM, while valuable for scalable offline evaluation, don’t fully capture the experience of a real developer using the model. And ultimately, that’s who we’re building for.\nOnline evaluation\nTo ensure a positive impact on the user experience, we measure several metrics on the feature usage logs, following the same pipeline we described in the paper Full Line Code Completion: Bringing AI to Desktop.\nLong story short, our main metric is called ratio of completed code (RoCC). It is defined as a ratio of symbols of code written with code completion among all code written in the editor. We generally try to optimize for this metric. The core idea and motivation are simple: the more generated text appears in the editor, the better our code completion is. The good thing about the RoCC is that we can vary the number of code completion contributors that we account for. This allows us to, for instance, calculate a general in-editor RoCC or Mellum-specific RoCC.\nAnother important metric is the acceptance rate (AR), which is the number of accepted suggestions divided by the number of all shown suggestions. This metric is widely used in the community and is also fairly intuitive: the more users accept our suggestions, the better.\nBelow, we provide some online metrics data for various popular languages:\n\nRoCC (Mellum + standard completion)RoCC (only Mellum)AR\nJava46%23%35%\nKotlin45%25%31%\nPython32%23%35%\nJS/TS39%23%32%\nC#45%18%32%\nGo45%30%44%\nPHP40%26%34%\nRust37%24%35%\n\n\n\n\n\nOutcomes and what’s next for Mellum\nThis was a challenging journey for our ML team, but it resulted in one general completion model and several specialized ones that are all available via the JetBrains AI platform and are currently powering code completion inside JetBrains AI Assistant. To conclude the blogpost, here are our few next steps:\nAs mentioned earlier, we are currently working on a specialized model for web development languages that should further boost quality for various languages, and we plan to make this publicly available at some point in the near future.\nWe would also like to scale the number of parameters further, introducing more diverse data to the training set at the same time. This way Mellum becomes capable of other AI-for-code tasks as well. Keep in mind that service performance remains a key for us, so we expect to stay within reasonable size boundaries as we expand the model. \nTry coding with Mellum and share your impressions with us!",
        "dc:creator": "Anton Semenkin",
        "content": "Code completion has always been a defining strength of JetBrains products. So, when adding AI into our products, we knew it had to deliver top-tier code completion. This post covers how we trained the model behind our cloud-based completion. Initial research: What about obvious model options? We started by testing both closed-source LLMs via APIs [&#8230;]",
        "contentSnippet": "Code completion has always been a defining strength of JetBrains products. So, when adding AI into our products, we knew it had to deliver top-tier code completion. This post covers how we trained the model behind our cloud-based completion. Initial research: What about obvious model options? We started by testing both closed-source LLMs via APIs […]",
        "guid": "https://blog.jetbrains.com/?post_type=ai&p=563113",
        "categories": [
          "jetbrains-ai",
          "ai",
          "mellum"
        ],
        "isoDate": "2025-04-24T12:45:44.000Z"
      },
      {
        "creator": "Marit van Dijk",
        "title": "Debugging Java Code in IntelliJ IDEA",
        "link": "https://blog.jetbrains.com/idea/2025/04/debugging-java-code-in-intellij-idea/",
        "pubDate": "Thu, 24 Apr 2025 09:12:11 +0000",
        "content:encodedSnippet": "In this blog post, we will look at how to debug Java code using the IntelliJ IDEA debugger. We will look at how to fix a failing test, how to find out where an `Exception` is thrown, and how to find problems with our data. And we will learn some neat tricks about the debugger in the process! \nTo illustrate using the debugger, we will use a small example application that reads test scores from a CSV file, calculates the average score per student, and prints the results to the console. If you’d like to follow along, you can find the code here. \nDebug a failing test\nOne reason you might need the debugger is when one of your tests fails. In our example application, when we run the tests in `StudentTest`, we see that there is a failing test.\nFailing test\n\n\n\nCurrently, this test fails because the expected average does not match the result of the method `getAverageScore()`, as we can see on line 127. We can use the debugger to find out what the problem is and how to fix it. Let’s navigate to this method so we can set a breakpoint there to see what happens.\nSet a breakpoint\nWe can navigate to the method `getAverageScore()` using Jump to Source (⌘↓ on macOS / F4 on Windows/Linux) when our cursor is on the method. We can place a breakpoint, either by clicking in the gutter or using the shortcut (⌘F8 on macOS / Ctrl+F8 on Windows/Linux). Place the breakpoint on the first line of the method (line 50).\nBreakpoint in method\n\n\n\nRun in Debug mode\nWhen we run the test in Debug mode (⌃D on macOS / Shift+F9 on Windows/Linux), execution will stop when it hits the breakpoint, so that we can look at the state of our application. We see inline debugging information in the editor.\nRun in Debug mode\n\n\n\nHere we see that the list of `testScores` has `size = 3`. We can even click in the editor to expand this list to see details of the values in the list. We also see that `testScores.isEmpty()` evaluates to `false`, and therefore the `return` statement inside that `if` statement is unreachable and greyed out.\nIn the Debug tool window (⌘5 on macOS / Alt+5 on Windows/Linux), we see the call stack (the methods that were called) on the left. We can also see information about objects and variables, like the student and their test scores, in this example.\nDebug tool window\n\n\n\nStepping through the application\nNow, we can step through the code to see what happens, using different step actions.\nUse Step Over (F8) to step over a line and go to the next line, or use Step Into (F7) to step into a method that is called on a line. In this example, we can step into `getTestScore()` – which isn’t very interesting. When we step into a method, we can continue stepping to return to the call site once we exit the method, or use Step Out (Shift F8) to return right away. Notice that the variables and values that are shown inline and in the Debug tool window are updated as we step through the program.\nStep through the program\n\n\n\nOnce all the scores have been added, we see that the` totalScore` is 25. And here, we see the problem with our logic: we forgot to divide by the number of test scores!\nEvaluate expression\nTo fix our problem, we need to divide the total score by the number of test scores. To make sure our intended fix is correct, we can use Evaluate Expression. Right-click on `totalScore` in the editor to open the context menu and select Evaluate Expression. Alternatively, use the shortcut ⌥F8 on macOS / Alt+F8 on Windows/Linux.\nEvaluate Expression\n\n\n\nIf we evaluate `totalScore`, we get 25.0, as we can already see in the debugger. However, we can use Evaluate Expression to evaluate other expressions, even ones not currently part of our code. Here we can try out potential solutions. For example, if we evaluate `totalScore / testScores.size()`, we get “8.333333333333334”, which is the expected average. \nEvaluate Expression\n\n\n\nApply fix and rerun tests\nLet’s apply our fix to the code to return `totalScore / testScores.size()` instead of `totalScore` from the method `getAverageScore()`. When we rerun the test, we see that it now passes. Note that you might want to run all tests to make sure that your fix has not had any unintended side effects.\nTest passed\n\n\n\nSince we no longer need the breakpoint, we can remove it, either by clicking the breakpoint in the gutter or by using the shortcut ⌘F8 on macOS / Ctrl+F8 on Windows/Linux.\nRun the application\nNow that we’ve fixed our failing test and all the tests pass, let’s see if our application works correctly. Go to the `Main` class and run it, for example, by clicking the Run button in the gutter.\nDebug an Exception\nWhen we run the application, we see that there seems to be another problem! Our application throws a `DateTimeParseException`, with the message `Text ‘8.7’ could not be parsed at index 0`. Let’s use the debugger to find out what’s wrong. \nDateTimeParseException\n\n\n\nNote that we can create a breakpoint right from the console, by clicking the link Create breakpoint. This opens the Breakpoints dialog, where an Exception Breakpoint has been added for the `DateTimeParseException`.\nCreate Exception Breakpoint\n\n\n\nNow, when we run our application in Debug mode, execution will stop when and where this exception is thrown, so we can figure out what caused it. Execution stops in the `DateTimeFormatter` class. When we expand the `Exception` in the Debug tool window, we see that the `detailMessage` is “Text “8.7” cannot be parsed as a `DateTime`”. That makes sense, as the number 8.7 does not represent a valid date.\nReset frame\nTo find out where the incorrect value comes from, we can go back in the call stack. The call stack is shown in the left pane of the Debug tool window. We see a round arrow in front of the last method that was called. When we hover over this arrow, we see the option to Reset Frame.\nReset Frame\n\n\n\nWe can use Reset Frame to go back to the previous frame. Let’s do so until we get to the point in our code where we try to parse this value into a date. We will need to drop several frames until we get back to our own code. We see that we try to parse a `LocalDate` on line 38 of our `Main` class.\nNote that there are limitations to using Reset Frame; it only resets local variables, not static and instance variables. It also won’t undo any side effects of your application, like console output. While this is not relevant in the current example, you should be aware when you use Reset Frame in the future.\nWe are trying to parse a part of a line from our CSV file. Each line has been split into parts. To see all parts of the current line, click the View link next to the `parts` variable in the Debug tool window. Here we see that “8.7’ is actually a test score, as you might have guessed. We can also see that the line does contain a date, but it is in the next part of the line.\nReset Frame\n\n\n\nAs we can see in our code, we are parsing the same part of the line (`parts[3]`) twice! This looks like a copy-paste error! We should be parsing the part of the line that contains the date, which is `parts[4]`. Let’s fix that by changing line 38 to `var testDate = LocalDate.parse(parts[4]);`\nNote that we could have also gone directly to this line in the code from the console, by clicking the link “Main.java:38” in the console. However, it is useful to know how to set a breakpoint for an exception in case you ever need it.\nGo to line in code from console\n\n\n\nPrint to the console\nIn fact, while we’re here, let’s make sure that we are parsing all the parts of the lines correctly. \nAs we can see in the code just above (on line 25), our CSV file contains a header. Let’s print this header to the console to make sure we parse each part of the line to the correct field. We could add a `System.out.println()` to our code to print the header, but we don’t want to risk print statements ending up in production! Fortunately, there is a better way to do so.\nNon-suspending logging breakpoint\nLet’s create a non-suspending breakpoint, which means that execution will not stop on this breakpoint, and set it to log the line to the console when the breakpoint is hit.\nTo do so, create a breakpoint on line 27. Right-click the breakpoint and click More to open the Breakpoints dialog. Unselect Suspend to make this a non-suspending breakpoint. Next, select Log and Evaluate & log. Set the Evaluate & log field to `”Header: ” + line` and click Done. Notice that the breakpoint is yellow, to signify that this is a non-suspending breakpoint.\nNon-suspending breakpoint\n\n\n\nNow, when we run the application in Debug mode, we see that the header is printed to the console. But so are all the other lines from the file. To print only the header, the breakpoint should be on the next line. We could set a new breakpoint there, but then we’d have to redo the configuration…\nDrag and drop breakpoint\nInstead of creating a new breakpoint, we can drag and drop the existing breakpoint to the next line, preserving its configuration. \nDrag and drop breakpoint\n\n\n\nNow, when we run the application in Debug mode, only the header is printed to the console. Along with the output of our program, of course. It looks like our fields correspond correctly to the headers of the file.\nChecking the functionality of the application\nLet’s run our application again to see if everything is now as it should be. We see that the application runs without errors, but it looks like one of the students has a negative average test score.\nNegative average score\n\n\n\nThat can’t be right! Let’s see what’s going on. We’ll set a breakpoint in the code where we add test scores to the student (line 45 in `Main.java`). When we run our application in Debug mode, execution will stop every time this breakpoint is hit. We can click the Resume Program button (⌥⌘R on macOS / F9 on Windows/Linux), either in the Debug tool window, or inline in the editor, to get to the next test score.\nResume program\n\n\n\nEvery time we click the Resume Program button, we can see the values change both in the inline debugging information in the editor and in the Debug tool window. Execution will stop every time it hits this breakpoint, so for every test score. Since there are a lot of test scores in the file, this is going to take a while… \nResume program\n\n\n\nConditional breakpoint\nAs we are only interested in the test scores for a particular student, we don’t need execution to stop for each test score. Instead of clicking the Resume Program button many times in a row to get to the scores we’re interested in, we can use a conditional breakpoint – which will only halt execution under certain conditions.\nRight-click the breakpoint to open the Line Breakpoint dialog and edit the configuration for the breakpoint. Since we don’t need execution to suspend until we process this particular student’s test scores, we can set the field Condition to `studentName.equals(“Olivia Garcia”)` and click Done. \nConditional breakpoint\n\n\n\nNotice that the breakpoint has a small question mark in it, to signify that it is a conditional breakpoint. Now, when we resume our program, execution will stop only once we get to the test scores for the student whose name we have set in the condition. Here we can see that the test score is negative.\nNegative test score\n\n\n\nAdd watch\nTo see whether all test scores for this student are negative, let’s add a watch to the field `testScore`. Adding a watch makes it easier to explicitly watch the value of a field. Right-click on the variable `testScore` in the Threads & Variables tab in the Debug tool window and select Add to watches from the context menu. The watch will be shown in the right pane of the Debug tool window. \nAdd to Watches\n\n\n\nIf needed, select the Layout Settings icon at the top right of the Debug tool window and select Watches in the list, to show watches in the right pane.\nAdd Watches to Debug tool window\n\n\n\nWhen we click Resume Program and loop over this student’s scores, we see that all her scores are negative. That would explain her negative average… \nThis looks like a problem with the input data. Let’s open the CSV file to correct the scores and make sure Olivia’s scores are no longer negative. We can use multiple carets to fix all scores at the same time.\nIn this example, we can fix our input data ourselves. If you are dealing with user input that you can’t change, consider adding validation to the code, for example, that test scores cannot be negative.\nFinal check\nLet’s run our application one more time to see that everything is in order. We see that average scores are printed to the console for all students, and none of the scores are negative. This is how our application is expected to work. \nFinal check\n\n\n\nConclusion\nIn this blog post, we’ve seen how to use the debugger to find and fix several types of bugs, from problems with the logic in the code, to reasons that exceptions are thrown, and finding problems with input data.\nIs there anything else you’d like to learn about the debugger? Please tell us in the comments!",
        "dc:creator": "Marit van Dijk",
        "comments": "https://blog.jetbrains.com/idea/2025/04/debugging-java-code-in-intellij-idea/#respond",
        "content": "In this blog post, we will look at how to debug Java code using the IntelliJ IDEA debugger. We will look at how to fix a failing test, how to find out where an `Exception` is thrown, and how to find problems with our data. And we will learn some neat tricks about the debugger [&#8230;]",
        "contentSnippet": "In this blog post, we will look at how to debug Java code using the IntelliJ IDEA debugger. We will look at how to fix a failing test, how to find out where an `Exception` is thrown, and how to find problems with our data. And we will learn some neat tricks about the debugger […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=562760",
        "categories": [
          "idea",
          "java",
          "tutorials",
          "debug",
          "debugger",
          "debugging",
          "intelij-idea"
        ],
        "isoDate": "2025-04-24T09:12:11.000Z"
      },
      {
        "creator": "Clara Maine",
        "title": "Is It Still Worth Learning to Code in an AI World?",
        "link": "https://blog.jetbrains.com/education/2025/04/23/is-it-still-worth-learning-to-code/",
        "pubDate": "Wed, 23 Apr 2025 09:17:49 +0000",
        "content:encodedSnippet": "We recently released some new AI features for the JetBrains Academy plugin. Learners will now be able to use machine translation of course content, theory lookup, and AI hints for Kotlin courses.\nAt first glance, these might seem fairly tame. There are no big LLM integrations, JetBrains AI Assistant is not being marketed toward beginners, and we are even considering disabling AI features in beginner programming courses by default at the request of our learners.\nDuring a time when many companies (including JetBrains) are embracing AI for developer productivity, these choices may seem strange. Shouldn’t students be learning to work with these tools from the beginning? Shouldn’t they be adapting to our new AI world?\nOur choice to move slowly and thoughtfully with regards to our educational AI features is intentional and assisted by our incredible research team. We recognize that LLMs can be incredibly useful to aid understanding of new concepts. However, we also think it is important to understand how these tools help and hurt learners, because there is good evidence they have the potential to do both. \n\n\n\n\nIn an effort to help guide learners during this time, we wrote four blog posts about learning to code in an AI world. This is the first in the series, keep an eye out for the next ones on our blog in the coming months.\nContents\n\nIs it still worth learning to code?\nWhat is computational thinking and how can you develop it?\nHow will careers in programming evolve with AI?\n\nIs it still worth learning to code?\nYes. Aside from its current utility in building software, coding builds computational thinking, strengthens problem-solving skills, and reinforces abstract concepts that are important in many disciplines. Programming skills help demystify the digital worlds we inhabit while giving you the power to actively shape and contribute to them.\nMost experts expect AI to augment future programming jobs, not replace them. Although AI-generated code is becoming increasingly prevalent, skilled people still need to review, debug, and take accountability for the quality of said code. How much of a technical foundation will they need to be able to do that? The safe answer is everything a traditional coder knows. Organizations are willing to pay for this level of expertise because, ultimately, deep knowledge and experience serve as risk mitigation in the face of evolving technology.\n\n\n\n\nEven in a future where software development can be completely automated with a prompt from someone with no technical knowledge, programming is an excellent exercise in a specific kind of thinking. In learning to solve problems computationally, we develop new ways of seeing. With this new set of eyes come new ways to make positive change in the world. This applies to both the physical world we inhabit (notice how many daily inconveniences might be solved by a simple program) and the digital ones (notice how software could be made better).\nNo matter how good the machines get, their adoption is guaranteed to be a long and messy process. Success in navigating this ever-shifting landscape will depend on your ability to adapt to new technology, and robust computational thinking skills will make that process much easier.\nWhat is computational thinking and how can you develop it?\nComputational thinking (sometimes called algorithmic thinking) is a name for the cognitive skills we build when we program. It involves breaking down complex problems into smaller, manageable parts, identifying patterns, and designing step-by-step solutions that can be implemented with code and algorithms.\nEven introductory programming courses naturally develop basic computational thinking. By writing programs to automate tasks, analyze data, or solve challenges, students learn to think in structured, algorithmic ways.\nIf you want to level-up your computational thinking beyond the basics and prepare for the challenges and opportunities of this new era, consider exploring courses that focus on algorithms and data structures. While they seem less practical than courses about specific tools and frameworks, the thinking tools these courses develop will last decades longer than any library or framework which is currently in vogue. \nOur educational research team is also using our open-source plugin to build Cognifire, a low-code learning environment to help students develop their computational thinking. Keep an eye on our newsletter for more information about that in the coming months!\nWe offer free algorithms and data structures courses you can complete in your IDE.\n\n\n\nIf you’re at the beginning of your learning journey, just remember that the challenges and frustrations you encounter when you’re programming are productive in the context of developing these intangible skills and intuitions you’ll need to master programming. Always keep in mind that developing this skill requires practice, reflection, and an openness to facing difficult problems that stretch your mental models.\nHow will careers in programming evolve with AI?\nThe general consensus is that developers will increasingly validate, debug, and communicate about AI-generated code. This will require a deep foundational knowledge, since it’s hard to efficiently debug code you couldn’t have written yourself.\nAt the moment, AI models struggle with broad-scope problems like identifying how changes in one part of a large codebase might affect other interconnected parts. They perform poorly with niche frameworks and tools, lack consistent creativity and deep domain expertise, and only really work if the prompter has given clear and detailed instructions, which is a skill in itself.\n\n\n\n\nWith time, it’s true that many of these shortcomings will improve, but which and how much is hard to say. If there is one thing we do know, it’s that automation is not new to programming, and AI is just another form of it. The job of “programmer” has evolved from doing complicated math by hand to punching machine code into cards, to writing assembly languages, then high-level languages – not to mention adapting to new IDEs and general tools like Git. Learning from history, we see that the tools always change, but the opportunities for people with technical knowledge and high-level reasoning skills continue to flourish. \nLooking into the future, we can expect the same dynamic: the robots are best used for repetitive, predictable work, and everything else will be handled by people. Put concretely, gone are the days of abundant programming jobs with relatively simple, repetitive, and mundane responsibilities.\nSo, does that mean junior developers will be more easily replaced by AI?\nWhile it’s true that roles and duties may change faster for inexperienced programmers than for others, that is because more (but not all) of their responsibilities involve wrestling with the boilerplate code that AI can generate most reliably. This doesn’t mean juniors are going to be replaced by AI – it just means they might spend slightly less time writing code, and more time thinking about it.\nExplore our course catalog\n                                                    \nThis is the first post in our series How to Learn to Program in an AI World, keep an eye out for the next ones on our blog in the coming months.",
        "dc:creator": "Clara Maine",
        "content": "We recently released some new AI features for the JetBrains Academy plugin. Learners will now be able to use machine translation of course content, theory lookup, and AI hints for Kotlin courses. At first glance, these might seem fairly tame. There are no big LLM integrations, JetBrains AI Assistant is not being marketed toward beginners, [&#8230;]",
        "contentSnippet": "We recently released some new AI features for the JetBrains Academy plugin. Learners will now be able to use machine translation of course content, theory lookup, and AI hints for Kotlin courses. At first glance, these might seem fairly tame. There are no big LLM integrations, JetBrains AI Assistant is not being marketed toward beginners, […]",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=551833",
        "categories": [
          "jetbrains-academy",
          "ai",
          "ai-assistance",
          "career",
          "developers",
          "for-learners",
          "jetbrainsacademy-2",
          "learn",
          "learn-programming"
        ],
        "isoDate": "2025-04-23T09:17:49.000Z"
      }
    ]
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Mark Downie",
        "title": "Set the default file encoding",
        "link": "https://devblogs.microsoft.com/visualstudio/set-the-default-file-encoding/",
        "pubDate": "Mon, 28 Apr 2025 14:50:31 +0000",
        "content:encodedSnippet": "Have you ever encountered unexpected issues due to file encoding when working in cross-platform environments? These frustrating problems can disrupt your workflow and consume valuable time. Visual Studio addresses these concerns with a new feature – the Default File Encoding option.\nYou can now specify the encoding Visual Studio should use when saving files. This ensures that files are saved with the correct encoding, minimizing potential issues.\nDevelopers often work on projects across different platforms, each requiring specific file encodings. Incorrectly managed encodings can lead to various issues, from corrupted files to unreadable text. The Default File Encoding feature helps mitigate this issue by allowing you to set a default encoding, ensuring consistency and reducing the risk of character display issues or data corruption.\nSetting the default file encoding\nTo configure the default file encoding, navigate to Tools > Options > Environment > Documents. You’ll find an option labeled Save files with the following encoding. If this option is checked, Visual Studio will attempt to save files using the encoding specified in the adjacent combo box. If unchecked, Visual Studio will revert to its default behavior for managing file encodings.\n\nThis feature is useful for maintaining consistency across projects and minimizing encoding-related issues. It’s a straightforward tool that enhances productivity and preserves file integrity.\nHandling encoding conflicts\nIn cases where Visual Studio cannot save a file with the specified encoding, such as attempting to save a file with Unicode characters in ASCII format, a dialog will notify you of the issue. This proactive notification helps prevent data loss or file corruption, allowing you to address problems promptly.\nAs always, we appreciate your continuous feedback, which drives us to make Visual Studio better with each release. Happy coding!\nThe post Set the default file encoding appeared first on Visual Studio Blog.",
        "dc:creator": "Mark Downie",
        "comments": "https://devblogs.microsoft.com/visualstudio/set-the-default-file-encoding/#comments",
        "content": "<p>Have you ever encountered unexpected issues due to file encoding when working in cross-platform environments? These frustrating problems can disrupt your workflow and consume valuable time. Visual Studio addresses these concerns with a new feature – the Default File Encoding option. You can now specify the encoding Visual Studio should use when saving files. This [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/set-the-default-file-encoding/\">Set the default file encoding</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Have you ever encountered unexpected issues due to file encoding when working in cross-platform environments? These frustrating problems can disrupt your workflow and consume valuable time. Visual Studio addresses these concerns with a new feature – the Default File Encoding option. You can now specify the encoding Visual Studio should use when saving files. This […]\nThe post Set the default file encoding appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=253104",
        "categories": [
          "Cross-Platform",
          "Visual Studio"
        ],
        "isoDate": "2025-04-28T14:50:31.000Z"
      },
      {
        "creator": "Leah Tran",
        "title": "Effortless adjustments with an adaptive paste",
        "link": "https://devblogs.microsoft.com/visualstudio/effortless-adjustments-with-an-adaptive-paste/",
        "pubDate": "Wed, 23 Apr 2025 14:51:46 +0000",
        "content:encodedSnippet": "Find yourself needing to adjust pasted code to actually work in your project? Visual Studio 2022 introduces the capability to adapt your pasted code with Copilot to reduce the time you spend on making tedious changes.\nStreamline manual code modifications with adaptive paste\nWhen you’re copying and pasting code, the process often comes with extra steps. Adjusting parameters, correcting styling, or fixing even the most minor errors can slow down your workflow. These small, repetitive tasks add up and disrupt your focus. Addressing these challenges, Visual Studio introduces a new Copilot-powered capability that adapts pasted code seamlessly, saving you time and effort.\nThis feature intelligently adapts pasted code to your solution’s context, incorporating the new code into your existing project by:\nAligning syntax and styling with the document\nInferring parameter adjustments\nFixing minor errors\nSupporting language translation, human and code-based\nCompleting patterns or filling in blanks\nExample: Implementing interface members\nImagine you’re working with a `Math` class that implements the `IMath` interface. You copy and paste the implementation for the `Ceiling` method into the same file. Adapting the pasted code will adjust the code to implement the missing `Floor` method, completing the interface for you.\n\nHow to use it\nThe adaptive paste springs into action the moment you perform a regular paste using `Ctrl+V`, assuming the pasted code has at least three lines. When the “Tab to adapt” suggestion action appears, you can press the `TAB` key to request a suggestion. You’ll then see a diff that compares the original pasted code with the adjusted version, so you can preview changes before they’re applied.\nTry adaptive paste in Version 17.14 Preview 3\nStarting in Visual Studio 2022 version 17.14 Preview 3, you can try adaptive paste by turning on the option:\nTools > Options > GitHub > Copilot > Editor > Enable Adaptive Paste.\nOnce activated, adaptive paste becomes a helpful tool in your workflow. Whether you’re integrating new snippets, fixing small errors, or streamlining patterns, it supports you in coding more efficiently.\nCheck out the new Visual Studio Hub\nStay connected with everything Visual Studio in one place! Visit the Visual Studio Hub for the latest release notes, YouTube videos, social updates, and community discussions.\nAppreciation for your feedback\nYour feedback helps us improve Visual Studio, making it an even more powerful tool for developers. We are immensely grateful for your contributions and look forward to your continued support. By sharing your thoughts, ideas, and any issues you encounter through Developer Community, you help us improve and shape the future of Visual Studio.\nThe post Effortless adjustments with an adaptive paste appeared first on Visual Studio Blog.",
        "dc:creator": "Leah Tran",
        "comments": "https://devblogs.microsoft.com/visualstudio/effortless-adjustments-with-an-adaptive-paste/#respond",
        "content": "<p>Find yourself needing to adjust pasted code to actually work in your project? Visual Studio 2022 introduces the capability to adapt your pasted code with Copilot to reduce the time you spend on making tedious changes. Streamline manual code modifications with adaptive paste When you&#8217;re copying and pasting code, the process often comes with extra [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/effortless-adjustments-with-an-adaptive-paste/\">Effortless adjustments with an adaptive paste</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Find yourself needing to adjust pasted code to actually work in your project? Visual Studio 2022 introduces the capability to adapt your pasted code with Copilot to reduce the time you spend on making tedious changes. Streamline manual code modifications with adaptive paste When you’re copying and pasting code, the process often comes with extra […]\nThe post Effortless adjustments with an adaptive paste appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=253081",
        "categories": [
          "Copilot",
          "Productivity",
          "Visual Studio"
        ],
        "isoDate": "2025-04-23T14:51:46.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "\r\n                            Ranjitha Gurunath Kulkarni,James Johnson\r\n            \t\t\t",
        "title": "Building Dash: How RAG and AI agents help us meet the needs of businesses",
        "link": "https://dropbox.tech/machine-learning/building-dash-rag-multi-step-ai-agents-business-users",
        "pubDate": "Thu, 24 Apr 2025 06:00:00 -0700",
        "content:encodedSnippet": "Knowledge workers today face myriad challenges in managing their digital workflows. Information is often scattered across multiple applications and formats, and finding the right document, message, or piece of information can be both tedious and time-consuming. This fragmentation creates two major problems for businesses: it hinders collaboration and productivity, and it can lead to costly security issues.\nTo address these challenges, we launched Dropbox Dash, a universal search and knowledge management product that combines AI-powered features with in-depth content access control. Designed to help knowledge workers organize their digital lives, Dash allows users to find, organize, share, and secure content across their apps so they can focus on the work that matters most.\nAt its core, Dash is a universal search product powered by many machine learning technologies and supercharged by generative AI. It offers a powerful AI-driven search experience with advanced filtering capabilities that allow users to quickly locate the information they need, regardless of where it’s stored. With granular access controls, Dash also makes sure employees and external partners see only the right content so that sensitive company information isn’t surfaced unintentionally. And with advanced AI features, Dash can summarize, answer questions, surface insights, and generate drafts.\nThroughout our development process, we experimented extensively and explored numerous solutions to build an AI product for businesses. In order to meet the challenges of modern work in data-intensive environments, we ultimately turned to retrieval-augmented generation (RAG) and AI agents. Additionally, we engineered a minimal Python interpreter focused exclusively on essential features required by our AI agents and supported by extensive testing and security reviews to ensure safe code execution.\nIn the following sections, we’ll dive into the specific challenges we faced while building Dash, the innovative solutions we developed to address them, and important lessons that’ll inform our work moving forward.\n\r\n\r\n \r\n\r\n@font-face {\r\nfont-family: 'AtlasGrotesk';\r\nsrc: url('https://cdn.prod.website-files.com/65dcd70b48edc3a7b446950e/65dce019c63112e617513c94_AtlasGrotesk-Medium-Web-vfl38XiTL.woff2') format('woff2');\r\nfont-weight: 500;\r\nfont-style: normal;\r\nfont-display: swap;\r\n}\r\n\r\n@font-face {\r\nfont-family: 'AtlasGrotesk';\r\nsrc: url('https://cdn.prod.website-files.com/65dcd70b48edc3a7b446950e/65dce019711b648fd1ccd24a_AtlasGrotesk-Regular-Web-vflk7bxjs.woff2') format('woff2');\r\nfont-weight: 400;\r\nfont-style: normal;\r\nfont-display: swap;\r\n}\r\n.xf-content-height {margin: 0;}\r\n#cta { font-family: AtlasGrotesk,sans-serif; font-size: .900rem; text-decoration: none; background: #f7f5f2; line-height: 1.69; box-sizing: border-box;}\r\n#cta-box { padding: 15px 20px 15px 20px; }\r\n#cta-hed {font-weight: 500;}\r\n#cta-indent {border-left: 5px solid #1e1919; padding-left:20px;}\r\n#cta a:link, #cta a:visited  {text-decoration: none;}\r\n#cta p { margin: 5px 0px 0px 0px; }\r\n\r\n.dr-theme-dark #cta {background: #000;}\r\n.dr-theme-dark #cta-box {border: 1px solid; border-bottom: 0;}\r\n.dr-theme-dark #cta-indent {border-left: 5px solid #f7f5f2;}\r\n.dr-theme-dark .button {background: #000;}\r\n\r\n.button {\r\n    background-color: #1e1919;\r\n    color:  #f7f5f2;\r\n    height: 2.5rem;\r\n    padding: 10px 5px 10px 20px;\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n    line-height: 1.2;\r\n    transition: all .3s;\r\n}\r\n\r\n.button:hover { background-color: #0061ff; }\r\n\r\nimg {vertical-align: middle; padding: 0px 1px 2px 0px;}\r\n\r\n.c17-plain-html {margin-bottom: 50px}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n Dropbox Dash: Find anything. Protect everything.\n\r\n\r\nFind, organize, and protect your work with Dropbox Dash. Now with advanced search for video and images—plus generative AI capabilities across even more connected apps.\n\r\n\r\n\r\n\r\n\r\n\nSee what's new →\n\r\n\r\n\r\n\n\n    \n\n\n\n    \n\n\n\nChallenges in making an AI product that’s ready for businesses\nBuilding an AI product like Dash presents a unique set of challenges that differ from those that developers typically encounter with consumer-facing applications. These challenges stem from the inherent complexities of business data environments, which are characterized by diversity, fragmentation, and multiple data modalities.\nUnderstanding and addressing these challenges is crucial for delivering effective AI solutions that meet the sophisticated needs of business users. Before we dive into how we solved ‌these challenges, let’s first take a look at what each of these data environments entails.\nData diversity\nData diversity refers to the wide range of data types that a business handles, including emails, documents, meeting notes, task management data, and more. Each type of data has its own structure and context, and that can complicate AI processing.\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-01.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-01.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"1080\"\r\n             data-aem-asset-id=\"e322a923-08a8-4585-bc83-f2f99496271c:BuildingDfB-01.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-01.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-01.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"1080\"\r\n             data-aem-asset-id=\"e322a923-08a8-4585-bc83-f2f99496271c:BuildingDfB-01.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nExample of identifying the right data source, which requires domain knowledge and contextual information\n\r\n        \r\n    \r\n\nEffectively managing diverse data types is critical because each type of data has its own structure and context. For Dash to perform well in a business setting, it must seamlessly process and understand all these different data types.\nData fragmentation\nData fragmentation occurs when an organization’s data is spread across multiple applications. This means that relevant information isn’t stored in a single location, but is instead scattered across different tools and services.\nData fragmentation complicates the process of retrieving and synthesizing information. For users, this means context switching between multiple apps to manually search for the information they need, which is time-consuming, tedious, and inefficient. An AI system that can aggregate and make sense of fragmented data would greatly enhance the user experience by providing a unified and accessible information repository.\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-02.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-02.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"1080\"\r\n             data-aem-asset-id=\"d532fede-93b2-40e1-a8e8-2d753b43fd51:BuildingDfB-02.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-02.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-02.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"1080\"\r\n             data-aem-asset-id=\"d532fede-93b2-40e1-a8e8-2d753b43fd51:BuildingDfB-02.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nExample of information spread across multiple apps, which requires combining fragmented information to construct a complete answer\n\r\n        \r\n    \r\n\nData modalities\nData modalities refer to the different forms or modes in which data exists. Common modalities include text, images, audio, and video. Handling multiple data modalities is essential for providing a comprehensive AI solution.\nBusiness users often deal with a mix of text documents, images, presentations, and videos, among other formats. An AI system that can process and integrate all these modalities can provide a more complete and accurate response to user queries.\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-03.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-03.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"880\"\r\n             data-aem-asset-id=\"8f4d9ce9-4bdf-4bb6-905e-9c4a23dc46e0:BuildingDfB-03.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-03.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-03.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"880\"\r\n             data-aem-asset-id=\"8f4d9ce9-4bdf-4bb6-905e-9c4a23dc46e0:BuildingDfB-03.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nExample of information spread across multiple modalities\n\r\n        \r\n    \r\n\nIn summary, these challenges—data diversity, data fragmentation, and data modalities—present unique complexities when building these types of AI products. Addressing these challenges is essential to creating a robust and effective AI solution that meets the various needs of knowledge workers in dynamic and data-intensive environments. To pull this off, we implemented and experimented with multiple solutions. That’s where retrieval-augmented generation (RAG) and AI agents come in.\nLeveraging retrieval-augmented generation\nWhen building Dash, we knew that delivering accurate and relevant responses to user queries was paramount. That’s why we turned to RAG, an industry-standard approach for tasks like query responses and summarization. RAG's ability to combine external information retrieval with state-of-the-art generative models makes it the perfect fit for our product, especially in the complex landscape of enterprise data.\nRAG works by first retrieving the most relevant pieces of content from a dataset or knowledge base and then using a large language model (LLM) to generate a response based on that content. This approach ensures that the answers that the AI system provides aren’t only contextually relevant but also up to date, which is crucial in business environments where data is constantly evolving.\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/BuildingDfB-04.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/BuildingDfB-04.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"640\"\r\n             data-aem-asset-id=\"276a85d0-169a-46f7-93e1-10ebfa5fecb5:BuildingDfB-04.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/BuildingDfB-04.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/BuildingDfB-04.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"640\"\r\n             data-aem-asset-id=\"276a85d0-169a-46f7-93e1-10ebfa5fecb5:BuildingDfB-04.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nRetrieval-augmented generation (RAG)\n\r\n        \r\n    \r\n\nChoosing the right retrieval system\nThe retrieval system is the backbone of any RAG pipeline. It determines not just speed but also whether the LLM has the right context to generate meaningful answers—and a misstep here can compromise the entire user experience. Put another way, the retrieval system sets the bounds of what your LLM can “know” at inference time. It also greatly affects latency, which in turn impacts user satisfaction. And, it shapes the perceived quality of the final answer, since retrieval coverage can make or break correctness and completeness.\nThere are many options when it comes to designing a retrieval system. For question-answering systems, the most common one is to have a vector index where chunked data is indexed on their embeddings. Embeddings are simply a low-dimensional semantic representation of the chunk of data. To retrieve from such an index, semantic search is often used.\nAnother choice is to go with a more traditional approach to a search index, where documents are indexed by their lexical features (e.g., words that appear in the title or body). This approach, however, adds extra latency due to the need for on-the-fly chunking and re-ranking of the chunks during serving time.\nThere are many other options that prioritize data freshness, such as by directly interacting with the API for the platform where your data is stored, for example. But there are a few trade-offs to consider for each of these approaches:\nLatency vs. quality: There’s a pervasive assumption that you can’t have both extremely low latency and high-quality results. Why? Because advanced or larger embedding-based semantic searches may take longer due to their complexity—whether that’s a heavier model or additional reranking steps. For example, if you want more than 95% of your requests to reliably complete in under 1–2 seconds, you might have to use smaller embedding models, which can reduce retrieval accuracy. \nData freshness vs. scalability: Many projects need to keep their data fresh—for instance, re-indexing a news site every few minutes. Frequent re-indexing processes can hinder system throughput or spike latency when they’re underway. Alternatively, on-the-fly API calls to third-party data can push latency well above a few seconds. If near-real-time information is crucial (e.g., updating stock quotes), your system might spend more resources on frequent indexing or caching, throttling your ability to scale.\nBudget vs. user experience: High-quality solutions—advanced embeddings, re-ranking steps, and large-chunked indexes—often require additional compute, and more compute means more cost. If the user experience demands near-instant results with best-in-class recall, the resource burn can be significant. And if budgets are constrained, you might be forced to choose a simpler retrieval pipeline that could degrade the overall quality. \nFor Dash use cases, we prioritized reasonable latency but also high-quality and reasonable data freshness, with both periodic data syncs and the implementation of webhooks whenever appropriate. Specifically, we stayed under 1–2 seconds for over 95% of our queries, which allows us some latency budget for the rest of the pipeline so that our users don’t click away because the response time is too long.\nUltimately, we landed on a traditional information retrieval (IR) approach combined with on-the-fly chunking and reranking: \nTraditional IR: We use a lexical-based system, along with smarter rerankers that use embedding features. \nOn-the-fly chunking: Documents are chunked at query time to ensure we’re pulling only the relevant sections.\nReranking: A larger, but still efficient, embedding model then re-sorts those results to place the most relevant chunks at the top.\nIn practice, this yields high-quality results in under 2 seconds for over 95% of our queries, balancing speed and relevance. The combination allows us to keep costs in check while avoiding the pitfalls of purely semantic or purely lexical retrieval.\nQuality is best when measured end-to-end because all the parts of the RAG system need to work together effectively. Once we chose the retrieval system that best fit our needs, it was time to pick the best LLM for the job.\nChoosing the right model\nTo ensure this approach met our requirements, we conducted a rigorous evaluation. We tested multiple retrieval methods and model variations on several public datasets, including Google’s Natural Questions (featuring real user queries with large documents); MuSiQue (with multi-hop questions requiring information linking across different passages); and Microsoft’s Machine Reading Comprehension (containing often short passages and multi-document queries from Bing logs).\nWe also designed hand-tuned metrics to help evaluate the quality of generated answers. These included an LLM judge for answer correctness (passing retrieved evidence through an LLM to score final answer accuracy), an LLM judge for completeness (measuring the extent to which all relevant question aspects are addressed), as well as source precision, recall, and F1 metrics to evaluate how accurately we retrieved key passages needed for correct answers.\nBy cross-referencing these metrics, we could directly compare multiple open-source and closed-source LLMs in a consistent environment. This led us to narrow down a few model families that best suited Dash’s use cases.\nOur RAG system remains model agnostic: We want to provide the flexibility of choosing the models and providers our customers are most comfortable with. Being model agnostic also allows us to be prepared to adapt to rapid developments in the field of LLMs.\nAlthough RAG provides a solution for the most common types of questions—kinds that require fetching information from one or more documents—it’s incapable of performing complex, multi-step tasks. This is where AI agents come in.\nThe role of AI agents\nImagine you’ve asked a colleague to help you with a complex task, such as, “What’s the progress on projects in my team’s Q1 OKRs?” This person would likely find the answer to this question by first breaking it down into individual steps before tackling those steps one at a time.\nTo handle the business challenges outlined above, we need an AI system that can approach complex tasks like humans do. These tasks may require domain knowledge, contextual information, and planning and executing multiple steps—and AI agents are exceptional at doing just that.\nThe term \"AI agent\" is often used loosely across the tech industry, and with various interpretations. However, there’s a common theme among all of them: an AI agent is a system that can autonomously perform tasks with very little to no human interaction.\nAt Dropbox, our interpretation of AI agents is more specific and aligned with the needs of business applications. We view AI agents as multi-step orchestration systems that can dynamically break down user queries into individual steps, execute those steps using available resources and information from the current user, and generate a final response—all while requiring minimal human oversight.\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/BuildingDfB-1200x628_05.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/BuildingDfB-1200x628_05.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"2400\"\r\n             data-sly-attribute.height=\"1256\"\r\n             data-aem-asset-id=\"79f53398-3024-4cf7-87a4-69ce3ee639fc:BuildingDfB-1200x628_05.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/BuildingDfB-1200x628_05.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/BuildingDfB-1200x628_05.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"2400\"\r\n             data-sly-attribute.height=\"1256\"\r\n             data-aem-asset-id=\"79f53398-3024-4cf7-87a4-69ce3ee639fc:BuildingDfB-1200x628_05.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nAgents as multi-step orchestration\n\r\n        \r\n    \r\n\nThe multi-step orchestration in our AI agents includes two stages: planning and execution.\nStage 1: Planning\nThe planning stage involves breaking down a user's query into a sequence of high-level steps. This is done by an LLM, which interprets the query and generates simple code statements to express the logic of responding to the user’s query. The LLM-generated code is written in our domain-specific language (DSL), which is similar to the Python programming language. The initial plan of responding to the user’s query is restricted to high-level or simple code statements, which ensures clarity and precision in defining each step.\nFor example, let’s explore the request, \"Show me the notes for tomorrow’s all-hands meeting.\" These steps contain the logic necessary to respond to the query:\nResolve concrete dates and times for the phrase “tomorrow.” There needs to be an established time window to identify what “tomorrow” is referring to. This must be done relative to the current date and time.\nIdentify the meeting. There needs to be a search conducted for a meeting with a title matching \"all-hands\" (and within the determined time window).\nRetrieve notes. Documents attached to or linked from the identified meeting must be fetched.\nThe AI agent, however, expresses this logic as statements of code in our Python-like DSL. Below is a simplified version of what that’d look like:\n\r\n\r\n\r\n\r\n\r\n\n\r\n\r\n\r\n    \r\n        Copy\r\n    \r\n    \ntime_window: TimeWindow = time_helper.get_time_window_for_tomorrow()\r\nmeeting: Meeting = meetings_helper.find_meeting(title=\"all-hands\", \r\ntime_window=time_window)\r\nnotes: list[Document] = meetings_helper.get_attached_documents(meeting=meeting)\n\r\n\r\n\r\n\r\n\n\r\n\n\nEach XXXX_helper object in the generated code contains functionality that acts as a building block for the LLM to use when expressing the logic of responding to the user’s query.\nStage 2: Execution\nThe next step is to validate and execute the logic that was expressed as code. The code is validated through static analysis to ensure correctness, safety, and to detect missing functionality. We intentionally allow the LLM to assume that missing functionality exists. If missing functionality is identified, we use the LLM a second time to implement the missing code.\nThis two-stage approach to generating code allows the agents to be clear and focused with an overall plan, while also being adaptable to new types and variations of user queries. Below is a simplified version of what the result of each of the steps might look like:\n1. Time window retrieval: Resolve the relative phrase “tomorrow” to concrete values.\n\r\n\r\n\r\n\r\n\r\n\n\r\n\r\n\r\n    \r\n        Copy\r\n    \r\n    \ntime_window: TimeWindow = time_helper.get_time_window_for_tomorrow()\r\n# TimeWindow(start=\"2025-03-19\", end=\"2025-03-20\")\n\r\n\r\n\r\n\r\n\n\r\n\n\n2. Meeting identification: Search for the \"all-hands\" meeting within the resolved time window.\n\r\n\r\n\r\n\r\n\r\n\n\r\n\r\n\r\n    \r\n        Copy\r\n    \r\n    \nmeeting: Meeting = meetings_helper.find_meeting(title=\"all-hands\", \r\ntime_window=time_window)\r\n# Meeting(title=\"Company All-Hands\", start_time=..., attendees=...)\n\r\n\r\n\r\n\r\n\n\r\n\n\n3. Document retrieval: Finally, fetch the notes attached to the identified meeting.\n\r\n\r\n\r\n\r\n\r\n\n\r\n\r\n\r\n    \r\n        Copy\r\n    \r\n    \nnotes: list[Document] = meetings_helper.get_attached_documents(meeting=meeting)\r\n# [Document(title=\"All-Hands-Notes\", content=\"...\")]\n\r\n\r\n\r\n\r\n\n\r\n\n\nThe final response to the user’s query is the result of the last step. In this example, the list of documents will be returned to the user.\nValidation and testing\nThe interpreter we use to execute the LLM-generated code was developed from scratch here at Dropbox. This gave us full control over everything inside the interpreter, including integrating static analysis passes and “dry runs,” in addition to having run-time type enforcement.\nStatic analysis allows our interpreter to examine the code without executing it, helping us automatically identify potential security risks, missing functionality, or code correctness errors. Having run-time type enforcement helps ensure that the data and objects being operated on are the types of values that we expect. In our example, the list of documents returned to the user will always be a list of documents.\nNormally, testing LLM integrations can be an ever-moving target. As new model versions are released, slight changes in how things are phrased or reacted to can be expected. Knowing exactly why a test failed or why the final response differed from expectations is often challenging.\nHowever, as a result of the LLM using code to express its logic in responding to the user, we’re able to make the LLM “show the work.” This helps with understanding at which step the logic failed, having more deterministic testing, and evaluating the response to a query. For example:\nLogic failure: “Can’t answer this question” vs. “Error on step 3 when fetching attached documents to meeting…”\nMore deterministic testing: Does resolving “tomorrow” always return the correct time window?\nEvaluating responses: “Does the response text have the approximate same meaning as what we expected?” vs. “Does the response value match the expected type list[Document]?”\nSecurity and efficiency\nTo address security concerns, we implemented security controls in our interpreter and its development process. Only the minimal required functionality is implemented in its runtime—feature parity with CPython isn’t the goal. This turns major security risks that exist in other full-featured interpreters into non-issues.\nAs we’ve explored, AI agents play a pivotal role in addressing the complexities of business tasks through their ability to plan and execute multi-step workflows autonomously. By leveraging LLMs and DSLs, these agents break down intricate queries into actionable steps, ensuring precision and efficiency. The structured approach, combined with strong typing and built-in security controls, enhances reliability and mitigates security risks.\nThe future of AI agents in business environments is promising. And as we continue to refine and expand their capabilities, they’ll become indispensable in streamlining operations, enhancing productivity, and driving innovation.\nLessons learned and future direction\nThroughout our journey in developing business-ready AI solutions, we’ve learned several valuable lessons that have shaped our approach and informed our decisions. While AI agents excel at handling complex tasks through multi-step orchestration, RAG remains indispensable for simpler information retrieval tasks. The key is determining the appropriate tool for each scenario.\nOur development of business AI solutions has forced us to adapt our approach to address data diversity, fragmentation, and modalities. We’ve had to innovate to make our solutions robust and scalable. We‘ve also observed that not all LLMs are equal: the same prompts can’t be used for different LLMs. This variability necessitates careful selection and optimization of prompts for LLMs to complete specific tasks.\nMoreover, the trade-offs between model size, latency, and accuracy are real. While larger models may provide more precise results, they can introduce delays that may not align with user expectations. Understanding these trade-offs is crucial for delivering a good user experience.\nLooking ahead, we’re excited to explore several promising directions that’ll further enhance our AI capabilities and drive innovation in knowledge management. Enabling AI agents to engage in multi-turn conversations will allow for more natural and intuitive interactions, mimicking human-like dialogue and improving the overall user experience. And developing self-reflective agents that can evaluate their own performance and adapt to new information will increase their autonomy and effectiveness, reducing the need for human intervention.\nIn addition, continuous fine-tuning of LLMs to align with specific business needs will enhance their relevance and accuracy, ensuring they meet the high standards of business environments. And lastly, expanding AI capabilities to support multiple languages will make our products more accessible and valuable to a global user base, fostering collaboration and productivity across diverse teams.\nThe integration of RAG and AI agents has significantly enhanced Dropbox Dash with AI capabilities to bring useful answers to users’ questions, and we’re focused on addressing challenges and exploring opportunities based on what we’ve learned. We’re also committed to our AI principles and being worthy of trust. By consistently innovating and refining our approach, we aim to develop products that meet the current needs of businesses and help move the future of knowledge work forward. \nThe landscape of business AI is evolving rapidly, and we’re excited about advancing AI capabilities to empower users to focus on truly meaningful, human work.",
        "dc:creator": "\r\n                            Ranjitha Gurunath Kulkarni,James Johnson\r\n            \t\t\t",
        "content": "null",
        "contentSnippet": "null",
        "guid": "https://dropbox.tech/machine-learning/building-dash-rag-multi-step-ai-agents-business-users",
        "categories": [
          "LLM",
          "models",
          "Machine Learning",
          "AI",
          "Dash",
          "Business"
        ],
        "isoDate": "2025-04-24T13:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": [
      {
        "creator": "브리핑허브",
        "title": "지역축제 홍보비 5억5천? 백종원 유튜브 영상 논란 총정리",
        "link": "http://app-developer.tistory.com/entry/%EC%A7%80%EC%97%AD%EC%B6%95%EC%A0%9C-%ED%99%8D%EB%B3%B4%EB%B9%84-5%EC%96%B55%EC%B2%9C-%EB%B0%B1%EC%A2%85%EC%9B%90-%EC%9C%A0%ED%8A%9C%EB%B8%8C-%EC%98%81%EC%83%81-%EB%85%BC%EB%9E%80-%EC%B4%9D%EC%A0%95%EB%A6%AC",
        "pubDate": "Fri, 25 Apr 2025 17:50:01 +0900",
        "author": "브리핑허브",
        "comments": "http://app-developer.tistory.com/entry/%EC%A7%80%EC%97%AD%EC%B6%95%EC%A0%9C-%ED%99%8D%EB%B3%B4%EB%B9%84-5%EC%96%B55%EC%B2%9C-%EB%B0%B1%EC%A2%85%EC%9B%90-%EC%9C%A0%ED%8A%9C%EB%B8%8C-%EC%98%81%EC%83%81-%EB%85%BC%EB%9E%80-%EC%B4%9D%EC%A0%95%EB%A6%AC#entry217comment",
        "content": "<h3 data-ke-size=\"size23\">5억5천만원, 지역축제 홍보에 과한 금액일까?</h3>\n<p data-ke-size=\"size16\">최근 <b>백종원 대표가 운영하는 더본코리아 자회사</b>가 인제군으로부터 지역축제 홍보 명목으로 <b>5억5000만원을 지급받은 사실</b>이 알려지며 논란이 일고 있습니다. 해당 금액은 인제군 축제 전체 예산 19억5000만원 중 28%에 해당하는 금액으로, 축제 예산 중 가장 큰 비중을 차지했습니다. 이 예산은 더본코리아 자회사 <b>티엠씨엔터</b>에 지급되었으며, 유튜브 영상 2편을 제작 및 업로드하는 조건이었습니다.</p>\n<h3 data-ke-size=\"size23\">문제의 유튜브 영상, 조회수는 높지만 효과는?</h3>\n<p data-ke-size=\"size16\">계약에 따라 <b>2023년 6월 9일과 7월 8일</b>에 백종원 대표 유튜브 채널에 영상이 올라갔습니다. &lsquo;몇날 며칠 고생 좀 했습니다&rsquo;, &lsquo;축제 바가지요금에 지친 사람 주목&rsquo;이라는 제목의 영상은 각각 85만, 56만 조회수를 기록했지만, 실질적인 지역경제 활성화 효과나 방문자 수 증대와 관련된 구체적인 데이터는 아직 공개되지 않았습니다. <b>홍보비 대비 효율성과 투명성에 대한 비판</b>이 계속되고 있습니다.</p>\n<h3 data-ke-size=\"size23\">위생 문제로 불붙은 여론&hellip; '백종원 방지법'까지?</h3>\n<p data-ke-size=\"size16\">논란은 단순한 예산 사용 문제를 넘어 <b>위생 문제</b>로까지 번졌습니다. 해당 영상에서 공사 자재를 활용한 바비큐 그릴, 농약 분무기를 통한 소스 분사 등 <b>비위생적 장면</b>이 포함돼 있다는 민원이 잇따르면서 국민신문고에도 수많은 신고가 접수된 상황입니다. 이로 인해 온라인 상에서는 &lsquo;<b>백종원 방지법</b>&rsquo; 제정 청원이 등장하기도 했으며, 일부에서는 <b>공공 행사에서 특정 기업의 독점</b>을 제한해야 한다는 목소리도 나오고 있습니다.</p>\n<h3 data-ke-size=\"size23\">더본코리아를 둘러싼 연이은 논란들</h3>\n<p data-ke-size=\"size16\">더본코리아는 이번 논란 이전에도 여러 의혹에 휩싸인 바 있습니다. &lsquo;<b>빽햄 선물세트 가격 논란</b>&rsquo;, &lsquo;<b>백석된장 원산지 표시 위반</b>&rsquo;, &lsquo;<b>술자리 면접 논란</b>&rsquo; 등 크고 작은 잡음이 끊이지 않고 있습니다. 이처럼 반복되는 논란 속에서 <b>브랜드 신뢰도 하락</b>과 더불어 백종원 대표 개인에 대한 이미지에도 적잖은 타격이 예상됩니다.</p>\n<h3 data-ke-size=\"size23\">결론: 공공 예산 집행, 더 투명하고 신중해야</h3>\n<p data-ke-size=\"size16\">이번 논란은 단순히 유튜브 영상 2편에 들어간 5억5천만 원이라는 금액만의 문제가 아닙니다. 공공 예산은 지역 주민과 국민의 세금으로 구성된 만큼, <b>그 사용의 투명성과 정당성</b>이 무엇보다 중요합니다. 또한 유명인의 영향력을 활용한 마케팅이 때로는 역효과를 불러올 수 있다는 점에서, <b>지자체와 기업 간의 계약 구조와 실행 방식에 대한 재점검</b>이 필요하다는 교훈을 남깁니다.</p>",
        "contentSnippet": "5억5천만원, 지역축제 홍보에 과한 금액일까?\n최근 백종원 대표가 운영하는 더본코리아 자회사가 인제군으로부터 지역축제 홍보 명목으로 5억5000만원을 지급받은 사실이 알려지며 논란이 일고 있습니다. 해당 금액은 인제군 축제 전체 예산 19억5000만원 중 28%에 해당하는 금액으로, 축제 예산 중 가장 큰 비중을 차지했습니다. 이 예산은 더본코리아 자회사 티엠씨엔터에 지급되었으며, 유튜브 영상 2편을 제작 및 업로드하는 조건이었습니다.\n문제의 유튜브 영상, 조회수는 높지만 효과는?\n계약에 따라 2023년 6월 9일과 7월 8일에 백종원 대표 유튜브 채널에 영상이 올라갔습니다. ‘몇날 며칠 고생 좀 했습니다’, ‘축제 바가지요금에 지친 사람 주목’이라는 제목의 영상은 각각 85만, 56만 조회수를 기록했지만, 실질적인 지역경제 활성화 효과나 방문자 수 증대와 관련된 구체적인 데이터는 아직 공개되지 않았습니다. 홍보비 대비 효율성과 투명성에 대한 비판이 계속되고 있습니다.\n위생 문제로 불붙은 여론… '백종원 방지법'까지?\n논란은 단순한 예산 사용 문제를 넘어 위생 문제로까지 번졌습니다. 해당 영상에서 공사 자재를 활용한 바비큐 그릴, 농약 분무기를 통한 소스 분사 등 비위생적 장면이 포함돼 있다는 민원이 잇따르면서 국민신문고에도 수많은 신고가 접수된 상황입니다. 이로 인해 온라인 상에서는 ‘백종원 방지법’ 제정 청원이 등장하기도 했으며, 일부에서는 공공 행사에서 특정 기업의 독점을 제한해야 한다는 목소리도 나오고 있습니다.\n더본코리아를 둘러싼 연이은 논란들\n더본코리아는 이번 논란 이전에도 여러 의혹에 휩싸인 바 있습니다. ‘빽햄 선물세트 가격 논란’, ‘백석된장 원산지 표시 위반’, ‘술자리 면접 논란’ 등 크고 작은 잡음이 끊이지 않고 있습니다. 이처럼 반복되는 논란 속에서 브랜드 신뢰도 하락과 더불어 백종원 대표 개인에 대한 이미지에도 적잖은 타격이 예상됩니다.\n결론: 공공 예산 집행, 더 투명하고 신중해야\n이번 논란은 단순히 유튜브 영상 2편에 들어간 5억5천만 원이라는 금액만의 문제가 아닙니다. 공공 예산은 지역 주민과 국민의 세금으로 구성된 만큼, 그 사용의 투명성과 정당성이 무엇보다 중요합니다. 또한 유명인의 영향력을 활용한 마케팅이 때로는 역효과를 불러올 수 있다는 점에서, 지자체와 기업 간의 계약 구조와 실행 방식에 대한 재점검이 필요하다는 교훈을 남깁니다.",
        "guid": "http://app-developer.tistory.com/217",
        "categories": [
          "공공예산",
          "더본코리아",
          "백종원",
          "백종원 방지법",
          "세금 논란",
          "식품위생법",
          "유튜브 홍보",
          "인제군 축제",
          "지역축제",
          "지역축제 문제"
        ],
        "isoDate": "2025-04-25T08:50:01.000Z"
      },
      {
        "creator": "브리핑허브",
        "title": "김호중 '음주 뺑소니' 실형 2년 6개월, 법원 판단",
        "link": "http://app-developer.tistory.com/entry/%EA%B9%80%ED%98%B8%EC%A4%91-%EC%9D%8C%EC%A3%BC-%EB%BA%91%EC%86%8C%EB%8B%88-%EC%8B%A4%ED%98%95-2%EB%85%84-6%EA%B0%9C%EC%9B%94-%EB%B2%95%EC%9B%90-%ED%8C%90%EB%8B%A8",
        "pubDate": "Fri, 25 Apr 2025 16:57:17 +0900",
        "author": "브리핑허브",
        "comments": "http://app-developer.tistory.com/entry/%EA%B9%80%ED%98%B8%EC%A4%91-%EC%9D%8C%EC%A3%BC-%EB%BA%91%EC%86%8C%EB%8B%88-%EC%8B%A4%ED%98%95-2%EB%85%84-6%EA%B0%9C%EC%9B%94-%EB%B2%95%EC%9B%90-%ED%8C%90%EB%8B%A8#entry216comment",
        "content": "<p data-ke-size=\"size16\">김호중 '음주 뺑소니' 실형 2년 6개월, 법원 판단 김호중,음주 뺑소니,음주운전 사고,도주치상,트로트 가수 논란,연예인 음주운전,실형 선고,법원 판결,사고 후 미조치,김호중 사건 정리</p>\n<p data-ke-size=\"size16\"><b>김호중 음주 뺑소니</b> 사건이 법원 판결로 결론을 맞이하면서 사회적 관심이 집중되고 있습니다. 트로트 가수 김호중은 서울 강남구 압구정로에서 발생한 음주운전 후 뺑소니 사고로 인해 <b>징역 2년 6개월</b>의 실형을 선고받았습니다.</p>\n<h3 data-ke-size=\"size23\">사건 개요: 김호중은 왜 법정에 섰나?</h3>\n<p data-ke-size=\"size16\">2024년 5월 9일 밤 11시 40분경, <b>김호중 음주 뺑소니</b> 사건은 서울 강남구에서 발생했습니다. 김 씨는 음주 상태로 벤츠 차량을 몰다 중앙선을 침범해 택시와 충돌한 후 아무런 조치 없이 도주했습니다. 이후 매니저를 시켜 허위 자수를 시도하면서 사태는 더욱 심각해졌습니다.</p>\n<h3 data-ke-size=\"size23\">재판부의 판단과 판결 이유</h3>\n<p data-ke-size=\"size16\">서울중앙지법 형사26단독 재판부는 <b>도주치상</b>, <b>도로교통법상 사고 후 미조치</b>, <b>위험운전치상</b> 등 혐의 모두를 유죄로 인정했습니다. 특히 재판부는 \"CCTV로도 음주 상태임이 명확하며, 책임 회피와 허위 자수는 죄질이 매우 불량하다\"고 지적했습니다.</p>\n<h3 data-ke-size=\"size23\">음주운전 혐의는 왜 빠졌을까?</h3>\n<p data-ke-size=\"size16\">김호중은 사건 발생 후 17시간이 지난 뒤 경찰에 출석했으며, 당시 측정된 <b>혈중알코올농도</b>는 법적 기준을 넘지 않았습니다. 이에 검찰은 음주운전 혐의는 입증이 어렵다고 판단해 공소장에서 제외했습니다.</p>\n<h3 data-ke-size=\"size23\">소속사와 매니저의 책임도 무겁다</h3>\n<p data-ke-size=\"size16\">이 사건에는 김호중 외에도 소속사 대표와 매니저가 관여했습니다. 대표는 징역 2년, 본부장은 1년 6개월, 매니저는 징역 1년에 집행유예 2년을 선고받았습니다. <b>김호중 음주 뺑소니</b> 사건은 단순한 연예인의 실수가 아닌, 조직적인 은폐 시도로까지 확산된 중대한 사건이었습니다.</p>\n<h3 data-ke-size=\"size23\">김호중 음주 뺑소니 사건에 대한 대중 반응</h3>\n<p data-ke-size=\"size16\">사건이 알려지면서 팬들과 대중은 큰 충격에 빠졌습니다. 특히 그동안 '성실한 이미지'로 알려졌던 김호중의 이중적인 행보에 대해 실망의 목소리가 커지고 있습니다.</p>\n<h3 data-ke-size=\"size23\">사건을 통해 본 연예인의 책임</h3>\n<p data-ke-size=\"size16\"><b>김호중 음주 뺑소니</b> 사건은 단순한 교통사고가 아닙니다. 대중의 사랑을 받는 연예인은 공인의 책임을 무겁게 받아들여야 하며, 그 행동 하나하나가 사회적 영향을 끼친다는 점을 이번 사건은 명확히 보여주었습니다.</p>\n<h3 data-ke-size=\"size23\">마무리: 책임 있는 태도가 신뢰를 만든다</h3>\n<p data-ke-size=\"size16\">신뢰는 하루아침에 얻어지지 않으며, 한번 무너진 신뢰를 회복하는 데는 더 큰 시간과 노력이 필요합니다. <b>김호중 음주 뺑소니</b> 사건은 단순한 연예인 일탈이 아닌, 사회적 경각심을 일깨우는 계기가 되었습니다. 법은 모두에게 평등하며, 유명인 역시 예외일 수 없습니다. 이제는 보다 책임 있는 행동과 진정성 있는 사과가 필요한 때입니다.</p>",
        "contentSnippet": "김호중 '음주 뺑소니' 실형 2년 6개월, 법원 판단 김호중,음주 뺑소니,음주운전 사고,도주치상,트로트 가수 논란,연예인 음주운전,실형 선고,법원 판결,사고 후 미조치,김호중 사건 정리\n김호중 음주 뺑소니 사건이 법원 판결로 결론을 맞이하면서 사회적 관심이 집중되고 있습니다. 트로트 가수 김호중은 서울 강남구 압구정로에서 발생한 음주운전 후 뺑소니 사고로 인해 징역 2년 6개월의 실형을 선고받았습니다.\n사건 개요: 김호중은 왜 법정에 섰나?\n2024년 5월 9일 밤 11시 40분경, 김호중 음주 뺑소니 사건은 서울 강남구에서 발생했습니다. 김 씨는 음주 상태로 벤츠 차량을 몰다 중앙선을 침범해 택시와 충돌한 후 아무런 조치 없이 도주했습니다. 이후 매니저를 시켜 허위 자수를 시도하면서 사태는 더욱 심각해졌습니다.\n재판부의 판단과 판결 이유\n서울중앙지법 형사26단독 재판부는 도주치상, 도로교통법상 사고 후 미조치, 위험운전치상 등 혐의 모두를 유죄로 인정했습니다. 특히 재판부는 \"CCTV로도 음주 상태임이 명확하며, 책임 회피와 허위 자수는 죄질이 매우 불량하다\"고 지적했습니다.\n음주운전 혐의는 왜 빠졌을까?\n김호중은 사건 발생 후 17시간이 지난 뒤 경찰에 출석했으며, 당시 측정된 혈중알코올농도는 법적 기준을 넘지 않았습니다. 이에 검찰은 음주운전 혐의는 입증이 어렵다고 판단해 공소장에서 제외했습니다.\n소속사와 매니저의 책임도 무겁다\n이 사건에는 김호중 외에도 소속사 대표와 매니저가 관여했습니다. 대표는 징역 2년, 본부장은 1년 6개월, 매니저는 징역 1년에 집행유예 2년을 선고받았습니다. 김호중 음주 뺑소니 사건은 단순한 연예인의 실수가 아닌, 조직적인 은폐 시도로까지 확산된 중대한 사건이었습니다.\n김호중 음주 뺑소니 사건에 대한 대중 반응\n사건이 알려지면서 팬들과 대중은 큰 충격에 빠졌습니다. 특히 그동안 '성실한 이미지'로 알려졌던 김호중의 이중적인 행보에 대해 실망의 목소리가 커지고 있습니다.\n사건을 통해 본 연예인의 책임\n김호중 음주 뺑소니 사건은 단순한 교통사고가 아닙니다. 대중의 사랑을 받는 연예인은 공인의 책임을 무겁게 받아들여야 하며, 그 행동 하나하나가 사회적 영향을 끼친다는 점을 이번 사건은 명확히 보여주었습니다.\n마무리: 책임 있는 태도가 신뢰를 만든다\n신뢰는 하루아침에 얻어지지 않으며, 한번 무너진 신뢰를 회복하는 데는 더 큰 시간과 노력이 필요합니다. 김호중 음주 뺑소니 사건은 단순한 연예인 일탈이 아닌, 사회적 경각심을 일깨우는 계기가 되었습니다. 법은 모두에게 평등하며, 유명인 역시 예외일 수 없습니다. 이제는 보다 책임 있는 행동과 진정성 있는 사과가 필요한 때입니다.",
        "guid": "http://app-developer.tistory.com/216",
        "categories": [
          "김호중",
          "김호중 사건 정리",
          "도주치상",
          "법원 판결",
          "사고 후 미조치",
          "실형 선고",
          "연예인 음주운전",
          "음주 뺑소니",
          "음주운전 사고",
          "트로트 가수 논란"
        ],
        "isoDate": "2025-04-25T07:57:17.000Z"
      },
      {
        "creator": "브리핑허브",
        "title": "지드래곤, 사나 태그하고 '빛삭'? 럽스타 의혹 진짜일까",
        "link": "http://app-developer.tistory.com/entry/%EC%A7%80%EB%93%9C%EB%9E%98%EA%B3%A4-%EC%82%AC%EB%82%98-%ED%83%9C%EA%B7%B8%ED%95%98%EA%B3%A0-%EB%B9%9B%EC%82%AD-%EB%9F%BD%EC%8A%A4%ED%83%80-%EC%9D%98%ED%98%B9-%EC%A7%84%EC%A7%9C%EC%9D%BC%EA%B9%8C",
        "pubDate": "Thu, 24 Apr 2025 08:32:27 +0900",
        "author": "브리핑허브",
        "comments": "http://app-developer.tistory.com/entry/%EC%A7%80%EB%93%9C%EB%9E%98%EA%B3%A4-%EC%82%AC%EB%82%98-%ED%83%9C%EA%B7%B8%ED%95%98%EA%B3%A0-%EB%B9%9B%EC%82%AD-%EB%9F%BD%EC%8A%A4%ED%83%80-%EC%9D%98%ED%98%B9-%EC%A7%84%EC%A7%9C%EC%9D%BC%EA%B9%8C#entry215comment",
        "content": "<h2><b>지드래곤 사나</b> 태그 논란, 무엇이 문제였나?</h2>\n<p><b>지드래곤 사나</b> 관련 이슈가 온라인에서 급속도로 확산 중입니다. 지난 22일, 지드래곤은 콜드플레이 내한 공연 현장을 SNS에 공유하며 트와이스 멤버 중 유독 <b>사나</b>만을 태그했는데요, 이 행위가 팬들 사이에서 열애 의혹으로 번졌습니다.</p>\n\n<h2>팬들의 반응, 단순 팬심일까? 럽스타 의혹일까?</h2>\n<p>지드래곤이 남긴 일본어 멘트 \"에?\"는 단순한 감탄사로 보일 수 있지만, <b>사나</b>가 일본인이라는 점과 맞물리며 오해를 불러일으켰습니다. 팬들 사이에서는 \"<b>지드래곤 사나</b> 럽스타그램 아니냐\", \"트와이스 다 나왔는데 왜 사나만?\"이라는 반응이 쏟아졌습니다.</p>\n\n<h3>SNS 게시물 ‘빛삭’으로 더 커진 의혹</h3>\n<p>논란이 거세지자 지드래곤은 해당 게시물을 빠르게 삭제했습니다. 이 삭제가 오히려 의혹을 더욱 키우는 결과를 낳았죠. 많은 팬들은 \"지우지 않았더라면 오히려 별일 없다고 생각했을 텐데\"라는 반응을 보였습니다.</p>\n\n<h2>콜드플레이와 트와이스의 특별한 무대</h2>\n<p>한편, <a href=\"https://twice.jype.com\" target=\"_self\">트와이스</a>는 이번 콜드플레이 내한 공연에 게스트로 참여하여 'We Pray' 무대를 선보였습니다. <b>지드래곤</b>이 공연을 관람한 후 <b>사나</b>만을 언급한 배경에 대해 궁금증이 커지는 이유기도 하죠.</p>\n\n<h2>SNS는 연예계의 ‘무기’인가 ‘리스크’인가</h2>\n<p>이번 <b>지드래곤 사나</b> 논란은 연예인들의 SNS 사용이 얼마나 큰 파장을 일으킬 수 있는지를 보여줍니다. 작은 태그 하나, 짧은 멘트 하나가 열애설로 비화할 수 있는 시대. 대중은 스타의 일거수일투족을 감시하고 해석하려 합니다.</p>\n\n<h3>스타의 SNS 관리, 전략이 필요한 시대</h3>\n<p>지금은 단순한 ‘팬 소통’의 도구를 넘어서 브랜드 전략으로 SNS가 사용됩니다. <b>지드래곤 사나</b>의 사례처럼, 무심코 올린 게시물 하나도 철저한 기획과 의도가 요구되는 시대임을 실감하게 합니다.</p>\n\n<h2>마무리</h2>\n<p>지드래곤과 사나를 둘러싼 열애 의혹은 결국 해프닝으로 마무리될 가능성이 높습니다. 하지만 이번 이슈를 통해 우리는 연예인의 SNS가 얼마나 큰 영향을 미치는지를 다시금 깨닫게 됩니다. 팬과 스타가 함께 만들어가는 건강한 디지털 문화를 기대해 봅니다.</p>",
        "contentSnippet": "지드래곤 사나 태그 논란, 무엇이 문제였나?\n지드래곤 사나 관련 이슈가 온라인에서 급속도로 확산 중입니다. 지난 22일, 지드래곤은 콜드플레이 내한 공연 현장을 SNS에 공유하며 트와이스 멤버 중 유독 사나만을 태그했는데요, 이 행위가 팬들 사이에서 열애 의혹으로 번졌습니다.\n팬들의 반응, 단순 팬심일까? 럽스타 의혹일까?\n지드래곤이 남긴 일본어 멘트 \"에?\"는 단순한 감탄사로 보일 수 있지만, 사나가 일본인이라는 점과 맞물리며 오해를 불러일으켰습니다. 팬들 사이에서는 \"지드래곤 사나 럽스타그램 아니냐\", \"트와이스 다 나왔는데 왜 사나만?\"이라는 반응이 쏟아졌습니다.\nSNS 게시물 ‘빛삭’으로 더 커진 의혹\n논란이 거세지자 지드래곤은 해당 게시물을 빠르게 삭제했습니다. 이 삭제가 오히려 의혹을 더욱 키우는 결과를 낳았죠. 많은 팬들은 \"지우지 않았더라면 오히려 별일 없다고 생각했을 텐데\"라는 반응을 보였습니다.\n콜드플레이와 트와이스의 특별한 무대\n한편, 트와이스는 이번 콜드플레이 내한 공연에 게스트로 참여하여 'We Pray' 무대를 선보였습니다. 지드래곤이 공연을 관람한 후 사나만을 언급한 배경에 대해 궁금증이 커지는 이유기도 하죠.\nSNS는 연예계의 ‘무기’인가 ‘리스크’인가\n이번 지드래곤 사나 논란은 연예인들의 SNS 사용이 얼마나 큰 파장을 일으킬 수 있는지를 보여줍니다. 작은 태그 하나, 짧은 멘트 하나가 열애설로 비화할 수 있는 시대. 대중은 스타의 일거수일투족을 감시하고 해석하려 합니다.\n스타의 SNS 관리, 전략이 필요한 시대\n지금은 단순한 ‘팬 소통’의 도구를 넘어서 브랜드 전략으로 SNS가 사용됩니다. 지드래곤 사나의 사례처럼, 무심코 올린 게시물 하나도 철저한 기획과 의도가 요구되는 시대임을 실감하게 합니다.\n마무리\n지드래곤과 사나를 둘러싼 열애 의혹은 결국 해프닝으로 마무리될 가능성이 높습니다. 하지만 이번 이슈를 통해 우리는 연예인의 SNS가 얼마나 큰 영향을 미치는지를 다시금 깨닫게 됩니다. 팬과 스타가 함께 만들어가는 건강한 디지털 문화를 기대해 봅니다.",
        "guid": "http://app-developer.tistory.com/215",
        "categories": [
          "럽스타그램",
          "사나",
          "사나 열애설",
          "지드래곤",
          "지드래곤 사나",
          "지드래곤 사나 럽스타",
          "지드래곤 열애설",
          "콜드플레이",
          "트와이스"
        ],
        "isoDate": "2025-04-23T23:32:27.000Z"
      },
      {
        "creator": "브리핑허브",
        "title": "박보검 미담, 이래서 모두가 사랑할 수밖에 없다",
        "link": "http://app-developer.tistory.com/entry/%EB%B0%95%EB%B3%B4%EA%B2%80-%EB%AF%B8%EB%8B%B4-%EC%9D%B4%EB%9E%98%EC%84%9C-%EB%AA%A8%EB%91%90%EA%B0%80-%EC%82%AC%EB%9E%91%ED%95%A0-%EC%88%98%EB%B0%96%EC%97%90-%EC%97%86%EB%8B%A4",
        "pubDate": "Wed, 23 Apr 2025 13:37:35 +0900",
        "author": "브리핑허브",
        "comments": "http://app-developer.tistory.com/entry/%EB%B0%95%EB%B3%B4%EA%B2%80-%EB%AF%B8%EB%8B%B4-%EC%9D%B4%EB%9E%98%EC%84%9C-%EB%AA%A8%EB%91%90%EA%B0%80-%EC%82%AC%EB%9E%91%ED%95%A0-%EC%88%98%EB%B0%96%EC%97%90-%EC%97%86%EB%8B%A4#entry214comment",
        "content": "\n<p><b>박보검 미담</b>은 그가 단순한 스타가 아닌, 인간적으로도 얼마나 따뜻한 사람인지를 보여주는 증거입니다. 연예계에 수많은 스타들이 있지만, 박보검처럼 모두에게 칭찬받는 사람은 드물죠. 다양한 <b>미담</b>이 전해지면서 팬이 아니더라도 그의 매력에 빠질 수밖에 없습니다.</p>\n\n<p>그의 미담 중 가장 유명한 것은 촬영 스태프들을 하나하나 챙기며 직접 감사 인사를 전했다는 일화입니다. 바쁜 스케줄 중에도 일일이 눈을 맞추며 인사하는 모습은 단순한 매너를 넘어선 <b>진심 어린 배려</b>였죠.</p>\n\n<p>또한 박보검은 팬서비스로도 유명합니다. 팬미팅 현장에서 직접 손편지를 써오거나, 오래 기다린 팬들에게 따뜻한 말 한마디를 건네는 모습은 SNS를 통해 수없이 공유되었고, <b>박보검 팬서비스</b>라는 키워드는 늘 화제가 되곤 합니다.</p>\n\n<p>박보검의 <a href=\"https://ko.wikipedia.org/wiki/박보검\" target=\"_self\">성격</a>을 드러내는 미담은 그의 봉사활동에서도 확인할 수 있습니다. 여러 차례 익명으로 기부하거나 자원봉사에 참여하는 모습은 소속사에서도 밝히지 않았던 사실들이 나중에 알려져 더욱 감동을 주었죠.</p>\n\n<p>심지어 방송국 스태프들 사이에서도 박보검은 \"감사합니다\", \"고생 많으셨어요\"라는 말을 가장 많이 하는 배우로 꼽힙니다. 이런 모습은 우연이 아닌, 그의 <b>진정성 있는 인성</b>을 보여주는 상징적인 부분입니다.</p>\n\n<p>팬들은 그의 일화를 접할 때마다 “이래서 박보검을 좋아할 수밖에 없다”며 감탄을 아끼지 않습니다. 최근 인터뷰에서도 그는 “좋은 사람이 되고 싶다”는 말을 여러 번 반복했으며, 이는 그가 보여주는 모든 행동에서 그대로 드러납니다.</p>\n\n<p>이렇듯 <b>박보검 미담</b>은 단순한 훈훈한 이야기를 넘어서, 우리 모두가 본받고 싶은 삶의 태도이기도 합니다. 연예인을 넘어 한 사람으로서의 모범이 되는 박보검의 진짜 이야기를 계속 기대하게 되는 이유입니다.</p>\n\n<p><b>마무리</b><br>박보검의 미담은 단지 유명인의 착한 일화로 끝나지 않습니다. 그는 꾸준히, 그리고 진심으로 주변 사람들을 배려하며 자신의 삶을 살아가고 있습니다. 우리가 그를 좋아하고 응원하는 이유는 바로 그런 진정성에서 비롯된 것이죠. 그의 행보를 통해 우리도 따뜻한 사람으로 성장할 수 있기를 바랍니다.</p>",
        "contentSnippet": "박보검 미담은 그가 단순한 스타가 아닌, 인간적으로도 얼마나 따뜻한 사람인지를 보여주는 증거입니다. 연예계에 수많은 스타들이 있지만, 박보검처럼 모두에게 칭찬받는 사람은 드물죠. 다양한 미담이 전해지면서 팬이 아니더라도 그의 매력에 빠질 수밖에 없습니다.\n그의 미담 중 가장 유명한 것은 촬영 스태프들을 하나하나 챙기며 직접 감사 인사를 전했다는 일화입니다. 바쁜 스케줄 중에도 일일이 눈을 맞추며 인사하는 모습은 단순한 매너를 넘어선 진심 어린 배려였죠.\n또한 박보검은 팬서비스로도 유명합니다. 팬미팅 현장에서 직접 손편지를 써오거나, 오래 기다린 팬들에게 따뜻한 말 한마디를 건네는 모습은 SNS를 통해 수없이 공유되었고, 박보검 팬서비스라는 키워드는 늘 화제가 되곤 합니다.\n박보검의 성격을 드러내는 미담은 그의 봉사활동에서도 확인할 수 있습니다. 여러 차례 익명으로 기부하거나 자원봉사에 참여하는 모습은 소속사에서도 밝히지 않았던 사실들이 나중에 알려져 더욱 감동을 주었죠.\n심지어 방송국 스태프들 사이에서도 박보검은 \"감사합니다\", \"고생 많으셨어요\"라는 말을 가장 많이 하는 배우로 꼽힙니다. 이런 모습은 우연이 아닌, 그의 진정성 있는 인성을 보여주는 상징적인 부분입니다.\n팬들은 그의 일화를 접할 때마다 “이래서 박보검을 좋아할 수밖에 없다”며 감탄을 아끼지 않습니다. 최근 인터뷰에서도 그는 “좋은 사람이 되고 싶다”는 말을 여러 번 반복했으며, 이는 그가 보여주는 모든 행동에서 그대로 드러납니다.\n이렇듯 박보검 미담은 단순한 훈훈한 이야기를 넘어서, 우리 모두가 본받고 싶은 삶의 태도이기도 합니다. 연예인을 넘어 한 사람으로서의 모범이 되는 박보검의 진짜 이야기를 계속 기대하게 되는 이유입니다.\n마무리\n박보검의 미담은 단지 유명인의 착한 일화로 끝나지 않습니다. 그는 꾸준히, 그리고 진심으로 주변 사람들을 배려하며 자신의 삶을 살아가고 있습니다. 우리가 그를 좋아하고 응원하는 이유는 바로 그런 진정성에서 비롯된 것이죠. 그의 행보를 통해 우리도 따뜻한 사람으로 성장할 수 있기를 바랍니다.",
        "guid": "http://app-developer.tistory.com/214",
        "categories": [
          "미담",
          "박보검",
          "박보검 이야기",
          "박보검 인성",
          "박보검 인터뷰",
          "박보검 착한 일화",
          "박보검 팬서비스",
          "연예인 미담",
          "훈훈한 연예인"
        ],
        "isoDate": "2025-04-23T04:37:35.000Z"
      }
    ]
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "Logstash 필터 ruby - 8th",
        "link": "https://kangmyounghun.blogspot.com/2025/04/logstash-ruby-8th.html",
        "pubDate": "2025-04-28T09:02:00.002Z",
        "author": "강명훈",
        "content": "<div>audit.log 연동.</div>\n<div><pre><code><div>filter {</div><div><span style=\"white-space: normal;\">&nbsp;mutate {</span></div><div><span style=\"white-space: normal;\">&nbsp; remove_field =&gt; [\"@timestamp\", \"@version\", \"path\", \"host\"]</span></div><div><span style=\"white-space: normal;\">&nbsp;}</span></div><div><br /></div><div><span style=\"white-space: normal;\">&nbsp;kv {}</span></div><div><br /></div><div><span style=\"white-space: normal;\">&nbsp;dissect {</span></div><div><span style=\"white-space: normal;\">&nbsp; mapping =&gt; {\"msg\" =&gt; \"%{}(%{timestamp}:%{}\"}</span></div><div><span style=\"white-space: normal;\">&nbsp;}</span></div><div>}</div></code></pre></div><span><a name='more'></a></span>\n<div><pre><code><div>{</div><div>&nbsp; &nbsp; &nbsp; &nbsp;\"family\" =&gt; \"10\",</div><div>&nbsp; &nbsp; &nbsp; \"message\" =&gt; \"type=NETFILTER_CFG msg=audit(1745768855.720:63): table=filter family=10 entries=0\\r\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"type\" =&gt; \"NETFILTER_CFG\",</div><div>&nbsp; &nbsp; &nbsp; \"entries\" =&gt; \"0\\r\",</div><div>&nbsp; &nbsp; \"timestamp\" =&gt; \"1745768855.720\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"table\" =&gt; \"filter\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"msg\" =&gt; \"audit(1745768855.720:63):\"</div><div>}</div><div>{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"gid\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"a2\" =&gt; \"41a2d8\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"a0\" =&gt; \"1e2da20\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"ppid\" =&gt; \"1335\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"key\" =&gt; \"(null)\\r\",</div><div>&nbsp; &nbsp; \"timestamp\" =&gt; \"1745768855.720\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"a1\" =&gt; \"1d75\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"fsgid\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"tty\" =&gt; \"none\",</div><div>&nbsp; &nbsp; &nbsp; \"message\" =&gt; \"type=SYSCALL msg=audit(1745768855.720:63): arch=c000003e syscall=175 success=yes exit=0 a0=1e2da20 a1=1d75 a2=41a2d8 a3=1e2a500 items=0 ppid=1335 pid=1336 auid=4294967295 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=(none) ses=4294967295 comm=\\\"modprobe\\\" exe=\\\"/usr/bin/kmod\\\" subj=system_u:system_r:insmod_t:s0 key=(null)\\r\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"items\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"suid\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"auid\" =&gt; \"4294967295\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"sgid\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"pid\" =&gt; \"1336\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"egid\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"exe\" =&gt; \"/usr/bin/kmod\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"uid\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"ses\" =&gt; \"4294967295\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"a3\" =&gt; \"1e2a500\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"euid\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"fsuid\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"comm\" =&gt; \"modprobe\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"exit\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; \"success\" =&gt; \"yes\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"msg\" =&gt; \"audit(1745768855.720:63):\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"arch\" =&gt; \"c000003e\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"subj\" =&gt; \"system_u:system_r:insmod_t:s0\",</div><div>&nbsp; &nbsp; &nbsp; \"syscall\" =&gt; \"175\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"type\" =&gt; \"SYSCALL\"</div><div>}</div></code></pre></div>\n<div><br /></div>\n<div>그런데 시간 정보가 unixtime 포맷이다. stackoverflow 형님들이 가르쳐준대로 date 포맷으로 변경.</div>\n<div><pre><code><div>filter {</div><div><span style=\"white-space: normal;\">&nbsp;mutate {</span></div><div><span style=\"white-space: normal;\">&nbsp; remove_field =&gt; [\"@timestamp\", \"@version\", \"path\", \"host\"]</span></div><div><span style=\"white-space: normal;\">&nbsp;}</span></div><div><br /></div><div><span style=\"white-space: normal;\">&nbsp;kv {}</span></div><div><br /></div><div><span style=\"white-space: normal;\">&nbsp;dissect {</span></div><div><span style=\"white-space: normal;\">&nbsp; mapping =&gt; {\"msg\" =&gt; \"%{}(%{timestamp}:%{}\"}</span></div><div><span style=\"white-space: normal;\">&nbsp;}</span></div><div><br /></div><div><span style=\"white-space: normal;\">&nbsp;ruby {</span></div><div><span style=\"white-space: normal;\">&nbsp; code =&gt; \"event.set('@timestamp', DateTime.strptime(event.get('timestamp'), '%s'))\"</span></div><div><span style=\"white-space: normal;\">&nbsp;}</span></div><div>}</div></code></pre></div>\n<pre><code><div>[2025-04-28T17:52:41,760][ERROR][logstash.filters.ruby&nbsp; &nbsp; ][main][7cefa12dcafdc101f42a5bda6812294cab6405d0864ef044fe35a2cc66392ce4] </div><div>Ruby exception occurred: wrong argument type DateTime (expected LogStash::Timestamp)</div></code></pre>\n<div><br /></div><div>안 된다. 제미나이한테 물어봄.</div><div><br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiGeOvSsV-noI1Rwoxwxq5x8-pdYXn5lNuIW8E2m-KCnmBmYB_BOVdDnhyphenhyphen125gPdMNB7Do1iR5nkMd0qAc0OFQZ7CQQm1mFwXEhiwmdsLCzTPrW4CjZzPN4GJq9BLZlTbfAiF-iIfOk2mWuJJ_DgzkUWvCxZ6s2FCDEKzQUmG4ouKRGbPnVuHVRln7UJ0nR/s1004/gemini.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1004\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiGeOvSsV-noI1Rwoxwxq5x8-pdYXn5lNuIW8E2m-KCnmBmYB_BOVdDnhyphenhyphen125gPdMNB7Do1iR5nkMd0qAc0OFQZ7CQQm1mFwXEhiwmdsLCzTPrW4CjZzPN4GJq9BLZlTbfAiF-iIfOk2mWuJJ_DgzkUWvCxZ6s2FCDEKzQUmG4ouKRGbPnVuHVRln7UJ0nR/s16000/gemini.png\" /></a></div><pre><code><div>[2025-04-28T17:57:02,837][ERROR][logstash.filters.ruby&nbsp; &nbsp; ][main][d35de4494869054b8277f75d5c334da579e561ff0060cc7554ec4beb7dd79661] </div><div>Ruby exception occurred: wrong argument type DateTime (expected Time)</div></code></pre>\n<div><br /></div><div>안 되잖아<span style=\"font-size: x-small;\">(..)</span></div><div><br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi0wICj6cEEXc16f5xI2nOtfZFuNztd72PGFkeJpridAmrQhvyeDtExoPRGi6JbX4TI_RqYmeAn9KxlBViEUJTntI7C0-n3tE8MQ8x5q07z5rhkk5a0zZbIqn4rOG9zT2icLbwoVxIgIHcNx5M_LpC3r2oiV12cisIK6qdjY8jWDKIXe4z_976hf5PJ1M8v/s1054/gemini2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1054\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi0wICj6cEEXc16f5xI2nOtfZFuNztd72PGFkeJpridAmrQhvyeDtExoPRGi6JbX4TI_RqYmeAn9KxlBViEUJTntI7C0-n3tE8MQ8x5q07z5rhkk5a0zZbIqn4rOG9zT2icLbwoVxIgIHcNx5M_LpC3r2oiV12cisIK6qdjY8jWDKIXe4z_976hf5PJ1M8v/s16000/gemini2.png\" /></a></div><br /><div>아무래도 로그스태시 구문이 따로 있는 것 같은데 ruby 구문을 계속 그대로 사용하는 게 이상하다. gpt는 다를까?</div><div><br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi_WWp5Pf0JmDF3aqeoyy5aHvibuQD6cOFzhBquTaAcy51b6hIZ1sG2zDA2i3SSGv2w5dBnRHrvE9oHnD-ftO8pFngHpHjIG013Giz9eMDnAbM4k8WQWB5yoTfMxpmGlIqYxE20KVSaFeqdgJhtVnGoflB-RRhjqTVKpoqDoK6vx18Xy-KlFiGsj58Qu8aO/s939/chatgpt.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"939\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi_WWp5Pf0JmDF3aqeoyy5aHvibuQD6cOFzhBquTaAcy51b6hIZ1sG2zDA2i3SSGv2w5dBnRHrvE9oHnD-ftO8pFngHpHjIG013Giz9eMDnAbM4k8WQWB5yoTfMxpmGlIqYxE20KVSaFeqdgJhtVnGoflB-RRhjqTVKpoqDoK6vx18Xy-KlFiGsj58Qu8aO/s16000/chatgpt.png\" /></a></div>\n<div><pre><code><div>filter {</div><div><span style=\"white-space: normal;\">&nbsp;mutate {</span></div><div><span style=\"white-space: normal;\">&nbsp; remove_field =&gt; [\"@timestamp\", \"@version\", \"path\", \"host\"]</span></div><div><span style=\"white-space: normal;\">&nbsp;}</span></div><div><br /></div><div><span style=\"white-space: normal;\">&nbsp;kv {}</span></div><div><br /></div><div><span style=\"white-space: normal;\">&nbsp;dissect {</span></div><div><span style=\"white-space: normal;\">&nbsp; mapping =&gt; {\"msg\" =&gt; \"%{}(%{timestamp}:%{}\"}</span></div><div><span style=\"white-space: normal;\">&nbsp;}</span></div><div><br /></div><div><span style=\"white-space: normal;\">&nbsp;ruby {</span></div><div><span style=\"white-space: normal;\">&nbsp; code =&gt; \"event.set('@timestamp', LogStash::Timestamp.new(Time.at(event.get('timestamp').to_i)))\"</span></div><div><span style=\"white-space: normal;\">&nbsp;}</span></div><div>}</div></code></pre></div>\n<div><pre><code><div>{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"family\" =&gt; \"10\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp;\"message\" =&gt; \"type=NETFILTER_CFG msg=audit(1745768855.720:63): table=filter family=10 entries=0\\r\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"type\" =&gt; \"NETFILTER_CFG\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp;\"entries\" =&gt; \"0\\r\",</div><div>&nbsp; &nbsp; &nbsp;\"timestamp\" =&gt; \"1745768855.720\",</div><div>&nbsp; &nbsp; \"@timestamp\" =&gt; 2025-04-27T15:47:35.000Z,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"table\" =&gt; \"filter\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"msg\" =&gt; \"audit(1745768855.720:63):\"</div><div>}</div><div>{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"gid\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"a2\" =&gt; \"41a2d8\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"a0\" =&gt; \"1e2da20\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"ppid\" =&gt; \"1335\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"key\" =&gt; \"(null)\\r\",</div><div>&nbsp; &nbsp; &nbsp;\"timestamp\" =&gt; \"1745768855.720\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"a1\" =&gt; \"1d75\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"fsgid\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"tty\" =&gt; \"none\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp;\"message\" =&gt; \"type=SYSCALL msg=audit(1745768855.720:63): arch=c000003e syscall=175 success=yes exit=0 a0=1e2da20 a1=1d75 a2=41a2d8 a3=1e2a500 items=0 ppid=1335 pid=1336 auid=4294967295 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=(none) ses=4294967295 comm=\\\"modprobe\\\" exe=\\\"/usr/bin/kmod\\\" subj=system_u:system_r:insmod_t:s0 key=(null)\\r\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"items\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"suid\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"auid\" =&gt; \"4294967295\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"sgid\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"pid\" =&gt; \"1336\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"egid\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"exe\" =&gt; \"/usr/bin/kmod\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"uid\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"ses\" =&gt; \"4294967295\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"a3\" =&gt; \"1e2a500\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"euid\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"fsuid\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"comm\" =&gt; \"modprobe\",</div><div>&nbsp; &nbsp; \"@timestamp\" =&gt; 2025-04-27T15:47:35.000Z,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"exit\" =&gt; \"0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp;\"success\" =&gt; \"yes\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\"msg\" =&gt; \"audit(1745768855.720:63):\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"arch\" =&gt; \"c000003e\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"subj\" =&gt; \"system_u:system_r:insmod_t:s0\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp;\"syscall\" =&gt; \"175\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"type\" =&gt; \"SYSCALL\"</div><div>}</div></code></pre></div>\n<div><br /></div><div>아이고 구글<span style=\"font-size: x-small;\">(..)</span></div><div><br /></div><div><b style=\"font-family: inherit;\">관련&nbsp;글</b><br /><ul><li><a href=\"https://kangmyounghun.blogspot.com/2025/03/logstash-ruby-7th.html\">Logstash 필터 ruby - 7th</a></li><li><span style=\"font-family: inherit;\"><a href=\"http://kangmyounghun.blogspot.kr/2017/10/logstash-ruby.html\" target=\"\">Logstash 필터 ruby</a></span></li><li><span style=\"font-family: inherit;\"><a href=\"http://kangmyounghun.blogspot.com/2017/06/elasticsearch-grok.html\" target=\"_blank\">Logstash 필터 grok</a></span></li><li><span style=\"font-family: inherit;\"><a href=\"http://kangmyounghun.blogspot.com/2017/07/logstash-mutate.html\" target=\"_blank\">Logstash 필터 mutate</a></span></li><li><span style=\"font-family: inherit;\"><a href=\"http://kangmyounghun.blogspot.kr/2018/02/logstash-geoip.html\" target=\"_blank\">Logstash 필터&nbsp;geoip</a></span></li><li><span style=\"font-family: inherit;\"><a href=\"http://kangmyounghun.blogspot.kr/2018/04/logstash-dissect.html\" target=\"_blank\">Logstash 필터 dissect</a></span></li><li><a href=\"http://kangmyounghun.blogspot.com/2018/09/logstash-kv.html\" target=\"_blank\">Logstash 필터&nbsp;kv</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2019/01/logstash-date.html\" target=\"_blank\">Logstash 필터 date</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2019/02/logstash-translate.html\" target=\"_blank\">Logstash 필터 translate</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2019/08/logstash-drop.html\" target=\"_blank\">Logstash 필터 drop</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2019/11/logstash-useragent.html\" target=\"_blank\">Logstash 필터 useragent</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2020/02/logstash-elapsed.html\" target=\"_blank\">Logstash 필터 elapsed</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2020/04/logstash-fingerprint.html\" target=\"_blank\">Logstash 필터 fingerprint</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2022/12/logstash-csv.html\" target=\"_blank\">Logstash 필터 csv</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2023/11/logstash-dns.html\">Logstash 필터 dns</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2025/01/logstash-split.html\">Logstash 필터 split</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2020/02/logstash-codec-multiline.html\" target=\"_blank\">Logstash codec 플러그인 multiline</a></li></ul></div>",
        "contentSnippet": "audit.log 연동.\n\nfilter {\n mutate {\n  remove_field => [\"@timestamp\", \"@version\", \"path\", \"host\"]\n }\n\n\n kv {}\n\n\n dissect {\n  mapping => {\"msg\" => \"%{}(%{timestamp}:%{}\"}\n }\n}\n\n\n\n\n{\n       \"family\" => \"10\",\n      \"message\" => \"type=NETFILTER_CFG msg=audit(1745768855.720:63): table=filter family=10 entries=0\\r\",\n         \"type\" => \"NETFILTER_CFG\",\n      \"entries\" => \"0\\r\",\n    \"timestamp\" => \"1745768855.720\",\n        \"table\" => \"filter\",\n          \"msg\" => \"audit(1745768855.720:63):\"\n}\n{\n          \"gid\" => \"0\",\n           \"a2\" => \"41a2d8\",\n           \"a0\" => \"1e2da20\",\n         \"ppid\" => \"1335\",\n          \"key\" => \"(null)\\r\",\n    \"timestamp\" => \"1745768855.720\",\n           \"a1\" => \"1d75\",\n        \"fsgid\" => \"0\",\n          \"tty\" => \"none\",\n      \"message\" => \"type=SYSCALL msg=audit(1745768855.720:63): arch=c000003e syscall=175 success=yes exit=0 a0=1e2da20 a1=1d75 a2=41a2d8 a3=1e2a500 items=0 ppid=1335 pid=1336 auid=4294967295 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=(none) ses=4294967295 comm=\\\"modprobe\\\" exe=\\\"/usr/bin/kmod\\\" subj=system_u:system_r:insmod_t:s0 key=(null)\\r\",\n        \"items\" => \"0\",\n         \"suid\" => \"0\",\n         \"auid\" => \"4294967295\",\n         \"sgid\" => \"0\",\n          \"pid\" => \"1336\",\n         \"egid\" => \"0\",\n          \"exe\" => \"/usr/bin/kmod\",\n          \"uid\" => \"0\",\n          \"ses\" => \"4294967295\",\n           \"a3\" => \"1e2a500\",\n         \"euid\" => \"0\",\n        \"fsuid\" => \"0\",\n         \"comm\" => \"modprobe\",\n         \"exit\" => \"0\",\n      \"success\" => \"yes\",\n          \"msg\" => \"audit(1745768855.720:63):\",\n         \"arch\" => \"c000003e\",\n         \"subj\" => \"system_u:system_r:insmod_t:s0\",\n      \"syscall\" => \"175\",\n         \"type\" => \"SYSCALL\"\n}\n\n\n\n\n그런데 시간 정보가 unixtime 포맷이다. stackoverflow 형님들이 가르쳐준대로 date 포맷으로 변경.\n\nfilter {\n mutate {\n  remove_field => [\"@timestamp\", \"@version\", \"path\", \"host\"]\n }\n\n\n kv {}\n\n\n dissect {\n  mapping => {\"msg\" => \"%{}(%{timestamp}:%{}\"}\n }\n\n\n ruby {\n  code => \"event.set('@timestamp', DateTime.strptime(event.get('timestamp'), '%s'))\"\n }\n}\n\n\n\n[2025-04-28T17:52:41,760][ERROR][logstash.filters.ruby    ][main][7cefa12dcafdc101f42a5bda6812294cab6405d0864ef044fe35a2cc66392ce4] \nRuby exception occurred: wrong argument type DateTime (expected LogStash::Timestamp)\n\n\n안 된다. 제미나이한테 물어봄.\n\n\n\n\n[2025-04-28T17:57:02,837][ERROR][logstash.filters.ruby    ][main][d35de4494869054b8277f75d5c334da579e561ff0060cc7554ec4beb7dd79661] \nRuby exception occurred: wrong argument type DateTime (expected Time)\n\n\n안 되잖아(..)\n\n\n\n\n아무래도 로그스태시 구문이 따로 있는 것 같은데 ruby 구문을 계속 그대로 사용하는 게 이상하다. gpt는 다를까?\n\n\n\n\nfilter {\n mutate {\n  remove_field => [\"@timestamp\", \"@version\", \"path\", \"host\"]\n }\n\n\n kv {}\n\n\n dissect {\n  mapping => {\"msg\" => \"%{}(%{timestamp}:%{}\"}\n }\n\n\n ruby {\n  code => \"event.set('@timestamp', LogStash::Timestamp.new(Time.at(event.get('timestamp').to_i)))\"\n }\n}\n\n\n\n\n{\n        \"family\" => \"10\",\n       \"message\" => \"type=NETFILTER_CFG msg=audit(1745768855.720:63): table=filter family=10 entries=0\\r\",\n          \"type\" => \"NETFILTER_CFG\",\n       \"entries\" => \"0\\r\",\n     \"timestamp\" => \"1745768855.720\",\n    \"@timestamp\" => 2025-04-27T15:47:35.000Z,\n         \"table\" => \"filter\",\n           \"msg\" => \"audit(1745768855.720:63):\"\n}\n{\n           \"gid\" => \"0\",\n            \"a2\" => \"41a2d8\",\n            \"a0\" => \"1e2da20\",\n          \"ppid\" => \"1335\",\n           \"key\" => \"(null)\\r\",\n     \"timestamp\" => \"1745768855.720\",\n            \"a1\" => \"1d75\",\n         \"fsgid\" => \"0\",\n           \"tty\" => \"none\",\n       \"message\" => \"type=SYSCALL msg=audit(1745768855.720:63): arch=c000003e syscall=175 success=yes exit=0 a0=1e2da20 a1=1d75 a2=41a2d8 a3=1e2a500 items=0 ppid=1335 pid=1336 auid=4294967295 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=(none) ses=4294967295 comm=\\\"modprobe\\\" exe=\\\"/usr/bin/kmod\\\" subj=system_u:system_r:insmod_t:s0 key=(null)\\r\",\n         \"items\" => \"0\",\n          \"suid\" => \"0\",\n          \"auid\" => \"4294967295\",\n          \"sgid\" => \"0\",\n           \"pid\" => \"1336\",\n          \"egid\" => \"0\",\n           \"exe\" => \"/usr/bin/kmod\",\n           \"uid\" => \"0\",\n           \"ses\" => \"4294967295\",\n            \"a3\" => \"1e2a500\",\n          \"euid\" => \"0\",\n         \"fsuid\" => \"0\",\n          \"comm\" => \"modprobe\",\n    \"@timestamp\" => 2025-04-27T15:47:35.000Z,\n          \"exit\" => \"0\",\n       \"success\" => \"yes\",\n           \"msg\" => \"audit(1745768855.720:63):\",\n          \"arch\" => \"c000003e\",\n          \"subj\" => \"system_u:system_r:insmod_t:s0\",\n       \"syscall\" => \"175\",\n          \"type\" => \"SYSCALL\"\n}\n\n\n\n\n아이고 구글(..)\n\n\n관련 글\n\nLogstash 필터 ruby - 7th\nLogstash 필터 ruby\nLogstash 필터 grok\nLogstash 필터 mutate\nLogstash 필터 geoip\nLogstash 필터 dissect\nLogstash 필터 kv\nLogstash 필터 date\nLogstash 필터 translate\nLogstash 필터 drop\nLogstash 필터 useragent\nLogstash 필터 elapsed\nLogstash 필터 fingerprint\nLogstash 필터 csv\nLogstash 필터 dns\nLogstash 필터 split\nLogstash codec 플러그인 multiline",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-3450014825867194011",
        "isoDate": "2025-04-28T09:02:00.002Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "GPT 4o로 완벽한 한글 유튜브 썸네일 만들기, 무료 GPTS 공개",
        "link": "https://muzbox.tistory.com/483576",
        "pubDate": "Mon, 28 Apr 2025 07:06:01 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483576#entry483576comment",
        "content": "<p data-ke-size=\"size16\">드디어 한글로 깔끔한 유튜브 썸네일을 만들 수 있게 됐어요! GPT 4o의 한글 렌더링 기능으로 더 이상 깨진 한글 썸네일과 작별할 시간. 썸네일 제작의 새로운 시대가 열렸습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"GPT 4o로 썸네일만들기.png\" data-origin-width=\"1530\" data-origin-height=\"1020\"><span data-url=\"https://blog.kakaocdn.net/dn/mYFCs/btsNAYUYu4U/Lz7xqEjmlhJy1kjYke8VE1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/mYFCs/btsNAYUYu4U/Lz7xqEjmlhJy1kjYke8VE1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/mYFCs/btsNAYUYu4U/Lz7xqEjmlhJy1kjYke8VE1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FmYFCs%2FbtsNAYUYu4U%2FLz7xqEjmlhJy1kjYke8VE1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1530\" height=\"1020\" data-filename=\"GPT 4o로 썸네일만들기.png\" data-origin-width=\"1530\" data-origin-height=\"1020\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">안녕하세요! 오늘은 정말 기대하고 있던 소식을 들고 왔어요. 여러분, GPT 4o 이미지 생성 기능으로 드디어 깔끔한 한글 렌더링이 가능한 유튜브 썸네일을 만들 수 있게 됐다는 소식!  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여러분도 유튜브 콘텐츠 만들면서 썸네일 때문에 고생 좀 하셨죠? 특히 기존의 DALL-E에서는 한글이 제대로 나오지 않아서 포토샵이나 별도 디자인 툴을 써야 했던 불편함이 있었잖아요. 저도 처음에 유튜브 시작했을 때 썸네일 만드는 데만 몇 시간씩 쏟아부었던 기억이 나네요.  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>GPT 4o로 바뀐 썸네일 생성, 뭐가 달라졌을까?  </b></span></h2>\n<p data-ke-size=\"size16\">GPT 4o 모델은 텍스트 생성 능력만 뛰어난 게 아니라, 이미지 생성 분야에서도 혁신적인 변화를 가져왔어요. 제가 직접 써보니까 가장 눈에 띄는 차이점은 바로 <b>완벽한 한글 가독성</b>이에요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이전에는 한글을 넣으면 대부분 깨지거나 이상한 글자로 나오곤 했는데, 이제는 마치 전문 디자이너가 만든 것처럼 깔끔하게 한글이 렌더링됩니다. 특히 썸네일에서 가장 중요한 텍스트 부분이 제대로 표현된다는 건 정말 혁명적인 변화죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">제가 어제 테스트해 봤는데, \"2025년 최신 아이폰 비교 리뷰\"라는 제목의 썸네일을 만들었을 때 정말 깔끔하게 텍스트가 들어갔어요. 폰트도 테크 리뷰에 어울리는 걸로 자동 선택해 주더라고요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>롱폼? 숏폼? 상황에 맞는 비율 선택  </b></span></h2>\n<p data-ke-size=\"size16\">요즘은 유튜브도 다양한 형태의 콘텐츠가 있잖아요. 일반 영상용 썸네일이 필요할 수도 있고, 쇼츠용 세로형 썸네일이 필요할 수도 있죠. 이 GPTS는 정말 친절하게도 처음부터 \"롱폼(가로비율, 16:9)이 필요하신가요, 아니면 숏폼(세로비율, 9:16)이 필요하신가요?\"라고 물어봐요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">제가 숏폼을 많이 올리는 편인데, 이전에는 세로형 썸네일 만들기가 정말 까다로웠거든요. 하지만 이제는 비율 선택만 해주면 알아서 최적화된 이미지를 만들어주니 얼마나 편한지 몰라요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>장르별 최적화 기능은 진짜 똑똑해요  </b></span></h2>\n<p data-ke-size=\"size16\">여러분, 이 썸네일 생성기가 얼마나 똑똑한지 알아요? 그냥 \"게임 리뷰 썸네일 만들어줘\"라고 하면 게임 콘텐츠에 맞는 요소들을 자동으로 넣어준다니까요! 예를 들어 게임 콘텐츠면 극적인 게임 장면이나 캐릭터 액션을 강조해 주고, 요리 콘텐츠라면 음식의 맛있어 보이는 표현과 김이나 증기 같은 동적 효과를 넣어준다고 해요.</p>\n<p data-ke-size=\"size16\">제가 지난주에 요리 채널 운영하는 친구를 위해 \"초간단 부대찌개 레시피\" 썸네일을 만들어줬는데, 정말 맛있어 보이는 부대찌개 이미지에 김이 모락모락 나는 효과까지 넣어줬어요. 친구가 그 썸네일 사용한 영상의 조회수가 평소보다 30% 이상 올랐다고 하더라고요!  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>시각적 임팩트를 높이는 디자인 요소들 ✨</b></span></h2>\n<p data-ke-size=\"size16\">썸네일의 성공 비결은 결국 '클릭을 유도하는 시각적 임팩트'에 있잖아요. 이 GPTS는 디자인 측면에서도 정말 세심하게 신경 썼더라고요:</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>고해상도 실사 이미지를 기본으로 사용</li>\n<li>강렬한 색상 대비와 높은 채도로 눈길 끌기</li>\n<li>텍스트는 이미지 전체 면적의 40%를 차지하도록 설계</li>\n<li>텍스트 뒷면에 30% 투명도의 배경 박스나 음영 처리로 가독성 확보</li>\n</ul>\n<p data-ke-size=\"size16\">특히 주목할 만한 점은 텍스트 배치인데요, 화면의 중앙이나 전략적 삼등분 위치를 활용해서 정말 프로페셔널한 느낌이 나요. 예전에 제가 직접 만들던 썸네일은 왜 그렇게 아마추어 같았는지 이제 알겠어요...  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>이런 상황에서 특히 유용해요  </b></span></h2>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>개인 유튜버</b>라면: 디자인 툴 따로 배울 시간 없이 빠르게 퀄리티 있는 썸네일 제작 가능</li>\n<li><b>기업 마케팅 담당자</b>라면: 일관된 브랜드 이미지를 유지하면서도 다양한 썸네일 빠르게 생성</li>\n<li><b>교육 콘텐츠 제작자</b>라면: 학습 주제와 목표를 명확히 전달하는 전문적인 썸네일 손쉽게 제작</li>\n<li><b>게임 스트리머</b>라면: 게임의 하이라이트 장면을 강조한 매력적인 썸네일로 시청자 유입 증가</li>\n</ol>\n<p data-ke-size=\"size16\">솔직히 말해서, 유튜브 썸네일은 영상 못지않게 중요하잖아요. 아무리 좋은 콘텐츠라도 썸네일이 매력적이지 않으면 클릭률이 떨어지니까요. 그래서 이 GPTS가 더 반가운 것 같아요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>사용 꿀팁! 더 좋은 결과를 얻으려면...  </b></span></h2>\n<p data-ke-size=\"size16\">제가 며칠간 이 GPTS를 열심히 사용해본 결과, 몇 가지 꿀팁을 발견했어요:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>키워드를 구체적으로 입력</b>하세요: \"게임 썸네일\"보다는 \"배틀그라운드 에란겔 맵 하이라이트 장면 썸네일\"처럼 구체적으로!</li>\n<li><b>장르를 명시</b>하면 더 특화된 결과를 얻을 수 있어요: \"IT\", \"요리\", \"게임\" 등</li>\n<li><b>수정 요청도 자유롭게</b>: \"한국인으로 수정해줘\", \"노트북을 추가해줘\" 등 추가 디테일 요청 가능</li>\n<li><b>비율 문제 발생 시</b>: GPT-4o가 가끔 1:1 비율을 고집할 때는 \"16:9 비율로 다시 그려줘\"라고 요청하세요</li>\n</ol>\n<p data-ke-size=\"size16\">가끔 첫 번째 결과가 마음에 들지 않아도 너무 실망하지 마세요. 몇 가지 디테일을 추가해서 다시 요청하면 훨씬 더 좋은 결과물이 나오더라고요. 저도 처음에는 \"이게 뭐야?\" 싶었다가 두세 번 수정 요청하니 \"와, 이거 진짜 프로급이네!\"라는 생각이 들었어요.  </p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"유튜브 썸네일.jpg\" data-origin-width=\"1156\" data-origin-height=\"767\"><span data-url=\"https://blog.kakaocdn.net/dn/ceK103/btsNA7Lg31n/4HEK7TqhVJIFOHKhLmhGPK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/ceK103/btsNA7Lg31n/4HEK7TqhVJIFOHKhLmhGPK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/ceK103/btsNA7Lg31n/4HEK7TqhVJIFOHKhLmhGPK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FceK103%2FbtsNA7Lg31n%2F4HEK7TqhVJIFOHKhLmhGPK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1156\" height=\"767\" data-filename=\"유튜브 썸네일.jpg\" data-origin-width=\"1156\" data-origin-height=\"767\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이제 더 이상 썸네일 때문에 고민하지 마세요! 여러분의 창의적인 콘텐츠에 어울리는 매력적인 썸네일을 GPT 4o로 쉽고 빠르게 만들어보세요. 혹시 이 GPTS를 사용해보신 분들 계신가요? 어떤 결과물이 나왔는지 댓글로 공유해주세요! 저도 더 좋은 썸네일 만드는 팁이 있다면 배우고 싶네요.  </p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>FAQ</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q: 이 GPTS는 무료인가요?</b></p>\n<p data-ke-size=\"size16\">A: ChatGPT Plus 구독자라면 별도 비용 없이 사용 가능합니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 한 번에 몇 개의 썸네일을 생성할 수 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 한 번에 하나씩 생성 가능하며, 수정 요청을 통해 개선할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 생성된 이미지의 저작권은 어떻게 되나요?</b></p>\n<p data-ke-size=\"size16\">A: OpenAI의 정책에 따라 생성된 이미지는 사용자가 저작권을 가집니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 텍스트가 깨지면 어떻게 해야 하나요?</b></p>\n<p data-ke-size=\"size16\">A: \"텍스트를 더 크게\" 또는 \"텍스트를 선명하게\" 등으로 수정 요청을 해보세요.</p>\n<p data-ke-size=\"size16\"><b>Q: 특정 브랜드 로고를 넣을 수 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 저작권 문제로 인해 정확한 브랜드 로고 생성은 제한될 수 있습니다.</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=aoZtRwJB1v4\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/RDLAu/hyYM06NRZc/5K9w3eBxaVAJ3QvWYdh4k1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/bHofH8/hyYIbWgIei/rUfOy7P3S4UKbnvyTSWvlK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"유튜브 썸네일 고민하지 말고 챗 GPT에게 맡기세요! | 무료 GPTS 공개\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/aoZtRwJB1v4\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 id=\"section-9\" style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b> &nbsp;GPTS&nbsp;무료배포</b></span></h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;약간의 지식과 시간만 투자하면 누구나 직접 제작하고 활용할 수 있는 유용한 GPTs가 이미 많이 존재합니다. 그러나 여전히 AI 기술에 대한 낯선 접근을 두려워하거나 IT 초보자, 또는 시간적 여유가 없거나 수익화에 대한 절실함 때문에 올바른 정보를 얻지 못하는 사람들이 많습니다.&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">이러한&nbsp;심리를&nbsp;악용해&nbsp;과도한&nbsp;가격으로&nbsp;유료&nbsp;강의를&nbsp;판매하며&nbsp;불필요한&nbsp;부담을&nbsp;주는&nbsp;사례들이&nbsp;늘어나고&nbsp;있습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;<span style=\"color: #ee2323;\"><b>이에 본 블로그에서는 모든 사람이 AI의 혜택을 공정하고 자유롭게 누릴 수 있도록 GPTs를 무료로 배포하며, 불합리한 강의 판매 행위를 단호히 배척하고자 합니다. (당연히 저도 무료 그 이상의 가치가 있는 챗봇이라면 유료화를 검토중입니다.)</b></span></p>\n<div class=\"revenue_unit_wrap\">\n  <div class=\"revenue_unit_item adsense responsive\">\n    <div class=\"revenue_unit_info\">반응형</div>\n    <script src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\" async=\"async\"></script>\n    <ins class=\"adsbygoogle\" style=\"display: block;\" data-ad-host=\"ca-host-pub-9691043933427338\" data-ad-client=\"ca-pub-8195497734535830\" data-ad-format=\"auto\"></ins>\n    <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>\n  </div>\n</div>\n<center>\n<figure id=\"og_1745751842275\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"ChatGPT - 챗GPT 유튜브 썸네일 생성기\" data-og-description=\"사용자의 키워드로 클릭을 유도하는 16:9 비율의 유튜브 썸네일을 생성합니다.\" data-og-host=\"chatgpt.com\" data-og-source-url=\"https://chatgpt.com/g/g-67a2bddeecb881918aec05ad2c82c7d0-caesgpt-yutyubeu-sseomneil-saengseonggi\" data-og-url=\"https://chatgpt.com/g/g-67a2bddeecb881918aec05ad2c82c7d0-caesgpt-yutyubeu-sseomneil-saengseonggi\" data-og-image=\"https://scrap.kakaocdn.net/dn/czkIWH/hyYFzQXyLX/kZOpNj5FUndFgsaPS756K1/img.png?width=512&amp;height=512&amp;face=0_0_512_512\"><a href=\"https://chatgpt.com/g/g-67a2bddeecb881918aec05ad2c82c7d0-caesgpt-yutyubeu-sseomneil-saengseonggi\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://chatgpt.com/g/g-67a2bddeecb881918aec05ad2c82c7d0-caesgpt-yutyubeu-sseomneil-saengseonggi\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/czkIWH/hyYFzQXyLX/kZOpNj5FUndFgsaPS756K1/img.png?width=512&amp;height=512&amp;face=0_0_512_512');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">ChatGPT - 챗GPT 유튜브 썸네일 생성기</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">사용자의 키워드로 클릭을 유도하는 16:9 비율의 유튜브 썸네일을 생성합니다.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">chatgpt.com</p>\n</div>\n</a></figure>\n</center>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"이 GPTS는 무료인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"ChatGPT Plus 구독자라면 별도 비용 없이 사용 가능합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"한 번에 몇 개의 썸네일을 생성할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"한 번에 하나씩 생성 가능하며, 수정 요청을 통해 개선할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"생성된 이미지의 저작권은 어떻게 되나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"OpenAI의 정책에 따라 생성된 이미지는 사용자가 저작권을 가집니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"텍스트가 깨지면 어떻게 해야 하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"\\\"텍스트를 더 크게\\\" 또는 \\\"텍스트를 선명하게\\\" 등으로 수정 요청을 해보세요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"특정 브랜드 로고를 넣을 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"저작권 문제로 인해 정확한 브랜드 로고 생성은 제한될 수 있습니다.\"\n      }\n    }\n  ]\n}\n</script>",
        "contentSnippet": "드디어 한글로 깔끔한 유튜브 썸네일을 만들 수 있게 됐어요! GPT 4o의 한글 렌더링 기능으로 더 이상 깨진 한글 썸네일과 작별할 시간. 썸네일 제작의 새로운 시대가 열렸습니다.\n\n\n \n안녕하세요! 오늘은 정말 기대하고 있던 소식을 들고 왔어요. 여러분, GPT 4o 이미지 생성 기능으로 드디어 깔끔한 한글 렌더링이 가능한 유튜브 썸네일을 만들 수 있게 됐다는 소식!  \n \n여러분도 유튜브 콘텐츠 만들면서 썸네일 때문에 고생 좀 하셨죠? 특히 기존의 DALL-E에서는 한글이 제대로 나오지 않아서 포토샵이나 별도 디자인 툴을 써야 했던 불편함이 있었잖아요. 저도 처음에 유튜브 시작했을 때 썸네일 만드는 데만 몇 시간씩 쏟아부었던 기억이 나네요.  \n \nGPT 4o로 바뀐 썸네일 생성, 뭐가 달라졌을까?  \nGPT 4o 모델은 텍스트 생성 능력만 뛰어난 게 아니라, 이미지 생성 분야에서도 혁신적인 변화를 가져왔어요. 제가 직접 써보니까 가장 눈에 띄는 차이점은 바로 완벽한 한글 가독성이에요.\n \n이전에는 한글을 넣으면 대부분 깨지거나 이상한 글자로 나오곤 했는데, 이제는 마치 전문 디자이너가 만든 것처럼 깔끔하게 한글이 렌더링됩니다. 특히 썸네일에서 가장 중요한 텍스트 부분이 제대로 표현된다는 건 정말 혁명적인 변화죠.\n \n제가 어제 테스트해 봤는데, \"2025년 최신 아이폰 비교 리뷰\"라는 제목의 썸네일을 만들었을 때 정말 깔끔하게 텍스트가 들어갔어요. 폰트도 테크 리뷰에 어울리는 걸로 자동 선택해 주더라고요!\n \n롱폼? 숏폼? 상황에 맞는 비율 선택  \n요즘은 유튜브도 다양한 형태의 콘텐츠가 있잖아요. 일반 영상용 썸네일이 필요할 수도 있고, 쇼츠용 세로형 썸네일이 필요할 수도 있죠. 이 GPTS는 정말 친절하게도 처음부터 \"롱폼(가로비율, 16:9)이 필요하신가요, 아니면 숏폼(세로비율, 9:16)이 필요하신가요?\"라고 물어봐요.\n \n제가 숏폼을 많이 올리는 편인데, 이전에는 세로형 썸네일 만들기가 정말 까다로웠거든요. 하지만 이제는 비율 선택만 해주면 알아서 최적화된 이미지를 만들어주니 얼마나 편한지 몰라요.\n \n장르별 최적화 기능은 진짜 똑똑해요  \n여러분, 이 썸네일 생성기가 얼마나 똑똑한지 알아요? 그냥 \"게임 리뷰 썸네일 만들어줘\"라고 하면 게임 콘텐츠에 맞는 요소들을 자동으로 넣어준다니까요! 예를 들어 게임 콘텐츠면 극적인 게임 장면이나 캐릭터 액션을 강조해 주고, 요리 콘텐츠라면 음식의 맛있어 보이는 표현과 김이나 증기 같은 동적 효과를 넣어준다고 해요.\n제가 지난주에 요리 채널 운영하는 친구를 위해 \"초간단 부대찌개 레시피\" 썸네일을 만들어줬는데, 정말 맛있어 보이는 부대찌개 이미지에 김이 모락모락 나는 효과까지 넣어줬어요. 친구가 그 썸네일 사용한 영상의 조회수가 평소보다 30% 이상 올랐다고 하더라고요!  \n \n시각적 임팩트를 높이는 디자인 요소들 ✨\n썸네일의 성공 비결은 결국 '클릭을 유도하는 시각적 임팩트'에 있잖아요. 이 GPTS는 디자인 측면에서도 정말 세심하게 신경 썼더라고요:\n고해상도 실사 이미지를 기본으로 사용\n강렬한 색상 대비와 높은 채도로 눈길 끌기\n텍스트는 이미지 전체 면적의 40%를 차지하도록 설계\n텍스트 뒷면에 30% 투명도의 배경 박스나 음영 처리로 가독성 확보\n특히 주목할 만한 점은 텍스트 배치인데요, 화면의 중앙이나 전략적 삼등분 위치를 활용해서 정말 프로페셔널한 느낌이 나요. 예전에 제가 직접 만들던 썸네일은 왜 그렇게 아마추어 같았는지 이제 알겠어요...  \n \n이런 상황에서 특히 유용해요  \n개인 유튜버라면: 디자인 툴 따로 배울 시간 없이 빠르게 퀄리티 있는 썸네일 제작 가능\n기업 마케팅 담당자라면: 일관된 브랜드 이미지를 유지하면서도 다양한 썸네일 빠르게 생성\n교육 콘텐츠 제작자라면: 학습 주제와 목표를 명확히 전달하는 전문적인 썸네일 손쉽게 제작\n게임 스트리머라면: 게임의 하이라이트 장면을 강조한 매력적인 썸네일로 시청자 유입 증가\n솔직히 말해서, 유튜브 썸네일은 영상 못지않게 중요하잖아요. 아무리 좋은 콘텐츠라도 썸네일이 매력적이지 않으면 클릭률이 떨어지니까요. 그래서 이 GPTS가 더 반가운 것 같아요.\n \n사용 꿀팁! 더 좋은 결과를 얻으려면...  \n제가 며칠간 이 GPTS를 열심히 사용해본 결과, 몇 가지 꿀팁을 발견했어요:\n키워드를 구체적으로 입력하세요: \"게임 썸네일\"보다는 \"배틀그라운드 에란겔 맵 하이라이트 장면 썸네일\"처럼 구체적으로!\n장르를 명시하면 더 특화된 결과를 얻을 수 있어요: \"IT\", \"요리\", \"게임\" 등\n수정 요청도 자유롭게: \"한국인으로 수정해줘\", \"노트북을 추가해줘\" 등 추가 디테일 요청 가능\n비율 문제 발생 시: GPT-4o가 가끔 1:1 비율을 고집할 때는 \"16:9 비율로 다시 그려줘\"라고 요청하세요\n가끔 첫 번째 결과가 마음에 들지 않아도 너무 실망하지 마세요. 몇 가지 디테일을 추가해서 다시 요청하면 훨씬 더 좋은 결과물이 나오더라고요. 저도 처음에는 \"이게 뭐야?\" 싶었다가 두세 번 수정 요청하니 \"와, 이거 진짜 프로급이네!\"라는 생각이 들었어요.  \n\n\n \n이제 더 이상 썸네일 때문에 고민하지 마세요! 여러분의 창의적인 콘텐츠에 어울리는 매력적인 썸네일을 GPT 4o로 쉽고 빠르게 만들어보세요. 혹시 이 GPTS를 사용해보신 분들 계신가요? 어떤 결과물이 나왔는지 댓글로 공유해주세요! 저도 더 좋은 썸네일 만드는 팁이 있다면 배우고 싶네요.  \nFAQ\nQ: 이 GPTS는 무료인가요?\nA: ChatGPT Plus 구독자라면 별도 비용 없이 사용 가능합니다.\nQ: 한 번에 몇 개의 썸네일을 생성할 수 있나요?\nA: 한 번에 하나씩 생성 가능하며, 수정 요청을 통해 개선할 수 있습니다.\nQ: 생성된 이미지의 저작권은 어떻게 되나요?\nA: OpenAI의 정책에 따라 생성된 이미지는 사용자가 저작권을 가집니다.\nQ: 텍스트가 깨지면 어떻게 해야 하나요?\nA: \"텍스트를 더 크게\" 또는 \"텍스트를 선명하게\" 등으로 수정 요청을 해보세요.\nQ: 특정 브랜드 로고를 넣을 수 있나요?\nA: 저작권 문제로 인해 정확한 브랜드 로고 생성은 제한될 수 있습니다.\n\n\n\n \n  GPTS 무료배포\n 약간의 지식과 시간만 투자하면 누구나 직접 제작하고 활용할 수 있는 유용한 GPTs가 이미 많이 존재합니다. 그러나 여전히 AI 기술에 대한 낯선 접근을 두려워하거나 IT 초보자, 또는 시간적 여유가 없거나 수익화에 대한 절실함 때문에 올바른 정보를 얻지 못하는 사람들이 많습니다. \n이러한 심리를 악용해 과도한 가격으로 유료 강의를 판매하며 불필요한 부담을 주는 사례들이 늘어나고 있습니다.\n \n 이에 본 블로그에서는 모든 사람이 AI의 혜택을 공정하고 자유롭게 누릴 수 있도록 GPTs를 무료로 배포하며, 불합리한 강의 판매 행위를 단호히 배척하고자 합니다. (당연히 저도 무료 그 이상의 가치가 있는 챗봇이라면 유료화를 검토중입니다.)\n반응형\n\n    \n    (adsbygoogle = window.adsbygoogle || []).push({});\n  \n\n \nChatGPT - 챗GPT 유튜브 썸네일 생성기\n사용자의 키워드로 클릭을 유도하는 16:9 비율의 유튜브 썸네일을 생성합니다.\nchatgpt.com\n\n\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"이 GPTS는 무료인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"ChatGPT Plus 구독자라면 별도 비용 없이 사용 가능합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"한 번에 몇 개의 썸네일을 생성할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"한 번에 하나씩 생성 가능하며, 수정 요청을 통해 개선할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"생성된 이미지의 저작권은 어떻게 되나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"OpenAI의 정책에 따라 생성된 이미지는 사용자가 저작권을 가집니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"텍스트가 깨지면 어떻게 해야 하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"\\\"텍스트를 더 크게\\\" 또는 \\\"텍스트를 선명하게\\\" 등으로 수정 요청을 해보세요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"특정 브랜드 로고를 넣을 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"저작권 문제로 인해 정확한 브랜드 로고 생성은 제한될 수 있습니다.\"\n      }\n    }\n  ]\n}",
        "guid": "https://muzbox.tistory.com/483576",
        "categories": [
          "AI, 미래기술/무료 GPTS 공개",
          "AI 이미지 생성",
          "gpt 4o 이미지 생성",
          "롱폼 썸네일",
          "숏폼 썸네일",
          "썸네일 디자인",
          "유튜브 마케팅",
          "유튜브 썸네일 생성",
          "콘텐츠 최적화",
          "클릭률 향상",
          "한글 렌더링"
        ],
        "isoDate": "2025-04-27T22:06:01.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "충격! AI가 몰래 심는 워터마크, 직접 만든 제거 도구 공개합니다",
        "link": "https://muzbox.tistory.com/483575",
        "pubDate": "Thu, 24 Apr 2025 10:33:18 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483575#entry483575comment",
        "content": "<p data-ke-size=\"size16\">&nbsp;충격적인 사실! OpenAI의 최신 GPT 모델이 텍스트에 숨겨진 워터마크를 남긴다고요? 육안으로 보이지 않는 특수 문자로 AI 생성 텍스트를 몰래 표시하는 방법과 이를 감지하고 제거하는 도구를 직접 만든 과정을 공유합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"ai watermark.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/cKFUpB/btsNw5e0AYP/mbP5uk7MqNHQDbkOaPKK6K/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cKFUpB/btsNw5e0AYP/mbP5uk7MqNHQDbkOaPKK6K/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cKFUpB/btsNw5e0AYP/mbP5uk7MqNHQDbkOaPKK6K/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcKFUpB%2FbtsNw5e0AYP%2FmbP5uk7MqNHQDbkOaPKK6K%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"ai watermark.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>충격! AI가 몰래 남기는 흔적, 직접 제거 도구 만들었어요  ️&zwj;♂️</b></span></h2>\n<p data-ke-size=\"size16\">진짜 깜짝 놀랐어요. 여러분도 ChatGPT나 최신 AI로 글 쓰고 계신가요? 저는 최근에 ChatGPT로 리포트 몇 개 작성하고 블로그 글도 좀 썼었는데... 근데 뭔가 이상한 느낌이 들더라구요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그러다 우연히 발견한 뉴스 기사! Rumi라는 회사에서 GPT-o3와 GPT-o4 mini 같은 최신 ChatGPT 모델이 사용자 모르게 텍스트에 워터마크를 숨겨놓는다는 걸 발견했대요. 헐, 내가 쓴 글도...? 바로 확인해봤죠. 그랬더니 정말로 있는 거 아니겠어요? 눈에는 안 보이지만 특수 문자로 몰래 표시를 해둔 거였어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">솔직히 말해서 좀 배신감이 들었어요. 내가 냈던 리포트에도 이런 게 있었다면? 교수님이 발견했다면? 생각만 해도 끔찍하더라구요. 그래서 직접 이런 워터마크를 감지하고 제거할 수 있는 도구를 만들어보기로 했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>도대체 이게 뭔가요? AI의 숨겨진 워터마크  </b></span></h2>\n<p data-ke-size=\"size16\">일단 이 워터마크가 뭔지부터 알아봤어요. 기사에 따르면 이 워터마크는 주로 긴 응답에서 발견되며, 일반 공백처럼 보이지만 다른 ASCII 코드를 가진 특수 유니코드 문자(주로 Narrow No-Break Space)를 사용한다고 해요.</p>\n<p data-ke-size=\"size16\">제가 알아본 바로는 이 워터마크는 주로:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>제로 너비 문자</b> - 눈에 보이지 않는 공백이나 제어 문자</li>\n<li><b>특수 공백</b> - 일반 공백처럼 보이지만 다른 ASCII 코드를 가진 유니코드 문자</li>\n<li><b>이모지 변형 선택자</b> - 이모지 뒤에 붙어 변형을 주는 특수 문자</li>\n</ol>\n<p data-ke-size=\"size16\">이런 것들로 구성되어 있더라구요.</p>\n<p data-ke-size=\"size16\">사실 OpenAI는 공식적으로 \"워터마크가 아니라 대규모 강화학습의 특이점\"이라고 변명(?)했지만... 글쎄요, 그게 그거 아닌가요?  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>제가 직접 만든 워터마크 감지/제거 도구 ⚒️</b></span></h2>\n<p data-ke-size=\"size16\">저는 프론트엔드 개발자니까, 바로 웹 기반 도구를 만들기로 했어요. VS Code에서 Github Copilot의 도움을 받아 금방 만들 수 있었죠. (AI의 도움을 받아 AI 워터마크를 제거하다니, 아이러니하네요 ㅋㅋ)</p>\n<p data-ke-size=\"size16\">제가 만든 도구는 다음과 같은 기능을 해요:</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>워터마크 감지</b>: 텍스트에 숨겨진 워터마크를 찾아내고 어떤 종류인지 알려줌</li>\n<li><b>워터마크 위치 표시</b>: 어디에 워터마크가 있는지 시각적으로 강조해줌</li>\n<li><b>워터마크 제거</b>: 발견된 워터마크를 모두 삭제하고 깨끗한 텍스트로 변환</li>\n<li><b>결과 복사</b>: 정리된 텍스트를 클립보드에 바로 복사할 수 있음</li>\n</ul>\n<p data-ke-size=\"size16\">가장 놀라웠던 건 제가 몇 달 전에 ChatGPT로 작성한 이메일과 보고서를 넣어봤더니 정말로 워터마크가 있더라구요! 주로 긴 문단 사이사이에 특수 공백 문자가 숨어 있었어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: center;\" data-ke-size=\"size16\"><span style=\"color: #ee2323;\"><b><a style=\"color: #ee2323;\" href=\"https://muzbox.tistory.com/483574\" target=\"_blank\" rel=\"noopener\">2025.04.23 - [AI, 미래기술/AI 챗봇 및 언어 모델] - 챗GPT 텍스트 워터마크 감지 및 제거 도구</a></b></span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>소스 코드로 살펴보는 워터마크 감지 방법  </b></span></h2>\n<p data-ke-size=\"size16\">제가 만든 도구의 핵심 부분을 좀 공유해드릴게요. 워터마크를 어떻게 감지하는지 코드로 보면 이해가 쉬울 것 같아서요.</p>\n<pre class=\"javascript\"><code>function detectWatermark(text) {\n  const watermarks = {\n    count: 0,\n    types: new Set(),\n    positions: []\n  };\n\n  // 1. 이모지+변형선택자 패턴 검사 (예:   + \\uFE0F)\n  const emojiWithVSPattern = /(?&lt;emoji&gt;[\\p{Emoji}])(?&lt;vs&gt;[\\uFE00-\\uFE0F])/gu;\n  \n  // 2. 제로 너비 문자 (보이지 않는 특수 문자)\n  const zeroWidthChars = /[\\u200B-\\u200F\\u2060-\\u2064\\uFEFF]/g;\n  \n  // 3. 특수 공백 (일반 공백처럼 보이지만 다른 코드를 가진 문자)\n  const specialSpaces = /[\\u00A0\\u2000-\\u200A\\u202F\\u205F\\u3000]/g;\n  \n  // 실제 감지 로직...\n}\n</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">워터마크를 제거하는 코드는 더 간단해요:</p>\n<pre class=\"javascript\"><code>function removeWatermark(text) {\n  let cleaned = text\n    // 이모지 변형 선택자 제거\n    .replace(/[\\uFE00-\\uFE0F]/g, '')\n    // 제로 너비 문자 제거\n    .replace(/[\\u200B-\\u200F\\u2060-\\u2064\\uFEFF]/g, '')\n    // 특수 공백을 일반 공백으로 변환\n    .replace(/[\\u00A0\\u2000-\\u200A\\u202F\\u205F\\u3000]/g, ' ');\n\n  return cleaned;\n}\n</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>이런 워터마크가 왜 문제가 될까요?  </b></span></h2>\n<p data-ke-size=\"size16\">처음엔 \"그냥 보이지 않는 특수 문자일 뿐인데 뭐가 문제지?\"라고 생각했어요. 근데 좀 더 생각해보니 여러 문제가 있더라구요:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>학생들에게 특히 불공정해요</b> - 기사에 따르면 일부 국가에서는 ChatGPT가 5월 말까지 학생들에게 무료로 제공되는데, 워터마크의 존재를 모르는 학생들은 나중에 문제가 될 수 있어요.</li>\n<li><b>개인정보 문제</b> - 내 글이 AI로 작성됐다는 정보가 내 동의 없이 포함된다는 건 좀 이상하지 않나요?</li>\n<li><b>부정확한 판단 우려</b> - 워터마크 감지 도구가 실제 AI 생성 텍스트가 아닌데도 오탐지하면 큰 문제가 될 수 있어요.</li>\n<li><b>쉽게 우회 가능한데 의미가 있나?</b> - 결국 이런 워터마크는 이렇게 도구만 있으면 쉽게 제거할 수 있어서 실효성이 의문이에요.</li>\n</ol>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>AI 워터마크 없는 글쓰기, 어떻게 해야 할까요? ✍️</b></span></h2>\n<p data-ke-size=\"size16\">Rumi에서도 제안했듯이, 저는 과정 중심의 접근법이 더 중요하다고 생각해요:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>여러 초안을 만들어보세요</b> - AI의 결과물을 그대로 사용하지 말고, 자신의 아이디어를 섞어 발전시키세요.</li>\n<li><b>워터마크 확인 후 제거하기</b> - 제출 전에 워터마크를 확인하고 제거하는 습관을 들이세요.</li>\n<li><b>맞춤형 AI 활용하기</b> - 자신의 목적과 스타일에 맞게 AI를 조정해서 사용하세요.</li>\n<li><b>실시간 협업 활용하기</b> - 동료들과 함께 작업하면 AI 텍스트와 인간 텍스트의 구분이 자연스럽게 이루어져요.</li>\n</ol>\n<p data-ke-size=\"size16\">저도 이 도구를 만들었지만, 부정직하게 사용하라는 의미는 아니에요. 오히려 AI가 우리 모르게 하는 일을 투명하게 알 수 있도록 하는 게 목적이었어요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"869\" data-origin-height=\"491\"><span data-url=\"https://blog.kakaocdn.net/dn/cAw0gC/btsNwT7eFQY/HXjPnhfhkd5KxzXuQgeV2k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cAw0gC/btsNwT7eFQY/HXjPnhfhkd5KxzXuQgeV2k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cAw0gC/btsNwT7eFQY/HXjPnhfhkd5KxzXuQgeV2k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcAw0gC%2FbtsNwT7eFQY%2FHXjPnhfhkd5KxzXuQgeV2k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"AI 워터마크 감지 및 제거 방법\" loading=\"lazy\" width=\"869\" height=\"491\" data-origin-width=\"869\" data-origin-height=\"491\"/></span></figure>\n</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>마치며: 투명한 AI 사용을 위하여  </b></span></h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">AI 기술이 발전할수록 이런 워터마킹 기술도 계속 진화할 거예요. 하지만 중요한 건 이런 기술이 투명하게 공개되고 사용자가 자신의 데이터와 텍스트에 대한 통제권을 가져야 한다는 점이라고 생각해요.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">여러분은 어떻게 생각하시나요? AI 워터마크에 대해 알고 계셨나요? 아니면 저처럼 놀라셨나요? 댓글로 의견 남겨주시면 함께 이야기해봐요!</p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>워터마크 관련 자주 묻는 질문 ❓</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q: 모든 AI 텍스트에 워터마크가 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 아니요, 기사에 따르면 주로 GPT-o3와 GPT-o4 mini 같은 최신 모델에서 발견되며, 이전 모델인 GPT-4o에서는 발견되지 않았습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 워터마크가 있는지 쉽게 확인하는 방법은?</b></p>\n<p data-ke-size=\"size16\">A: SoSciSurvey의 문자 뷰어나 VS Code와 같은 코드 에디터에서 확인할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 워터마크를 제거하면 불법인가요?</b></p>\n<p data-ke-size=\"size16\">A: 현재까지 이를 불법으로 규정한 법률은 없습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 워터마크 없이 AI 텍스트를 생성할 수 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 이전 버전의 GPT 모델이나 다른 AI 모델은 워터마크가 없는 경우가 많습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 워터마크 제거 도구는 어디서 구할 수 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 제가 만든 도구는 곧 깃허브에 오픈소스로 공개할 예정입니다.</p>\n<p data-ke-size=\"size16\">\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"모든 AI 텍스트에 워터마크가 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"아니요, 기사에 따르면 주로 GPT-o3와 GPT-o4 mini 같은 최신 모델에서 발견되며, 이전 모델인 GPT-4o에서는 발견되지 않았습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"워터마크가 있는지 쉽게 확인하는 방법은?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"SoSciSurvey의 문자 뷰어나 VS Code와 같은 코드 에디터에서 확인할 수 있습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"워터마크를 제거하면 불법인가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"현재까지 이를 불법으로 규정한 법률은 없습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"워터마크 없이 AI 텍스트를 생성할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"이전 버전의 GPT 모델이나 다른 AI 모델은 워터마크가 없는 경우가 많습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"워터마크 제거 도구는 어디서 구할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"제가 만든 도구는 곧 깃허브에 오픈소스로 공개할 예정입니다.\"\n    }\n  }]\n}\n</script>\n</p>",
        "contentSnippet": "충격적인 사실! OpenAI의 최신 GPT 모델이 텍스트에 숨겨진 워터마크를 남긴다고요? 육안으로 보이지 않는 특수 문자로 AI 생성 텍스트를 몰래 표시하는 방법과 이를 감지하고 제거하는 도구를 직접 만든 과정을 공유합니다.\n\n\n \n충격! AI가 몰래 남기는 흔적, 직접 제거 도구 만들었어요  ️‍♂️\n진짜 깜짝 놀랐어요. 여러분도 ChatGPT나 최신 AI로 글 쓰고 계신가요? 저는 최근에 ChatGPT로 리포트 몇 개 작성하고 블로그 글도 좀 썼었는데... 근데 뭔가 이상한 느낌이 들더라구요.\n \n그러다 우연히 발견한 뉴스 기사! Rumi라는 회사에서 GPT-o3와 GPT-o4 mini 같은 최신 ChatGPT 모델이 사용자 모르게 텍스트에 워터마크를 숨겨놓는다는 걸 발견했대요. 헐, 내가 쓴 글도...? 바로 확인해봤죠. 그랬더니 정말로 있는 거 아니겠어요? 눈에는 안 보이지만 특수 문자로 몰래 표시를 해둔 거였어요.\n \n솔직히 말해서 좀 배신감이 들었어요. 내가 냈던 리포트에도 이런 게 있었다면? 교수님이 발견했다면? 생각만 해도 끔찍하더라구요. 그래서 직접 이런 워터마크를 감지하고 제거할 수 있는 도구를 만들어보기로 했습니다.\n \n도대체 이게 뭔가요? AI의 숨겨진 워터마크  \n일단 이 워터마크가 뭔지부터 알아봤어요. 기사에 따르면 이 워터마크는 주로 긴 응답에서 발견되며, 일반 공백처럼 보이지만 다른 ASCII 코드를 가진 특수 유니코드 문자(주로 Narrow No-Break Space)를 사용한다고 해요.\n제가 알아본 바로는 이 워터마크는 주로:\n제로 너비 문자 - 눈에 보이지 않는 공백이나 제어 문자\n특수 공백 - 일반 공백처럼 보이지만 다른 ASCII 코드를 가진 유니코드 문자\n이모지 변형 선택자 - 이모지 뒤에 붙어 변형을 주는 특수 문자\n이런 것들로 구성되어 있더라구요.\n사실 OpenAI는 공식적으로 \"워터마크가 아니라 대규모 강화학습의 특이점\"이라고 변명(?)했지만... 글쎄요, 그게 그거 아닌가요?  \n \n제가 직접 만든 워터마크 감지/제거 도구 ⚒️\n저는 프론트엔드 개발자니까, 바로 웹 기반 도구를 만들기로 했어요. VS Code에서 Github Copilot의 도움을 받아 금방 만들 수 있었죠. (AI의 도움을 받아 AI 워터마크를 제거하다니, 아이러니하네요 ㅋㅋ)\n제가 만든 도구는 다음과 같은 기능을 해요:\n워터마크 감지: 텍스트에 숨겨진 워터마크를 찾아내고 어떤 종류인지 알려줌\n워터마크 위치 표시: 어디에 워터마크가 있는지 시각적으로 강조해줌\n워터마크 제거: 발견된 워터마크를 모두 삭제하고 깨끗한 텍스트로 변환\n결과 복사: 정리된 텍스트를 클립보드에 바로 복사할 수 있음\n가장 놀라웠던 건 제가 몇 달 전에 ChatGPT로 작성한 이메일과 보고서를 넣어봤더니 정말로 워터마크가 있더라구요! 주로 긴 문단 사이사이에 특수 공백 문자가 숨어 있었어요.\n \n2025.04.23 - [AI, 미래기술/AI 챗봇 및 언어 모델] - 챗GPT 텍스트 워터마크 감지 및 제거 도구\n \n \n소스 코드로 살펴보는 워터마크 감지 방법  \n제가 만든 도구의 핵심 부분을 좀 공유해드릴게요. 워터마크를 어떻게 감지하는지 코드로 보면 이해가 쉬울 것 같아서요.\nfunction detectWatermark(text) {\n  const watermarks = {\n    count: 0,\n    types: new Set(),\n    positions: []\n  };\n\n  // 1. 이모지+변형선택자 패턴 검사 (예:   + \\uFE0F)\n  const emojiWithVSPattern = /(?<emoji>[\\p{Emoji}])(?<vs>[\\uFE00-\\uFE0F])/gu;\n  \n  // 2. 제로 너비 문자 (보이지 않는 특수 문자)\n  const zeroWidthChars = /[\\u200B-\\u200F\\u2060-\\u2064\\uFEFF]/g;\n  \n  // 3. 특수 공백 (일반 공백처럼 보이지만 다른 코드를 가진 문자)\n  const specialSpaces = /[\\u00A0\\u2000-\\u200A\\u202F\\u205F\\u3000]/g;\n  \n  // 실제 감지 로직...\n}\n\n \n워터마크를 제거하는 코드는 더 간단해요:\nfunction removeWatermark(text) {\n  let cleaned = text\n    // 이모지 변형 선택자 제거\n    .replace(/[\\uFE00-\\uFE0F]/g, '')\n    // 제로 너비 문자 제거\n    .replace(/[\\u200B-\\u200F\\u2060-\\u2064\\uFEFF]/g, '')\n    // 특수 공백을 일반 공백으로 변환\n    .replace(/[\\u00A0\\u2000-\\u200A\\u202F\\u205F\\u3000]/g, ' ');\n\n  return cleaned;\n}\n\n \n이런 워터마크가 왜 문제가 될까요?  \n처음엔 \"그냥 보이지 않는 특수 문자일 뿐인데 뭐가 문제지?\"라고 생각했어요. 근데 좀 더 생각해보니 여러 문제가 있더라구요:\n학생들에게 특히 불공정해요 - 기사에 따르면 일부 국가에서는 ChatGPT가 5월 말까지 학생들에게 무료로 제공되는데, 워터마크의 존재를 모르는 학생들은 나중에 문제가 될 수 있어요.\n개인정보 문제 - 내 글이 AI로 작성됐다는 정보가 내 동의 없이 포함된다는 건 좀 이상하지 않나요?\n부정확한 판단 우려 - 워터마크 감지 도구가 실제 AI 생성 텍스트가 아닌데도 오탐지하면 큰 문제가 될 수 있어요.\n쉽게 우회 가능한데 의미가 있나? - 결국 이런 워터마크는 이렇게 도구만 있으면 쉽게 제거할 수 있어서 실효성이 의문이에요.\n \nAI 워터마크 없는 글쓰기, 어떻게 해야 할까요? ✍️\nRumi에서도 제안했듯이, 저는 과정 중심의 접근법이 더 중요하다고 생각해요:\n여러 초안을 만들어보세요 - AI의 결과물을 그대로 사용하지 말고, 자신의 아이디어를 섞어 발전시키세요.\n워터마크 확인 후 제거하기 - 제출 전에 워터마크를 확인하고 제거하는 습관을 들이세요.\n맞춤형 AI 활용하기 - 자신의 목적과 스타일에 맞게 AI를 조정해서 사용하세요.\n실시간 협업 활용하기 - 동료들과 함께 작업하면 AI 텍스트와 인간 텍스트의 구분이 자연스럽게 이루어져요.\n저도 이 도구를 만들었지만, 부정직하게 사용하라는 의미는 아니에요. 오히려 AI가 우리 모르게 하는 일을 투명하게 알 수 있도록 하는 게 목적이었어요.\n\n\n마치며: 투명한 AI 사용을 위하여  \nAI 기술이 발전할수록 이런 워터마킹 기술도 계속 진화할 거예요. 하지만 중요한 건 이런 기술이 투명하게 공개되고 사용자가 자신의 데이터와 텍스트에 대한 통제권을 가져야 한다는 점이라고 생각해요.\n여러분은 어떻게 생각하시나요? AI 워터마크에 대해 알고 계셨나요? 아니면 저처럼 놀라셨나요? 댓글로 의견 남겨주시면 함께 이야기해봐요!\n워터마크 관련 자주 묻는 질문 ❓\nQ: 모든 AI 텍스트에 워터마크가 있나요?\nA: 아니요, 기사에 따르면 주로 GPT-o3와 GPT-o4 mini 같은 최신 모델에서 발견되며, 이전 모델인 GPT-4o에서는 발견되지 않았습니다.\nQ: 워터마크가 있는지 쉽게 확인하는 방법은?\nA: SoSciSurvey의 문자 뷰어나 VS Code와 같은 코드 에디터에서 확인할 수 있습니다.\nQ: 워터마크를 제거하면 불법인가요?\nA: 현재까지 이를 불법으로 규정한 법률은 없습니다.\nQ: 워터마크 없이 AI 텍스트를 생성할 수 있나요?\nA: 이전 버전의 GPT 모델이나 다른 AI 모델은 워터마크가 없는 경우가 많습니다.\nQ: 워터마크 제거 도구는 어디서 구할 수 있나요?\nA: 제가 만든 도구는 곧 깃허브에 오픈소스로 공개할 예정입니다.\n\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"모든 AI 텍스트에 워터마크가 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"아니요, 기사에 따르면 주로 GPT-o3와 GPT-o4 mini 같은 최신 모델에서 발견되며, 이전 모델인 GPT-4o에서는 발견되지 않았습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"워터마크가 있는지 쉽게 확인하는 방법은?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"SoSciSurvey의 문자 뷰어나 VS Code와 같은 코드 에디터에서 확인할 수 있습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"워터마크를 제거하면 불법인가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"현재까지 이를 불법으로 규정한 법률은 없습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"워터마크 없이 AI 텍스트를 생성할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"이전 버전의 GPT 모델이나 다른 AI 모델은 워터마크가 없는 경우가 많습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"워터마크 제거 도구는 어디서 구할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"제가 만든 도구는 곧 깃허브에 오픈소스로 공개할 예정입니다.\"\n    }\n  }]\n}",
        "guid": "https://muzbox.tistory.com/483575",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 언어 모델",
          "ai 워터마크",
          "ai 텍스트 감지",
          "chatgpt 워터마크",
          "gpt-o3 워터마크",
          "워터마크 감지 도구",
          "유니코드 워터마크",
          "제로 너비 문자",
          "텍스트 워터마크 제거",
          "특수 공백 문자",
          "특수 문자 감지"
        ],
        "isoDate": "2025-04-24T01:33:18.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "챗GPT 텍스트 워터마크 감지 및 제거 도구",
        "link": "https://muzbox.tistory.com/483574",
        "pubDate": "Wed, 23 Apr 2025 23:54:18 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483574#entry483574comment",
        "content": "<div style=\"max-width: 800px; margin: 0 auto; padding: 20px; font-family: 'Arial', sans-serif;\">\n    <h1 style=\"text-align: center; color: #2563eb;\">챗GPT 텍스트 워터마크 제거 도구</h1>\n    <p style=\"text-align: center; color: #4b5563;\">LLM으로 생성한 텍스트에 포함된 워터마크를 감지하고 제거하는 도구입니다</p>\n  \n    <div style=\"border-radius: 8px; padding: 20px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); background-color: white;\">\n      <textarea id=\"content-input\" style=\"width: 100%; height: 200px; padding: 15px; border: 1px solid #e2e8f0; border-radius: 8px; margin-bottom: 15px;\" placeholder=\"워터마크가 있는 텍스트를 여기에 붙여넣으세요...\"></textarea>\n      \n      <div style=\"display: flex; gap: 10px; justify-content: flex-end;\">\n        <button id=\"detect-button\" style=\"padding: 8px 16px; background-color: #2563eb; color: white; border: none; border-radius: 6px;\">워터마크 감지</button>\n        <button id=\"remove-button\" style=\"padding: 8px 16px; background-color: #dc2626; color: white; border: none; border-radius: 6px;\">워터마크 제거</button>\n      </div>\n    </div>\n  \n    <div id=\"detection-result\" style=\"margin-top: 20px; border-radius: 8px; padding: 20px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); background-color: white;\"></div>\n    <div id=\"removal-result\" style=\"margin-top: 20px; border-radius: 8px; padding: 20px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); background-color: white;\"></div>\n  </div>\n  \n  <style>\n    textarea {\n      box-sizing: border-box;\n      max-width: 100%;\n      resize: vertical;\n    }\n    \n    button:active {\n      transform: translateY(1px);\n      opacity: 0.9;\n    }\n    \n    .watermark-highlight {\n      background-color: #fecaca;\n      color: #dc2626;\n      padding: 0 2px;\n      border-radius: 2px;\n    }\n  \n    .copy-button {\n      padding: 8px 16px;\n      background-color: #2563eb;\n      color: white;\n      border: none;\n      border-radius: 6px;\n      cursor: pointer;\n      display: inline-flex;\n      align-items: center;\n      gap: 6px;\n    }\n  \n    .copy-button:active {\n      transform: translateY(1px);\n      opacity: 0.9;\n    }\n  \n    .copy-button.copied {\n      background-color: #059669;\n    }\n  </style>\n  \n  <script>\n  function detectWatermark(text) {\n    const watermarks = {\n      count: 0,\n      types: new Set(),\n      positions: []\n    };\n  \n    // 감지된 위치 추적용 Set\n    const detectedPositions = new Set();\n  \n    // 1. 이모지+변형선택자 패턴 먼저 검사 (예:   + \\uFE0F)\n    const emojiWithVSPattern = /(?<emoji>[\\p{Emoji}])(?<vs>[\\uFE00-\\uFE0F])/gu;\n    let match;\n    \n    while ((match = emojiWithVSPattern.exec(text)) !== null) {\n      const emojiPos = match.index;\n      const vsPos = emojiPos + match.groups.emoji.length;\n      const vsChar = match.groups.vs;\n  \n      // 이미 감지된 위치가 아닌 경우만 처리\n      if (!detectedPositions.has(vsPos)) {\n        watermarks.count++;\n        watermarks.types.add('이모지 변형 선택자');\n        detectedPositions.add(vsPos);\n  \n        const unicode = `U+${vsChar.codePointAt(0).toString(16).toUpperCase().padStart(4, '0')}`;\n        watermarks.positions.push({\n          type: '이모지 변형 선택자',\n          position: vsPos,\n          char: vsChar,\n          unicode: unicode,\n          description: '이모지에 적용된 변형 선택자',\n          context: getContext(text, vsPos)\n        });\n      }\n    }\n  \n    // 2. 단독 제어 문자 패턴 검사\n    const patterns = [\n      {\n        type: '제로 너비 문자',\n        regex: /[\\u200B-\\u200F\\u2060-\\u2064\\uFEFF]/g,\n        description: '보이지 않는 공백이나 제어 문자'\n      },\n      {\n        type: '특수 공백',\n        regex: /[\\u00A0\\u2000-\\u200A\\u202F\\u205F\\u3000]/g,\n        description: '일반 공백과 다른 특수 공백 문자'\n      }\n    ];\n  \n    // 이미 감지되지 않은 위치의 제어 문자만 검사\n    patterns.forEach(pattern => {\n      while ((match = pattern.regex.exec(text)) !== null) {\n        const pos = match.index;\n        \n        if (!detectedPositions.has(pos)) {\n          watermarks.count++;\n          watermarks.types.add(pattern.type);\n          detectedPositions.add(pos);\n  \n          const charCode = match[0].codePointAt(0);\n          const unicode = `U+${charCode.toString(16).toUpperCase().padStart(4, '0')}`;\n          \n          watermarks.positions.push({\n            type: pattern.type,\n            position: pos,\n            char: match[0],\n            unicode: unicode,\n            description: pattern.description,\n            context: getContext(text, pos)\n          });\n        }\n      }\n    });\n  \n    // 감지된 워터마크 위치 정렬\n    watermarks.positions.sort((a, b) => a.position - b.position);\n  \n    showDetectionResult(watermarks);\n    return watermarks;\n  }\n  \n  function getContext(text, position, contextSize = 20) {\n    const start = Math.max(0, position - contextSize);\n    const end = Math.min(text.length, position + contextSize);\n    const prefix = text.substring(start, position);\n    const suffix = text.substring(position + 1, end);\n    \n    return {\n      full: text.substring(start, end),\n      position: position - start,\n      prefix: prefix,\n      suffix: suffix\n    };\n  }\n  \n  function showDetectionResult(watermarks) {\n    const resultDiv = document.getElementById('detection-result');\n    \n    if (watermarks.count > 0) {\n      // 원본 텍스트를 가져옴\n      const originalText = document.getElementById('content-input').value;\n      \n      // 워터마크 위치를 정렬\n      watermarks.positions.sort((a, b) => a.position - b.position);\n      \n      // 결과 HTML 생성\n      let html = `\n        <h3 style=\"color: #dc2626; margin-bottom: 15px;\">워터마크 감지 결과</h3>\n        <div style=\"margin-bottom: 15px;\">\n          <p>발견된 워터마크 수: ${watermarks.count}개</p>\n          <p>워터마크 종류: ${Array.from(watermarks.types).join(', ')}</p>\n        </div>\n        <div style=\"background-color: #f9fafb; padding: 15px; border-radius: 6px;\">\n          <h4 style=\"margin-bottom: 10px;\">전체 텍스트 (워터마크 강조 표시)</h4>\n          <div style=\"background-color: white; padding: 15px; border-radius: 4px; margin-bottom: 20px; white-space: pre-wrap; line-height: 1.5;\">`;\n  \n      // 전체 텍스트에 워터마크 표시\n      let lastPos = 0;\n      watermarks.positions.forEach(mark => {\n        html += escapeHtml(originalText.substring(lastPos, mark.position));\n        html += `<span class=\"watermark-highlight\" title=\"${mark.type}: ${mark.description}\">${mark.char}[${mark.unicode}]</span>`;\n        lastPos = mark.position + 1;\n      });\n      html += escapeHtml(originalText.substring(lastPos));\n  \n      html += `</div></div>`;\n      resultDiv.innerHTML = html;\n    } else {\n      resultDiv.innerHTML = '<p style=\"color: #059669;\">워터마크가 발견되지 않았습니다.</p>';\n    }\n  }\n  \n  function highlightContext(context) {\n    const pos = context.position;\n    const text = context.full;\n    return `${escapeHtml(text.substring(0, pos))}<mark style=\"background-color: #fecaca;\">${escapeHtml(text.charAt(pos))}</mark>${escapeHtml(text.substring(pos + 1))}`;\n  }\n  \n  // HTML 이스케이프 함수\n  function escapeHtml(text) {\n    return text\n      .replace(/&/g, \"&amp;\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\")\n      .replace(/\"/g, \"&quot;\")\n      .replace(/'/g, \"&#039;\");\n  }\n  \n  // 워터마크 제거 함수\n  function removeWatermark(text) {\n    let cleaned = text\n      .replace(/[\\uFE00-\\uFE0F]/g, '')\n      .replace(/[\\u200B-\\u200F\\u2060-\\u2064\\uFEFF]/g, '')\n      .replace(/[\\u00A0\\u2000-\\u200A\\u202F\\u205F\\u3000]/g, ' ');\n  \n    document.getElementById('removal-result').innerHTML = `\n      <h3 style=\"color: #2563eb; margin-bottom: 15px;\">워터마크 제거 결과</h3>\n      <div style=\"position: relative;\">\n        <textarea id=\"cleaned-text\" style=\"width: 100%; height: 200px; padding: 15px; border: 1px solid #e2e8f0; border-radius: 8px; margin-bottom: 15px;\">${cleaned}</textarea>\n        <div style=\"display: flex; justify-content: flex-end; margin-top: 10px;\">\n          <button class=\"copy-button\" onclick=\"copyCleanedText()\">\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n              <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\n              <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>\n            </svg>\n            결과 복사\n          </button>\n        </div>\n      </div>\n    `;\n  \n    return cleaned;\n  }\n  \n  // 복사 기능을 위한 함수 추가\n  function copyCleanedText() {\n    const textarea = document.getElementById('cleaned-text');\n    textarea.select();\n    \n    try {\n      document.execCommand('copy');\n      // 복사 성공 표시\n      const copyButton = document.querySelector('.copy-button');\n      copyButton.classList.add('copied');\n      copyButton.innerHTML = `\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <path d=\"M20 6L9 17l-5-5\"></path>\n        </svg>\n        복사 완료\n      `;\n      \n      // 3초 후 버튼 상태 복원\n      setTimeout(() => {\n        copyButton.classList.remove('copied');\n        copyButton.innerHTML = `\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n            <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\n            <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>\n          </svg>\n          결과 복사\n        `;\n      }, 3000);\n    } catch (err) {\n      console.error('복사 실패:', err);\n    }\n  \n    // 선택 해제\n    window.getSelection().removeAllRanges();\n  }\n  \n  // 이벤트 리스너 수정\n  document.getElementById('detect-button').onclick = function() {\n    const text = document.getElementById('content-input').value;\n    // 제거 결과 초기화\n    document.getElementById('removal-result').innerHTML = '';\n    detectWatermark(text);\n  };\n  \n  // 워터마크 제거 함수 수정\n  document.getElementById('remove-button').onclick = function() {\n    const text = document.getElementById('content-input').value;\n    const originalWatermarks = detectWatermark(text);\n    const cleaned = removeWatermark(text);\n    const remainingWatermarks = detectWatermark(cleaned);\n  \n    // 제거 작업 결과 표시\n    document.getElementById('detection-result').innerHTML = `\n      <h3 style=\"color: #2563eb; margin-bottom: 15px;\">워터마크 제거 작업 결과</h3>\n      <div style=\"background-color: #f9fafb; padding: 15px; border-radius: 6px;\">\n        <div style=\"margin-bottom: 15px;\">\n          <p>원본 워터마크 수: ${originalWatermarks.count}개</p>\n          <p>제거된 워터마크 수: ${originalWatermarks.count - remainingWatermarks.count}개</p>\n          ${remainingWatermarks.count > 0 \n            ? `<p style=\"color: #dc2626;\">남은 워터마크 수: ${remainingWatermarks.count}개</p>\n               <p>남은 워터마크 종류: ${Array.from(remainingWatermarks.types).join(', ')}</p>`\n            : '<p style=\"color: #059669;\">모든 워터마크가 성공적으로 제거되었습니다!</p>'\n          }\n        </div>\n        ${remainingWatermarks.count > 0 \n          ? `<div style=\"background-color: white; padding: 15px; border-radius: 4px; border-left: 4px solid #dc2626;\">\n              <p style=\"color: #dc2626; margin-bottom: 10px;\">제거되지 않은 워터마크 위치:</p>\n              <div style=\"white-space: pre-wrap; line-height: 1.5;\">\n                ${showRemainingWatermarks(cleaned, remainingWatermarks)}\n              </div>\n            </div>`\n          : ''\n        }\n      </div>\n    `;\n  };\n  \n  // 남은 워터마크 표시 함수 추가\n  function showRemainingWatermarks(text, watermarks) {\n    let html = '';\n    let lastPos = 0;\n    \n    watermarks.positions.forEach(mark => {\n      html += escapeHtml(text.substring(lastPos, mark.position));\n      html += `<span class=\"watermark-highlight\" title=\"${mark.type}: ${mark.description}\">${mark.char}[${mark.unicode}]</span>`;\n      lastPos = mark.position + 1;\n    });\n    \n    html += escapeHtml(text.substring(lastPos));\n    return html;\n  }\n  \n  // content-input에 입력 이벤트 리스너 추가\n  document.getElementById('content-input').addEventListener('input', function() {\n    // 제거 결과 초기화\n    document.getElementById('removal-result').innerHTML = '';\n    // 감지 결과도 초기화 (선택사항)\n    document.getElementById('detection-result').innerHTML = '';\n  });\n  </script>\n<p data-ke-size=\"size16\">AI가 생성한 텍스트 속 보이지 않는 워터마크를 찾아내는 도구입니다. ChatGPT 등 LLM이 남기는 특수 문자를 쉽게 감지하고 제거할 수 있는 웹 프로그램의 작동 원리와 사용법을 알아보세요.</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>AI 텍스트 워터마크 감지 및 제거 도구 소개  ️&zwj;♂️</b></span></h2>\n<p data-ke-size=\"size16\">최근 ChatGPT와 같은 AI 모델들이 생성하는 텍스트에 눈에 보이지 않는 워터마크가 삽입된다는 사실이 알려져 논란이 되고 있어요. 특히 GPT-o3와 GPT-o4 mini 같은 최신 모델에서 이런 현상이 발견되고 있죠. 이러한 보이지 않는 워터마크를 감지하고 제거할 수 있는 웹 프로그램입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>워터마크란 무엇인가요?  </b></span></h2>\n<p data-ke-size=\"size16\">AI 텍스트 워터마크는 육안으로는 보이지 않지만, 텍스트에 숨겨진 특수 유니코드 문자들입니다. 주로 다음과 같은 종류가 있어요:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>제로 너비 문자</b>: 화면에 표시되지 않는 공백이나 제어 문자</li>\n<li><b>특수 공백</b>: 일반 공백처럼 보이지만 다른 코드를 가진 특수 유니코드 문자</li>\n<li><b>이모지 변형 선택자</b>: 이모지 뒤에 붙어 변형을 주는 특수 문자</li>\n</ol>\n<p data-ke-size=\"size16\">이런 특수 문자들은 일반적인 텍스트 에디터에서는 확인하기 어렵지만, 특정 도구를 사용하면 감지할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>워터마크 감지/제거 웹 프로그램 기능 소개  </b></span></h2>\n<p data-ke-size=\"size16\">이 웹 프로그램은 다음과 같은 주요 기능을 제공합니다:</p>\n<h3 data-ke-size=\"size23\">1. 워터마크 감지 기능</h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>AI가 생성한 텍스트에 숨겨진 워터마크를 찾아냄</li>\n<li>발견된 워터마크의 수와 종류를 표시</li>\n<li>워터마크가 위치한 곳을 시각적으로 강조 표시</li>\n</ul>\n<h3 data-ke-size=\"size23\">2. 워터마크 제거 기능</h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>감지된 워터마크를 모두 제거하거나 일반 문자로 변환</li>\n<li>원본과 정리된 텍스트 비교 제공</li>\n<li>정리된 텍스트를 쉽게 복사할 수 있는 기능</li>\n</ul>\n<h3 data-ke-size=\"size23\">3. 상세 분석 기능</h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>워터마크의 유니코드 값 표시</li>\n<li>텍스트 내 워터마크의 정확한 위치 정보 제공</li>\n<li>워터마크 제거 전후 비교 분석</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>프로그램 사용 방법  </b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>기본 사용법</b></span></h3>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>텍스트 입력</b>: 워터마크가 있는지 확인하고 싶은 텍스트를 입력 창에 붙여넣습니다.</li>\n<li><b>워터마크 감지</b>: '워터마크 감지' 버튼을 클릭하여 텍스트 내 워터마크를 찾습니다.</li>\n<li><b>워터마크 제거</b>: '워터마크 제거' 버튼을 클릭하여 감지된 워터마크를 제거합니다.</li>\n<li><b>결과 확인</b>: 워터마크 감지 결과와 제거 결과를 각각 확인할 수 있습니다.</li>\n<li><b>정리된 텍스트 복사</b>: '결과 복사' 버튼을 클릭하여 워터마크가 제거된 텍스트를 클립보드에 복사합니다.</li>\n</ol>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>결과 해석하기</b></span></h3>\n<p data-ke-size=\"size16\">워터마크 감지 후에는 다음과 같은 정보를 확인할 수 있습니다:</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>발견된 워터마크 수</b>: 텍스트에서 발견된 총 워터마크 수</li>\n<li><b>워터마크 종류</b>: 발견된 워터마크의 유형(제로 너비 문자, 특수 공백, 이모지 변형 선택자 등)</li>\n<li><b>워터마크 위치</b>: 원본 텍스트에서 워터마크가 발견된 위치가 강조 표시됨</li>\n<li><b>유니코드 정보</b>: 각 워터마크의 유니코드 값(예: U+200B, U+2060 등)</li>\n</ul>\n<p data-ke-size=\"size16\">워터마크 제거 후에는:</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>워터마크 제거 수</b>: 성공적으로 제거된 워터마크의 수</li>\n<li><b>정리된 텍스트</b>: 워터마크가 제거된 깨끗한 텍스트</li>\n<li><b>남은 워터마크</b>: 제거하지 못한 워터마크가 있다면 그 정보</li>\n<li><b>AI 발전</b>: AI 모델의 워터마킹 기술도 계속 발전하고 있으므로, 최신 모델에서는 새로운 유형의 워터마크가 있을 수 있습니다.</li>\n</ul>",
        "contentSnippet": "챗GPT 텍스트 워터마크 제거 도구\nLLM으로 생성한 텍스트에 포함된 워터마크를 감지하고 제거하는 도구입니다\n\n      \n      \n워터마크 감지\n        워터마크 제거\n      \n\n    \n\n  \n[\\p{Emoji}])(?[\\uFE00-\\uFE0F])/gu;\n    let match;\n    \n    while ((match = emojiWithVSPattern.exec(text)) !== null) {\n      const emojiPos = match.index;\n      const vsPos = emojiPos + match.groups.emoji.length;\n      const vsChar = match.groups.vs;\n  \n      // 이미 감지된 위치가 아닌 경우만 처리\n      if (!detectedPositions.has(vsPos)) {\n        watermarks.count++;\n        watermarks.types.add('이모지 변형 선택자');\n        detectedPositions.add(vsPos);\n  \n        const unicode = `U+${vsChar.codePointAt(0).toString(16).toUpperCase().padStart(4, '0')}`;\n        watermarks.positions.push({\n          type: '이모지 변형 선택자',\n          position: vsPos,\n          char: vsChar,\n          unicode: unicode,\n          description: '이모지에 적용된 변형 선택자',\n          context: getContext(text, vsPos)\n        });\n      }\n    }\n  \n    // 2. 단독 제어 문자 패턴 검사\n    const patterns = [\n      {\n        type: '제로 너비 문자',\n        regex: /[\\u200B-\\u200F\\u2060-\\u2064\\uFEFF]/g,\n        description: '보이지 않는 공백이나 제어 문자'\n      },\n      {\n        type: '특수 공백',\n        regex: /[\\u00A0\\u2000-\\u200A\\u202F\\u205F\\u3000]/g,\n        description: '일반 공백과 다른 특수 공백 문자'\n      }\n    ];\n  \n    // 이미 감지되지 않은 위치의 제어 문자만 검사\n    patterns.forEach(pattern => {\n      while ((match = pattern.regex.exec(text)) !== null) {\n        const pos = match.index;\n        \n        if (!detectedPositions.has(pos)) {\n          watermarks.count++;\n          watermarks.types.add(pattern.type);\n          detectedPositions.add(pos);\n  \n          const charCode = match[0].codePointAt(0);\n          const unicode = `U+${charCode.toString(16).toUpperCase().padStart(4, '0')}`;\n          \n          watermarks.positions.push({\n            type: pattern.type,\n            position: pos,\n            char: match[0],\n            unicode: unicode,\n            description: pattern.description,\n            context: getContext(text, pos)\n          });\n        }\n      }\n    });\n  \n    // 감지된 워터마크 위치 정렬\n    watermarks.positions.sort((a, b) => a.position - b.position);\n  \n    showDetectionResult(watermarks);\n    return watermarks;\n  }\n  \n  function getContext(text, position, contextSize = 20) {\n    const start = Math.max(0, position - contextSize);\n    const end = Math.min(text.length, position + contextSize);\n    const prefix = text.substring(start, position);\n    const suffix = text.substring(position + 1, end);\n    \n    return {\n      full: text.substring(start, end),\n      position: position - start,\n      prefix: prefix,\n      suffix: suffix\n    };\n  }\n  \n  function showDetectionResult(watermarks) {\n    const resultDiv = document.getElementById('detection-result');\n    \n    if (watermarks.count > 0) {\n      // 원본 텍스트를 가져옴\n      const originalText = document.getElementById('content-input').value;\n      \n      // 워터마크 위치를 정렬\n      watermarks.positions.sort((a, b) => a.position - b.position);\n      \n      // 결과 HTML 생성\n      let html = `\n        \n워터마크 감지 결과\n발견된 워터마크 수: ${watermarks.count}개\n워터마크 종류: ${Array.from(watermarks.types).join(', ')}\n전체 텍스트 (워터마크 강조 표시)\n`;\n  \n      // 전체 텍스트에 워터마크 표시\n      let lastPos = 0;\n      watermarks.positions.forEach(mark => {\n        html += escapeHtml(originalText.substring(lastPos, mark.position));\n        html += `${mark.char}[${mark.unicode}]`;\n        lastPos = mark.position + 1;\n      });\n      html += escapeHtml(originalText.substring(lastPos));\n  \n      html += `\n`;\n      resultDiv.innerHTML = html;\n    } else {\n      resultDiv.innerHTML = '\n워터마크가 발견되지 않았습니다.\n';\n    }\n  }\n  \n  function highlightContext(context) {\n    const pos = context.position;\n    const text = context.full;\n    return `${escapeHtml(text.substring(0, pos))}${escapeHtml(text.charAt(pos))}${escapeHtml(text.substring(pos + 1))}`;\n  }\n  \n  // HTML 이스케이프 함수\n  function escapeHtml(text) {\n    return text\n      .replace(/&/g, \"&\")\n      .replace(//g, \">\")\n      .replace(/\"/g, \"\"\")\n      .replace(/'/g, \"'\");\n  }\n  \n  // 워터마크 제거 함수\n  function removeWatermark(text) {\n    let cleaned = text\n      .replace(/[\\uFE00-\\uFE0F]/g, '')\n      .replace(/[\\u200B-\\u200F\\u2060-\\u2064\\uFEFF]/g, '')\n      .replace(/[\\u00A0\\u2000-\\u200A\\u202F\\u205F\\u3000]/g, ' ');\n  \n    document.getElementById('removal-result').innerHTML = `\n      \n워터마크 제거 결과\n${cleaned}\n        \n\n              \n\n            \n            결과 복사\n          \n        \n\n        \n        복사 완료\n      `;\n      \n      // 3초 후 버튼 상태 복원\n      setTimeout(() => {\n        copyButton.classList.remove('copied');\n        copyButton.innerHTML = `\n          \n            \n            \n\n          \n          결과 복사\n        `;\n      }, 3000);\n    } catch (err) {\n      console.error('복사 실패:', err);\n    }\n  \n    // 선택 해제\n    window.getSelection().removeAllRanges();\n  }\n  \n  // 이벤트 리스너 수정\n  document.getElementById('detect-button').onclick = function() {\n    const text = document.getElementById('content-input').value;\n    // 제거 결과 초기화\n    document.getElementById('removal-result').innerHTML = '';\n    detectWatermark(text);\n  };\n  \n  // 워터마크 제거 함수 수정\n  document.getElementById('remove-button').onclick = function() {\n    const text = document.getElementById('content-input').value;\n    const originalWatermarks = detectWatermark(text);\n    const cleaned = removeWatermark(text);\n    const remainingWatermarks = detectWatermark(cleaned);\n  \n    // 제거 작업 결과 표시\n    document.getElementById('detection-result').innerHTML = `\n      \n워터마크 제거 작업 결과\n원본 워터마크 수: ${originalWatermarks.count}개\n제거된 워터마크 수: ${originalWatermarks.count - remainingWatermarks.count}개\n 0 \n            ? `\n남은 워터마크 수: ${remainingWatermarks.count}개\n남은 워터마크 종류: ${Array.from(remainingWatermarks.types).join(', ')}\n`\n            : '\n모든 워터마크가 성공적으로 제거되었습니다!\n'\n          }\n        \n 0 \n          ? `\n제거되지 않은 워터마크 위치:\n`\n          : ''\n        }\n      \n {\n      html += escapeHtml(text.substring(lastPos, mark.position));\n      html += `${mark.char}[${mark.unicode}]`;\n      lastPos = mark.position + 1;\n    });\n    \n    html += escapeHtml(text.substring(lastPos));\n    return html;\n  }\n  \n  // content-input에 입력 이벤트 리스너 추가\n  document.getElementById('content-input').addEventListener('input', function() {\n    // 제거 결과 초기화\n    document.getElementById('removal-result').innerHTML = '';\n    // 감지 결과도 초기화 (선택사항)\n    document.getElementById('detection-result').innerHTML = '';\n  });\n  \nAI가 생성한 텍스트 속 보이지 않는 워터마크를 찾아내는 도구입니다. ChatGPT 등 LLM이 남기는 특수 문자를 쉽게 감지하고 제거할 수 있는 웹 프로그램의 작동 원리와 사용법을 알아보세요.\nAI 텍스트 워터마크 감지 및 제거 도구 소개  ️‍♂️\n최근 ChatGPT와 같은 AI 모델들이 생성하는 텍스트에 눈에 보이지 않는 워터마크가 삽입된다는 사실이 알려져 논란이 되고 있어요. 특히 GPT-o3와 GPT-o4 mini 같은 최신 모델에서 이런 현상이 발견되고 있죠. 이러한 보이지 않는 워터마크를 감지하고 제거할 수 있는 웹 프로그램입니다.\n \n워터마크란 무엇인가요?  \nAI 텍스트 워터마크는 육안으로는 보이지 않지만, 텍스트에 숨겨진 특수 유니코드 문자들입니다. 주로 다음과 같은 종류가 있어요:\n제로 너비 문자: 화면에 표시되지 않는 공백이나 제어 문자\n특수 공백: 일반 공백처럼 보이지만 다른 코드를 가진 특수 유니코드 문자\n이모지 변형 선택자: 이모지 뒤에 붙어 변형을 주는 특수 문자\n이런 특수 문자들은 일반적인 텍스트 에디터에서는 확인하기 어렵지만, 특정 도구를 사용하면 감지할 수 있습니다.\n \n워터마크 감지/제거 웹 프로그램 기능 소개  \n이 웹 프로그램은 다음과 같은 주요 기능을 제공합니다:\n1. 워터마크 감지 기능\nAI가 생성한 텍스트에 숨겨진 워터마크를 찾아냄\n발견된 워터마크의 수와 종류를 표시\n워터마크가 위치한 곳을 시각적으로 강조 표시\n2. 워터마크 제거 기능\n감지된 워터마크를 모두 제거하거나 일반 문자로 변환\n원본과 정리된 텍스트 비교 제공\n정리된 텍스트를 쉽게 복사할 수 있는 기능\n3. 상세 분석 기능\n워터마크의 유니코드 값 표시\n텍스트 내 워터마크의 정확한 위치 정보 제공\n워터마크 제거 전후 비교 분석\n \n프로그램 사용 방법  \n기본 사용법\n텍스트 입력: 워터마크가 있는지 확인하고 싶은 텍스트를 입력 창에 붙여넣습니다.\n워터마크 감지: '워터마크 감지' 버튼을 클릭하여 텍스트 내 워터마크를 찾습니다.\n워터마크 제거: '워터마크 제거' 버튼을 클릭하여 감지된 워터마크를 제거합니다.\n결과 확인: 워터마크 감지 결과와 제거 결과를 각각 확인할 수 있습니다.\n정리된 텍스트 복사: '결과 복사' 버튼을 클릭하여 워터마크가 제거된 텍스트를 클립보드에 복사합니다.\n결과 해석하기\n워터마크 감지 후에는 다음과 같은 정보를 확인할 수 있습니다:\n발견된 워터마크 수: 텍스트에서 발견된 총 워터마크 수\n워터마크 종류: 발견된 워터마크의 유형(제로 너비 문자, 특수 공백, 이모지 변형 선택자 등)\n워터마크 위치: 원본 텍스트에서 워터마크가 발견된 위치가 강조 표시됨\n유니코드 정보: 각 워터마크의 유니코드 값(예: U+200B, U+2060 등)\n워터마크 제거 후에는:\n워터마크 제거 수: 성공적으로 제거된 워터마크의 수\n정리된 텍스트: 워터마크가 제거된 깨끗한 텍스트\n남은 워터마크: 제거하지 못한 워터마크가 있다면 그 정보\nAI 발전: AI 모델의 워터마킹 기술도 계속 발전하고 있으므로, 최신 모델에서는 새로운 유형의 워터마크가 있을 수 있습니다.",
        "guid": "https://muzbox.tistory.com/483574",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 언어 모델",
          "ai 워터마크",
          "ai 텍스트 감지",
          "chatgpt 워터마크",
          "gpt-o3 워터마크",
          "워터마크 감지 도구",
          "유니코드 워터마크",
          "제로 너비 문자",
          "텍스트 워터마크 제거",
          "특수 공백 문자",
          "특수 문자 감지"
        ],
        "isoDate": "2025-04-23T14:54:18.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "｜RULIWEB｜",
        "title": "토끼 마을을 구해라! 로그라이트 액션 '세피리아'",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2300",
        "pubDate": "Sat, 26 Apr 2025 16:16:03 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/25/04/26/19670f2b4e351ad6b.jpg\">",
        "contentSnippet": "",
        "categories": [
          "게임툰"
        ],
        "isoDate": "2025-04-26T07:16:03.000Z"
      },
      {
        "creator": "［RULIWEB］",
        "title": "[MULTI] RPG 팬이라면 올해 꼭 해봐야 하는 타이틀, 클레르 옵스퀴르",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2299",
        "pubDate": "Thu, 24 Apr 2025 17:00:04 +0900",
        "author": "［RULIWEB］",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/25/04/24/19666ca51995104c1.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2025-04-24T08:00:04.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "C++ - Mimalloc:Free List Sharding in Action 을 읽고 정리",
        "link": "https://jacking75.github.io/Cpp_20250430/",
        "pubDate": "Wed, 30 Apr 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vRaj95MhE1bMYF30dVP-xSbiJrASaFlF693zgj_nK5kmIzK8R5AJU1SHNh2RWfcFqz2OgoFHAIaax2V/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/Cpp_20250430/",
        "isoDate": "2025-04-29T15:00:00.000Z"
      },
      {
        "title": "C# - 의존성 주입 방법의 라이프 사이클 AddTransient, AddScoped, AddSingleton",
        "link": "https://jacking75.github.io/NET_20250429/",
        "pubDate": "Tue, 29 Apr 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vRFi_2Z6yMOWNwWfILDXGsbqYS3aJfiO6aO2u22Awy-pQ5XEEz0GpIOjehif47noYsR06jT6z_pD6Mr/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/NET_20250429/",
        "isoDate": "2025-04-28T15:00:00.000Z"
      },
      {
        "title": "프로파일러의 외부 코드 디컴파일로 숨겨진 인사이트 발견하기",
        "link": "https://jacking75.github.io/VS_20250427/",
        "pubDate": "Sun, 27 Apr 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vQM-TzbEWXZaL8j7a92LXzEjcX1ul7e_Vfpy-zHqw4CkOyD-BXa353AMXkVlyrGMbSzckq6X20n3qGa/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/VS_20250427/",
        "isoDate": "2025-04-26T15:00:00.000Z"
      },
      {
        "title": "C# - Null-conditional 연산자( ?. )로 Null 검사 간소화 하기",
        "link": "https://jacking75.github.io/NET_20250426/",
        "pubDate": "Sat, 26 Apr 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vTC4aCY0ta_5ns-eSdj0MlftjFISo6T_Jx94KveP6gdF4WV6MfdRWJq8WEwlcSh4Yrz9A6CLlphUAQE/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/NET_20250426/",
        "isoDate": "2025-04-25T15:00:00.000Z"
      },
      {
        "title": "C# - .NET 9, C#13 정리",
        "link": "https://jacking75.github.io/NET_20250424/",
        "pubDate": "Thu, 24 Apr 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vT7X33vH8me2j4nycgaeO17pVSM9vOFN1NwJ8fS1hki8QePkoiB_dj-JThLd3tLABCIK-5frKjBvcUd/pub?embedded=true\"></iframe>\n\n<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vSa8awAklDFNnFRDXdki71FzSIQMHtdkD7iv_wnZ_3-kNMU_7bXthK30XfLnRvjzKAw7U2UXo3D2ElW/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/NET_20250424/",
        "isoDate": "2025-04-23T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": [
      {
        "creator": "noreply@blogger.com (Unknown)",
        "title": "맥북에서 로지텍 MX Master 3 마우스 끊김 해결: SmartShift 비활성화 경험",
        "link": "https://blog.gaerae.com/2025/04/macbook-mx-master-3-smartshift.html",
        "pubDate": "Thu, 24 Apr 2025 09:51:00 +0000",
        "author": "noreply@blogger.com (Unknown)",
        "content": "<div class=\"separator\" style=\"clear: both;\"><img alt=\"\" border=\"0\" data-original-height=\"720\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgcA_nXCE5pOrKNmsUCKEqrJ0L0EKK98I7jiBLw8ugcomu_Nzmb8ajgBKEiQ3OS7UYttqDJVjOT8oAKEg8Pl_Pss9OSftZcD8EydkZGL8y4Ap0M1cv6cIX-j3yIC4GcGFT2WNYY_VayMD9e3wIbi_4nvhMnh8TDpqroHi8LNayRtnjUl6nBYlnD7YxxfQc/s1600/%E1%84%86%E1%85%A2%E1%86%A8%E1%84%87%E1%85%AE%E1%86%A8%E1%84%8B%E1%85%A6%E1%84%89%E1%85%A5%E1%84%85%E1%85%A9%E1%84%8C%E1%85%B5%E1%84%90%E1%85%A6%E1%86%A8MX-Master3%E1%84%86%E1%85%A1%E1%84%8B%E1%85%AE%E1%84%89%E1%85%B3%E1%84%86%E1%85%AE%E1%86%AB%E1%84%8C%E1%85%A6%E1%84%92%E1%85%A2%E1%84%80%E1%85%A7%E1%86%AF.png\" /></div>\n<p>맥북 M4와 로지텍 MX Master 3는 생산성을 위한 강력한 도구 조합이지만, 예기치 않게 마우스 끊김, 스크롤 오류, 화면 확대/축소 문제가 발생할 수 있습니다. 저 또한 이러한 문제로 불편함을 겪었고, 마우스를 교체할까 고민할 정도로 답답했습니다. 하지만 끈질긴 문제 해결 시도 끝에, MX Master 3의 특정 기능이 맥북 M4와의 호환성 문제의 원인임을 발견했습니다.</p>\n<h2 id=\"문제의-핵심-mx-master-3-smartshift-기능과-맥북-m4\">문제의 핵심: MX Master 3 SmartShift 기능과 맥북 M4</h2>\n<p>문제의 원인은 바로 MX Master 3의 <strong>SmartShift</strong> 기능이었습니다. 이 기능은 마우스 휠 속도에 따라 자동으로 스크롤 모드를 전환하여 편리함을 제공하지만, 맥북 M4 환경에서는 예기치 않은 작동 오류를 일으킬 수 있었습니다.</p>\n<ul>\n<li><strong>갑작스러운 마우스 멈춤 (MacBook mouse freeze)</strong></li>\n<li><strong>불규칙한 스크롤 동작 (MX Master 3 scroll issue)</strong></li>\n<li><strong>의도치 않은 화면 확대 또는 축소 (MacBook screen zoom problem)</strong></li>\n</ul>\n<h2 id=\"해결-과정-마우스-기능-점검과-smartshift-비활성화\">해결 과정: 마우스 기능 점검과 SmartShift 비활성화</h2>\n<p>명확한 해결책을 찾기 어려워 답답했던 저는, 최후의 수단으로 MX Master 3의 기능을 하나씩 테스트하며 원인을 좁혀나가기 시작했습니다. 그러던 중 <strong>SmartShift</strong> 기능을 끄는 것이 문제 해결의 결정적인 단계였습니다.</p>\n<div class=\"separator\" style=\"clear: both;\"><img alt=\"\" border=\"0\" data-original-height=\"1748\" data-original-width=\"2906\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgYuitE_FF4CsbDvaYIrYseFAO135JrAc7MAaJh6kl3XuFO5ArsYJBFI205KMio8iumn4mfqRo5fQkk4S0-bmil1q2tZcFfXXKMU-t_pFNBPgBsjJ3yP57IH1Tp1wnJ5G5sw9cXBoyXhcVPbIuxZslewQhBZ4Vus7YLexNUgir3vaZpyJeCJvQaRQhwMrs/s1600/Logi%20Options+.png\" /></div>\n<p><strong>SmartShift 비활성화 방법 (Logi Options+ 기준):</strong></p>\n<ol>\n<li><strong>Logi Options+</strong> 앱을 실행합니다.</li>\n<li>연결된 <strong>MX Master 3</strong>를 선택합니다.</li>\n<li><strong>휠</strong> 설정 메뉴로 이동합니다.</li>\n<li><strong>SmartShift</strong> 옵션을 <strong>OFF</strong>로 설정합니다.</li>\n</ol>\n<p>이 간단한 조치만으로 맥북 M4에서 MX Master 3 마우스 끊김, 스크롤 오류, 화면 확대/축소 문제가 깔끔하게 해결되었습니다.</p>\n<h2 id=\"맥북-m4-마우스-끊김-예방을-위한-추가-팁\">맥북 M4 마우스 끊김 예방을 위한 추가 팁</h2>\n<ul>\n<li><strong>Logi Options+ 및 마우스 펌웨어 최신 버전 유지:</strong> 정기적인 업데이트는 호환성 문제 해결 및 성능 향상에 도움이 됩니다.</li>\n<li><strong>로지텍 전용 USB 수신기 활용:</strong> 블루투스 연결 불안정 시, 동글 사용을 고려해보세요.</li>\n<li><strong>macOS 접근 권한 확인:</strong> ‘시스템 설정’ &gt; '개인 정보 보호 및 보안’에서 Logi Options+ 권한 설정을 확인합니다.</li>\n</ul>\n<h3 id=\"결론-맥북-m4와-mx-master-3-문제-해결-smartshift-비활성화가-답입니다\">결론: 맥북 M4와 MX Master 3 마우스 문제 해결은 SmartShift 비활성화가 답이었다.</h3>\n<p>맥북 M4 환경에서 로지텍 MX Master 3 마우스 사용 중 끊김, 스크롤 이상, 화면 확대/축소 현상을 겪고 있다면, <strong>SmartShift</strong> 기능을 비활성화하는 것이 효과적인 해결책이 될 수 있습니다. 마우스 교체를 고려하기 전에 이 방법을 시도하여 쾌적한 맥북 사용 환경을 되찾으시길 바랍니다.</p>\n\n",
        "contentSnippet": "맥북 M4와 로지텍 MX Master 3는 생산성을 위한 강력한 도구 조합이지만, 예기치 않게 마우스 끊김, 스크롤 오류, 화면 확대/축소 문제가 발생할 수 있습니다. 저 또한 이러한 문제로 불편함을 겪었고, 마우스를 교체할까 고민할 정도로 답답했습니다. 하지만 끈질긴 문제 해결 시도 끝에, MX Master 3의 특정 기능이 맥북 M4와의 호환성 문제의 원인임을 발견했습니다.\n문제의 핵심: MX Master 3 SmartShift 기능과 맥북 M4\n문제의 원인은 바로 MX Master 3의 SmartShift 기능이었습니다. 이 기능은 마우스 휠 속도에 따라 자동으로 스크롤 모드를 전환하여 편리함을 제공하지만, 맥북 M4 환경에서는 예기치 않은 작동 오류를 일으킬 수 있었습니다.\n갑작스러운 마우스 멈춤 (MacBook mouse freeze)\n불규칙한 스크롤 동작 (MX Master 3 scroll issue)\n의도치 않은 화면 확대 또는 축소 (MacBook screen zoom problem)\n해결 과정: 마우스 기능 점검과 SmartShift 비활성화\n명확한 해결책을 찾기 어려워 답답했던 저는, 최후의 수단으로 MX Master 3의 기능을 하나씩 테스트하며 원인을 좁혀나가기 시작했습니다. 그러던 중 SmartShift 기능을 끄는 것이 문제 해결의 결정적인 단계였습니다.\n\nSmartShift 비활성화 방법 (Logi Options+ 기준):\nLogi Options+ 앱을 실행합니다.\n연결된 MX Master 3를 선택합니다.\n휠 설정 메뉴로 이동합니다.\nSmartShift 옵션을 OFF로 설정합니다.\n이 간단한 조치만으로 맥북 M4에서 MX Master 3 마우스 끊김, 스크롤 오류, 화면 확대/축소 문제가 깔끔하게 해결되었습니다.\n맥북 M4 마우스 끊김 예방을 위한 추가 팁\nLogi Options+ 및 마우스 펌웨어 최신 버전 유지: 정기적인 업데이트는 호환성 문제 해결 및 성능 향상에 도움이 됩니다.\n로지텍 전용 USB 수신기 활용: 블루투스 연결 불안정 시, 동글 사용을 고려해보세요.\nmacOS 접근 권한 확인: ‘시스템 설정’ > '개인 정보 보호 및 보안’에서 Logi Options+ 권한 설정을 확인합니다.\n결론: 맥북 M4와 MX Master 3 마우스 문제 해결은 SmartShift 비활성화가 답이었다.\n맥북 M4 환경에서 로지텍 MX Master 3 마우스 사용 중 끊김, 스크롤 이상, 화면 확대/축소 현상을 겪고 있다면, SmartShift 기능을 비활성화하는 것이 효과적인 해결책이 될 수 있습니다. 마우스 교체를 고려하기 전에 이 방법을 시도하여 쾌적한 맥북 사용 환경을 되찾으시길 바랍니다.",
        "guid": "tag:blogger.com,1999:blog-1127118646487305903.post-8985923721643124072",
        "categories": [
          {
            "_": "macbook",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          },
          {
            "_": "mouse",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          }
        ],
        "isoDate": "2025-04-24T09:51:00.000Z"
      }
    ]
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "Google Play 서명키를 잃어버려서 교채해 봤습니다.",
        "link": "http://serverdown.tistory.com/1295",
        "pubDate": "Tue, 29 Apr 2025 22:03:11 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1295#entry1295comment",
        "content": "<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이게 되나 싶어서 안쓰는 프로젝트도 있고 하니 진행해봤습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"288\" data-origin-height=\"481\"><span data-url=\"https://blog.kakaocdn.net/dn/JVzxH/btsNFxvgpMW/KEBdpQlJlQq0sLrhvxVh4k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/JVzxH/btsNFxvgpMW/KEBdpQlJlQq0sLrhvxVh4k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/JVzxH/btsNFxvgpMW/KEBdpQlJlQq0sLrhvxVh4k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FJVzxH%2FbtsNFxvgpMW%2FKEBdpQlJlQq0sLrhvxVh4k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"288\" height=\"481\" data-origin-width=\"288\" data-origin-height=\"481\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">좌측 매뉴 하단에 [앱 서명] 으로 갑니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">keystore -&gt; pem 파일 얻기</h2>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=1zDpt341R7s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=1zDpt341R7s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=1zDpt341R7s\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bQsl7i/hyYMTfNpZw/W7lquCCJFSBnCgsVuzmnzK/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360,https://scrap.kakaocdn.net/dn/XyQUr/hyYIkeRwNh/LCa4uYBRYwYsdd7mEEdi50/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360\" data-video-width=\"480\" data-video-height=\"360\" data-video-origin-width=\"480\" data-video-origin-height=\"360\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"How to Set Unity Keystore and Export to PEM for Reset\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/1zDpt341R7s\" width=\"480\" height=\"360\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">keystore 가 버전업이 된거 같아서 인터넷에 떠도는 명령어로는 pem 파일을 얻을 수 없었습니다.</p>\n<p data-ke-size=\"size16\">영상에 보시면 keystore explorer 라는 프로그램을 사용하라길레</p>\n<p data-ke-size=\"size16\">안전이 좀 걱정되서 집에 잘 안쓴느 저사양 컴퓨터에 설치해서 실행해봤습니다.</p>\n<p data-ke-size=\"size16\">1. 설치하고</p>\n<p data-ke-size=\"size16\">2. 실행하고</p>\n<p data-ke-size=\"size16\">3. keystore 파일 드롭 하고</p>\n<p data-ke-size=\"size16\">4. 화면에보이는 keystore 를 더블 클릭하고</p>\n<p data-ke-size=\"size16\">5. 하단에 PEM 이라는 버튼을 눌러 pem 파일을 얻었습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">pem 올리는 곳에 업로드 합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1109\" data-origin-height=\"637\"><span data-url=\"https://blog.kakaocdn.net/dn/boCBd6/btsNFvEadDU/iBgWNikz7vLKXdx6o8qlnK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/boCBd6/btsNFvEadDU/iBgWNikz7vLKXdx6o8qlnK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/boCBd6/btsNFvEadDU/iBgWNikz7vLKXdx6o8qlnK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FboCBd6%2FbtsNFvEadDU%2FiBgWNikz7vLKXdx6o8qlnK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1109\" height=\"637\" data-origin-width=\"1109\" data-origin-height=\"637\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">우측 하단에&nbsp; 요청 버튼이 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"273\" data-origin-height=\"122\"><span data-url=\"https://blog.kakaocdn.net/dn/bahw02/btsND6lGgv6/JMVIfD2L5kWJY3JPOHTbzk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bahw02/btsND6lGgv6/JMVIfD2L5kWJY3JPOHTbzk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bahw02/btsND6lGgv6/JMVIfD2L5kWJY3JPOHTbzk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbahw02%2FbtsND6lGgv6%2FJMVIfD2L5kWJY3JPOHTbzk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"273\" height=\"122\" data-origin-width=\"273\" data-origin-height=\"122\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">요청해봤습니다. 어떻게 되려나</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"756\" data-origin-height=\"283\"><span data-url=\"https://blog.kakaocdn.net/dn/bmme2h/btsNFWO5tKh/elN0Yvbm0dqhDOSrauzKR0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bmme2h/btsNFWO5tKh/elN0Yvbm0dqhDOSrauzKR0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bmme2h/btsNFWO5tKh/elN0Yvbm0dqhDOSrauzKR0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbmme2h%2FbtsNFWO5tKh%2FelN0Yvbm0dqhDOSrauzKR0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"756\" height=\"283\" data-origin-width=\"756\" data-origin-height=\"283\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">다시와서 보니 진행중이라고 나오네요</p>\n<p data-ke-size=\"size16\">(기다리는 중)</p>",
        "contentSnippet": "이게 되나 싶어서 안쓰는 프로젝트도 있고 하니 진행해봤습니다.\n\n\n좌측 매뉴 하단에 [앱 서명] 으로 갑니다.\n \n \n \nkeystore -> pem 파일 얻기\n영상: https://www.youtube.com/watch?v=1zDpt341R7s\n\n\n\nkeystore 가 버전업이 된거 같아서 인터넷에 떠도는 명령어로는 pem 파일을 얻을 수 없었습니다.\n영상에 보시면 keystore explorer 라는 프로그램을 사용하라길레\n안전이 좀 걱정되서 집에 잘 안쓴느 저사양 컴퓨터에 설치해서 실행해봤습니다.\n1. 설치하고\n2. 실행하고\n3. keystore 파일 드롭 하고\n4. 화면에보이는 keystore 를 더블 클릭하고\n5. 하단에 PEM 이라는 버튼을 눌러 pem 파일을 얻었습니다.\n \n \n \npem 올리는 곳에 업로드 합니다.\n\n\n우측 하단에  요청 버튼이 있습니다.\n\n\n요청해봤습니다. 어떻게 되려나\n \n\n\n다시와서 보니 진행중이라고 나오네요\n(기다리는 중)",
        "guid": "http://serverdown.tistory.com/1295",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-04-29T13:03:11.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "작업 상황 결과",
        "link": "http://serverdown.tistory.com/1294",
        "pubDate": "Tue, 29 Apr 2025 18:10:39 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1294#entry1294comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"274\" data-origin-height=\"149\"><span data-url=\"https://blog.kakaocdn.net/dn/bRg6gq/btsNFuSz78m/4IWPkwGESTzFDJT0PuzP40/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bRg6gq/btsNFuSz78m/4IWPkwGESTzFDJT0PuzP40/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bRg6gq/btsNFuSz78m/4IWPkwGESTzFDJT0PuzP40/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbRg6gq%2FbtsNFuSz78m%2F4IWPkwGESTzFDJT0PuzP40%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"274\" height=\"149\" data-origin-width=\"274\" data-origin-height=\"149\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\"><br /><br /></p>\n<h2 data-ke-size=\"size26\">&nbsp;</h2>\n<h2 data-ke-size=\"size26\">1. 블록 분해 게임</h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"512\" data-origin-height=\"512\"><span data-url=\"https://blog.kakaocdn.net/dn/Fg20e/btsNEE9ILLs/hYzyOYo2laYRFRl3WimWvK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/Fg20e/btsNEE9ILLs/hYzyOYo2laYRFRl3WimWvK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/Fg20e/btsNEE9ILLs/hYzyOYo2laYRFRl3WimWvK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FFg20e%2FbtsNEE9ILLs%2FhYzyOYo2laYRFRl3WimWvK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"512\" height=\"512\" data-origin-width=\"512\" data-origin-height=\"512\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">블록 분해 게임을 빨리 올리려고 스토어에 스크린샷을 올릴때</p>\n<p data-ke-size=\"size16\">저의 다른 게임 스샷을 쓴게 있는데</p>\n<p data-ke-size=\"size16\">그게 정책위반으로 걸렸습니다.</p>\n<p data-ke-size=\"size16\">해명 절차에 들어갔지만 이것은 시간이 너무 많이 걸려서&nbsp;</p>\n<p data-ke-size=\"size16\">앱을 새로 만들어 출시를 눌러놓은 상태입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">2. 수조관 시계</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"512\" data-origin-height=\"512\"><span data-url=\"https://blog.kakaocdn.net/dn/b6FoxN/btsND1dhajl/WcKcRw6xkrtrQyZCF9UvZK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b6FoxN/btsND1dhajl/WcKcRw6xkrtrQyZCF9UvZK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b6FoxN/btsND1dhajl/WcKcRw6xkrtrQyZCF9UvZK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb6FoxN%2FbtsND1dhajl%2FWcKcRw6xkrtrQyZCF9UvZK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"512\" height=\"512\" data-origin-width=\"512\" data-origin-height=\"512\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">설정 UI 를 추가해서 출시 눌렀습니다.</p>\n<p data-ke-size=\"size16\">유료로 1달러 정도 이며</p>\n<p data-ke-size=\"size16\">유료게임은 어떻게 돌아가는지 확인하고 싶었습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">데모 영상: <a href=\"https://www.youtube.com/watch?v=KKUx71DhFAA\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=KKUx71DhFAA</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=KKUx71DhFAA\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bnCNiH/hyYMPdmt44/tRG97O6kAqdINVDdWugBr1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/eM1dU/hyYH8k8mWM/WuFFhSlY8siKdJlasI6otK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"ac_1\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/KKUx71DhFAA\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">3. 블록 깨기 게임</h2>\n<p data-ke-size=\"size16\">공동작업중이라 제가 정보를 올릴순 없고 말로 하자면</p>\n<p data-ke-size=\"size16\">출시하려고 했으나 테스터로 14 일 + 14일 테스트 기간을 채워야합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"580\" data-origin-height=\"191\"><span data-url=\"https://blog.kakaocdn.net/dn/b3P6RZ/btsNFSeCwgp/MWCUfZWDpRsuE1NpHC7faK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b3P6RZ/btsNFSeCwgp/MWCUfZWDpRsuE1NpHC7faK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b3P6RZ/btsNFSeCwgp/MWCUfZWDpRsuE1NpHC7faK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb3P6RZ%2FbtsNFSeCwgp%2FMWCUfZWDpRsuE1NpHC7faK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"580\" height=\"191\" data-origin-width=\"580\" data-origin-height=\"191\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이 작업을 자발 적인 노력으로 끝내려면 상당히 완성도 있는 게임을 만들고</p>\n<p data-ke-size=\"size16\">배포해야 서로 해보겠다고 테스트를 해줄 것입니다.</p>\n<p data-ke-size=\"size16\">여러사람이 지인 찬스로 이 문제를 해결하고 있지만</p>\n<p data-ke-size=\"size16\">내가 좋아하는 게임도 아닌데 게임 테스트를 자발적으로 참여하는 일은 쉽지 않습니다.</p>\n<p data-ke-size=\"size16\">더군다나 완성도도 높지 않은 상황이라</p>\n<p data-ke-size=\"size16\">법인 계정은 이 절차를 거칠 필요가 없고 개인 사업자들은 해야하는 것으로 보입니다.</p>\n<p data-ke-size=\"size16\">제 계정은 오래전에 뚫어놓은거라 이절차가 없군요</p>\n<p data-ke-size=\"size16\">완성도를 높여야할 시간인거 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">잡다한 추가 작업</h2>\n<p data-ke-size=\"size16\">게임들의 홈페이지 작업을 해야합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "1. 블록 분해 게임\n\n\n블록 분해 게임을 빨리 올리려고 스토어에 스크린샷을 올릴때\n저의 다른 게임 스샷을 쓴게 있는데\n그게 정책위반으로 걸렸습니다.\n해명 절차에 들어갔지만 이것은 시간이 너무 많이 걸려서 \n앱을 새로 만들어 출시를 눌러놓은 상태입니다.\n \n \n2. 수조관 시계\n\n\n설정 UI 를 추가해서 출시 눌렀습니다.\n유료로 1달러 정도 이며\n유료게임은 어떻게 돌아가는지 확인하고 싶었습니다.\n \n데모 영상: https://www.youtube.com/watch?v=KKUx71DhFAA\n\n\n\n \n \n \n3. 블록 깨기 게임\n공동작업중이라 제가 정보를 올릴순 없고 말로 하자면\n출시하려고 했으나 테스터로 14 일 + 14일 테스트 기간을 채워야합니다.\n\n\n이 작업을 자발 적인 노력으로 끝내려면 상당히 완성도 있는 게임을 만들고\n배포해야 서로 해보겠다고 테스트를 해줄 것입니다.\n여러사람이 지인 찬스로 이 문제를 해결하고 있지만\n내가 좋아하는 게임도 아닌데 게임 테스트를 자발적으로 참여하는 일은 쉽지 않습니다.\n더군다나 완성도도 높지 않은 상황이라\n법인 계정은 이 절차를 거칠 필요가 없고 개인 사업자들은 해야하는 것으로 보입니다.\n제 계정은 오래전에 뚫어놓은거라 이절차가 없군요\n완성도를 높여야할 시간인거 같습니다.\n \n잡다한 추가 작업\n게임들의 홈페이지 작업을 해야합니다.",
        "guid": "http://serverdown.tistory.com/1294",
        "categories": [
          "프로그래밍/개발메모",
          "1인개발",
          "요약"
        ],
        "isoDate": "2025-04-29T09:10:39.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "수조관 시계 (관상용) / Unity Play",
        "link": "http://serverdown.tistory.com/1293",
        "pubDate": "Mon, 28 Apr 2025 17:54:12 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1293#entry1293comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"512\" data-origin-height=\"512\"><span data-url=\"https://blog.kakaocdn.net/dn/b0lre6/btsNEeovENS/1PxILkv9O5KyKgAvpprrsK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b0lre6/btsNEeovENS/1PxILkv9O5KyKgAvpprrsK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b0lre6/btsNEeovENS/1PxILkv9O5KyKgAvpprrsK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb0lre6%2FbtsNEeovENS%2F1PxILkv9O5KyKgAvpprrsK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"512\" height=\"512\" data-origin-width=\"512\" data-origin-height=\"512\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">거금 80달러를 써서 만든 시계 입니당.</p>\n<p data-ke-size=\"size16\">그냥 관산용</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">링크: <a href=\"https://play.unity.com/en/user/5ea53514-df56-4e49-9931-a08d1813a7cc\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://play.unity.com/en/user/5ea53514-df56-4e49-9931-a08d1813a7cc</a></p>\n<figure id=\"og_1745830375778\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"SIDNFT on Unity Play\" data-og-description=\"The place for aspiring game creators to share their latest Unity creation. Gain inspiration and find thousands of FPS, Karting, 2D Platformer and other creations with Unity. No experience needed, just jump in for the chance to be featured!\" data-og-host=\"play.unity.com\" data-og-source-url=\"https://play.unity.com/en/user/5ea53514-df56-4e49-9931-a08d1813a7cc\" data-og-url=\"https://play.unity.com/en/user/5ea53514-df56-4e49-9931-a08d1813a7cc\" data-og-image=\"https://scrap.kakaocdn.net/dn/C4oKA/hyYMZz4aHY/kcF6wWW2fDRs7WX1tEAmIK/img.jpg?width=1920&amp;height=1080&amp;face=0_0_1920_1080,https://scrap.kakaocdn.net/dn/bBwgKi/hyYIcVbc6c/e5Rq8JhwZTE3J9NCHvikj1/img.jpg?width=1920&amp;height=1080&amp;face=0_0_1920_1080\"><a href=\"https://play.unity.com/en/user/5ea53514-df56-4e49-9931-a08d1813a7cc\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://play.unity.com/en/user/5ea53514-df56-4e49-9931-a08d1813a7cc\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/C4oKA/hyYMZz4aHY/kcF6wWW2fDRs7WX1tEAmIK/img.jpg?width=1920&amp;height=1080&amp;face=0_0_1920_1080,https://scrap.kakaocdn.net/dn/bBwgKi/hyYIcVbc6c/e5Rq8JhwZTE3J9NCHvikj1/img.jpg?width=1920&amp;height=1080&amp;face=0_0_1920_1080');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">SIDNFT on Unity Play</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">The place for aspiring game creators to share their latest Unity creation. Gain inspiration and find thousands of FPS, Karting, 2D Platformer and other creations with Unity. No experience needed, just jump in for the chance to be featured!</p>\n<p class=\"og-host\" data-ke-size=\"size16\">play.unity.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=KKUx71DhFAA\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=KKUx71DhFAA</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=KKUx71DhFAA\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/daWWAj/hyYH5Wa4Ag/jYo1MUu5b5nUedrMg1s911/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/NZqn3/hyYL3JOWtZ/09VpQVLDzcgKzO2FBxALr0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"ac_1\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/KKUx71DhFAA\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "거금 80달러를 써서 만든 시계 입니당.\n그냥 관산용\n \n링크: https://play.unity.com/en/user/5ea53514-df56-4e49-9931-a08d1813a7cc\n\n \nSIDNFT on Unity Play\nThe place for aspiring game creators to share their latest Unity creation. Gain inspiration and find thousands of FPS, Karting, 2D Platformer and other creations with Unity. No experience needed, just jump in for the chance to be featured!\nplay.unity.com\n\n \n영상: https://www.youtube.com/watch?v=KKUx71DhFAA",
        "guid": "http://serverdown.tistory.com/1293",
        "categories": [
          "프로그래밍/자작"
        ],
        "isoDate": "2025-04-28T08:54:12.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "연예인들때문에 안티들이 붙어버린 10분짜리 우주여행 상품의 위기",
        "link": "http://serverdown.tistory.com/1292",
        "pubDate": "Mon, 28 Apr 2025 17:13:56 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1292#entry1292comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1202\" data-origin-height=\"664\"><span data-url=\"https://blog.kakaocdn.net/dn/ceRQIj/btsNDqQHtVB/usSRxN12nOGrDqKKYM7TE0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ceRQIj/btsNDqQHtVB/usSRxN12nOGrDqKKYM7TE0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/ceRQIj/btsNDqQHtVB/usSRxN12nOGrDqKKYM7TE0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FceRQIj%2FbtsNDqQHtVB%2FusSRxN12nOGrDqKKYM7TE0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1202\" height=\"664\" data-origin-width=\"1202\" data-origin-height=\"664\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=mVXcdOcXOMI\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=mVXcdOcXOMI</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=mVXcdOcXOMI\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bH0Z5B/hyYMaPz7x6/yaglL1IFrDgDNPzh0M6JSK/img.jpg?width=1280&amp;height=720&amp;face=244_32_1234_524,https://scrap.kakaocdn.net/dn/bXE7r5/hyYFD0hcZ7/PB1v4ytoC8ojBj8Mtm1TNk/img.jpg?width=1280&amp;height=720&amp;face=244_32_1234_524\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"미국인들은 왜 이렇게 화가 났을까\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/mVXcdOcXOMI\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이게 과학자들이나 군인들이 갈 때는 별 지적이 없었는데</p>\n<p data-ke-size=\"size16\">여성들로 100% 뽑고&nbsp;연예인들이 섞이기 시작하니까<br />안티가 섞이고 있다고 합니다.</p>\n<p data-ke-size=\"size16\">지적사항은 여행 시간이 짧은데 대단한거냐</p>\n<p data-ke-size=\"size16\">엄청 위험하고 어려운거 같은데 알고보니 안전벨트 매고 버튼 한개 누르는 정도다</p>\n<p data-ke-size=\"size16\">옷이 이상하다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">아무튼 홍보는 꼬여버렸고 우주산업에는 위기가 올 수도 있습니다.</p>\n<p data-ke-size=\"size16\">여러번 하다보면 이런식으로 오렴되나 봅니다.</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=mVXcdOcXOMI\n\n\n\n \n \n이게 과학자들이나 군인들이 갈 때는 별 지적이 없었는데\n여성들로 100% 뽑고 연예인들이 섞이기 시작하니까\n안티가 섞이고 있다고 합니다.\n지적사항은 여행 시간이 짧은데 대단한거냐\n엄청 위험하고 어려운거 같은데 알고보니 안전벨트 매고 버튼 한개 누르는 정도다\n옷이 이상하다.\n \n아무튼 홍보는 꼬여버렸고 우주산업에는 위기가 올 수도 있습니다.\n여러번 하다보면 이런식으로 오렴되나 봅니다.",
        "guid": "http://serverdown.tistory.com/1292",
        "categories": [
          "유튜브",
          "미국",
          "우주여행"
        ],
        "isoDate": "2025-04-28T08:13:56.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "132일차 요약 / 1인 게임 개발",
        "link": "http://serverdown.tistory.com/1291",
        "pubDate": "Mon, 28 Apr 2025 10:51:51 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1291#entry1291comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"831\" data-origin-height=\"299\"><span data-url=\"https://blog.kakaocdn.net/dn/OZFvO/btsNDb6xbEI/usUkQJnWiO836P3uwjYkTk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/OZFvO/btsNDb6xbEI/usUkQJnWiO836P3uwjYkTk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/OZFvO/btsNDb6xbEI/usUkQJnWiO836P3uwjYkTk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FOZFvO%2FbtsNDb6xbEI%2FusUkQJnWiO836P3uwjYkTk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"831\" height=\"299\" data-origin-width=\"831\" data-origin-height=\"299\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">질러버린 애셋 두개</p>\n<p data-ke-size=\"size16\">원화로는 14만5천원이군요</p>\n<p data-ke-size=\"size16\">물고기는 할인이 아니라 비싸게 느껴지네요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=BMSG0VyT_-E\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=BMSG0VyT_-E</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=BMSG0VyT_-E\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/c2oYIN/hyYMPjVszg/K4Td9x6lUPC7kdmFu5cU81/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360,https://scrap.kakaocdn.net/dn/Ouqnn/hyYJtwt4dL/Pyzuqkwoi6DCjrVoKq71f1/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360\" data-video-width=\"480\" data-video-height=\"360\" data-video-origin-width=\"480\" data-video-origin-height=\"360\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"132일차 / 개발 진행 상황\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/BMSG0VyT_-E\" width=\"480\" height=\"360\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">요약:&nbsp;</h2>\n<h3 data-ke-size=\"size23\">1. 블록 분해 게임 작업</h3>\n<p data-ke-size=\"size16\">링크: <a href=\"https://serverdown.tistory.com/1290\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://serverdown.tistory.com/1290</a></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\">2. Add Force 1 히어로 추가 작업</h3>\n<p data-ke-size=\"size16\">글 링크: <a href=\"https://blog.sidnft.com/1279\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://blog.sidnft.com/1279</a></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\">3 테스트 하려고 샀던 수이 코인이 떡상한 사연</h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"869\" data-origin-height=\"497\"><span data-url=\"https://blog.kakaocdn.net/dn/1SDaY/btsNBEoh5FK/5X2q4sg03m008pvb3J0NS0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/1SDaY/btsNBEoh5FK/5X2q4sg03m008pvb3J0NS0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/1SDaY/btsNBEoh5FK/5X2q4sg03m008pvb3J0NS0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F1SDaY%2FbtsNBEoh5FK%2F5X2q4sg03m008pvb3J0NS0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"869\" height=\"497\" data-origin-width=\"869\" data-origin-height=\"497\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">우연히 얻은 수익 좀 팔아봤습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">4. &nbsp;유니티 애셋 구매 (수이 팔아서)</p>\n<p data-ke-size=\"size16\">- 물고기 3D<br />영상: <a href=\"https://www.youtube.com/watch?time_continue=4&amp;v=OOzC3r0pBCo&amp;embeds_referring_euri=https%3A%2F%2Fassetstore.unity.com%2F&amp;embeds_referring_origin=https%3A%2F%2Fassetstore.unity.com&amp;source_ve_path=MjM4NTE\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?time_continue=4&amp;v=OOzC3r0pBCo&amp;embeds_referring_euri=https%3A%2F%2Fassetstore.unity.com%2F&amp;embeds_referring_origin=https%3A%2F%2Fassetstore.unity.com&amp;source_ve_path=MjM4NTE</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=OOzC3r0pBCo\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/2TAOJ/hyYM0FKMFZ/VGZbkvoSfyMD7RrjEPOF0K/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/b9XTf1/hyYFB2ofK9/QIl9QP4eEWRIbo2KxVz79K/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"3D Fish\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/OOzC3r0pBCo\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">- text to voice (글자를 음성으로 변환)<br />글 링크: <a href=\"https://blog.sidnft.com/1285\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://blog.sidnft.com/1285</a></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">코인을 팔아서&nbsp;제일위에 그림처럼 애샛을 구매했습니다.</p>\n<p data-ke-size=\"size16\">다 나은 결과가 있기를</p>",
        "contentSnippet": "질러버린 애셋 두개\n원화로는 14만5천원이군요\n물고기는 할인이 아니라 비싸게 느껴지네요\n \n영상: https://www.youtube.com/watch?v=BMSG0VyT_-E\n\n\n\n \n요약: \n1. 블록 분해 게임 작업\n링크: https://serverdown.tistory.com/1290\n \n2. Add Force 1 히어로 추가 작업\n글 링크: https://blog.sidnft.com/1279\n \n3 테스트 하려고 샀던 수이 코인이 떡상한 사연\n\n\n우연히 얻은 수익 좀 팔아봤습니다.\n \n4.  유니티 애셋 구매 (수이 팔아서)\n- 물고기 3D\n영상: https://www.youtube.com/watch?time_continue=4&v=OOzC3r0pBCo&embeds_referring_euri=https%3A%2F%2Fassetstore.unity.com%2F&embeds_referring_origin=https%3A%2F%2Fassetstore.unity.com&source_ve_path=MjM4NTE\n\n\n\n \n- text to voice (글자를 음성으로 변환)\n글 링크: https://blog.sidnft.com/1285\n \n \n \n \n코인을 팔아서 제일위에 그림처럼 애샛을 구매했습니다.\n다 나은 결과가 있기를",
        "guid": "http://serverdown.tistory.com/1291",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-04-28T01:51:51.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "Brick Away v6 / 블록분해 v6 / 손가락으로 확대 축소 추",
        "link": "http://serverdown.tistory.com/1290",
        "pubDate": "Mon, 28 Apr 2025 09:29:30 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1290#entry1290comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"512\" data-origin-height=\"512\"><span data-url=\"https://blog.kakaocdn.net/dn/dfWxr7/btsNBFHFh5v/MtcWvjZgynFsMj9npzMEFK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dfWxr7/btsNBFHFh5v/MtcWvjZgynFsMj9npzMEFK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dfWxr7/btsNBFHFh5v/MtcWvjZgynFsMj9npzMEFK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdfWxr7%2FbtsNBFHFh5v%2FMtcWvjZgynFsMj9npzMEFK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"512\" height=\"512\" data-origin-width=\"512\" data-origin-height=\"512\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">웹게임 전체: <a href=\"https://play.unity.com/en/user/5ea53514-df56-4e49-9931-a08d1813a7cc\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://play.unity.com/en/user/5ea53514-df56-4e49-9931-a08d1813a7cc</a></p>\n<p data-ke-size=\"size16\">블록 분해 v6: <a href=\"https://play.unity.com/en/games/77df60bd-c725-4198-88d5-8e63c80348c9/tab-to-dismantle-v6\">Unity Play | Tab to Dismantle v6 game</a></p>\n<figure id=\"og_1745799954840\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Tab to Dismantle v6 on Unity Play\" data-og-description=\"supported two finger zoom add disaply combo\" data-og-host=\"play.unity.com\" data-og-source-url=\"https://play.unity.com/en/games/77df60bd-c725-4198-88d5-8e63c80348c9/tab-to-dismantle-v6\" data-og-url=\"https://play.unity.com/en/games/77df60bd-c725-4198-88d5-8e63c80348c9/tab-to-dismantle-v6\" data-og-image=\"https://scrap.kakaocdn.net/dn/G6SgH/hyYH9c51f1/SktTYop4SbdfAJcw7oD6qk/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/cQPbjz/hyYFD0ebK9/r8C3XGvnIotliCYqQdOrcK/img.png?width=512&amp;height=512&amp;face=0_0_512_512\"><a href=\"https://play.unity.com/en/games/77df60bd-c725-4198-88d5-8e63c80348c9/tab-to-dismantle-v6\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://play.unity.com/en/games/77df60bd-c725-4198-88d5-8e63c80348c9/tab-to-dismantle-v6\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/G6SgH/hyYH9c51f1/SktTYop4SbdfAJcw7oD6qk/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/cQPbjz/hyYFD0ebK9/r8C3XGvnIotliCYqQdOrcK/img.png?width=512&amp;height=512&amp;face=0_0_512_512');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Tab to Dismantle v6 on Unity Play</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">supported two finger zoom add disaply combo</p>\n<p class=\"og-host\" data-ke-size=\"size16\">play.unity.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">v6 변경점</h2>\n<p data-ke-size=\"size16\">1. 게임이름 변경 apart -&gt; Tab&nbsp;to&nbsp;Dismantle</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">2. 하단에 콤보 추가</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"421\" data-origin-height=\"169\"><span data-url=\"https://blog.kakaocdn.net/dn/WEXQy/btsNA6FEkBE/UQT7ltIU74t2EP8K65AdNK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/WEXQy/btsNA6FEkBE/UQT7ltIU74t2EP8K65AdNK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/WEXQy/btsNA6FEkBE/UQT7ltIU74t2EP8K65AdNK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FWEXQy%2FbtsNA6FEkBE%2FUQT7ltIU74t2EP8K65AdNK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"421\" height=\"169\" data-origin-width=\"421\" data-origin-height=\"169\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">잘못된 방향을 클릭하면 0으로 초기화 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">3. 두 손가락으로 확대 / 축소</p>\n<p data-ke-size=\"size16\">모바일기기로 접속하셔서 확인해보세요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">예정 사항</h2>\n<p data-ke-size=\"size16\">플레이 스토어 준비중입니다.</p>",
        "contentSnippet": "웹게임 전체: https://play.unity.com/en/user/5ea53514-df56-4e49-9931-a08d1813a7cc\n블록 분해 v6: Unity Play | Tab to Dismantle v6 game\n\n \nTab to Dismantle v6 on Unity Play\nsupported two finger zoom add disaply combo\nplay.unity.com\n\n \nv6 변경점\n1. 게임이름 변경 apart -> Tab to Dismantle\n \n2. 하단에 콤보 추가\n\n\n잘못된 방향을 클릭하면 0으로 초기화 됩니다.\n \n3. 두 손가락으로 확대 / 축소\n모바일기기로 접속하셔서 확인해보세요\n \n예정 사항\n플레이 스토어 준비중입니다.",
        "guid": "http://serverdown.tistory.com/1290",
        "categories": [
          "블록 분해 게임 (자작)",
          "유니티",
          "자작게임"
        ],
        "isoDate": "2025-04-28T00:29:30.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "(해결됨) 유니티 광고 붙이다 빌드 무한대기 상태 / Running Gradle...",
        "link": "http://serverdown.tistory.com/1289",
        "pubDate": "Sun, 27 Apr 2025 15:08:29 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1289#entry1289comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"935\" data-origin-height=\"656\"><span data-url=\"https://blog.kakaocdn.net/dn/2Gfsg/btsNz4PdglI/iKS1EDzEpSCSETQgh91Ark/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/2Gfsg/btsNz4PdglI/iKS1EDzEpSCSETQgh91Ark/img.png\"><img src=\"https://blog.kakaocdn.net/dn/2Gfsg/btsNz4PdglI/iKS1EDzEpSCSETQgh91Ark/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F2Gfsg%2FbtsNz4PdglI%2FiKS1EDzEpSCSETQgh91Ark%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"935\" height=\"656\" data-origin-width=\"935\" data-origin-height=\"656\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이건 무슨 에러일까요?</p>\n<p data-ke-size=\"size16\">안드로이드 빌드에 광고 붙이려다 이상태가 되어버렸습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">광고 ID 를 붙이라는거 같아서</p>\n<p data-ke-size=\"size16\">Admob 설치하고 광고ID 만들어 입력해두었습니다.<br />광고는 Unity Ads 를 사용할껀데 이래도 되나....</p>\n<p data-ke-size=\"size16\">이것저것 만지는데 빌드가 갑자기 안되네요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">내용</p>\n<p data-ke-size=\"size16\">Resolving Android Dependencies</p>\n<p data-ke-size=\"size16\">Running&nbsp;Gradle...<br /><br />C:\\project\\pto\\unity-block-away\\Temp\\PlayServicesResolverGradle\\gradlew.bat&nbsp;--no-daemon&nbsp;-b&nbsp;\"C:\\project\\pto\\unity-block-away\\Temp\\PlayServicesResolverGradle\\PlayServicesResolver.scripts.download_artifacts.gradle\"&nbsp;\"-PANDROID_HOME=C:/Program&nbsp;Files/Unity/Hub/Editor/6000.0.38f1/Editor/Data/PlaybackEngines/AndroidPlayer\\SDK\"&nbsp;\"-PTARGET_DIR=C:\\project\\pto\\unity-block-away\\Assets\\Plugins\\Android\"&nbsp;\"-PMAVEN_REPOS=<a href=\"https://maven.google.com/\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://maven.google.com/</a>\"&nbsp;\"-PPACKAGES_TO_COPY=co<a href=\"http://m.google.android.gms:play-services-ads:23.6.0;androidx.constraintlayout:constraintlayout:2.1.4;com.google.android.ump:user-messaging-platform:3.1.0\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">http://m.google.android.gms:play-services-ads:23.6.0;androidx.constraintlayout:constraintlayout:2.1.4;com.google.android.ump:user-messaging-platform:3.1.0</a>\"&nbsp;\"-PUSE_JETIFIER=1\"&nbsp;\"-PDATA_BINDING_VERSION=8.3.0\"<br />Executing&nbsp;command:&nbsp;C:\\project\\pto\\unity-block-away\\Temp\\PlayServicesResolverGradle\\gradlew.bat&nbsp;--no-daemon&nbsp;-b&nbsp;\"C:\\project\\pto\\unity-block-away\\Temp\\PlayServicesResolverGradle\\PlayServicesResolver.scripts.download_artifacts.gradle\"&nbsp;\"-PANDROID_HOME=C:/Program&nbsp;Files/Unity/Hub/Editor/6000.0.38f1/Editor/Data/PlaybackEngines/AndroidPlayer\\SDK\"&nbsp;\"-PTARGET_DIR=C:\\project\\pto\\unity-block-away\\Assets\\Plugins\\Android\"&nbsp;\"-PMAVEN_REPOS=<a href=\"https://maven.google.com/\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://maven.google.com/</a>\"&nbsp;\"-PPACKAGES_TO_COPY=co<a href=\"http://m.google.android.gms:play-services-ads:23.6.0;androidx.constraintlayout:constraintlayout:2.1.4;com.google.android.ump:user-messaging-platform:3.1.0\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">http://m.google.android.gms:play-services-ads:23.6.0;androidx.constraintlayout:constraintlayout:2.1.4;com.google.android.ump:user-messaging-platform:3.1.0</a>\"&nbsp;\"-PUSE_JETIFIER=1\"&nbsp;\"-PDATA_BINDING_VERSION=8.3.0\"</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">resolve 해도 해결이 안되네요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">해결방법</h2>\n<p data-ke-size=\"size16\">프로젝트를 새로 만들어서 게임 관련 파일들만 옮긴후에</p>\n<p data-ke-size=\"size16\">GoogleMobileAds-v10.0.0.unitypackage<br />유니티용 Admob 패키지를 다시 설치했습니다.<br />이 패키지는 버전업이 매우 자주 일어나는군요</p>\n<p data-ke-size=\"size16\">Admob 패키지를 설치하고 나면 Auto Resolver 를 켜갰냐고 물어보는데<br />문제가 있을 당시에는 이창이 없었던거 같습니다.</p>\n<p data-ke-size=\"size16\">Enable 을 눌러 켠후엔 다 잘 되네요</p>\n<p data-ke-size=\"size16\">시간 낭비 갑이였던 하루였습니다.</p>",
        "contentSnippet": "이건 무슨 에러일까요?\n안드로이드 빌드에 광고 붙이려다 이상태가 되어버렸습니다.\n \n광고 ID 를 붙이라는거 같아서\nAdmob 설치하고 광고ID 만들어 입력해두었습니다.\n광고는 Unity Ads 를 사용할껀데 이래도 되나....\n이것저것 만지는데 빌드가 갑자기 안되네요\n \n내용\nResolving Android Dependencies\nRunning Gradle...\nC:\\project\\pto\\unity-block-away\\Temp\\PlayServicesResolverGradle\\gradlew.bat --no-daemon -b \"C:\\project\\pto\\unity-block-away\\Temp\\PlayServicesResolverGradle\\PlayServicesResolver.scripts.download_artifacts.gradle\" \"-PANDROID_HOME=C:/Program Files/Unity/Hub/Editor/6000.0.38f1/Editor/Data/PlaybackEngines/AndroidPlayer\\SDK\" \"-PTARGET_DIR=C:\\project\\pto\\unity-block-away\\Assets\\Plugins\\Android\" \"-PMAVEN_REPOS=https://maven.google.com/\" \"-PPACKAGES_TO_COPY=cohttp://m.google.android.gms:play-services-ads:23.6.0;androidx.constraintlayout:constraintlayout:2.1.4;com.google.android.ump:user-messaging-platform:3.1.0\" \"-PUSE_JETIFIER=1\" \"-PDATA_BINDING_VERSION=8.3.0\"\nExecuting command: C:\\project\\pto\\unity-block-away\\Temp\\PlayServicesResolverGradle\\gradlew.bat --no-daemon -b \"C:\\project\\pto\\unity-block-away\\Temp\\PlayServicesResolverGradle\\PlayServicesResolver.scripts.download_artifacts.gradle\" \"-PANDROID_HOME=C:/Program Files/Unity/Hub/Editor/6000.0.38f1/Editor/Data/PlaybackEngines/AndroidPlayer\\SDK\" \"-PTARGET_DIR=C:\\project\\pto\\unity-block-away\\Assets\\Plugins\\Android\" \"-PMAVEN_REPOS=https://maven.google.com/\" \"-PPACKAGES_TO_COPY=cohttp://m.google.android.gms:play-services-ads:23.6.0;androidx.constraintlayout:constraintlayout:2.1.4;com.google.android.ump:user-messaging-platform:3.1.0\" \"-PUSE_JETIFIER=1\" \"-PDATA_BINDING_VERSION=8.3.0\"\n \nresolve 해도 해결이 안되네요\n \n해결방법\n프로젝트를 새로 만들어서 게임 관련 파일들만 옮긴후에\nGoogleMobileAds-v10.0.0.unitypackage\n유니티용 Admob 패키지를 다시 설치했습니다.\n이 패키지는 버전업이 매우 자주 일어나는군요\nAdmob 패키지를 설치하고 나면 Auto Resolver 를 켜갰냐고 물어보는데\n문제가 있을 당시에는 이창이 없었던거 같습니다.\nEnable 을 눌러 켠후엔 다 잘 되네요\n시간 낭비 갑이였던 하루였습니다.",
        "guid": "http://serverdown.tistory.com/1289",
        "categories": [
          "프로그래밍/개발메모",
          "애드몹",
          "유니티"
        ],
        "isoDate": "2025-04-27T06:08:29.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "중국에 투자하는게 맞는거 같습ㄴ디ㅏ. / 전기차 / 베터리 / 로봇",
        "link": "http://serverdown.tistory.com/1288",
        "pubDate": "Sat, 26 Apr 2025 14:00:12 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1288#entry1288comment",
        "content": "<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=asENcqlYEjg\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=asENcqlYEjg</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=asENcqlYEjg\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/LMQRn/hyYIhaTqaF/Bb410DPanXJ4QYKC8DM2zK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/bUbotW/hyYH7TEWYx/C6Snobs3uzAWPjxWwrj9Ck/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"중국 전기차 회사 BYD와 샤오미는 엄청난 걸 해내고 있습니다. 항셍테크 T10 중국 빅테크 성장성 \" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/asENcqlYEjg\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<h2 data-ke-size=\"size26\">존버나드</h2>\n<p data-ke-size=\"size16\">처음엔 중국 찬양하길레 듣기도 싫었는데 2년쯤 지나보니 그의 말이 맞았습니다.</p>\n<p data-ke-size=\"size16\">그들은 어마어마한 경쟁력을 갖고 있습니다.</p>\n<p data-ke-size=\"size16\">이것은 무시하거나 애국주의로 이길 수 있는 수준이 아닙니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">영상 내용 요약</h2>\n<p data-ke-size=\"size16\">트럼프의 몰아붙이는 행동은 취소되고 있으며</p>\n<p data-ke-size=\"size16\">중국은 자율주행에 더 큰 드라이브를 걸고 있습니다.<br />최근 사오미 전기차 차율주행 사고는 과장광고도 있고 소비자의 맹신도 섞여서 발생했다고 하구요</p>\n<p data-ke-size=\"size16\">광고에 자율주행 좋다는 내용과<br />소비자도 그걸 맹신하고 아예 손도 안덴 결과</p>\n<p data-ke-size=\"size16\">중국은 어차피 인권같은계념이 없기 때문에 과장광고해도 막을 곳도 없습니다.<br />그리고 자율주행이나 베터리의 발전을 보면 폭발하고 불나고 사고나고 그걸 고쳐온 과정이 발전을 이끌었습니다.</p>\n<p data-ke-size=\"size16\">미국에서는 시도해볼 수도 없는 사람을 갈아넣는 방법을 중국은 사용하고 있습니다.<br />이것이 바로 경쟁력이고 함난한 기술 격차를 이런 방식으로 따라 잡는 다는걸 알았습니다.</p>\n<h2 data-ke-size=\"size26\">중공의 100년 계획</h2>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=MuiO7h9s96c&amp;t=1032s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=MuiO7h9s96c&amp;t=1032s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=MuiO7h9s96c\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bKMK8w/hyYIgJO7FM/qzwppNYPbi2VYuKZzOEj40/img.jpg?width=1280&amp;height=720&amp;face=724_94_934_322,https://scrap.kakaocdn.net/dn/nVmy3/hyYFEYRx6Z/vNZypk9rM31S35hfcM4ziK/img.jpg?width=1280&amp;height=720&amp;face=724_94_934_322\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"판타지가 아닌 중국에서 실제로 일어났던 일입니다!\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/MuiO7h9s96c\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">5-10년 해도 결론이 안날꺼 같은 문제는 100년 - 200년으로 넓히면 방법이 있습니다.</p>\n<p data-ke-size=\"size16\">중공은 충분히 그런 능력이 있기 때문에 계획만 잘 세웠다면 실현 될 것입니다.<br />엄청난 기간을 버팀으로서 말이죠</p>\n<p data-ke-size=\"size16\">100년쯤의 과정중에 미국이 한번만 더 금융위기 같은 사태를 맞으면<br />중국이 더 빨리 역전할 수 있을 것입니다.</p>\n<p data-ke-size=\"size16\">인간의 탐욕을 본다면 이런일은 10년에 한번즘은 충분히 일어날 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">과거의 나</h2>\n<p data-ke-size=\"size16\">저는 그전까진 K-베터리 추종자였지만 지금은 아닙니다.</p>\n<p data-ke-size=\"size16\">트럼프는 관세의 악영향으로 더이상 추친을 못하고 후퇴했습니다.<br />이제 장난으로라도 다시 진행하려고하면 어마어마한 시장 충격을 감당해야하고<br />본인도 미국의 성장을 신경쓰는 것으로 보입니다.</p>\n<p data-ke-size=\"size16\">처음엔 미란 보고서 처럼 미국 피흘리면서 중국을 친다는걸로 알았으나<br />국채 터지니까 바로 방향바꾸는거 보고 아니라는걸 알았습니다.</p>\n<h2 data-ke-size=\"size26\">중국의 현재 상황</h2>\n<p data-ke-size=\"size16\">유튜브에 중국영상을 보면 서민들은 사업이 다망하고 집값이 엉망이 되어 집산사람도 망하고<br />일거리를 못찾아 우는 졸업자들 영상을 많이 볼 수 있습니다.</p>\n<p data-ke-size=\"size16\">이걸보고 \"이러다 망하겠네\" 라고 생각하는건 1차원적인 생각입니다.</p>\n<p data-ke-size=\"size16\">그 덕분에 인건비가 나락으로가서 글로벌 경쟁력이 생겼습니다.<br />중공 체재를 유지하기위해서는 부자가 많은것 보다 가난한 사람이 많은게 통제하기 쉬웠던 것입니다.</p>\n<p data-ke-size=\"size16\">\"살려만 드릴께\" 를 시전하면 인민들은 말을 들을 수 밖에 없겠죠<br />혁명의 역사를 보면 알겠지만 혁명한다고 바로 좋아지지 않습니다.<br />혼돈의 시기 3년~10년 정도를 살아남아야하는데</p>\n<p data-ke-size=\"size16\">재력이 충분하지 않은 서민들은 그것도 쉽지 않습니다.</p>\n<p data-ke-size=\"size16\">프랑스 형명 당시에는 빵값을 제어하지 못해 혁명을 했음에도 경제는 파탄이 났었고<br />외부에서 약해진 프랑스를 공격하려는 부분도 막아야해서 서민의 생존은 거의 확율 싸움이였습니다.<br />(대량의 목슴을 갈아넣고 운이 좋은 사람은 살아남는 수준)</p>\n<p data-ke-size=\"size16\">마윈때 보시면 알겠지만 점점 부자가되기 시작하니까 자신들의 목소리를 내기 시작합니다.<br />이러면 중국이 민주화가 되는 길이니 <br />중공은 이것을 당연히 막아야했던 것이죠</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">정신 못차린 한국</h2>\n<p data-ke-size=\"size16\">트럼프는 첫번째 임기때 공무원들이 말을 듣지않아 강력한 계획을 실행하지 못했었습니다.<br />공무원들은 4년만 버티면 타음 사람이 집권할테고 그사람은 트럼프보단 약할꺼라고 생각했던 것이죠.</p>\n<p data-ke-size=\"size16\">그래서 이번엔 임기 시작부터&nbsp; DOGE 그룹을 만들어 공무원들을 마구 쳐냈습니다.</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">한국은 정치인 그룹과 공무원 그룹이 권력을 따로 잡고 있습니다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">공무원 그룹은 부동산을 유지하려는 세력인데 이들은 국가가 어떻게되든 부동산 값을 띄우려고 하는 목표가 있습니다.<br />이번 오세훈 서울 시장의 토지러개허가 해줬다 몇일만에 바로 다시 막은 사건이 있었습니다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">영상: <a href=\"https://www.youtube.com/watch?v=qnIJsYOvBSM&amp;t=559s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=qnIJsYOvBSM&amp;t=559s</a></span></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=qnIJsYOvBSM\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/3heYJ/hyYFzi1gLl/nTj9q8PoY6SdcpUGyTTFGK/img.jpg?width=1280&amp;height=720&amp;face=600_128_776_320,https://scrap.kakaocdn.net/dn/EGwbb/hyYMfpux51/W5Z5twfrxK9arQc7mbiE0K/img.jpg?width=1280&amp;height=720&amp;face=600_128_776_320\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"규제 풀었다가 집값 오르니 다시 규제하겠다는 서울시, 왜 정책을 이렇게 발표할까? | 토지거래\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/qnIJsYOvBSM\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">이런일은 말도 안되는 조치인데 서울시장 말듣고 부동산 뛰어든 사람들은 미쳐버리는 결정이기 때문입니다.<br />부동산 거래비용이 어마어마한 곳을 이런식으로 해버리면 거래취소를 위한 손실이 어마어마할 것입니다.</p>\n<p data-ke-size=\"size16\">제 추측으로는 공무원 그룹이 서울시장에게 사탕발린 말을 해서 무능한 오세훈이 \"좋은거네 그럼 간다\" 를 시전했는데<br />부동산이 급등해 내 책임이 될것이 두려워 취소해버린거 같습니다.</p>\n<p data-ke-size=\"size16\">이 이벤트를 통해 저는 부동산을 띄우려는 공무원 세력이 있다는것을 눈치 챘습니다.</p>\n<p data-ke-size=\"size16\">정치인 그룹의 목표는 의원내각제를 실행하는 것입니다.</p>\n<p data-ke-size=\"size16\">대통령을 없애고 정치인들 끼리 짬짜미 해서 총리를 뽑겠다는 30년 숙원 사업입니다.</p>\n<p data-ke-size=\"size16\">이러면 유권자의 힘을 줄일 수 있기 때문에 정치인으로서는 좋은 방향입니다.</p>\n<p data-ke-size=\"size16\">문제는 이 작읍을 위해 중공이랑 손을 잡아야하는 것입니다.</p>\n<p data-ke-size=\"size16\">한국의 인구수를 줄이고 외국인의 투표수를 늘리는 작업을 20년에 걸처 해야 했습니다.<br />결국 그들은 목표를 이뤘지만 한국에는 한국 사람이 줄게 되었죠</p>\n<p data-ke-size=\"size16\">애국에 대한 힘을 줄여야하니 당연히 k-베터리 같은걸 부양해서도 안되고 부양하고 싶지도 않았던 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">K-베터리의 미래</h2>\n<p data-ke-size=\"size16\">이런 어중간한 상황에 k-베터리 살아나는 시나리오는 생각하기 어렵습니다.</p>\n<p data-ke-size=\"size16\">바닥까지 갔다 방향전환하는게 맞습니다.</p>\n<p data-ke-size=\"size16\">그 바닥을 알리는 신호로서 중국의 부흥이 필요합니다.</p>\n<p data-ke-size=\"size16\">중국의 첨단기술의 경쟁력이 미국을 앞지르고<br />사람들이 경악해서 대체 수단을 찾는 과정에서 k-베터리가 뜨는 것이죠</p>\n<p data-ke-size=\"size16\">\"이대로 가면 중국이 다 먹는게 확실하다\" 라는 공포</p>\n<p data-ke-size=\"size16\">지구 온난화 문제가 2000년도 부터 있었죠 25년이나 지난 지금도 온난화는 있지만 사람들은 공포를 느끼지 못하고 있습니다. 불편함 때문에 전기차를 타지 않는 다는 것이 그것입니다.</p>\n<p data-ke-size=\"size16\">하지만 벌이 죽고 실물의 수정이 줄어들고 환경 변화로 심각한 일이 벌어지고<br />\"이제는 되돌릴 수 없습니다\" 라는 공포가 확산되면&nbsp;<br />그때서야 불편해도 전기차 타야지 가 되고<br />복지 예산을 포기하고 탄소포집에 돈을 밀어 넣는 중대한 결정을 할 것입니다.</p>\n<h2 data-ke-size=\"size26\">중격요법</h2>\n<p data-ke-size=\"size16\">공포영화에서 본거 같은데 미친사람을 한번 더 미치게 만들면 정상으로 돌아오지 않을까 하는 가설을 실행하는 영화가 있었는데 그런것 처럼</p>\n<p data-ke-size=\"size16\">마지막 끝까지 보내면 확실히 반대방향으로 올것 같긴합니다.</p>\n<p data-ke-size=\"size16\">빠떼리아저씨와 k-베터리 투자를 진행했지만<br />지금은 정말 앞이 보이지 않을만큼 어두운 시점입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=PPvw_bWsPGU\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=PPvw_bWsPGU</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=PPvw_bWsPGU\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/Euxkw/hyYIaCQSrb/4ook56hMUWJbZvNaveyKe0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/ulEG3/hyYH7eXAvb/VcBJQXX01BtXfulFOIgZF0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"미국 ESS 배터리 중국사 제외 움직임, 포스코 양극재 리튬 현황\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/PPvw_bWsPGU\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">미국은 최근까지도 중국 베터리로 ESS 를 사용하고 있습니다.<br />물론 저렴해서 사용하는 것이구요</p>\n<p data-ke-size=\"size16\">k-베터리와 미국 정부는 지속적으로 안보문제로 중국 베터리를 쓰지말라고 말려오고 있었는데</p>\n<p data-ke-size=\"size16\">엔페이즈 에너지는 대안도 없이 중국 베터리를 사용하고 <br />우리가 징징 거리면 또 연기해주겠지라는 생각을 해고 잇었군요.</p>\n<p data-ke-size=\"size16\">그런 계획은 결국 절단 났습니다.</p>\n<p data-ke-size=\"size16\">빠떼리아저씨의 시나리오 대로 정부는 댓가를 치르더라도 중국의 희귀 금속을 막을꺼라는 주장은 사실로 나타난 첫 사례입니다. 포드도 이상한 후회 방식으로 중국 베터리를 사용하려는 시도를 계속 하고 있었는데 이런 시도 안할 것 같군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size26\">미국이 승리하는 시나리오</h2>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">1. 중국의 나락간 인건비를 휴머노이드 로봇을 극복합니다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">생산성의 향상이라는건데 민주나 자유 들어가면 이런거 잘합니다.<br />가능성은 있어보입니다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">2. 인간의 수명을 비약적으로 발전시킵니다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">위대한 사람이 오래 살아버리면 경쟁력이 생깁니다.<br />수명이라도 늘려봅니다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">중국은 착취가 일상이 될꺼라 별수 없이 수명이 줄어들것입니다.<br />지금도 불량 식품과 전염병이 끊이지 않으니 갈아넣을 인력이 줄어든다면<br />경쟁력이 줄어드는 것입니다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">3. 중국인들이<span>&nbsp;</span><span style=\"text-align: start;\">상대적 빈곤을 느끼도록</span><span>&nbsp;</span>여러 국가를 함께 발전시킵니다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">위구르의 예는 그들이 가난하기 때문에 흡수되다보니 없어지는 것입니다.<br />싱가포르 말레이시아 등은 중국인으 끊임없이 이미가지만 사라지거나 먹히지 않았습니다.<br />중국인이 많아졌을뿐 중국공산당 것이 되지는 않았던 것이죠.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">잘 사는 수 밖에 없습니다.<br />본토가 지옥도라면 중공 스파이라도 본토로 돌아가고 싶지는 않을 것입니다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">마지막을 k-베터리의 생존 방법은</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">오직 미국이 이 싸음에서 이기는 방법 뿐이라고 보입니다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">미국이 이기려면 방법은 오직 하나</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">\"이대로 가면 중국이 다 먹는다\" 라는 공포를 불러 일으키는 방법 뿐</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">그래야 경재적으로 맞지 않은 비싼 제품을 저절도 사서 쓰게 될 것입니다.<br />이 방법은 보통의 상황에서는 발생하지 않을 것입니다.</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=asENcqlYEjg\n\n\n\n존버나드\n처음엔 중국 찬양하길레 듣기도 싫었는데 2년쯤 지나보니 그의 말이 맞았습니다.\n그들은 어마어마한 경쟁력을 갖고 있습니다.\n이것은 무시하거나 애국주의로 이길 수 있는 수준이 아닙니다.\n \n영상 내용 요약\n트럼프의 몰아붙이는 행동은 취소되고 있으며\n중국은 자율주행에 더 큰 드라이브를 걸고 있습니다.\n최근 사오미 전기차 차율주행 사고는 과장광고도 있고 소비자의 맹신도 섞여서 발생했다고 하구요\n광고에 자율주행 좋다는 내용과\n소비자도 그걸 맹신하고 아예 손도 안덴 결과\n중국은 어차피 인권같은계념이 없기 때문에 과장광고해도 막을 곳도 없습니다.\n그리고 자율주행이나 베터리의 발전을 보면 폭발하고 불나고 사고나고 그걸 고쳐온 과정이 발전을 이끌었습니다.\n미국에서는 시도해볼 수도 없는 사람을 갈아넣는 방법을 중국은 사용하고 있습니다.\n이것이 바로 경쟁력이고 함난한 기술 격차를 이런 방식으로 따라 잡는 다는걸 알았습니다.\n중공의 100년 계획\n영상: https://www.youtube.com/watch?v=MuiO7h9s96c&t=1032s\n\n\n\n5-10년 해도 결론이 안날꺼 같은 문제는 100년 - 200년으로 넓히면 방법이 있습니다.\n중공은 충분히 그런 능력이 있기 때문에 계획만 잘 세웠다면 실현 될 것입니다.\n엄청난 기간을 버팀으로서 말이죠\n100년쯤의 과정중에 미국이 한번만 더 금융위기 같은 사태를 맞으면\n중국이 더 빨리 역전할 수 있을 것입니다.\n인간의 탐욕을 본다면 이런일은 10년에 한번즘은 충분히 일어날 것입니다.\n \n과거의 나\n저는 그전까진 K-베터리 추종자였지만 지금은 아닙니다.\n트럼프는 관세의 악영향으로 더이상 추친을 못하고 후퇴했습니다.\n이제 장난으로라도 다시 진행하려고하면 어마어마한 시장 충격을 감당해야하고\n본인도 미국의 성장을 신경쓰는 것으로 보입니다.\n처음엔 미란 보고서 처럼 미국 피흘리면서 중국을 친다는걸로 알았으나\n국채 터지니까 바로 방향바꾸는거 보고 아니라는걸 알았습니다.\n중국의 현재 상황\n유튜브에 중국영상을 보면 서민들은 사업이 다망하고 집값이 엉망이 되어 집산사람도 망하고\n일거리를 못찾아 우는 졸업자들 영상을 많이 볼 수 있습니다.\n이걸보고 \"이러다 망하겠네\" 라고 생각하는건 1차원적인 생각입니다.\n그 덕분에 인건비가 나락으로가서 글로벌 경쟁력이 생겼습니다.\n중공 체재를 유지하기위해서는 부자가 많은것 보다 가난한 사람이 많은게 통제하기 쉬웠던 것입니다.\n\"살려만 드릴께\" 를 시전하면 인민들은 말을 들을 수 밖에 없겠죠\n혁명의 역사를 보면 알겠지만 혁명한다고 바로 좋아지지 않습니다.\n혼돈의 시기 3년~10년 정도를 살아남아야하는데\n재력이 충분하지 않은 서민들은 그것도 쉽지 않습니다.\n프랑스 형명 당시에는 빵값을 제어하지 못해 혁명을 했음에도 경제는 파탄이 났었고\n외부에서 약해진 프랑스를 공격하려는 부분도 막아야해서 서민의 생존은 거의 확율 싸움이였습니다.\n(대량의 목슴을 갈아넣고 운이 좋은 사람은 살아남는 수준)\n마윈때 보시면 알겠지만 점점 부자가되기 시작하니까 자신들의 목소리를 내기 시작합니다.\n이러면 중국이 민주화가 되는 길이니 \n중공은 이것을 당연히 막아야했던 것이죠\n \n정신 못차린 한국\n트럼프는 첫번째 임기때 공무원들이 말을 듣지않아 강력한 계획을 실행하지 못했었습니다.\n공무원들은 4년만 버티면 타음 사람이 집권할테고 그사람은 트럼프보단 약할꺼라고 생각했던 것이죠.\n그래서 이번엔 임기 시작부터  DOGE 그룹을 만들어 공무원들을 마구 쳐냈습니다.\n한국은 정치인 그룹과 공무원 그룹이 권력을 따로 잡고 있습니다.\n공무원 그룹은 부동산을 유지하려는 세력인데 이들은 국가가 어떻게되든 부동산 값을 띄우려고 하는 목표가 있습니다.\n이번 오세훈 서울 시장의 토지러개허가 해줬다 몇일만에 바로 다시 막은 사건이 있었습니다.\n영상: https://www.youtube.com/watch?v=qnIJsYOvBSM&t=559s\n\n\n\n이런일은 말도 안되는 조치인데 서울시장 말듣고 부동산 뛰어든 사람들은 미쳐버리는 결정이기 때문입니다.\n부동산 거래비용이 어마어마한 곳을 이런식으로 해버리면 거래취소를 위한 손실이 어마어마할 것입니다.\n제 추측으로는 공무원 그룹이 서울시장에게 사탕발린 말을 해서 무능한 오세훈이 \"좋은거네 그럼 간다\" 를 시전했는데\n부동산이 급등해 내 책임이 될것이 두려워 취소해버린거 같습니다.\n이 이벤트를 통해 저는 부동산을 띄우려는 공무원 세력이 있다는것을 눈치 챘습니다.\n정치인 그룹의 목표는 의원내각제를 실행하는 것입니다.\n대통령을 없애고 정치인들 끼리 짬짜미 해서 총리를 뽑겠다는 30년 숙원 사업입니다.\n이러면 유권자의 힘을 줄일 수 있기 때문에 정치인으로서는 좋은 방향입니다.\n문제는 이 작읍을 위해 중공이랑 손을 잡아야하는 것입니다.\n한국의 인구수를 줄이고 외국인의 투표수를 늘리는 작업을 20년에 걸처 해야 했습니다.\n결국 그들은 목표를 이뤘지만 한국에는 한국 사람이 줄게 되었죠\n애국에 대한 힘을 줄여야하니 당연히 k-베터리 같은걸 부양해서도 안되고 부양하고 싶지도 않았던 것입니다.\n \nK-베터리의 미래\n이런 어중간한 상황에 k-베터리 살아나는 시나리오는 생각하기 어렵습니다.\n바닥까지 갔다 방향전환하는게 맞습니다.\n그 바닥을 알리는 신호로서 중국의 부흥이 필요합니다.\n중국의 첨단기술의 경쟁력이 미국을 앞지르고\n사람들이 경악해서 대체 수단을 찾는 과정에서 k-베터리가 뜨는 것이죠\n\"이대로 가면 중국이 다 먹는게 확실하다\" 라는 공포\n지구 온난화 문제가 2000년도 부터 있었죠 25년이나 지난 지금도 온난화는 있지만 사람들은 공포를 느끼지 못하고 있습니다. 불편함 때문에 전기차를 타지 않는 다는 것이 그것입니다.\n하지만 벌이 죽고 실물의 수정이 줄어들고 환경 변화로 심각한 일이 벌어지고\n\"이제는 되돌릴 수 없습니다\" 라는 공포가 확산되면 \n그때서야 불편해도 전기차 타야지 가 되고\n복지 예산을 포기하고 탄소포집에 돈을 밀어 넣는 중대한 결정을 할 것입니다.\n중격요법\n공포영화에서 본거 같은데 미친사람을 한번 더 미치게 만들면 정상으로 돌아오지 않을까 하는 가설을 실행하는 영화가 있었는데 그런것 처럼\n마지막 끝까지 보내면 확실히 반대방향으로 올것 같긴합니다.\n빠떼리아저씨와 k-베터리 투자를 진행했지만\n지금은 정말 앞이 보이지 않을만큼 어두운 시점입니다.\n \n영상: https://www.youtube.com/watch?v=PPvw_bWsPGU\n\n\n\n미국은 최근까지도 중국 베터리로 ESS 를 사용하고 있습니다.\n물론 저렴해서 사용하는 것이구요\nk-베터리와 미국 정부는 지속적으로 안보문제로 중국 베터리를 쓰지말라고 말려오고 있었는데\n엔페이즈 에너지는 대안도 없이 중국 베터리를 사용하고 \n우리가 징징 거리면 또 연기해주겠지라는 생각을 해고 잇었군요.\n그런 계획은 결국 절단 났습니다.\n빠떼리아저씨의 시나리오 대로 정부는 댓가를 치르더라도 중국의 희귀 금속을 막을꺼라는 주장은 사실로 나타난 첫 사례입니다. 포드도 이상한 후회 방식으로 중국 베터리를 사용하려는 시도를 계속 하고 있었는데 이런 시도 안할 것 같군요\n \n미국이 승리하는 시나리오\n1. 중국의 나락간 인건비를 휴머노이드 로봇을 극복합니다.\n생산성의 향상이라는건데 민주나 자유 들어가면 이런거 잘합니다.\n가능성은 있어보입니다.\n2. 인간의 수명을 비약적으로 발전시킵니다.\n위대한 사람이 오래 살아버리면 경쟁력이 생깁니다.\n수명이라도 늘려봅니다.\n중국은 착취가 일상이 될꺼라 별수 없이 수명이 줄어들것입니다.\n지금도 불량 식품과 전염병이 끊이지 않으니 갈아넣을 인력이 줄어든다면\n경쟁력이 줄어드는 것입니다.\n3. 중국인들이 상대적 빈곤을 느끼도록 여러 국가를 함께 발전시킵니다.\n위구르의 예는 그들이 가난하기 때문에 흡수되다보니 없어지는 것입니다.\n싱가포르 말레이시아 등은 중국인으 끊임없이 이미가지만 사라지거나 먹히지 않았습니다.\n중국인이 많아졌을뿐 중국공산당 것이 되지는 않았던 것이죠.\n잘 사는 수 밖에 없습니다.\n본토가 지옥도라면 중공 스파이라도 본토로 돌아가고 싶지는 않을 것입니다.\n \n마지막을 k-베터리의 생존 방법은\n오직 미국이 이 싸음에서 이기는 방법 뿐이라고 보입니다.\n미국이 이기려면 방법은 오직 하나\n\"이대로 가면 중국이 다 먹는다\" 라는 공포를 불러 일으키는 방법 뿐\n그래야 경재적으로 맞지 않은 비싼 제품을 저절도 사서 쓰게 될 것입니다.\n이 방법은 보통의 상황에서는 발생하지 않을 것입니다.",
        "guid": "http://serverdown.tistory.com/1288",
        "categories": [
          "투자",
          "로봇",
          "이차전지",
          "자율주행",
          "전기차",
          "중국투자"
        ],
        "isoDate": "2025-04-26T05:00:12.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "AI 강의 팔이의 실체",
        "link": "http://serverdown.tistory.com/1287",
        "pubDate": "Sat, 26 Apr 2025 10:35:08 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1287#entry1287comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"581\" data-origin-height=\"265\"><span data-url=\"https://blog.kakaocdn.net/dn/EKBaR/btsNCqbrXo5/NcJUJxMOgytdeS1urRKHd1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/EKBaR/btsNCqbrXo5/NcJUJxMOgytdeS1urRKHd1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/EKBaR/btsNCqbrXo5/NcJUJxMOgytdeS1urRKHd1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FEKBaR%2FbtsNCqbrXo5%2FNcJUJxMOgytdeS1urRKHd1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"581\" height=\"265\" data-origin-width=\"581\" data-origin-height=\"265\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\">신기술이 나오면 제일 먼저 자리잡는 건 사기 인가 보다.</h2>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=s3PfQOF2-So\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=s3PfQOF2-So</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=s3PfQOF2-So\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cykEvb/hyYFDeAydd/FOpPsIFPlKhSt03yFS2Kek/img.jpg?width=1280&amp;height=720&amp;face=48_236_672_496,https://scrap.kakaocdn.net/dn/cF1eq1/hyYFF4xsWp/hmrIbcU7WiNW9CxAda3GE0/img.jpg?width=1280&amp;height=720&amp;face=48_236_672_496\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"AI 강의팔이의 끝판왕. 5년 동안 사기친 결말은..?\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/s3PfQOF2-So\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">머니 해커로 찾으면 영상이 많이 나옵니다.</p>\n<p data-ke-size=\"size16\">70만원짜리 강의를 사면 자동으로 돈버는 법이 들어있다는 식이라고 합니다.</p>\n<p data-ke-size=\"size16\">ai 자동 블로그 작성<br />ai 자동 쇼츠 제작</p>\n<p data-ke-size=\"size16\">누가 사서 따라해봤나본데요<br />하지만 강의가 너무 부실해서 쓸 수 없었나봅니다.</p>\n<p data-ke-size=\"size16\">그래서 고소 들어가 버렸다는 이야기입니다.</p>\n<p data-ke-size=\"size16\">블로그 자동 글쓰기 만들고 있었는데 ... 안되는거였다니 ㅠㅠ<br />충격입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "신기술이 나오면 제일 먼저 자리잡는 건 사기 인가 보다.\n영상: https://www.youtube.com/watch?v=s3PfQOF2-So\n\n\n\n머니 해커로 찾으면 영상이 많이 나옵니다.\n70만원짜리 강의를 사면 자동으로 돈버는 법이 들어있다는 식이라고 합니다.\nai 자동 블로그 작성\nai 자동 쇼츠 제작\n누가 사서 따라해봤나본데요\n하지만 강의가 너무 부실해서 쓸 수 없었나봅니다.\n그래서 고소 들어가 버렸다는 이야기입니다.\n블로그 자동 글쓰기 만들고 있었는데 ... 안되는거였다니 ㅠㅠ\n충격입니다.",
        "guid": "http://serverdown.tistory.com/1287",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2025-04-26T01:35:08.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "2025-04 현재 플라자 합의 비슷한 일이 일어나고 있다.",
        "link": "http://serverdown.tistory.com/1286",
        "pubDate": "Fri, 25 Apr 2025 22:14:35 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1286#entry1286comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"301\" data-origin-height=\"167\"><span data-url=\"https://blog.kakaocdn.net/dn/CdIT8/btsNAhmMrSp/OuIQkXKAKZLv4i8yzcZ4Bk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/CdIT8/btsNAhmMrSp/OuIQkXKAKZLv4i8yzcZ4Bk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/CdIT8/btsNAhmMrSp/OuIQkXKAKZLv4i8yzcZ4Bk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FCdIT8%2FbtsNAhmMrSp%2FOuIQkXKAKZLv4i8yzcZ4Bk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"301\" height=\"167\" data-origin-width=\"301\" data-origin-height=\"167\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=L7W702-Z8dE\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=L7W702-Z8dE</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=L7W702-Z8dE\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/czEE8x/hyYH6mOqL8/9GBkJO66H5tuXxZrKQ0drK/img.jpg?width=1280&amp;height=720&amp;face=250_110_1108_276,https://scrap.kakaocdn.net/dn/P8x1D/hyYFBAZlIP/jpgC4w5t4NKu26dcpX5XkK/img.jpg?width=1280&amp;height=720&amp;face=250_110_1108_276\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"'관세 폭탄' 트럼프라서가 아니다...미국의 조정 사이클 [월간 오건영 1부]\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/L7W702-Z8dE\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">플라자 합의는 1985년 9월 22일에 있었습니다.</p>\n<p data-ke-size=\"size16\">물론 이 당시에는 플라자 합의의 내용이 알려지지 않았고 그냥 회의했다 정도만 알려졌습니다.</p>\n<p data-ke-size=\"size16\">1년정도 지나 분석해보니 일본의 환율이 어마어마하게 내려가게 되었습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">이번에도</h2>\n<p data-ke-size=\"size16\">현재도 미국은 관세를 통한 엄청난 영향을 보여줬었고 90일 연기한 상태입니다.</p>\n<p data-ke-size=\"size16\">힘을 보여주고 이제 합의 하자는 것이죠</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">미국의 단기채권을 장기 채권으로 전환이 시급한 문제라 이것을 진행하는게 아닌가 하는 추측을 영상에서 합니다.</p>\n<p data-ke-size=\"size16\">예를들어 한국이가서 우리가 채권 사줄태니 중국의 2차전지를 막아달라고 한다면 한국이 2차전지 시장을 크게 먹을 수 있을 것입니다.</p>\n<p data-ke-size=\"size16\">반대로 중국이 와서 한국보다 더 많은 국채를 해결해준다면 미국은 중국의 베터리도 받아들일 수 있을 것입니다.</p>\n<p data-ke-size=\"size16\">물론 시진핑은 그러지 않겠지만 차기 세력은 그런 결정을 할 수도 있겠죠</p>\n<p data-ke-size=\"size16\">현재도 시진핑은 우리는 협상같은거 안한도고 하지만<br />트럼프는 현재 협의 중이라고 밝힌 상태입니다.</p>\n<p data-ke-size=\"size16\">바이든이 발행한 미국의 단기채권을 장기채권으로 돌려면 미국은 부채의 짐에서 탈출이 가능합니다.</p>\n<p data-ke-size=\"size16\">영상에서는 이 문제가 해결될 수도 있지만<br />반 미국 세력이 생겨나 그들만의 단톡방을 파게될 가능성도 있다고 봅니다.</p>\n<p data-ke-size=\"size16\">항상 미국이 이긴다고 봐서는 안되고 다양한 자산군에 분산해 두는게 중요할 것같습니다.</p>\n<p data-ke-size=\"size16\">약달러로 간다면 미국주식이 오르더라도 손실이 날 수도 있으니 안심해선 안되고&nbsp;</p>\n<p data-ke-size=\"size16\">적당히 오르면 적당히 빠진 자산을 채워넣는 일을 해야할 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=L7W702-Z8dE\n\n\n\n \n \n플라자 합의는 1985년 9월 22일에 있었습니다.\n물론 이 당시에는 플라자 합의의 내용이 알려지지 않았고 그냥 회의했다 정도만 알려졌습니다.\n1년정도 지나 분석해보니 일본의 환율이 어마어마하게 내려가게 되었습니다.\n \n \n이번에도\n현재도 미국은 관세를 통한 엄청난 영향을 보여줬었고 90일 연기한 상태입니다.\n힘을 보여주고 이제 합의 하자는 것이죠\n \n미국의 단기채권을 장기 채권으로 전환이 시급한 문제라 이것을 진행하는게 아닌가 하는 추측을 영상에서 합니다.\n예를들어 한국이가서 우리가 채권 사줄태니 중국의 2차전지를 막아달라고 한다면 한국이 2차전지 시장을 크게 먹을 수 있을 것입니다.\n반대로 중국이 와서 한국보다 더 많은 국채를 해결해준다면 미국은 중국의 베터리도 받아들일 수 있을 것입니다.\n물론 시진핑은 그러지 않겠지만 차기 세력은 그런 결정을 할 수도 있겠죠\n현재도 시진핑은 우리는 협상같은거 안한도고 하지만\n트럼프는 현재 협의 중이라고 밝힌 상태입니다.\n바이든이 발행한 미국의 단기채권을 장기채권으로 돌려면 미국은 부채의 짐에서 탈출이 가능합니다.\n영상에서는 이 문제가 해결될 수도 있지만\n반 미국 세력이 생겨나 그들만의 단톡방을 파게될 가능성도 있다고 봅니다.\n항상 미국이 이긴다고 봐서는 안되고 다양한 자산군에 분산해 두는게 중요할 것같습니다.\n약달러로 간다면 미국주식이 오르더라도 손실이 날 수도 있으니 안심해선 안되고 \n적당히 오르면 적당히 빠진 자산을 채워넣는 일을 해야할 것입니다.",
        "guid": "http://serverdown.tistory.com/1286",
        "categories": [
          "유튜브",
          "미국",
          "플라자합의"
        ],
        "isoDate": "2025-04-25T13:14:35.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": []
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": [
      {
        "creator": "megayuchi",
        "title": "기아플렉스 ev6 48시간 대여 후기.",
        "link": "https://megayuchi.com/2025/04/25/%ea%b8%b0%ec%95%84%ed%94%8c%eb%a0%89%ec%8a%a4-ev6-48%ec%8b%9c%ea%b0%84-%eb%8c%80%ec%97%ac-%ed%9b%84%ea%b8%b0/",
        "pubDate": "Fri, 25 Apr 2025 08:01:24 +0000",
        "content:encodedSnippet": "기아플렉스로 48시간 대여한 ev6 반납완료.\n원래대로라면 내일 오전 10시 반납이지만 더 운행할 일이 없는데 폭탄을 안고 있을 이유가 없다. 작은 상처라도 나면 내가 변상해야 하므로 스트레스 받기 싫어서 조기 반납했다.\n차는 좋았다. 예상대로 좋았고 나한테 잘 맞았다.\n다만 제주도에서 렌트하는 것과는 달리 100%면책 보험같은게 없는게 큰 문제다.\n자기부담금 50만원의 대인/대물 보험만 있고 여기서 사이드미러, 휠, 타이어 등은 보상이 안된다. 문콕이나 범퍼 스크래치같은건 어차피 수리비 50이 안되는 경우가 대부분이므로 사실상 보험처리가 안된다. 이런 손상의 경우 고객한테 수리비가 그대로 청구된다.\n검색해보면 ‘내가 한거 아닌것 같은데 나중에 수리비 청구서 받았다’는 글이 몇 개 있다. 인기가 많아서 차량 예약이 힘들다는데 광고성 훼이크 후기만 있지 제대로 된 후기는 별로 없다.\n차를 수령했을때 배송기사분이 사진을 찍으면서 차량에 문제가 없다고 말씀하셨는데 혹시 몰라서 내 쪽에서도 사진을 찍어뒀었다. 몇 시간 뒤에 pc에서 사진을 확인해보니 미세한 문콕이 2개 있었다. 기아플렉스에서 보내온 문자에 보면 차량 수령시 스크래치등을 발견하면 사진을 촬영해서 고객센터 이메일로 보내달라고 적혀있다. 따라서 차량 수령시 내쪽에서 촬영한 사진을 설명 적어서 대표이메일로 보냈다.\n애초에 이런건 차량 출고할 때 검수해서 다음번 사용자한테 고지해줬어야 하는거 아닌가? 이거 내가 사진 안찍어뒀으면 내 책임으로 돌아올 수 있는 건이다.\n나와 무관한 원래 있던 손상으로도 덤태기 쓸까봐 스트레스를 받는데 대여기간 중에 문콕테러를 당하거나 돌빵이라도 맞으면 어찌하나? \n어쨌든 최대한 조심해서 문콕 안당하고 스크래치 안만들고 마지막 확인 촬영까지 했고 오후 4시30분에 배송기사분이 차를 인수해갔다.\n이런건 결국 완전면책 제도가 없으면 불안감이 사라질 수가 없다. 내가 아무리 조심해도 문콕 테러나 돌빵 같은건 100% 피할 수가 없으니까.\n그런고로 다시는 이용하지 않을 생각.\n통장잔고 20억 되면 내 명의로 뽑고, 아니면 그냥 집차나 가끔 타고 제주도 가서 렌트나 해야지.",
        "dc:creator": "megayuchi",
        "comments": "https://megayuchi.com/2025/04/25/%ea%b8%b0%ec%95%84%ed%94%8c%eb%a0%89%ec%8a%a4-ev6-48%ec%8b%9c%ea%b0%84-%eb%8c%80%ec%97%ac-%ed%9b%84%ea%b8%b0/#respond",
        "content": "기아플렉스로 48시간 대여한 ev6 반납완료. 원래대로라면 내일 오전 10시 반납이지만 더 운행할 일이 없는데 폭탄을 안고 있을 이유가 없다. 작은 상처라도 나면 내가 변상해야 하므로 스트레스 받기 싫어서 조기 반납했다. 차는 좋았다. 예상대로 좋았고 나한테 잘 맞았다. 다만 제주도에서 렌트하는 것과는 달리 100%면책 보험같은게 없는게 큰 문제다. 자기부담금 50만원의 대인/대물 보험만 있고 여기서 사이드미러, 휠, &#8230; <a class=\"more-link\" href=\"https://megayuchi.com/2025/04/25/%ea%b8%b0%ec%95%84%ed%94%8c%eb%a0%89%ec%8a%a4-ev6-48%ec%8b%9c%ea%b0%84-%eb%8c%80%ec%97%ac-%ed%9b%84%ea%b8%b0/\">More <span class=\"screen-reader-text\">기아플렉스 ev6 48시간 대여&#160;후기.</span></a>",
        "contentSnippet": "기아플렉스로 48시간 대여한 ev6 반납완료. 원래대로라면 내일 오전 10시 반납이지만 더 운행할 일이 없는데 폭탄을 안고 있을 이유가 없다. 작은 상처라도 나면 내가 변상해야 하므로 스트레스 받기 싫어서 조기 반납했다. 차는 좋았다. 예상대로 좋았고 나한테 잘 맞았다. 다만 제주도에서 렌트하는 것과는 달리 100%면책 보험같은게 없는게 큰 문제다. 자기부담금 50만원의 대인/대물 보험만 있고 여기서 사이드미러, 휠, … More 기아플렉스 ev6 48시간 대여 후기.",
        "guid": "http://megayuchi.com/?p=7092",
        "categories": [
          "Pub",
          "ev6",
          "렌트카",
          "기아플렉스"
        ],
        "isoDate": "2025-04-25T08:01:24.000Z"
      }
    ]
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "코드 품질 개선 기법 9편: 왔던 길을 되돌아가 보자",
        "link": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-9",
        "pubDate": "Fri, 25 Apr 2025 02:10:00 GMT",
        "content": "안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 회사는 높은 개발 생산성을 유지하기 위해 코드 품질 및 개발 문화 개선에 힘쓰고...",
        "contentSnippet": "안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 회사는 높은 개발 생산성을 유지하기 위해 코드 품질 및 개발 문화 개선에 힘쓰고...",
        "guid": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-9",
        "isoDate": "2025-04-25T02:10:00.000Z"
      },
      {
        "title": "LY Corporation의 프런트엔드 기술 동향을 알아보자! State of LY Frontend 2024 실시 보고서",
        "link": "https://techblog.lycorp.co.jp/ko/state-of-ly-frontend-2024-report",
        "pubDate": "Wed, 23 Apr 2025 07:30:00 GMT",
        "content": "LY Corporation에서는 2024년 10월에 사내 웹 프런트엔드 개발에 관여하는 사내 구성원을 대상으로 본인이 생각하는 2024년의 웹 프런트엔드 관련 근황 및 관련 툴 이...",
        "contentSnippet": "LY Corporation에서는 2024년 10월에 사내 웹 프런트엔드 개발에 관여하는 사내 구성원을 대상으로 본인이 생각하는 2024년의 웹 프런트엔드 관련 근황 및 관련 툴 이...",
        "guid": "https://techblog.lycorp.co.jp/ko/state-of-ly-frontend-2024-report",
        "isoDate": "2025-04-23T07:30:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": [
      {
        "creator": "호돌맨",
        "title": "배드맨",
        "link": "https://hodolman.tistory.com/71",
        "pubDate": "Tue, 29 Apr 2025 22:16:49 +0900",
        "author": "호돌맨",
        "comments": "https://hodolman.tistory.com/71#entry71comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC000155x4.jpg\" data-origin-width=\"2420\" data-origin-height=\"3000\"><span data-url=\"https://blog.kakaocdn.net/dn/cHRQdA/btsNECdf4si/IdYkGkmGrg1Yaz1X8cxg2k/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cHRQdA/btsNECdf4si/IdYkGkmGrg1Yaz1X8cxg2k/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cHRQdA/btsNECdf4si/IdYkGkmGrg1Yaz1X8cxg2k/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcHRQdA%2FbtsNECdf4si%2FIdYkGkmGrg1Yaz1X8cxg2k%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"2420\" height=\"3000\" data-filename=\"DSC000155x4.jpg\" data-origin-width=\"2420\" data-origin-height=\"3000\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">기변하고</p>\n<p data-ke-size=\"size16\">소사역 부근에서 촬영했습니다.</p>",
        "contentSnippet": "기변하고\n소사역 부근에서 촬영했습니다.",
        "guid": "https://hodolman.tistory.com/71",
        "categories": [
          "사진",
          "배드맨",
          "빛과어둠"
        ],
        "isoDate": "2025-04-29T13:16:49.000Z"
      }
    ]
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "스토커와 같이 집착해라",
        "link": "https://www.thestartupbible.com/2025/04/be-obsessed-like-a-stalker-on-your-product-and-customers.html",
        "pubDate": "Sun, 27 Apr 2025 21:36:00 +0000",
        "content:encodedSnippet": "공식 라이선스 스포츠용품을 판매하는 Fanatics라는 미국 회사가 있다. 한국에서는 잘 알려지지 않았지만, 미국인이라면 Fanatics 사이트 또는 이 회사가 운영하는 수많은 이커머스 플랫폼에서 뭐라도 한 번은 사 봤을 것이다. 미국 모든 대학교의 공식 라이선스 제품을 판매하고 있고, NBA, NFL, MLB 등 프로 스포츠 공식 라이선스 제품도 다 판매하는, 기업가치 약 40조 원의 거대한 이커머스 회사이다.\n나도 여기서 돈을 꽤 많이 썼는데, 운동용품과 굿즈를 좋아하는 사람이라면 Fanatics.com에서 한 시간은 거뜬히 체류할 수 있다. 그만큼 다양한 제품이 있고, 사이트도 잘 만들었다. 얼마 전에 이 회사의 창업가 마이클 루빈의 인터뷰를 들었는데, 다른 모든 창업가들의 이야기와 비슷하게, 이분의 인터뷰도 너무 재미있게 들었다.\n감명 깊게 들었던 건 이 창업가의 집착이었는데, 뭐를 하던지 고객과 제품에 대한 거의 스토킹 수준의 집착으로 남보다 더 빠른 학습 커브를 만든 내용이 머릿속에 남는다. 특히 기억에 남는 부분은, 시장에 어떤 신발을 판매하면 가장 인기 있고, 가장 많이 팔 수 있을지를 판단하기 위해서 아침부터 저녁까지 하루 종일 밖에서 길거리에 다니는 사람들이 뭘 신고 다니는지, 그리고 어떤 신발을 신는지 관찰했다고 한다. 이렇게 하루 종일 신발만 보니 시장에 대한 감이 생기고, 어떤 발/다리 모양이 어떤 신발을 많이 착용하는지 직관적으로 이해했다고 한다. 이 짓을 수개월 동안 해서 목디스크가 생겼다는 웃픈 이야기를 했는데, 이 일화는 내가 평생 기억할 것 같다.\n몇 달 전에 ‘고객에게 미친 사람들’이라는 글에서 이와 비슷하게 고객의 목소리에 집착하는 창업가에 대한 이야기를 한 적이 있는데, 솔직히 이런 창업가들이 점점 희귀해진다는 생각을 최근에 많이 한다. 요새 내가 만나는 창업가들은 과거 대비 학벌도 더 좋고, 영어도 더 잘하고, 개발도 더 잘하고, 펀딩도 더 잘해서 확실히 high quality 창업가들이긴 하지만, Fanatics 창업가와 같은 스토커 수준의 집착은 오히려 점점 더 찾아보기 힘들다.\n스타트업은 처음부터 기울어진 운동장에서 무서운 상대방과 불공평한 경기를 해야 한다. 이 우승 확률이 낮은 경기에서 그나마 확률을 높이기 위해선, 완벽한 제품을 만들어야 하고, 이 제품을 사업으로 키우기 위한 자금을 확보해야 하고, 이 사업으로 기울어진 운동장에서 이기기 위해 좋은 인재를 확보해야 한다. 이 모든 걸 운동장의 반대편에 있는 상대방이 현재의 일등 위치에 도달하기 위해 걸렸던 시간보다 훨씬 더 빨리 압축해서 해야 한다. 결론은 매사에 열심히 해야 하고, 매사에 집착해야 한다. Fanatics 대표가 하루 종일 대가리를 땅에 처박고 사람들의 신발만 봤던 그 자세로 스토커같이 집착해야 한다.\n우리 회사 임직원들은 우리가 만드는 제품에 대해서 이렇게 하루 종일 생각하는가? 우리 고객이 뭘 원하는지 알아내기 위해서 스토커와 같은 마인드로 집착하고 있나? 날이 갈수록 경쟁이 심화되고, 기울어진 운동장의 경사는 더 가팔라지는데, 스토커와 같은 마인드로 우리 제품, 고객, 직원, 성공에 집착하지 않으면 매번 지는 경기를 할 것이다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/04/be-obsessed-like-a-stalker-on-your-product-and-customers.html#respond",
        "content": "공식 라이선스 스포츠용품을 판매하는 Fanatics라는 미국 회사가 있다. 한국에서는 잘 알려지지 않았지만, 미국인이라면 Fanatics 사이트 또는 이 회사가 운영하는 수많은 이커머스 플랫폼에서 뭐라도 한 번은 사 봤을 것이다. 미국 모든 대학교의 공식 라이선스 제품을 판매하고 있고, NBA, NFL, MLB 등 프로 스포츠 공식 라이선스 제품도 다 판매하는, 기업가치 약 40조 원의 거대한 이커머스 회사이다. 나도(...)",
        "contentSnippet": "공식 라이선스 스포츠용품을 판매하는 Fanatics라는 미국 회사가 있다. 한국에서는 잘 알려지지 않았지만, 미국인이라면 Fanatics 사이트 또는 이 회사가 운영하는 수많은 이커머스 플랫폼에서 뭐라도 한 번은 사 봤을 것이다. 미국 모든 대학교의 공식 라이선스 제품을 판매하고 있고, NBA, NFL, MLB 등 프로 스포츠 공식 라이선스 제품도 다 판매하는, 기업가치 약 40조 원의 거대한 이커머스 회사이다. 나도(...)",
        "guid": "https://www.thestartupbible.com/?p=9435",
        "categories": [
          "Uncategorized",
          "competition",
          "FoundersAtWork",
          "hustle",
          "product",
          "스타트업 바이블 QA"
        ],
        "isoDate": "2025-04-27T21:36:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "언젠가는",
        "link": "https://www.thestartupbible.com/2025/04/your-time-will-come-someday.html",
        "pubDate": "Wed, 23 Apr 2025 20:01:00 +0000",
        "content:encodedSnippet": "2주 전 열렸던 2025년도 마스터스 골프 대회를 드디어 로리 맥길로이가 우승했다. 맥길로이가 2009년도를 시작으로 그동안 17번이나 마스터스에 참가했는데, 탑텐은 여러 번 했고 준우승도 한 번 했지만, 우승은 이번이 처음이었다. 16년 만에 거머쥔 우승 트로피였고, 그 누구보다 우승을 간절히 원했던 선수였기 때문에, 이번 우승은 나에게도 굉장히 감동적으로 다가왔다.\n우승 인터뷰에서 맥길로이가 이런 말을 했다. “과연 내가 이 대회를 우승할 수 있을지 의문하기 시작했다.(I started to wonder if my time would ever come)”. 그가 울먹이면서 이 말을 하는 그 순간, 바로 우리가 투자한 창업가들의 모습이 그대로 떠올랐다.\n맥길로이가 마스터스 대회에 첫 출전 했을 때의 나이가 18살이었다. 엄청난 거물 신인이었고, 그의 기세와 실력은 마스터스 대회를 한 10번은 우승할 수 있을 것 같았다. 첫 출전부터 우승을 노렸지만, 우승하지 못했을 때 그의 심정은, “첫 출전이니까 괜찮아. 나는 젊고 앞으로 기회는 너무 많아. 내년엔 우승해야지.” 정도이지 않았을까 생각한다. 그런데 그다음 해에도 우승에 실패했다. 이번에도 “괜찮아. 난 아직 10대야. 내년에 이기면 돼.”라고, 생각했을 것이다. 하지만, 3년 차도 우승하지 못했고, 그다음에도 못 했고, 수년 동안 계속 우승에 실패했다. 어떤 해엔 우승에 가까이 갔지만, 반면에 형편없는 성적으로 마친 적도 많다. 그러면서 맥길로이도 20대가 됐고, 다시 30대가 됐다. 체력도 예전 같지가 않고, 민첩성과 시력도 떨어지면서 더 이상 “내년에 우승하면 돼.”라는 자신감보단, “내가 과연 우승할 수 있을까?”라는 의구심이 마음을 지배하기 시작했다.\n나는 맥길로이는 개인적으로 모르지만, 그가 지난 17년 동안 마스터스 대회에 대해서 느꼈던 이 감정의 변화는 아주 정확하게 이해한다. 나도 스트롱을 운영하면서 비슷한 과정을 겪었고, 지금 이 순간에도 우리가 투자한 창업가들이 맥길로이가 거친 과정을 그대로 경험하고 있기 때문이다.\n먼저, 스트롱 이야기를 해보자. 2012년도에 우린 1호 펀드를 만들었고, 2015년도에 2호 펀드를 만들었다. VC를 처음 시작할 땐, TechCrunch나 WSJ에서 읽는 것처럼, 우리도 좋은 회사에 투자해서 50배, 100배의 수익을 만들 수 있다는 자신감과 순진한 희망으로 가득 차 있었다. 투자를 시작하고, 첫 2년이 지났을 땐 “이 회사들은 아직 시간이 걸려. 조금만 더 지나면 엑싯이 한두 개는 나올 거야.”라는 희망과 자신감이 아직 충만했다. 그런데 3년, 그리고 4년이 지나면서 이 희망이 서서히 의구심으로 바뀌기 시작했다. 유니콘이 될 거로 생각했던 투자사들이 점점 더 싹수가 노래 보이면서, 과연 이 중 엑싯이 하나라도 나올지 스스로에게 의문하기 시작했다. 그리고 이 의구심은 시간이 갈수록 점점 더 조바심과 절망감으로 매우 빠르게 바뀌면서 “나는 과연 투자해서 돈을 벌 수 있을까? 나에게도 엑싯이라는게 생길까?”를 의문하기 시작했다. 하지만, 내가 하는 투자가 맞다면 언젠가는 좋은 결실을 볼 것이라는 믿음을 억지로라도 스스로에게 주입하면서 계속 버텼고, 2017년도에 우리가 가장 먼저 투자했던 코빗이 좋은 엑싯을 했다. 이를 계기로 그동안 쌓인 의구심이 다시 자신감과 희망으로 바뀌었고, 이후 우린 계속 좋은 투자를 할 수 있게 됐다. 하지만, 이 과정에서 나는 맥길로이가 겪었던 그 똑같은 희망 -> 의심 -> 절망, 변화의 과정을 거쳤고, 이게 정확히 어떤 감정인지 잘 이해하고 있다.\n우리가 투자한 창업가들도 모두 다 이런 과정을 경험한다. 아마도 대부분 5년 정도 사업하면 좋은 엑싯을 하거나, 회사가 괄목할 만한 성장을 할 것이라는 희망을 품고 창업했을 것이다. 하지만, 사업이라는 게 생각보다 어렵다. 첫 1년은 개고생인데, 이때만 해도 체력도 있고, 희망도 있고, 자신감도 있어서 “한 2년만 더 하면 잘할 수 있을 거야”라는 생각으로 더 열심히 한다. 제품도 열심히 만들고, 펀딩도 열심히 하고, 좋은 사람도 열심히 채용한다. 하지만, 잘 안된다. 제품을 아무리 잘 만들어도 고객은 안 생기고, 수많은 투자자를 만나지만 그 누구도 돈은 안 주고, 아무도 우리 회사에 오려고 하지 않는다. 그래도 계속 희망과 자신감으로 몇 년을 더 버틴다. 딱 일 년만 더 하면 모든 게 잘될 거라는 생각으로. 이 과정을 거치면서 10년이라는 세월이 흐른다. 회사는 안 망했지만, 창업 초기에 꿈꿨던 성장은 아직도 너무 멀리 있고, 이 10년 동안 창업가의 희망은 의구심으로 바뀌면서 “과연 내가 이 사업을 성공시킬 수 있을까?”라는 질문을 스스로에게 매일 하게 된다. 이게 요새 내가 거의 매일 경험하는 상황이다.\n맥길로이가 걸어온 길과 그 감정의 변화를 나는 잘 알기 때문에, 내가 그를 그렇게 좋아하진 않지만, 그의 이번 마스터스 우승은 감동 그 자체였다. 그는 또, “꿈이 있으면 절대로 포기하지 마라. 다시 일어나서 도전해라. 계속 열심히 노력해라. 그러면 꿈을 이룩할 수 있을 것이다.”라는 이야기를 했다. 실은, 이 말은 누구나 다 할 수 있는 너무 뻔한 말이긴 하지만, 이 말을 하는 대부분의 사람은 이 말을 할 자격이 없지만, 맥길로이는 이 말을 할 수 있는 자격을 스스로 얻었다고 생각한다.\n우리 창업가들이 나에게 자주 물어본다. “대표님, 저도 이 미친 짓 한지가 이제 8년째인데요, 제가 과연 이 사업을 성공시킬 수 있을까요?”\n솔직히, 내가 대답하기에 굉장히 부담스럽고 어려운 질문이라서 나도 항상 생각을 많이 하는데, 그럼에도 내 대답은 항상 “지금까지 안 망했으면 뭔가는 제대로 하고 있다고 생각해요. 계속 도전하고, 계속 열심히 하다 보면 언젠가는 기회가 올 것입니다.”이다.\n그 언젠가가 정말로 언제일진 나도 잘 모르겠지만, 언젠가는 할 수 있다는 믿음조차 없다면 우린 이 험난하고 미친 여정을 계속할 수 없을 것이다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/04/your-time-will-come-someday.html#comments",
        "content": "2주 전 열렸던 2025년도 마스터스 골프 대회를 드디어 로리 맥길로이가 우승했다. 맥길로이가 2009년도를 시작으로 그동안 17번이나 마스터스에 참가했는데, 탑텐은 여러 번 했고 준우승도 한 번 했지만, 우승은 이번이 처음이었다. 16년 만에 거머쥔 우승 트로피였고, 그 누구보다 우승을 간절히 원했던 선수였기 때문에, 이번 우승은 나에게도 굉장히 감동적으로 다가왔다. 우승 인터뷰에서 맥길로이가 이런 말을 했다. “과연 내가(...)",
        "contentSnippet": "2주 전 열렸던 2025년도 마스터스 골프 대회를 드디어 로리 맥길로이가 우승했다. 맥길로이가 2009년도를 시작으로 그동안 17번이나 마스터스에 참가했는데, 탑텐은 여러 번 했고 준우승도 한 번 했지만, 우승은 이번이 처음이었다. 16년 만에 거머쥔 우승 트로피였고, 그 누구보다 우승을 간절히 원했던 선수였기 때문에, 이번 우승은 나에게도 굉장히 감동적으로 다가왔다. 우승 인터뷰에서 맥길로이가 이런 말을 했다. “과연 내가(...)",
        "guid": "https://www.thestartupbible.com/?p=9433",
        "categories": [
          "Uncategorized",
          "FoundersAtWork",
          "hustle",
          "sports",
          "Strong"
        ],
        "isoDate": "2025-04-23T20:01:00.000Z"
      }
    ]
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "가정의 달 콘텐츠 ➁ 혼자여도, 여럿이어도. 모든 가족에게 필요한 살림의 셈법",
        "link": "https://blog.toss.im/article/2025may-curation2",
        "pubDate": "Tue, 29 Apr 2025 01:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}다양성은 세상을 구합니다. 유전적 다양성 덕분에 인류는 질병과 기후 변화에 잘 적응할 수 있었고, 생물의 다양성 덕분에 생태계는 무너지지 않고 균형을 유지해 왔어요.\n그렇다면 ‘가족의 다양성’은 어떨까요? 이제는 꼭 엄마, 아빠, 아이가 있어야 가족이라 말하지 않습니다. .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}함께 사는 친구들, 아이를 함께 키우는 공동체, 다양한 형태의 동거 가족까지. 가족의 모습은 점점 다채로워지고 있습니다. 예전처럼 가족 구성원 한 사람이 모든 돌봄 노동을 떠안지 않고, 서로 돌봄을 나누고 함께 하는 방식도 조금씩 자리 잡고 있습니다.\n초고령화, 저출산 같은 문제들이 코앞까지 밀려온 지금, 다양한 가족은 어쩌면 우리의 생존 전략이 되어줄지도 모릅니다. 가정의 달을 맞아, 혼자든, 둘이든, 다섯이든. 세상 모든 가족의 생활을 굴리기 위한 토스피드의 콘텐츠를 모아 소개합니다.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}1. 1인 가구의 생활비는 4인 가구의 4분의 1일까?\n10년 넘게 1인 가구로 살아온 홍인혜(루나파크)와 노윤주(노난). 나를 잘 먹여 살리기 위한 생활비 관리부터, 미래 자산 계획, 혼자라 때때로 찾아오는 노년에 대한 불안은 어떻게 다루는지까지. 혼자 사는 일, 그중에서도 가장 현실적인 돈 이야기를 물었습니다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}.css-1lvcgm8{padding:22px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;border-radius:20px;}\n.css-13ko30i{width:375px;}각자의 속도로 가장이 되는 '충분한 혼자'들\n2. 여성 2인가구 생활의 공동 목표는 재테크\n전 직장 동료였던 토끼와 핫도그는, 2인 가구로 함께 생활하는 사이가 되었습니다. ‘일주일 생활비 10만 원’에 도전하고, 부동산 경매 공부로 전세 계약을 1억 원 넘게 절약해낸 이들. 재테크라는 공통의 목표를 향해, 하나의 경제 공동체로 살기 위해 가장 중요한 것은 무엇일까요?\n\n돈 공부를 하고 나니 보인 것들\n3. 초고령사회, 공동 주거는 가족을 대체할 수 있을까?\n‘나이 들면 마음 맞는 사람들과 집 짓고 살기’ 같은 로망은 지금부터 열심히 돈을 모으면 이루어질까요? 경제적 가치 위주로 돌아가는 부동산 시장에서 인간성과 관계 회복을 고민하는 건축가 박창현과 공인중개사 전명희를 만났습니다. \n\n초고령사회, 도시와 집은 이렇게 달라져야한다 \n4. 공동체로 살면서 돈 욕심이 더욱 커져가요\n도봉산 자락의 4층 집. 이곳에서 20여 가구가 함께 살아갑니다. 1인 가구, 딩크 부부, 아이를 둔 가족가지. 모양은 달라도 생활은 하나로 엮입니다. 야채와 과일을 ‘공구’하고, 아이를 함께 돌보는 이 공동체. 혼자가 익숙한 시대에, 이들이 함께 살기로 한 이유는 무엇일까요?\n\n20가구가 한 집에 살면 어떤 모습일까?\n5. 동거가구의 경제생활에는 무엇이 필요할까?\n동거 가구가 마주하는 경제적 어려움에 대해 생각해본 적 있나요? 동거 가족은 공동명의로 대출을 받거나, 집을 계약하기 어렵습니다. 서로 경제적 분쟁이 생기면, 각자의 권리를 법적으로 지키기도 쉽지 않죠. 가족이라는 이름이 닿지 않는 사각지대에 대해 생각해봅니다.\n\n혼인과 혈연이 아니어도 가족이 될 수 있을까?",
        "content": "다양한 경제공동체를 위한 콘텐츠 큐레이션",
        "contentSnippet": "다양한 경제공동체를 위한 콘텐츠 큐레이션",
        "guid": "https://blog.toss.im/article/2025may-curation2",
        "isoDate": "2025-04-29T01:00:00.000Z"
      },
      {
        "title": "토스, 서울시 밈센터·프리웨일과 경계선지능청년 금융 교육 진행",
        "link": "https://blog.toss.im/article/edu_",
        "pubDate": "Tue, 29 Apr 2025 00:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}4월부터 6개월간 ‘토스의 찾아가는 경제 교육’ 진행… 일상 속 금융 이해력 향상과 피해 예방 지원에 집중\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 서울시 경계선지능인 평생교육 지원센터(이하 밈센터), 사회적 기업 ‘프리웨일’과 경계선지능청년을 대상으로 금융 교육을 진행한다고 29일 밝혔다. 토스는 향후 6개월간 교육을 지속하면서 ‘느린 학습자’라 불리는 경계선지능청년들이 올바른 금융 습관을 길러 스스로 자립할 수 있도록 도울 예정이다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n28일 프리웨일 본사에서 진행된 첫 번째 ‘토스의 찾아가는 경제 교육’에는 프리웨일에서 바리스타로 근무 중인 경계선지능청년 10명이 참여했다. 수업은 초년기 재무 관리의 필요성, 이자의 개념, 신용 관리의 중요성을 다루는 ‘금융 기초 교육’과 최신 피해 사례를 바탕으로 한 ‘금융 사기 예방 교육’으로 구성했다.\n특히 참여자 및 주돌봄자와의 1대1 사전 면담과 설문조사를 통해 실질적으로 도움이 필요했던 내용을 교육에 반영했다는 점에서 호평을 받았다. 실제로 경계선지능청년 대상 금융 사기 피해는 일반인 대비 높은 수준이다. 이에 따라 토스는 교육 전 측정한 참여자의 금융 이해력을 올해 9월까지 50% 상향해 안전한 금융 생활을 이어갈 수 있도록 지원하는 것을 목표로 한다.\n이번 프로그램은 지난해 토스가 12월 서울시 밈센터와 체결한 업무 협약의 연장선으로 기획했으며, 교육은 토스씨엑스가 담당했다. 토스씨엑스는 토스의 비대면 상담 전문 계열사로 취약계층 청년을 위한 다양한 금융 교육 프로그램을 개발해 성공적인 경제적 자립을 지원해 왔다. 그간 축적해 온 노하우를 바탕으로 이번 교육 참여자들에게 개별 컨설팅 및 소그룹 교육, 행동기반평가 등을 통한 맞춤형 금융 관리 솔루션을 제공할 계획이다.\n토스 관계자는 “경계선지능청년은 사회 적응에 어려움을 겪지만, 법적 장애 기준에는 해당하지 않아 필요한 지원을 받기 힘든 사각지대에 놓여 있다”며 “이번 프로그램을 통해 누구나 쉽고 평등한 금융 생활을 영위할 수 있도록 돕고자 하는 토스의 노력이 실질적인 변화를 이끌어내길 기대한다”고 밝혔다.",
        "content": "4월부터 6개월간 ‘토스의 찾아가는 경제 교육’ 진행",
        "contentSnippet": "4월부터 6개월간 ‘토스의 찾아가는 경제 교육’ 진행",
        "guid": "https://blog.toss.im/article/edu_",
        "isoDate": "2025-04-29T00:00:00.000Z"
      },
      {
        "title": "토스, 온라인 디자인 컨퍼런스 ‘심플리시티’ 시즌 4 공개",
        "link": "https://blog.toss.im/article/simplicity4",
        "pubDate": "Mon, 28 Apr 2025 23:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}사용자 경험 개선 사례 공유하는 총 14개 세션, 디자이너 등 다양한 직군 참여\n모바일에 최적화 된 시청 환경 구현, AI 아바타와 숏폼으로 시청 재미 더해\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 온라인 디자인 컨퍼런스 ‘심플리시티(Simplicity)’의 네 번째 시즌을 공개했다고 29일 밝혔다. 심플리시티는 ‘누구나 직관적으로 이해할 수 있는 디자인’이라는 토스의 디자인 철학을 바탕으로, 그 원칙을 실현해 온 과정과 성과를 공유하기 위해 2021년부터 개최해 왔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n이번 시즌에서는 ‘현실 너머, 이상을 그리는 여정(Vision-Driven Design)’을 주제로 토스 사용자 경험(User eXperience, UX)을 개선한 사례를 공유했다. 총 14개의 세션에 디자이너, 리서처, 라이터, 엔지니어 등 토스 UX와 직결되는 다양한 직군의 연사자가 참여해 서비스 개선 과정에서 마주한 문제와 해결 방법을 직접 소개했다. 발표에서는 3초 만에 토스 그래픽을 자동 생성하는 디자인 툴 ‘토스트(Tosst)’ 제작 과정, 시각장애인을 위한 앱 접근성 개선 사례 등을 폭넓게 다뤘으며, 토스의 디자인 철학이 실제 제품에 어떻게 적용됐는지 등을 확인할 수 있다.\n특히 올해는 모바일에 최적화된 시청 환경을 구현해 편의성을 더했다. 전체 발표는 5~6분 이내의 ‘숏폼’ 형식으로 구성해 시청자가 언제 어디서든 부담 없이 콘텐츠를 접할 수 있도록 했으며, 화면과 직접 상호 작용할 수 있는 인터랙션 기능을 더해 몰입도를 높였다. 또한 연사자의 모습과 목소리를 AI 아바타로 제작해 보는 재미도 더했다. 각 세션은 심플리시티 시즌 4 웹사이트에서 확인할 수 있다.\n한편, 세션 시청자는 연사자와 이야기를 나눌 수 있는 ‘커피챗 신청하기’ 이벤트에 참여할 수 있다. 오는 5월 11일까지 각 세션 영상의 마지막 화면에서 ‘커피챗 신청하기’ 버튼을 눌러 신청할 수 있으며, 추첨 결과는 대상자에게 개별 안내한다. 토스 관계자는 “토스 앱의 디자인은 직관적인 사용자 경험의 열쇠”라며 “심플리시티가 UX 문제를 디자인적으로 해결하는 모든 사람에게 도움이 되기를 바란다”고 밝혔다.",
        "content": "사용자 경험 개선 사례 공유하는 총 14개 세션, 디자이너 등 다양한 직군 참여",
        "contentSnippet": "사용자 경험 개선 사례 공유하는 총 14개 세션, 디자이너 등 다양한 직군 참여",
        "guid": "https://blog.toss.im/article/simplicity4",
        "isoDate": "2025-04-28T23:00:00.000Z"
      },
      {
        "title": "토스뱅크가 ‘쉬운 근로계약서’에 주목하는 이유",
        "link": "https://blog.toss.im/article/tossbank-contract",
        "pubDate": "Mon, 28 Apr 2025 02:57:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}이 콘텐츠는 토스뱅크 CSR Manager 문유진 님, Brand Designer 최민수 님과 나현주 님, Brand Marketer 방성은 님, Product Foundation Tribe Leader 조은별 님, Product Designer 김혜미 님, 소윤의 님과의 인터뷰를 재구성하여 만들어졌습니다.\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n근로계약서를 안 써본 사람은 있어도, 써본 사람 중 그 과정에서 막막함을 느껴본 적 없는 분은 드물 겁니다. 특히 첫 아르바이트를 시작하는 청소년이나 사회초년생은 더욱이요. 계약서를 써야 하는 건 알겠지만 어떻게 말을 꺼내야 할지, 어디서 무엇을 써야 하는지 쉽지 않습니다. 이 당연한 과정이 여전히 어렵고 불편한 현실에 토스뱅크는 질문을 던졌습니다. \n.css-2sk6rv{font-size:19px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);white-space:pre-wrap;margin:24px 0;padding-left:20px;position:relative;}.css-2sk6rv::before{content:'';display:block;position:absolute;top:4px;left:0;width:2px;height:calc(100% - 4px * 2);padding:4px 0;background-color:var(--adaptiveGrey800);}\n.css-1odxvuk{white-space:pre-wrap;font-style:italic;}“이 문제, 우리가 해결하면 어떨까?”.css-7mseny>*{margin-left:0;margin-right:0;}.css-7mseny>:last-child{margin-bottom:0;}blockquote>.css-7mseny:first-child>:first-child{margin-top:0;}\n그렇게 은행의 CSR(사회공헌 활동)로는 이례적인 ‘쉬운 근로계약서’ 서비스가 탄생했어요. .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}누군가의 노동을 더 안전하고 당당하게 만들어가는 이 서비스는 단지 디지털 편의의 차원이 아닙니다. 일하는 모든 이들에게 “계약은 나를 지키는 시작”이라는 메시지를 전하고 있어요. ‘근로계약서’라는 익숙하지만 어려운 문제를 토스뱅크가 어떻게 바꿔나가고 있는지 살펴봤습니다.\n\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}Q. 토스뱅크 ‘쉬운 근로계약서’ 서비스, 어떻게 시작하게 되었나요?\n토스뱅크에는 CSR을 담당하는 길드(guild) 조직이 있어요. 토스뱅크가 많은 사용자분들에게 사랑받는 서비스인 만큼, 사회공헌 활동도 필요하다는 목적으로 운영되고 있는데요. 커뮤니케이션 팀에서 CSR의 일환으로 ‘쉬운 근로계약서’ 서비스 아이디어를 제안해주셔서 시작했습니다.\n주요 사용자는 근로계약서 작성이 필요한 청소년분들과 사회초년생, 그리고 고용주예요. 지금까지 약 5만 명이 가입했고 1천 건 넘는 계약이 진행됐어요. 쌍방이 함께 이용해야 하는 계약 서비스인 만큼 근로자와 사장님 비중은 반반 정도로 비슷합니다.\n\nQ. CSR의 일환으로 시작한 서비스였군요. 은행이라는 금융권에서 ‘계약’ 서비스에 주목한 것이 신기하게 느껴졌어요.\n대부분 사회공헌 활동을 떠올리면 기부와 봉사활동 같은 자선적인 활동을 떠올리는데요. 저희는 고객들에게 진짜로 필요한 서비스를 제공해 세상의 문제를 해결하는 방식 또한, 꼭 필요하고 의미있는 CSR이 될 수 있을거라 생각했습니다.\n무엇보다 토스뱅크가 특히 일하는 환경에 주목한 이유는 ‘일’이 본격적인 금융생활의 시작점이라 보기 때문입니다. 근로소득은 가장 기본적인 소득원 중 하나고요. 일하면서 버는 돈은 은행 계좌에 보관하고, 투자하고, 소비하는 등 금융 활동과 밀접한 연관을 맺고 있죠. 또한 일하는 과정에서 발생할 수 있는 다양한 문제를 사전에 예방하고, 문제가 생기더라도 원만히 해결할 수 있도록 돕는 장치가 바로 ‘계약’입니다. 앞으로도 토스뱅크는 누구나 쉽게 활용할 수 있는 ‘쉬운 근로계약서’ 서비스를 제공하려 해요.\n\nQ. 고객들에게 꼭 필요한 서비스를 제공하는 방식으로 CSR을 한다, 신선한 방향 같아요. 처음 아이디어가 나왔을 때 팀 내부 반응은 어땠나요?\n정말 좋았어요. 토스뱅크 동료들은 금융의 영역이 아닌 곳에서도 새로운 도전을 할 수 있는 사람들인 만큼 팀 내에서 이런 방향성에 대해 공감대가 잘 형성되기도 했고요. 서비스 만들 길드 구성원을 모집할 때에도, 거의 모든 동료들이 자발적으로 지원해주셔서 빠르게 만들어낼 수 있었어요.\n가장 고민됐던 지점은 ‘법률적인 문제가 없을지’였어요. 서비스를 쉽게 제공하면서도 은행에게 허용되는 범위를 지켜야 했거든요. 법무팀에서 꼼꼼하게 검토해주시고 노무 담당자분도 의견을 다양하게 전해주셔서, 쉽고 간편하면서도 안전하고 문제 없는 서비스를 만드는 데에 큰 도움이 되었습니다.\n\nQ. 서비스 만드는 과정에서 발견한 근로계약서 작성 과정의 문제점은 무엇이었나요? 어떤 방향으로 해결했는지 궁금해요.\n.css-120saye{white-space:pre-wrap;font-style:italic;font-weight:bold;}첫째, 근로계약서 요청이 자연스러운 문화가 되게 하자.\n보통 근로계약의 사각지대에 놓인 아르바이트생들은, 고용주에게 “근로계약서를 작성하고 싶다”고 요청하는 단계에서부터 어려움을 느낍니다. 근로계약서를 작성하는 것이 당연한 고용주분들도 계시지만, 그렇지 않은 분들도 있거든요. 이런 환경에게는 근로자가 고용주에게 먼저 근로계약서를 작성하자고 하는 과정이 어려울 수 있어요. 근로자분들이 먼저 요청하는 과정이 조금이라도 덜 민망하도록, 토스뱅크를 통해 고용주에게 계약서 작성을 자연스럽게 요청할 수 있는 경로를 만들었습니다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n둘째, 모바일 환경에 친숙한 계약서 서비스를 만들자.\n기존에 근로계약서를 작성할 수 있는 서비스는 대부분 유료로 운영되고, 데스크탑 환경에 최적화되어 있었어요. 접근성이 떨어지다보니 근로계약서 작성 과정이 더더욱 쉽지 않았겠죠.\n저희는 전국민이 사용하는 모바일 환경을 이용해 접근성을 최대한 좋은 쪽으로 제공하고자 했어요. 아무래도 모바일 화면에 담을 수 있는 정보는 데스크탑 대비 제한적이다 보니, 기존에 존재하던 서비스들과 전혀 다른 방식으로 설계했고요.\n\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}[사장님이라면?] 업무 내용, 근로 일정, 임금 정보 등을 입력해서 근로계약서를 만들고, 직원의 정보를 입력하면 만든 근로계약서를 직원에게 보낼 수 있어요.\n* 토스 앱 내 경로: 전체 탭 > 우 상단 돋보기(검색) > ‘근로계약서’ 검색 > ‘토스뱅크 쉬운 근로계약서’\n무엇보다 계약서 작성 시작부터 계약 완료까지 중간에 서비스를 이탈하지 않고 끝낼 수 있도록 만들었어요. 보통의 토스뱅크 서비스에서는 본인 인증 과정에서 토스인증서를 꼭 필요로 하는데요. 이 과정에서 토스인증서를 발급받지 않은 분들이 이탈하면서 계약서 작성 과정이 흐지부지 되어버릴 수 있기 때문에, 화면에 서명을 그리는 직접서명 방식을 도입했어요. 계약 과정에서 이탈이 생길 수 있는 부분을 원천 봉쇄한 것이죠. 법무팀, 보안팀에서 많은 도움을 주셔서 구현할 수 있었습니다.\n\n[근로자라면?] 사장님이 작성해서 보낸 근로계약서를 잘 읽어보고, 잘못된 부분이 없다면 서명하면 돼요.\n* 토스 앱 내 경로: 전체 탭 > 우 상단 돋보기(검색) > ‘근로계약서’ 검색 > ‘토스뱅크 쉬운 근로계약서’\n셋째, 근로계약서 작성이 어렵고 두려운 일로 느껴지지 않게 만들자.\n근로계약서에는 익숙지 않은 개념이나 용어도 많고, 계약서라는 문서 특성상 문장도 전체적으로 어렵잖아요. 계약서 작성이 더이상 어렵고 두려운 일이 아닌 것으로 만들고 싶었어요. ‘쉬운 근로계약서’ 서비스를 따라가다 보면, 계약의 의미를 자연스럽게 이해하고 계약서 내용을 부담스럽지 않게 검토·작성할 수 있도록 곳곳에 장치를 두었습니다.\n\nQ. 사용자분들의 반응도 궁금해요. 기억에 남는 코멘트가 있을까요?\n브랜드 캠페인 영상에 감동적인 댓글이 많았던 게 기억에 남아요. “이것이 진정한 사회 기여다” 같은 취지의 댓글이 꽤 많이 보였거든요.\n조금 의외였지만 반가웠던 점은 사장님 고객들의 반응이 좋았다는 점이에요. 캠페인 타겟은 아르바이트생이었지만 사장님들의 반응도 만만치 않았던 거죠. 실제로 계약서 내 항목은 사장님이 작성해야 하는 부분이 더 많거든요. 특히 작은 사업을 1~2개 운영하는 분들의 긍정 목소리가 많았던 것 같아요. 사업자 번호를 여러 개 등록하고 싶다거나, 사업자 정보를 쉽게 수정하고 싶다는 반응을 보고, 바로 검토 후 의견을 반영하는 버전으로 서비스를 개선하기도 했어요.\n\nQ. ‘쉬운 근로계약서 서비스’를 더 많은 사람들에게 알리기 위해 두 번의 브랜드 캠페인을 진행하셨죠. 캠페인을 통해 전달하고자 했던 메시지가 궁금해요.\n토스뱅크 ‘쉬운 근로계약서’ 서비스 슬로건은 “일하는 누구나, 토스뱅크에서 안전하게” 입니다. 여기서 ‘누구’에는 근로자, 고용주 뿐 아니라 프리랜서도 포함되는데요. ‘쉬운 근로계약서’ 서비스로 가능한 정당한 계약을 통해, 모두가 마음놓고 안전하게 일할 수 있는 근로환경이 마련되어야 한다는 메시지를 전하고 싶었어요.\n\nQ. 각 브랜드 캠페인은 어떤 배경에서 기획되었고, 무엇을 목표로 진행되었나요?\n첫번째 사회공헌 프로젝트 ‘일하는 청소년 with Toss Bank’ 캠페인은 현실 속 청소년들이 근로 현장에서 맞닥뜨리게 되는 갈등에 주목했어요. 근로계약서 미작성, 청소년 노동법 위반 등의 갈등 원인은 근로계약 문화에 있다는 데 착안했고, 이를 바꾸겠다는 취지를 담았습니다.\n.css-oni540{position:relative;width:100%;height:0;padding-bottom:56.25%;}\n.css-122y91a{position:absolute;top:0;left:0;width:100%;height:100%;}\n\n보통 청소년이 일한다고 하면 영 케어러(Young Carer: 가족돌봄청년), 문제아를 떠올리는데요. 공부를 해야 할 나이에 돈을 번다고 하니 피치 못할 사정이 있다고 생각하는 겁니다. 또 드라마나 광고 등 미디어를 통해 일하는 청소년의 이미지가 이런 방식으로 소비되었기 때문이에요.\n하지만 일하는 청소년들의 이야기를 직접 들어보니, 일하는 이유가 참 다양합니다. 가족을 위해 일하는 청소년 뿐 아니라, 원하는 신발을 사고 싶어서인 경우도 있고 꿈을 좇기 위해 강습비를 벌기도 해요. 이처럼 일하는 청소년에 대해 선입견을 가지지 않으려 노력했고, 이들이 겪는 근로 문제에만 집중했습니다. 실제 청소년 근로자들의 목소리를 반영하기 위한 노력이었어요.\n‘일하는 청소년’ 캠페인의 성공을 통해 근로계약 문제에 대한 대중의 공감대를 확인할 수 있었는데요. 그러던 중 서울시와의 협업을 통해 서울시에서 만든 간병인, 웹툰 보조작가 표준계약서가 ‘쉬운 근로계약서 서비스’에 탑재됐어요. 그 중에서 웹툰 보조작가가 겪는 문제에 공감해 두 번째 캠페인 소재로 선정하게 되었습니다.\n\n\n\n웹툰 보조작가는 계약서 미작성 건수가 77%에 달했어요. (2019 웹툰 보조작가 실태조사 기준: 한국콘텐츠진흥원) 웹툰 보조작가를 위한 표준계약서가 없었기 때문에, 대부분 구두 계약을 통해 일하고 있거나 계약서를 작성하더라도 불공정한 계약 조항에 노출되는 경우가 많았습니다. 그래서 계약 범위를 넘어서는 과도한 업무를 요구받기도 하고, 입금 체불도 빈번히 일어났어요. 또 다른 노동자와 다르게, 창작자임에도 크레딧(작품 내 이름 표기)에 포함되지 않아 향후 경력을 인정받거나 발전시키기 어려운 환경이었습니다.\n계약서만 잘 작성해도 막을 수 있는 문제인데, 계약서가 잘 작성되지 않는 환경에서 겪는 문제가 컸기에 ‘쉬운 근로계약서 서비스’를 통해 문제를 해결하고, 브랜드 캠페인을 통해 문제를 세상에 알리고자 했어요.\n\nQ. 광고 캠페인이었던 ‘일하는 청소년’과 달리, ‘웹툰노동’은 다큐멘터리로 제작되었는데요. 특별한 이유가 있을까요?\n처음엔 서울시에서 개발한 표준계약서가 토스뱅크 ‘쉬운 근로계약서 서비스’에 탑재되었다는걸 잘 알리는 수준으로 접근했어요. 그런데 왜 표준계약서가 개발됐고, 웹툰 보조작가분들이 어떤 어려움을 겪고 있는지 조사하다 보니 간단히 다룰 수 있는 소재가 아니라는 생각이 들더라고요.\n웹툰의 노동 문제는 플랫폼, 제작사, 웹툰작가, 웹툰 보조작가로 이어지는 제작 시스템 전반에서 비롯되며 이해관계가 복잡하게 얽혀있습니다. 이를 단편적으로 다룰 경우, 메시지가 왜곡될 우려가 있고 대중이 심각성을 충분히 공감하지 못할 가능성도 있다 생각했어요.\n또한 웹툰 보조작가들이 겪은 감정적인 상처가 깊어, 가벼운 접근은 오히려 그들의 아픔을 자극할 수 있다 생각했습니다. 정공법을 선택하자는 목표로 다큐멘터리 형식을 채택했어요. 메시지의 의미를 더욱 효과적으로 전달하기 위해 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}무비랜드 팝업, 캠페인 페이지, 한정판 굿즈도 추가로 기획했고요.\n\n\n특히 민감한 소재인 만큼 객관성 확보에 중점을 뒀어요. 20분 분량의 다큐멘터리에 10명의 출연진을 구성하는 것이 다소 많아보일 수 있지만, 소수의 주관적인 의견으로 비춰지는 것을 방지하고 다양한 시각을 담기 위해 가능한 많은 출연진을 섭외했습니다.\n웹툰 보조작가, 현역 웹툰작가, 웹툰작가노조위원장, 웹툰플랫폼사 대표, 변호사 등 해당 문제를 직간접적으로 경험하고, 실태를 면밀히 파악하고 있는 인물들이 참여했습니다. 많은 섭외 후보들이 출연을 고사했으나, 용기내어 주신 출연진분들 덕분에 목소리를 낼 수 있었습니다. 감사한 마음이 커요.\n\nQ. ‘웹툰노동’ 브랜드 캠페인 준비 과정에서 특별히 기억에 남는 순간이 있을까요?\n다큐멘터리 사전 인터뷰 과정에서 다큐멘터리에 나온 분들 외에도 수많은 보조작가분들과 업계 관계자분들을 만나 이야기를 들었거든요. 웹툰 업계에 분노하는 분, 어쩔 수 없다며 체념한 분, 우울증과 대인기피증을 가지게 된 분, 저마다의 방식으로 이 환경을 개선하려는 분들까지.\n그중 “제가 더 잘 했다면 이런 일은 없지 않았을까요?”라고 말하는 웹툰 보조작가들의 자책 어린 목소리가 유독 기억에 남습니다. 어려운 현실 속에서 많은 웹툰 보조작가들이 스스로를 탓하며 좌절하고 있었어요. 희망이 보이지 않는 상황에서, 그들이 비난할 수 있는 마지막 대상이 결국 자신뿐이 아니었을까 싶기도 했어요.\n이들을 위해 무비랜드 팝업에서 ‘블루 칼라(Blue-collar: 생산직 노동자)의 시인’으로 불리는 켄 로치 감독의 노동 영화 2편을 상영했는데요. 영화 ⟨나, 다니엘 블레이크⟩ ⟨미안해요, 리키⟩에 나오는 “It’s not your fault(당신의 잘못이 아닙니다).”라는 대사를 통해 위로를 전하고 싶었어요.\n\n켄 로치 감독은 칸 영화제에서 황금종려상 수상 후, “우리는 희망의 메시지를 사람들에게 보여줘야 한다. 다른 세상이 가능하다고 말해야 한다”라는 소감을 전했어요. ‘웹툰노동’ 다큐멘터리가 웹툰 보조작가분들께 희망의 메시지가 됐으면 하는 바람입니다.\n\nQ. 캠페인 공개 후 반응은 어땠나요?\n웹툰 보조작가분들이 본인의 이야기를 직접 유튜브 영상 댓글에 남겨주고 계세요. 다큐멘터리 내용에 공감하며 억울했던 감정을 쏟아내기도 하고, 더 적나라한 경험을 고발하거나 해결책을 제안하는 이들도 있습니다. 이런 다큐멘터리를 만들어줘서 고맙다는 분들도 많고요. 정성스레 남긴 장문의 댓글에서는 웹툰을 향한 애정과 하루 빨리 문제가 개선되길 바라는 마음이 느껴졌어요.\n웹툰 독자분들의 반응도 흥미로웠습니다. 그동안 웹툰을 문화 콘텐츠로 소비해 왔지만, 이면에 존재하는 문제에 대해서는 전혀 알지 못했다는 의견이 많았어요. 더 좋은 작품을 오랫동안 즐기기 위해서라도 웹툰 산업의 노동 환경이 개선되길 바란다는 목소리도 이어지고 있습니다.\n웹툰 관계자와 팬덤이 활발히 활동하는 X(구 트위터)에서는 현역 웹툰 작가들이 직접 다큐멘터리에 대한 글을 게시하고, 팬들이 이를 리트윗하며 바이럴이 확산되고 있어요. 노동 환경을 실질적으로 개선할 수 있는 당사자들에게까지 메시지가 닿아 현실적으로 문제를 해결할 수 있는 실마리가 되기를 기대합니다.\n\nQ. 캠페인이 콘텐츠 그 이상의 변화를 만들어내는 역할을 해온 것은 물론, 토스뱅크 CSR의 정체성 또한 잘 보여준 것 같아요.\n실질적인 변화를 만들기 위한 해결책을 제안하려 했기 때문인 것 같아요. 단순히 인식 개선을 위한 캠페인이 아니라, 토스뱅크가 가장 잘할 수 있는 제품(서비스) 역량을 활용해 문제를 해결하고자 했습니다. 그 결과물이 바로 ‘쉬운 근로계약서’ 서비스고요.\n\nQ. 실제로 ‘쉬운 근로계약서’ 서비스가 사회적으로 긍정적인 영향을 미칠 수 있을 것으로 기대되는데요.\n맞아요, 우선 계약에 대한 심리적/물리적 장벽이 줄어드니까요. 토스뱅크를 활용하면 언제 어디서든 계약 요청부터 체결까지 손쉽게 할 수 있고, 계약 과정을 쉬운 언어로 전달하고 이해할 수 있잖아요. 그동안 공정한 계약문화 사각지대에 놓여있던 사람들이 가지고 있던 장벽을 낮춰줄 수 있으리라 기대합니다. 궁극적으로는 모두가 안전하게 계약을 체결하며 일하는 환경이 되는 데에 기여하길 바라고요.\n‘계약’에 대한 사회적 인식 변화 또한 필요한데요. 계약서를 작성하고 일하는 것이 필수적이고 자연스러운 문화로 자리매김하기 위해서는 계약이 어느 한 쪽의 이익을 대변하는 것이 아니라, 근로자와 고용주 모두를 위한 일종의 ‘약속’이라는 사회적인 인식이 꼭 필요하다 생각합니다. 그러면 사회적으로 근로계약 문화가 더욱 개선될 수 있을 거예요.\n\nQ. 캠페인 영상에 달린 댓글을 보면 “이런 게 진짜 세상에 필요한 혁신이다”, “사회에 꼭 필요한 이야기를 토스뱅크가 해준다”는 반응이 있더라고요.\nCSR의 일환으로 시작한 ‘쉬운 근로계약서’ 서비스가 ‘토스뱅크다운 혁신적인 시도’로 인식되는 것 같아요. 이제 기업이 문제를 해결하는 중요한 주체가 된 시대라 생각해요. 특히 고객의 어려움을 해결하는 것과 사회적 문제를 해결하는 것의 경계가 흐려질 때, 더 큰 브랜드 신뢰도를 가질 수 있다 생각합니다.\n은행의 사회적 책임 범위를 한정짓지 않고 사회적 문제를 해결하려 한 시도는, 그동안 당연하게 여겨져 왔던 불편함에 질문을 던지고 혁신적인 서비스를 만들어왔던 토스뱅크의 접근 방식과 다르지 않아요. CSR 활동이 기업의 본질적인 가치와 철학에 밀접해 있을 때, 더 큰 울림을 만들어내는 것 같습니다.\n\nQ. ‘쉬운 근로계약서 서비스’, 앞으로 어떻게 더 발전될까요?\n지금은 계약서를 작성하는 기능에 초점을 맞춘 서비스인데요. 더 나아가 고용주와 피고용인 간 계약서를 작성하는 상황 내 여러 맥락을 파악해, 근로자 고용 관련 서류까지 편리하게 발송할 수 있는 방향으로 발전시킬 예정이에요.\n그리고 이번 캠페인을 경험으로 생각해보면, 정부와 기업 간 유의미한 협업이 이어질 수 있지 않을까요. 그간 서울시는 운동트레이너, 간병인, 웹툰 보조작가와 같이 계약 문화의 사각지대에 놓인 프리랜서를 위한 표준계약서를 만들고 있었지만 확산에 어려움이 있었어요. 반면 토스뱅크는 전자계약 서비스를 제공할 뿐, 계약 당사자에게 법률적인 조언이나 가이드를 줄 수 없었고요. \n서울시가 만든 표준계약서를 토스뱅크 서비스에 탑재하니, 더 많은 사람들이 쉽고 간편하게 이용할 수 있게 되었잖아요. 이와 비슷하게 정부는 계속해서 사각지대에 놓여있는 직업군을 위한 기준이 되는 표준계약서를 발전시켜 나가고, 기업은 사용자에게 잘 전달할 수 있는 역할을 할 수 있기를 기대해 봅니다.",
        "content": "“일하는 누구나, 안전하게” - 토스뱅크가 바꿔나가는 계약 문화",
        "contentSnippet": "“일하는 누구나, 안전하게” - 토스뱅크가 바꿔나가는 계약 문화",
        "guid": "https://blog.toss.im/article/tossbank-contract",
        "isoDate": "2025-04-28T02:57:00.000Z"
      },
      {
        "title": "가정의 달 콘텐츠➀ 함께 살아가기 위해서는 계산이 필요하다",
        "link": "https://blog.toss.im/article/2025may-curation",
        "pubDate": "Mon, 28 Apr 2025 00:30:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}가정을 꾸리는 일은 치밀하고도 이타적인 ‘계산’이 필요합니다..css-1kxrhf3{white-space:pre-wrap;} 부부가 된다는 건 경제생활을 함께 영위해 나가는 공동체로 거듭난다는 뜻이니까요.\n두 경제적 주체가 하나의 배에 올라, 노를 젓는 것을 상상해 봅니다. 순풍을 타고 여유롭게 풍경을 즐기는 날도 있지만, 고요한 물살 위에서 쉬지 않고 노를 저어야 할 때도, 갑작스레 몰아치는 급류에 온 힘을 다해 균형을 잡아야 할 때도 있을 겁니다. 그 모든 순간을 함께 헤쳐 나가는 일이 바로 ‘가계’라는 항해겠지요.\n날씨와 풍향, 바람의 세기를 계산하며 노를 젓다보면 언젠가는 너와 내가 소망하는 목적지에 닿게 될 거예요. 가정의 달을 맞아 각자의 항로를 따라 나아가고 있는 모든 항해자에게 도움이 될 토스피드의 콘텐츠를 모아 전합니다.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}1. 부부 돈 관리, 같이 하는 게 좋을까 따로 하는 게 좋을까?\n부부 돈 관리 방법은 크게 두 가지로 나뉩니다. ‘오픈형’과 ‘블라인드형’. 경제적 정보를 서로 얼마나 공유할지에 따라 관리법이 달라지는데요. 15년 동안 수많은 부부를 만나 멘토링을 해온 김경필 머니 트레이너는 말합니다. ‘돈 관리를 잘 하는 부부’는 모두 이 관리법을 택한다고요.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}.css-1lvcgm8{padding:22px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;border-radius:20px;}\n.css-13ko30i{width:375px;}전문가가 말하는 부부 돈 관리 필승법\n2. 부모가 되면 은퇴 계획이 달라질까?\n김성미, 이상형 부부는 결혼 직후, ‘55세 은퇴’ 목표를 세웠습니다. 몇 해 전 사랑스러운 아이가 태어났지만, 목표로 한 은퇴 시점은 밀리지 않고 그대로 입니다. 계획에 따르면, 2035년부터는 돈을 더 모으지 않아도 원금에서 나오는 자산소득으로 생활비를 충당할 수 있게 돼죠. 이토록 확실하고도 체계적인 계획은 어디서부터, 어떻게 세울 수 있었을까요?\n\n양육비 쇼크 없이 노후 생활비 준비하는 법\n3. 주말마다 부동산 데이트를 했습니다\n김성진 안정호 부부는 주말이면 부동산 데이트에 나섰습니다. 왕십리, 종로와 같은 강북 구도심을 중심으로 부부의 보금자리를 고민했죠. 오랜 준비 기간을 거친 부부의 선택은 대지와 오래된 건물을 구입해 12평짜리 협소주택을 세우는 것이었습니다. 집을 보는 관점이 달랐던 두 사람은 어떤 계산과 타협을 거쳐 가장 ‘우리다운’ 집을 갖게 되었을까요?\n\n현실 속에서 꿈꾸는 집을 찾는 여정\n4. 2025 일하는 부모의 임신·출산·육아 부담을 덜어줄 제도 10가지\n커리어와 부모로서의 삶이 맞물리기 시작할 때, 부부는 큰 도전에 나서게 됩니다. 그 여정이 덜 막막하도록, 지금 알아두면 돈이 되는 출산과 육아 지원 정책을 모아 소개합니다.\n\n임신·출산·육아 정책 모아보기",
        "content": "부부를 위한 콘텐츠 큐레이션",
        "contentSnippet": "부부를 위한 콘텐츠 큐레이션",
        "guid": "https://blog.toss.im/article/2025may-curation",
        "isoDate": "2025-04-28T00:30:00.000Z"
      },
      {
        "title": "2025 일하는 부모의 임신·출산·육아 부담을 덜어줄 제도 10가지: '출산전후 휴가급여’부터 '아동수당’까지",
        "link": "https://blog.toss.im/article/money-policies-40",
        "pubDate": "Fri, 25 Apr 2025 00:41:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}출산전후 휴가급여\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1kxrhf3{white-space:pre-wrap;}출산전후(유산, 사산) 휴가를 사용하고, 고용보험 피보험 단위 기간이 180일 이상인 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}근로자에게 휴가급여 최대 210만 원을 지원합니다.\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n지원 내용: 통상임금의 100% (상한액 월 210만 원)\n신청 방법: .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}고용24 또는 거주지/사업장 소재지 관할 고용센터\n\n\n배우자 출산휴가급여\n배우자 출산휴가를 사용하고 고용보험 피보험 단위 기간이 180일 이상인 우선지원대상기업 근로자에게 최대 160만 원을 지원합니다.\n\n\n지원 내용: 20일 유급휴가로 통상임금의 100% (상한액 약 160만 원)\n신청 방법: 고용24 또는 거주지/사업장 소재지 관할 고용센터\n\n\n난임치료휴가급여\n난임치료 예정이거나, 난임치료를 하고 있는 남녀 근로자라면 연간 6일 이내의 휴가를 사용할 수 있어요. 우선지원대상기업 소속 근로자라면 난임치료휴가 기간 중 최초 2일에 대해서 급여를 지원받을 수 있습니다.\n\n\n지원 내용: 난임치료를 위해 연간 6일 이내의 휴가를 쓸 수 있고, 최초 2일은 유급(1일, 약 8만 원) 지원\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}*2024. 10. 22일부터 난임치료휴가 청구 과정에서 알게 되는 질환이나 치료 내용 등의 정보를 누설하지 않도록 사업주의 비밀유지 의무도 신설되었어요.\n신청방법: 고용24 또는 거주지/사업장 소재지 관할 고용센터\n\n\n임신기 근로시간 단축\n임신 12주 이내 또는 32주 이후인 근로자라면 1일 2시간의 근로시간을 단축할 수 있습니다.\n\n\n지원 내용: 임신 12주 이내 및 32주 이후, 1일 최대 2시간\n*고위험 임신부는 의사 진단을 받아 임신 전기간 사용 가능해요.\n신청 방법: 고용24 또는 거주지/사업장 소재지 관할 고용센터\n\n\n첫만남 이용권\n아동양육에 필요한 것들을 준비할 수 있도록 출생아 1인당 200만 원 이상의 바우처를 지급합니다. 바우처는 아동출생일 2년간 사용 가능해요.\n\n\n지원 대상: 주민등록번호를 부여받은 아동 (2024년 1월 1일 이후 출생아로서 주민등록상 생년월일로부터 2년이 초과되지 않은 출생아)\n지원 내용: 출생아 1인당 200만 원 이상의 바우처 지급\n*시설보호아동의 경우 현금 지급\n*2024년 1월 1일 이후 출생아부터는 첫째아 200만 원, 둘째아 이상 300만 원 지급\n지원 시기: 신청 후 30일 이내\n신청 방법: 복지로 또는 아동 주소지 행정복지센터\n\n\n3~5세 유치원 학비\n국·공립 및 사립유치원을 다니는 아이에게 교육비와 방과 후 과정비를 지원합니다. 부모의 소득과 상관없이 지원받을 수 있어요.\n\n\n지원 대상: 국·공·사립유치원에 다니는 3~5세 유아\n지원 내용:\n\n국·공립유치원: 교육비 월 10만 원 + 방과 후 과정비 월 5만 원\n사립유치원: 교육비 월 28만 원 + 방과 후 과정비 월 7만 원\n*2025년의 경우 4~5세 유아에 대해 유치원 학비 매월 5만 원 추가 지원\n\n\n신청 방법: 복지로 또는 읍·면·동 행정복지센터\n문의: 0079에듀콜(1544-0079)\n\n\n아동수당\n8세 미만 모든 아동에게 매월 25일 10만 원씩 현금으로 지급합니다. 부모의 소득과 상관없이 초등학교 2학년의 생일이 속한 달 전까지 모두 받을 수 있어요.\n\n\n지원 대상: 국내에 거주하는 8세 미만(0~95개월) 대한민국 모든 아동\n*부모가 외국인이어도 아동이 한국 국적이라면 지원 가능\n지원 내용: 아동 1인당 매월 10만 원 지급\n신청 기간: 출생신고 후 언제든지 신청 가능\n신청 방법: 복지로, 아동 주소지 또는 거주지 등 전국 읍·면·동 행정복지센터\n\n\n육아휴직 급여\n고용보험 피보험 단위 기간이 180일 이상으로 8세 이하 또는 초등학교 2학년 이하 자녀를 둔 근로자라면 육아휴직 급여를 받을 수 있어요.\n\n\n지원 내용:\n\n육아휴직 1~3개월: 통상임금 100% (상한액 250만 원)\n육아휴직 4~6개월: 통상임금 100% (상한액 200만 원)\n육아휴직 7개월 이후: 통상임금 80% (상한액 160만 원)\n\n\n신청 방법: 고용24 또는 거주지/사업장 소재지 관할 고용센터\n\n\n육아기 근로시간 단축급여\n육아기 근로시간 단축을 30일 이상 사용하고, 고용보험 피보험 단위 기간이 180일 이상인 근로자라면 근로시간 단축분에 대한 지원을 받을 수 있어요.\n\n\n지원 내용:\n\n매주 최초 10시간 단축분: 월 통상임금의 100% (상한액 220만 원, 하한액 50만 원)x(10/단축 전 소정근로시간)\n나머지 근로시간 단축분: 월 통상임금의 80%(상한액 150만 원, 하한액 50만원)x{(단축 전 소정근로시간-단축 후 소정근로시간-10)/단축 전 소정근로시간}\n\n\n신청 방법: 고용24 또는 거주지/사업장 소재지 관할 고용센터\n\n\n가족돌봄휴가\n급작스럽게 가족을 돌봐야 할 때, 연간 10일의 휴가를 사용할 수 있습니다. 사업주는 휴가를 허용해 주어야 하며, 무급휴가로 처리됩니다. (무급휴가여도 근속 기간에 포함해 계산)\n\n\n지원 대상: 긴급하게 돌봄이 필요한 가족*이 있는 근로자\n*자녀, 손자녀, 조부모, 부모, 배우자, 배우자의 부모\n사용 기간:\n\n연간 최장 10일 (연장되는 경우 20일, 한부모근로자는 25일)\n*1일 단위로 사용 가능해요\n\n\n신청 방법: 가족돌봄휴가 사용희망 날짜, 돌보는 대상인 가족의 성명과 생년월일 등에 대한 사항을 적은 문서를 사업주에게 제출\n\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 이지영 Graphic 조수희 이제현",
        "content": "대표적인 임신·출산·육아 지원정책 모아보기 ",
        "contentSnippet": "대표적인 임신·출산·육아 지원정책 모아보기",
        "guid": "https://blog.toss.im/article/money-policies-40",
        "isoDate": "2025-04-25T00:41:00.000Z"
      },
      {
        "title": "토스페이먼츠 ‘퀵계좌이체’, 출시 2년 만에 누적 이용자 수 650만명 돌파",
        "link": "https://blog.toss.im/article/tosspaymentsquick",
        "pubDate": "Thu, 24 Apr 2025 01:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}주요 결제수단으로 성장… 누적 결제액 6500억원, 누적 가맹점 수 2.2만곳\n이용 편의성↑… 가맹점 수수료 부담↓… 보안성↑\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n비바리퍼블리카(토스)의 전자지급결제대행(PG) 계열사 토스페이먼츠(대표 임한욱)가 2023년 4월 출시한 간편 계좌이체 서비스 ‘퀵계좌이체’의 누적 이용자 수가 2년 만에 650만명을 돌파했다고 24일 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n퀵계좌이체는 커머스, 콘텐츠, 여행·항공 업종 등 결제 단계가 중요한 업종을 중심으로 주요 결제수단으로 자리잡고 있다. 누적 결제액은 6500억원, 누적 가맹점 수는 2만2000곳에 달한다.\n퀵계좌이체는 오픈뱅킹 기반의 거래 방식을 통해 복잡한 절차 없이 간편한 결제 경험을 제공한다. 실시간 계좌이체가 공인인증서를 요구하는 반면 퀵계좌이체는 인증서 설치 없이 손쉽게 계좌를 등록할 수 있다. 한 번 계좌를 등록하면 6자리 비밀번호로 토스페이먼츠 퀵계좌이체 가맹점 어디서나 간편한 결제가 가능하다. 등록한 휴대폰 번호로 현금영수증도 자동 발급된다.\n가맹점 입장에서 퀵계좌이체의 최대 강점은 수수료가 신용카드 대비 낮아 비용절감 효과가 크다는 점이다. 결제 성공률은 실시간 계좌이체보다 37.6%포인트 높은 87.2%이며 재사용률은 2.8배에 달한다. 결제 모듈 도입을 위한 연동 리소스도 다른 결제 방식 대비 적어 개발 인력이 부족한 중소사업자도 쉽게 도입할 수 있다.\n높은 보안성도 퀵계좌이체의 강점이다. 부정 거래 탐지 시스템(FDS, Fraud Detection System)을 통해 이상 거래 발생 시 자동으로 결제를 차단하거나 추가 인증을 요구하는 등의 안전 장치를 마련했다. 에스크로(Escrow, 결제대금 예치) 서비스도 지원한다. 이를 통해 가맹점과 소비자 모두가 신뢰할 수 있는 결제 환경을 제공한다.\n토스페이먼츠 관계자는 “퀵계좌이체는 전환율 개선과 수수료 절감이라는 실질적 효과를 기반으로 B2B 결제 수단으로서 입지를 넓혀가고 있다”며 “앞으로도 더 많은 가맹점과 소비자가 퀵계좌이체를 이용할 수 있도록 서비스를 지속 고도화하겠다”고 말했다.",
        "content": "누적 결제액 6500억원, 누적 가맹점 수 2.2만곳",
        "contentSnippet": "누적 결제액 6500억원, 누적 가맹점 수 2.2만곳",
        "guid": "https://blog.toss.im/article/tosspaymentsquick",
        "isoDate": "2025-04-24T01:00:00.000Z"
      },
      {
        "title": "프리랜서 종합소득세 신고, 이것만 알아도 충분해요",
        "link": "https://blog.toss.im/article/tossmoment-8",
        "pubDate": "Wed, 23 Apr 2025 04:53:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}5월은 프리랜서들에게 특히 바쁜 계절입니다. 종합소득세 신고를 위해 작년 매출을 정리하고, 차곡차곡 모아둔 지출 자료를 찾다 보면 어느새 하루는 훌쩍 지나가죠. 오랜 경력의 프리랜서들도 세금 신고는 매번 까다롭다고 말하는데, 하물며 이제 막 프리랜서 세계에 발 디딘 분들에게는 이게 얼마나 복잡하고 어려운 일일까요?\n그래서 준비했습니다. 프리랜서라면 꼭 알아야 할 종합소득세 신고 방식. 귀중한 시간 아낄 수 있도록, 꼭 알아야 할 내용만 정리했어요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}3.3% 뗐는데,\n세금은 왜 또 내야 하나요?\n프리랜서로 일을 하면 대부분 받기로 한 금액에서 3.3%를 떼고 받아요. 그래서 ‘이미 세금을 냈는데, 왜 또 종합소득세로 세금을 내는 거지?’ 하고 의아해하는 분들도 많습니다.\n이 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}3.3%는 소득세 3%와 지방소득세 0.3%를 원천징수한 것인데요. 이건 임시로 낸 세금에 가까워요. 세금은 소득에 비례해서 산출되는데, 실제로 내야 할 세금을 당장 실시간으로 알 수는 없으니 대략적으로 계산해서 미리 납부하는 거라고 생각하시면 돼요.\n실제로 납부할 세금은 종합소득세 신고를 통해 1년 동안의 소득, 지출, 공제 항목 등을 다 합산하고 계산해야 정확히 알 수 있어요. 이때 3.3%를 떼고 미리 납부한 세금과 비교해서 세금을 더 내거나 돌려받게 됩니다.\n프리랜서가 버는 돈은\n사업소득이에요\n세법에서는 프리랜서를 '개인이 물적 시설 없이 근로자를 고용하지 않고 독립된 자격으로 용역을 공급하고 대가를 받는 사람'으로 규정하고, 인적용역 사업자로 분류해요. 그래서 프리랜서가 일하고 받는 돈은 근로소득이 아니라 사업소득에 해당하죠.\n사업소득은 금액과 관계없이 종합소득세 신고 의무가 있고, 5월이 되면 종합소득세 안내문을 받게 됩니다. 평소엔 쓰지 않는 낯선 용어들이 많아 복잡하게 느껴질 수 있지만, 기본 개념 몇 가지만 알아두면 안내문을 이해하는 데 큰 도움이 돼요.\n세금을 합리적으로 내고 싶은 프리랜서라면 단순경비율과 기준경비율, 간편장부와 복식부기에 대해서는 꼭 알아두는 게 좋아요.\n추계신고,\n단순경비율과 기준경비율\n세금은 소득에 비례해 부과됩니다. 소득은 수입에서 경비를 뺀 금액이에요. 경비는 수입과 지출을 기록하는 장부를 통해 증빙하는 게 원칙이지만, 경비율을 적용하면 장부 없이도 일정 부분을 경비로 인정받을 수 있어요. 이를 추계신고라고 합니다.\n경비율은 ‘이 일을 하는 프리랜서라면 이 정도는 경비로 썼겠지’ 하고 국세청이 정한 추정 비율이에요. 정확한 경비율 수치와 적용 기준은 업종에 따라 달라지기 때문에, 내가 하는 일의 업종코드는 정확히 알아둬야 해요.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n단순경비율\n단순경비율은 장부를 작성할 여력이 없을 정도로 적은 소득을 얻는 사업자를 위한 제도예요. 증빙자료 없이도 수입의 일정 비율을 전부 경비로 인정하는 방식이죠.\n예를 들어 연 수입이 3,000만 원이고 단순경비율이 60%에 해당하는 프리랜서라면, 아무런 자료 없이 1,800만 원은 경비로 인정 받고, 나머지 1,200만 원에 대해서만 세금이 매겨집니다.\n업종에 따라 경비율 수치는 다르지만 대체로 높은 비율이 적용되기 때문에, 단순경비율 대상자라면 이를 활용하는 게 나은 선택인 경우가 많아요.\n기준경비율\n기준경비율은 단순경비율이 적용되지 않는 프리랜서에게 적용되는 방식이에요. 일정 수입 이상이거나 특정 업종*에 해당한다면 이 방식으로 신고하게 되죠. 기준경비율은 수입 전체에 비율을 곱하는 단순경비율과 달리, 교통비나 식비, 통신비 등 기타경비에만 일정 비율을 적용해 경비를 계산합니다.\n문제는 임차료, 인건비, 매입비 같은 주요경비가 전체 지출에서 큰 비중을 차지한다는 점이에요. 게다가 기준경비율은 단순경비율만큼 비율이 높지도 않아서, 기타경비로 인정받는 금액도 그리 크지 않죠. 그래서 기준경비율 대상자라면, 지출 자료를 잘 정리해 장부를 작성하고 기장신고를 하는 게 절세에 유리한 경우가 많습니다.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}* 변호사, 회계사, 건축사, 약사 등 전문직 사업자는 수입 규모에 상관없이 기준경비율이 적용돼요\n\n기장신고,\n간편장부와 복식부기\n앞서 경비율을 적용한 추계신고에 대해 설명했지만, 세금은 수입과 지출을 기록한 장부를 기준으로 신고하는 게 원칙이에요. 이를 기장신고라고 해요. 기장신고에는 비교적 간단하게 장부를 작성하는 간편장부와, 회계 기준에 따라 정식 장부를 작성하는 복식부기 두 가지 방식이 있어요.\n정부는 업종을 도·소매업, 제조·건설업, 서비스업 등으로 나누고, 각 업종별로 수입 기준을 정해 기장 의무 여부를 다르게 설정해두었어요. 많은 프리랜서가 종사하고 있는 서비스업의 경우 연 수입이 7,500만 원 미만이면 간편장부를 쓸 수 있지만, 그 이상이라면 복식부기를 의무적으로 작성해야 해요.\n간편장부\n간편장부는 말 그대로 간편하게 장부를 작성해 신고하는 방식이에요. 국세청에서 제공하는 프로그램을 이용하면, 수입과 지출을 항목별로 가계부 쓰듯 채울 수 있어 전문적인 회계 지식 없이도 혼자서 충분히 작성할 수 있어요.\n간편장부의 가장 큰 장점은, 추계신고처럼 일정 비율로 계산하는 방식이 아니라 실제로 지출한 금액을 그대로 비용으로 인정받을 수 있다는 점이에요. 또한 적자가 발생한 경우에는 이월결손금 제도를 통해 최대 15년간 소득에서 이전에 발생한 손실금을 공제받을 수 있어요. 프리랜서 초기라서 적자를 보고 있지만, 나중에 사업 규모가 커지며 흑자 전환을 기대한다면 지금부터 간편장부를 써두는 게 좋습니다.\n.css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}국세청 사이트에서는 간편장부 작성대상자 업종 기준을 확인할 수 있고, 간편장부 작성 프로그램도 다운받을 수 있어요.\n복식부기\n복식부기는 돈이 어디서 와서 어디로 갔는지를 차변과 대변으로 기록하는 장부 작성법이에요. 모든 수입과 지출을 꼼꼼히 기록하고, 그에 대한 증빙 자료도 함께 준비해야 하죠. 복잡하고 손이 많이 가지만, 실제 지출을 세세하게 반영할 수 있어 지출이 크거나 세무관리가 중요한 프리랜서에게는 적합한 방식입니다. 작성이 까다롭고 전문 지식이 필요하기 때문에 세무사 등 전문가의 도움을 받는 게 좋아요.\n간편장부 대상자라도 복식부기로 신고하면 기장세액의 20%를 감면받아 최대 100만 원까지 아낄 수 있어요. 세무사 비용보다 공제 혜택이 더 크다면 복식부기로 신고하는 게 유리하죠.\n\n* 대표적인 프리랜서에 해당하는 .css-114ityv{white-space:pre-wrap;cursor:pointer;-webkit-text-decoration:underline!important;text-decoration:underline!important;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}배달라이더의 소득세 신고방법이에요. 업종코드에 따라 경비율 수치와 적용기준, 복식부기 의무 기준 금액은 달라져요.\n몰라서 더 냈던 세금\n토스에서 찾아가세요\n나에게 잘 맞는 신고 방식을 잘 골랐다고 하더라도, 문득 ‘예전에도 이 경비를 챙겼었나?’, ‘공제 다 못 받아서 세금 더 낸 건 아닌가?’ 같은 생각이 들 때가 있어요. 마감에 맞춰 신고는 했더라도, 제대로 챙긴 게 맞는지는 나중에도 알기 어려우니까요.\n하지만 이미 지나간 신고라도, 놓친 세금 항목이 있었다면 지금이라도 돌려받을 수 있어요. ‘경정청구’라는 제도를 통해, 최대 5년 전까지 잘못 신고한 내용을 정정하고 환급금을 받을 수 있거든요.\n토스에서는 지난 종합소득세 신고에서 빠뜨린 경비나 공제 항목이 있었는지 꼼꼼히 찾아볼 수 있어요. 예전에 내가 더 낸 세금이 있었는지 토스에서 바로 확인해보세요. 놓쳤던 환급액을 찾게 될지도 몰라요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 윤동해 Graphic 조수희 이제현 윤자영\n이 콘텐츠는 2025.4.23. 기준으로 작성되었습니다.",
        "content": "프리랜서라면 꼭 알아야 할 종합소득세 신고 방식",
        "contentSnippet": "프리랜서라면 꼭 알아야 할 종합소득세 신고 방식",
        "guid": "https://blog.toss.im/article/tossmoment-8",
        "isoDate": "2025-04-23T04:53:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]