[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Cameron DaCamara",
        "title": "C++ Language Updates in MSVC in Visual Studio 2022 17.14",
        "link": "https://devblogs.microsoft.com/cppblog/c-language-updates-in-msvc-in-visual-studio-2022-17-14/",
        "pubDate": "Tue, 06 May 2025 15:00:34 +0000",
        "content:encodedSnippet": "Introduction\nIn this update, we continue the tradition of bucketing bugs into helpful categories for you all to filter through along with even more notes from the compiler team as to what, exactly, was fixed. This blog is also complemented by the recent Pure Virtual C++ pre-conference talk by RanDair Porter; so please check out RanDair’s talk, “MSVC C++23 Conformance”, if you have not already to get a better view of MSVC’s conformance status for Visual Studio 2022 overall.\n17.13 notes for reference.\nC++23 Features\nNote: C++23 features can be used by either adding /std:c++latest or\n/std:c++23preview to the command line. In addition, features used from unfinished standards may not\nhave full IntelliSense support.\nAdd support for P1102R2\n(Down with ()!) which makes a parameter-list an optional part of a lambda-declarator.\nauto lambda = [] constexpr { }; // C++23: can now omit the '()' after the capture list.\nImplemented P1938R3:\nif consteval for C++23.\nconstexpr int f(int) {\r\n  if consteval { // C++23: previously this would be 'if (std::is_constant_evaluated()) { ... }'.\r\n    return 42;\r\n  }\r\n  else {\r\n    return 1337;\r\n  }\r\n}\r\nint main(int argc, const char**) {\r\n  static_assert(f(0) == 42);\r\n  int x = f(argc);\r\n  if (x != 1337) // Since 'f' cannot be evaluated at compile-time, the value here is '1337'\r\n                 // due to taking the 'else' branch in 'f'.\r\n    return 1;\r\n}\nImplement P1401R5 –\nNarrowing contextual conversions to bool, making the following well-formed as of C++23:\nenum Flags { Zero, One, Two };\r\nstatic_assert(One | Two);\nAdd support of P2173R1 –\nattributes for lambda-expressions.\nauto lambda = [] [[nodiscard]] [[deprecated]] { return 10; };\r\nvoid f() {\r\n  lambda(); // C++23: Attributes here will fire a deprecation warning and a discard of return value warning.\r\n}\nImplement P1169R4 which adds\nsupport for static operator().\nImplement P2589R1 which adds\nsupport for static operator[].\nstruct Functor {\r\n  static constexpr int operator()() { return 42; }\r\n  static constexpr int operator[](int) { return 42; }\r\n};\r\nusing T1 = decltype(Functor::operator()());  // C++23: Deduces to 'int'.\r\nstatic_assert(Functor::operator()() == 42); // C++23: Can be used without creating a 'Functor' object.\r\n\r\nusing T2 = decltype(Functor::operator[](10));  // C++23: Deduces to 'int'.\r\nstatic_assert(Functor::operator[](10) == 42); // C++23: Can be used without creating a 'Functor' object.\nSmaller C++23 Items\nImplement CWG2428 – Deprecating a concept.\nCompiler improvements for 17.14\nC++/CLI\nFix bug where std::optional could not be used with managed types.\n\nRegression\nin 17.12.0: Substitution Failure Is An Error C3699 when compiling with /CLR\nFix an issue related to nested lambdas and pack-expansions and stop emitting a warning related to\n‘volatile’ if the class type is imported.\n[Version\n16.7.0 Preview 4.0] [C++/CLI] Warning C5220 is issued for non-static data members of classes\nimported from metadata\nMSVC\nrejects valid pack expansion of lambda expressions \nFix regression in C++/CLI which causes a crash or bad diagnostics when calling functions with parameter-arrays\nand compiling for Net Core.\nError\nwith String::Format in C++ CLR Class Library (.NET) project\nCompilation\nError Occurs When Using std::shared_ptr in C++/CLI Code\nDiagnostics\nAdd a warning to detect undefined behavior mentioned in [meta.reqmts].\n\nC++\nstd::is_signed_v is implemented wrong.\nFixes the lack of a diagnostic on an initialization getting skipped over in a switch statement.\n\nVariable\nDeclaration Allowed Inside Switch Case Without Scoping Operator\nFix missing error diagnostic for explicit constructor initialization\n\nlist-init\nof aggregate with explicitly-default-constructible member incorrectly accepted\nconstexpr\nPrevent binding constexpr references to local temporaries\n\nconstexpr\nreference should bind to global variable\nFix spurious error where if consteval would not properly be considered in consetxpr functions.\n\nerror\nC3615 “constexpr function ‘f’ cannot result in a constant expression” does not\nproperly recognize early return in if consteval\nFix an issue with combing a non-type template parameter of reference type with a template argument that is a\nfunction call that returns by reference.\nstd::is_constant_evaluated()\nfails in function returning reference\nFix a bug in immediate function folding that resulted in bad string data\n\nuser\nliterals causes crash if it’s consteval but not if it’s\nconstexpr.\nFix incorrect C7595 errors in constructor member initializers and as the object expression of member access\nexpressions\nError\ncalling consteval function from an ordinary constructor\nWe now run destructors during constant evaluation that appear in the init-stmt of a for loop\n\nMSVC\ndoesn’t properly destroy a loop variable in constant evaluation\nFixed constexpr __builtin_memcmp comparing unsigned chars\n\n[regression]\nv17.10: __builtin_memcmp() yields erroneous results if evaluated at compile time\nFix an incorrect rejection of an out-of-line static constexpr data member definition\n\nC2370\nis falsely emitted when a static const member is defined with the constexpr specifier outside a\ntemplate class\nAssigning\nvalue to field of base class in constexpr virtual function gennerates ICE\nLabeled\nstatements is incorrectly rejected during constant evaluation\nC++ Modules\nFix issue where the compiler would sometimes issue a syntax error when parsing template-ids from a module.\n\nMSVC\nC++20 modules: export using template alias\nFixed an issue where users would sometimes see linker errors with certain inline functions from a module and\nvarious other compiler issues when building with header units enabled for Unreal Engine 5.\nUnreal\ndoes not build with header units enabled\nFix ICE in the compiler when importing a type with an apparent cyclic dependency on itself\n\nC++/CLI\ninternal compiler error importing types from C# dll\nFixed an issue where custom-defined data sections were not persisted into a C++ module.\n\nC2341\nis incorrectly raised if the segment is defined in a header unit module\nFixed a case where C5260 was firing spuriously\n\nWhen\nbuilding a header unit module, using a static const variable in a template causes C5260\nto incorrectly fire\nFixed an issue where using a class marked as __declspec(dllimport) would sometimes issue a linker\nerror when imported through a module.\nunresolved\nexternal symbol local vftable when using modules, dll, virtual destructor and MSVC 14.36.17.6\nFixed an issue where the compiler would sometimes crash when loading a PCH with a module import.\n\nInternal\nCompiler Error if std::shared_ptr is used both with and without modules\nFixed a bug where functions returning auto would sometimes not be resolved from a module.\n\nError\nC3779 using C++20 modules due to unrecognized function definition\nDuplicate\nCOMDAT error when using C++20 modules\nFixed compiler crash in modules when using lambdas in static member functions of a class.\n\nFalse\npositive C2028 error with c++ modules\nFix a compiler crash when trying to match explicit object member functions which originate outside a C++ module.\n\nC2028\ncaused by weird interaction of modules and a virtual function calling a deducing this function.\nFix an issue with mdspan and modules.\n\nCannot\nuse C++23 multi-dimensional operator[] in concepts in modules due to “Sorry: not yet\nimplemented” internal compiler error\nFixed an issue when using std::ranges in modules where the compiler would issue a syntax error.\n\nA\ncustom formatter and a module raise errors in __msvc_formatter.hpp\nFix issue where __vectorcall functions in a module would sometimes not compile.\n\n__vectorcall\nconflicts with C++ modules\nConformance\nImplement CWG 1213: Array subscripting and xvalues\n\nSubscripting\nan rvalue array does not generate an rvalue in VS2019\nAdded /Zc:u8EscapeEncoding for conformant encoding of escape sequences like u8″\\xFF”\n\nHex\nescaping in strings can’t be compiled in v15.6.5\nescape\nsequences in unicode string literals are overencoded (non conforming => compiler bug)\nVC++\nis incorrectly encoding UTF-8 \\x escape chars as \\u escape chars\nFix missing diagnostic for mixing ‘friend’ and ‘static’.\n\n[accepts\ninvalid] cl accepts static friend functions\nFix issue where lookup-related diagnostics are missing in fold expressions\n\nFold\nexpressions unreliable in 17.1 with c++20\nFixed an issue where the compiler did not conform to P1779R3.\n\nAssertion\nfailed: !XMVector3IsInfinite(EyeDirection) when there is no implementation unit for a module which\nincludes DirectXMath.h\nReliability\nFix a compiler crash when using d1initall and constant evaluation\n\nICE\nwhen using d1initall in a constexpr context\nFix a compiler crash caused by a pointer-to-member\n\nInternal\ncompiler error (CRTP, multiple inheritance)\nFix a silent compiler crash on certain malformed explicit destructor calls.\n\nCompiler\ncrashes (but with no ICE apparently) on this code\nFix a compiler crash related to default function parameters\n\nInternal\ncompiler error with VS17.12.3 when compiling a function with a default parameter involving multiple\nvector operations\nFix an issue with name-lookup of a conversion-function-id and an issue related to the pack-expansion of\na nested lambda.\nMSVC\nv19 fatal error C1001: Internal compiler error.\nFix an ICE in certain alias template definitions with multi-component, dependent nested names.\n\nInternal\ncompiler error for some template aliases\nFix ICE when C11 _Atomic is used with PCH\n\nAdding\n#including generates C1001: Internal compiler error: ‘msc1.cpp’, line 1599 in\nVisual Studio 2022 Version 17.12.0 Preview 5.0\nFix an ICE with certain noexcept-specifiers\n\nICE\nwhen having virtual noexcept(constexpr) function with argument\nFix a crash in constant evaluation with base-to-derived conversions of pointers to array elements\n\nICE\nwhen calling CRTP function with member access from constexpr array member\nFix an issue relating to explicit lambda template parameters and also an issue related to a multidimensional\nsubscript operator\nICE\nusing lambda template parameter as size for an array\nMSVC\nrejects a template argument with multidimensional subscript operator\nFixes extreme memory use for some zero-initialized arrays (and aggregates thereof)\n\nCompiler\nmemory usage explodes with lambda returning large structure\nFix an ICE on a decltype containing a noexcept expression\n\nInternal\ncompiler error if use noexcept inside decltype\nFix an issue with class template argument deduction for alias templates\n\nICE\nwith Eigen 3.4.0 when missing template argument\nFix an ICE with some ill-formed qualified names.\n\nCL\n/std:c++latest – INTERNAL COMPILER ERROR C1001 tested in CL v19.42.34435 and CL v19.43.34604\nFix an issue with dependent base-classes and class template argument deduction for aggregates.\n\nICE\non CTAD for aggregate derived from a local class type\nFix a crash with brace-initialization of an object containing a const reference member\n\nInternal\nCompiler Error (ICE) when an object is brace initialized using another object that contains a\nreference\nfatal\nerror C1001: Internal compiler error on atomic operation with struct\nCorrectness\nFix incorrect error given when a base class name referenced in a template is found on multiple base class paths.\n\nerror\nC2385: ambiguous access of ‘IUnknown’ referring to common base class in VS2017.7 Preview\n3\nCorrect an issue with using directives not being respected in some nested lambdas.\n\nNested template lambda\naccidentally ignores the using-directives of the parent scope, and thus the\nnon-ADL user-defined literals to fail.\nAdd missing diagnostic for ill-formed pure-specifier and fix issue with combination of ‘volatile’ and\ncopy-assignment operators.\n[accepts\ninvalid] VS accepts invalid pure specifier\nPossible\nC++ compiler bug: copy assignment operator with volatile qualifier\nFix an issue related to the backing array for a std::initializer_list being destroyed too soon.\n\nOptimization\nremoves initialization for std::initializer_list of trivially copyable objects\nFix an issue with lambda captures within a decltype-specifier, and an issue with a static_assert within a\nconcept.\nError\nC2327 in decltype context within lambda referencing member variable (C++20)\nMSVC\nignores static_assert inside concept definition\nFix a case where the compiler dropped pointer dereference of a cast of a pointer to an array in some cases\n\nIncorrect\ncode generated with convoluted pointer casting\nFix incorrect access checks in certain alias templates\n\nMSVC\nfails to compile template member function full specialization with private type and type alias\narguments\nFix an issue where a volatile reference could bind to an rvalue of a derived class\n\n[_MSC_VER\n= 1940] MSVC allows binding a const volatile lvalue reference to an rvalue under\n/permissive-\nFix an issue with the initialization of a variable of class type that is volatile.\n\nMSVC\ndiscards volatile variable\nFix incorrect error C3770 when certain alias template specializations are used as base classes\n\nConst\nbase class rejected when used through alias template\nFix an issue with capturing ‘this’ in a lambda that is part of an init-capture and an issue in which the\ncompiler to did not correctly handle an abstract class type during template argument substitution.\nUnable\nto directly access member variable inside lambda nested in capture list of lambda\nCall\nto method template with abstract class parameter may fail depending on call point\nFix an issue in which a variable with an ‘auto’ type was referenced before its type had been deduced and\nan issue in which a valid goto-statement within an if-constexpr statement was flagged as an error.\nICE\nwhen recursively calling a lambda template\nIncorrect\nC3907 in C++20 only\nFix an issue in which warning C4100, “unused parameter”, was not emitted,\n\nvariable\npassed by value and warning 4100\nFix an invalid error C2210 with some alias template specializations\n\nerror C2210\nCompile error\nFix an issue with lambdas in a class with virtual bases.\n\nCompilation\nerror in lambda expressions in hierarchies with virtual inheritance\nFix an issue with the zero-initialization of arrays with /d1initAll\n\n/d1initall1023\n/d1initAll:FillPatternE2 options causes incorrect initialization results in constant evaluation\nFix an issue with decltype and calls to static member functions with an object and an issue with warnings and\nthe conditional operator\nIllegal\nuse of undefined type\nC4365\nincorrect warning and diagnostic location\nAddress an issue in which C4100, unused parameter, was not emitted.\n\nvariable\npassed by value and warning 4100\nFix an issue with aggregate initialization when a non-static data member is a self-referential reference type.\n\n“too\nmany initializers” error for valid code\nFix an issue with hidden friend functions that are declared to return ‘auto’\n\nUnable\nto compile this piece of code with constexpr and auto since 17.12.0\nFix a regression that a deduction guide has incorrect return type.\n\nCTAD\nfailure with deduction guide in the abbreviated function template form\nCorrect invalid implicit move of extern or thread_local variables\n\nMSVC\nincorrectly implicitly moves a non-local variable when the function contains its non-defining\ndeclaration\nFix issue where braced initialization in a non-type template argument would confuse the compiler.\n\nSyntax\nerror when using non-type template parameters in templated class member function\nFix an issue with a template-id that had a template-argument that used a decltype-specifier and fix an issue\nwith a variable template + class template argument deduction + lambdas\nFailure\nwith concept containing decltype and lambda\nRejects\nvalid variable template CTAD for aggregate\nFix an issue with ‘[[no_unique_address]]’ and trivial copy/move assignment operators.\n\nstd::set\nbroken under VS 17.12.4 with “no_unique_address” comparator\nFix and issue with a compiler requires-expression in an if-constexpr statement.\n\nThe\n‘requires requires’ doesn’t short-circuit when used in ‘if constexpr’\nFix incorrect template specialization involving certain qualified-names and dependent base classes.\n\nC++\ncompilation error on using Boost.Range\nFix incorrect access checks in certain alias templates\n\nMSVC\nfails to compile template member function full specialization with private type and type alias\narguments\nFix an incorrect type-deduction failure involving certain template specializations and empty packs.\n\nformatter\nfor empty tuples is broken in VS 17.13\nFixed a bug where a user-provided operator, would sometimes not be called if there was a cast\ninvolved on one of the operands.\nSilent\nbad codegen: Operand to overloaded operator comma is wrongly turned into pointer\nFix an issue with undecorating cv-qualified nullptr.\n\nc++\nBug in type_info.name() for TMyClass_const std::nullptrt\nReduced implementation divergence between clang and gcc when C++23 explicit object functions are called in\nvarious cases.\nC++23\nDeducing This build error for Cat::Meow(this, float) in VS2022 Preview 2.1 (Version 17.2.0)\nFix an issue related to pack-expansion and an issue related to the use of ‘decltype(auto)’ within a\nlambda.\nCompiler\nerror expanding parameter pack\nCompilation\nFailure with decltype(auto) in Lambda Capture on MSVC, Works on GCC/Clang\nFix an issue causing temporaries to be required in certain conditional expressions.\n\nMSVC\nincorrectly attempts to call the copy constructor for xvalue conditional expression\nAdd missing checks for deduction guide and trailing return type.\n\ndecorated\nauto accepted despite a trailing-return-type\nConst\nin deduction guide\nFix an issue with the compiler emitting the IL for a special member function when it was not ODR used.\n\nstd::vector\ntries to default construct an object from constructor accepting std::initializer_list\nC++20\ncompile error with ATL::CComPtr<>\nCannot\ncapture local constexpr closure object in lambda in C++20 mode\nVisualCppTools\n/ ppltasks.h race condition bug in when_any\nWrite\nto base class member through virtual function called by another function fails to compile.\nvcruntime\nnothrow array operator new falls back on the wrong function\n17.12.5\ninternal preview fails to scan PreFast on cppcorecheck plugin\nMSVC\ninstantiates constexpr destructors too early when data member initializers are involved\nVC++ 2017:\nMember enumeration of class template cannot be defined outside of the class template definition.\nMSVC\n19.43.34808 Preprocessor Bug: /EP Adds Unwanted #pragma warning Directives\n(Introduced in VS 2022 v17.13.x, Corrupts Preprocessed Files)\nRequires\nclause rejected in lambda initializing a variable template\nFalse\npositive lifetime code analysis warning C26849: Don’t dereference an invalid pointer: (lifetime.1).\nC26822\nfalse positive with not_null\ncan’t compile\nwith valid CTAD\nType\nalways prefered over value when using qualified identifiers\nstd::bit_cast\ndoes not work for bit-fields equal to whole type\nBit\nfields with widths computed via template are treated as 1-bit fields instead starting with MSVC 19.40\nOpenJDK\n(jdk17u) build failure with VS2022: error C2244: ‘TestEnableIfNested::sub1’: unable to match\nfunction definition to an existing declaration\nC26815\nfalse positive on “return *this;” with assignment of std::optional member in member function.\nTrivial\ntemplate argument expressions broken in 14.44\nFalse\npositive lifetime code analysis warning C26847: Don’t return an invalid pointer (lifetime.4).\nInconsistent\nESP analysis defects after 17.10 update (Office)\nBreakpoint\nline mismatch due to VC++ compiler parse the line number wrongly, when a template class with alignas and\ncomma\nMicrosoft\ncl compiler successfully compile code that has unnecessary template-id specified.\nCorrectness (C compiler)\nC Make char types unique for _Generic operator\n\n_Generic\nchar, signed char, unsigned char are not distinct in C11\nC dropped pointer dereference of a cast of a pointer to an array in some cases\n\nIncorrect\ncode generated with convoluted pointer casting\nC compiler stack overflow on large array initialization\n\nVS\n2022 cl.exe stack overflows when compiling zig2.c (~185 MB, ~4.1 M lines)\nThe post C++ Language Updates in MSVC in Visual Studio 2022 17.14 appeared first on C++ Team Blog.",
        "dc:creator": "Cameron DaCamara",
        "comments": "https://devblogs.microsoft.com/cppblog/c-language-updates-in-msvc-in-visual-studio-2022-17-14/#respond",
        "content": "<p>Introduction In this update, we continue the tradition of bucketing bugs into helpful categories for you all to filter through along with even more notes from the compiler team as to what, exactly, was fixed. This blog is also complemented by the recent Pure Virtual C++ pre-conference talk by RanDair Porter; so please check out [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/c-language-updates-in-msvc-in-visual-studio-2022-17-14/\">C++ Language Updates in MSVC in Visual Studio 2022 17.14</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "Introduction In this update, we continue the tradition of bucketing bugs into helpful categories for you all to filter through along with even more notes from the compiler team as to what, exactly, was fixed. This blog is also complemented by the recent Pure Virtual C++ pre-conference talk by RanDair Porter; so please check out […]\nThe post C++ Language Updates in MSVC in Visual Studio 2022 17.14 appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=35448",
        "categories": [
          "Announcement",
          "C++",
          "Frontend",
          "C++ language",
          "compiler",
          "MSVC",
          "VC++"
        ],
        "isoDate": "2025-05-06T15:00:34.000Z"
      }
    ]
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": [
      {
        "creator": "",
        "title": "Accelerating GPU indexes in Faiss with NVIDIA cuVS",
        "link": "https://engineering.fb.com/2025/05/08/data-infrastructure/accelerating-gpu-indexes-in-faiss-with-nvidia-cuvs/",
        "pubDate": "Thu, 08 May 2025 17:00:22 +0000",
        "content:encodedSnippet": "Meta and NVIDIA collaborated to accelerate vector search on GPUs by integrating NVIDIA cuVS into Faiss v1.10, Meta’s open source library for similarity search.\nThis new implementation of cuVS will be more performant than classic GPU-accelerated search in some areas.\nFor inverted file (IVF) indexing, NVIDIA cuVS outperforms classical GPU-accelerated IVF build times by up to 4.7x; and search latency is reduced by as much as 8.1x.\nFor graph indexing, CUDA ANN Graph (CAGRA) outperforms CPU Hierarchical Navigable Small World graphs (HNSW) build times by up to 12.3x; and search latency is reduced by as much as 4.7x.\nThe Faiss library\nThe Faiss library is an open source library, developed by Meta FAIR, for efficient vector search and clustering of dense vectors. Faiss pioneered vector search on GPUs, as well as the ability to seamlessly switch between GPUs and CPUs. It has made a lasting impact in both research and industry, being used as an integrated library in several databases (e.g., Milvus and OpenSearch), machine learning libraries, data processing libraries, and AI workflows. Faiss is also used heavily by researchers and data scientists as a standalone library, often paired with PyTorch. \nCollaboration with NVIDIA\nThree years ago, Meta and NVIDIA worked together to enhance the capabilities of vector search technology and to accelerate vector search on GPUs. Previously, in 2016, Meta had incorporated high performing vector search algorithms made for NVIDIA GPUs: GpuIndexFlat; GpuIndexIVFFlat; GpuIndexIVFPQ. After the partnership, NVIDIA rapidly contributed GpuIndexCagra, a state-of-the art graph-based index designed specifically for GPUs. In its latest release, Faiss 1.10.0 officially includes these algorithms from the NVIDIA cuVS library. \nFaiss 1.10.0 also includes a new conda package that unlocks the ability to choose between the classic Faiss GPU implementations and the newer NVIDIA cuVS algorithms, making it easy for users to switch between GPU and CPU.\nBenchmarking\nThe following benchmarks were conducted using the cuVS-bench tool. \nWe measured:\nA tall, slender image dataset: A subset of 100 million vectors from the Deep1B dataset by 96 dimensions.\nA short, wide dataset of text embeddings: 5 million vector embeddings, curated using the OpenAI text-embedding-ada-002 model.\nTests for index build times and search latency were conducted on an NVIDIA H100 GPU and compared to an Intel Xeon Platinum 8480CL system. Results are reported in the tables below at 95% recall along the pareto frontiers for k=10 nearest neighbors. \nBuild time (95% recall@10)\nIndex\n\nEmbeddings\n100M x 96\n(seconds)\nEmbeddings\n5M x 1536\n(seconds)\nFaiss Classic\nFaiss cuVS\nFaiss Classic\n   Faiss cuVS\nFaiss Classic\nFaiss cuVS\n\n\nIVF Flat\nIVF Flat\n101.4\n37.9 (2.7x)\n24.4\n15.2 (1.6x)\n\n\nIVF PQ\nIVF PQ\n168.2\n72.7 (2.3x)\n42.0\n9.0 (4.7x)\n\n\nHNSW (CPU)\nCAGRA\n3322.1\n518.5 (6.4x)\n1106.1\n89.7 (12.3x)\n\n\n\nTable 1: Index build times for Faiss-classic and Faiss-cuVS in seconds (with NVIDIA cuVS speedups in parentheses).\nSearch latency (95% recall@10)\nIndex\n\nEmbeddings\n100M x 96\n(milliseconds)\nEmbeddings\n5M x 1536\n(milliseconds)\nFaiss Classic\nFaiss cuVS\nFaiss Classic\nFaiss cuVS\nFaiss Classic\nFaiss cuVS\n\n\nIVF Flat\nIVF Flat\n0.75\n0.39 (1.9x)\n1.98\n1.14 (1.7x)\n\n\nIVF PQ\nIVF PQ\n0.49\n0.17 (2.9x)\n1.78\n0.22 (8.1x)\n\n\nHNSW (CPU)\nCAGRA\n0.56\n0.23 (2.4x)\n0.71\n0.15 (4.7x)\n\n\n\nTable 2: Online (i.e., one at a time) search query latency for Faiss-classic and Faiss-cuVS in milliseconds (with NVIDIA cuVS speedups in parentheses).\nLooking forward\nThe emergence of state-of-the-art NVIDIA GPUs has revolutionized the field of vector search, enabling high recall and lightning-fast search speeds. The integration of Faiss and cuVS will continue to incorporate state-of-the-art algorithms, and we look forward to unlocking new innovations in this partnership between Meta and NVIDIA. \nRead here for more details about NVIDIA cuVS.\nThe post Accelerating GPU indexes in Faiss with NVIDIA cuVS appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>Meta and NVIDIA collaborated to accelerate vector search on GPUs by integrating NVIDIA cuVS into Faiss v1.10, Meta’s open source library for similarity search. This new implementation of cuVS will be more performant than classic GPU-accelerated search in some areas. For inverted file (IVF) indexing, NVIDIA cuVS outperforms classical GPU-accelerated IVF build times by up [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/05/08/data-infrastructure/accelerating-gpu-indexes-in-faiss-with-nvidia-cuvs/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/05/08/data-infrastructure/accelerating-gpu-indexes-in-faiss-with-nvidia-cuvs/\">Accelerating GPU indexes in Faiss with NVIDIA cuVS</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "Meta and NVIDIA collaborated to accelerate vector search on GPUs by integrating NVIDIA cuVS into Faiss v1.10, Meta’s open source library for similarity search. This new implementation of cuVS will be more performant than classic GPU-accelerated search in some areas. For inverted file (IVF) indexing, NVIDIA cuVS outperforms classical GPU-accelerated IVF build times by up [...]\nRead More...\nThe post Accelerating GPU indexes in Faiss with NVIDIA cuVS appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22423",
        "categories": [
          "AI Research",
          "Data Infrastructure",
          "ML Applications",
          "Open Source"
        ],
        "isoDate": "2025-05-08T17:00:22.000Z"
      },
      {
        "creator": "",
        "title": "Enhancing the Python ecosystem with type checking and free threading",
        "link": "https://engineering.fb.com/2025/05/05/developer-tools/enhancing-the-python-ecosystem-with-type-checking-and-free-threading/",
        "pubDate": "Mon, 05 May 2025 16:00:05 +0000",
        "content:encodedSnippet": "Meta and Quantsight have improved key libraries in the Python Ecosystem. There is plenty more to do and we invite the community to help with our efforts. \nWe’ll look at two key efforts in Python’s packaging ecosystem to make packages faster and easier to use:\n Unlock performance wins for developers through free-threaded Python – where we leverage Python 3.13’s support for concurrent programming (made possible by removing the Global Interpreter Lock (GIL)). \n Increase developer velocity in the IDE with improved type annotations.\nEnhancing typed Python in the Python scientific stack\nType hints, introduced in Python 3.5 with PEP-484, allow developers to specify variable types, enhancing code understanding without affecting runtime behavior. Type-checkers validate these annotations, helping prevent bugs and improving IDE functions like autocomplete and jump-to-definition. Despite their benefits, adoption is inconsistent across the open source ecosystem, with varied approaches to specifying and maintaining type annotations.\nThe landscape of open source software is fractured with respect to how type annotations are specified, maintained, and distributed to end users. Some projects have in-line annotations (types directly declared in the source code directly), others keep types in stub files, and many projects have no types at all, relying on third party repositories such as the typeshed to provide community-maintained stubs. Each approach has its own pros and cons, but application and maintenance of them has been inconsistent.\nMeta and Quansight are addressing this inconsistency through:\nDirect contributions: We have improved the type coverage for pandas-stubs and numpy, and are eager to expand the effort to more packages. \nCommunity engagement: Promoting type annotation efforts to encourage community involvement, listen to feedback and create actionable ways to improve the ecosystem. \nTooling and automation: Developing tools to address common challenges adding types and keeping the types up-to-date with the source code.\nImproved type annotations in pandas\nTL;DR: Pandas is the second most downloaded package from the Python scientific stack. We improved pandas-stubs package type annotation coverage from 36% to over 50%.\nBackground\nThe pandas community maintains its own stubs in a separate repository, which must be installed to obtain type annotations. While these stubs are checked separately from the source code, it allows the community to use types with their own type checking and IDE. \nImproving type coverage\nWhen we began our work in pandas-stubs, coverage was around 36%, as measured by the percentage of parameters, returns, and attributes that had a complete type annotation (the annotation is present and all generics have type arguments). After several weeks of work and about 30 PRs, type completeness is now measured at over 50%. The majority of our contributions involved adding annotations to previously-untyped parameters, adding type arguments to raw generic types, and removing deprecated/undocumented interfaces. We also improved several inaccurate annotations and updated others to match the inline annotations in the pandas source code. \nKey introductions\nTwo key introductions significantly increased coverage:\nReplacing raw Series types with UnknownSeries, a new type aliased to Series[Any]. When applied to return type annotations, this reduces the number of type checker false-positives when the function is called.\nImproving types of core Dataframe operations like insert, combine, replace, transpose, and assign, as well as many timestamp and time-zone related APIs.\nTooling development\nIn addition to improving coverage directly, we developed tooling to catalog public interfaces missing annotations. We also augmented our tools for measuring type coverage to handle the situation where stubs are distributed independently, rather than being packaged into the core library wheel.\nWhat is free-threaded Python ?\nFree-threaded Python (FTP) is an experimental build of CPython that allows multiple threads to interact with the VM in parallel. Previously, access to the VM required holding the global interpreter lock (GIL), thereby serializing execution of concurrently running threads. With the GIL becoming optional, developers will be able to take full advantage of multi-core processors and write truly parallel code.\nBenefits of free-threaded Python\nThe benefits of free-threaded Python are numerous:\nTrue parallelism in a single process: With the GIL removed, developers can write Python code that takes full advantage of multi-core processors without needing to use multiple processes. CPU-bound code can execute in parallel across multiple cores.\nImproved performance: By allowing multiple threads to execute Python code simultaneously, work can be effectively distributed across multiple threads inside a single process.\nSimplified concurrency: Free-threading provides developers with a more ergonomic way to write parallel programs in Python. Gone are the days of needing to use multiprocessing.Pool and/or resorting to custom shared memory data structures to efficiently share data between worker processes.\nGetting Python’s ecosystem ready for FTP\nThe ecosystem of Python packages must work well with free-threaded Python in order for it to be practically useful; application owners can’t use free-threading unless their dependencies work well with it. To that end, we have been taking a “bottoms up” approach to tackle the most difficult/popular packages in the ecosystem. We’ve added free-threading support to many of the most popular packages used for scientific computing (e.g. numpy, scipy, scikit-learn) and language bindings (e.g. Cython, nanobind, pybind, PyO3).\nJust getting started\nTogether, we made substantial progress in improving type annotations and free-threading compatibility in Python libraries. We couldn’t have done it without the Python community and are asking others to join our efforts.  Whether it’s further updates to the type annotations or preparing your code for FTP, we value your help moving the Python ecosystem forward!\nTo learn more about Meta Open Source, visit our open source site, subscribe to our YouTube channel, or follow us on Facebook, Threads, X and LinkedIn.\nThe post Enhancing the Python ecosystem with type checking and free threading appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>Meta and Quantsight have improved key libraries in the Python Ecosystem. There is plenty more to do and we invite the community to help with our efforts.  We’ll look at two key efforts in Python’s packaging ecosystem to make packages faster and easier to use: 🚀 Unlock performance wins for developers through free-threaded Python – [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/05/05/developer-tools/enhancing-the-python-ecosystem-with-type-checking-and-free-threading/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/05/05/developer-tools/enhancing-the-python-ecosystem-with-type-checking-and-free-threading/\">Enhancing the Python ecosystem with type checking and free threading</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "Meta and Quantsight have improved key libraries in the Python Ecosystem. There is plenty more to do and we invite the community to help with our efforts.  We’ll look at two key efforts in Python’s packaging ecosystem to make packages faster and easier to use: 🚀 Unlock performance wins for developers through free-threaded Python – [...]\nRead More...\nThe post Enhancing the Python ecosystem with type checking and free threading appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22472",
        "categories": [
          "DevInfra"
        ],
        "isoDate": "2025-05-05T16:00:05.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "eBay News Team",
        "title": "eBay Uses Agentic AI to Supercharge Personalized Ecommerce",
        "link": "https://innovation.ebayinc.com/stories/ebay-uses-agentic-ai-to-supercharge-personalized-ecommerce/",
        "pubDate": "Tue, 06 May 2025 00:00:00 -0700",
        "dc:creator": "eBay News Team",
        "content": "<div style=\"margin-bottom: 10px;\"><img src=\"https://static.ebayinc.com/static/assets/Uploads/Blog/Posts/_resampled/FitWzIwMCwxMTNd/250502-agenticai-v1-inc-1600x900-hero2.jpg?fs=0dd44286a8600f1b\" width=\"200\" height=\"113\" alt=\"eBay Uses Agentic AI to Supercharge Personalized Ecommerce\" /></div><div>eBay is fueling a more relevant, tailored shopping experience.</div>",
        "contentSnippet": "eBay is fueling a more relevant, tailored shopping experience.",
        "guid": "https://innovation.ebayinc.com/stories/ebay-uses-agentic-ai-to-supercharge-personalized-ecommerce/",
        "categories": [
          "article"
        ],
        "isoDate": "2025-05-06T07:00:00.000Z"
      }
    ]
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Olga Bedrina",
        "title": "SAST vs DAST: Differences And When to Use",
        "link": "https://blog.jetbrains.com/teamcity/2025/05/sast-vs-dast/",
        "pubDate": "Fri, 09 May 2025 16:49:43 +0000",
        "content:encodedSnippet": "Anyone working in the software development field knows cybersecurity is a threat you cannot afford to downplay. A cyberattack on a product or service you’ve created carries a risk of serious financial and reputational damage, as well as regulatory penalties, depending on the industry and jurisdiction.\nDefending your software against cyberattacks means addressing security at every stage of the software development lifecycle (SDLC) – from design and development to testing and production monitoring.\n 💡See also: [Whitepaper] 9 Ways to Prevent a Supply Chain Attack on Your CI/CD Server\n\n\n\n\nTwo techniques to help you do this are Static Application Security Testing (SAST) and Dynamic Application Security Testing (DAST). While they may sound similar, SAST and DAST are different testing styles. Teams use the approaches at different points in the SDLC to detect different types of vulnerabilities.\nCompare the differences between SAST vs DAST and understand the benefits each offers, and why it’s a good idea to use both techniques as part of your CI/CD process.\nIn this article:\nWhat are SAST and DAST?\nSAST vs DAST: key differences\nWhen to use SAST, DAST, or both\nSAST vs DAST tool comparison\nHow to implement SAST and DAST effectively\nHow TeamCity can help\nWhat are SAST and DAST?\nSAST\nSAST is a type of automated security testing that examines your source code or binaries for known vulnerabilities. SAST tools allow you to verify you haven’t introduced any security flaws with your latest changes, by checking your code line by line.\nAs SAST doesn’t require a build, you can run these tests as part of your merge or pre-commit checks and get feedback early on in the development process. When a SAST tool identifies a vulnerability in your code, it also reports the relevant line of code so you can go straight to the source of the issue.\nYou can find out more, including key considerations and best practices, in our complete guide to SAST.\nDAST\nDAST runs a series of automated security tests on a deployed web application. DAST tools start by crawling your application to identify all possible endpoints, then systematically analyze the responses and simulate attacks. \nThe results are typically reported with suggested remediation steps, but you’ll need to identify the relevant section of code yourself.\nWhen comparing SAST vs DAST, DAST can only provide feedback at a later point in the SDLC, once you’ve built and deployed your software to a testing environment. However, this means you can use DAST to test how your application interacts with other systems and services.\nCheck out our guide to DAST to learn more about how the technique works, as well as best practices to help you get the most out of it.\nSAST vs DAST: key differences\nSAST and DAST are different styles of automated testing. There is some overlap in the types of vulnerabilities that each approach detects, but the differences in methodology mean these techniques are complementary, not competing.\nLet’s look at the differences in more detail.\n\n\n\n\nTesting approach\nSAST is a type of white box testing. It examines the source code of your application for insecure coding patterns, such as improper input validation or hard-coded API keys. \nBecause SAST goes through your code line by line, it tests every possible branch, including any that may not be exposed at runtime and therefore caught by other forms of testing.\nIn comparison to SAST, DAST is a form of black box testing, meaning the tool has no access to the source code and instead evaluates your application from the outside. DAST tools simulate attacks, such as XSS, CSRF, and SQL injection, on running software. \nSince DAST tests deployed applications, it can evaluate interactions with other systems and detect issues like credentials transmitted in plain text and security flaws arising from misconfigured servers or databases.\nUsage\nAs SAST examines your source code, you need to find a tool that supports the programming languages and frameworks you’re using.\nDAST, however, is language-agnostic. The only requirement for using DAST tools is that you build your application using web-based technologies.\nSoftware development life cycle stage\nWith SAST, there’s no need to build or run your software before you can test it. This means you can run SAST scans early in the development process, such as before pushing your changes or when opening a pull/merge request. \nYou might also choose to schedule regular SAST scans of your entire codebase as part of a nightly test run, or each time you merge changes into a deployment branch.\nDAST, on the other hand, requires an application to be deployed to a test environment. As a result, it can only provide feedback at a later point in the development process. \nAlthough this creates a longer feedback loop, it also provides an opportunity to test interactions with other systems and verify the environment configuration.\nTest results\nSAST tools typically highlight the offending line of code in the test results. Some SAST tools also provide guidance on each vulnerability and how to remedy them.\nAs a black box testing technique, DAST tools aren’t able to identify the relevant line of code in test results. However, many DAST tools provide additional information about vulnerabilities and advice on how to address each issue.\nAccuracy\nAlthough both SAST and DAST carry the risk of false positives (i.e., incorrectly reporting a vulnerability), SAST tools tend to return more false positives because it examines the code out of context.\nComparing SAST and DAST\n\nSASTDAST\nWhite box testing – from inside outBlack box testing – from outside in\nAnalyzes the source code or static binaries for vulnerabilitiesLooks for vulnerabilities while the application is running\nCan be used on any type of softwareLimited to web apps and services\nLimited to the source codeCan test interactions with other services/APIs\nTests every branch of the code, including those not exposed at runtimeMimics behavior of attackers and can identify environment/deployment specific issues\nPinpoints the line of code that introduces the vulnerabilityDoes not identify the source of the vulnerability in test results\nLanguage and framework dependentLanguage agnostic\nRequires access to source code or binaries. Does not require a working buildRequires a working build and deployment to testing/pre-production environment\nIdeal for use early in the CI/CD pipelineDesigned for use later in the CI/CD pipeline\nProvides developers with immediate feedback on latest changesResults provided later in the software development lifecycle\n\n\n\n\n\nWhen to use SAST, DAST, or both\nA common misconception is that SAST replaces DAST, or vice versa. In fact, SAST and DAST are complementary testing techniques that are used at different points in the software development lifecycle. You can include both SAST and DAST in your CI/CD pipeline.\nAs SAST doesn’t require a running application, it’s ideal for use early on in the development process, enabling a “shift left” approach to security testing. You can use SAST tools, such as Checkmarx, Spectra, SonarQube, or Veracode, to verify your latest code changes haven’t introduced any new security issues.\nBy running a SAST scan as part of your early-stage automated tests (alongside linting and unit tests), you can address any new security issues before building other functionality on top. The earlier you run these tests and act on the results, the easier it is, as the changes will still be fresh in your mind.\n🔧 SAST vs DAST tools: comparison table\n\nToolTypeProsConsCommon use cases\nSonarQubeSAST– Open-source and enterprise versions\n– Integrates with many IDEs and CI tools\n– Customizable rulesets– Limited to code-level analysis\n– May require tuning to reduce false positivesEarly-stage code reviews, pre-commit checks in CI pipelines\nCheckmarxSAST– Comprehensive security coverage\nIDE and CI/CD integration\n– Detailed remediation guidance– Enterprise pricing\n– Initial configuration can be complexSecure code analysis in large enterprises with compliance needs\nVeracodeSAST– Cloud-based with low setup overhead\n– Supports multiple languages– Less control over scanning process\n– May have slower scan timesEnterprises looking for SaaS SAST with strong reporting features\nSpectralSAST– Lightweight, fast scanning\n– Good for detecting hard-coded secrets– Not as feature-rich as enterprise toolsDeveloper-first environments, secrets scanning\nBurp SuiteDAST– Manual and automated testing\n– Excellent for advanced security teams– Steep learning curve\n– Limited CI/CD integration without extensionsPenetration testing, manual vulnerability verification\nAcunetixDAST– Fast, automated scans\n– Great UI and reporting\n– API security testing– False positives in some scenarios\n– Costly for smaller teamsRegular vulnerability scans in staging/pre-production environments\nOWASP ZAPDAST– Free and open-source\n– Highly customizable– Requires manual configuration\n– Not ideal for beginnersLightweight DAST testing, educational or small-team environments\nInvicti (Netsparker)DAST– Scalable and automated\n– Proof-based scanning to reduce false positives– Enterprise-focused pricing\n– Less control over scan logicAutomated DAST in continuous deployment environments\n\n\n\n\n\nOnce you merge your code changes, you can run additional automated SAST scans as part of your continuous integration (CI) flow. For instance, you might want to include a SAST tool in the automated tests you run after merging into specific branches, or as part of a nightly test run.\nAgain, this early feedback, combined with test results that identify the relevant code, supports a shift-left security approach and helps you address issues quickly.\nBecause DAST simulates attacks on a running application, it’s sometimes seen as a type of automated penetration testing. However, that doesn’t mean you should only use it when you’re running a pen test. Instead, as a type of automated security testing, DAST is ideal for use in an automated CI/CD pipeline.\nAs DAST requires a deployed application, the time from code change to test feedback is longer. Ideally, you should run DAST each time you deploy a build to a test environment. By incorporating a DAST tool like Acunetix, Burp Suite, or Invicti into your continuous delivery or continuous deployment process, you can detect security issues that SAST cannot identify. \nThat includes vulnerabilities resulting from changes to your environment configuration or from interactions with other services and APIs.\nUsing SAST and DAST (not SAST vs DAST!) in combination gives you the best of both worlds: early feedback that directs you to the source of the issue, plus verification your application as a whole can resist common attacks.\nHow to implement SAST and DAST effectively\nTo get the most out of your SAST and DAST tools, apply the following best practices:\nDo a baseline scan. If you haven’t used SAST or DAST on a project before, a good place to start is with a scan of your entire codebase and/or application to check for existing vulnerabilities.\nPrioritize your fixes. Both the baseline scan and subsequent test runs are likely to highlight a range of issues. Some will be more serious than others, so prioritize them accordingly. Once you’ve addressed the most important issues, you can start using SAST and DAST regularly to ensure you fix new issues as they emerge, while you continue to work through the backlog of minor issues.\n\n\n\n\n\nAutomate your SAST and DAST scans. Make continuous security testing part of your software development process. Incorporating SAST and DAST into a CI/CD pipeline helps shift security considerations further to the left (i.e., earlier in the process). Continuously analyzing and improving your software’s security posture is more effective and efficient than conducting quarterly security audits.\nManage false positives. False positives can quickly become a distraction when reviewing security test results. Optimize the signal-to-noise ratio by choosing tools that let you mute false positives so you can focus on real issues.\nIncorporate other automated security tests in your pipeline. As SAST only checks your source code, consider pairing it with SCA (software composition analysis) to check your project’s dependencies for known vulnerabilities.\nMake time for manual security testing. Running SAST, DAST and other automated tests on every code change or build provides a degree of confidence in your software, but cybersecurity requires a layered approach.\nHow TeamCity can help\nTeamCity is a CI/CD tool that enables software teams to automate their build, test, and deployment process, and get rapid feedback on their latest changes.\nExtensive pipeline configuration options give you the flexibility to create CI/CD flows that suit your needs, including pre-tested commits, merge/pull request support, and scheduled builds. \nTeamCity’s plugin support for a range of SAST and DAST tools – including Acunetix,  Checkmarx,  SonarQube, and Veracode – means you can easily incorporate automated security testing into your CI/CD process. \nEach time a pipeline runs, on-the-fly test reporting alerts you to issues as they’re discovered, while detailed test reports help you get to the root cause quickly.\nKey takeaways\nSAST and DAST are automated security testing techniques.\nUsing these techniques can help you “shift security to the left”.  This means you find and address security flaws earlier, thereby making the development process more effective and efficient.\nSAST checks your code line-by-line and is ideal for use early on in the development process.\nDAST simulates an attack on your running software and can only be used once your code has been built and deployed to a testing environment.\nBoth SAST and DAST can be run as part of an automated CI/CD process.\nTeamCity is a CI/CD platform that supports a number of SAST and DAST tools alongside many other features designed to help you build secure and reliable software.",
        "dc:creator": "Olga Bedrina",
        "content": "Anyone working in the software development field knows cybersecurity is a threat you cannot afford to downplay. A cyberattack on a product or service you’ve created carries a risk of serious financial and reputational damage, as well as regulatory penalties, depending on the industry and jurisdiction. Defending your software against cyberattacks means addressing security at [&#8230;]",
        "contentSnippet": "Anyone working in the software development field knows cybersecurity is a threat you cannot afford to downplay. A cyberattack on a product or service you’ve created carries a risk of serious financial and reputational damage, as well as regulatory penalties, depending on the industry and jurisdiction. Defending your software against cyberattacks means addressing security at […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=566328",
        "categories": [
          "testing",
          "guide"
        ],
        "isoDate": "2025-05-09T16:49:43.000Z"
      },
      {
        "creator": "Kodee",
        "title": "Kodee’s Kotlin Roundup: Compose Multiplatform for iOS is Stable (Plus AI, Web, and More!)",
        "link": "https://blog.jetbrains.com/kotlin/2025/05/kodees-kotlin-roundup-compose-multiplatform-for-ios-is-stable/",
        "pubDate": "Fri, 09 May 2025 14:38:45 +0000",
        "content:encodedSnippet": "Sit back, relax, and let the Kotlin vibes roll in.\nThis roundup is overflowing with news: major moves in Kotlin Multiplatform (Compose Multiplatform for iOS is Stable 🎉), server-side upgrades, Kotlin for web, and smarter Kotlin development with JetBrains AI. Whether you’re building mobile apps, backend services, or playing with interactive notebooks, there’s something here for everyone.\nWhat’s new in Kotlin\nKotlin 2.1.21-RC2\nA fresh Release Candidate is out with Kotlin 2.1.21-RC2, bringing bug fixes and performance boosts to 2.1.20. It’s a behind-the-scenes kind of update, but your builds might feel a little snappier.\nSee release notes\n                                                    \nKotlin 2.2.0-Beta2\nKotlin 2.2.0-Beta2 has also landed with a handful of improvements:\nCheck out all the highlights\n                                                    \nKotlinConf 2025 livestream\nKotlinConf 2025 kicks off soon! If you can’t make it in person, no worries – you can catch all the action via our livestream (will be announced shortly!). This year, we’ll be streaming only the main track, bringing you keynotes and sessions from the heart of the event. Subscribe to our Kotlin YouTube channel so you don’t miss a beat.\nSubscribe to Kotlin on YouTube\n                                                    \nSmarter Kotlin development with JetBrains AI: Junie and AI Assistant in IntelliJ IDEA\nWith the public release of Junie and a major update to AI Assistant, the two AI-powered teammates are now baked right into your JetBrains IDEs. Junie tackles full Kotlin tasks, while AI Assistant helps with everything, including writing code, generating tests, explaining errors, and even managing version control tasks. Kotlin and AI are a perfect match!\nSee what’s new\n                                                    \nHow helpful is Kotlin’s documentation to you?\nHave you explored Kotlin’s documentation lately? Did you find what you came for, or did something trip you up? Take our Kotlin Documentation Survey to help us shape a better experience for developers like you.\nTake the survey\n                                                    \nKotlin Multiplatform\nCompose Multiplatform for iOS is now Stable\nHuge news! Compose Multiplatform for iOS has become Stable and production-ready in the latest 1.8.0 version. KMP is now a complete solution for mobile development, enabling you to build mobile apps faster with shared UI code, full control over native experiences, and the confidence to ship at scale, all with a sprinkle of Kotlin magic.\nDiscover the highlights\n                                                    \nklibs.io keeps on growing\nThe number of Kotlin Multiplatform libraries listed on klibs.io, our online search platform, has doubled recently. If you haven’t browsed klibs.io lately, you’re missing out on some handy tools.\nTry klibs.io\n                                                    \nKotlin for server-side development\nKtor 3.1.3 released\nWe have released Ktor 3.1.3! The latest version is packed with bug fixes, performance improvements, and dependency updates across both the client and server components.\nSee the full changelog\n                                                    \nStructuring Ktor projects using domain-driven design (DDD) concepts – guide\nOur new guide shows you how to structure a project using domain-driven design (DDD) concepts. You’ll walk through creating a minimalist CRM system that’s clean, scalable, and ready for long-term growth.\nCheck out the guide\n                                                    \nKotlin Notebook arrives in IntelliJ IDEA\nStarting with version 2025.1, Kotlin Notebook, a new interactive environment for JVM developers, is integrated into IntelliJ IDEA Ultimate out of the box – no plugins needed.\nRead the full story\n                                                    \nHow to use Kotlin Notebook for productive development \nKotlin Notebook provides a powerful tool for backend and API developers. It makes your workflow smoother, whether testing REST APIs, using JVM libraries and project code, or working with data.\nImprove your dev flow\n                                                    \nKotlin for web development\nThe present and future of Kotlin for web\nA lot has been happening behind the scenes, and now we’re ready to share the latest updates. From better IDE support for web targets to Kotlin/Wasm and Compose Multiplatform for web moving toward Beta, web development in Kotlin is progressing quickly.\nCatch a glimpse of the future\n                                                    \nMore news\nThe story behind K2 mode and how it works\nTune in for live Google I/O keynotes and sessions, and don’t miss this dedicated Kotlin Multiplatform session: Demystify KMP builds and structure.\nGradle Best Practices – Gradle, Google, and JetBrains have joined forces to define Gradle best practices, helping you build confidently, avoid pitfalls, and future-proof your projects.\nAmper Update April 2025 – IDE and CLI Feature Drop!\nK2 Mode in IntelliJ IDEA 2025.1: Current State and FAQ\nUpdate on Context Parameters\nBringing Fuzz Testing to Kotlin with kotlinx.fuzz\nKotlin YouTube spotlight\nCreator of Spring: No desire to write Java | Talking Kotlin\nUsing Platform-Specific APIs in KMP Apps | Pamela Hill\nHow Junie Helps You Code Faster with Kotlin in IntelliJ IDEA | Sebastian Aigner\nHow Kotlin Developers Use JetBrains AI Assistant in IntelliJ IDEA | Sebastian Aigner",
        "dc:creator": "Kodee",
        "content": "Sit back, relax, and let the Kotlin vibes roll in. This roundup is overflowing with news: major moves in Kotlin Multiplatform (Compose Multiplatform for iOS is Stable 🎉), server-side upgrades, Kotlin for web, and smarter Kotlin development with JetBrains AI. Whether you&#8217;re building mobile apps, backend services, or playing with interactive notebooks, there’s something here [&#8230;]",
        "contentSnippet": "Sit back, relax, and let the Kotlin vibes roll in. This roundup is overflowing with news: major moves in Kotlin Multiplatform (Compose Multiplatform for iOS is Stable 🎉), server-side upgrades, Kotlin for web, and smarter Kotlin development with JetBrains AI. Whether you’re building mobile apps, backend services, or playing with interactive notebooks, there’s something here […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=566232",
        "categories": [
          "news",
          "updates"
        ],
        "isoDate": "2025-05-09T14:38:45.000Z"
      },
      {
        "creator": "Artem Kobzar",
        "title": "Present and Future of Kotlin for Web",
        "link": "https://blog.jetbrains.com/kotlin/2025/05/present-and-future-kotlin-for-web/",
        "pubDate": "Thu, 08 May 2025 16:03:32 +0000",
        "content:encodedSnippet": "TL;DR: We remain committed to empowering Kotlin developers with robust and seamless support in Kotlin Multiplatform for web development. To achieve this, we are working on several key areas:\nImproving IDE support for web targets.\nPromoting Kotlin/Wasm and Compose Multiplatform for web to Beta.\nProviding a compatibility mode for Compose Multiplatform in older browsers.\nEliminating most limitations of interop in Kotlin/JS.\nTargeting the latest JavaScript standard in Kotlin/JS.\nKotlin Multiplatform (KMP) aims to help developers share code across different platforms, significantly reducing development time and effort. The web plays a crucial role in this ecosystem, being the most widely used client-side platform.\nWhile we haven’t published an update in a while, a lot has been happening, and now we’re ready to share the latest developments.\nCurrent landscape: JavaScript and Wasm\nKotlin Multiplatform is a production-ready technology that targets many platforms via four compiler backends: Kotlin/JVM, Kotlin/JS, Kotlin/Native, and Kotlin/Wasm.\nWhen it comes to the web, KMP offers two different solutions: compiling to JavaScript (Kotlin/JS) and WebAssembly (Kotlin/Wasm). Let us explain why we have both of them.\nWhy two web targets?\nKotlin Multiplatform provides a unique approach for sharing code and is built around flexibility. Depending on your project’s needs, you might want to:\nShare only the business logic and keep the UI native.\nShare both the business logic and the UI across all platforms.\nThese two cases have different technical requirements, and JS and Wasm targets serve them accordingly.\nSharing business logic\nIf your goal is to share business logic on the web, you may have a few requirements, like the ability to:\nProvide a complex business logic to the native UI, which is predominantly based on JS. \nLoad only the required business logic for a specific web page to reduce network load.\nInteract between JavaScript and Kotlin parts without extra performance costs.\nIn this case, Kotlin/JS is the better fit because it provides a better interop experience.\nSharing both logic and UI\nIf you want to share the entire application, including the UI, across platforms, this is where Compose Multiplatform comes into play. With it, your requirements for web rendering and performance naturally change:\nYou want the same UI rendered consistently on every platform, including the web.\nSmooth animations and responsive transitions become critical.\nHere, Kotlin/Wasm shines. According to our benchmarks, WebAssembly performs much better (almost 3 times faster) in the UI-sharing scenario.\nSee our detailed recommendation on which target to choose for your application.\nWhat updates are coming soon?\nIn the sections that follow, we’ll walk you through the most important updates and initiatives, from IDE tooling and interoperability improvements to the evolution of Compose Multiplatform for web.\nLet’s take a closer look at those areas.\nBetter IDE support for web targets\nAs part of our broader effort to provide an excellent Kotlin Multiplatform developer experience, we’re actively working on better KMP support in IntelliJ IDEA and Android Studio.\nThis also includes improving the experience for JavaScript and Wasm targets. While code functionality is available in both IDEs, certain features, like debugging of JavaScript and Wasm targets, are currently available only in IntelliJ IDEA.\nWe’ve started this journey by taking the following steps:\nAdding a wizard for creating a new KMP project targeting web platforms.\nIntegrating a platform debugger to debug your KMP project on both web targets easily.\nAdding gutter icons for application entry points and tests to run them easily, without thinking about which Gradle task you should use.\nPromoting our Wasm target and Compose Multiplatform for web to Beta\nWe understand that the web is an important platform for many Compose Multiplatform users, and we are committed to enhancing the development experience for those targeting it.\nContinued improvements in Compose Multiplatform for web\nSince moving to Alpha, Compose Multiplatform for web has received major updates, reducing the feature gap with other platforms. For example, text input handling was significantly improved, especially on mobile devices. The next big things we are working on are accessibility and interoperability with native HTML elements. \nKotlin/Wasm: Now in all modern versions of major browsers\nWebAssembly (Wasm) has also matured. As of December 11, 2024, all major browsers, including Safari, support WebAssembly Garbage Collection (WasmGC). This means Kotlin/Wasm applications can now run across all modern major browsers.\nImproving the Wasm development experience\nOver the last few years, improving the development experience for Wasm target has been our top priority. To that end, we’ve: \nIntroduced incremental compilation, making builds up to twice as fast.\nEnhanced debugging support for browsers, providing better stepping functionality and an improved variable view.\nIn the next few months, we will focus more on enhancing stability to make targeting Wasm in KMP projects as smooth as possible and reduce breaking changes in the future. \nOverall, we aim to make both technologies feature-complete (as close as possible) and promote them to Beta this year.\nProviding a compatibility mode for Compose Multiplatform\nAs we already mentioned, we recommend targeting Wasm when you want an application with a multiplatform UI. However, there are some limitations to consider. The Wasm target relies on browser support for WasmGC, which may cause Kotlin applications targeting Wasm to be incompatible with older browsers that lack this support – see this guide for more details.\nTo address this, we’re introducing a compatibility mode in Compose Multiplatform.\nWith a new common source set called webMain, you will now have a single source for the `actual` declarations for both JavaScript and Wasm targets. \nUsing a special DSL in the CMP Gradle plugin, your application will be compiled to run the Wasm version of the app in modern browsers, taking full advantage of the Wasm target’s performance. For older browsers, the JavaScript version will run automatically, preventing a blank screen and maintaining usability.\n\n\n\n\n\nNote: Compose Multiplatform still relies on WebAssembly on the rendering engine side. However, this part uses WebAssembly features that have been available in all major browsers since 2017.\nEliminate most of the limitations of interop in Kotlin/JS\nToday’s approach to interop with JavaScript in Kotlin is based on the experimental @JsExport annotation, which has constraints that make it challenging to use in enterprise applications.\nWe are working on removing those limitations to provide a more seamless interop experience with JavaScript. Once this work is complete, you can mark the majority of Kotlin declarations with the @JsExport annotation, which will be stabilized.\nFor cases where you can’t mark a declaration with this annotation, like when you don’t own sources of the used libraries but still want to export some declarations from there to JavaScript, there will be a DSL inside the multiplatform Gradle plugin, which helps to export all the needed declarations from those libraries.\nTargeting the latest JavaScript standard in Kotlin/JS\nHistorically, the only available KMP JS target was ES5, which is now quite outdated. For the last two years, we’ve worked on introducing experimental support for compiling with modern JavaScript features like classes, generators, and arrow functions.\nThis new support reduces bundle size and improves performance in some cases, which is why we aim to stabilize it and add more modern features like BigInt and dynamic import.\nWe aim to target only the latest version of the JavaScript specification, thereby achieving even further reductions in bundle size and performance improvements. If you need to target older browsers, we’re integrating Babel inside our Gradle plugin. It will lower the generated JavaScript for compatibility with older browsers, so you still have the same range of platform support.\nThe road ahead for Kotlin for web\nThese aren’t the only improvements planned for Kotlin’s web targets. Several important initiatives are already underway.\nHere’s what’s coming next:\nMultithreading support in the Wasm target. To take advantage of modern multi-core processors and provide the best performance, we are going to prototype multithreading support for the Kotlin/Wasm compiler. Our goal is to make multithreaded development on the web as easy as it is on the JVM, elevating the development of high-performance web applications to a new level.\nPer-module compilation in the Wasm target. To improve development round-trip time and program modularity, we are working on generating multiple WebAssembly modules. This approach complements the recently introduced incremental compilation by allowing the recompilation of only the changed Kotlin modules. It also enables loading program parts on demand, which can significantly improve application startup time and reduce network load. In addition, it is a building block for supporting plugin systems in Kotlin applications targeting Wasm.\nModern JavaScript tooling integration. To speed up the compilation cycle, we want to add an alternative to the Webpack integration we have today inside the Gradle plugin. We aim to decouple the Webpack integration to enable integration with any modern JavaScript bundler, like esbuild, repack, Vite, or bun.\nAutomatic generation of Kotlin wrappers from TypeScript typings. To remove the frustration of writing Kotlin wrappers to consume a JavaScript/TypeScript library, we’ve come back to the integration of an automatic external-declarations generator for the multiplatform Gradle plugin. For each NPM dependency declared in your project, you will automatically get ready-to-consume Kotlin declarations describing the available API from the library.\nFinal thoughts\nThanks to recent surveys, YouTrack tickets, questions, and suggestions from across our channels, we’ve gathered a wealth of valuable feedback and built a clear direction for Kotlin on the web. We couldn’t have done it without you!\nTo share more feedback or questions, please join our Slack community. There, you will find specific channels on various topics you might be interested in, like #webassembly, #compose-web, #javascript, and #multiplatform.\nWe appreciate all your support, and we are committed to providing you with a great experience as you build with Kotlin across platforms.",
        "dc:creator": "Artem Kobzar",
        "content": "TL;DR: We remain committed to empowering Kotlin developers with robust and seamless support in Kotlin Multiplatform for web development. To achieve this, we are working on several key areas: Kotlin Multiplatform (KMP) aims to help developers share code across different platforms, significantly reducing development time and effort. The web plays a crucial role in this [&#8230;]",
        "contentSnippet": "TL;DR: We remain committed to empowering Kotlin developers with robust and seamless support in Kotlin Multiplatform for web development. To achieve this, we are working on several key areas: Kotlin Multiplatform (KMP) aims to help developers share code across different platforms, significantly reducing development time and effort. The web plays a crucial role in this […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=565772",
        "categories": [
          "multiplatform",
          "kotlin-js",
          "kotlin-wasm"
        ],
        "isoDate": "2025-05-08T16:03:32.000Z"
      },
      {
        "creator": "Sasha Ivanova",
        "title": "ReSharper and Rider 2025.1.2 – Bug Fixes Have Landed!",
        "link": "https://blog.jetbrains.com/dotnet/2025/05/08/resharper-rider-2025-1-2-bug-fix/",
        "pubDate": "Thu, 08 May 2025 16:01:52 +0000",
        "content:encodedSnippet": "A second set of bug fixes for the 2025.1 versions of ReSharper and Rider has just been released. \nLet’s take a look at what’s been improved.\nReSharper \nReSharper 2025.1.2 comes with the following fixes:\nReSharper now correctly detects that values supplied from query strings in .NET 8 satisfy property usage. [RSRP-499566] \nReSharper’s ability to provide code completion for .shader files has been restored. [RSRP-499444] \nLinkage entity creation by ReSharper C++ for typedef-declarators with uint8_t types has been fixed. [RSCPP-35453] \n\n\n\n\ndotTrace\nTimeline viewer now correctly locates and lists functions when searching by type name. [DTRC-31451]\nFor the full list of resolved issues, please refer to our issue tracker.\nDownload ReSharper 2025.1.2\n                                                    \nRider \nRider 2025.1.2 comes with the following updates:\nMixed mode debugging [Beta]\nThis update introduces a beta version of mixed mode debugging – a capability that lets you debug both .NET and C/C++ code in a single session. The current implementation supports only the Mono Windows x64 scenario.\nTo enable the mixed mode debugging in Rider 2025.1.2, go to Help | Find Action, type in Registry, and open it. Then search for the rider.debugger.enable.mono.mixed.mode flag name and check the box to enable it.\nIf you encounter any issues while using the beta version of this feature or would like to share feedback, please leave a comment to this ticket. \nNotable fixes:\nRider no longer fails to create an IIS virtual directory when starting an IIS Run/Debug configuration. [RIDER-122091]\nWe’ve resolved an issue where rider.stacktrace.filters lead to excessive CPU usage and made the IDE unresponsive. [RIDER-124432]\nResolved an exception where the key ‘Struct’ was missing in the internal dictionary. [RIDER-117711]\nClicking on Cancel in the Clear Read-Only Status dialog no longer results in unintended file changes. [RIDER-123001] \nMSBuild variables are now properly expanded in launchSettings.json. [RIDER-123106]\nDocker Compose configurations now start all required services as expected. [RIDER-124693]\nThe debugger no longer tries to attach to non-dotnet services in Docker Compose projects, preventing startup issues. [RIDER-124622]\nF# script files are now analysed correctly without the IDE throwing resolve errors. [RIDER-124345]\nThe correct target framework for MAUI apps can once again be successfully specified in the Launch Settings. [RIDER-123898]\nRider now correctly handles the renaming of Unity properties with serialized backing fields by suggesting the FormerlySerializedAs attribute. [RIDER-82634]\nThe Use new cross-platform dotTrace Viewer by default setting is once again respected. [DTRC-31648]\nThe correct operation of the Open in Legacy Viewer action for performance snapshots has been restored. [DTRC-31649]\nSettings backup and synchronization via Backup and Sync again works as expected upon authorization. [IJPL-183565]\n\n\n\n\nFor the full list of resolved issues, please refer to our issue tracker.\nDownload Rider 2025.1.2\n                                                    \nYou can download the latest builds from our website (Rider, ReSharper) or via the Toolbox App. You can also update Rider as a snap.",
        "dc:creator": "Sasha Ivanova",
        "content": "A second set of bug fixes for the 2025.1 versions of ReSharper and Rider has just been released.&#160; Let’s take a look at what’s been improved. ReSharper&#160; ReSharper 2025.1.2 comes with the following fixes: dotTrace Timeline viewer now correctly locates and lists functions when searching by type name. [DTRC-31451] For the full list of resolved [&#8230;]",
        "contentSnippet": "A second set of bug fixes for the 2025.1 versions of ReSharper and Rider has just been released.  Let’s take a look at what’s been improved. ReSharper  ReSharper 2025.1.2 comes with the following fixes: dotTrace Timeline viewer now correctly locates and lists functions when searching by type name. [DTRC-31451] For the full list of resolved […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=565534",
        "categories": [
          "net-tools",
          "bugfix",
          "news",
          "releases",
          "resharper",
          "rider",
          "dottrace"
        ],
        "isoDate": "2025-05-08T16:01:52.000Z"
      },
      {
        "creator": "Kerry Beetge",
        "title": "Taint Analysis: WebGoat Demo",
        "link": "https://blog.jetbrains.com/qodana/2025/05/taint-analysis-qodana/",
        "pubDate": "Thu, 08 May 2025 10:22:44 +0000",
        "content:encodedSnippet": "This blog post is a text version of the demo provided during the Taint Analysis Livestream: Exploring Hidden Dangers In Your Team’s Code.\nGuest Author, Grigorii Liullin\nSecurity-focused software developer at JetBrains.\nTable of Contents\n\nSQL injection\nReflected XSS\nPath traversal\nWant to see Qodana in action?\n\nToday, we’ll use WebGoat as our test application to demonstrate Qodana’s taint analysis functionality. This application is deliberately insecure. The first step is to open the application’s source code (the main branch) in IntelliJ IDEA (for this demo we are using 2025.1 Ultimate Edition). It is also required to configure your IDE to transform your IDE into the powerful SAST tool by installing the Security Analysis plugin and enabling the ​​Security | Taint analysis inspection.\n\n\n\n\nThen, navigate to the Security Analysis tab and run the analysis. \n\n\n\n\nAs you can see, we got the results immediately. Let’s take a look at them.\nSQL injection\nHere we have a classic example of SQL injection:\n\n\n\n\nAs we can see, the password field reaches the SQL statement without validation. Let’s quickly validate it via BurpSuite by breaking the SQL statement context:\n\n\n\n\nThe SQL syntax was broken, so the problem is indeed real. Now, it’s time to exploit it and get access to the account by making the WHERE clause true independent of the password’s correctness:\n\n\n\n\nNow we should write a report to the team to notify them of the vulnerability. But how can we share our findings with the development team? Integrating the scan into the CI/CD process and having results in Qodana Cloud as a source of truth for the security and development teams is a good approach. Let’s see what this might look like.\nOpen the Qodana tab and click on the Try Locally button. For the purposes of this demonstration, I’ll use the default configuration with the qodana.starter profile and jetbrains/qodana-jvm:2025.1 linter.\n\n\n\n\nIt is possible to open the results locally in the browser by clicking on the Show Qodana in Browser button in the left-side panel:\n\n\n\n\nLet’s filter the findings by the Security category and open the list of problem types that were found: \n\n\n\n\nNow let’s find the SQLi problem that we analyzed:\n\nWhen you perform this scan in Qodana Cloud, you can easily use the Copy link button and attach a link to the report so that the development team can easily find and fix the problem.\nThe proper mitigation in this case is to precompile the statement without user input and provide the values afterward. We can use AI Assistant to do this for us. Just select the line with the problem and ask AI Assistant to fix it:\n\n\n\n\nAnd the problem is fixed correctly – the precompiled SQL statement doesn’t contain the unvalidated user input and it is not possible to escape from the SQL context.\nReflected XSS\nLike many real applications, WebGoat has its own specificities and sometimes it is necessary to reconfigure the taint engine in order to spot the problems. There is a CrossSiteScriptingLesson5a class that was not detected by default. Let’s take a look and try to figure out why this happened.\nThe WebGoat application uses a custom AttackResultBuilder, an unsafe sink in this particular application. It’s not a library class or common approach that makes sense to support out of the box in the taint engine. But don’t worry, it’s possible to add this configuration to the special configuration file inside the inspections directory in the project root. Create this directory if you don’t already have it. Then select New | Custom Inspection from the context menu.\n\n\n\n\nSelect New Taint Configuration and provide any convenient name for the file: \n\n\n\n\nProvide the following content for the configuration file:\nsink(“org.owasp.webgoat.container.assignments.AttackResultBuilder.output”, listOf(1), TaintRule.XSS)\nThe final file content should appear as follows:\n\n\n\n\nIt is important to recompile the configuration by clicking the refresh button in the top left-hand corner:\n\n\n\n\nThen the taint analysis will detect the problem in the editor on the fly:\n\n\n\n\nLet’s analyze the data flow analysis trace:\n\n\n\n\nThere is a field field1 that contains the user input, and this will be reflected without proper validation. Let’s find this field on WebGoat’s web UI:\n\n\n\n\nWe can spot the message’s text inside the StringBuilder (“We have charged credit card…”), and we can now exploit it with a simple XSS payload <script>alert(1);</script>:\n\n\n\n\nPath traversal\nIt is also possible to find vulnerabilities in unexpected places. For example, a WebWolf application is required to help you solve tasks from the WebGoat. It isn’t designed to have vulnerabilities, but it nevertheless contains some of its own.\nHere we have a path traversal vulnerability allowing us to write a file outside the designated directory.\n\n\n\n\nLet’s save a file to the /tmp directory:\n\n\n\n\nIt is indeed an exploitable path traversal issue:\n\n\n\n\n\nThat’s all for the demo! As we demonstrated, taint analysis by Qodana is indeed capable of dealing with security issues. The number of sources and sinks is growing, so it detects more and more problems. Even if it can’t detect your specific sources or sinks, you can configure them via a convenient Kotlin DSL configuration format.\nWant to see Qodana in action?\nThe Qodana team is here to show you how you can improve code quality and security. Let us know what your needs are and book a customized demo – or simply dive right in and try Qodana for yourself. \nBook Demo",
        "dc:creator": "Kerry Beetge",
        "content": "This blog post is a text version of the demo provided during the Taint Analysis Livestream: Exploring Hidden Dangers In Your Team&#8217;s Code. Today, we’ll use WebGoat as our test application to demonstrate Qodana’s taint analysis functionality. This application is deliberately insecure. The first step is to open the application’s source code (the main branch) in [&#8230;]",
        "contentSnippet": "This blog post is a text version of the demo provided during the Taint Analysis Livestream: Exploring Hidden Dangers In Your Team’s Code. Today, we’ll use WebGoat as our test application to demonstrate Qodana’s taint analysis functionality. This application is deliberately insecure. The first step is to open the application’s source code (the main branch) in […]",
        "guid": "https://blog.jetbrains.com/?post_type=qodana&p=565972",
        "categories": [
          "tutorial"
        ],
        "isoDate": "2025-05-08T10:22:44.000Z"
      },
      {
        "creator": "Dmitrii Korovin",
        "title": "TeamCity 2025.03.2 Is Out",
        "link": "https://blog.jetbrains.com/teamcity/2025/05/teamcity-2025-03-2-bug-fix/",
        "pubDate": "Thu, 08 May 2025 09:27:07 +0000",
        "content:encodedSnippet": "Today we’re rolling out TeamCity On-Premises 2025.03.2, the second bug-fix update for the major TeamCity version released in back in March. This update addresses a few product issues, such as:\nBuilds getting stuck in the build queue due to agent cloud profile errors;\nHanging Kubernetes Executor builds that run cross-platform msbuild commands;\n“Failed to copy artifacts” errors in the Artifact Migration tool;\nThe project-config.xml file missing from large project clones.\nBug-fix updates also include performance improvements and security patches, so it’s always a good idea to install them as they come out. See TeamCity 2025.03.2 Release Notes for the complete list of resolved issues.\nWhy update?\nStaying up to date with minor releases ensures your TeamCity instance benefits from the following:\nPerformance improvements.\nBetter compatibility with integrations.\nFaster, more stable builds.\nEnhanced security for your workflows.\nCompatibility\nTeamCity 2025.03.2 shares the same data format as all 2025.03.x releases. You can upgrade or downgrade within this series without the need for backup and restoration.\nHow to upgrade\nUse the automatic update feature in your current TeamCity version.\nDownload the latest version directly from the JetBrains website.\nPull the updated TeamCity Docker image.\nNeed help?\nThank you for reporting issues and providing feedback! If you have questions or run into any problems, please let us know via the TeamCity Forum or Issue Tracker.\nHappy building!",
        "dc:creator": "Dmitrii Korovin",
        "content": "Today we&#8217;re rolling out TeamCity On-Premises 2025.03.2, the second bug-fix update for the major TeamCity version released in back in March. This update addresses a few product issues, such as: Bug-fix updates also include performance improvements and security patches, so it’s always a good idea to install them as they come out. See TeamCity 2025.03.2 [&#8230;]",
        "contentSnippet": "Today we’re rolling out TeamCity On-Premises 2025.03.2, the second bug-fix update for the major TeamCity version released in back in March. This update addresses a few product issues, such as: Bug-fix updates also include performance improvements and security patches, so it’s always a good idea to install them as they come out. See TeamCity 2025.03.2 […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=565379",
        "categories": [
          "bug-fix"
        ],
        "isoDate": "2025-05-08T09:27:07.000Z"
      },
      {
        "creator": "Kerry Beetge",
        "title": "New Single Sign On Is Here!",
        "link": "https://blog.jetbrains.com/qodana/2025/05/new-single-sign-on-is-here/",
        "pubDate": "Thu, 08 May 2025 06:44:26 +0000",
        "content:encodedSnippet": "Configure SSO in Qodana Cloud with just a few clicks.\nIf you have a Qodana license with at least 10 users, you can now configure custom single sign on (SSO) support for Qodana Cloud. Quick and easy sign-ons are just another way to make access easier and improve the login experience for your team. Watch the video below and see how easy it is to implement. \nEnable SSO from the organization settings, add your desired auth module, and assign users or groups to the configured Qodana roles. User states will be automatically synced if your auth module supports it.\n\nUsing your custom Qodana URL, users can now log in to Qodana Cloud or the IDE plugin via your configured identity provider.\n\nClick play to view setup, below. \n\n\n\n\nPlease note: Soon this feature will only be available for users with Ultimate+ licenses.\nTalk to the Qodana team about code quality done right\nIf you have any questions or suggestions – or simply want to learn more about how Qodana can help your team and your business – post a comment here, tag us on X or LinkedIn, or contact us at qodana-support@jetbrains.com.\nIf you need help, don’t hesitate to get in touch with us. Qodana support is only a few clicks away, or you can submit an issue on our YouTrack board. \nGet Qodana\nOther recent releases\nLearn more about the 2025.1 Qodana release, Virtual Studio plugin, native mode solution, Self Hosted (lightweight) edition, and Qodana Insights Dashboard in Qodana’s documentation.",
        "dc:creator": "Kerry Beetge",
        "content": "Configure SSO in Qodana Cloud with just a few clicks. If you have a Qodana license with at least 10 users, you can now configure custom single sign on (SSO) support for Qodana Cloud. Quick and easy sign-ons are just another way to make access easier and improve the login experience for your team. Watch [&#8230;]",
        "contentSnippet": "Configure SSO in Qodana Cloud with just a few clicks. If you have a Qodana license with at least 10 users, you can now configure custom single sign on (SSO) support for Qodana Cloud. Quick and easy sign-ons are just another way to make access easier and improve the login experience for your team. Watch […]",
        "guid": "https://blog.jetbrains.com/?post_type=qodana&p=556194",
        "categories": [
          "releases",
          "qodana",
          "sso"
        ],
        "isoDate": "2025-05-08T06:44:26.000Z"
      },
      {
        "creator": "Maria Kosukhina",
        "title": "IntelliJ IDEA 2025.1.1 Is Out!",
        "link": "https://blog.jetbrains.com/idea/2025/05/intellij-idea-2025-1-1/",
        "pubDate": "Wed, 07 May 2025 14:01:40 +0000",
        "content:encodedSnippet": "We’ve just released the first minor version for IntelliJ IDEA 2025.1 – v2025.1.1.\nYou can update to this version from inside the IDE, using the Toolbox App, or by using snaps if you are a Ubuntu user. You can also download it from our website.\nHere are the most notable updates:\nSetting backup and synchronization via Backup and Sync now works as expected upon authorization with JetBrains Account. [IJPL-183565]\nDebugging tests when using Gradle 7.x.x no longer fails. [IDEA-369597]\nThe IDE again correctly imports Maven projects that use several –add-exports arguments. [IDEA-371005]\nThe Paths filter in the Git tool window again works as expected, filtering branches according to the selected repository. [IJPL-182203]\nZsh with custom config files again works correctly in the IDE terminal. [IJPL-184171] \nIt is again possible to deploy applications to WildFly from the IDE when using Java 24. [IDEA-369513]\nThe Markdown preview is now consistently displayed. [IJPL-59375]\nText copied from tooltip popups via Option/Alt + click no longer includes unwanted HTML tags. [IJPL-148514]\nThe Kotest tool window is again consistently available and works as expected. [IJPL-184686]\nIt is now possible to disable the HTTP Client to encode special characters like +, @, %, and more in URLs so they are sent as is by adding the @no-auto-encoding annotation before the request. [IJPL-65386], [IJPL-66739]\nThe IDE now correctly respects @Nullable on local variables when a default qualifier is used. [IDEA-358087]  \nTo find out more about the resolved issues, please refer to the release notes. \nIf you encounter any issues or would like to make a suggestion or a feature request, please submit them to our issue tracker.\nHappy developing!",
        "dc:creator": "Maria Kosukhina",
        "content": "We’ve just released the first minor version for IntelliJ IDEA 2025.1 – v2025.1.1. You can update to this version from inside the IDE, using the Toolbox App, or by using snaps if you are a Ubuntu user. You can also download it from our website. Here are the most notable updates: To find out more [&#8230;]",
        "contentSnippet": "We’ve just released the first minor version for IntelliJ IDEA 2025.1 – v2025.1.1. You can update to this version from inside the IDE, using the Toolbox App, or by using snaps if you are a Ubuntu user. You can also download it from our website. Here are the most notable updates: To find out more […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=565351",
        "categories": [
          "releases",
          "2025-1-1",
          "bug-fix-update",
          "intellij-idea-2025-1",
          "intellij-idea-2025-1-1"
        ],
        "isoDate": "2025-05-07T14:01:40.000Z"
      },
      {
        "creator": "Maria Goldade",
        "title": "CLion Is Now Free for Non-Commercial Use",
        "link": "https://blog.jetbrains.com/clion/2025/05/clion-is-now-free-for-non-commercial-use/",
        "pubDate": "Wed, 07 May 2025 11:57:37 +0000",
        "content:encodedSnippet": "“C makes it easy to shoot yourself in the foot. C++ makes it harder, but when you do, it blows away your whole leg.” — Bjarne Stroustrup\nWe can’t make С and C++ simpler, but we can make working with them a bit easier. CLion is now free for non-commercial use!\nYes, finally.\nWhether you’re a student, an Arduino experimenter, or someone who loves С and C++ with all your heart despite all the challenges these languages present, CLion is now available to you for free – as long as you’re not using it for commercial work.\nWhat’s happening?\nLast year we implemented a new licensing model for RustRover, Rider, and WebStorm, making them free for non-commercial use. We’re now extending this model to CLion. If you’re using it for non-commercial purposes, such as learning, open-source project development, content creation, or hobby development, you can now do so for free. For commercial use, our existing licensing model still applies.\nNote that while CLion now joins RustRover, Rider, and WebStorm in being free for non-commercial use, this update doesn’t apply to other JetBrains IDEs at this time. We’re keeping an eye on how things go and will continue evaluating the impact of this initiative.\nWhy are we doing this?\nIn making non-commercial development free, we aim to make JetBrains IDEs more accessible to a broader audience. We hope the new licensing model will further lower the barrier to using our IDEs, helping you learn, grow, and stay creative.\nYou can find more details about why we’re introducing this update in the blog post making the original announcement.\nWhy CLion?\nC++ is powerful, but it’s not exactly known for being easy or forgiving. And then there’s C – lean, low-level, and still a core part of many computer science curricula. Whether you’re learning these languages, diving into systems programming, or exploring embedded development on your own, C and C++ often come with a steep learning curve.\nWe want to support that journey. With CLion now free for non-commercial use, it’s easier for you to experiment, learn, and build – without worrying about the IDE license.\nCommercial vs. non-commercial use\nAs defined in the Toolbox Subscription Agreement for Non-Commercial Use, commercial use means developing products and earning commercial benefits from your activities. However, certain categories are explicitly excluded from this definition. Common examples of non-commercial uses include learning and self-education, open-source contributions without earning commercial benefits, any form of content creation, and hobby development.\nIt’s important to note that, if you’re using a non-commercial license, you cannot opt out of the collection of anonymous usage statistics. We use this information to improve our products. The data we collect is exclusively that of anonymous feature usages of our IDEs. It is focused on what actions are performed and what types of functionality of the IDE are used. We do not collect any other data. This is similar to our Early Access Program (EAP) and is in compliance with our Privacy Policy.\nFAQ\nBelow are answers to the most common questions. Check out the full FAQ for more information.\nLicensing\nWhat features are included under the free license?\nWith the new non-commercial license type, you can enjoy a full-featured IDE that is identical to its paid version. The only difference is in the Code With Me feature – you get Code With Me Community with your free license.\nWhich license should I choose if I want to use CLion for both non-commercial and commercial projects?\nIf you intend to use CLion for commercial development for which you will receive direct or indirect commercial advantage or monetary compensation within the meaning of the definitions provided in the Toolbox Subscription Agreement for Non-Commercial Use, you will need to purchase a commercial subscription (either individual or organizational). This license can then also be used for non-commercial development.\nHow do renewals and upgrades work now?\nNon-commercial subscriptions are issued for one year and will automatically renew after that. However, for the renewal to happen, you must have used the assigned license at least once during the last 6 months of the subscription period. If it has been more than 6 months since you last used an IDE activated with this type of license and the renewal did not occur automatically, you can request a new non-commercial subscription again at any time.\nAm I eligible for a refund if I’ve already bought a paid subscription but do non-commercial development?\nIf you’re unsure whether you qualify for a refund, you’ll find full details of our policy here. Please note that if you also work on projects that qualify as commercial usage, you can’t use the free license for them.\nAnonymous data collection \nDoes my IDE send any data to JetBrains?\nThe terms of the non-commercial agreement assume that the product may also electronically send JetBrains anonymized statistics (IDE telemetry) related to your usage of the product’s features. This information may include but is not limited to frameworks, file templates used in the product, actions invoked, and other interactions with the product’s features. This information does not contain personal data.\nIs there a way to opt out of sending anonymized statistics?\nWe appreciate that this might not be convenient for everyone, but there is unfortunately no way to opt out of sending anonymized statistics to JetBrains under the terms of the Toolbox agreement for non-commercial use. The only way to opt out is by switching to either a paid subscription or one of the complimentary options mentioned here.\nGetting a non-commercial subscription \nWhat should I do to apply for this subscription?\nIt can be easily done right inside your IDE:\nInstall CLion and run it.\nUpon startup, there will be a license dialog box where you can choose the Non-commercial use option.\nLog in to your JetBrains account or create a new one. \nAccept the Toolbox Subscription Agreement for Non-Commercial Use.\nEnjoy development in your IDE.\nIf you’ve already started a trial period or have activated your IDE using a paid license, you still can switch to a non-commercial subscription by following these steps:\nGo to Help | Register.\nIn the window that opens, click on the Remove License button.\nChoose Non-commercial use.\nLog in to your JetBrains account or create a new one. \nAccept the Toolbox Subscription Agreement for Non-Commercial Use.\nEnjoy development in your IDE.\nI don’t see the Non-commercial use option in my IDE. What should I do? \nThe most likely explanation for this is that you’re using an older version of CLion. Unfortunately, we don’t support obtaining the non-commercial license for any releases prior to CLion 2025.1.1. That’s it for today! If you don’t find an answer to your question, feel free to leave a comment or contact us at sales@jetbrains.com.\nYour CLion team\nJetBrains\nMake it happen. With code.",
        "dc:creator": "Maria Goldade",
        "content": "“C makes it easy to shoot yourself in the foot. C++ makes it harder, but when you do, it blows away your whole leg.” — Bjarne Stroustrup We can’t make С and C++ simpler, but we can make working with them a bit easier. CLion is now free for non-commercial use! Yes, finally. Whether you’re [&#8230;]",
        "contentSnippet": "“C makes it easy to shoot yourself in the foot. C++ makes it harder, but when you do, it blows away your whole leg.” — Bjarne Stroustrup We can’t make С and C++ simpler, but we can make working with them a bit easier. CLion is now free for non-commercial use! Yes, finally. Whether you’re […]",
        "guid": "https://blog.jetbrains.com/?post_type=clion&p=562976",
        "categories": [
          "news",
          "licensing",
          "non-commercial"
        ],
        "isoDate": "2025-05-07T11:57:37.000Z"
      },
      {
        "creator": "Ekaterina Petrova",
        "title": "Compose Multiplatform 1.8.0 Released: Compose Multiplatform for iOS Is Stable and Production-Ready",
        "link": "https://blog.jetbrains.com/kotlin/2025/05/compose-multiplatform-1-8-0-released-compose-multiplatform-for-ios-is-stable-and-production-ready/",
        "pubDate": "Tue, 06 May 2025 16:41:20 +0000",
        "content:encodedSnippet": "Today marks a major milestone in the Kotlin Multiplatform journey: the release of Compose Multiplatform 1.8.0, which brings Compose for iOS to Stable. With this update, Kotlin Multiplatform becomes a complete solution for mobile development, enabling flexible code sharing across both business logic and UI without compromising app quality or losing control over platform-specific capabilities.\nEverything you need to build apps for real-world use\nCompose Multiplatform for iOS now includes everything you need to build beautiful UIs for real-world apps:\nFeature parity with Jetpack Compose for all popular use cases.\nType-safe navigation with deep linking support.\nFlexible resource management. \nFirst-class accessibility support with VoiceOver, AssistiveTouch, and Full Keyboard Access.\nAnd more.\nVersion 1.8.0 finalizes the core API surface and brings targeted improvements to accessibility and navigation, along with a wide range of bug fixes and performance improvements (see the details in the 1.8.0 What’s New). All major APIs are now officially stable, with strong compatibility guarantees and minimal breaking changes expected in the future.\nThis stable foundation is backed by a rapidly growing ecosystem. Jetpack libraries are adopting multiplatform capabilities, and the community continues to contribute high-quality libraries, covering everything from architecture and dependency injection to image loading and graph rendering – all listed on klibs.io, the official Kotlin Multiplatform library catalog.\nWith these building blocks in place, you can start developing robust, feature-rich apps today – just like the teams already shipping Compose Multiplatform apps to production.\n\n\n\n\nApps that feel truly native\nSmooth, native behavior is what iOS users expect – and notice. Compose Multiplatform for iOS focuses on getting the details right, so apps feel familiar and responsive on the platform:\nScrolling behavior that matches native iOS physics.\nText editing with native selection and right-to-left support.\nDrag-and-drop integration with the system.\nAdaptive UI that respects system settings like font size and contrast.\nNavigation gestures that feel natural to iOS users.\n\n\nThe Respawn iOS app is built with Compose Multiplatform, sharing 96% of its code with Android.\n\n\n\nStaying true to the core Kotlin Multiplatform philosophy, Compose Multiplatform continues to bring together the best of native and cross-platform development. The 1.8.0 release introduces further improvements to interop with SwiftUI and UIKit, allowing you to seamlessly embed Compose in an existing app or incorporate native views into a Compose screen. This approach supports gradual adoption and gives you full control over how and where you share code.\nPerformance that’s ready for production\nA great user experience comes down to more than just UI behavior; it’s about performance, too. Smooth, responsive interactions are key to user satisfaction. That’s why performance was a core focus throughout this stabilization effort. With 1.8.0:\nStartup time is comparable to native apps, so your first frame arrives just as fast.\nScrolling performance is on par with SwiftUI, even on high-refresh-rate devices.\nCompose Multiplatform adds only ~9 MB to the size of an iOS app compared to a fully native SwiftUI app with the same UI logic and assets.\nYou can find the benchmark project  on GitHub. A detailed description of the methodology will be published soon at KMP Development portal.\n\n\n\nAnd most importantly, this matches what developers are seeing in practice. According to our latest survey, over 96% of teams using Compose Multiplatform on iOS report no major performance concerns.\n\nDevelopment tools that boost your efficiency\nTo make building Compose Multiplatform apps faster, smoother, and more enjoyable, we’re actively improving the KMP tooling. A new KMP plugin is coming soon for both IntelliJ IDEA and Android Studio. Besides features for writing common logic, it will bring support for Compose Previews in common code, and tools for managing resources.\nEven more exciting: Compose Hot Reload is already available. It lets you make changes to your UI code and see the results instantly, without restarting the app or losing the current state. It intelligently reloads code as you work – making UI iteration faster and smoother than ever.\n\n\n\n\nTry Compose Hot Reload\nProduction-ready and easy to adopt\nCompose Multiplatform for iOS now gives you the full package: stable APIs, great performance, a native feel, and modern tooling. Your users will feel right at home with the UI, while your team will notice the difference: fewer bugs, less duplicated work, and faster delivery across platforms.\nAnd best of all, you don’t need to start from scratch. Many teams — including Markaz, Wrike, Feres, and Physics Wallah — are already integrating Compose Multiplatform into large-scale apps, one screen or feature at a time. It fits into your workflow and grows with your needs.\n\n\n\n\nCompose Multiplatform for iOS is Stable. The ecosystem is thriving. The tools are ready. And now, we can’t wait to see the apps that you‘ll build.\nGet started with Compose Multiplatform\nCompose Multiplatform beyond mobile\nCompose Multiplatform for the web is also evolving rapidly. With 1.8.0, the Navigation library now supports browser back and forward buttons, making web apps feel more native. Developers can also experiment with pointer cursor customization and resource preloading APIs, which help reduce layout shifts and improve perceived performance.\nThese updates bring Compose Multiplatform for the web one step closer to providing a polished, production-ready experience. You can learn more about our vision and plans for Kotlin web development in the upcoming post “The Present and Future of Kotlin for the Web.” Stay tuned.\nRead more\nCompose Multiplatform 1.8.0 – release notes on GitHub\nWhat’s new in Compose Multiplatform 1.8.0 – detailed release notes on the documentation portal\nGet started with Compose Multiplatform – a tutorial\nCompose Multiplatform and Jetpack Compose",
        "dc:creator": "Ekaterina Petrova",
        "content": "Today marks a major milestone in the Kotlin Multiplatform journey: the release of Compose Multiplatform 1.8.0, which brings Compose for iOS to Stable. With this update, Kotlin Multiplatform becomes a complete solution for mobile development, enabling flexible code sharing across both business logic and UI without compromising app quality or losing control over platform-specific capabilities. [&#8230;]",
        "contentSnippet": "Today marks a major milestone in the Kotlin Multiplatform journey: the release of Compose Multiplatform 1.8.0, which brings Compose for iOS to Stable. With this update, Kotlin Multiplatform becomes a complete solution for mobile development, enabling flexible code sharing across both business logic and UI without compromising app quality or losing control over platform-specific capabilities. […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=565590",
        "categories": [
          "multiplatform"
        ],
        "isoDate": "2025-05-06T16:41:20.000Z"
      },
      {
        "creator": "Alexey Totin",
        "title": "A Study in CDEs: Building CodeCanvas with CodeCanvas",
        "link": "https://blog.jetbrains.com/codecanvas/2025/05/building-with-codecanvas/",
        "pubDate": "Tue, 06 May 2025 13:55:31 +0000",
        "content:encodedSnippet": "JetBrains CodeCanvas is a tool for orchestrating Cloud Development Environments (CDEs). These environments aim to solve some of the long-standing issues of local development setups: tedious onboarding, environment drift, resource-heavy builds, and more. \nWhen we started building CodeCanvas, we knew dogfooding would be essential. Our goal was to experience the product the same way users would, face real-world issues early, and ensure the platform evolves in step with the needs of modern development teams. \nThis case study is the result of that process. We used CodeCanvas to build CodeCanvas, and in doing so, we’ve seen firsthand how cloud development environments can transform a team’s development workflow. Here’s what we learned.\n\n\n\n\nCodeCanvas: The technical context\n\nBefore we discuss how our development experience has changed with cloud development environments and CodeCanvas, we should touch upon the technical scope of the project we developed: CodeCanvas itself. CodeCanvas is a complex, resource-intensive system built with a modern, multi-language tech stack:\nBackend: Primarily written in Kotlin, with supporting components in Go\nFrontend: JavaScript\nBuild System: Gradle\nDatabase: PostgreSQL\nInfrastructure: Everything runs in Docker, with development environments launched in Kubernetes (configured via Helm)\nIDE: IntelliJ IDEA\nRunning this locally isn’t trivial. Because the CDEs mirror real-world deployments, local development requires Kubernetes through tools like Minikube or Kind. While we have helper scripts for bootstrap setup, there is still a lot of OS-specific manual configuration involved, especially when juggling multiple services and dependencies.\nIt’s also a heavyweight setup in terms of system requirements. Docker-in-Docker alone consumes considerable resources, and to run the full stack smoothly, you’d need:\nAt least 64 GB of RAM\nPlenty of disk space (due to the number and size of Docker images)\nA high-end CPU to handle builds, indexing, and service orchestration\nIn short, even getting started locally required a significant investment of time, hardware, and patience, which didn’t scale well across the team.\nHow our workflow changed\nWe started working on CodeCanvas with local development – there was no other choice early on. However, once CodeCanvas reached a usable state, we switched our team to a dedicated instance hosted in Amazon EKS. This instance gets updates as soon as features are implemented, making it our primary development environment and internal testing ground. Later, CodeCanvas became available company-wide, but our team continues to run on the bleeding edge. Here’s how this shift changed our day-to-day work.\nWorking on tasks and branches\n\nBefore (local)\nWe follow a Git-flow-like approach, and a typical developer works on 3 to 5 tasks per day. Each task lives on a separate branch, and switching between them locally requires checking out the branch, rebuilding the project, and waiting for indexing to complete. This process takes at least 15-20 minutes per switch, as CodeCanvas is a large and complex project. That’s an hour or more of lost time per developer per day just switching contexts. With a team of 10 developers, that equates to over 10 hours lost daily purely on environment management. Multiply that by a month, and the numbers become even harder to ignore.\nAfter (with CDEs)\nNow each task or branch lives in its own short-lived cloud development environment. Switching between branches means running a new environment, which takes under five minutes. No rebuilds, no conflicting states. Developers can easily work on 3 to 5 tasks a day without wasting time or mental energy on setup.\nCode reviews\n\nIn our Git flow-like approach, we never push changes directly to main. Every update goes through a feature branch and is merged only after a code review (more precisely, a merge request review). Each change is reviewed by at least one other team member (usually two).\n\n\n\n\nBefore (local)\nReviewers rarely ran the code they were reviewing. It was just too time-consuming to build and configure someone else’s branch locally. Reviews mostly checked diffs in a code-review tool (JetBrains Space) without executing anything. This limited our ability to catch behavioral or integration issues early.\nAfter (with CDEs)\nNow, reviewers create a fully functional cloud development environment from any merge request branch with one click. Here they can run the code and test the feature. Because these environments run in separate windows via JetBrains Gateway, reviewers don’t lose context – their main IDE window still holds the task they’re currently working on. This raised the quality of reviews significantly.\nStaying up-to-date\n\nBefore (local)\nEach developer was responsible for keeping their local environment up to date. When dependencies changed or new versions of tools were introduced, every team member had to individually update their setup. This led to inconsistencies, wasted time, and the occasional “works on my machine” issues.\nAfter (with CDEs)\nWith CodeCanvas, we moved to a centralized approach. A CodeCanvas CDE is based on a template that includes a Docker image with the required tooling and init scripts. To speed up startup times, we use the warm-up feature. It builds IDE indexes and runs a custom script to which we can add any other necessary preparations.\nIn short, everything that a developer previously had to do manually on their local machine, we now handle centrally via the template and the warm-up script.\nBut someone still has to maintain this setup, right? That’s where our On Duty rotation comes in. We have a Slack bot that randomly selects one developer each week to be the on-duty person. Their job is to keep the warm-up and init scripts working, update the Docker image(s), and handle team requests related to the setup. This way, a single person maintains the shared environment on behalf of the whole team. We can’t precisely measure the time saved, but it’s significant. On the team scale, it adds up to hours every week.\nOnboarding\n\n\n\n\nBefore (local)\nGetting a new team member up and running was a multi-day effort. They needed to install and configure the correct JDK, Node.js, Docker, PostgreSQL, Kubernetes (via Minikube or Kind), and more. Scripts helped, but much of the setup was OS-dependent and fragile. There was always something that didn’t work out of the box.\nAfter (with CDEs)\nNow, we just give them access to CodeCanvas. The environment already includes all necessary tools and configurations, including Kotlin and Go toolchains, the database, dependencies, and IDE plugins. On their very first day, a developer can open a pre-warmed dev environment and start writing code immediately.\nCross-project collaboration\n\nBefore (local)\nCodeCanvas integrates with other JetBrains projects like the IntelliJ IDEA platform. If someone needed to look into how a feature worked in another codebase or make a small change, they had to go through the same long configuration process for that new project. It was a huge barrier to casual collaboration.\nAfter (with CDEs)\nNow, we just run a new environment for the related project. Everything is preconfigured there too. CodeCanvas developers frequently use this to explore or debug features in IDEA without leaving their flow.\nThe takeaway\nIf we had to name just one game-changing benefit of using CDEs, it would be the ability to create short-lived, branch-based environments. Being able to run a fresh environment for any task or branch in under a minute and easily discard it when you’re done has completely transformed the way we work. No setup, no cleanup, and no fear of breaking anything – just focused development.\nAdoption challenges\n\nConverting a local setup into a CDE template\nOne of the biggest challenges was converting our local development environment into a working CDE template with proper init and warm-up scripts. This turned out to involve many puzzle pieces that aren’t always obvious when you’re working locally: Docker images with necessary tooling, IDE configuration, IDE plugins, various secrets for accessing project resources (e.g., internal Docker registry, internal plugin server, etc.), and many more.\nMaintaining this setup is an ongoing challenge. But we’ve solved that with our rotating On Duty role, which ensures everything stays in sync and up to date.\nRemote development support by the IntelliJ platform\nSeveral years ago, when we had just started working on CodeCanvas, remote development support in IntelliJ wasn’t fully mature. Some features didn’t work properly, and a few plugins weren’t yet compatible, making the early stages of dogfooding more difficult. Fortunately, things have improved a lot since then. Remote workflows are now well-supported, and IntelliJ IDEA works smoothly in remote mode.\nWhy some developers still use local setups\nWhile CodeCanvas has become the default for our team, not everyone has abandoned local development entirely. Some still keep a working copy of the project on their machines, and there are practical reasons:\n\n\n\n\n\nTooling gaps: For example, Helm isn’t preinstalled in dev environments. If someone needs to generate Helm templates, they either install it manually in their environment or do it locally.\n\n\n\n\nPlugin limitations: Some plugins, like the Go plugin, still have issues in remote development contexts. This makes certain workflows easier to handle locally.\nMissing customization options: Currently, CodeCanvas doesn’t allow developers to configure parts of the environment via code. If someone needs a unique tool or setup, there’s no easy way to add it for just themselves.\nSingle-IDE limitation: Right now, a CodeCanvas CDE supports only one IDE at a time. This is inconvenient for frontend developers who would prefer to work in both IntelliJ IDEA and WebStorm (or VS Code) within the same environment.\nWhile some developers mix local and remote workflows, no one on the team uses only local development. However, there are several who use only remote development, which shows how far we’ve come.\nSome stats\n\n\n\n\nHere’s what our CodeCanvas usage looks like in numbers, along with some details about the infrastructure powering it:\n~30 users/month work with the CodeCanvas project. These include both CodeCanvas team members and developers from other teams.\n16 regular users, including developers, QA engineers, and a technical writer, actively work with the CodeCanvas project every month.\n~300 development environments/month are created, averaging about 10 environments per user.\nThe CDEs we use for the CodeCanvas project have 14 CPUs, 112 GB RAM, and 200 GB disk space – a setup that’s hard to replicate on a typical developer machine.\nIt takes 15–20 seconds to start a fully prepared CDE, thanks to our use of a standby pool.\n~56 developer hours/month are saved by using the warm-up feature, which prebuilds the project and indexes each night.\n~50% cost savings on AWS storage by storing CDE volumes as snapshots instead of full volumes.\nFinal thoughts\nWe started using CodeCanvas because we wanted to dogfood our own product. If we were building something else, we probably would have kept using local environments, just like most developers do today. When you’ve worked in local setups your entire career, you often don’t even realize there’s a problem.\n\n\n\n\nSwitching to remote development flipped that perspective. Only then did we realize how many inefficiencies we had just accepted as part of the job, like time lost to configuration, tedious rebuilds, and branch switching. It all became visible the moment we stepped outside that old paradigm.\n\n\n\n\nUsing CodeCanvas to build CodeCanvas gave us a real chance to rethink our development experience and build something we genuinely enjoy using. We’re building CodeCanvas to free developers from the pain of local environments, and now we know firsthand just how much of a difference that can make.",
        "dc:creator": "Alexey Totin",
        "content": "JetBrains CodeCanvas is a tool for orchestrating Cloud Development Environments (CDEs). These environments aim to solve some of the long-standing issues of local development setups: tedious onboarding, environment drift, resource-heavy builds, and more.&#160; When we started building CodeCanvas, we knew dogfooding would be essential. Our goal was to experience the product the same way users [&#8230;]",
        "contentSnippet": "JetBrains CodeCanvas is a tool for orchestrating Cloud Development Environments (CDEs). These environments aim to solve some of the long-standing issues of local development setups: tedious onboarding, environment drift, resource-heavy builds, and more.  When we started building CodeCanvas, we knew dogfooding would be essential. Our goal was to experience the product the same way users […]",
        "guid": "https://blog.jetbrains.com/?post_type=codecanvas&p=564257",
        "categories": [
          "articles-2",
          "best-practices",
          "cloud-development-environments",
          "codecanvas",
          "remote-development",
          "cde-orchestration"
        ],
        "isoDate": "2025-05-06T13:55:31.000Z"
      },
      {
        "creator": "Irina Mariasova",
        "title": "Java Annotated Monthly – May 2025",
        "link": "https://blog.jetbrains.com/idea/2025/05/java-annotated-monthly-may-2025/",
        "pubDate": "Tue, 06 May 2025 09:26:30 +0000",
        "content:encodedSnippet": "Welcome to the May edition of Java Annotated Monthly! This month, we have a special guest – Anton Arhipov. He joins us to share standout articles and other discoveries that recently caught his expert eye. Alongside his picks, you’ll find your regular dose of Java and tech news, AI updates, and industry events that are too good to miss. \nLet’s go! \nFeatured Content\nAnton Arhipov\nAnton is a Developer Advocate at JetBrains, working with Kotlin, IntelliJ IDEA, and AI-driven developer tools. With a background in server-side development, he has spent over a decade building software for developers. A Java Champion since 2014, Anton speaks at conferences, shares insights on the Kotlin YouTube channel, and enjoys exploring new ideas in programming languages, AI-powered tooling, and developer workflows. He’s always experimenting with new tech, looking for ways to make coding more efficient and enjoyable.\n \nHere are some highlights from the world of AI programming tools this month. A lot is happening in this space, and these are just a few notable developments we’ve handpicked to share with you.\nLet’s start with the recent announcements first.\nThis month’s exciting news in this area is the announcement of the Agent2Agent (A2A) Protocol by Google. A2A is an open standard designed to enable AI agents to securely communicate and collaborate across vendors, frameworks, and platforms. This marks a big step toward seamless interoperability between AI agents in enterprise environments.\nThe next biggie in the list is JetBrains rolling out a big update across our AI offerings:\nAI Assistant and the coding agent Junie are now available under one subscription with a free tier.\nWe’ve expanded support for top-tier models like Claude 3.7 Sonnet and Gemini 2.5 Pro.\nThere’s a new edit mode for multi-file changes.\nNow publicly available, Junie, your new virtual pair programmer, helps you take on complex development tasks like implementing changes across multiple files. \nA recent presentation titled Harnessing the Power of AI in IntelliJ IDEA showcased the features of  AI-assisted coding in JetBrains IDEs, from lightweight completions to full-blown agentic workflows. The key insight: Productivity comes from understanding what these tools can (and can’t) do. With tools like Junie, developers can supervise AI agents that carry out development plans and multi-file edits.\nAlong with the announcements, JetBrains also shared updates on Mellum, our 4B-parameter LLM designed for code completion. It includes language-specific versions for Python, Java, and Kotlin. The quality of the completions provided by this model is getting even better thanks to a local filter model that boosts suggestion accuracy by evaluating code context and user behavior.\nHowever, it’s not all about the releases and announcements. Understanding how to use these tools and figuring out the best practices is also important. Below are some interesting articles on that topic.\nAnthropic shared best practices for using Claude Code, their command-line tool for agentic programming, emphasizing the use of CLAUDE.md files to provide context and guide the agent in the same way prompts do. Claude can also help with tasks such as navigating Git history and writing commit messages, streamlining common development workflows.\nThe Spring AI ChatClient now supports powerful prompt engineering patterns, such as zero-shot, contextual, and self-consistency prompting to help developers build smarter, more responsive AI apps. Explore the patterns here.\nThe provocative blog post Revenge of the Junior Developer argues that junior developers are quicker to embrace AI tools than seniors. As agentic programming becomes more common, the role of software engineers is shifting from writing code by hand to managing and guiding AI collaborators.\nJava News\nJava News Roundup 1, 2, 3, 4 – Get the latest updates from the Java world. \nFinalizing the Java On-ramp – Inside Java Newscast #90 – Billy Korando previews how Java 25 will finalize the “paving the on-ramp” initiative and introduces learn.java, a new site for Java learners and educators.\nJavaOne’25 Highlights – Inside Java Newscast #89 – Nicolai Parlog recaps JavaOne’25 with highlights like why unit tests aren’t ideal for AOT training in JDK 24, a GC primer, Maven build tips, the future of final, AI retrieval augmenters, and the roadmap for value types and null restrictions.\nJava Tutorials and Tips\nNew Write Barriers for G1 – Thomas Schatzl explains how the updated write barriers in G1GC help make garbage collection faster and more efficient by reducing pause times.\nSix JDK 24 Features You Should Know About – Simon Ritter highlights six standout features in JDK 24, including ahead-of-time class loading, custom stream gatherers, the permanent removal of the security manager, and more. \nStream Gatherers – Deep Dive with the Expert – Viktor Klang, Java Platform Group at Oracle, explores the new Gatherers API in Java 24 that allows developers to create custom intermediate operations within Java streams.\nJava 24 Release Notes Overview – Security Updates – Make sure to update to the latest CPU for the Java version you’re using and watch what noteworthy security updates and fixes Java 24 brings. \nJDK 24 G1/Parallel/Serial GC Changes – Learn more about the enhancements to the stop-the-world garbage collectors, G1, Parallel, and Serial, in JDK 24. \nFrom Reactive Streams to Virtual Threads – Can you have both the simplicity that virtual threads promise and the resilience and safety of reactive streams? Read the article to find out. \nSequenced Collections – Deep Dive with the Expert – Stuart Marks breaks down how Java 21’s new Sequenced Collections API finally brings order to the chaos of collection manipulation, which offers developers consistent tools for handling ordered data.\nFoojay Podcast #69: All Things Java at VoxxedDays Amsterdam – Over 20 attendees at VoxxedDays Amsterdam share a whirlwind of insights on AI, Java features, profiling, security, and more.\nWhere Is the Java Language Going? – Java Language Architect Brian Goetz offers a fast-paced look at Java’s recent enhancements and future directions, focusing on Project Amber and Project Valhalla.\nWhy I Believe Lombok Should Be Discarded from Java Projects – Ivelin Yanev argues that while Lombok reduces boilerplate, it introduces hidden complexity, increases compilation time, and can lead to fragile code that’s tightly coupled to its annotations. Do you agree?\nRaise Code Quality by Following Martin Fowler’s Safe Refactoring Steps – Together with Emily Bache, have a look at the steps of the Replace Command with Function refactoring, also known as Instance to Static, so you can learn to do it safely too. \nStream Gatherers – Deep Dive with the Expert – Viktor Klang demonstrates how the new Gatherers API finally lets you define custom intermediate operations, making stream transformations smoother and more flexible than ever.\nUltimate Guide to Project Reactor, Thread-Locals and Context Propagation – In his article, Grzegorz Piwowarek demystifies context propagation in Project Reactor. He offers a practical guide to managing ThreadLocal across asynchronous boundaries using Reactor’s Context API and Micrometer’s context-propagation library.​\nOptimizing Java for the Cloud-Native Era with Quarkus – This post explores how Quarkus can help organizations reduce costs, streamline development, and modernize their Java applications for today’s cloud-native environments. \nFrom RAG to Enterprise AI Agents: Building Intelligent Java Apps – Enterprise AI agents are reshaping how Java apps handle data and users. This session dives into evolving from RAG to full AI agents, integrating AI into Java platforms like Spring, Quarkus, and WebLogic, and includes live demos and hands-on tips for building and scaling intelligent, cloud-ready apps.\nKotlin Corner\nThe Story Behind K2 Mode and How It Works – Learn more about the journey of building K2 mode for IntelliJ IDEA – a major overhaul that unifies the compiler and IDE analysis engines for a faster, smarter Kotlin experience.​\nUpdate on Context Parameters – Context parameters, coming in Kotlin 2.2.0-Beta, will replace context receivers and offer better support for DSLs and extension methods. This post lays out the transition plan.\nBeing Quick: Resolve what’s dirty. Compose Hot Reload: 1.0.0-alpha03 – Sebastian Sellmair explains how to speed up fixing bugs by using the idea.debugger.dispatch.port system property. It helps you jump straight to the root of the issue when debugging across JVM layers.\nCustom Kotlin Coroutine Races – Sam Cooper explains how to build your own race() function using channelFlow and first(). He also shares tips for handling nulls and picking custom winners.\nFire and Forget with Kotlin Coroutines – Find out how to run background tasks in Kotlin using coroutines without blocking or leaking memory.\nCall Suspending Kotlin Code from Java – This article breaks down how to invoke Kotlin’s suspend functions from Java and offers practical tips to bridge the coroutine gap between the two languages.\nDebugging Coroutines in IntelliJ and Android Studio – Amanda Hinchman walks through practical ways to debug Kotlin coroutines in IntelliJ IDEA and Android Studio. She covers logging tricks, VM flags, and GUI tools to help you track coroutine behavior more clearly.\nhttp4k MCP Has Landed – The http4k team introduces the new Model Context Protocol (MCP) SDK, empowering developers to build AI agents with full testability and seamless integration into the http4k ecosystem.\nHow Junie Helps You Code Faster with Kotlin in IntelliJ IDEA – Meet Junie, JetBrains’ new AI coding agent that helps Kotlin developers breeze through routine tasks. In this video, Sebastian Aigner demos how Junie builds full-stack apps, follows custom guidelines, fixes tests, and navigates large Kotlin Multiplatform projects.\nBuilding MCP with Kotlin: Claude Desktop Controls My Smart Home Lights! – Check out the journey of building a Kotlin-based integration between Hue Smart Lights and Claude Desktop using the MCP SDK, Junie, and Ktor – ending with a fully functional MCP server that responds to natural language.\nTypeAlias Show: Kotlin 2.1.20 – Atomics, UUIDs, and more! – The hosts dive into Kotlin 2.1.20’s new features, including Atomics and UUIDs, offering insights and practical examples for developers.\nBuild a REST API with Kotlin and Http4k – Deploying to AWS – This crash course walks you through the full setup from Dockerizing your app and configuring a database, to deploying it on ECS with TLS and public access. All key links and timestamps are included for easy jumping around.\nA Quick Guide to htmx in Kotlin – Piotr walks you through building a dynamic user table using Kotlin HTML DSL, Ktor, htmx, and Tailwind CSS, blending backend and frontend in a clean, type-safe way.\nAI\nJetBrains IDEs Go AI: Coding Agent, Smarter Assistance, Free Tier – Kirill Skrygan, JetBrains CEO, brings big AI news! All JetBrains AI tools, including the improved AI Assistant and new coding agent Junie, are now available within the IDEs under a single subscription and come with a free tier.\nFirst Look at JetBrains Junie – In this video, you will learn how to build a Spring Boot application using JetBrains Junie.\nMellum Goes Open Source: A Purpose-Built LLM for Developers, Now on Hugging Face – JetBrains’ specialized LLM for code completion, Mellum, is now open source on Hugging Face! As the first in our new family of focal models, Mellum is purpose-built for accuracy, efficiency, and transparency, with an initial focus on code completion. Strong Java support included!\n\n\n\n\nOptimize AI Workloads: Google Cloud’s Tips and Tricks – Learn about Google Cloud’s latest tips for trimming AI costs and boosting efficiency, including smarter container strategies, storage choices, and workload scheduling.​\nTime to panic? AI and Cybercrime legislation is on your doorstep now – AI and cybercrime laws are no longer on the horizon – they’re here and reshaping how we build and secure software. If you’re in dev or security, it’s time to get in the loop on what’s coming, who’s driving it, and how to stay ahead.\nAdam Sandman on Generative AI and the Future of Software Testing – Adam Sandman chats with Shane Hastie about how generative AI is shaking up software testing by automating tedious tasks, boosting productivity, and blurring traditional roles, while also raising concerns about increased defects and ethical challenges.\nPrompt Engineering Techniques with Spring AI – Christian Tzolov dives into practical prompt engineering patterns using Spring AI, showing how to configure and apply them with the ChatClient API across various LLM providers.\nLLM and Generative AI for Sensitive Data – Navigating Security, Responsibility, and Pitfalls in Highly Regulated Industries – Explore the security challenges of deploying large language models and generative AI in sensitive industries.\nFoojay Webinar Live Stream: Java’s Place in the AI Revolution – Learn how to build AI/ML applications using pure Java tools. \nUnlocking AI Coding Assistants: Generate Spring Boot Application – In this article, Gunter Rotsaert explores the capabilities of AI coding assistants by generating a production-grade Spring Boot application.\nUnlocking AI Coding Assistants: Generate Unit Tests – This article continues with demonstrating the power of AI agents, this time for generating unit tests for a Spring Boot app. \nAI+Coding Kata – AI is great for prototyping, reasoning, and bug hunting. Build a solid, future-proof parser for this spec in any language you like.\nLanguages, Frameworks, Libraries, and Technologies\nThis week in Spring 1, 2, 3, 4 – All the latest Spring news gathered for you in one place. \nA Bootiful Podcast: AWS Developer Advocate and industry legend James Ward – In this episode of A Bootiful Podcast, host Josh Long chats with AWS Developer Advocate and Java Champion James Ward about AWS Bedrock, Amazon Cohere, Spring AI, and MCP.\nWhat If We Could Rebuild Kafka From Scratch? – In his thought-provoking blog post, Gunnar Morling imagines a modern, cloud-native redesign of Kafka, advocating for features like key-centric access, hierarchical topics, and built-in concurrency controls.\nEven more OpenTelemetry – Kubernetes special – Nicolas Fränkel shows how he improved his OpenTelemetry demo by splitting the app and infra into separate Kubernetes clusters using Helm and Traefik.\nConferences and Events\nVisit these events in person or online in May:\nJAX Hybrid – Mainz, Germany or online, May 5–9\nDevoxx UK – London, United Kingdom, May 7–9. Meet these JetBrains speakers there: Anton Arhipov, Marit van Dijk, Vitaly Bragilevsky, and Michelle Frost. \nJava Day Istanbul – Istanbul, Türkiye, May 10\nJCON Europe – Cologne, Germany, May 12–15. Marit van Dijk will be a speaker. \nJ On The Beach – Malaga, Spain, May 14–16\nJPrime – Sofia, Bulgaria, May 14–15\nGeeCON – Kraków, Poland, May 14–16. Meet JetBrains speakers Anton Arhipov and Marit van Dijk.\nUnleash the Power of Git with IntelliJ IDEA Version Control Tools – Online, May 15\nSpring I/O – Barcelona, Spain, May 21–23. Meet the JetBrains team at the booth and join the talks by Anton Arhipov and Marco Behler.  \nKotlinConf 2025, Copenhagen, Denmark, May 21–23\nJNation Conference – Coimbra, Portugal, May 27–28\nJCON OpenBlend Slovenia — Portorož, Slovenia, May 28–30. Meet Anton Arhipov and join his session. \nJAlba – Edinburgh, Scotland, May 28–31\n\n\n\n\nCulture and Community\nHow Software Developers Can Build Their Personal Brand to Elevate Their Influence – Learn crucial insights from this article. \nThriving through Change: Leading through Uncertainty – Jennifer Davis shows how empathy, trust, and safety aren’t just nice words, they’re your best bet when leading through messy, uncertain change.\nThe Duck Syndrome: A Hidden Struggle for IT Professionals – This piece reveals how many IT pros, despite appearing calm and collected, are secretly battling burnout, imposter syndrome, and the relentless pressure to keep up. If you feel anything similar, please read this article. \nThe 13 software engineering laws – Anton Zaides rounds up 13 software engineering laws that every developer should know (and probably already violates).\nHow Senior Software Engineers Can Learn from Junior Engineers – Would you try this approach?\nAs an engineer, I’d rather be called stupid than stay silent – Find out how embracing vulnerability and asking so-called “stupid” questions can help you grow from a hesitant support engineer to a confident problem-solver in a complex tech environment.\nA Clean Approach to Process Optimization: What I learned from my dishwasher about automating processes – Check out how treating automation like loading a dishwasher can make your processes faster and smoother.\nAnd Finally…\nIntelliJ IDEA 2025.1 Is Out! – The highlights of this release include full Java 24 support, the introduction of Kotlin notebooks, and K2 mode enabled by default, marking a major step toward delivering the best Kotlin experience. Additionally, JetBrains AI has received a significant upgrade, unifying AI Assistant and Junie under a single subscription. \nK2 Mode in IntelliJ IDEA 2025.1: Current State and FAQ – Teodor Irkhin lifts the curtain on K2 mode in IntelliJ IDEA 2025.1, answering every question you might have had but didn’t dare ask.\nWhat’s New in Bazel Plugin 2025.1 – Justin Kaeser walks us through the Bazel plugin’s 2025.1 update for IntelliJ IDEA. \nKotlin Notebook Arrives in IntelliJ IDEA – Meet Kotlin Notebook, now built into IntelliJ IDEA 2025.1, giving developers a powerful, interactive playground for prototyping, API exploration, data analysis, and more.\nHow to Use Kotlin Notebooks for Productive Development – Learn how to use Kotlin Notebooks for increased productivity. \nA Practical Guide to Testing Spring Controllers With MockMvcTester – Siva Katamreddy introduces MockMvcTester, a new feature in Spring Framework 6.2 that simplifies writing fluent, AssertJ-style assertions for Spring controller tests.\nDebugging Java Code in IntelliJ IDEA – Marit van Dijk demonstrates how to debug Java code in IntelliJ IDEA. She shows how to fix a failing test, trace exceptions, and spot data issues using breakpoints, stepping, and the Evaluate Expression tool.\nMarkdown in Java Docs? Shut Up and Take My Comments! – Mala Gupta champions the shift to Markdown for Java documentation, highlighting how IntelliJ IDEA supports this modern, readable approach over outdated HTML tags.\nJetBrains Terminal: A New Architecture – Yuri Trukhin introduces the new JetBrains terminal, rebuilt to be faster, more reliable, and fully integrated with the IDE.\nThat’s it for today! We’re always collecting ideas for the next Java Annotated Monthly – send us your suggestions via email or X by May 20. Don’t forget to check out our archive of past JAM issues for any articles you might have missed!",
        "dc:creator": "Irina Mariasova",
        "content": "Welcome to the May edition of Java Annotated Monthly! This month, we have a special guest – Anton Arhipov. He joins us to share standout articles and other discoveries that recently caught his expert eye. Alongside his picks, you’ll find your regular dose of Java and tech news, AI updates, and industry events that are [&#8230;]",
        "contentSnippet": "Welcome to the May edition of Java Annotated Monthly! This month, we have a special guest – Anton Arhipov. He joins us to share standout articles and other discoveries that recently caught his expert eye. Alongside his picks, you’ll find your regular dose of Java and tech news, AI updates, and industry events that are […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=565098",
        "categories": [
          "news",
          "ai",
          "ai-agent",
          "ai-assistant-release",
          "intellij-idea",
          "java",
          "java-annotated-monthly",
          "junie",
          "kotlin"
        ],
        "isoDate": "2025-05-06T09:26:30.000Z"
      }
    ]
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": [
      {
        "creator": "charsyam",
        "title": "Redis 와 Valkey 무엇을 선택해야 할까?",
        "link": "https://charsyam.wordpress.com/2025/05/03/redis-%ec%99%80-valkey-%eb%ac%b4%ec%97%87%ec%9d%84-%ec%84%a0%ed%83%9d%ed%95%b4%ec%95%bc-%ed%95%a0%ea%b9%8c/",
        "pubDate": "Sat, 03 May 2025 08:16:52 +0000",
        "content:encodedSnippet": "2024년에 Redis 7.2.4 부터 라이센스 이슈로 Valkey 가 fork 되면서 많은 사람들이 Redis와 Valkey 중에 무엇을 사용해야 하는가? 그럼 어떤 차이가 있는지에 대한 질문이 꽤 많습니다. 그래서 거기에 대한 간단한 의견(답정너) 를 소개하려고 합니다.\n 일반적으로 클라우드 기반에서 사용하던 분들 특히 AWS의 ElastiCache 를 쓰는 분들은 그냥 Redis 쓰는 것보다 Valkey로 가셔도 전혀 문제가 없습니다.(비용이 더 싸진다는 장점만 있다고 보시면 됩니다.) 왜냐하면 클라우드에서 쓸 수 있는 Redis 버전은 기본적으로 7.2.4 의 이전 버전들이라, 그 시점은 Valkey가 Fork 되면서 그대로 이전했기 때문입니다. 즉, 기존 Redis 를 제공하는 클라우드의 내부 버전이 다르더라도 그냥 제품명만 Redis -> Valkey로 바꿔서 그대로 제공이 됩니다. 그냥 바꾸면 변경이 되는 수준입니다.\n 그럼, 실제로 문제가 되는 것은 어떤 상황일까요? 현재 우리가 Redis를 자체적으로 운영하고 있는데, Valkey로 바꾸어야 되는가 입니다. 이 이야기를 하기 전에 Redis와 Valkey가 이제 차이가 나는가? 라는 주제 부터 얘기를 해야 합니다. Redis 8과 Valkey 8이 2025년에 나오면서 조금씩 큰 차이가 벌어지고 있습니다. \n Redis Module 이야 대부분이 원래 RSAL 라이센스라, 클라우드에서 제공이 안되었지만, Redis 는 사용자의 편의성 기능과 AI쪽에 좀 더 집중하고 있는 모습입니다. \n Redis는 7 버전 이후에 Hash 에 서브 Key를 Expire 하는 기능이 들어갔지만, Valkey에는 들어가지 않았습니다.(포크가 되는 시점에, 개발되고 있다가, 포크되고 반영된…) Redis 8에는 VectorSet 이나 AutoComplete 등 AI 지원 기능이나 편의성 기능이 이번에 많이 추가 되었습니다.(내부적으로 콜렉션등에 성능개선도 있었다고…)\n Valkey 는 8 버전부터, CPU Cache Line을 맞추거나, 포인터 접근 횟수를 줄여서, 좀더 메모리를 아끼거나, 성능을 높이는 쪽으로 가고 있습니다. 그래서 8부터는 명령이나 이런 부분에서 어느정도 차이가 나고 있습니다.(다만 아직 기본 명령 보다는, 모듈쪽에서 차이가 나는거 같습니다.)\n 그럼 발전성은 어떨까요? Redis 8이 AGPLv3가 추가되면서 기업에서 뭔가 사용하기가 어려워졌지만, 여전히 Redis(회사) 가 많은 지원을 하고 있고, 가장 많은 컨트리뷰션을 하고 있습니다. 반대로 Valkey는 리눅스 파운데이션과 AWS, 알리바바 등 지원이 있지만, Redis 보다는 조금 덜 활성화 된걸로 보입니다.\n 결국 선택의 우리의 몫입니다. 다만 정말 특별한 기능을 사용하지 않고, 기존 흐름을 따르는 형태에서는 뭘 선택해도 당장은 큰 문제는 없어보입니다. 하지만, 새로운 Redis 기능을 써야 한다면, 이제 좀 고민을 하셔야 될듯 합니다.",
        "dc:creator": "charsyam",
        "comments": "https://charsyam.wordpress.com/2025/05/03/redis-%ec%99%80-valkey-%eb%ac%b4%ec%97%87%ec%9d%84-%ec%84%a0%ed%83%9d%ed%95%b4%ec%95%bc-%ed%95%a0%ea%b9%8c/#respond",
        "content": "2024년에 Redis 7.2.4 부터 라이센스 이슈로 Valkey 가 fork 되면서 많은 사람들이 Redis와 Valkey 중에 무엇을 사용해야 하는가? 그럼 어떤 차이가 있는지에 대한 질문이 꽤 많습니다. 그래서 거기에 대한 간단한 의견(답정너) 를 소개하려고 합니다. 일반적으로 클라우드 기반에서 사용하던 분들 특히 AWS의 ElastiCache 를 쓰는 분들은 그냥 Redis 쓰는 것보다 Valkey로 가셔도 전혀 문제가 없습니다.(비용이 더 [&#8230;]",
        "contentSnippet": "2024년에 Redis 7.2.4 부터 라이센스 이슈로 Valkey 가 fork 되면서 많은 사람들이 Redis와 Valkey 중에 무엇을 사용해야 하는가? 그럼 어떤 차이가 있는지에 대한 질문이 꽤 많습니다. 그래서 거기에 대한 간단한 의견(답정너) 를 소개하려고 합니다. 일반적으로 클라우드 기반에서 사용하던 분들 특히 AWS의 ElastiCache 를 쓰는 분들은 그냥 Redis 쓰는 것보다 Valkey로 가셔도 전혀 문제가 없습니다.(비용이 더 […]",
        "guid": "http://charsyam.wordpress.com/?p=3568",
        "categories": [
          "Uncategorized"
        ],
        "isoDate": "2025-05-03T08:16:52.000Z"
      }
    ]
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": [
      {
        "title": "실무를 위한 Spring Batch의 모든 것 - 성능 개선부터 프로젝트까지",
        "link": "https://cheese10yun.github.io/fastcampus-spirng-batch/",
        "pubDate": "Tue, 06 May 2025 15:00:00 GMT",
        "content:encodedSnippet": "안녕하세요. 이번에 패스트캠퍼스에서 ‘실무를 위한 Spring Batch의 모든 것: 성능 개선부터 프로젝트까지’라는 주제로 강의를 진행하게 되어 홍보 포스팅을 올립니다.\n저는 백엔드 개발 경력 9년, 대규모 배치 시스템 운영 경험 6년 이상을 바탕으로, 현업에서 직접 부딪히며 쌓은 스프링 배치 실무 노하우를 이번 강의에 모두 담았습니다. 이 강의는 스프링 배치를 처음 접하시는 분은 물론, 이미 배치 시스템을 다뤄보았지만 실무에서 마주치는 다양한 문제로 어려움을 겪고 계신 분들께 적극 추천드립니다.\n스프링 배치의 기본 개념부터 배치 시스템 설계·운영에 필요한 핵심 개념과 실전 팁을 제공합니다. 특히 대용량 데이터 처리 성능 개선과 장애 복구 전략을 깊이 다루어, 현업에서의 시행착오를 최소화하고 스프링 배치를 자신 있게 다룰 수 있도록 도와드리겠습니다.\n강의에서 뵙고 함께 성장할 수 있기를 기대합니다!\n\n25% 할인코드 : 김남윤스프링배치\n링크 : https://buly.kr/8elKcDb\n사용기간 : 5/7 ~ 5/31",
        "comments": "https://cheese10yun.github.io/fastcampus-spirng-batch/#disqus_thread",
        "content": "<p><img src=\"https://raw.githubusercontent.com/cheese10yun/TIL/refs/heads/master/assets/fastcampus-spring-batch.jpg\" alt></p>",
        "contentSnippet": "",
        "guid": "https://cheese10yun.github.io/fastcampus-spirng-batch/",
        "categories": [
          {
            "_": "Essay",
            "$": {
              "domain": "https://cheese10yun.github.io/tags/Essay/"
            }
          }
        ],
        "isoDate": "2025-05-06T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": [
      {
        "creator": "강철 벼룩",
        "title": "로컬로 Azure Functions 실행 시 문제와 해결 방법",
        "link": "http://www.dokyun.pe.kr/366",
        "pubDate": "Tue, 6 May 2025 23:06:51 +0900",
        "author": "강철 벼룩",
        "comments": "http://www.dokyun.pe.kr/366#entry366comment",
        "content": "<h4 data-ke-size=\"size20\"><u><b>Issues&nbsp;and&nbsp;solutions&nbsp;when&nbsp;running&nbsp;Azure&nbsp;Functions&nbsp;locally</b></u></h4>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size18\">아마도&nbsp;다음&nbsp;4단계가&nbsp;Azure&nbsp;펑션을&nbsp;개발하는&nbsp;보편적인&nbsp;단계일&nbsp;겁니다. <br />첫&nbsp;번째&nbsp;단계는&nbsp;로컬&nbsp;먼저&nbsp;개발&nbsp;머신에서&nbsp;개발&nbsp;환경을&nbsp;구축합니다. <br />이&nbsp;로컬&nbsp;개발&nbsp;환경&nbsp;구축에&nbsp;필요한&nbsp;요소는&nbsp;다음&nbsp;3가지&nbsp;입니다. <br /><br />1.&nbsp;Visual&nbsp;Studio&nbsp;Code <br />2.&nbsp;Azure&nbsp;Functions&nbsp;Extension <br />3.&nbsp;Azure&nbsp;Functions&nbsp;Core&nbsp;Tools&nbsp;(Core&nbsp;Tools&nbsp;Version:&nbsp;4.0.7030,&nbsp;Function&nbsp;Runtime&nbsp;Version:&nbsp;4.1037.0.23568)</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">두&nbsp;번째&nbsp;단계는&nbsp;&nbsp;Azure&nbsp;Functions&nbsp;Core&nbsp;Tools를&nbsp;통해&nbsp;로컬&nbsp;펑션&nbsp;프로젝트를&nbsp;만들고&nbsp;필요한&nbsp;펑션&nbsp;코드를&nbsp;작성합니다. <br />세&nbsp;번째&nbsp;단계는&nbsp;작성한&nbsp;펑션&nbsp;코드를&nbsp;로컬&nbsp;Azure&nbsp;펑션&nbsp;런타임&nbsp;환경에서&nbsp;테스트합니다. <br />마지막&nbsp;단계는&nbsp;어느&nbsp;정도&nbsp;구현&nbsp;로직을&nbsp;테스트하고&nbsp;디버깅한&nbsp;다음&nbsp;이제&nbsp;Azure로&nbsp;배포하여&nbsp;클라우드&nbsp;환경에서&nbsp;다시&nbsp;동작을&nbsp;확인합니다. <br /><br />이러한&nbsp;단계로&nbsp;Azure&nbsp;펑션을&nbsp;구현할&nbsp;때&nbsp;최근&nbsp;Azure&nbsp;Functions&nbsp;Core&nbsp;Tools&nbsp;업데이트와&nbsp;관련하여&nbsp;알게된&nbsp;문제점과&nbsp;해결&nbsp;방법을&nbsp;소개합니다. <br />이&nbsp;글에서&nbsp;설명하는&nbsp;문제점은&nbsp;다음과&nbsp;같은&nbsp;조건에서&nbsp;발생합니다.&nbsp;하지만&nbsp;다른&nbsp;조건에서&nbsp;발생하는지는&nbsp;테스트하지&nbsp;않았습니다. <br /><br />1.&nbsp;로컬&nbsp;개발&nbsp;머신의&nbsp;운영&nbsp;체제:&nbsp;Windows <br />2.&nbsp;Azure&nbsp;펑션&nbsp;런타임&nbsp;및&nbsp;언어:&nbsp;Node.js&nbsp;및&nbsp;JavaScript&nbsp; <br />3.&nbsp;트리거:&nbsp;HTTP&nbsp;트리거</p>\n<h4 data-ke-size=\"size20\"><span style=\"color: #ee2323;\"><b>[문제&nbsp;정의]</b></span></h4>\n<p data-ke-size=\"size18\">VS&nbsp;Code에서&nbsp;로컬&nbsp;펑션을&nbsp;실행([F5]&nbsp;또는&nbsp;[Ctrl+F5])하고&nbsp;작성한&nbsp;코드의&nbsp;동작을&nbsp;테스트한&nbsp;후,&nbsp;VS&nbsp;Code의&nbsp;디버그&nbsp;툴바에서&nbsp;[Stop](Shift+F5)를&nbsp;클릭하여&nbsp;중지&nbsp;합니다.(다음&nbsp;그림의&nbsp;빨간색&nbsp;상자) <br />이후,&nbsp;코드를&nbsp;수정한&nbsp;후&nbsp;다시&nbsp;로컬&nbsp;펑션을&nbsp;실행하면&nbsp;7071&nbsp;포트가&nbsp;사용되고&nbsp;있어&nbsp;프로세스를&nbsp;종료하거나&nbsp;다른&nbsp;포트를&nbsp;사용하라는&nbsp;메시지를&nbsp;보게됩니다.&nbsp;(다음&nbsp;그림의&nbsp;파란&nbsp;상자)</p>\n<p><figure class=\"imageblock widthContent\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"1.png\" data-origin-width=\"1977\" data-origin-height=\"1251\"><span data-url=\"https://blog.kakaocdn.net/dn/bK5Pim/btsNKufsXTH/lZWqmkT5sDkWbk9NK7ak4k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bK5Pim/btsNKufsXTH/lZWqmkT5sDkWbk9NK7ak4k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bK5Pim/btsNKufsXTH/lZWqmkT5sDkWbk9NK7ak4k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbK5Pim%2FbtsNKufsXTH%2FlZWqmkT5sDkWbk9NK7ak4k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1977\" height=\"1251\" data-filename=\"1.png\" data-origin-width=\"1977\" data-origin-height=\"1251\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h4 data-ke-size=\"size20\"><span style=\"color: #006dd7;\"><b>[해결 방법]</b></span></h4>\n<p data-ke-size=\"size18\">앞서&nbsp;제시한&nbsp;문제를&nbsp;다음&nbsp;2가지&nbsp;방법&nbsp;중&nbsp;하나로&nbsp;해결할&nbsp;수&nbsp;있습니다. <br /><br />1.&nbsp;VS&nbsp;Code에서&nbsp;이미&nbsp;디버그&nbsp;툴바&nbsp;또는&nbsp;[Stop&nbsp;Debugging]&nbsp;메뉴를&nbsp;사용해&nbsp;로컬&nbsp;펑션을&nbsp;중지한&nbsp;경우 <br />Window&nbsp;터미널을&nbsp;열고&nbsp;netstat&nbsp;명령으로&nbsp;사용중인&nbsp;포트를&nbsp;확인해본&nbsp;결과,&nbsp;7071&nbsp;포트가&nbsp;사용&nbsp;중입니다.&nbsp;(다음&nbsp;그림의&nbsp;노란색&nbsp;상자)</p>\n<pre id=\"code_1746540169158\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>netstat -ano | findstr 7071</code></pre>\n<p data-ke-size=\"size18\"><br />다음&nbsp;명령으로&nbsp;7071&nbsp;포트를&nbsp;사용중인&nbsp;프로세스를&nbsp;종료합니다.&nbsp;(다음&nbsp;그림의&nbsp;녹색&nbsp;상자)</p>\n<pre id=\"code_1746540192511\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>taskkill /f /pid &lt;PROCESS ID&gt;</code></pre>\n<p><figure class=\"imageblock widthContent\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"2.png\" data-origin-width=\"1748\" data-origin-height=\"413\"><span data-url=\"https://blog.kakaocdn.net/dn/cojHEX/btsNMRNxWXR/Q63FnXRMN5tl4deicE5uq0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cojHEX/btsNMRNxWXR/Q63FnXRMN5tl4deicE5uq0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cojHEX/btsNMRNxWXR/Q63FnXRMN5tl4deicE5uq0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcojHEX%2FbtsNMRNxWXR%2FQ63FnXRMN5tl4deicE5uq0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1748\" height=\"413\" data-filename=\"2.png\" data-origin-width=\"1748\" data-origin-height=\"413\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\"><br />2.&nbsp;VS&nbsp;Code에서&nbsp;로컬&nbsp;펑션을&nbsp;실행한&nbsp;후&nbsp;펑션&nbsp;실행을&nbsp;종료할때&nbsp;VS&nbsp;Code&nbsp;터미널에서&nbsp;<span style=\"color: #1b711d;\"><b>[Ctrl+C]</b></span>를&nbsp;눌러&nbsp;종료합니다.</p>",
        "contentSnippet": "Issues and solutions when running Azure Functions locally\n \n아마도 다음 4단계가 Azure 펑션을 개발하는 보편적인 단계일 겁니다. \n첫 번째 단계는 로컬 먼저 개발 머신에서 개발 환경을 구축합니다. \n이 로컬 개발 환경 구축에 필요한 요소는 다음 3가지 입니다. \n1. Visual Studio Code \n2. Azure Functions Extension \n3. Azure Functions Core Tools (Core Tools Version: 4.0.7030, Function Runtime Version: 4.1037.0.23568)\n \n두 번째 단계는  Azure Functions Core Tools를 통해 로컬 펑션 프로젝트를 만들고 필요한 펑션 코드를 작성합니다. \n세 번째 단계는 작성한 펑션 코드를 로컬 Azure 펑션 런타임 환경에서 테스트합니다. \n마지막 단계는 어느 정도 구현 로직을 테스트하고 디버깅한 다음 이제 Azure로 배포하여 클라우드 환경에서 다시 동작을 확인합니다. \n이러한 단계로 Azure 펑션을 구현할 때 최근 Azure Functions Core Tools 업데이트와 관련하여 알게된 문제점과 해결 방법을 소개합니다. \n이 글에서 설명하는 문제점은 다음과 같은 조건에서 발생합니다. 하지만 다른 조건에서 발생하는지는 테스트하지 않았습니다. \n1. 로컬 개발 머신의 운영 체제: Windows \n2. Azure 펑션 런타임 및 언어: Node.js 및 JavaScript  \n3. 트리거: HTTP 트리거\n[문제 정의]\nVS Code에서 로컬 펑션을 실행([F5] 또는 [Ctrl+F5])하고 작성한 코드의 동작을 테스트한 후, VS Code의 디버그 툴바에서 [Stop](Shift+F5)를 클릭하여 중지 합니다.(다음 그림의 빨간색 상자) \n이후, 코드를 수정한 후 다시 로컬 펑션을 실행하면 7071 포트가 사용되고 있어 프로세스를 종료하거나 다른 포트를 사용하라는 메시지를 보게됩니다. (다음 그림의 파란 상자)\n\n\n \n[해결 방법]\n앞서 제시한 문제를 다음 2가지 방법 중 하나로 해결할 수 있습니다. \n1. VS Code에서 이미 디버그 툴바 또는 [Stop Debugging] 메뉴를 사용해 로컬 펑션을 중지한 경우 \nWindow 터미널을 열고 netstat 명령으로 사용중인 포트를 확인해본 결과, 7071 포트가 사용 중입니다. (다음 그림의 노란색 상자)\nnetstat -ano | findstr 7071\n다음 명령으로 7071 포트를 사용중인 프로세스를 종료합니다. (다음 그림의 녹색 상자)\ntaskkill /f /pid <PROCESS ID>\n\n\n\n2. VS Code에서 로컬 펑션을 실행한 후 펑션 실행을 종료할때 VS Code 터미널에서 [Ctrl+C]를 눌러 종료합니다.",
        "guid": "http://www.dokyun.pe.kr/366",
        "categories": [
          "Azure &amp; Windows/Azure",
          "azure #functions",
          "azurefunctionscoretools"
        ],
        "isoDate": "2025-05-06T14:06:51.000Z"
      }
    ]
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": [
      {
        "title": "USB를 이용한 전원 공급 (2) - USB PD",
        "link": "https://blog.seulgi.kim/2025/05/blog-post.html",
        "pubDate": "2025-05-04T17:07:00.004Z",
        "author": "Seulgi Kim",
        "summary": "USB 포트는 원래 데이터 전송을 위한 인터페이스였지만, 시간이 지나면서 전력 공급 수단으로도 활용되기 시작했다. 이를 지원하기 위해 USB BC가 도입되었고, 기존보다 높은 전류를 제공할 수 있도록 개선되었다. 하지만 USB BC 1.2는 5V 전압 고정이라는 한계를 갖고 있어, 노트북 같은 고출력 기기를 충전하기에는 부족했다. 이런 제약 조건을 해결하기 위해 제조사마다 별도의 급속 충전 방식을 만들기 시작했고, 이로 인해 특정 브랜드의 디바이스는 해당 브랜드의 충전기에서만 고속 충전이 가능한 호환성 문제도 발생하였다.\n\n이러한 문제를 해결하기 위해 USB-IF는 USB Power Delivery(a.k.a. USB PD)라는 전력 공급을 위한 새로운 표준을 만들었다. USB PD는 전압과 전류를 ",
        "id": "tag:blogger.com,1999:blog-5754933877504806384.post-8059409676462154833",
        "isoDate": "2025-05-04T17:07:00.004Z"
      }
    ]
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "지금 경계선에서",
        "link": "https://kangmyounghun.blogspot.com/2025/05/blog-post.html",
        "pubDate": "2025-05-07T12:25:00.002Z",
        "author": "강명훈",
        "content": "<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiLdiyUBHuLgecVQOg2tXBiKVpAZndqBv9Ibe84NN8FhIGq7jquyY8BRPPHdJzG2cjGFeTJ3UiFrExm1tTsdGp8XUmgpWSJSC4LcI0AlL22XgBXH6YxyOdmRICd2SWBXCOgx-B0sAHn46gtF95Uz9u9n3g8paj27A8N_3ea1byn-oo7WOsyNQuQfr0MjZxq/s675/9788965700074.jpg\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"675\" data-original-width=\"458\" height=\"320\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiLdiyUBHuLgecVQOg2tXBiKVpAZndqBv9Ibe84NN8FhIGq7jquyY8BRPPHdJzG2cjGFeTJ3UiFrExm1tTsdGp8XUmgpWSJSC4LcI0AlL22XgBXH6YxyOdmRICd2SWBXCOgx-B0sAHn46gtF95Uz9u9n3g8paj27A8N_3ea1byn-oo7WOsyNQuQfr0MjZxq/s320/9788965700074.jpg\" width=\"217\" /></a></div><div>저자 레베카 코스타. 예전에 읽다 용두사미 결론에 실망하며 덮었던 기억이 나는데 오랫만에 다시 읽어봄.</div><div><br /></div><div>마야, 로마 등 사라진 문명은 그 복잡도가 인간의 인지 능력 한계까지 발전했을 때 망조가 들었다는 초반부는 재미있다. 관료제하의 모든 사람은 자신이 가장 무능해질 때까지 승진한다는 피터의 법칙이 떠오름.</div><div><blockquote style=\"text-align: center;\"><i>유기체가 생존 가능성을 높이려면 유기체의 복잡성이 환경의 복잡성과 대등한 수준이 되어야 한다</i> <span style=\"font-size: x-small;\">(29 페이지)</span></blockquote></div><div><blockquote style=\"text-align: center;\"><i>사회의 해결 능력을 훌쩍 뛰어넘는 수준으로 문제가 복잡해지면, 사회가 더 이상 문제 해결책을 '사고 '할 수 없는 시점<span style=\"font-size: x-small;\">(인식 한계점)</span>에 도달하게 되면 해결되지 않은 문제들은 다음 세대로 떠넘겨지고 결국 해당 문명을 낭떠러지 끝으로 밀어낸다</i> <span style=\"font-size: x-small;\">(36 페이지)</span></blockquote></div><div><br /></div><div><span><a name='more'></a></span>몰락한 문명의 공통점인 '발전 &gt; 복잡도 증가 &gt; 인식 한계점 봉착' 현상이 현재에도 여전히 이어지고 있다는 것이 저자의 주장.</div><div><i><blockquote style=\"text-align: center;\">나는 물 위원회에 5년째 참석하고 있다. 이 기간 우리는 한 방울의 물도 만들어내지 않았다. 물에 대한 필요성도, 물을 생산할 기술도 있지만...&nbsp;<strike style=\"text-align: left;\"><span style=\"font-size: x-small;\">돈이 없는 거 아닐까?</span></strike>&nbsp;캘리포니아의 물 부족 문제든, 지구적 기후변화든, 세계적 금융위기든 우리가 취하는 조치는 오로지 단기 증상 완화에 국한... 문제가 다음 세대로 전가되면서 규모가 커지면 비극적 결말을 초래할 수 있는데도 우리는 계속 미적거리기만 한다&nbsp;<span style=\"text-align: left;\"><span style=\"font-size: x-small;\">(50 페이지)</span></span></blockquote></i></div><div><br /></div><div><b><span style=\"font-size: x-large;\">인식 한계점</span></b></div><div><br /></div><div>인생은 짧다. 빠른 <span style=\"font-size: x-small;\">(살아서 이득 볼 가능성도 높은)</span> 해결책에 끌리는 게 인지상정. 내가 생각하는 인식 한계점 발생 이유. 저자는 좀 더 근원적인 이유를 댄다. 생물학적 진화 속도가 사회의 변화 속도보다 느려서라는 것.</div><div><div><blockquote style=\"text-align: center;\"><i>농업이 지구상에 처음 등장한 것은 1만 년 전,&nbsp;</i><i>산업혁명이 일어난 지는 이제 겨우 200년</i><i>... 자연선택은 대단히 느리게 일어나는 과정이다. 우리의 후기산업사회에 잘 어울리는 '회로 '가 고안되기에는 아직 충분히 많은 세대가 지나지 않았다</i>&nbsp;<span style=\"font-size: x-small;\">(37페이지)</span></blockquote></div><div><div><blockquote style=\"text-align: center;\"><i>당신이 독사와 마주친다면, 거의 뇌 전체가 빛을 내며 그 위협을 처리할 적절한 행동을 취한다. 그렇지만 탄소배출이 언젠가 지구<strike><span style=\"font-size: x-small;\">인류</span></strike>를 멸망시킬 것이라는 얘기를 들을 때는 뇌에서 장래의 일을 담당하는 일부분<span style=\"font-size: x-small;\">(전전두피질)</span>만 희미하게 빛날 따름&nbsp;</i><span style=\"font-size: x-small;\">(53&nbsp; 페이지)</span></blockquote></div></div><div>만년 동안 농사 짓는 데 최적화된 인지 능력으로 산업혁명 이후 급격히 높아진 정치, 경제, 사회 체제의 복잡도를 감당하기는 절대 쉽지 않을 것이다. 세계대전, 대공황 등이 그 증거 아닐까?</div></div><div><br /></div><div><blockquote><div style=\"text-align: center;\"><div><blockquote><i><a href=\"https://kangmyounghun.blogspot.com/2016/01/blog-post_22.html\" target=\"_blank\">하루 먹고 살기도 힘들었을 것이 뻔한 원시 인류는 당연히 힘들게 얻은 에너지가 허투루&nbsp;<span style=\"font-size: x-small;\">(사색, 고찰 따위에)</span>&nbsp;쓰여지는 상황을 싫어했을 것이며, 그들의 후손인 우리도 마찬가지</a></i></blockquote></div></div><div style=\"text-align: center;\"><i>그것에 대해 내 기분이 어떤가? 처럼 쉬운 질문이 그것에 대한 내 의견은 무언인가? 처럼 어려운 질문의 답을 대체한다</i><span style=\"text-align: left;\">&nbsp;- </span><span style=\"font-size: x-small;\">'생각에 관한 생각' 중</span></div></blockquote></div><div>인지 과부하를 싫어하는 인간은 본능적으로 복잡한 문제도 싫어한다. 그렇게 인식 한계점에 봉착한 인간이 노력이 필요한 지식보다 상대적으로 습득하기 쉬운 믿음<span style=\"font-size: x-small;\">(슈퍼밈)</span>에 의존할 때 문명의 몰락이 시작된다는 게 저자의 설명.</div><div><blockquote style=\"text-align: center;\"><i>믿음이 사실을 밀어내는 현상과 정체 현상이 나타나기 시작하면 붕괴가 일어날 무대가 마련된 것... 사실과 증거를 무시한 채 입증되지 않은 구제책을 택하는 행위는 파멸의 격렬한 소용돌이를 불러일으키는 방아쇠</i> <span style=\"font-size: x-small;\">(41 페이지)</span></blockquote></div><div><br /></div><div>인식 한계점을 극복하려면 어떻게 해야 할까? 뇌 진화가 더뎌서 발생한 문제라 해결이 힘들어 보이는데? 저자는 통찰력을 발휘해야 한다 얘기하는데 그것도 뇌가 하는 거잖아<span style=\"font-size: x-small;\">(..)</span></div><div><br /></div><div><b><span style=\"font-size: x-large;\">통찰을 방해하는 슈퍼밈</span></b></div><div><br /></div><div>저자가 주의를 당부하는 통찰 방해꾼들.</div><div><br /></div><div><b>불합리한<span style=\"font-size: x-small;\">(반대를 위한)</span><span style=\"font-size: large;\"> </span>반대</b>&nbsp;- <span style=\"font-size: x-small;\">해법을 고민하는 것보다 포지티브와 네거티브, 둘 중 하나를 선택하는 게 쉽다</span></div><div><blockquote style=\"text-align: center;\"><i>양당제에서 후보자가 할 일은 유권자가 자신의 경쟁자를 거부할 '단 하나의 이유 '를 찾아내는 것</i> <span style=\"font-size: x-small;\">(131 페이지)</span></blockquote></div><div><br /></div><div><b>책임의 개인화 </b>- <span style=\"font-size: x-small;\">구조 문제를 개인 문제로 희석하는 게 쉽다</span></div><div><div><blockquote style=\"text-align: center;\"><i>미국 전역에서 배출되는 쓰레기 중 생활폐기물이 차지하는 비율은 3퍼센트도 안 된다 - </i><span style=\"font-size: x-small;\"><a href=\"https://www.kgnews.co.kr/news/article.html?no=663625\" target=\"_blank\">해양 플라스틱 오염 주범은 어구, 어망</a></span>&nbsp;<span style=\"font-size: x-small;\">(162 페이지)</span></blockquote></div></div><div><div><blockquote style=\"text-align: center;\"><i>시스템적 문제에 우리가 미칠 수 있는 영향은 실제보다 엄청나게 과장되어 있다. 실패한 제도, 지도자, 전문가의 책임을 평범한 개인에게 전가</i> <span style=\"font-size: x-small;\">(164 페이지)</span></blockquote></div></div><div><br /></div><div><b>거짓 상관관계 </b>- <span style=\"font-size: x-small;\">인과관계보다 쉽다</span></div><div><blockquote style=\"text-align: center;\"><i>주가변동과 치즈 생산량의 상관관계는 95%까지 급등... 연관성 없는 상관관계 의존이 얼마나 위험한지 알릴수록... 더 정확한 공식을 밝혀달라는 요청 쇄도... 금융시스템이 너무 복잡해져서 사람들은 문제를 간단하게 만들어줄 수 있는 마법사에게 의지하기 시작</i> <span style=\"font-size: x-small;\">(101 페이지)</span></blockquote></div><div><blockquote style=\"text-align: center;\"><i>한 사건이 다른 사건의 실제 '원인 '인지 입증하는 것보다, 두 사건 사이의 관계를 대강 관찰하는 것이 훨씬 쉽기 때문</i> <span style=\"font-size: x-small;\">(182 페이지)</span></blockquote></div><div><br /></div><div><b>사일로<span style=\"font-size: x-small;\">(Silo)</span>식 사고 </b>- <span style=\"font-size: x-small;\">쉽게 살기 위한 밥그릇 지키기</span></div><div><blockquote style=\"text-align: center;\"><i>우주 기반 태양 에너지를 연구한 나사 과학자들은 10년이 넘도록 에너지부의 문을 두드렸다... 에너지부는 나사를 비난하며 우주개발이나 하라고</i> <span style=\"font-size: x-small;\">(223 페이지)</span></blockquote></div><div><br /></div><div><b>극단의 경제학 </b>- <span style=\"font-size: x-small;\">돈으로 평가하는 게 쉽다</span></div><div><div><blockquote style=\"text-align: center;\"><i>1년 전만 해도 마리화나 합법화 찬성은 정치적 자살이나 마찬가지였다. 하지만 온 나라가 경제 위기에 빠지자 정치인들은 기특하게도 이전의 성향을 고집하지 않고 급진적인 자세로 경제 문제를 해결한 해법을 받아들이려 했다... 공공정책과 사회의 윤리는 경제적 필요에 맞춰 쉽게 변할 수 있다</i> <span style=\"font-size: x-small;\">(253 페이지)</span></blockquote></div><div><blockquote style=\"text-align: center;\"><i>비즈니스 원리가 만연하면 복잡한 문제에 빠르게, 효율적으로 대응해야 한다는 압력이 거세진다. 이러한 환경에서는 느리고 사려 깊은 검토보다 빠르고 결단력 있어 보이는 행동을 더 높이 평가... 우리는 상황을 재빨리 가늠해서 행동에 나설 수 있는 강력하고 합리적이며 비즈니스적 사고방식을 지닌 실천가를 원한다</i> <span style=\"font-size: x-small;\">(261 페이지)</span></blockquote></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhbwrtaO243K6QUcr82nhoflO3oLAi7tifejUGlRDjHQW8ct8y6DAgCd5q2V3HzVUILI241gDLbtWjYdQ0VcvlGJDATnRsjI-O4xBPrCcSW-168O4ZRSxrmJmjXhwH46pcCoD1WkmqjQ2LZTqQPY-JHkBuO5OnV5PrwnKfo1LVSkzYbF-REml5gL1eoEpn7/s580/mania-done-20231125102235_eelimenq.jpg\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"354\" data-original-width=\"580\" height=\"195\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhbwrtaO243K6QUcr82nhoflO3oLAi7tifejUGlRDjHQW8ct8y6DAgCd5q2V3HzVUILI241gDLbtWjYdQ0VcvlGJDATnRsjI-O4xBPrCcSW-168O4ZRSxrmJmjXhwH46pcCoD1WkmqjQ2LZTqQPY-JHkBuO5OnV5PrwnKfo1LVSkzYbF-REml5gL1eoEpn7/w320-h195/mania-done-20231125102235_eelimenq.jpg\" width=\"320\" /></a></div><br /><div>전부 복잡도를 줄여 단순하게 문제를 해결하려는 두뇌 활동의 결과. 어느 하나 피해가는 게 쉽지 않아 보인다. 저자가 이런 장벽들을 극복할 수 있는 해결책을 제시하긴 하는데 핵심이 두뇌 훈련을 통한 통찰력 강화<span style=\"font-size: x-small;\">(..)</span> 결국 개인 역량 강화하라는 얘기. <strike><span style=\"font-size: x-small;\">책임의 개인화?</span></strike></div></div><div><br /></div><div><b><span style=\"font-size: x-large;\">나가며</span></b></div><div><br /></div><div>흥미로운 초반부에 비해 후반부로 갈수록 고개가 갸우뚱해지는, 뒷심이 많이 부족해서 아쉬운 책이다. AI가 무섭게 발전하고 있는 요즘 나왔으면 결론이 어땠을까 궁금해지기도 하고. 기억에 남는 문구를 남긴다.</div><div></div><blockquote><div style=\"text-align: center;\"><i>모든 가옥의 지붕과 도로를 흰색으로 칠하면 '11년 동안 110억 대의 자동차를 도로에서 제거한 것 '과 맞먹는 효과를 낼 것</i> <span style=\"font-size: x-small;\">(84 페이지)</span><span style=\"text-align: left;\">&nbsp;</span></div></blockquote><blockquote><div style=\"text-align: center;\"><i>높은 다양성이 있는 시스템은 복잡한 문제에 직면해서도 잘 작동</i> <span style=\"font-size: x-small;\">(107 페이지)</span><span style=\"text-align: left;\">&nbsp;</span></div></blockquote><blockquote><div style=\"text-align: center;\"><i>고도로 복잡한 환경에서는 성공하는 해법보다 실패하는 해법이 더 많다는 사실을 인정할 필요가 있다. 이것이 진보를 이루기 위해 치러야 할 대가</i> <span style=\"font-size: x-small;\">(305 페이지)</span><span style=\"text-align: left;\">&nbsp;</span></div></blockquote><blockquote><div style=\"text-align: center;\"><i>복잡한 문제가 닥쳤을 때 우리가 개발할 수 있는 해법에 커다란 영향을 미치는 것은 뇌 속에 쌓아 온 콘텐츠의 종류와 양. 인간은 무에서 유를 창조할 수 없다</i> <span style=\"font-size: x-small;\">(338 페이지)</span><span style=\"text-align: left;\">&nbsp;</span></div></blockquote><blockquote><div style=\"text-align: center;\"><i>소그룹<span style=\"font-size: x-small;\">(3~5명)</span>이 복잡한 문제를 개인보다 더 빨리 해결... 2명 이하 그룹은 해법을 이끌어낼 '임계 질량 '이 부족... 사람이 많을수록 새로운 아이디어나 반대 의견에 대한 억압 심화... 큰 그룹에서는 집단의사결정에 기여하지 않는 개인이 생겨나 '사회적 태만 '이나 '남의 의견만 따르는 ' 현상이 일어나기 쉽다</i> <span style=\"font-size: x-small;\">(367 페이지)</span></div></blockquote>",
        "contentSnippet": "저자 레베카 코스타. 예전에 읽다 용두사미 결론에 실망하며 덮었던 기억이 나는데 오랫만에 다시 읽어봄.\n\n\n마야, 로마 등 사라진 문명은 그 복잡도가 인간의 인지 능력 한계까지 발전했을 때 망조가 들었다는 초반부는 재미있다. 관료제하의 모든 사람은 자신이 가장 무능해질 때까지 승진한다는 피터의 법칙이 떠오름.\n\n유기체가 생존 가능성을 높이려면 유기체의 복잡성이 환경의 복잡성과 대등한 수준이 되어야 한다 (29 페이지)\n\n사회의 해결 능력을 훌쩍 뛰어넘는 수준으로 문제가 복잡해지면, 사회가 더 이상 문제 해결책을 '사고 '할 수 없는 시점(인식 한계점)에 도달하게 되면 해결되지 않은 문제들은 다음 세대로 떠넘겨지고 결국 해당 문명을 낭떠러지 끝으로 밀어낸다 (36 페이지)\n\n\n몰락한 문명의 공통점인 '발전 > 복잡도 증가 > 인식 한계점 봉착' 현상이 현재에도 여전히 이어지고 있다는 것이 저자의 주장.\n\n나는 물 위원회에 5년째 참석하고 있다. 이 기간 우리는 한 방울의 물도 만들어내지 않았다. 물에 대한 필요성도, 물을 생산할 기술도 있지만... 돈이 없는 거 아닐까? 캘리포니아의 물 부족 문제든, 지구적 기후변화든, 세계적 금융위기든 우리가 취하는 조치는 오로지 단기 증상 완화에 국한... 문제가 다음 세대로 전가되면서 규모가 커지면 비극적 결말을 초래할 수 있는데도 우리는 계속 미적거리기만 한다 (50 페이지)\n\n\n\n인식 한계점\n\n\n인생은 짧다. 빠른 (살아서 이득 볼 가능성도 높은) 해결책에 끌리는 게 인지상정. 내가 생각하는 인식 한계점 발생 이유. 저자는 좀 더 근원적인 이유를 댄다. 생물학적 진화 속도가 사회의 변화 속도보다 느려서라는 것.\n\n농업이 지구상에 처음 등장한 것은 1만 년 전, 산업혁명이 일어난 지는 이제 겨우 200년... 자연선택은 대단히 느리게 일어나는 과정이다. 우리의 후기산업사회에 잘 어울리는 '회로 '가 고안되기에는 아직 충분히 많은 세대가 지나지 않았다 (37페이지)\n\n\n당신이 독사와 마주친다면, 거의 뇌 전체가 빛을 내며 그 위협을 처리할 적절한 행동을 취한다. 그렇지만 탄소배출이 언젠가 지구인류를 멸망시킬 것이라는 얘기를 들을 때는 뇌에서 장래의 일을 담당하는 일부분(전전두피질)만 희미하게 빛날 따름 (53  페이지)\n\n만년 동안 농사 짓는 데 최적화된 인지 능력으로 산업혁명 이후 급격히 높아진 정치, 경제, 사회 체제의 복잡도를 감당하기는 절대 쉽지 않을 것이다. 세계대전, 대공황 등이 그 증거 아닐까?\n\n\n\n\n하루 먹고 살기도 힘들었을 것이 뻔한 원시 인류는 당연히 힘들게 얻은 에너지가 허투루 (사색, 고찰 따위에) 쓰여지는 상황을 싫어했을 것이며, 그들의 후손인 우리도 마찬가지\n\n그것에 대해 내 기분이 어떤가? 처럼 쉬운 질문이 그것에 대한 내 의견은 무언인가? 처럼 어려운 질문의 답을 대체한다 - '생각에 관한 생각' 중\n\n인지 과부하를 싫어하는 인간은 본능적으로 복잡한 문제도 싫어한다. 그렇게 인식 한계점에 봉착한 인간이 노력이 필요한 지식보다 상대적으로 습득하기 쉬운 믿음(슈퍼밈)에 의존할 때 문명의 몰락이 시작된다는 게 저자의 설명.\n\n믿음이 사실을 밀어내는 현상과 정체 현상이 나타나기 시작하면 붕괴가 일어날 무대가 마련된 것... 사실과 증거를 무시한 채 입증되지 않은 구제책을 택하는 행위는 파멸의 격렬한 소용돌이를 불러일으키는 방아쇠 (41 페이지)\n\n\n인식 한계점을 극복하려면 어떻게 해야 할까? 뇌 진화가 더뎌서 발생한 문제라 해결이 힘들어 보이는데? 저자는 통찰력을 발휘해야 한다 얘기하는데 그것도 뇌가 하는 거잖아(..)\n\n\n통찰을 방해하는 슈퍼밈\n\n\n저자가 주의를 당부하는 통찰 방해꾼들.\n\n\n불합리한(반대를 위한) 반대 - 해법을 고민하는 것보다 포지티브와 네거티브, 둘 중 하나를 선택하는 게 쉽다\n\n양당제에서 후보자가 할 일은 유권자가 자신의 경쟁자를 거부할 '단 하나의 이유 '를 찾아내는 것 (131 페이지)\n\n\n책임의 개인화 - 구조 문제를 개인 문제로 희석하는 게 쉽다\n\n미국 전역에서 배출되는 쓰레기 중 생활폐기물이 차지하는 비율은 3퍼센트도 안 된다 - 해양 플라스틱 오염 주범은 어구, 어망 (162 페이지)\n\n\n시스템적 문제에 우리가 미칠 수 있는 영향은 실제보다 엄청나게 과장되어 있다. 실패한 제도, 지도자, 전문가의 책임을 평범한 개인에게 전가 (164 페이지)\n\n\n\n거짓 상관관계 - 인과관계보다 쉽다\n\n주가변동과 치즈 생산량의 상관관계는 95%까지 급등... 연관성 없는 상관관계 의존이 얼마나 위험한지 알릴수록... 더 정확한 공식을 밝혀달라는 요청 쇄도... 금융시스템이 너무 복잡해져서 사람들은 문제를 간단하게 만들어줄 수 있는 마법사에게 의지하기 시작 (101 페이지)\n\n한 사건이 다른 사건의 실제 '원인 '인지 입증하는 것보다, 두 사건 사이의 관계를 대강 관찰하는 것이 훨씬 쉽기 때문 (182 페이지)\n\n\n사일로(Silo)식 사고 - 쉽게 살기 위한 밥그릇 지키기\n\n우주 기반 태양 에너지를 연구한 나사 과학자들은 10년이 넘도록 에너지부의 문을 두드렸다... 에너지부는 나사를 비난하며 우주개발이나 하라고 (223 페이지)\n\n\n극단의 경제학 - 돈으로 평가하는 게 쉽다\n\n1년 전만 해도 마리화나 합법화 찬성은 정치적 자살이나 마찬가지였다. 하지만 온 나라가 경제 위기에 빠지자 정치인들은 기특하게도 이전의 성향을 고집하지 않고 급진적인 자세로 경제 문제를 해결한 해법을 받아들이려 했다... 공공정책과 사회의 윤리는 경제적 필요에 맞춰 쉽게 변할 수 있다 (253 페이지)\n\n비즈니스 원리가 만연하면 복잡한 문제에 빠르게, 효율적으로 대응해야 한다는 압력이 거세진다. 이러한 환경에서는 느리고 사려 깊은 검토보다 빠르고 결단력 있어 보이는 행동을 더 높이 평가... 우리는 상황을 재빨리 가늠해서 행동에 나설 수 있는 강력하고 합리적이며 비즈니스적 사고방식을 지닌 실천가를 원한다 (261 페이지)\n\n\n\n전부 복잡도를 줄여 단순하게 문제를 해결하려는 두뇌 활동의 결과. 어느 하나 피해가는 게 쉽지 않아 보인다. 저자가 이런 장벽들을 극복할 수 있는 해결책을 제시하긴 하는데 핵심이 두뇌 훈련을 통한 통찰력 강화(..) 결국 개인 역량 강화하라는 얘기. 책임의 개인화?\n\n\n나가며\n\n\n흥미로운 초반부에 비해 후반부로 갈수록 고개가 갸우뚱해지는, 뒷심이 많이 부족해서 아쉬운 책이다. AI가 무섭게 발전하고 있는 요즘 나왔으면 결론이 어땠을까 궁금해지기도 하고. 기억에 남는 문구를 남긴다.\n\n\n모든 가옥의 지붕과 도로를 흰색으로 칠하면 '11년 동안 110억 대의 자동차를 도로에서 제거한 것 '과 맞먹는 효과를 낼 것 (84 페이지) \n\n높은 다양성이 있는 시스템은 복잡한 문제에 직면해서도 잘 작동 (107 페이지) \n\n고도로 복잡한 환경에서는 성공하는 해법보다 실패하는 해법이 더 많다는 사실을 인정할 필요가 있다. 이것이 진보를 이루기 위해 치러야 할 대가 (305 페이지) \n\n복잡한 문제가 닥쳤을 때 우리가 개발할 수 있는 해법에 커다란 영향을 미치는 것은 뇌 속에 쌓아 온 콘텐츠의 종류와 양. 인간은 무에서 유를 창조할 수 없다 (338 페이지) \n\n소그룹(3~5명)이 복잡한 문제를 개인보다 더 빨리 해결... 2명 이하 그룹은 해법을 이끌어낼 '임계 질량 '이 부족... 사람이 많을수록 새로운 아이디어나 반대 의견에 대한 억압 심화... 큰 그룹에서는 집단의사결정에 기여하지 않는 개인이 생겨나 '사회적 태만 '이나 '남의 의견만 따르는 ' 현상이 일어나기 쉽다 (367 페이지)",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-6067965627459976237",
        "isoDate": "2025-05-07T12:25:00.002Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": [
      {
        "title": "상권을 이기는 작은 가게의 성공 법칙 | 임상진",
        "link": "https://sungjk.github.io/2025/05/04/dailybeer.html",
        "pubDate": "2025-05-04T00:00:00+00:00",
        "content": "\n            \n            &lt;h1 id=&quot;함께-하고-싶은-가게&quot;&gt;함께 하고 싶은 가게&lt;/h1&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/05/04/dailybeer.png&quot; alt=&quot;dailybeer&quot; title=&quot;dailybeer&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;생활맥주, 이 가게에서 일 해보고 싶다.&lt;/p&gt;\n\n&lt;p&gt;최근에 동료와 점심을 먹다가 이런 질문을 던졌다. “지금 하고 있는 일을 안한다면 어떤 일을 하고 싶으세요?” 이 질문을 던졌던 이유는 이 책을 읽고 나서 들었던 생각 때문이다. 책을 읽는 내내 ‘이 가게에서 일 해보고 싶다’는 생각이 들었다. 외식업 뿐만 아니라 요리에 대해서도 아는게 없는데, 정말 많은걸 배울 수 있는 환경일 것 같다는 생각과 생활맥주 브랜드의 가맹을 내고 싶다는 마음이 들었다.&lt;/p&gt;\n\n&lt;p&gt;여의도 10평 가게에서 시작해서 국내 대표 수제 맥주 프랜차이즈로 자리 잡고, 지금은 글로벌 진출을 시도하고 있는 생활 맥주. 가맹 사업을 통해 수수료 장사를 취하는 수많은 프랜차이즈들과 다르게, 수십개의 직영점을 운영하면서 변화하는 외식 트렌드에 맞게 지속적인 성장을 추구하고 가맹점에게 사업의 성공을 위해 사업 아이템, 노하우 등을 제공하는 모습도 인상 깊었다. 그래서 이 브랜드가 더 잘 되어서 시장의 성장에 영향을 주고 이런 사업가들이 많이 나왔으면 좋겠다는 생각으로 이어졌다.&lt;/p&gt;\n\n&lt;p&gt;이 책에서 인상 깊었던 문장 중 하나는 ‘가맹점은 판매하는 것이 아니라 브랜드의 동업자를 늘리는 일’ 이라는 말이었다. 그 말 한 줄에 사업가로서의 철학, 책임감, 그리고 동반자 의식이 모두 담겨 있다고 느꼈다. 단지 브랜드를 확장하는 데에만 집중하는 것이 아니라, 함께 성장하고 함께 살아남는 구조를 고민하는 브랜드라는 점. 만약 창업을 하게 된다면, 단순히 수익만 좇는 것이 아니라 내가 속한 업계와 사회에 어떤 가치를 남길 수 있을지를 더 깊이 고민하게 될 것 같다.&lt;/p&gt;\n\n&lt;p&gt;책을 덮고 나서도 한참 동안 생각에 잠겼다. ‘지속 가능한 브랜드’, ‘대체 불가한 플랫폼’, ‘전 세계인이 즐기는 맥주 공간’. 이런 거창한 목표들이 단순히 꿈이 아니라 아주 구체적인 계획과 실행으로 이어졌다는 사실은, 내게도 ‘내 삶을 어떻게 설계할 것인가’ 에 대한 자극을 주었다.&lt;/p&gt;\n\n&lt;p&gt;사실 이 책을 사기 전에 생활맥주에 가본 적이 없었다. 술을 찾아서 먹는 사람은 아닌지라;; 길 가다 간판 한 두 번 마주하는 정도였다. 그런데 내가 이 책을 읽는다고 하니 가게를 가보지도 않고 글로 배운다고 옆에서 사람들이 웃었다(듣고 보니 나도 웃겼음). 아무튼.. 책을 읽는 내내 내가 너무너무 닮고 싶은 창업가의 상과 일치해서 가슴 뛰기도 하고 배울 점도 많아서 단순히 외식업 종사자가 아니더라도 기업가 정신에 대해 알고 싶다면 이 책을 읽어보기를 추천한다. 다 읽고 맨 앞장부터 다시 훑어보는데 매장에서 사용할 수 있는 무료 쿠폰이 있는걸 발견했다! 그냥 덮었다면 몰랐을 것을.. 조금 감동했다. 책에 소개된 생활맥주 브랜드가 실제 매장에서도 느껴지는지 너무 궁금하다. 조만간 첫 고객으로서 방문할테니 기대하겠습니다!&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/05/04/dailybeer-coupon.png&quot; alt=&quot;dailybeer-coupon&quot; title=&quot;dailybeer-coupon&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;기업-분석&quot;&gt;기업 분석&lt;/h1&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;국내 수제맥주 프랜차이즈 1위 브랜드. 현재 운영사는 ㈜데일리비어. 창업주 겸 대표이사인 임상진 대표&lt;/li&gt;\n  &lt;li&gt;2014년 5월. 서울 여의도에 1호점을 개점&lt;/li&gt;\n  &lt;li&gt;2024년 8월. 기준 전국 약 328개의 매장 보유. 이 중 약 15%(50여개) 이상의 직영점 운영중&lt;/li&gt;\n  &lt;li&gt;2021년 8월. LB인베스트먼트 등으로부터 70억 원 규모의 시리즈 A 투자유치 완료&lt;/li&gt;\n  &lt;li&gt;2023년. KB증권과 코스닥 상장을 위한 대표주관 계약을 체결하여 IPO 준비중&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;마케팅-전략&quot;&gt;마케팅 전략&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;상생 브랜딩과 차별화: “맥주덕후의 팬”을 자처하며, 수제맥주 문화 저변 확대에 초점을 맞춘 브랜딩. 단순히 브랜드 인지도만 높이기보다 “맥주를 사랑하는 사람들을 위해 무엇을 할 수 있을까”를 고민하며, 국내 소규모 양조장들을 발굴해 소개하는 캠페인(‘마시자! 지역맥주’ 프로젝트) 등을 진행. 지역 브루어리와의 상생이면서 브랜드만의 차별화 포인트. 또한 “맥주에 소주를 무료로 타준다”는 파격 서비스까지 도입하여 화제를 모았는데, 이 역시 독특한 고객경험 제공과 입소문 효과를 노린 전략. 브랜딩 철학은 “생활맥주는 맥주 덕후를 위해 태어난 브랜드” 라는 메시지로 일관되게 전달되었고, 수제맥주 애호가층의 충성도를 높이는 성과.&lt;/li&gt;\n  &lt;li&gt;오프라인 매장 전략 (직영점+가맹점 모델): 직영점을 적극 활용하는 독특한 운영 전략. 전체 매장의 약 15~17%에 달하는 직영점을 통해 새로운 메뉴나 서비스를 먼저 테스트하고 검증한 후 가맹점에 적용. “대부분 프랜차이즈 본부는 위험을 피하기 위해 직영점을 잘 안 내지만, 우리는 본사 매출의 65%가 직영에서 나올 정도로 직접 뛰고 있다”고 언급. “본사도 창업한다”는 접근법은 가맹점주들에게 본사의 노하우 전수를 용이하게 하고, 가맹점 모집 시 신뢰도를 높이는 효과. 또한 가맹점주 교육, 운영 컨설팅, 지역 상권분석 지원 등을 체계화하여 가맹점과 본사가 함께 성장하는 구조를 지향. 이런 이유로 가맹점 평균 매출 및 낮은 폐점률 측면에서 업계 상위권을 유지하고 있다는 평가&lt;/li&gt;\n  &lt;li&gt;SNS 및 디지털 마케팅: 젊은 층 공략을 위해 소셜 미디어와 콘텐츠 마케팅도 적극 활용. 공식 유튜브 채널을 개설해 맥주 상식이나 매장 브이로그를 공유하고, 인스타그램과 페이스북 등을 통해 신제품 출시 소식, 이벤트 안내, 소비자 참여형 캠페인을 전개. 예를 들어, 10주년 기념 해시태그 이벤트나 인증샷 챌린지 등을 열어 온라인 바이럴 유도. 또한 월간 뉴스레터를 통해 가맹 희망자 대상 창업 정보와 브랜드 소식을 전하고, 배달 앱 및 위치기반 앱과 제휴 프로모션도 시행하는 등 디지털 채널에서의 고객 접점을 넓힘. 이러한 멀티채널 홍보 전략으로 MZ세대 소비자들의 관심을 끌고 브랜드 충성도를 높임&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;5년간-재무제표20192023&quot;&gt;5년간 재무제표(2019~2023)&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;매출액: 2019년과 2020년에는 연간 매출 약 80~90억 원대로 추정. 코로나19 확산에도 매출 규모를 비교적 잘 유지. 2021년 매출은 약 101억 원으로 소폭 증가에 그쳤으나, 전년 대비 정체된 수준. 그러나 2022년 매출 203억 원으로 전년 대비 2배 증가하며 큰 도약을 이루었고, 2023년에는 약 295억 원으로 또다시 45% 이상 급증. 이로써 5년 전과 비교하면 매출규모가 3배 이상으로 성장&lt;/li&gt;\n  &lt;li&gt;영업이익: 2020년까지 비교적 안정적 이익을 내오다가, 2021년에 영업손실 -4억 원을 기록하며 일시적인 적자. 이는 사회적 거리두기로 매장 영업이 어려웠던 영향. 하지만 2022년 영업이익 24억 원으로 흑자전환에 성공했고, 2023년에는 영업이익 44억 원으로 이익 규모 확대. 영업이익률도 2021년 -4% 수준에서 2022년 11.8%, 2023년 14~15% 수준으로 개선되며 수익성이 크게 향상&lt;/li&gt;\n  &lt;li&gt;당기순이익: 최종 순이익 역시 2021년까지는 부진. 2020년에는 순이익을 간신히 내거나 보합 수준이었으나, 2021년 약 -4.3억 원의 당기순손실을 기록. 이후 매출이 뛰었던 2022년에는 순이익 약 16억 원으로 흑자전환했고, 2023년에도 약 14억 원 내외의 순이익을 거둔 것으로 추정. 다만 2023년의 순이익은 영업이익에 비해 낮은 편인데, 이는 양조장 인수 및 설비투자에 따른 감가상각 비용 증가와 이자비용 증가 등에 기인한다. 실제로 데일리비어의 이자비용은 2022년 약 9.8억 원에서 2023년 약 14.5억 원으로 1년 새 47% 증가하여 순이익을 일부 잠식&lt;/li&gt;\n  &lt;li&gt;재무구조: 2021년 투자유치로 자본금을 확충한 후, 양조장 인수로 자산과 부채 규모가 모두 증가. 2023년 말 기준 자본총계는 약 200억 원에 이르며, 부채비율도 이전 대비 상승. 다만 영업활동 현금흐름이 개선되고 있어 전반적인 재무 안정성은 양호한 편. 회사는 축적된 이익과 투자자금으로 설비를 확보하면서도 부채를 관리하여 성장과 안정의 균형을 추구&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;연도별-매출-추이yearrevenueyoy&quot;&gt;연도별 매출 추이(Year/Revenue/YoY):&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;2021: 101억원 +19%&lt;/li&gt;\n  &lt;li&gt;2022: 204억원\t+102%&lt;/li&gt;\n  &lt;li&gt;2023: 282억원\t+38%&lt;/li&gt;\n  &lt;li&gt;2024: 400억원(proj) +42%&lt;/li&gt;\n  &lt;li&gt;2025: 500억원(proj) +25%&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;연도별-영업이익-추이yearprofityoy&quot;&gt;연도별 영업이익 추이(Year/Profit/YoY):&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;2021: -4억원 -150% 이상 (코로나19 영향)&lt;/li&gt;\n  &lt;li&gt;2022: 24억원 +700% 이상 (수제맥주 양조장 인수, 직영점 확장 등)&lt;/li&gt;\n  &lt;li&gt;2023: 44억원 +83%&lt;/li&gt;\n  &lt;li&gt;2024: 65억원(proj) +48% (상장 추진과 브랜드 확장 전략 등)&lt;/li&gt;\n  &lt;li&gt;2025: 90억원(proj) +38%&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;인상-깊었던-구절&quot;&gt;인상 깊었던 구절&lt;/h1&gt;\n\n&lt;h3 id=&quot;사업에-실패하는-창업가들의-공통점&quot;&gt;사업에 실패하는 창업가들의 공통점&lt;/h3&gt;\n\n&lt;ol&gt;\n  &lt;li&gt;트렌드에 편승해서 성공하려는 마음&lt;/li&gt;\n  &lt;li&gt;이윤 추구를 최우선으로 하는 마음&lt;/li&gt;\n  &lt;li&gt;사업을 통해 자아실현을 하고자 하는 마음가짐&lt;/li&gt;\n  &lt;li&gt;자유를 추구하는 마음으로 사업을 시작하는 마음가짐&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h3 id=&quot;도요타의-카이젠-정신&quot;&gt;도요타의 ‘카이젠 정신’&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;‘개선’ 이라는 의미의 일본어 ‘카이젠’과 ‘정신’이 합쳐진 말&lt;/li&gt;\n  &lt;li&gt;더 나아기지 위해 현실에 안주하지 않고 끊임없이 개선에 개선을 거듭하는 경영 철학&lt;/li&gt;\n  &lt;li&gt;성공한 기업가는 산업과 소비자를 리드하기 위해 끊임없이 개선된 서비스를 선보인다. 창업가는 사업이 안정화되면 일의 일부를 적임자에게 위임하고 다음 단계로 올라가기 위해 전진해야만 한다. 창업가가 멈추면 기업이 멈추기 때문이다.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;외식업-생존&quot;&gt;외식업 생존&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;동네 음식점은 인사와 대화로 대부분의 문제를 해결할 수 있다&lt;/li&gt;\n  &lt;li&gt;사장은 내 가게를 다시 찾아준 손님을 기억하고 있다는 사실을 반드시 알려야 한다&lt;/li&gt;\n  &lt;li&gt;외식 사업을 오래 지속하려면 새로운 손님을 다시 오게 하는 것이 더 중요하다&lt;/li&gt;\n  &lt;li&gt;성공 DNA는 바로 손님에게 진정성 있게 다가가는 사장님의 마음가짐이다&lt;/li&gt;\n  &lt;li&gt;부자가 되고 싶다면 경제평론가의 책이 아닌 부자의 책을 읽어야 한다. 마찬가지로 사업에 성공하고 싶다면 성공한 사업가의 책을 읽어야 한다&lt;/li&gt;\n  &lt;li&gt;같은 비즈니스 모델로 사업을 운영해 본 경험과, 그 모델로 성공한 경험이 있는 ‘진짜 전문가’에게 조언을 받아라&lt;/li&gt;\n  &lt;li&gt;창업을 하면 대부분 빠른 성장을 추구하는데 그것보다 중요한 것이 지속적인 성장이다&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;작은-가게의-성공-법칙&quot;&gt;작은 가게의 성공 법칙&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;경쟁하지 말고 독점하라 - 제로 투 원&lt;/li&gt;\n  &lt;li&gt;더 좋기보다는 최초가 되는 편이 낫다 - 마케팅 불변의 법칙&lt;/li&gt;\n  &lt;li&gt;사업에 차별성을 부여한다는 것을 너무 어렵게만 생각할 필요는 없다. ‘경쟁하지 않는다’ 는 원칙을 세우고, ‘경쟁력’ 보다 ‘차별성’ 에 중점을 두어야 한다&lt;/li&gt;\n  &lt;li&gt;공간 브랜딩을 위해서는 무엇보다 사업의 본질, 정체성을 분명히 해야 한다. ‘무엇을 위한 공간인가?가 가장 먼저 정의되어야 한다. 생활맥주는 사업 시작부터 ‘수제 맥주를 파는 매장’이 아닌 ‘수제 맥주를 즐기는 공간’ 으로 기획되었다&lt;/li&gt;\n  &lt;li&gt;메뉴의 종류가 많아지면 구입해야 할 식재료의 종류가 많아지고, 이것은 곧 복잡한 재고 관리를 의미한다&lt;/li&gt;\n  &lt;li&gt;작게 창업해서 크게 확장하라&lt;/li&gt;\n  &lt;li&gt;작은 브랜드일수록 고비용의 유명 인플루언서 마케팅이나 PPL 보다는 매장 브랜딩과 단골 만들기에 집중해야 한다&lt;/li&gt;\n  &lt;li&gt;외생 변수로 인한 악영향을 최소화하고, 사업 포트폴리오를 확장하기 위해서는 평소의 고객이 브랜드의 어떤 점을 사랑하고, 어떤 점을 불편하게 생각하는지에 대해 지나치다 싶을 만큼 관심을 가져야 한다&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;프랜차이즈&quot;&gt;프랜차이즈&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;가맹점은 판매하는 것이 아니다. 브랜드의 동업자를 늘리는 일이다&lt;/li&gt;\n  &lt;li&gt;수익을 늘리기 위해서 질이 조금 떨어지는 제품을 대고 싶은 유혹에 빠질 수도 있다. 이렇게 되면 가맹점은 손해를 볼 것이고, 결국 그 손해는 나에게 돌아온다&lt;/li&gt;\n  &lt;li&gt;기업가 정신은 우리 생활에 꼭 필요한 사업을 통해 ‘우리의 이익’ 을 추구하는 정신이다. 또한, 새로운 사업을 개척하여 새로운 문화와 새로운 라이프 스타일, 새로운 가치와 새로운 고객을 창출해야 한다&lt;/li&gt;\n  &lt;li&gt;손님을 끌어당기는 것도 중요하지만, 더 중요한 것은 손님이 다시 오게 하는 것이다. 사업에 있어 ‘지속성’은 매우 중요한 요소다. 신규 손님으로 유지되는 대박집으로는 단골이 많은 백년식당을 넘어설 수 없다. 백년식당으로 성공하겠다 정도의 각오 없이는 음식점을 시작하지 않는 편이 낫다&lt;/li&gt;\n  &lt;li&gt;프랜차이즈 브랜드가 오래가기 위해서는 스스로 끊임없이 변화해야 한다는 것이다. 상품 개발부터 디자인 리뉴얼까지 브랜드가 끊임없이 발전해야만 오래 지속될 수 있다&lt;/li&gt;\n  &lt;li&gt;브랜드의 정체성은 고수하되 소비자와 쌍방향 소통하며 판매 전략과 서비스를 여러 형태로 변형시킨다&lt;/li&gt;\n  &lt;li&gt;프랜차이즈의 정의는 ‘본사가 가맹점에게 사업의 성공을 위해 사업 아이템, 노하우, 사업 시스템을 포함해 브랜드 사업권을 제공하고, 가맹점은 이에 대한 대가를 금전적으로 지불하는 사업 모델’ 이라고 생각한다&lt;/li&gt;\n  &lt;li&gt;백 번을 교육하는 것보다 업무를 단순화하는 것이 실수를 줄이는 데 더 효율적이기 때문이다&lt;/li&gt;\n  &lt;li&gt;Keep your eyes open. Get inspired. Don’t copy(열린 마음으로 세상을 바라보고, 영감을 얻어라. 절대 카피하지 말라) - 폴 스미스(Paul Smith)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;외식업자의-꿈&quot;&gt;외식업자의 꿈&lt;/h3&gt;\n\n&lt;p&gt;“인생이 꿈을 만드는 것이 아니다. 꿈이 인생을 만드는 것이다.”&lt;/p&gt;\n\n&lt;p&gt;메이저리그의 역사를 새롭게 쓰고 있는 현재진행형 야구 레전드인 오타니 쇼헤이의 말이다. 이 말을 떠올릴 때마다 인생을 원하는 방향으로 이끌기 위해서 꿈을 꾸는 것이 얼마나 중요한 일인지를 새삼 생각하게 된다. 하루하루 눈앞의 일을 닥치는 대로 처리하는 것만으로는 원하는 목적지에 도착하기 어렵다. 사업가로서 꿈을 이루고 싶다면 목적지를 정확히 설정하고 그 방향을 위해 현재를 움직여야 한다.&lt;/p&gt;\n\n&lt;p&gt;생활맥주를 통해 내가 이루고 싶은 꿈은 세 가지였다. ‘지속 가능한 브랜드를 만들겠다’는 것, ‘대체 불가한 플랫폼을 만들겠다’는 것 그리고 ‘글로벌 맥주 브랜드로 성공하겠다’는 것이었다. 외식 업계에서 지속 가능한 브랜드로 성공하기 위해서는 파트너와 함께 성장하는 것이 중요했고, 대체 불가한 플랫폼으로 살아남기 위해서는 독보적인 시스템이 필요했다. 그리고 글로벌 맥주 브랜드로 성공하기 위해서 끊임없이 해외 진출의 기회를 모색했다. 생활맥주를 시작한 2014년부터 나는 이 꿈을 이루기 위해 부지런하게 발품을 팔며, 지금의 생활맥주를 만들었다. 생활맥주를 시작하면서 품은 꿈이 지난 11년 동안 내 삶을 이끌었다. 만약 내가 그저 생활 맥주를 통해 부를 축적하는 데만 몰두했다면, 생활맥주는 지금 사라지고 없을지도 모른다. 생활맥주 다점포 사업자로서 매장 몇 개를 운영하는 것에 만족했을 수도 있고, 새로운 사업 아이템을 찾아 헤매고 있을 수도 있다.&lt;/p&gt;\n\n&lt;p&gt;나는 여전히 꿈꾸고 있다. 생활맥주는 이제 막 해외 진출에 발걸음을 뗀 어린아이과 같은 기업이지만, 나는 머지않아 전 세계 곳곳에서 생활맥주를 만날 수 있기를 꿈꾼다. 은퇴 후에는 전 세계를 여행하며 세계 각지의 생활맥주를 찾아다니며 개성 넘치는 맥주를 마시는 상상을 한다. 나뿐만이 아니다. 외식업을 시작하는 모든 사업가가 꿈꾸기를 바란다. 국내 외식 업계에서 가장 필요한 것은 꿈을 성취하기 위해 노력하는 기업가들이다. 나는 대한민국의 모든 외식 사업가들이 눈앞의 이익을 추구하기보다는 지속적으로 성장할 수 있는 브랜드를 만드는 꿈을 품기를 바라고, 산업에 기여할 수 있는 브랜드를 만드는 꿈을 꾸기를 바란다. 사업은 궁극적으로 소비자와 세상을 이롭게 하는 일이다. 더 많은 외식 사업가들이 사업을 통해 더 많은 사람을 행복으로 이끄는 꿈을 설계하기를 바라고, 그 꿈을 만드시 이루길 바란다. 나 역시 ‘전 세계의 맥주 문화를 이끄는 외식기업으로 성공하겠다’ 는 꿈을 이루기 위해 더 열심히 나아가고자 한다.&lt;/p&gt;\n\n            \n          ",
        "contentSnippet": "<h1 id=\"함께-하고-싶은-가게\">함께 하고 싶은 가게</h1>\n\n<p><img src=\"/images/2025/05/04/dailybeer.png\" alt=\"dailybeer\" title=\"dailybeer\" class=\"center-image\" /></p>\n\n<p>생활맥주, 이 가게에서 일 해보고 싶다.</p>\n\n<p>최근에 동료와 점심을 먹다가 이런 질문을 던졌다. “지금 하고 있는 일을 안한다면 어떤 일을 하고 싶으세요?” 이 질문을 던졌던 이유는 이 책을 읽고 나서 들었던 생각 때문이다. 책을 읽는 내내 ‘이 가게에서 일 해보고 싶다’는 생각이 들었다. 외식업 뿐만 아니라 요리에 대해서도 아는게 없는데, 정말 많은걸 배울 수 있는 환경일 것 같다는 생각과 생활맥주 브랜드의 가맹을 내고 싶다는 마음이 들었다.</p>\n\n<p>여의도 10평 가게에서 시작해서 국내 대표 수제 맥주 프랜차이즈로 자리 잡고, 지금은 글로벌 진출을 시도하고 있는 생활 맥주. 가맹 사업을 통해 수수료 장사를 취하는 수많은 프랜차이즈들과 다르게, 수십개의 직영점을 운영하면서 변화하는 외식 트렌드에 맞게 지속적인 성장을 추구하고 가맹점에게 사업의 성공을 위해 사업 아이템, 노하우 등을 제공하는 모습도 인상 깊었다. 그래서 이 브랜드가 더 잘 되어서 시장의 성장에 영향을 주고 이런 사업가들이 많이 나왔으면 좋겠다는 생각으로 이어졌다.</p>\n\n<p>이 책에서 인상 깊었던 문장 중 하나는 ‘가맹점은 판매하는 것이 아니라 브랜드의 동업자를 늘리는 일’ 이라는 말이었다. 그 말 한 줄에 사업가로서의 철학, 책임감, 그리고 동반자 의식이 모두 담겨 있다고 느꼈다. 단지 브랜드를 확장하는 데에만 집중하는 것이 아니라, 함께 성장하고 함께 살아남는 구조를 고민하는 브랜드라는 점. 만약 창업을 하게 된다면, 단순히 수익만 좇는 것이 아니라 내가 속한 업계와 사회에 어떤 가치를 남길 수 있을지를 더 깊이 고민하게 될 것 같다.</p>\n\n<p>책을 덮고 나서도 한참 동안 생각에 잠겼다. ‘지속 가능한 브랜드’, ‘대체 불가한 플랫폼’, ‘전 세계인이 즐기는 맥주 공간’. 이런 거창한 목표들이 단순히 꿈이 아니라 아주 구체적인 계획과 실행으로 이어졌다는 사실은, 내게도 ‘내 삶을 어떻게 설계할 것인가’ 에 대한 자극을 주었다.</p>\n\n<p>사실 이 책을 사기 전에 생활맥주에 가본 적이 없었다. 술을 찾아서 먹는 사람은 아닌지라;; 길 가다 간판 한 두 번 마주하는 정도였다. 그런데 내가 이 책을 읽는다고 하니 가게를 가보지도 않고 글로 배운다고 옆에서 사람들이 웃었다(듣고 보니 나도 웃겼음). 아무튼.. 책을 읽는 내내 내가 너무너무 닮고 싶은 창업가의 상과 일치해서 가슴 뛰기도 하고 배울 점도 많아서 단순히 외식업 종사자가 아니더라도 기업가 정신에 대해 알고 싶다면 이 책을 읽어보기를 추천한다. 다 읽고 맨 앞장부터 다시 훑어보는데 매장에서 사용할 수 있는 무료 쿠폰이 있는걸 발견했다! 그냥 덮었다면 몰랐을 것을.. 조금 감동했다. 책에 소개된 생활맥주 브랜드가 실제 매장에서도 느껴지는지 너무 궁금하다. 조만간 첫 고객으로서 방문할테니 기대하겠습니다!</p>\n\n<p><img src=\"/images/2025/05/04/dailybeer-coupon.png\" alt=\"dailybeer-coupon\" title=\"dailybeer-coupon\" class=\"center-image\" /></p>\n\n<hr />\n\n<h1 id=\"기업-분석\">기업 분석</h1>\n\n<ul>\n  <li>국내 수제맥주 프랜차이즈 1위 브랜드. 현재 운영사는 ㈜데일리비어. 창업주 겸 대표이사인 임상진 대표</li>\n  <li>2014년 5월. 서울 여의도에 1호점을 개점</li>\n  <li>2024년 8월. 기준 전국 약 328개의 매장 보유. 이 중 약 15%(50여개) 이상의 직영점 운영중</li>\n  <li>2021년 8월. LB인베스트먼트 등으로부터 70억 원 규모의 시리즈 A 투자유치 완료</li>\n  <li>2023년. KB증권과 코스닥 상장을 위한 대표주관 계약을 체결하여 IPO 준비중</li>\n</ul>\n\n<h3 id=\"마케팅-전략\">마케팅 전략</h3>\n\n<ul>\n  <li>상생 브랜딩과 차별화: “맥주덕후의 팬”을 자처하며, 수제맥주 문화 저변 확대에 초점을 맞춘 브랜딩. 단순히 브랜드 인지도만 높이기보다 “맥주를 사랑하는 사람들을 위해 무엇을 할 수 있을까”를 고민하며, 국내 소규모 양조장들을 발굴해 소개하는 캠페인(‘마시자! 지역맥주’ 프로젝트) 등을 진행. 지역 브루어리와의 상생이면서 브랜드만의 차별화 포인트. 또한 “맥주에 소주를 무료로 타준다”는 파격 서비스까지 도입하여 화제를 모았는데, 이 역시 독특한 고객경험 제공과 입소문 효과를 노린 전략. 브랜딩 철학은 “생활맥주는 맥주 덕후를 위해 태어난 브랜드” 라는 메시지로 일관되게 전달되었고, 수제맥주 애호가층의 충성도를 높이는 성과.</li>\n  <li>오프라인 매장 전략 (직영점+가맹점 모델): 직영점을 적극 활용하는 독특한 운영 전략. 전체 매장의 약 15~17%에 달하는 직영점을 통해 새로운 메뉴나 서비스를 먼저 테스트하고 검증한 후 가맹점에 적용. “대부분 프랜차이즈 본부는 위험을 피하기 위해 직영점을 잘 안 내지만, 우리는 본사 매출의 65%가 직영에서 나올 정도로 직접 뛰고 있다”고 언급. “본사도 창업한다”는 접근법은 가맹점주들에게 본사의 노하우 전수를 용이하게 하고, 가맹점 모집 시 신뢰도를 높이는 효과. 또한 가맹점주 교육, 운영 컨설팅, 지역 상권분석 지원 등을 체계화하여 가맹점과 본사가 함께 성장하는 구조를 지향. 이런 이유로 가맹점 평균 매출 및 낮은 폐점률 측면에서 업계 상위권을 유지하고 있다는 평가</li>\n  <li>SNS 및 디지털 마케팅: 젊은 층 공략을 위해 소셜 미디어와 콘텐츠 마케팅도 적극 활용. 공식 유튜브 채널을 개설해 맥주 상식이나 매장 브이로그를 공유하고, 인스타그램과 페이스북 등을 통해 신제품 출시 소식, 이벤트 안내, 소비자 참여형 캠페인을 전개. 예를 들어, 10주년 기념 해시태그 이벤트나 인증샷 챌린지 등을 열어 온라인 바이럴 유도. 또한 월간 뉴스레터를 통해 가맹 희망자 대상 창업 정보와 브랜드 소식을 전하고, 배달 앱 및 위치기반 앱과 제휴 프로모션도 시행하는 등 디지털 채널에서의 고객 접점을 넓힘. 이러한 멀티채널 홍보 전략으로 MZ세대 소비자들의 관심을 끌고 브랜드 충성도를 높임</li>\n</ul>\n\n<h3 id=\"5년간-재무제표20192023\">5년간 재무제표(2019~2023)</h3>\n\n<ul>\n  <li>매출액: 2019년과 2020년에는 연간 매출 약 80~90억 원대로 추정. 코로나19 확산에도 매출 규모를 비교적 잘 유지. 2021년 매출은 약 101억 원으로 소폭 증가에 그쳤으나, 전년 대비 정체된 수준. 그러나 2022년 매출 203억 원으로 전년 대비 2배 증가하며 큰 도약을 이루었고, 2023년에는 약 295억 원으로 또다시 45% 이상 급증. 이로써 5년 전과 비교하면 매출규모가 3배 이상으로 성장</li>\n  <li>영업이익: 2020년까지 비교적 안정적 이익을 내오다가, 2021년에 영업손실 -4억 원을 기록하며 일시적인 적자. 이는 사회적 거리두기로 매장 영업이 어려웠던 영향. 하지만 2022년 영업이익 24억 원으로 흑자전환에 성공했고, 2023년에는 영업이익 44억 원으로 이익 규모 확대. 영업이익률도 2021년 -4% 수준에서 2022년 11.8%, 2023년 14~15% 수준으로 개선되며 수익성이 크게 향상</li>\n  <li>당기순이익: 최종 순이익 역시 2021년까지는 부진. 2020년에는 순이익을 간신히 내거나 보합 수준이었으나, 2021년 약 -4.3억 원의 당기순손실을 기록. 이후 매출이 뛰었던 2022년에는 순이익 약 16억 원으로 흑자전환했고, 2023년에도 약 14억 원 내외의 순이익을 거둔 것으로 추정. 다만 2023년의 순이익은 영업이익에 비해 낮은 편인데, 이는 양조장 인수 및 설비투자에 따른 감가상각 비용 증가와 이자비용 증가 등에 기인한다. 실제로 데일리비어의 이자비용은 2022년 약 9.8억 원에서 2023년 약 14.5억 원으로 1년 새 47% 증가하여 순이익을 일부 잠식</li>\n  <li>재무구조: 2021년 투자유치로 자본금을 확충한 후, 양조장 인수로 자산과 부채 규모가 모두 증가. 2023년 말 기준 자본총계는 약 200억 원에 이르며, 부채비율도 이전 대비 상승. 다만 영업활동 현금흐름이 개선되고 있어 전반적인 재무 안정성은 양호한 편. 회사는 축적된 이익과 투자자금으로 설비를 확보하면서도 부채를 관리하여 성장과 안정의 균형을 추구</li>\n</ul>\n\n<h3 id=\"연도별-매출-추이yearrevenueyoy\">연도별 매출 추이(Year/Revenue/YoY):</h3>\n\n<ul>\n  <li>2021: 101억원 +19%</li>\n  <li>2022: 204억원\t+102%</li>\n  <li>2023: 282억원\t+38%</li>\n  <li>2024: 400억원(proj) +42%</li>\n  <li>2025: 500억원(proj) +25%</li>\n</ul>\n\n<h3 id=\"연도별-영업이익-추이yearprofityoy\">연도별 영업이익 추이(Year/Profit/YoY):</h3>\n\n<ul>\n  <li>2021: -4억원 -150% 이상 (코로나19 영향)</li>\n  <li>2022: 24억원 +700% 이상 (수제맥주 양조장 인수, 직영점 확장 등)</li>\n  <li>2023: 44억원 +83%</li>\n  <li>2024: 65억원(proj) +48% (상장 추진과 브랜드 확장 전략 등)</li>\n  <li>2025: 90억원(proj) +38%</li>\n</ul>\n\n<hr />\n\n<h1 id=\"인상-깊었던-구절\">인상 깊었던 구절</h1>\n\n<h3 id=\"사업에-실패하는-창업가들의-공통점\">사업에 실패하는 창업가들의 공통점</h3>\n\n<ol>\n  <li>트렌드에 편승해서 성공하려는 마음</li>\n  <li>이윤 추구를 최우선으로 하는 마음</li>\n  <li>사업을 통해 자아실현을 하고자 하는 마음가짐</li>\n  <li>자유를 추구하는 마음으로 사업을 시작하는 마음가짐</li>\n</ol>\n\n<h3 id=\"도요타의-카이젠-정신\">도요타의 ‘카이젠 정신’</h3>\n\n<ul>\n  <li>‘개선’ 이라는 의미의 일본어 ‘카이젠’과 ‘정신’이 합쳐진 말</li>\n  <li>더 나아기지 위해 현실에 안주하지 않고 끊임없이 개선에 개선을 거듭하는 경영 철학</li>\n  <li>성공한 기업가는 산업과 소비자를 리드하기 위해 끊임없이 개선된 서비스를 선보인다. 창업가는 사업이 안정화되면 일의 일부를 적임자에게 위임하고 다음 단계로 올라가기 위해 전진해야만 한다. 창업가가 멈추면 기업이 멈추기 때문이다.</li>\n</ul>\n\n<h3 id=\"외식업-생존\">외식업 생존</h3>\n\n<ul>\n  <li>동네 음식점은 인사와 대화로 대부분의 문제를 해결할 수 있다</li>\n  <li>사장은 내 가게를 다시 찾아준 손님을 기억하고 있다는 사실을 반드시 알려야 한다</li>\n  <li>외식 사업을 오래 지속하려면 새로운 손님을 다시 오게 하는 것이 더 중요하다</li>\n  <li>성공 DNA는 바로 손님에게 진정성 있게 다가가는 사장님의 마음가짐이다</li>\n  <li>부자가 되고 싶다면 경제평론가의 책이 아닌 부자의 책을 읽어야 한다. 마찬가지로 사업에 성공하고 싶다면 성공한 사업가의 책을 읽어야 한다</li>\n  <li>같은 비즈니스 모델로 사업을 운영해 본 경험과, 그 모델로 성공한 경험이 있는 ‘진짜 전문가’에게 조언을 받아라</li>\n  <li>창업을 하면 대부분 빠른 성장을 추구하는데 그것보다 중요한 것이 지속적인 성장이다</li>\n</ul>\n\n<h3 id=\"작은-가게의-성공-법칙\">작은 가게의 성공 법칙</h3>\n\n<ul>\n  <li>경쟁하지 말고 독점하라 - 제로 투 원</li>\n  <li>더 좋기보다는 최초가 되는 편이 낫다 - 마케팅 불변의 법칙</li>\n  <li>사업에 차별성을 부여한다는 것을 너무 어렵게만 생각할 필요는 없다. ‘경쟁하지 않는다’ 는 원칙을 세우고, ‘경쟁력’ 보다 ‘차별성’ 에 중점을 두어야 한다</li>\n  <li>공간 브랜딩을 위해서는 무엇보다 사업의 본질, 정체성을 분명히 해야 한다. ‘무엇을 위한 공간인가?가 가장 먼저 정의되어야 한다. 생활맥주는 사업 시작부터 ‘수제 맥주를 파는 매장’이 아닌 ‘수제 맥주를 즐기는 공간’ 으로 기획되었다</li>\n  <li>메뉴의 종류가 많아지면 구입해야 할 식재료의 종류가 많아지고, 이것은 곧 복잡한 재고 관리를 의미한다</li>\n  <li>작게 창업해서 크게 확장하라</li>\n  <li>작은 브랜드일수록 고비용의 유명 인플루언서 마케팅이나 PPL 보다는 매장 브랜딩과 단골 만들기에 집중해야 한다</li>\n  <li>외생 변수로 인한 악영향을 최소화하고, 사업 포트폴리오를 확장하기 위해서는 평소의 고객이 브랜드의 어떤 점을 사랑하고, 어떤 점을 불편하게 생각하는지에 대해 지나치다 싶을 만큼 관심을 가져야 한다</li>\n</ul>\n\n<h3 id=\"프랜차이즈\">프랜차이즈</h3>\n\n<ul>\n  <li>가맹점은 판매하는 것이 아니다. 브랜드의 동업자를 늘리는 일이다</li>\n  <li>수익을 늘리기 위해서 질이 조금 떨어지는 제품을 대고 싶은 유혹에 빠질 수도 있다. 이렇게 되면 가맹점은 손해를 볼 것이고, 결국 그 손해는 나에게 돌아온다</li>\n  <li>기업가 정신은 우리 생활에 꼭 필요한 사업을 통해 ‘우리의 이익’ 을 추구하는 정신이다. 또한, 새로운 사업을 개척하여 새로운 문화와 새로운 라이프 스타일, 새로운 가치와 새로운 고객을 창출해야 한다</li>\n  <li>손님을 끌어당기는 것도 중요하지만, 더 중요한 것은 손님이 다시 오게 하는 것이다. 사업에 있어 ‘지속성’은 매우 중요한 요소다. 신규 손님으로 유지되는 대박집으로는 단골이 많은 백년식당을 넘어설 수 없다. 백년식당으로 성공하겠다 정도의 각오 없이는 음식점을 시작하지 않는 편이 낫다</li>\n  <li>프랜차이즈 브랜드가 오래가기 위해서는 스스로 끊임없이 변화해야 한다는 것이다. 상품 개발부터 디자인 리뉴얼까지 브랜드가 끊임없이 발전해야만 오래 지속될 수 있다</li>\n  <li>브랜드의 정체성은 고수하되 소비자와 쌍방향 소통하며 판매 전략과 서비스를 여러 형태로 변형시킨다</li>\n  <li>프랜차이즈의 정의는 ‘본사가 가맹점에게 사업의 성공을 위해 사업 아이템, 노하우, 사업 시스템을 포함해 브랜드 사업권을 제공하고, 가맹점은 이에 대한 대가를 금전적으로 지불하는 사업 모델’ 이라고 생각한다</li>\n  <li>백 번을 교육하는 것보다 업무를 단순화하는 것이 실수를 줄이는 데 더 효율적이기 때문이다</li>\n  <li>Keep your eyes open. Get inspired. Don’t copy(열린 마음으로 세상을 바라보고, 영감을 얻어라. 절대 카피하지 말라) - 폴 스미스(Paul Smith)</li>\n</ul>\n\n<h3 id=\"외식업자의-꿈\">외식업자의 꿈</h3>\n\n<p>“인생이 꿈을 만드는 것이 아니다. 꿈이 인생을 만드는 것이다.”</p>\n\n<p>메이저리그의 역사를 새롭게 쓰고 있는 현재진행형 야구 레전드인 오타니 쇼헤이의 말이다. 이 말을 떠올릴 때마다 인생을 원하는 방향으로 이끌기 위해서 꿈을 꾸는 것이 얼마나 중요한 일인지를 새삼 생각하게 된다. 하루하루 눈앞의 일을 닥치는 대로 처리하는 것만으로는 원하는 목적지에 도착하기 어렵다. 사업가로서 꿈을 이루고 싶다면 목적지를 정확히 설정하고 그 방향을 위해 현재를 움직여야 한다.</p>\n\n<p>생활맥주를 통해 내가 이루고 싶은 꿈은 세 가지였다. ‘지속 가능한 브랜드를 만들겠다’는 것, ‘대체 불가한 플랫폼을 만들겠다’는 것 그리고 ‘글로벌 맥주 브랜드로 성공하겠다’는 것이었다. 외식 업계에서 지속 가능한 브랜드로 성공하기 위해서는 파트너와 함께 성장하는 것이 중요했고, 대체 불가한 플랫폼으로 살아남기 위해서는 독보적인 시스템이 필요했다. 그리고 글로벌 맥주 브랜드로 성공하기 위해서 끊임없이 해외 진출의 기회를 모색했다. 생활맥주를 시작한 2014년부터 나는 이 꿈을 이루기 위해 부지런하게 발품을 팔며, 지금의 생활맥주를 만들었다. 생활맥주를 시작하면서 품은 꿈이 지난 11년 동안 내 삶을 이끌었다. 만약 내가 그저 생활 맥주를 통해 부를 축적하는 데만 몰두했다면, 생활맥주는 지금 사라지고 없을지도 모른다. 생활맥주 다점포 사업자로서 매장 몇 개를 운영하는 것에 만족했을 수도 있고, 새로운 사업 아이템을 찾아 헤매고 있을 수도 있다.</p>\n\n<p>나는 여전히 꿈꾸고 있다. 생활맥주는 이제 막 해외 진출에 발걸음을 뗀 어린아이과 같은 기업이지만, 나는 머지않아 전 세계 곳곳에서 생활맥주를 만날 수 있기를 꿈꾼다. 은퇴 후에는 전 세계를 여행하며 세계 각지의 생활맥주를 찾아다니며 개성 넘치는 맥주를 마시는 상상을 한다. 나뿐만이 아니다. 외식업을 시작하는 모든 사업가가 꿈꾸기를 바란다. 국내 외식 업계에서 가장 필요한 것은 꿈을 성취하기 위해 노력하는 기업가들이다. 나는 대한민국의 모든 외식 사업가들이 눈앞의 이익을 추구하기보다는 지속적으로 성장할 수 있는 브랜드를 만드는 꿈을 품기를 바라고, 산업에 기여할 수 있는 브랜드를 만드는 꿈을 꾸기를 바란다. 사업은 궁극적으로 소비자와 세상을 이롭게 하는 일이다. 더 많은 외식 사업가들이 사업을 통해 더 많은 사람을 행복으로 이끄는 꿈을 설계하기를 바라고, 그 꿈을 만드시 이루길 바란다. 나 역시 ‘전 세계의 맥주 문화를 이끄는 외식기업으로 성공하겠다’ 는 꿈을 이루기 위해 더 열심히 나아가고자 한다.</p>",
        "guid": "https://sungjk.github.io/2025/05/04/dailybeer.html",
        "isoDate": "2025-05-04T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": [
      {
        "creator": "베누시안",
        "title": "[도올출사표] &quot;국민 여러분! 우리에게 남아있는 것은 최후의 결전뿐입니다&quot; [계사전 #121]",
        "link": "http://martian36.tistory.com/1638",
        "pubDate": "Tue, 6 May 2025 17:39:02 +0900",
        "author": "베누시안",
        "comments": "http://martian36.tistory.com/1638#entry1638comment",
        "content": "<p data-ke-size=\"size16\"><a href=\"https://youtu.be/iNpCpYliwvc?si=zNMc_1YSFJYhSSfr\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://youtu.be/iNpCpYliwvc?si=zNMc_1YSFJYhSSfr</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=iNpCpYliwvc\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/fFdOG/hyYRliMGIV/ab5EsSqdj4j4tTdL99JvNK/img.jpg?width=1280&amp;height=720&amp;face=496_26_960_360,https://scrap.kakaocdn.net/dn/bORUqz/hyYMUNUqYt/3kvnPkKcXrQFAKWY0zjID0/img.jpg?width=1280&amp;height=720&amp;face=496_26_960_360\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"[도올출사표] &quot;국민 여러분! 우리에게 남아있는 것은 최후의 결전뿐입니다&quot; [계사저\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/iNpCpYliwvc\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<div id=\"panels\">\n<div id=\"content\">\n<div id=\"content\">\n<div>\n<div id=\"segments-container\">\n<div>국민&nbsp;여러분&nbsp;우리에게&nbsp;남아&nbsp;있는&nbsp;것은</div>\n<div>최후의 결전뿐입니다 그동안 합리적</div>\n<div>법리적 가면 속에 숨어 있던 진짜</div>\n<div>반동 세력들이 과감하게 얼굴을</div>\n<div>드러냈습니다 왜 그랬을까요 점자는</div>\n<div>위선 속에 잘해 먹고 잘 살 사람들이</div>\n<div>왜 민낯을 들이밀었을까요</div>\n<div>첫째 그들이 전행하던 역사가 종말을</div>\n<div>고하고 있다고 느꼈기 때문입니다</div>\n<div>지새끼도 막 다른 골목에 이르면</div>\n<div>고양이를 물겠다고 덤니다 둘째 우리</div>\n<div>사회의 체제를 마음대로 주물러거리던</div>\n<div>특권 계층의 사람들이 그 특권을</div>\n<div>자의적으로 움직이지 못하는 상황이 올</div>\n<div>것 같아 총 권기해야 할 시점이라고</div>\n<div>느끼고 있기 때문입니다 한덕소는</div>\n<div>그들의 흥기의 간판이고 이재명은</div>\n<div>그들에게 멸망을 몰고 오는 사탄입니다</div>\n<div>셋째 현재이 싸움은 조선왕조 말기</div>\n<div>세도정치 잔재로부터</div>\n<div>일제식민지 반독립의 특권층 해방후</div>\n<div>이승만 정권의 반공 학살 앞재 박정희</div>\n<div>전두한 군부 독재의 만행을 등에 엎고</div>\n<div>득세해 온 세력이 마지막 진용의</div>\n<div>위험을 드러낸 만화 같은 막장</div>\n<div>드라마입니다.이 이위영의 상층부에</div>\n<div>사법부가 있습니다 대법원장이 반재명</div>\n<div>선대위원장을 자처하고 있습니다 체면이</div>\n<div>없습니다 논리도 없습니다 양심도</div>\n<div>없습니다 법리에 관행도 없습니다</div>\n<div>무조건 이재명 죽이기 오로지 그</div>\n<div>하나의 목표를 향해 모든 판례를</div>\n<div>요리하고 무화시킵니다 사법부은 이제</div>\n<div>객관적 법리의 시비를 가리는 기관이</div>\n<div>아니라 정치의 시여입니다 이들은</div>\n<div>선거기를 관리에 따르지도 않고</div>\n<div>마음대로 조작할 수 있습니다 대선</div>\n<div>후보 등록일이 지나고 나서 그 직후에</div>\n<div>곧바로 유죄 판결을 때리면 민주당은</div>\n<div>후보를 낼 수가 없습니다 그러면 모든</div>\n<div>게임은 끝납니다 대한민국 민주 시민들</div>\n<div>전체가 4개월이라는 긴 시간 동안</div>\n<div>심실히 비해지는 투쟁의 결과로 얻은</div>\n<div>민주의 승리를 멸절시키는 야비하고도</div>\n<div>파렴치한 세력이 전체 드라마를</div>\n<div>관망하면서 여유롭게 대기하고 있었던</div>\n<div>것입니다</div>\n<div>석결이 기한은 우리가 가지고 넌</div>\n<div>놀입해야 너희들은 판을 못 잃고</div>\n<div>우리는 생으로 판을 만들 수 있지</div>\n<div>우리는 창조한다 끊임없이 죄악을</div>\n<div>창조한다 민주 시민들아 너희들은</div>\n<div>우리가 창조하는 죄악 때문에 먹고</div>\n<div>살고 있는 것이란다 그걸 똑똑히</div>\n<div>직시하란 말이야</div>\n<div>국민 여러분 다시 민주의 광장으로</div>\n<div>나갑시다 유일한 해결책은 의회에서고</div>\n<div>판사를 탄핵하여 직무을 정지시키고</div>\n<div>필요하다면 더 나아가 대법원 전체를</div>\n<div>탄핵하여 대법원을 근원적으로</div>\n<div>무기력하게 만드는 것입니다 이제</div>\n<div>새로운 정권이 수립되어야만 하는</div>\n<div>확실한 이유가 생겼습니다 유교 국가의</div>\n<div>윤리 의식으로서 우리 민중은 사법부를</div>\n<div>전중해 왔습니다 그러나 이제는</div>\n<div>사법부의</div>\n<div>대개혁만이 우리를 기다리고 있습니다</div>\n<div>여태까지 검찰에만 돌렸던 시선을</div>\n<div>사법부로 돌려야 합니다 전관 예후가</div>\n<div>도대체 뭔 말입니까 그들에겐</div>\n<div>100억이 100억이</div>\n<div>떡값이에요 국민 여러분 우리는 최후의</div>\n<div>일전에</div>\n<div>돌입했습니다.이 민족의 오랫동안</div>\n<div>누적된 수건을 풀어야 합니다 일제</div>\n<div>식민주의 폐습이 고스란이 사법부에</div>\n<div>전승되어 있습니다 이제 전쟁입니다</div>\n<div>마지막 강습 돌파만 남았습니다</div>\n<div>대한민국 만세 민주시민 만세 사법부</div>\n<div>혁파 만세 강습돌파</div>\n<div>민주쟁 만세 만만세</div>\n</div>\n</div>\n<div id=\"footer\">\n<div id=\"menu\">\n<div id=\"trigger\">\n<div id=\"label-text\" style=\"color: #0f0f0f;\">한국어 (자동 생성됨)</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div id=\"related\">\n<div id=\"player-ads\">&nbsp;</div>\n<div id=\"items\">\n<div id=\"content\">\n<div id=\"container\">\n<div id=\"right-arrow\">\n<div id=\"right-arrow-button\">\n<div style=\"background-color: #ffffff; color: #0f0f0f; text-align: center;\" aria-hidden=\"true\">\n<div>&nbsp;</div>\n</div>\n<div aria-hidden=\"true\">&nbsp;</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>",
        "contentSnippet": "https://youtu.be/iNpCpYliwvc?si=zNMc_1YSFJYhSSfr\n\n\n\n \n국민 여러분 우리에게 남아 있는 것은\n최후의 결전뿐입니다 그동안 합리적\n법리적 가면 속에 숨어 있던 진짜\n반동 세력들이 과감하게 얼굴을\n드러냈습니다 왜 그랬을까요 점자는\n위선 속에 잘해 먹고 잘 살 사람들이\n왜 민낯을 들이밀었을까요\n첫째 그들이 전행하던 역사가 종말을\n고하고 있다고 느꼈기 때문입니다\n지새끼도 막 다른 골목에 이르면\n고양이를 물겠다고 덤니다 둘째 우리\n사회의 체제를 마음대로 주물러거리던\n특권 계층의 사람들이 그 특권을\n자의적으로 움직이지 못하는 상황이 올\n것 같아 총 권기해야 할 시점이라고\n느끼고 있기 때문입니다 한덕소는\n그들의 흥기의 간판이고 이재명은\n그들에게 멸망을 몰고 오는 사탄입니다\n셋째 현재이 싸움은 조선왕조 말기\n세도정치 잔재로부터\n일제식민지 반독립의 특권층 해방후\n이승만 정권의 반공 학살 앞재 박정희\n전두한 군부 독재의 만행을 등에 엎고\n득세해 온 세력이 마지막 진용의\n위험을 드러낸 만화 같은 막장\n드라마입니다.이 이위영의 상층부에\n사법부가 있습니다 대법원장이 반재명\n선대위원장을 자처하고 있습니다 체면이\n없습니다 논리도 없습니다 양심도\n없습니다 법리에 관행도 없습니다\n무조건 이재명 죽이기 오로지 그\n하나의 목표를 향해 모든 판례를\n요리하고 무화시킵니다 사법부은 이제\n객관적 법리의 시비를 가리는 기관이\n아니라 정치의 시여입니다 이들은\n선거기를 관리에 따르지도 않고\n마음대로 조작할 수 있습니다 대선\n후보 등록일이 지나고 나서 그 직후에\n곧바로 유죄 판결을 때리면 민주당은\n후보를 낼 수가 없습니다 그러면 모든\n게임은 끝납니다 대한민국 민주 시민들\n전체가 4개월이라는 긴 시간 동안\n심실히 비해지는 투쟁의 결과로 얻은\n민주의 승리를 멸절시키는 야비하고도\n파렴치한 세력이 전체 드라마를\n관망하면서 여유롭게 대기하고 있었던\n것입니다\n석결이 기한은 우리가 가지고 넌\n놀입해야 너희들은 판을 못 잃고\n우리는 생으로 판을 만들 수 있지\n우리는 창조한다 끊임없이 죄악을\n창조한다 민주 시민들아 너희들은\n우리가 창조하는 죄악 때문에 먹고\n살고 있는 것이란다 그걸 똑똑히\n직시하란 말이야\n국민 여러분 다시 민주의 광장으로\n나갑시다 유일한 해결책은 의회에서고\n판사를 탄핵하여 직무을 정지시키고\n필요하다면 더 나아가 대법원 전체를\n탄핵하여 대법원을 근원적으로\n무기력하게 만드는 것입니다 이제\n새로운 정권이 수립되어야만 하는\n확실한 이유가 생겼습니다 유교 국가의\n윤리 의식으로서 우리 민중은 사법부를\n전중해 왔습니다 그러나 이제는\n사법부의\n대개혁만이 우리를 기다리고 있습니다\n여태까지 검찰에만 돌렸던 시선을\n사법부로 돌려야 합니다 전관 예후가\n도대체 뭔 말입니까 그들에겐\n100억이 100억이\n떡값이에요 국민 여러분 우리는 최후의\n일전에\n돌입했습니다.이 민족의 오랫동안\n누적된 수건을 풀어야 합니다 일제\n식민주의 폐습이 고스란이 사법부에\n전승되어 있습니다 이제 전쟁입니다\n마지막 강습 돌파만 남았습니다\n대한민국 만세 민주시민 만세 사법부\n혁파 만세 강습돌파\n민주쟁 만세 만만세\n한국어 (자동 생성됨)",
        "guid": "http://martian36.tistory.com/1638",
        "isoDate": "2025-05-06T08:39:02.000Z"
      }
    ]
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Lael's World",
    "category": "개인",
    "posts": [
      {
        "creator": "HYEONG HWAN, MUN",
        "title": "전통적인 세션 ID 기반 인증과 JWT(Json Web Token) 기반 인증 비교",
        "link": "https://blog.lael.be/post/12495",
        "pubDate": "Fri, 09 May 2025 21:04:35 +0000",
        "dc:creator": "HYEONG HWAN, MUN",
        "comments": "https://blog.lael.be/post/12495#respond",
        "content": "로그인 세션 관리에서 전통적인 세션 ID 기반 인증과 JWT(Json Web Token) 기반 인증은 가장 많이 사용되는 두 가지 방식입니다. 아래는 이 둘의 차이점과 장단점을 비교한 표입니다: 항목 세션 ID 기반 인증 JWT 기반 인증 인증 방식 서버가 세션 ID를 생성하고 클라이언트에 전달 (주로 쿠키에 저장) 서버가 JWT를 생성하고 클라이언트에 전달 (주로 헤더나 로컬스토리지/쿠키에 저장) 서버 저장소 필요 필요 (서버에 세션 저장) 불필요 (토큰 자체에 정보 포함) 확장성 낮음 (세션 저장소 공유 필요) 높음 (무상태 Stateless 구조) 보안성 세션 탈취 위험, 하지만 서버에서 세션 무효화 가능 탈취 시 만료 전까지 유효, 무효화 어려움 (추가 로직 필요) 토큰 크기 작음 (세션 ID) 큼 (Base64 인코딩된 JSON) 무효화 처리 서버에서 세션 삭제 보통 불가능, 블랙리스트 관리 등 별도 구현 필요 관리 편의성 서버가&#8230;",
        "contentSnippet": "로그인 세션 관리에서 전통적인 세션 ID 기반 인증과 JWT(Json Web Token) 기반 인증은 가장 많이 사용되는 두 가지 방식입니다. 아래는 이 둘의 차이점과 장단점을 비교한 표입니다: 항목 세션 ID 기반 인증 JWT 기반 인증 인증 방식 서버가 세션 ID를 생성하고 클라이언트에 전달 (주로 쿠키에 저장) 서버가 JWT를 생성하고 클라이언트에 전달 (주로 헤더나 로컬스토리지/쿠키에 저장) 서버 저장소 필요 필요 (서버에 세션 저장) 불필요 (토큰 자체에 정보 포함) 확장성 낮음 (세션 저장소 공유 필요) 높음 (무상태 Stateless 구조) 보안성 세션 탈취 위험, 하지만 서버에서 세션 무효화 가능 탈취 시 만료 전까지 유효, 무효화 어려움 (추가 로직 필요) 토큰 크기 작음 (세션 ID) 큼 (Base64 인코딩된 JSON) 무효화 처리 서버에서 세션 삭제 보통 불가능, 블랙리스트 관리 등 별도 구현 필요 관리 편의성 서버가…",
        "guid": "https://blog.lael.be/?p=12495",
        "categories": [
          "미분류"
        ],
        "isoDate": "2025-05-09T21:04:35.000Z"
      }
    ]
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "바이브 코딩 도구  V0, Replit, Cursor 비교 분석",
        "link": "http://muzbox.tistory.com/483582",
        "pubDate": "Fri, 9 May 2025 09:33:09 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483582#entry483582comment",
        "content": "<p data-ke-size=\"size16\">코딩을 몰라도 앱을 만들 수 있는 바이브 코딩의 세계! V0, Replit, Cursor의 장단점과 가격을 비교해 보고, 나에게 딱 맞는 AI 코딩 도구를 찾아보세요. 생산성이 두 배로 올라가는 개발의 미래를 경험해보세요!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"바이브 코딩 3종 비교.jpg\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/bVuyjd/btsNQo6lN1Z/mmFr6am4TQYSzxriK0xCX0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bVuyjd/btsNQo6lN1Z/mmFr6am4TQYSzxriK0xCX0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bVuyjd/btsNQo6lN1Z/mmFr6am4TQYSzxriK0xCX0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbVuyjd%2FbtsNQo6lN1Z%2FmmFr6am4TQYSzxriK0xCX0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"바이브 코딩 도구 V0, Replit, Cursor 비교 분석\" loading=\"lazy\" width=\"1280\" height=\"853\" data-filename=\"바이브 코딩 3종 비교.jpg\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">아이디어만 주면 코드를 만들어주는 바이브 코딩 세계, 여러분은 어떤 도구를 사용하고 계신가요? 요즘 개발 세계에서 가장 핫한 주제 중 하나가 바로 이 '바이브 코딩'인데, 저도 최근에 이 매력에 푹 빠져 있어요. 코드 몇 줄 쓰려면 머리가 지끈거렸던 과거와 달리, 이제는 그냥 \"로그인 화면 만들어줘\"라고 말하면 뚝딱 만들어주니... 이게 4차 산업혁명인가 싶더라고요.  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">근데 문제는 V0, Replit, Cursor 등 너무 많은 도구들이 우후죽순 생겨나서 도대체 뭘 써야 할지 모르겠더라고요. 여러분도 그러신가요? \"이거 쓰면 저거 못 쓰는데...\", \"이 기능은 좋은데 저 기능은 없고...\" 이런 고민 많이 하셨을 것 같아요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그래서 오늘은 제가 직접 이 세 가지 바이브 코딩 도구를 비교해봤습니다. 어떤 도구가 내 스타일과 목적에 딱 맞는지 함께 알아보도록 해요! 개발자든 아니든, 이 글 읽고 나면 무슨 도구 써야 할지 감이 확 올 거예요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>V0, Replit, Cursor - 이게 뭐가 다른 거죠?  </b></span></h2>\n<p data-ke-size=\"size16\">일단 세 도구가 어떤 특징을 가지고 있는지 한눈에 비교해볼게요.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin-bottom: 20px;\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr style=\"background-color: #4a89dc; color: white; text-align: center;\">\n<th style=\"padding: 10px; border: 1px solid #ddd;\">도구</th>\n<th style=\"padding: 10px; border: 1px solid #ddd;\">주요 기능</th>\n<th style=\"padding: 10px; border: 1px solid #ddd;\">사용 편의성</th>\n<th style=\"padding: 10px; border: 1px solid #ddd;\">대상 사용자</th>\n<th style=\"padding: 10px; border: 1px solid #ddd;\">강점</th>\n<th style=\"padding: 10px; border: 1px solid #ddd;\">약점</th>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 10px; border: 1px solid #ddd; font-weight: bold;\">V0</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">프롬프트로 앱 구현, 코드 없이 결과물 생성</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">비개발자도 쉽게 사용 가능</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">비개발자, 초보 개발자</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">코드 작성 없이 빠른 앱 생성</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">고급 개발이나 세부 수정에 제한적</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd; font-weight: bold;\">Replit</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">아이디어부터 배포까지, 실시간 피드백 반영</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">즉시 개발 환경, 빠른 배포</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">개발자, 스타트업</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">기획&rarr;배포 30분 내 가능, 사용자 피드백 반영</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">복잡한 기능 추가 시 한계</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 10px; border: 1px solid #ddd; font-weight: bold;\">Cursor</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">AI 통합 코드 편집기, 자연어 코드 생성, 오류 감지</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">VS Code 기반 친숙함</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">초중급 개발자, 전문가</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">코드 품질 향상, 생산성 증가</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">대규모 프로젝트 성능 저하, 기능 제한</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">바이브 코딩은 AI를 활용해 자연어로 아이디어나 감성을 전달하면 코드나 앱을 생성해주는 새로운 개발 방식입니다. 근데 각 도구마다 초점을 두는 부분이 달라요. 자세히 살펴볼까요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>V0: 코드 몰라도 앱 만들 수 있어요!  </b></span></h2>\n<p data-ke-size=\"size16\">V0는 앱 빌더로, 코드에 대한 깊은 이해 없이 프롬프트와 이미지만으로 완전한 앱을 구현할 수 있는 도구입니다. 예를 들어, PRD(제품 요구사항 문서)와 와이어프레임 이미지를 제공하고 간단한 지시문(\"Please implement this. Use the attached image for a style reference\")만으로 앱을 만들 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">진짜 놀라운 점은 비개발자나 초보자를 대상으로 설계되어 코드 작성 과정을 최소화하고 결과물에 집중할 수 있도록 돕습니다. 사용이 매우 직관적이며, 기술적 배경이 없어도 접근 가능합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1136\" data-origin-height=\"671\"><span data-url=\"https://blog.kakaocdn.net/dn/8sJZm/btsNPgH7m2s/fxqHIQAJJeBypTbIK5DOkK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/8sJZm/btsNPgH7m2s/fxqHIQAJJeBypTbIK5DOkK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/8sJZm/btsNPgH7m2s/fxqHIQAJJeBypTbIK5DOkK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F8sJZm%2FbtsNPgH7m2s%2FfxqHIQAJJeBypTbIK5DOkK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"V0 코드 몰라도 앱 만들 수 있어요!\" loading=\"lazy\" width=\"1136\" height=\"671\" data-origin-width=\"1136\" data-origin-height=\"671\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">제가 처음 V0를 써봤을 때 정말 놀랐어요. \"반응형 뉴스레터 구독 폼 만들어줘. 파란색 테마로!\"라고 입력했더니 진짜 그대로 뚝딱 만들어 주더라고요. 코드 한 줄 안 쓰고요! 디자이너가 와이어프레임 그려놓으면 바로 실제 앱으로 변신시킬 수 있으니, 제작 과정이 엄청 빨라져요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">강점은 빠르고 간단하게 앱을 생성할 수 있다는 점이며, 약점으로는 고급 개발이나 세부적인 코드 수정이 필요한 경우 제한적일 가능성이 있습니다. 뭐랄까... 속도는 엄청 빠른데, 맞춤형 수정이 필요하면 좀 답답할 수 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">V0가 가장 빛나는 순간은 역시 프로토타입을 빠르게 만들어야 할 때예요. 클라이언트에게 \"이런 느낌이에요\" 하고 보여줄 결과물이 필요하다면, V0는 정말 최고의 선택이 될 거예요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>Replit: 아이디어부터 배포까지 한방에!  </b></span></h2>\n<p data-ke-size=\"size16\">Replit Agent는 아이디어 구상부터 MVP(최소 기능 제품) 개발, 배포, 그리고 실제 사용자 피드백 반영까지의 과정을 빠르게 진행할 수 있는 도구입니다. 예를 들어, 글쓰기 서비스를 30분 만에 만들고 사용자 테스트까지 완료한 사례가 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이게 진짜 대단한 게, 즉시 사용 가능한 개발 환경과 ChatGPT의 신속한 코드 생성 및 문제 해결 기능을 제공하며, 복잡한 서버 설정 없이 배포가 가능합니다. 주로 개발자, 스타트업, 또는 빠른 프로토타이핑을 원하는 사용자에게 적합합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1285\" data-origin-height=\"720\"><span data-url=\"https://blog.kakaocdn.net/dn/9FoYl/btsNQ2obf99/FGdL8DJnrRcYvlqz3qV8Uk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/9FoYl/btsNQ2obf99/FGdL8DJnrRcYvlqz3qV8Uk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/9FoYl/btsNQ2obf99/FGdL8DJnrRcYvlqz3qV8Uk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F9FoYl%2FbtsNQ2obf99%2FFGdL8DJnrRcYvlqz3qV8Uk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Replit 아이디어부터 배포까지 한방에\" loading=\"lazy\" width=\"1285\" height=\"720\" data-origin-width=\"1285\" data-origin-height=\"720\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;제가 Replit로 유튜브 강의 매니저를 만들어봤는데요, V0보다는 좀 더 개발자스러운 환경이지만 그래도 놀랍도록 빠르게 작업할 수 있었어요. 특히 좋았던 건 백엔드와 프론트엔드를 한 환경에서 다 만들 수 있다는 점이었어요. 백엔드 개발자랑 따로 소통할 필요 없이 혼자서 풀스택 개발이 가능했죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">강점은 기획부터 배포까지의 속도(30분 내 가능)와 실시간 피드백 반영이 용이하다는 점입니다. 약점으로는 모든 사용자 피드백을 즉시 반영하기 어려운 점과 복잡한 기능 추가 시 한계가 있을 수 있다는 점이 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Replit가 가장 빛나는 순간은 스타트업처럼 빠르게 아이디어를 검증하고 싶을 때예요. 생각난 아이디어를 그날 바로 앱으로 만들어서 친구들에게 써보라고 할 수 있으니까요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>Cursor: 코드의 품질과 생산성을 한 단계 올려줘요! ⚡</b></span></h2>\n<p data-ke-size=\"size16\">Cursor는 Visual Studio Code를 기반으로 한 AI 통합 코드 편집기로, 코드 자동 완성, 자연어를 통한 코드 생성, 실시간 오류 감지 및 수정, 자동 리팩토링 등의 기능을 제공합니다. AI 챗봇을 통해 코드 설명이나 질문을 주고받을 수 있으며, 개발 생산성을 크게 높여줍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">다른 두 도구와 달리 VS Code의 친숙한 인터페이스를 유지하며, 초중급 개발자 및 전문 개발자에게 적합합니다. 비개발자보다는 어느 정도 코딩 지식이 있는 사용자를 대상으로 하며, 코드 품질 향상과 학습 지원(모범 사례 제안 등)에 강점이 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"3840\" data-origin-height=\"2129\"><span data-url=\"https://blog.kakaocdn.net/dn/TSBT5/btsNQPWYzkr/iLA8wbUc3d89GzLFaB9UP0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/TSBT5/btsNQPWYzkr/iLA8wbUc3d89GzLFaB9UP0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/TSBT5/btsNQPWYzkr/iLA8wbUc3d89GzLFaB9UP0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FTSBT5%2FbtsNQPWYzkr%2FiLA8wbUc3d89GzLFaB9UP0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Cursor: 코드의 품질과 생산성을 한 단계 올려줘요!\" loading=\"lazy\" width=\"3840\" height=\"2129\" data-origin-width=\"3840\" data-origin-height=\"2129\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;솔직히 말해서 처음 Cursor 써봤을 때는 \"이게 뭐가 그리 대단해?\" 싶었는데, 1주일만 써보니 코드 생산성이 진짜 두 배는 늘더라고요. 특히 좋았던 건 코드를 작성하다가 \"이 부분 최적화해줘\" 같은 자연어 명령을 내리면 AI가 즉시 코드를 개선해준다는 점이었어요. 버그 찾는 시간도 확 줄었고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">강점은 코드 생산 속도와 품질 향상, 코드베이스 인덱싱을 통한 맞춤형 추천 기능입니다. 약점으로는 대규모 프로젝트나 여러 프로젝트 인덱싱 시 성능 저하, 일부 기능(예: import 경로 오류)에서 제한이 있다는 점이 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Cursor가 빛나는 순간은 역시 큰 프로젝트를 효율적으로 관리하고 싶을 때예요. 기존 코드베이스를 분석해서 새 코드를 생성하거나 버그를 잡아내는 능력이 정말 대단하거든요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>각 도구별 가격 정책 비교  </b></span></h2>\n<p data-ke-size=\"size16\">아무리 좋은 도구라도 가격이 중요하잖아요. 각 도구별 가격 정책을 살펴볼게요.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin-bottom: 20px;\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr style=\"background-color: #4a89dc; color: white; text-align: center;\">\n<th style=\"padding: 10px; border: 1px solid #ddd;\">도구</th>\n<th style=\"padding: 10px; border: 1px solid #ddd;\">무료 플랜</th>\n<th style=\"padding: 10px; border: 1px solid #ddd;\">유료 플랜</th>\n<th style=\"padding: 10px; border: 1px solid #ddd;\">주요 특징</th>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 10px; border: 1px solid #ddd; font-weight: bold;\">V0</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">월 200 크레딧</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">프리미엄: 월 $20, 5000 크레딧</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">추가 크레딧 구매 가능</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd; font-weight: bold;\">Replit</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">Starter: 무료, 제한적 기능</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">Core: 월 $20-25, Teams: 월 $40/인</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">Core는 월 $25 크레딧 포함</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 10px; border: 1px solid #ddd; font-weight: bold;\">Cursor</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">2000회 코드 완성, 제한적 요청</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">Pro: 월 $20, Business: 월 $40/인</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">Pro는 500회 빠른 프리미엄 요청 제공</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">V0는 무료 플랜으로 월 200 크레딧을 제공하며, 기본적인 UI 컴포넌트 생성 및 사용이 가능합니다. 프리미엄 플랜은 월 $20에 5000 크레딧을 제공하며, 더 많은 생성 작업을 지원합니다. 추가 크레딧 구매 옵션도 존재하며, $10에 1250 크레딧, $30에 4000 크레딧, $50에 7750 크레딧을 구매할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Replit의 Starter 플랜은 무료로 제공되며, 기본 기능과 3개의 프로젝트, 제한적인 AI 기능(Replit Agent)을 사용할 수 있습니다. Replit Core 플랜은 연간 결제 시 월 $20, 월별 결제 시 $25로, 무제한 프로젝트와 $25 크레딧(약 100개의 Agent 체크포인트)을 제공합니다. Teams 플랜은 사용자당 월 $40로, $40 크레딧과 팀 협업 기능을 포함합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Cursor의 Hobby 플랜은 무료로 제공되며, 2000회 코드 완성, 50회 느린 프리미엄 모델 요청, 14일 Pro 체험 기간을 포함합니다. Pro 플랜은 월 $20로, 500회 빠른 프리미엄 요청(GPT-4 등), 무제한 느린 요청, 무제한 코드 완성을 제공합니다. Business 플랜은 사용자당 월 $40로, Pro 플랜의 기능 외에 중앙 집중식 결제와 개인정보 보호 모드 강제 적용 등의 기업向け 기능을 추가합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">가격만 보면 셋 다 비슷해 보이지만, 실제 사용해보면 체감이 달라요. V0는 간단한 프로젝트만 할 거라면 무료 크레딧으로도 괜찮지만, 자주 쓰려면 결국 유료 플랜이 필요해요. Replit은 초기에는 무료로 시작하기 좋지만, 배포와 AI 기능을 많이 쓸수록 크레딧이 빨리 소진돼요. Cursor는 무료 플랜의 제한이 커서 진짜 활용하려면 Pro 플랜은 필수인 것 같아요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>어떤 도구가 나에게 맞을까?  </b></span></h2>\n<p data-ke-size=\"size16\">이제 중요한 질문이죠. 내게 맞는 도구는 뭘까요? 간단히 정리해볼게요:</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">V0가 딱인 경우:</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>코딩을 잘 모르지만 앱이나 웹사이트를 만들고 싶은 비개발자</li>\n<li>UI/UX 디자이너가 프로토타입을 빠르게 만들어야 할 때</li>\n<li>코드 작성 없이 빠른 결과물이 필요한 경우</li>\n</ul>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">Replit이 딱인 경우:</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>아이디어부터 배포까지 빠르게 진행하고 싶은 스타트업</li>\n<li>풀스택 개발을 혼자서 처리해야 하는 개발자</li>\n<li>실시간 사용자 피드백을 반영하며 제품을 발전시키고 싶을 때</li>\n</ul>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">Cursor가 딱인 경우:</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>코드 품질과 생산성을 동시에 높이고 싶은 전문 개발자</li>\n<li>기존 코드베이스를 분석하고 개선해야 하는 경우</li>\n<li>VS Code에 익숙한 개발자가 AI 기능을 추가하고 싶을 때</li>\n</ul>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1027\" data-origin-height=\"686\"><span data-url=\"https://blog.kakaocdn.net/dn/rTkAe/btsNRij2pvu/L37fWrqbEGE0bu3kBbQQ7K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/rTkAe/btsNRij2pvu/L37fWrqbEGE0bu3kBbQQ7K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/rTkAe/btsNRij2pvu/L37fWrqbEGE0bu3kBbQQ7K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FrTkAe%2FbtsNRij2pvu%2FL37fWrqbEGE0bu3kBbQQ7K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"바이브 코딩 도구 비교 V0 vs Replit vs Cursor\" loading=\"lazy\" width=\"1027\" height=\"686\" data-origin-width=\"1027\" data-origin-height=\"686\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;V0는 비개발자나 초보자에게 적합하며 코드 없이 빠른 결과물을 원할 때 유용합니다. Replit Agent는 빠른 프로토타이핑과 사용자 피드백 반영이 필요한 스타트업이나 개발자에게 적합하며, Cursor는 코드 품질과 생산성을 중시하는 초중급 이상의 개발자에게 최적화되어 있습니다. 사용 목적과 기술 수준에 따라 적합한 도구를 선택하는 것이 중요합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>Replit의 특별한 기능: Autoscale  </b></span></h2>\n<p data-ke-size=\"size16\">Replit의 핵심 기능 중 하나인 Autoscale에 대해 추가로 알아볼까요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Autoscale Deployments는 앱의 네트워크 트래픽과 작업 부하에 따라 클라우드 리소스를 자동으로 확장하거나 축소합니다. 트래픽이 많을 때는 서버를 추가하여 부하를 관리하고, 앱이 유휴 상태일 때는 서버 수를 0까지 줄여 비용을 절감합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1188\" data-origin-height=\"717\"><span data-url=\"https://blog.kakaocdn.net/dn/bUvl4h/btsNQqb2lcP/AbwIzPePrqECKhJKnFiP3K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bUvl4h/btsNQqb2lcP/AbwIzPePrqECKhJKnFiP3K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bUvl4h/btsNQqb2lcP/AbwIzPePrqECKhJKnFiP3K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbUvl4h%2FbtsNQqb2lcP%2FAbwIzPePrqECKhJKnFiP3K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Replit의 Autoscale\" loading=\"lazy\" width=\"1188\" height=\"717\" data-origin-width=\"1188\" data-origin-height=\"717\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;이게 왜 중요하냐면, Autoscale는 전자상거래 사이트나 API 서비스와 같이 트래픽이 변동하는 웹 애플리케이션에 이상적입니다. 예를 들어, 타이핑 속도 평가 앱과 같은 경우, 사용자가 많을 때 리소스를 늘리고 사용이 적을 때 줄이는 방식으로 효율적으로 운영할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">개인적으로 이 기능 때문에 Replit을 더 많이 쓰게 됐어요. 제가 만든 웹서비스가 가끔 트래픽이 폭증할 때가 있는데, Autoscale 덕분에 서버 터질 걱정 없이 안정적으로 운영할 수 있었거든요. 게다가 평소엔 비용도 거의 안 들고요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>V0 vs Cursor: 프론트엔드 vs 풀스택  </b></span></h2>\n<p data-ke-size=\"size16\">V0와 Cursor를 좀 더 자세히 비교해볼까요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">V0는 주로 프론트엔드 개발에 특화된 도구로, 자연어를 통해 UI 컴포넌트를 빠르게 생성하는 데 중점을 둡니다. 사용자가 원하는 UI를 자연어로 설명하거나 간단한 프롬프트로 요청하면, V0는 Tailwind CSS와 같은 현대적인 스타일링을 적용한 UI 컴포넌트를 생성합니다. 예를 들어, \"로그인 인터페이스를 만들어줘\"라고 입력하면 시각적으로 완성도 높은 UI를 제공합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">반면, Cursor는 코드 자동 완성, 자연어를 통한 코드 생성, 자동 리팩토링, 실시간 오류 감지 및 수정, 코드 설명 기능을 제공합니다. 백엔드, 테스트, 서버 작업 등 다양한 개발 영역을 지원하며, 데이터베이스부터 프론트엔드까지 전체 스택을 다룰 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">가장 큰 차이점은 V0는 UI 중심의 빠른 프로토타이핑이 필요한 비개발자나 디자이너에게 적합하며, Cursor AI는 코드 품질과 전체 스택 개발을 중시하는 개발자에게 더 유용합니다. 사용 목적과 기술 수준에 따라 두 도구 중 적합한 것을 선택하는 것이 중요합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>결론: 나만의 바이브 코딩 도구 찾기  </b></span></h2>\n<p data-ke-size=\"size16\">바이브 코딩 도구 셋 다 훌륭하지만, 각자의 필요와 상황에 맞게 선택하는 게 중요해요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">제 경우는 다양한 프로젝트에 세 도구를 모두 사용하고 있어요. 간단한 UI 프로토타입은 V0로 빠르게 만들고, 풀스택 앱 개발은 Replit으로, 그리고 대규모 프로젝트나 코드 최적화가 필요할 때는 Cursor를 활용하고 있죠. 뭐랄까... 도구는 많을수록 좋은 것 같아요!  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여러분은 어떤 바이브 코딩 도구를 써보고 싶으신가요? 아니면 이미 써보셨다면, 어떤 경험이 있으셨나요? 댓글로 여러분의 경험을 공유해주세요. 다른 분들에게도 큰 도움이 될 거예요!</p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>자주 묻는 질문</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q: 비개발자도 바이브 코딩 도구를 쉽게 사용할 수 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 네, 특히 V0는 코딩 지식 없이도 쉽게 사용할 수 있도록 설계되었습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 무료 플랜만으로도 충분히 사용할 수 있을까요?</b></p>\n<p data-ke-size=\"size16\">A: 취미나 학습용으로는 무료 플랜으로 충분하지만, 본격적인 프로젝트나 상업적 용도로는 유료 플랜을 고려하는 것이 좋습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 바이브 코딩 도구가 개발자의 일자리를 대체할까요?</b></p>\n<p data-ke-size=\"size16\">A: 완전히 대체하기보다는 개발자의 생산성을 높이고 반복적인 작업을 줄여주는 보조 도구로 볼 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 이 도구들로 만든 코드의 품질은 어떤가요?</b></p>\n<p data-ke-size=\"size16\">A: 기본적인 기능은 훌륭하지만, 복잡한 로직이나 최적화가 필요한 부분은 개발자의 검토와 수정이 필요할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 한국어로도 프롬프트 입력이 가능한가요?</b></p>\n<p data-ke-size=\"size16\">A: 네, 세 도구 모두 한국어 프롬프트를 지원하지만, 영어로 입력했을 때 더 정확한 결과를 얻을 수 있는 경우가 많습니다.<b></b></p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"비개발자도 바이브 코딩 도구를 쉽게 사용할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"네, 특히 V0는 코딩 지식 없이도 쉽게 사용할 수 있도록 설계되었습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"무료 플랜만으로도 충분히 사용할 수 있을까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"취미나 학습용으로는 무료 플랜으로 충분하지만, 본격적인 프로젝트나 상업적 용도로는 유료 플랜을 고려하는 것이 좋습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"바이브 코딩 도구가 개발자의 일자리를 대체할까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"완전히 대체하기보다는 개발자의 생산성</script>",
        "contentSnippet": "코딩을 몰라도 앱을 만들 수 있는 바이브 코딩의 세계! V0, Replit, Cursor의 장단점과 가격을 비교해 보고, 나에게 딱 맞는 AI 코딩 도구를 찾아보세요. 생산성이 두 배로 올라가는 개발의 미래를 경험해보세요!\n\n\n \n아이디어만 주면 코드를 만들어주는 바이브 코딩 세계, 여러분은 어떤 도구를 사용하고 계신가요? 요즘 개발 세계에서 가장 핫한 주제 중 하나가 바로 이 '바이브 코딩'인데, 저도 최근에 이 매력에 푹 빠져 있어요. 코드 몇 줄 쓰려면 머리가 지끈거렸던 과거와 달리, 이제는 그냥 \"로그인 화면 만들어줘\"라고 말하면 뚝딱 만들어주니... 이게 4차 산업혁명인가 싶더라고요.  \n \n근데 문제는 V0, Replit, Cursor 등 너무 많은 도구들이 우후죽순 생겨나서 도대체 뭘 써야 할지 모르겠더라고요. 여러분도 그러신가요? \"이거 쓰면 저거 못 쓰는데...\", \"이 기능은 좋은데 저 기능은 없고...\" 이런 고민 많이 하셨을 것 같아요.\n \n그래서 오늘은 제가 직접 이 세 가지 바이브 코딩 도구를 비교해봤습니다. 어떤 도구가 내 스타일과 목적에 딱 맞는지 함께 알아보도록 해요! 개발자든 아니든, 이 글 읽고 나면 무슨 도구 써야 할지 감이 확 올 거예요.\n \nV0, Replit, Cursor - 이게 뭐가 다른 거죠?  \n일단 세 도구가 어떤 특징을 가지고 있는지 한눈에 비교해볼게요.\n도구\n주요 기능\n사용 편의성\n대상 사용자\n강점\n약점\n\n\nV0\n프롬프트로 앱 구현, 코드 없이 결과물 생성\n비개발자도 쉽게 사용 가능\n비개발자, 초보 개발자\n코드 작성 없이 빠른 앱 생성\n고급 개발이나 세부 수정에 제한적\n\n\nReplit\n아이디어부터 배포까지, 실시간 피드백 반영\n즉시 개발 환경, 빠른 배포\n개발자, 스타트업\n기획→배포 30분 내 가능, 사용자 피드백 반영\n복잡한 기능 추가 시 한계\n\n\nCursor\nAI 통합 코드 편집기, 자연어 코드 생성, 오류 감지\nVS Code 기반 친숙함\n초중급 개발자, 전문가\n코드 품질 향상, 생산성 증가\n대규모 프로젝트 성능 저하, 기능 제한\n\n\n\n바이브 코딩은 AI를 활용해 자연어로 아이디어나 감성을 전달하면 코드나 앱을 생성해주는 새로운 개발 방식입니다. 근데 각 도구마다 초점을 두는 부분이 달라요. 자세히 살펴볼까요?\n \nV0: 코드 몰라도 앱 만들 수 있어요!  \nV0는 앱 빌더로, 코드에 대한 깊은 이해 없이 프롬프트와 이미지만으로 완전한 앱을 구현할 수 있는 도구입니다. 예를 들어, PRD(제품 요구사항 문서)와 와이어프레임 이미지를 제공하고 간단한 지시문(\"Please implement this. Use the attached image for a style reference\")만으로 앱을 만들 수 있습니다.\n \n진짜 놀라운 점은 비개발자나 초보자를 대상으로 설계되어 코드 작성 과정을 최소화하고 결과물에 집중할 수 있도록 돕습니다. 사용이 매우 직관적이며, 기술적 배경이 없어도 접근 가능합니다.\n\n\n제가 처음 V0를 써봤을 때 정말 놀랐어요. \"반응형 뉴스레터 구독 폼 만들어줘. 파란색 테마로!\"라고 입력했더니 진짜 그대로 뚝딱 만들어 주더라고요. 코드 한 줄 안 쓰고요! 디자이너가 와이어프레임 그려놓으면 바로 실제 앱으로 변신시킬 수 있으니, 제작 과정이 엄청 빨라져요.\n \n강점은 빠르고 간단하게 앱을 생성할 수 있다는 점이며, 약점으로는 고급 개발이나 세부적인 코드 수정이 필요한 경우 제한적일 가능성이 있습니다. 뭐랄까... 속도는 엄청 빠른데, 맞춤형 수정이 필요하면 좀 답답할 수 있어요.\n \nV0가 가장 빛나는 순간은 역시 프로토타입을 빠르게 만들어야 할 때예요. 클라이언트에게 \"이런 느낌이에요\" 하고 보여줄 결과물이 필요하다면, V0는 정말 최고의 선택이 될 거예요.\n \nReplit: 아이디어부터 배포까지 한방에!  \nReplit Agent는 아이디어 구상부터 MVP(최소 기능 제품) 개발, 배포, 그리고 실제 사용자 피드백 반영까지의 과정을 빠르게 진행할 수 있는 도구입니다. 예를 들어, 글쓰기 서비스를 30분 만에 만들고 사용자 테스트까지 완료한 사례가 있습니다.\n \n이게 진짜 대단한 게, 즉시 사용 가능한 개발 환경과 ChatGPT의 신속한 코드 생성 및 문제 해결 기능을 제공하며, 복잡한 서버 설정 없이 배포가 가능합니다. 주로 개발자, 스타트업, 또는 빠른 프로토타이핑을 원하는 사용자에게 적합합니다.\n\n\n \n 제가 Replit로 유튜브 강의 매니저를 만들어봤는데요, V0보다는 좀 더 개발자스러운 환경이지만 그래도 놀랍도록 빠르게 작업할 수 있었어요. 특히 좋았던 건 백엔드와 프론트엔드를 한 환경에서 다 만들 수 있다는 점이었어요. 백엔드 개발자랑 따로 소통할 필요 없이 혼자서 풀스택 개발이 가능했죠.\n \n강점은 기획부터 배포까지의 속도(30분 내 가능)와 실시간 피드백 반영이 용이하다는 점입니다. 약점으로는 모든 사용자 피드백을 즉시 반영하기 어려운 점과 복잡한 기능 추가 시 한계가 있을 수 있다는 점이 있습니다.\n \nReplit가 가장 빛나는 순간은 스타트업처럼 빠르게 아이디어를 검증하고 싶을 때예요. 생각난 아이디어를 그날 바로 앱으로 만들어서 친구들에게 써보라고 할 수 있으니까요!\n \nCursor: 코드의 품질과 생산성을 한 단계 올려줘요! ⚡\nCursor는 Visual Studio Code를 기반으로 한 AI 통합 코드 편집기로, 코드 자동 완성, 자연어를 통한 코드 생성, 실시간 오류 감지 및 수정, 자동 리팩토링 등의 기능을 제공합니다. AI 챗봇을 통해 코드 설명이나 질문을 주고받을 수 있으며, 개발 생산성을 크게 높여줍니다.\n \n다른 두 도구와 달리 VS Code의 친숙한 인터페이스를 유지하며, 초중급 개발자 및 전문 개발자에게 적합합니다. 비개발자보다는 어느 정도 코딩 지식이 있는 사용자를 대상으로 하며, 코드 품질 향상과 학습 지원(모범 사례 제안 등)에 강점이 있습니다.\n\n\n \n 솔직히 말해서 처음 Cursor 써봤을 때는 \"이게 뭐가 그리 대단해?\" 싶었는데, 1주일만 써보니 코드 생산성이 진짜 두 배는 늘더라고요. 특히 좋았던 건 코드를 작성하다가 \"이 부분 최적화해줘\" 같은 자연어 명령을 내리면 AI가 즉시 코드를 개선해준다는 점이었어요. 버그 찾는 시간도 확 줄었고요.\n \n강점은 코드 생산 속도와 품질 향상, 코드베이스 인덱싱을 통한 맞춤형 추천 기능입니다. 약점으로는 대규모 프로젝트나 여러 프로젝트 인덱싱 시 성능 저하, 일부 기능(예: import 경로 오류)에서 제한이 있다는 점이 있습니다.\n \nCursor가 빛나는 순간은 역시 큰 프로젝트를 효율적으로 관리하고 싶을 때예요. 기존 코드베이스를 분석해서 새 코드를 생성하거나 버그를 잡아내는 능력이 정말 대단하거든요.\n \n각 도구별 가격 정책 비교  \n아무리 좋은 도구라도 가격이 중요하잖아요. 각 도구별 가격 정책을 살펴볼게요.\n도구\n무료 플랜\n유료 플랜\n주요 특징\n\n\nV0\n월 200 크레딧\n프리미엄: 월 $20, 5000 크레딧\n추가 크레딧 구매 가능\n\n\nReplit\nStarter: 무료, 제한적 기능\nCore: 월 $20-25, Teams: 월 $40/인\nCore는 월 $25 크레딧 포함\n\n\nCursor\n2000회 코드 완성, 제한적 요청\nPro: 월 $20, Business: 월 $40/인\nPro는 500회 빠른 프리미엄 요청 제공\n\n\n\n \nV0는 무료 플랜으로 월 200 크레딧을 제공하며, 기본적인 UI 컴포넌트 생성 및 사용이 가능합니다. 프리미엄 플랜은 월 $20에 5000 크레딧을 제공하며, 더 많은 생성 작업을 지원합니다. 추가 크레딧 구매 옵션도 존재하며, $10에 1250 크레딧, $30에 4000 크레딧, $50에 7750 크레딧을 구매할 수 있습니다.\n \nReplit의 Starter 플랜은 무료로 제공되며, 기본 기능과 3개의 프로젝트, 제한적인 AI 기능(Replit Agent)을 사용할 수 있습니다. Replit Core 플랜은 연간 결제 시 월 $20, 월별 결제 시 $25로, 무제한 프로젝트와 $25 크레딧(약 100개의 Agent 체크포인트)을 제공합니다. Teams 플랜은 사용자당 월 $40로, $40 크레딧과 팀 협업 기능을 포함합니다.\n \nCursor의 Hobby 플랜은 무료로 제공되며, 2000회 코드 완성, 50회 느린 프리미엄 모델 요청, 14일 Pro 체험 기간을 포함합니다. Pro 플랜은 월 $20로, 500회 빠른 프리미엄 요청(GPT-4 등), 무제한 느린 요청, 무제한 코드 완성을 제공합니다. Business 플랜은 사용자당 월 $40로, Pro 플랜의 기능 외에 중앙 집중식 결제와 개인정보 보호 모드 강제 적용 등의 기업向け 기능을 추가합니다.\n \n가격만 보면 셋 다 비슷해 보이지만, 실제 사용해보면 체감이 달라요. V0는 간단한 프로젝트만 할 거라면 무료 크레딧으로도 괜찮지만, 자주 쓰려면 결국 유료 플랜이 필요해요. Replit은 초기에는 무료로 시작하기 좋지만, 배포와 AI 기능을 많이 쓸수록 크레딧이 빨리 소진돼요. Cursor는 무료 플랜의 제한이 커서 진짜 활용하려면 Pro 플랜은 필수인 것 같아요.\n \n어떤 도구가 나에게 맞을까?  \n이제 중요한 질문이죠. 내게 맞는 도구는 뭘까요? 간단히 정리해볼게요:\nV0가 딱인 경우:\n코딩을 잘 모르지만 앱이나 웹사이트를 만들고 싶은 비개발자\nUI/UX 디자이너가 프로토타입을 빠르게 만들어야 할 때\n코드 작성 없이 빠른 결과물이 필요한 경우\nReplit이 딱인 경우:\n아이디어부터 배포까지 빠르게 진행하고 싶은 스타트업\n풀스택 개발을 혼자서 처리해야 하는 개발자\n실시간 사용자 피드백을 반영하며 제품을 발전시키고 싶을 때\nCursor가 딱인 경우:\n코드 품질과 생산성을 동시에 높이고 싶은 전문 개발자\n기존 코드베이스를 분석하고 개선해야 하는 경우\nVS Code에 익숙한 개발자가 AI 기능을 추가하고 싶을 때\n\n\n V0는 비개발자나 초보자에게 적합하며 코드 없이 빠른 결과물을 원할 때 유용합니다. Replit Agent는 빠른 프로토타이핑과 사용자 피드백 반영이 필요한 스타트업이나 개발자에게 적합하며, Cursor는 코드 품질과 생산성을 중시하는 초중급 이상의 개발자에게 최적화되어 있습니다. 사용 목적과 기술 수준에 따라 적합한 도구를 선택하는 것이 중요합니다.\n \nReplit의 특별한 기능: Autoscale  \nReplit의 핵심 기능 중 하나인 Autoscale에 대해 추가로 알아볼까요?\n \nAutoscale Deployments는 앱의 네트워크 트래픽과 작업 부하에 따라 클라우드 리소스를 자동으로 확장하거나 축소합니다. 트래픽이 많을 때는 서버를 추가하여 부하를 관리하고, 앱이 유휴 상태일 때는 서버 수를 0까지 줄여 비용을 절감합니다.\n\n\n \n 이게 왜 중요하냐면, Autoscale는 전자상거래 사이트나 API 서비스와 같이 트래픽이 변동하는 웹 애플리케이션에 이상적입니다. 예를 들어, 타이핑 속도 평가 앱과 같은 경우, 사용자가 많을 때 리소스를 늘리고 사용이 적을 때 줄이는 방식으로 효율적으로 운영할 수 있습니다.\n \n개인적으로 이 기능 때문에 Replit을 더 많이 쓰게 됐어요. 제가 만든 웹서비스가 가끔 트래픽이 폭증할 때가 있는데, Autoscale 덕분에 서버 터질 걱정 없이 안정적으로 운영할 수 있었거든요. 게다가 평소엔 비용도 거의 안 들고요!\n \nV0 vs Cursor: 프론트엔드 vs 풀스택  \nV0와 Cursor를 좀 더 자세히 비교해볼까요?\n \nV0는 주로 프론트엔드 개발에 특화된 도구로, 자연어를 통해 UI 컴포넌트를 빠르게 생성하는 데 중점을 둡니다. 사용자가 원하는 UI를 자연어로 설명하거나 간단한 프롬프트로 요청하면, V0는 Tailwind CSS와 같은 현대적인 스타일링을 적용한 UI 컴포넌트를 생성합니다. 예를 들어, \"로그인 인터페이스를 만들어줘\"라고 입력하면 시각적으로 완성도 높은 UI를 제공합니다.\n \n반면, Cursor는 코드 자동 완성, 자연어를 통한 코드 생성, 자동 리팩토링, 실시간 오류 감지 및 수정, 코드 설명 기능을 제공합니다. 백엔드, 테스트, 서버 작업 등 다양한 개발 영역을 지원하며, 데이터베이스부터 프론트엔드까지 전체 스택을 다룰 수 있습니다.\n \n가장 큰 차이점은 V0는 UI 중심의 빠른 프로토타이핑이 필요한 비개발자나 디자이너에게 적합하며, Cursor AI는 코드 품질과 전체 스택 개발을 중시하는 개발자에게 더 유용합니다. 사용 목적과 기술 수준에 따라 두 도구 중 적합한 것을 선택하는 것이 중요합니다.\n \n결론: 나만의 바이브 코딩 도구 찾기  \n바이브 코딩 도구 셋 다 훌륭하지만, 각자의 필요와 상황에 맞게 선택하는 게 중요해요.\n \n제 경우는 다양한 프로젝트에 세 도구를 모두 사용하고 있어요. 간단한 UI 프로토타입은 V0로 빠르게 만들고, 풀스택 앱 개발은 Replit으로, 그리고 대규모 프로젝트나 코드 최적화가 필요할 때는 Cursor를 활용하고 있죠. 뭐랄까... 도구는 많을수록 좋은 것 같아요!  \n \n여러분은 어떤 바이브 코딩 도구를 써보고 싶으신가요? 아니면 이미 써보셨다면, 어떤 경험이 있으셨나요? 댓글로 여러분의 경험을 공유해주세요. 다른 분들에게도 큰 도움이 될 거예요!\n자주 묻는 질문\nQ: 비개발자도 바이브 코딩 도구를 쉽게 사용할 수 있나요?\nA: 네, 특히 V0는 코딩 지식 없이도 쉽게 사용할 수 있도록 설계되었습니다.\nQ: 무료 플랜만으로도 충분히 사용할 수 있을까요?\nA: 취미나 학습용으로는 무료 플랜으로 충분하지만, 본격적인 프로젝트나 상업적 용도로는 유료 플랜을 고려하는 것이 좋습니다.\nQ: 바이브 코딩 도구가 개발자의 일자리를 대체할까요?\nA: 완전히 대체하기보다는 개발자의 생산성을 높이고 반복적인 작업을 줄여주는 보조 도구로 볼 수 있습니다.\nQ: 이 도구들로 만든 코드의 품질은 어떤가요?\nA: 기본적인 기능은 훌륭하지만, 복잡한 로직이나 최적화가 필요한 부분은 개발자의 검토와 수정이 필요할 수 있습니다.\nQ: 한국어로도 프롬프트 입력이 가능한가요?\nA: 네, 세 도구 모두 한국어 프롬프트를 지원하지만, 영어로 입력했을 때 더 정확한 결과를 얻을 수 있는 경우가 많습니다.\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"비개발자도 바이브 코딩 도구를 쉽게 사용할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"네, 특히 V0는 코딩 지식 없이도 쉽게 사용할 수 있도록 설계되었습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"무료 플랜만으로도 충분히 사용할 수 있을까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"취미나 학습용으로는 무료 플랜으로 충분하지만, 본격적인 프로젝트나 상업적 용도로는 유료 플랜을 고려하는 것이 좋습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"바이브 코딩 도구가 개발자의 일자리를 대체할까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"완전히 대체하기보다는 개발자의 생산성",
        "guid": "http://muzbox.tistory.com/483582",
        "categories": [
          "AI, 미래기술/AI 생산성 및 업무 효율화",
          "ai 코딩 도구",
          "cursor ai",
          "replit",
          "v0.dev",
          "개발 생산성",
          "노코드 개발",
          "바이브 코딩",
          "코드 자동 생성",
          "프로토타이핑",
          "프롬프트 기반 개발"
        ],
        "isoDate": "2025-05-09T00:33:09.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "Suno 4.5 프롬프트 작성법, 자연어의 힘으로 AI 음악 퀄리티 높이기 - 무료 GPTS 공개",
        "link": "http://muzbox.tistory.com/483581",
        "pubDate": "Thu, 8 May 2025 10:31:01 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483581#entry483581comment",
        "content": "<p data-ke-size=\"size16\">&nbsp;음악 생성 AI 'Suno 4.5'를 100% 활용하는 프롬프트 작성법을 알려드릴게요. 구조화된 명령어보다 자연어가 훨씬 효과적이라는 사실, 알고 계셨나요? 음악 생성 결과가 확 달라지는 비밀 팁 대공개!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1536\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/blD49M/btsNOqipBeP/tTiszWjwTTRl1zYYK80kp1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/blD49M/btsNOqipBeP/tTiszWjwTTRl1zYYK80kp1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/blD49M/btsNOqipBeP/tTiszWjwTTRl1zYYK80kp1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FblD49M%2FbtsNOqipBeP%2FtTiszWjwTTRl1zYYK80kp1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Suno 4.5 프롬프트 생성 무료 GPTS 공개\" loading=\"lazy\" width=\"1536\" height=\"1024\" data-origin-width=\"1536\" data-origin-height=\"1024\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">솔직히 말해서, 저도 Suno를 처음 접했을 때는 완전 헤맸어요. 뭐랄까, AI 음악 생성이라고 하니까 뭔가 코딩하듯 명령어를 입력해야 할 것 같은 그런 느낌? 처음엔 [STYLE=Rock][BPM=120][MOOD=Happy] 이런 식으로 입력했다가 결과물이 영 만족스럽지 않았던 기억이 나네요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여러분은 혹시 지금도 그렇게 하고 계신가요? 그럼 오늘 이 글이 정말 도움이 될 거예요. 제가 무려 300곡 이상을 Suno로 만들어보면서 깨달은 '진짜' 프롬프트 작성법을 공유해드릴게요!  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  Suno는 '명령'이 아닌 '대화'로 작동해요</b></span></h2>\n<p data-ke-size=\"size16\">Suno의 가장 큰 오해 중 하나는 바로 이거예요. 사람들이 AI를 '명령을 그대로 수행하는 기계'로 생각한다는 점이죠. 근데 <b>Suno는 명령을 따르는 도구가 아니라 당신의 창의적인 파트너예요.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><b>예를 들어볼게요:</b></p>\n<p data-ke-size=\"size16\">❌ 이렇게 하지 마세요:</p>\n<pre class=\"markdown\"><code>[GENRE=Trap][BPM=128][INSTRUMENTS=808,Synth,Piano][MOOD=Dark]\n</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">✅ 이렇게 해보세요:</p>\n<pre class=\"bash\" data-ke-language=\"bash\"><code>Dark trap track at 128 BPM, featuring hard-hitting 808s, haunting synth layers, and sparse, minor-key piano motifs. Percussive hi-hats and crisp claps drive the rhythm, while synth textures and deep bass create an intense, atmospheric vibe throughout each section.\n강렬한 808, 잊혀지지 않는 신스 레이어, 드문드문 마이너 키 피아노 모티프가 특징인 128 BPM의 다크 트랩 트랙입니다. 타악기 하이햇과 선명한 박수가 리듬을 주도하고, 신스 텍스처와 깊은 베이스가 각 섹션 전체에 강렬하고 분위기 있는 분위기를 조성합니다.</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">두 번째 방식이 훨씬 더 풍부한 결과물을 만들어내요. 왜냐하면 Suno는 자연어 기반으로 학습된 AI이기 때문이죠! 구조화된 태그는 오히려 AI가 창의적으로 해석할 수 있는 여지를 줄여버려요.</p>\n<blockquote data-ke-style=\"style2\"><span style=\"color: #ee2323;\"><b>단, 여전히 SUNO는 영문 프롬프트를 더 잘 이해합니다.</b></span></blockquote>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  효과적인 Suno 프롬프트 작성 원칙</b></span></h2>\n<p data-ke-size=\"size16\">제가 경험해본 결과, 다음 원칙들이 Suno에서 정말 잘 작동했어요:</p>\n<h3 data-ke-size=\"size23\">1️⃣ 구체적인 감정과 분위기 전달하기</h3>\n<p data-ke-size=\"size16\">\"슬픈 노래\" 대신 \"이별 후 비 오는 날 창밖을 바라보며 느끼는 그 쓸쓸함이 담긴 발라드\"처럼 구체적으로 표현해보세요.</p>\n<h3 data-ke-size=\"size23\">2️⃣ 악기와 사운드 요소 자연스럽게 설명하기</h3>\n<p data-ke-size=\"size16\">\"일렉기타, 베이스, 드럼\" 같이 나열하기보다는 \"강렬한 일렉기타 리프가 주도하고, 묵직한 베이스와 경쾌한 드럼 비트가 뒷받침하는\" 식으로 표현하세요.</p>\n<h3 data-ke-size=\"size23\">3️⃣ 음악의 전개 방식 언급하기</h3>\n<p data-ke-size=\"size16\">\"잔잔하게 시작해서 코러스에서 폭발적으로 터지다가, 브릿지에서는 다시 조용해졌다가 마지막에 화려하게 마무리되는 구성이면 좋겠어요.\"</p>\n<h3 data-ke-size=\"size23\">4️⃣ 레퍼런스 활용하기 (단, 과하지 않게)</h3>\n<p data-ke-size=\"size16\">\"비틀즈의 초기 팝 감성과 콜드플레이의 현대적인 사운드가 섞인 느낌\" 같은 방식으로 표현하면 좋아요. 하지만 너무 많은 레퍼런스를 나열하면 오히려 혼란스러워질 수 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  Suno 버전별 프롬프트 최적화 방법</b></span></h2>\n<p data-ke-size=\"size16\">Suno가 버전업되면서 프롬프트 작성법도 조금씩 달라졌어요. 제가 직접 테스트해봤는데요:</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr style=\"background-color: #4caf50; color: white;\">\n<th style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">버전</th>\n<th style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">최적 프롬프트 길이</th>\n<th style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">특징</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">v4.0</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">50-80자</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">간결하고 핵심적인 특성 위주</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">v4.5</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">150-250자</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">상세한 음악 요소와 전개 방식 포함</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">v4.5에서는 음악적 질감, 악기 상호작용, 구간별 전개 방식 등을 더 자세히 설명할수록 좋은 결과가 나왔어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  실제 사례로 보는 프롬프트 비교</b></span></h2>\n<p data-ke-size=\"size16\">제가 실제로 작성해본 프롬프트 예시를 비교해볼게요:</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><b>❌ 비효율적인 프롬프트:</b></p>\n<pre class=\"bash\" data-ke-language=\"bash\"><code>pop, soul, R&amp;B, and rock, rap, hip hop</code></pre>\n<p data-ke-size=\"size16\"><b>✅ 효과적인 프롬프트:</b></p>\n<pre class=\"bash\" data-ke-language=\"bash\"><code>A dynamic blend of pop, soul, R&amp;B, rock, rap, and hip hop: crisp drums and a punchy bass groove set the foundation. Verses intertwine soulful singing and rap cadences over warm keys and guitar licks. The chorus rises with layered harmonies, gritty guitars, and lush synth textures.\n팝, 소울, R&amp;B, 록, 랩, 힙합이 역동적으로 어우러진 곡으로, 선명한 드럼과 펀치감 넘치는 베이스 그루브가 바탕을 이룹니다. 따뜻한 건반과 기타 릭 위에 소울풀한 노래와 랩 케이던스가 얽혀 있습니다. 코러스는 레이어드 하모니, 거친 기타, 풍성한 신디사이저 텍스처와 함께 상승합니다.</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">두 번째 프롬프트로 만든 곡이 훨씬 더 복잡하고 풍부한 사운드를 가졌어요. 특히 빌드업과 드롭의 구성이 훨씬 자연스러웠고요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  Suno 4.5의 숨겨진 기능: 가사 포맷팅</b></span></h2>\n<p data-ke-size=\"size16\">많은 분들이 모르시는 건데, Suno 4.5에서는 가사 포맷팅도 중요해요. 특히 곡의 구조를 명확히 표현하면 더 좋은 결과가 나온다는 걸 발견했어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><i>효과적인 가사 포맷팅 예시:</i></p>\n<pre class=\"less\"><code>[start]\n[Intro: 잔잔한 피아노와 대기감 있는 신스패드]\n\n[Verse 1]\n여기에 첫 번째 버스 가사를 넣으세요\n이야기가 시작되는 부분입니다\n\n[Chorus]\n이곳은 후렴구로 곡의 핵심 메시지를 담습니다\n(화음으로 받쳐주는 부분)\n\n...\n\n[Outro: 페이드아웃되는 멜로디와 함께]\n[end]\n</code></pre>\n<p data-ke-size=\"size16\">이런 식으로 각 섹션을 명확히 구분해주면 곡의 구조가 더 짜임새 있게 만들어져요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  이런 실수는 피해주세요</b></span></h2>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>너무 많은 요소 욕심내기</b>: \"일렉기타, 베이스, 피아노, 드럼, 바이올린, 첼로, 플루트, 색소폰...\" 이렇게 너무 많은 악기를 한꺼번에 요구하면 오히려 혼잡한 결과물이 나와요.</li>\n<li><b>상충되는 지시 주기</b>: \"어둡고 우울한 느낌인데 신나고 활기찬 멜로디\" 같이 모순된 지시는 혼란을 줘요.</li>\n<li><b>너무 추상적인 표현 사용</b>: \"혁신적인 사운드\" 같은 표현보다는 \"80년대 신스웨이브와 현대적인 EDM이 결합된 사운드\"처럼 구체적으로 표현하세요.</li>\n<li><b>프롬프트 길이 과장하기</b>: 아무리 v4.5가 긴 프롬프트를 지원한다고 해도, 500자 이상으로 너무 길게 쓰면 오히려 핵심이 흐려질 수 있어요.</li>\n</ol>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  Suno 프롬프트 작성, 실전 예시</b></span></h2>\n<p data-ke-size=\"size16\">다양한 장르별로 제가 직접 써본 효과적인 프롬프트 예시를 공유할게요 (단, 영문 프롬프트를 사용하세요):</p>\n<h3 data-ke-size=\"size23\">팝 (Pop)</h3>\n<pre class=\"bash\" data-ke-language=\"bash\"><code>Bright, upbeat acoustic guitar opens the track, layered with crisp folky percussion and buoyant handclaps. The verses feel light and airy, leading into a punchy, melodic hook with tight drums and glistening synth accents. Male and female vocal harmonies drive the energetic, hopeful chorus.\n밝고 경쾌한 어쿠스틱 기타가 트랙의 시작을 알리며, 선명한 포크 퍼커션과 경쾌한 핸드클랩이 레이어드되어 있습니다. 경쾌하고 경쾌한 느낌의 구절은 타이트한 드럼과 반짝이는 신디사이저 악센트가 돋보이는 강렬한 멜로디 훅으로 이어집니다. 남성과 여성의 보컬 하모니가 활기차고 희망찬 코러스를 이끌어갑니다.</code></pre>\n<h3 data-ke-size=\"size23\">힙합 (Hip-Hop)</h3>\n<pre class=\"bash\" data-ke-language=\"bash\"><code>A 90s hip-hop groove with thick vinyl crackle, a jazzy melodic sample looping over punchy, boom-bap drums. Heavy subby bass anchors the mix, while subtle turntable scratches accent transitions. The laid-back, precise flow glides over the urban instrumental.\n90년대 힙합 그루브와 두꺼운 비닐 크래클, 재즈 멜로디 샘플이 강렬한 붐뱁 드럼 위로 반복됩니다. 묵직한 서브 베이스가 믹스를 고정하고, 미묘한 턴테이블 스크래치가 악센트 전환을 강조합니다. 느긋하고 정확한 흐름이 도시적인 악기 위로 미끄러지듯 흘러갑니다.</code></pre>\n<h3 data-ke-size=\"size23\">록 (Rock)</h3>\n<pre class=\"bash\" data-ke-language=\"bash\"><code>A relentless hardcore rock track driven by an aggressive electric guitar loop and rapid, crashing drums. Tight, distorted bass underpins the verses, with sharp percussive breaks highlighting key transitions. Intense male vocals cut through, sustaining raw power from start to finish.\n공격적인 일렉 기타 루프와 빠르게 부딪히는 드럼이 이끄는 거침없는 하드코어 록 트랙입니다. 단단하고 왜곡된 베이스가 구절을 뒷받침하며, 날카로운 퍼커션 브레이크가 주요 전환을 강조합니다. 강렬한 남성 보컬이 처음부터 끝까지 날것 그대로의 파워를 유지합니다.</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1184\" data-origin-height=\"824\"><span data-url=\"https://blog.kakaocdn.net/dn/bmADvz/btsNN5MmOf9/d7stBDIPgbwXAgSJdomk4k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bmADvz/btsNN5MmOf9/d7stBDIPgbwXAgSJdomk4k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bmADvz/btsNN5MmOf9/d7stBDIPgbwXAgSJdomk4k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbmADvz%2FbtsNN5MmOf9%2Fd7stBDIPgbwXAgSJdomk4k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Suno 4.5 프롬프트 작성 가이드\" loading=\"lazy\" width=\"1184\" height=\"824\" data-origin-width=\"1184\" data-origin-height=\"824\"/></span></figure>\n</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  마무리</b></span></h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">Suno 4.5를 활용할 때는 구조화된 명령어보다 자연어로 풍부하게 표현하는 것이 핵심이에요. AI는 명령을 따르는 도구가 아니라 당신의 창의적인 파트너라는 점을 기억하세요! 이 글이 여러분의 음악 창작 여정에 도움이 되었으면 좋겠네요.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">여러분만의 Suno 프롬프트 작성 팁이 있다면 댓글로 공유해주세요! 어떤 프롬프트로 어떤 곡을 만들었는지 들려주시면 정말 흥미로울 것 같아요.  </p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>❓ 자주 묻는 질문</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q: Suno에서 특정 BPM을 정확히 지정할 수 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 정확한 숫자보다는 \"빠른 템포\", \"중간 템포\" 같은 표현이 더 효과적이에요. 필요하다면 \"약 120BPM 정도의 템포\"처럼 표현할 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>Q: 유명 아티스트 스타일을 참조해도 되나요?</b></p>\n<p data-ke-size=\"size16\">A: 네, 가능해요. \"비틀즈 스타일의\" 같은 표현은 효과적이지만, 너무 직접적인 모방보다는 \"비틀즈의 하모니 스타일에서 영감을 받은\"처럼 표현하는 게 좋아요.</p>\n<p data-ke-size=\"size16\"><b>Q: 프롬프트에 가사를 포함시키는 게 좋을까요?</b></p>\n<p data-ke-size=\"size16\">A: 가사의 주제나 분위기를 언급하는 건 도움이 되지만, 전체 가사를 모두 제공하기보다는 핵심 메시지나 테마만 언급하는 게 효과적이에요.</p>\n<p data-ke-size=\"size16\"><b>Q: 악기를 너무 많이 언급하면 안 좋은가요?</b></p>\n<p data-ke-size=\"size16\">A: 네, 3-5개 정도의 핵심 악기만 언급하고, 그 역할과 상호작용을 설명하는 게 더 효과적이에요.</p>\n<p data-ke-size=\"size16\"><b>Q: 자연어로 입력해도 장르나 분위기가 정확히 전달될까요?</b></p>\n<p data-ke-size=\"size16\">A: 네, 오히려 더 정확하게 전달돼요. 장르를 언급하되 그 장르의 특징적인 요소들을 설명해주면 AI가 더 잘 이해해요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  GPTS 무료배포</b></span></h2>\n<div class=\"revenue_unit_wrap\">\n  <div class=\"revenue_unit_item adsense responsive\">\n    <div class=\"revenue_unit_info\">반응형</div>\n    <script src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\" async=\"async\"></script>\n    <ins class=\"adsbygoogle\" style=\"display: block;\" data-ad-host=\"ca-host-pub-9691043933427338\" data-ad-client=\"ca-pub-8195497734535830\" data-ad-format=\"auto\"></ins>\n    <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>\n  </div>\n</div>\n<p data-ke-size=\"size16\">&nbsp;약간의 지식과 시간만 투자하면 누구나 직접 제작하고 활용할 수 있는 유용한 GPTs가 이미 많이 존재합니다. 그러나 여전히 AI 기술에 대한 낯선 접근을 두려워하거나 IT 초보자, 또는 시간적 여유가 없거나 수익화에 대한 절실함 때문에 올바른 정보를 얻지 못하는 사람들이 많습니다.&nbsp; <br /><br />이러한 심리를 악용해 과도한 가격으로 유료 강의를 판매하며 불필요한 부담을 주는 사례들이 늘어나고 있습니다.&nbsp;&nbsp;<br /><br />&nbsp;이에&nbsp;본&nbsp;블로그에서는&nbsp;모든&nbsp;사람이&nbsp;AI의&nbsp;혜택을&nbsp;공정하고&nbsp;자유롭게&nbsp;누릴&nbsp;수&nbsp;있도록&nbsp;GPTs를&nbsp;무료로&nbsp;배포하며,&nbsp;불합리한&nbsp;강의&nbsp;판매&nbsp;행위를&nbsp;단호히&nbsp;배척하고자&nbsp;합니다.&nbsp;(당연히&nbsp;저도&nbsp;무료&nbsp;그&nbsp;이상의&nbsp;가치가&nbsp;있는&nbsp;챗봇이라면&nbsp;유료화를&nbsp;검토중입니다.)</p>\n<center>\n<figure id=\"og_1746667551525\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"ChatGPT - Suno 4.5 Prompt Generator\" data-og-description=\"Create Suno v4.0 and v4.5 prompts and lyrics for expressive, structured music. Describe the genre, vocals, mood, and song progression to achieve film-like emotional results. You can use artist names or song titles instead of keywords. Enter your desired la\" data-og-host=\"chatgpt.com\" data-og-source-url=\"https://chatgpt.com/g/g-681480f8a4688191b94abd2af3c3390a-suno-4-5-prompt-generator\" data-og-url=\"https://chatgpt.com/g/g-681480f8a4688191b94abd2af3c3390a-suno-4-5-prompt-generator\" data-og-image=\"https://scrap.kakaocdn.net/dn/Xje3d/hyYRsP1Kmp/zj4hkssct551VTNnMmXvF0/img.jpg?width=512&amp;height=512&amp;face=0_0_512_512\"><a href=\"https://chatgpt.com/g/g-681480f8a4688191b94abd2af3c3390a-suno-4-5-prompt-generator\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://chatgpt.com/g/g-681480f8a4688191b94abd2af3c3390a-suno-4-5-prompt-generator\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/Xje3d/hyYRsP1Kmp/zj4hkssct551VTNnMmXvF0/img.jpg?width=512&amp;height=512&amp;face=0_0_512_512');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">ChatGPT - Suno 4.5 Prompt Generator</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Create Suno v4.0 and v4.5 prompts and lyrics for expressive, structured music. Describe the genre, vocals, mood, and song progression to achieve film-like emotional results. You can use artist names or song titles instead of keywords. Enter your desired la</p>\n<p class=\"og-host\" data-ke-size=\"size16\">chatgpt.com</p>\n</div>\n</a></figure>\n</center>\n<p data-ke-size=\"size16\">\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"Suno에서 특정 BPM을 정확히 지정할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"정확한 숫자보다는 '빠른 템포', '중간 템포' 같은 표현이 더 효과적이에요. 필요하다면 '약 120BPM 정도의 템포'처럼 표현할 수 있어요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"유명 아티스트 스타일을 참조해도 되나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 가능해요. '비틀즈 스타일의' 같은 표현은 효과적이지만, 너무 직접적인 모방보다는 '비틀즈의 하모니 스타일에서 영감을 받은'처럼 표현하는 게 좋아요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"프롬프트에 가사를 포함시키는 게 좋을까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"가사의 주제나 분위기를 언급하는 건 도움이 되지만, 전체 가사를 모두 제공하기보다는 핵심 메시지나 테마만 언급하는 게 효과적이에요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"악기를 너무 많이 언급하면 안 좋은가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 3-5개 정도의 핵심 악기만 언급하고, 그 역할과 상호작용을 설명하는 게 더 효과적이에요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"자연어로 입력해도 장르나 분위기가 정확히 전달될까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 오히려 더 정확하게 전달돼요. 장르를 언급하되 그 장르의 특징적인 요소들을 설명해주면 AI가 더 잘 이해해요.\"\n      }\n    }\n  ]\n}\n</script>\n</p>",
        "contentSnippet": "음악 생성 AI 'Suno 4.5'를 100% 활용하는 프롬프트 작성법을 알려드릴게요. 구조화된 명령어보다 자연어가 훨씬 효과적이라는 사실, 알고 계셨나요? 음악 생성 결과가 확 달라지는 비밀 팁 대공개!\n\n\n \n솔직히 말해서, 저도 Suno를 처음 접했을 때는 완전 헤맸어요. 뭐랄까, AI 음악 생성이라고 하니까 뭔가 코딩하듯 명령어를 입력해야 할 것 같은 그런 느낌? 처음엔 [STYLE=Rock][BPM=120][MOOD=Happy] 이런 식으로 입력했다가 결과물이 영 만족스럽지 않았던 기억이 나네요.\n \n여러분은 혹시 지금도 그렇게 하고 계신가요? 그럼 오늘 이 글이 정말 도움이 될 거예요. 제가 무려 300곡 이상을 Suno로 만들어보면서 깨달은 '진짜' 프롬프트 작성법을 공유해드릴게요!  \n \n  Suno는 '명령'이 아닌 '대화'로 작동해요\nSuno의 가장 큰 오해 중 하나는 바로 이거예요. 사람들이 AI를 '명령을 그대로 수행하는 기계'로 생각한다는 점이죠. 근데 Suno는 명령을 따르는 도구가 아니라 당신의 창의적인 파트너예요.\n \n예를 들어볼게요:\n❌ 이렇게 하지 마세요:\n[GENRE=Trap][BPM=128][INSTRUMENTS=808,Synth,Piano][MOOD=Dark]\n\n \n✅ 이렇게 해보세요:\nDark trap track at 128 BPM, featuring hard-hitting 808s, haunting synth layers, and sparse, minor-key piano motifs. Percussive hi-hats and crisp claps drive the rhythm, while synth textures and deep bass create an intense, atmospheric vibe throughout each section.\n강렬한 808, 잊혀지지 않는 신스 레이어, 드문드문 마이너 키 피아노 모티프가 특징인 128 BPM의 다크 트랩 트랙입니다. 타악기 하이햇과 선명한 박수가 리듬을 주도하고, 신스 텍스처와 깊은 베이스가 각 섹션 전체에 강렬하고 분위기 있는 분위기를 조성합니다.\n \n두 번째 방식이 훨씬 더 풍부한 결과물을 만들어내요. 왜냐하면 Suno는 자연어 기반으로 학습된 AI이기 때문이죠! 구조화된 태그는 오히려 AI가 창의적으로 해석할 수 있는 여지를 줄여버려요.\n단, 여전히 SUNO는 영문 프롬프트를 더 잘 이해합니다.\n \n  효과적인 Suno 프롬프트 작성 원칙\n제가 경험해본 결과, 다음 원칙들이 Suno에서 정말 잘 작동했어요:\n1️⃣ 구체적인 감정과 분위기 전달하기\n\"슬픈 노래\" 대신 \"이별 후 비 오는 날 창밖을 바라보며 느끼는 그 쓸쓸함이 담긴 발라드\"처럼 구체적으로 표현해보세요.\n2️⃣ 악기와 사운드 요소 자연스럽게 설명하기\n\"일렉기타, 베이스, 드럼\" 같이 나열하기보다는 \"강렬한 일렉기타 리프가 주도하고, 묵직한 베이스와 경쾌한 드럼 비트가 뒷받침하는\" 식으로 표현하세요.\n3️⃣ 음악의 전개 방식 언급하기\n\"잔잔하게 시작해서 코러스에서 폭발적으로 터지다가, 브릿지에서는 다시 조용해졌다가 마지막에 화려하게 마무리되는 구성이면 좋겠어요.\"\n4️⃣ 레퍼런스 활용하기 (단, 과하지 않게)\n\"비틀즈의 초기 팝 감성과 콜드플레이의 현대적인 사운드가 섞인 느낌\" 같은 방식으로 표현하면 좋아요. 하지만 너무 많은 레퍼런스를 나열하면 오히려 혼란스러워질 수 있어요.\n \n  Suno 버전별 프롬프트 최적화 방법\nSuno가 버전업되면서 프롬프트 작성법도 조금씩 달라졌어요. 제가 직접 테스트해봤는데요:\n버전\n최적 프롬프트 길이\n특징\n\n\n\n\nv4.0\n50-80자\n간결하고 핵심적인 특성 위주\n\n\nv4.5\n150-250자\n상세한 음악 요소와 전개 방식 포함\n\n\n\nv4.5에서는 음악적 질감, 악기 상호작용, 구간별 전개 방식 등을 더 자세히 설명할수록 좋은 결과가 나왔어요.\n \n  실제 사례로 보는 프롬프트 비교\n제가 실제로 작성해본 프롬프트 예시를 비교해볼게요:\n \n❌ 비효율적인 프롬프트:\npop, soul, R&B, and rock, rap, hip hop\n✅ 효과적인 프롬프트:\nA dynamic blend of pop, soul, R&B, rock, rap, and hip hop: crisp drums and a punchy bass groove set the foundation. Verses intertwine soulful singing and rap cadences over warm keys and guitar licks. The chorus rises with layered harmonies, gritty guitars, and lush synth textures.\n팝, 소울, R&B, 록, 랩, 힙합이 역동적으로 어우러진 곡으로, 선명한 드럼과 펀치감 넘치는 베이스 그루브가 바탕을 이룹니다. 따뜻한 건반과 기타 릭 위에 소울풀한 노래와 랩 케이던스가 얽혀 있습니다. 코러스는 레이어드 하모니, 거친 기타, 풍성한 신디사이저 텍스처와 함께 상승합니다.\n \n두 번째 프롬프트로 만든 곡이 훨씬 더 복잡하고 풍부한 사운드를 가졌어요. 특히 빌드업과 드롭의 구성이 훨씬 자연스러웠고요!\n \n  Suno 4.5의 숨겨진 기능: 가사 포맷팅\n많은 분들이 모르시는 건데, Suno 4.5에서는 가사 포맷팅도 중요해요. 특히 곡의 구조를 명확히 표현하면 더 좋은 결과가 나온다는 걸 발견했어요.\n \n효과적인 가사 포맷팅 예시:\n[start]\n[Intro: 잔잔한 피아노와 대기감 있는 신스패드]\n\n[Verse 1]\n여기에 첫 번째 버스 가사를 넣으세요\n이야기가 시작되는 부분입니다\n\n[Chorus]\n이곳은 후렴구로 곡의 핵심 메시지를 담습니다\n(화음으로 받쳐주는 부분)\n\n...\n\n[Outro: 페이드아웃되는 멜로디와 함께]\n[end]\n\n이런 식으로 각 섹션을 명확히 구분해주면 곡의 구조가 더 짜임새 있게 만들어져요.\n \n  이런 실수는 피해주세요\n너무 많은 요소 욕심내기: \"일렉기타, 베이스, 피아노, 드럼, 바이올린, 첼로, 플루트, 색소폰...\" 이렇게 너무 많은 악기를 한꺼번에 요구하면 오히려 혼잡한 결과물이 나와요.\n상충되는 지시 주기: \"어둡고 우울한 느낌인데 신나고 활기찬 멜로디\" 같이 모순된 지시는 혼란을 줘요.\n너무 추상적인 표현 사용: \"혁신적인 사운드\" 같은 표현보다는 \"80년대 신스웨이브와 현대적인 EDM이 결합된 사운드\"처럼 구체적으로 표현하세요.\n프롬프트 길이 과장하기: 아무리 v4.5가 긴 프롬프트를 지원한다고 해도, 500자 이상으로 너무 길게 쓰면 오히려 핵심이 흐려질 수 있어요.\n  Suno 프롬프트 작성, 실전 예시\n다양한 장르별로 제가 직접 써본 효과적인 프롬프트 예시를 공유할게요 (단, 영문 프롬프트를 사용하세요):\n팝 (Pop)\nBright, upbeat acoustic guitar opens the track, layered with crisp folky percussion and buoyant handclaps. The verses feel light and airy, leading into a punchy, melodic hook with tight drums and glistening synth accents. Male and female vocal harmonies drive the energetic, hopeful chorus.\n밝고 경쾌한 어쿠스틱 기타가 트랙의 시작을 알리며, 선명한 포크 퍼커션과 경쾌한 핸드클랩이 레이어드되어 있습니다. 경쾌하고 경쾌한 느낌의 구절은 타이트한 드럼과 반짝이는 신디사이저 악센트가 돋보이는 강렬한 멜로디 훅으로 이어집니다. 남성과 여성의 보컬 하모니가 활기차고 희망찬 코러스를 이끌어갑니다.\n힙합 (Hip-Hop)\nA 90s hip-hop groove with thick vinyl crackle, a jazzy melodic sample looping over punchy, boom-bap drums. Heavy subby bass anchors the mix, while subtle turntable scratches accent transitions. The laid-back, precise flow glides over the urban instrumental.\n90년대 힙합 그루브와 두꺼운 비닐 크래클, 재즈 멜로디 샘플이 강렬한 붐뱁 드럼 위로 반복됩니다. 묵직한 서브 베이스가 믹스를 고정하고, 미묘한 턴테이블 스크래치가 악센트 전환을 강조합니다. 느긋하고 정확한 흐름이 도시적인 악기 위로 미끄러지듯 흘러갑니다.\n록 (Rock)\nA relentless hardcore rock track driven by an aggressive electric guitar loop and rapid, crashing drums. Tight, distorted bass underpins the verses, with sharp percussive breaks highlighting key transitions. Intense male vocals cut through, sustaining raw power from start to finish.\n공격적인 일렉 기타 루프와 빠르게 부딪히는 드럼이 이끄는 거침없는 하드코어 록 트랙입니다. 단단하고 왜곡된 베이스가 구절을 뒷받침하며, 날카로운 퍼커션 브레이크가 주요 전환을 강조합니다. 강렬한 남성 보컬이 처음부터 끝까지 날것 그대로의 파워를 유지합니다.\n \n\n\n  마무리\nSuno 4.5를 활용할 때는 구조화된 명령어보다 자연어로 풍부하게 표현하는 것이 핵심이에요. AI는 명령을 따르는 도구가 아니라 당신의 창의적인 파트너라는 점을 기억하세요! 이 글이 여러분의 음악 창작 여정에 도움이 되었으면 좋겠네요.\n여러분만의 Suno 프롬프트 작성 팁이 있다면 댓글로 공유해주세요! 어떤 프롬프트로 어떤 곡을 만들었는지 들려주시면 정말 흥미로울 것 같아요.  \n \n❓ 자주 묻는 질문\nQ: Suno에서 특정 BPM을 정확히 지정할 수 있나요?\nA: 정확한 숫자보다는 \"빠른 템포\", \"중간 템포\" 같은 표현이 더 효과적이에요. 필요하다면 \"약 120BPM 정도의 템포\"처럼 표현할 수 있어요.\nQ: 유명 아티스트 스타일을 참조해도 되나요?\nA: 네, 가능해요. \"비틀즈 스타일의\" 같은 표현은 효과적이지만, 너무 직접적인 모방보다는 \"비틀즈의 하모니 스타일에서 영감을 받은\"처럼 표현하는 게 좋아요.\nQ: 프롬프트에 가사를 포함시키는 게 좋을까요?\nA: 가사의 주제나 분위기를 언급하는 건 도움이 되지만, 전체 가사를 모두 제공하기보다는 핵심 메시지나 테마만 언급하는 게 효과적이에요.\nQ: 악기를 너무 많이 언급하면 안 좋은가요?\nA: 네, 3-5개 정도의 핵심 악기만 언급하고, 그 역할과 상호작용을 설명하는 게 더 효과적이에요.\nQ: 자연어로 입력해도 장르나 분위기가 정확히 전달될까요?\nA: 네, 오히려 더 정확하게 전달돼요. 장르를 언급하되 그 장르의 특징적인 요소들을 설명해주면 AI가 더 잘 이해해요.\n \n  GPTS 무료배포\n반응형\n\n    \n    (adsbygoogle = window.adsbygoogle || []).push({});\n  \n 약간의 지식과 시간만 투자하면 누구나 직접 제작하고 활용할 수 있는 유용한 GPTs가 이미 많이 존재합니다. 그러나 여전히 AI 기술에 대한 낯선 접근을 두려워하거나 IT 초보자, 또는 시간적 여유가 없거나 수익화에 대한 절실함 때문에 올바른 정보를 얻지 못하는 사람들이 많습니다.  \n이러한 심리를 악용해 과도한 가격으로 유료 강의를 판매하며 불필요한 부담을 주는 사례들이 늘어나고 있습니다.  \n 이에 본 블로그에서는 모든 사람이 AI의 혜택을 공정하고 자유롭게 누릴 수 있도록 GPTs를 무료로 배포하며, 불합리한 강의 판매 행위를 단호히 배척하고자 합니다. (당연히 저도 무료 그 이상의 가치가 있는 챗봇이라면 유료화를 검토중입니다.)\n\n \nChatGPT - Suno 4.5 Prompt Generator\nCreate Suno v4.0 and v4.5 prompts and lyrics for expressive, structured music. Describe the genre, vocals, mood, and song progression to achieve film-like emotional results. You can use artist names or song titles instead of keywords. Enter your desired la\nchatgpt.com\n\n\n\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"Suno에서 특정 BPM을 정확히 지정할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"정확한 숫자보다는 '빠른 템포', '중간 템포' 같은 표현이 더 효과적이에요. 필요하다면 '약 120BPM 정도의 템포'처럼 표현할 수 있어요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"유명 아티스트 스타일을 참조해도 되나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 가능해요. '비틀즈 스타일의' 같은 표현은 효과적이지만, 너무 직접적인 모방보다는 '비틀즈의 하모니 스타일에서 영감을 받은'처럼 표현하는 게 좋아요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"프롬프트에 가사를 포함시키는 게 좋을까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"가사의 주제나 분위기를 언급하는 건 도움이 되지만, 전체 가사를 모두 제공하기보다는 핵심 메시지나 테마만 언급하는 게 효과적이에요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"악기를 너무 많이 언급하면 안 좋은가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 3-5개 정도의 핵심 악기만 언급하고, 그 역할과 상호작용을 설명하는 게 더 효과적이에요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"자연어로 입력해도 장르나 분위기가 정확히 전달될까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 오히려 더 정확하게 전달돼요. 장르를 언급하되 그 장르의 특징적인 요소들을 설명해주면 AI가 더 잘 이해해요.\"\n      }\n    }\n  ]\n}",
        "guid": "http://muzbox.tistory.com/483581",
        "categories": [
          "AI, 미래기술/무료 GPTS 공개",
          "ai 음악 생성",
          "AI 음악 제작",
          "boost 기능",
          "suno 4.5",
          "suno 팁",
          "가사 포맷팅",
          "무료gpts",
          "음악 ai",
          "프롬프트 작성법",
          "효과적인 프롬프트"
        ],
        "isoDate": "2025-05-08T01:31:01.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "바이브 코딩, 코딩 지식 없이 AI로 아이디어를 현실로 만드는 마법 같은 방법",
        "link": "http://muzbox.tistory.com/483580",
        "pubDate": "Thu, 8 May 2025 07:03:59 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483580#entry483580comment",
        "content": "<p data-ke-size=\"size12\">&nbsp;</p>\n<div style=\"color: #333; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px; font-family: 'Noto Sans KR', sans-serif;\">\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px;\"><span style=\"font-family: 'Nanum Gothic';\">코딩은 너무 어렵다고 느끼시나요? 전문가 수준의 지식 없이도 단 몇 분 만에 웹사이트, 앱, 게임을 만들 수 있다면 어떨까요? 바이브 코딩이 여러분의 아이디어를 현실로 만들어주는 새로운 방식, 그 혁신적인 변화에 대해 알아봅시다!</span>&nbsp;</div>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/bD8Afv/btsNMygtwIp/gfciOAISdv7DZHQjbBqMf1/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/bD8Afv/btsNMygtwIp/gfciOAISdv7DZHQjbBqMf1/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/bD8Afv/btsNMygtwIp/gfciOAISdv7DZHQjbBqMf1/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbD8Afv%2FbtsNMygtwIp%2FgfciOAISdv7DZHQjbBqMf1%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"바이브 코딩, 코딩 지식 없이 AI로 아이디어를 현실로 만드는 마법 같은 방법\" loading=\"lazy\" width=\"1280\" height=\"853\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\"><span style=\"font-family: 'Nanum Gothic';\">&nbsp;여러분, 혹시 이런 경험 있으신가요? 멋진 아이디어가 떠올랐는데 \"아, 내가 코딩을 할 줄 알았다면...\"하고 포기한 적이요. 저도 그랬어요. 하지만 이제는 그런 아쉬움을 뒤로할 때가 왔습니다. 바이브 코딩이라는 혁신적인 방식이 등장했기 때문이죠! 코딩 경험이 전혀 없어도, 여러분이 원하는 것을 자연어로 설명하면 AI가 코드를 뚝딱 만들어주는 마법 같은 경험, 함께 알아볼까요?  </span></p>\n<div class=\"revenue_unit_wrap\">\n  <div class=\"revenue_unit_item adsense responsive\">\n    <div class=\"revenue_unit_info\">반응형</div>\n    <script src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\" async=\"async\"></script>\n    <ins class=\"adsbygoogle\" style=\"display: block;\" data-ad-host=\"ca-host-pub-9691043933427338\" data-ad-client=\"ca-pub-8195497734535830\" data-ad-format=\"auto\"></ins>\n    <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>\n  </div>\n</div>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b><span style=\"font-family: 'Nanum Gothic';\">바이브 코딩이란 무엇인가요?  </span></b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\"><span style=\"font-family: 'Nanum Gothic';\">바이브 코딩은 복잡한 프로그래밍 언어 대신 우리가 일상에서 사용하는 자연어로 AI에게 원하는 것을 지시하면, AI가 필요한 코드를 자동으로 생성해주는 개발 방식을 말합니다. 쉽게 말해 \"여기 파란색 버튼 하나 만들어 줘\"라고 말하면 AI가 \"아, 파란색 버튼이 필요하구나\"라고 이해하고 필요한 코드를 만들어주는 거죠.</span></p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\"><span style=\"font-family: 'Nanum Gothic';\">이는 단순히 편리함을 넘어 코딩의 민주화를 가져오고 있습니다. 이제 프로그래밍 지식이 없는 사람도 자신의 아이디어를 직접 구현할 수 있게 된 것이죠!</span></p>\n<div style=\"background-color: #e8f4fd; border-left: 4px solid #1a73e8; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><span style=\"font-family: 'Nanum Gothic';\"><b>  알아두세요!</b></span><br /><span style=\"font-family: 'Nanum Gothic';\">실제로 프로그래밍 경험이 전혀 없던 한 비개발자가 단 10시간 만에 요가 동작 순서를 자동으로 만들어주는 웹을 개발한 사례가 있습니다. 이런 기술 발전이 전문가와 일반인 사이의 장벽을 허물고 있어요!</span></div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b><span style=\"font-family: 'Nanum Gothic';\">바이브 코딩의 놀라운 장점들  </span></b></h2>\n<h3 style=\"font-size: 18px; color: #dd3333; margin: 20px 0 10px;\" data-ke-size=\"size23\"><span style=\"font-family: 'Nanum Gothic';\">1. 진입 장벽의 파괴</span></h3>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\"><span style=\"font-family: 'Nanum Gothic';\">바이브 코딩의 가장 큰 매력은 누구나 개발자가 될 수 있다는 점입니다. 아이디어만 있다면 서비스 기획자, 창업가, 디자이너, 경영 관리자까지 누구든 자신의 생각을 소프트웨어로 구현할 수 있게 되었습니다. 특히 기술, 자금, 인력이 부족한 개인 개발자나 소규모 팀에게 새로운 가능성의 문을 열어주고 있죠.</span></p>\n<h3 style=\"font-size: 18px; color: #dd3333; margin: 20px 0 10px;\" data-ke-size=\"size23\"><span style=\"font-family: 'Nanum Gothic';\">2. 엄청난 개발 속도</span></h3>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\"><span style=\"font-family: 'Nanum Gothic';\">기존에는 몇 날 며칠이 걸리던 작업을 이제는 몇 시간, 심지어 몇 분 만에 완성할 수 있습니다. 머릿속 아이디어가 즉시 눈앞에 결과물로 나타나는 경험은 정말 짜릿하고 동기부여가 됩니다. 빠르게 만들고 사용자 피드백을 받아 개선하는 실리콘밸리 스타일의 개발 문화와도 잘 맞아떨어지죠.</span></p>\n<h3 style=\"font-size: 18px; color: #dd3333; margin: 20px 0 10px;\" data-ke-size=\"size23\"><span style=\"font-family: 'Nanum Gothic';\">3. 창의성에 집중할 수 있는 여유</span></h3>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\"><span style=\"font-family: 'Nanum Gothic';\">코드를 한 줄 한 줄 입력하는 반복적이고 지루한 작업은 AI가 대신 처리해주니, 우리는 더 본질적인 문제에 집중할 수 있습니다. \"이 기술로 어떤 문제를 해결할 수 있을까?\" \"어떻게 하면 사용자에게 더 도움이 되는 결과물을 만들까?\" 같은 창의적인 고민에 에너지를 쏟을 수 있게 된 거죠.</span></p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; margin: 20px 0;\">\n<h3 style=\"font-size: 18px; color: #333; margin: 0 0 10px;\" data-ke-size=\"size23\"><span style=\"font-family: 'Nanum Gothic';\">개발의 패러다임 변화</span></h3>\n<p style=\"margin-bottom: 0;\" data-ke-size=\"size16\"><span style=\"font-family: 'Nanum Gothic';\">개발의 무게 중심이 \"얼마나 코딩을 기술적으로 잘하느냐\"에서 \"얼마나 기발하고 가치 있는 아이디어를 잘 표현하느냐\"로 이동하고 있습니다. 앞으로는 문제 정의 능력과 AI와의 효과적인 소통 및 협업 능력이 더욱 중요해질 것입니다.</span></p>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b><span style=\"font-family: 'Nanum Gothic';\">바이브 코딩을 가능하게 하는 도구들  ️</span></b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\"><span style=\"font-family: 'Nanum Gothic';\">바이브 코딩을 실제로 경험할 수 있게 해주는 다양한 도구들이 이미 시장에 나와 있습니다. 이러한 도구들은 자연어 지시를 실제 코드로 변환해주고, 디버깅까지 도와줍니다.</span></p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\"><span style=\"font-family: 'Nanum Gothic';\">도구/플랫폼</span></th>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\"><span style=\"font-family: 'Nanum Gothic';\">특징</span></th>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\"><span style=\"font-family: 'Nanum Gothic';\">적합한 사용자</span></th>\n</tr>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><span style=\"font-family: 'Nanum Gothic';\">커서(Cursor)</span></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><span style=\"font-family: 'Nanum Gothic';\">AI 기반 코드 생성 및 디버깅 지원</span></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><span style=\"font-family: 'Nanum Gothic';\">개발 경험이 약간 있는 사용자</span></td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><span style=\"font-family: 'Nanum Gothic';\">러버블(Replit)</span></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><span style=\"font-family: 'Nanum Gothic';\">기획서 수준의 설명만으로 작동하는 프로토타입 생성</span></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><span style=\"font-family: 'Nanum Gothic';\">비개발자, 기획자</span></td>\n</tr>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><span style=\"font-family: 'Nanum Gothic';\">구글 제미니(Gemini)</span></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><span style=\"font-family: 'Nanum Gothic';\">다양한 프로그래밍 언어 지원, 코드 생성</span></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><span style=\"font-family: 'Nanum Gothic';\">다양한 사용자층</span></td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><span style=\"font-family: 'Nanum Gothic';\">클로드(Claude)</span></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><span style=\"font-family: 'Nanum Gothic';\">자연어 이해 기반 코드 생성</span></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><span style=\"font-family: 'Nanum Gothic';\">텍스트 기반 상호작용 선호자</span></td>\n</tr>\n</tbody>\n</table>\n<div style=\"background-color: #ffebee; border-left: 4px solid #f44336; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><span style=\"font-family: 'Nanum Gothic';\"><b>⚠️ 주의하세요!</b></span><br /><span style=\"font-family: 'Nanum Gothic';\">AI 코딩 도구가 강력하지만, 생성된 코드를 그대로 사용하기 전에 목적에 맞게 작동하는지 항상 검증하는 과정이 필요합니다. AI가 항상 완벽한 코드를 생성하지는 않기 때문이죠!</span></div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b><span style=\"font-family: 'Nanum Gothic';\">미래의 개발 환경은 어떻게 변할까요?  </span></b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\"><span style=\"font-family: 'Nanum Gothic';\">바이브 코딩이 가져올 변화는 단순히 개발 방식의 변화를 넘어 산업 전반에 영향을 미칠 것입니다. 몇 가지 예측을 살펴볼까요?</span></p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; margin: 20px 0;\">\n<h3 style=\"font-size: 18px; color: #dd3333; margin: 0 0 10px;\" data-ke-size=\"size23\"><span style=\"font-family: 'Nanum Gothic';\">1인 유니콘의 시대</span></h3>\n<p style=\"margin-bottom: 0;\" data-ke-size=\"size16\"><span style=\"font-family: 'Nanum Gothic';\">소규모 인원, 극단적으로는 단 한 명의 개발자가 AI의 강력한 지원을 받아 복잡하고 규모가 큰 서비스나 게임을 빠른 속도로 개발하고 시장에 출시하는 시대가 올 수 있습니다. 1인 유니콘(기업 가치 1조원 이상) 탄생도 불가능한 이야기가 아닙니다.</span></p>\n</div>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; margin: 20px 0;\">\n<h3 style=\"font-size: 18px; color: #dd3333; margin: 0 0 10px;\" data-ke-size=\"size23\"><span style=\"font-family: 'Nanum Gothic';\">코딩이 기본 소양이 되는 시대</span></h3>\n<p style=\"margin-bottom: 0;\" data-ke-size=\"size16\"><span style=\"font-family: 'Nanum Gothic';\">코딩이라는 능력이 전문가의 영역에서 벗어나 글쓰기나 외국어처럼 누구나 갖춰야 할 기본적인 소양이 될 가능성이 있습니다. 코딩 자체보다는 AI와 효과적으로 소통하는 방법을 배우는 것이 중요해질 것입니다.</span></p>\n</div>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; margin: 20px 0;\">\n<h3 style=\"font-size: 18px; color: #dd3333; margin: 0 0 10px;\" data-ke-size=\"size23\"><span style=\"font-family: 'Nanum Gothic';\">개발자의 역할 확장</span></h3>\n<p style=\"margin-bottom: 0;\" data-ke-size=\"size16\"><span style=\"font-family: 'Nanum Gothic';\">개발자는 단순히 코드를 짜는 전문가를 넘어, 좋은 아이디어를 내는 기획자 역할과 만들어진 제품의 품질을 관리하는 역할까지 맡게 될 것입니다. 역할의 경계가 흐려지고 확장되는 것이죠.</span></p>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b><span style=\"font-family: 'Nanum Gothic';\">앞으로 중요해질 인간의 역량  </span></b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\"><span style=\"font-family: 'Nanum Gothic';\">AI가 코딩을 상당 부분 대신해주는 미래에서, 우리 인간에게 정말 중요해질 역량은 무엇일까요? 몇 가지 핵심 역량을 살펴보겠습니다.</span></p>\n<ol style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 8px;\"><span style=\"font-family: 'Nanum Gothic';\"><b>상상력과 창의성</b> - 기술 자체보다 그 기술을 활용해 어떤 새로운 가치를 만들어낼지 상상하는 능력</span></li>\n<li style=\"margin-bottom: 8px;\"><span style=\"font-family: 'Nanum Gothic';\"><b>문제 정의 능력</b> - 세상의 어떤 문제를 해결할지 명확히 정의하고 기획하는 능력</span></li>\n<li style=\"margin-bottom: 8px;\"><span style=\"font-family: 'Nanum Gothic';\"><b>AI와의 협업 능력</b> - AI라는 강력한 도구와 효과적으로 소통하고 협력하는 지혜</span></li>\n<li style=\"margin-bottom: 8px;\"><span style=\"font-family: 'Nanum Gothic';\"><b>비판적 사고</b> - AI가 생성한 결과물을 검증하고 개선할 수 있는 분석력</span></li>\n<li style=\"margin-bottom: 8px;\"><span style=\"font-family: 'Nanum Gothic';\"><b>학습 민첩성</b> - 빠르게 변화하는 기술 환경에 적응하고 새로운 도구를 습득하는 능력</span></li>\n</ol>\n<div style=\"background-color: #e8f4fd; border-left: 4px solid #1a73e8; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><span style=\"font-family: 'Nanum Gothic';\"><b>  알아두세요!</b></span><br /><span style=\"font-family: 'Nanum Gothic';\">바이브 코딩 시대에는 코드 작성 능력보다 \"무엇을\" 만들지, \"왜\" 만들어야 하는지에 대한 통찰력이 더 가치 있게 됩니다. 기술은 도구일 뿐, 그것을 어떻게 활용할지는 여전히 인간의 몫입니다.</span></div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b><span style=\"font-family: 'Nanum Gothic';\">지금 바로 시작하는 바이브 코딩  </span></b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\"><span style=\"font-family: 'Nanum Gothic';\">바이브 코딩에 관심이 생기셨나요? 지금 바로 시작할 수 있는 간단한 단계를 알려드릴게요!</span></p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; margin: 20px 0;\">\n<h3 style=\"font-size: 18px; color: #333; margin: 0 0 10px;\" data-ke-size=\"size23\"><span style=\"font-family: 'Nanum Gothic';\">초보자를 위한 바이브 코딩 시작 가이드</span></h3>\n<ol style=\"margin: 0; padding-left: 20px;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 8px;\"><span style=\"font-family: 'Nanum Gothic';\">먼저 만들고 싶은 것을 구체적으로 구상해보세요. 간단한 웹페이지, 미니 게임, 유틸리티 앱 등이 좋은 시작점입니다.</span></li>\n<li style=\"margin-bottom: 8px;\"><span style=\"font-family: 'Nanum Gothic';\">앞서 소개한 도구들 중 하나를 선택해 가입하세요. 비개발자라면 러버블(Replit)이 좋은 선택일 수 있습니다.</span></li>\n<li style=\"margin-bottom: 8px;\"><span style=\"font-family: 'Nanum Gothic';\">자연어로 원하는 기능을 설명해보세요. 예: \"사용자가 버튼을 클릭하면 랜덤한 명언을 보여주는 웹페이지를 만들어줘\"</span></li>\n<li style=\"margin-bottom: 8px;\"><span style=\"font-family: 'Nanum Gothic';\">AI가 생성한 코드를 실행해보고, 원하는 대로 작동하지 않는다면 더 자세한 지시를 추가해보세요.</span></li>\n<li style=\"margin-bottom: 0;\"><span style=\"font-family: 'Nanum Gothic';\">점진적으로 기능을 추가하며 프로젝트를 발전시켜 나가세요!</span></li>\n</ol>\n</div>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1424\" data-origin-height=\"885\"><span data-url=\"https://blog.kakaocdn.net/dn/mKi9I/btsNLCjz68w/Yuw1sLgwlO1CxE6dUsc3V0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/mKi9I/btsNLCjz68w/Yuw1sLgwlO1CxE6dUsc3V0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/mKi9I/btsNLCjz68w/Yuw1sLgwlO1CxE6dUsc3V0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FmKi9I%2FbtsNLCjz68w%2FYuw1sLgwlO1CxE6dUsc3V0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"바이브 코딩: 코딩 지식 없이 아이디어를 현실로\" loading=\"lazy\" width=\"1424\" height=\"885\" data-origin-width=\"1424\" data-origin-height=\"885\"/></span></figure>\n\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=8aFJW4BN34k\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/qvQOQ/hyYPjMH2RY/LrkqdhVIW7weSYKEe6w6A1/img.jpg?width=1280&amp;height=720&amp;face=304_48_1080_244,https://scrap.kakaocdn.net/dn/QZ5iI/hyYPgoUTG3/ZOBRcBLKvlkuS1BI6EhCH1/img.jpg?width=1280&amp;height=720&amp;face=304_48_1080_244\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"코딩은 어렵다? 이 영상 하나로 해결! | 바이브 코딩을 알고 나면!!\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/8aFJW4BN34k\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b><span style=\"font-family: 'Nanum Gothic';\">자주 묻는 질문 ❓</span></b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\"><span style=\"font-family: 'Nanum Gothic';\">Q: 정말 코딩 지식이 전혀 없어도 바이브 코딩으로 앱이나 웹사이트를 만들 수 있나요?</span></div>\n<div style=\"padding-left: 15px;\"><span style=\"font-family: 'Nanum Gothic';\">A: 네, 가능합니다! 물론 초기에는 간단한 프로젝트부터 시작하는 것이 좋습니다. 사용하는 AI 도구에 따라 다르지만, 기본적인 웹사이트나 간단한 앱은 코딩 지식 없이도 만들 수 있습니다.</span></div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\"><span style=\"font-family: 'Nanum Gothic';\">Q: 바이브 코딩으로 만든 제품의 품질은 어떤가요? 전문 개발자가 만든 것과 차이가 있나요?</span></div>\n<div style=\"padding-left: 15px;\"><span style=\"font-family: 'Nanum Gothic';\">A: AI가 생성한 코드는 점점 발전하고 있지만, 아직은 전문 개발자의 손길이 필요한 부분이 있습니다. 특히 복잡한 기능이나 대규모 시스템에서는 차이가 있을 수 있어요. 하지만 프로토타입이나 개인 프로젝트 수준에서는 충분히 훌륭한 품질을 기대할 수 있습니다.</span></div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\"><span style=\"font-family: 'Nanum Gothic';\">Q: 이런 바이브 코딩 기술이 발전하면 개발자들의 일자리가 없어지는 것 아닌가요?</span></div>\n<div style=\"padding-left: 15px;\"><span style=\"font-family: 'Nanum Gothic';\">A: 기술 발전은 일자리를 없애기보다 변화시키는 경향이 있습니다. 개발자의 역할이 단순 코딩에서 더 창의적이고 전략적인 영역으로 확장될 것입니다. 또한 AI 도구를 효과적으로 활용할 줄 아는 개발자의 가치는 오히려 더 높아질 수 있습니다.</span></div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\"><span style=\"font-family: 'Nanum Gothic';\">Q: 바이브 코딩을 배우려면 어떻게 시작해야 할까요?</span></div>\n<div style=\"padding-left: 15px;\"><span style=\"font-family: 'Nanum Gothic';\">A: 특별한 선행 학습 없이도 시작할 수 있어요! 커서, 러버블 같은 도구에 가입하고, 간단한 프로젝트부터 시도해보세요. 자연어로 원하는 것을 설명하는 방법과 AI와 효과적으로 소통하는 방법을 실전에서 배우는 것이 가장 빠른 방법입니다.</span></div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\"><span style=\"font-family: 'Nanum Gothic';\">Q: 바이브 코딩으로 상업적인 서비스나 앱을 만들어도 법적으로 문제가 없나요?</span></div>\n<div style=\"padding-left: 15px;\"><span style=\"font-family: 'Nanum Gothic';\">A: 대부분의 AI 코딩 도구는 생성된 코드의 상업적 사용을 허용합니다. 다만, 각 도구마다 이용약관이 다를 수 있으니 반드시 확인하세요. 또한, 생성된 코드가 타인의 저작권을 침해하지 않는지 검토하는 것도 중요합니다.</span><span style=\"font-family: 'Nanum Gothic';\"></span></div>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"정말 코딩 지식이 전혀 없어도 바이브 코딩으로 앱이나 웹사이트를 만들 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 가능합니다! 물론 초기에는 간단한 프로젝트부터 시작하는 것이 좋습니다. 사용하는 AI 도구에 따라 다르지만, 기본적인 웹사이트나 간단한 앱은 코딩 지식 없이도 만들 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"바이브 코딩으로 만든 제품의 품질은 어떤가요? 전문 개발자가 만든 것과 차이가 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"AI가 생성한 코드는 점점 발전하고 있지만, 아직은 전문 개발자의 손길이 필요한 부분이 있습니다. 특히 복잡한 기능이나 대규모 시스템에서는 차이가 있을 수 있어요. 하지만 프로토타입이나 개인 프로젝트 수준에서는 충분히 훌륭한 품질을 기대할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"이런 바이브 코딩 기술이 발전하면 개발자들의 일자리가 없어지는 것 아닌가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"기술 발전은 일자리를 없애기보다 변화시키는 경향이 있습니다. 개발자의 역할이 단순 코딩에서 더 창의적이고 전략적인 영역으로 확장될 것입니다. 또한 AI 도구를 효과적으로 활용할 줄 아는 개발자의 가치는 오히려 더 높아질 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"바이브 코딩을 배우려면 어떻게 시작해야 할까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"특별한 선행 학습 없이도 시작할 수 있어요! 커서, 러버블 같은 도구에 가입하고, 간단한 프로젝트부터 시도해보세요. 자연어로 원하는 것을 설명하는 방법과 AI와 효과적으로 소통하는 방법을 실전에서 배우는 것이 가장 빠른 방법입니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"바이브 코딩으로 상업적인 서비스나 앱을 만들어도 법적으로 문제가 없나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"대부분의 AI 코딩 도구는 생성된 코드의 상업적 사용을 허용합니다. 다만, 각 도구마다 이용약관이 다를 수 있으니 반드시 확인하세요. 또한, 생성된 코드가 타인의 저작권을 침해하지 않는지 검토하는 것도 중요합니다.\"\n      }\n    }\n  ]\n}\n</script>\n</div>\n</div>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "코딩은 너무 어렵다고 느끼시나요? 전문가 수준의 지식 없이도 단 몇 분 만에 웹사이트, 앱, 게임을 만들 수 있다면 어떨까요? 바이브 코딩이 여러분의 아이디어를 현실로 만들어주는 새로운 방식, 그 혁신적인 변화에 대해 알아봅시다! \n\n\n \n 여러분, 혹시 이런 경험 있으신가요? 멋진 아이디어가 떠올랐는데 \"아, 내가 코딩을 할 줄 알았다면...\"하고 포기한 적이요. 저도 그랬어요. 하지만 이제는 그런 아쉬움을 뒤로할 때가 왔습니다. 바이브 코딩이라는 혁신적인 방식이 등장했기 때문이죠! 코딩 경험이 전혀 없어도, 여러분이 원하는 것을 자연어로 설명하면 AI가 코드를 뚝딱 만들어주는 마법 같은 경험, 함께 알아볼까요?  \n반응형\n\n    \n    (adsbygoogle = window.adsbygoogle || []).push({});\n  \n바이브 코딩이란 무엇인가요?  \n바이브 코딩은 복잡한 프로그래밍 언어 대신 우리가 일상에서 사용하는 자연어로 AI에게 원하는 것을 지시하면, AI가 필요한 코드를 자동으로 생성해주는 개발 방식을 말합니다. 쉽게 말해 \"여기 파란색 버튼 하나 만들어 줘\"라고 말하면 AI가 \"아, 파란색 버튼이 필요하구나\"라고 이해하고 필요한 코드를 만들어주는 거죠.\n이는 단순히 편리함을 넘어 코딩의 민주화를 가져오고 있습니다. 이제 프로그래밍 지식이 없는 사람도 자신의 아이디어를 직접 구현할 수 있게 된 것이죠!\n  알아두세요!\n실제로 프로그래밍 경험이 전혀 없던 한 비개발자가 단 10시간 만에 요가 동작 순서를 자동으로 만들어주는 웹을 개발한 사례가 있습니다. 이런 기술 발전이 전문가와 일반인 사이의 장벽을 허물고 있어요!\n \n바이브 코딩의 놀라운 장점들  \n1. 진입 장벽의 파괴\n바이브 코딩의 가장 큰 매력은 누구나 개발자가 될 수 있다는 점입니다. 아이디어만 있다면 서비스 기획자, 창업가, 디자이너, 경영 관리자까지 누구든 자신의 생각을 소프트웨어로 구현할 수 있게 되었습니다. 특히 기술, 자금, 인력이 부족한 개인 개발자나 소규모 팀에게 새로운 가능성의 문을 열어주고 있죠.\n2. 엄청난 개발 속도\n기존에는 몇 날 며칠이 걸리던 작업을 이제는 몇 시간, 심지어 몇 분 만에 완성할 수 있습니다. 머릿속 아이디어가 즉시 눈앞에 결과물로 나타나는 경험은 정말 짜릿하고 동기부여가 됩니다. 빠르게 만들고 사용자 피드백을 받아 개선하는 실리콘밸리 스타일의 개발 문화와도 잘 맞아떨어지죠.\n3. 창의성에 집중할 수 있는 여유\n코드를 한 줄 한 줄 입력하는 반복적이고 지루한 작업은 AI가 대신 처리해주니, 우리는 더 본질적인 문제에 집중할 수 있습니다. \"이 기술로 어떤 문제를 해결할 수 있을까?\" \"어떻게 하면 사용자에게 더 도움이 되는 결과물을 만들까?\" 같은 창의적인 고민에 에너지를 쏟을 수 있게 된 거죠.\n개발의 패러다임 변화\n개발의 무게 중심이 \"얼마나 코딩을 기술적으로 잘하느냐\"에서 \"얼마나 기발하고 가치 있는 아이디어를 잘 표현하느냐\"로 이동하고 있습니다. 앞으로는 문제 정의 능력과 AI와의 효과적인 소통 및 협업 능력이 더욱 중요해질 것입니다.\n \n바이브 코딩을 가능하게 하는 도구들  ️\n바이브 코딩을 실제로 경험할 수 있게 해주는 다양한 도구들이 이미 시장에 나와 있습니다. 이러한 도구들은 자연어 지시를 실제 코드로 변환해주고, 디버깅까지 도와줍니다.\n도구/플랫폼\n특징\n적합한 사용자\n\n\n커서(Cursor)\nAI 기반 코드 생성 및 디버깅 지원\n개발 경험이 약간 있는 사용자\n\n\n러버블(Replit)\n기획서 수준의 설명만으로 작동하는 프로토타입 생성\n비개발자, 기획자\n\n\n구글 제미니(Gemini)\n다양한 프로그래밍 언어 지원, 코드 생성\n다양한 사용자층\n\n\n클로드(Claude)\n자연어 이해 기반 코드 생성\n텍스트 기반 상호작용 선호자\n\n\n\n⚠️ 주의하세요!\nAI 코딩 도구가 강력하지만, 생성된 코드를 그대로 사용하기 전에 목적에 맞게 작동하는지 항상 검증하는 과정이 필요합니다. AI가 항상 완벽한 코드를 생성하지는 않기 때문이죠!\n \n미래의 개발 환경은 어떻게 변할까요?  \n바이브 코딩이 가져올 변화는 단순히 개발 방식의 변화를 넘어 산업 전반에 영향을 미칠 것입니다. 몇 가지 예측을 살펴볼까요?\n1인 유니콘의 시대\n소규모 인원, 극단적으로는 단 한 명의 개발자가 AI의 강력한 지원을 받아 복잡하고 규모가 큰 서비스나 게임을 빠른 속도로 개발하고 시장에 출시하는 시대가 올 수 있습니다. 1인 유니콘(기업 가치 1조원 이상) 탄생도 불가능한 이야기가 아닙니다.\n코딩이 기본 소양이 되는 시대\n코딩이라는 능력이 전문가의 영역에서 벗어나 글쓰기나 외국어처럼 누구나 갖춰야 할 기본적인 소양이 될 가능성이 있습니다. 코딩 자체보다는 AI와 효과적으로 소통하는 방법을 배우는 것이 중요해질 것입니다.\n개발자의 역할 확장\n개발자는 단순히 코드를 짜는 전문가를 넘어, 좋은 아이디어를 내는 기획자 역할과 만들어진 제품의 품질을 관리하는 역할까지 맡게 될 것입니다. 역할의 경계가 흐려지고 확장되는 것이죠.\n \n앞으로 중요해질 인간의 역량  \nAI가 코딩을 상당 부분 대신해주는 미래에서, 우리 인간에게 정말 중요해질 역량은 무엇일까요? 몇 가지 핵심 역량을 살펴보겠습니다.\n상상력과 창의성 - 기술 자체보다 그 기술을 활용해 어떤 새로운 가치를 만들어낼지 상상하는 능력\n문제 정의 능력 - 세상의 어떤 문제를 해결할지 명확히 정의하고 기획하는 능력\nAI와의 협업 능력 - AI라는 강력한 도구와 효과적으로 소통하고 협력하는 지혜\n비판적 사고 - AI가 생성한 결과물을 검증하고 개선할 수 있는 분석력\n학습 민첩성 - 빠르게 변화하는 기술 환경에 적응하고 새로운 도구를 습득하는 능력\n  알아두세요!\n바이브 코딩 시대에는 코드 작성 능력보다 \"무엇을\" 만들지, \"왜\" 만들어야 하는지에 대한 통찰력이 더 가치 있게 됩니다. 기술은 도구일 뿐, 그것을 어떻게 활용할지는 여전히 인간의 몫입니다.\n \n지금 바로 시작하는 바이브 코딩  \n바이브 코딩에 관심이 생기셨나요? 지금 바로 시작할 수 있는 간단한 단계를 알려드릴게요!\n초보자를 위한 바이브 코딩 시작 가이드\n먼저 만들고 싶은 것을 구체적으로 구상해보세요. 간단한 웹페이지, 미니 게임, 유틸리티 앱 등이 좋은 시작점입니다.\n앞서 소개한 도구들 중 하나를 선택해 가입하세요. 비개발자라면 러버블(Replit)이 좋은 선택일 수 있습니다.\n자연어로 원하는 기능을 설명해보세요. 예: \"사용자가 버튼을 클릭하면 랜덤한 명언을 보여주는 웹페이지를 만들어줘\"\nAI가 생성한 코드를 실행해보고, 원하는 대로 작동하지 않는다면 더 자세한 지시를 추가해보세요.\n점진적으로 기능을 추가하며 프로젝트를 발전시켜 나가세요!\n\n\n\n\n\n \n자주 묻는 질문 ❓\nQ: 정말 코딩 지식이 전혀 없어도 바이브 코딩으로 앱이나 웹사이트를 만들 수 있나요?\nA: 네, 가능합니다! 물론 초기에는 간단한 프로젝트부터 시작하는 것이 좋습니다. 사용하는 AI 도구에 따라 다르지만, 기본적인 웹사이트나 간단한 앱은 코딩 지식 없이도 만들 수 있습니다.\nQ: 바이브 코딩으로 만든 제품의 품질은 어떤가요? 전문 개발자가 만든 것과 차이가 있나요?\nA: AI가 생성한 코드는 점점 발전하고 있지만, 아직은 전문 개발자의 손길이 필요한 부분이 있습니다. 특히 복잡한 기능이나 대규모 시스템에서는 차이가 있을 수 있어요. 하지만 프로토타입이나 개인 프로젝트 수준에서는 충분히 훌륭한 품질을 기대할 수 있습니다.\nQ: 이런 바이브 코딩 기술이 발전하면 개발자들의 일자리가 없어지는 것 아닌가요?\nA: 기술 발전은 일자리를 없애기보다 변화시키는 경향이 있습니다. 개발자의 역할이 단순 코딩에서 더 창의적이고 전략적인 영역으로 확장될 것입니다. 또한 AI 도구를 효과적으로 활용할 줄 아는 개발자의 가치는 오히려 더 높아질 수 있습니다.\nQ: 바이브 코딩을 배우려면 어떻게 시작해야 할까요?\nA: 특별한 선행 학습 없이도 시작할 수 있어요! 커서, 러버블 같은 도구에 가입하고, 간단한 프로젝트부터 시도해보세요. 자연어로 원하는 것을 설명하는 방법과 AI와 효과적으로 소통하는 방법을 실전에서 배우는 것이 가장 빠른 방법입니다.\nQ: 바이브 코딩으로 상업적인 서비스나 앱을 만들어도 법적으로 문제가 없나요?\nA: 대부분의 AI 코딩 도구는 생성된 코드의 상업적 사용을 허용합니다. 다만, 각 도구마다 이용약관이 다를 수 있으니 반드시 확인하세요. 또한, 생성된 코드가 타인의 저작권을 침해하지 않는지 검토하는 것도 중요합니다.",
        "guid": "http://muzbox.tistory.com/483580",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 언어 모델",
          "AI 코딩",
          "개발 민주화",
          "노코드",
          "로우코드",
          "바이브 코딩",
          "자연어 프로그래밍",
          "커서",
          "클로드",
          "프로그래밍",
          "프로토타입"
        ],
        "isoDate": "2025-05-07T22:03:59.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "ChatGPT 메모리 기능, 내 정보는 어디까지 안전할까?",
        "link": "http://muzbox.tistory.com/483579",
        "pubDate": "Wed, 7 May 2025 07:03:46 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483579#entry483579comment",
        "content": "<p data-ke-size=\"size16\">쉽게 잊히는 내가 ChatGPT에 알려준 모든 정보들, 그런데 AI는 절대 잊지 않는다고? 프라이버시 보호와 편리함 사이에서 균형 잡는 방법을 알려드릴게요. 당신의 디지털 기억을 안전하게 지키세요!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/bNgRbb/btsNKvk1iOG/H45tQ69sEwyWMiK3yvQikK/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/bNgRbb/btsNKvk1iOG/H45tQ69sEwyWMiK3yvQikK/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/bNgRbb/btsNKvk1iOG/H45tQ69sEwyWMiK3yvQikK/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbNgRbb%2FbtsNKvk1iOG%2FH45tQ69sEwyWMiK3yvQikK%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"ChatGPT 메모리 기능, 내 정보는 어디까지 안전할까?\" loading=\"lazy\" width=\"1280\" height=\"853\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">솔직히 말해서 요즘 ChatGPT 쓰면서 좀 이상한 느낌 받은 적 있으세요? 내가 어제 뭐라고 했는지, 심지어 몇 주 전에 언급했던 내 취향까지 정확히 기억하고 있을 때 그 미묘한 불편함 말이에요. 지난주에 제가 ChatGPT한테 제 여행 계획에 대해 물어봤는데, 갑자기 \"지난번에 말씀하신 일본 오사카 여행 계획이 어떻게 되고 있나요?\"라고 물어보더라고요. 순간 멍했어요. '내가 언제 이 AI한테 오사카 여행 얘기를 했지?' 싶었거든요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그렇게 시작된 제 디지털 프라이버시에 대한 고민, 오늘은 ChatGPT의 기억 기능과 그 숨겨진 위험성, 그리고 우리가 어떻게 개인정보를 보호할 수 있는지 함께 알아보려 해요. 여러분도 알다시피, AI가 우리에 대해 알면 알수록 더 도움이 되지만... 그만큼 위험하기도 하죠.  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  ChatGPT의 기억은 어떻게 작동할까?</b></span></h2>\n<p data-ke-size=\"size16\">ChatGPT의 기억 기능은 크게 두 가지로 나눌 수 있어요. 첫째는 **저장된 기억(Saved Memories)**이에요. 이건 여러분이 ChatGPT에게 명시적으로 기억해달라고 부탁한 정보들이죠. \"내 이름은 민지야\", \"나는 고양이 알레르기가 있어\" 같은 명확한 정보들이요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">두 번째는 **대화 기록 참조(Chat History Reference)**예요. 이건 좀 더 미묘한데, 여러분과의 이전 대화에서 자연스럽게 수집된 정보들을 말해요. 예를 들어 여러분이 \"요즘 이직 준비하는데 너무 힘들어\"라고 했다면, ChatGPT는 나중에 갑자기 \"이직 준비는 어떻게 되어가고 있나요?\"라고 물어볼 수 있죠.</p>\n<p data-ke-size=\"size16\">처음엔 되게 편리하고 인간적인 것 같죠? 근데 잠깐만요. 여기서 몇 가지 생각해볼 점이 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<blockquote data-ke-style=\"style1\">\n<p data-ke-size=\"size16\">\"AI의 기억은 인간의 기억과 달라요. 우리는 시간이 지나면 잊어버리지만, AI는 당신이 명시적으로 지우라고 할 때까지 모든 것을 완벽하게 기억합니다.\"</p>\n</blockquote>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  프라이버시 위험: 내 정보가 어디로 가는 걸까?</b></span></h2>\n<p data-ke-size=\"size16\">제가 진짜 걱정되는 건 이런 거예요. 내가 ChatGPT에게 말한 모든 것들, 내 취미부터 시작해서 건강 상태, 금융 정보, 심지어 개인적인 고민까지... 이 모든 것이 어딘가에 저장되어 있다는 거죠.</p>\n<p data-ke-size=\"size16\">여기서 몇 가지 위험 요소를 생각해볼 수 있어요:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>데이터 노출 위험</b> - ChatGPT가 여러 세션에서 정보를 수집하면서, 민감한 정보가 의도치 않게 다른 맥락에서 유출될 수 있어요.</li>\n<li><b>모델 훈련에 활용</b> - OpenAI는 명시적으로 거부하지 않는 한, 여러분의 대화 내용(기억 포함)을 모델 개선에 사용할 수 있다고 명시하고 있어요.</li>\n<li><b>제3자 데이터 공유</b> - 데이터가 어떻게 보관되고, 누가 접근 권한을 가지고 있는지 완전히 투명하지 않아요.</li>\n</ol>\n<p data-ke-size=\"size16\">제가 얼마 전에 친구들이랑 얘기하다가 \"나 요즘 이런 생각하고 있는데, 남들이 알면 좀 부끄러울 것 같아서...\" 하는 내용을 ChatGPT에 물어본 적 있었어요. 그때만 해도 그냥 일회성 대화인 줄 알았죠. 근데 몇 주 뒤에 다른 질문을 하는데 갑자기 그 내용을 언급하더라고요! 순간 식은땀이 확 나더라구요.  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b> ️ 내 정보를 지키는 방법: 프라이버시 컨트롤 활용하기</b></span></h2>\n<p data-ke-size=\"size16\">다행히도 OpenAI에서는 이런 우려를 반영해 몇 가지 프라이버시 보호 장치를 마련해뒀어요. 이걸 제대로 활용하면 우리의 디지털 흔적을 좀 더 안전하게 관리할 수 있답니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>1. 기억 기능 끄기</i></span></h3>\n<p data-ke-size=\"size16\">가장 간단한 방법은 아예 기억 기능을 꺼버리는 거예요.</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li>ChatGPT 설정으로 이동 (왼쪽 하단 프로필 아이콘 클릭)</li>\n<li>'개인화(Personalization)' &gt; '기억(Memory)' 으로 이동</li>\n<li>기억 기능을 '꺼짐(Off)'으로 설정</li>\n</ol>\n<p data-ke-size=\"size16\">이렇게 하면 ChatGPT가 세션 간에 여러분의 정보를 기억하지 않게 됩니다. 물론 이러면 매번 새로운 대화를 시작해야 하는 불편함이 있긴 하지만, 프라이버시가 더 중요하다면 좋은 선택이에요.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>2. 임시 채팅 모드 활용하기</i></span></h3>\n<p data-ke-size=\"size16\">민감한 주제에 대해 대화할 때는 임시 채팅 모드를 사용해보세요.</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li>AI 모델 메뉴 열기 (ChatGPT 3.5 또는 ChatGPT 4 라벨이 붙은 곳)</li>\n<li>'임시 채팅(Temporary chat)' 옵션 선택</li>\n</ol>\n<p data-ke-size=\"size16\">이 모드에서는 대화 내용이 기록에 남지 않고, 미래 상호작용에도 영향을 미치지 않아요. 정말 개인적인 질문이나 일회성 정보 검색에 딱이죠!</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>3. 저장된 기억 관리하기</i></span></h3>\n<p data-ke-size=\"size16\">이미 ChatGPT가 알고 있는 정보를 확인하고 싶다면:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li>설정 &gt; 개인화 &gt; 기억</li>\n<li>'기억 관리(Manage Memories)' 인터페이스로 이동</li>\n<li>저장된 정보를 검토하고, 필요에 따라 삭제하거나 수정</li>\n</ol>\n<p data-ke-size=\"size16\">와, 제가 이걸 처음 했을 때 깜짝 놀랐어요. ChatGPT가 제 직업, 취미, 심지어 제가 좋아하는 음식까지 다 기억하고 있더라고요! 바로 불필요한 것들은 삭제했죠. 그런데 이게 어디까지 삭제된 걸까요?  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  데이터 사용 옵트아웃: 내 정보로 AI를 훈련시키지 않기</b></span></h2>\n<p data-ke-size=\"size16\">여기서 더 나아가, 여러분의 데이터가 AI 모델 개선에 사용되지 않도록 설정할 수도 있어요:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li>설정으로 이동</li>\n<li>'데이터 제어(Data Controls)' 탭 선택</li>\n<li>'모델 개선을 위한 데이터 사용' 옵션을 '꺼짐'으로 설정</li>\n</ol>\n<p data-ke-size=\"size16\">ChatGPT Team, Enterprise, Edu 고객의 경우 기본적으로 이 옵션이 꺼져 있다고 하지만, 일반 사용자는 직접 확인하고 설정을 변경해야 해요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  실용적인 가이드라인: 균형 잡기</b></span></h2>\n<p data-ke-size=\"size16\">결국은 편리함과 프라이버시 사이의 균형인데요, 제가 실제로 사용하는 몇 가지 팁을 공유할게요:</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0; font-family: Arial, sans-serif;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr style=\"background-color: #5271ff; color: white; text-align: left;\">\n<th style=\"padding: 12px 15px; border: 1px solid #ddd;\">상황</th>\n<th style=\"padding: 12px 15px; border: 1px solid #ddd;\">권장 설정</th>\n<th style=\"padding: 12px 15px; border: 1px solid #ddd;\">이유</th>\n</tr>\n</thead>\n<tbody>\n<tr style=\"background-color: #f8f8f8;\">\n<td style=\"padding: 12px 15px; border: 1px solid #ddd;\">일상적인 질문</td>\n<td style=\"padding: 12px 15px; border: 1px solid #ddd;\">기본 설정</td>\n<td style=\"padding: 12px 15px; border: 1px solid #ddd;\">상대적으로 안전한 정보</td>\n</tr>\n<tr>\n<td style=\"padding: 12px 15px; border: 1px solid #ddd;\">업무 관련 문의</td>\n<td style=\"padding: 12px 15px; border: 1px solid #ddd;\">임시 채팅</td>\n<td style=\"padding: 12px 15px; border: 1px solid #ddd;\">민감한 기업 정보 보호</td>\n</tr>\n<tr style=\"background-color: #f8f8f8;\">\n<td style=\"padding: 12px 15px; border: 1px solid #ddd;\">개인 건강/재정</td>\n<td style=\"padding: 12px 15px; border: 1px solid #ddd;\">기억 끄기+임시 채팅</td>\n<td style=\"padding: 12px 15px; border: 1px solid #ddd;\">최대한의 프라이버시 보호</td>\n</tr>\n<tr>\n<td style=\"padding: 12px 15px; border: 1px solid #ddd;\">창작 활동</td>\n<td style=\"padding: 12px 15px; border: 1px solid #ddd;\">기억 켜기</td>\n<td style=\"padding: 12px 15px; border: 1px solid #ddd;\">지속적인 프로젝트 작업에 유리</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\"><b>중요한 팁:</b> 정기적으로 (한 달에 한 번 정도) 저장된 기억을 검토하고 불필요한 정보는 삭제하세요. 디지털 정리는 이제 필수예요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  무엇을 기대할 수 있을까?</b></span></h2>\n<p data-ke-size=\"size16\">기술은 계속 발전하고 있고, ChatGPT의 기억 기능도 더욱 정교해질 거예요. 앞으로는 아마도 이런 변화를 기대할 수 있을 것 같아요:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>더 세밀한 프라이버시 제어</b> - 특정 주제나 카테고리별로 기억 기능을 설정할 수 있는 옵션</li>\n<li><b>차별화된 데이터 저장 기간</b> - 일부 정보는 24시간만, 다른 정보는 영구적으로 저장하는 등의 설정</li>\n<li><b>로컬 기억 저장</b> - 개인 기기에만 정보를 저장하는 옵션 (클라우드 저장 없이)</li>\n</ol>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1667\" data-origin-height=\"1064\"><span data-url=\"https://blog.kakaocdn.net/dn/00YWP/btsNLTFhhHX/Yz2N5sPfVBDl33HBQsaCh1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/00YWP/btsNLTFhhHX/Yz2N5sPfVBDl33HBQsaCh1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/00YWP/btsNLTFhhHX/Yz2N5sPfVBDl33HBQsaCh1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F00YWP%2FbtsNLTFhhHX%2FYz2N5sPfVBDl33HBQsaCh1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"ChatGPT 개인정보 보호 가이드\" loading=\"lazy\" width=\"1667\" height=\"1064\" data-origin-width=\"1667\" data-origin-height=\"1064\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">뭐가 됐든, 우리 사용자들이 적극적으로 목소리를 내고 더 나은 프라이버시 보호를 요구하는 것이 중요해요. 내 정보는 내가 지켜야 하니까요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">저는 개인적으로 ChatGPT 활용과 프라이버시 보호 사이에서 균형을 찾아가는 중이에요. 여러분은 어떤가요? ChatGPT의 기억 기능이 도움이 된다고 느끼나요, 아니면 좀 부담스러운가요? 댓글로 여러분의 경험을 공유해주세요. 모두의 의견이 궁금해요!  </p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>자주 묻는 질문 (FAQ)</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q: ChatGPT가 저장한 내 정보를 완전히 삭제할 수 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 네, 설정에서 '기억 관리'로 들어가 저장된 정보를 검토하고 삭제할 수 있습니다. 하지만 이미 모델 훈련에 사용된 데이터는 완전히 제거하기 어려울 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>Q: 기억 기능을 끄면 ChatGPT가 덜 유용해지나요?</b></p>\n<p data-ke-size=\"size16\">A: 어느 정도는 그렇습니다. 맥락을 이해하지 못하거나 반복적인 설명이 필요할 수 있어요. 하지만 중요한 정보는 각 세션에서 다시 제공하는 것이 안전합니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 임시 채팅과 일반 채팅의 차이점은 무엇인가요?</b></p>\n<p data-ke-size=\"size16\">A: 임시 채팅은 대화 기록을 저장하지 않고, 해당 세션이 끝나면 모든 정보가 삭제됩니다. 반면 일반 채팅은 히스토리에 남고 미래 상호작용에 영향을 줍니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 비즈니스용 ChatGPT는 개인용보다 더 안전한가요?</b></p>\n<p data-ke-size=\"size16\">A: ChatGPT Team과 Enterprise 버전은 기본적으로 데이터를 모델 훈련에 사용하지 않도록 설정되어 있어 일반적으로 더 높은 프라이버시 보호를 제공합니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 다른 AI 챗봇들도 비슷한 기억 기능을 가지고 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 대부분의 현대적 AI 챗봇들은 어떤 형태로든 사용자 정보를 저장합니다. 이는 편리함을 위한 것이지만, 항상 해당 서비스의 개인정보 처리방침을 확인하는 것이 중요합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT가 저장한 내 정보를 완전히 삭제할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 설정에서 '기억 관리'로 들어가 저장된 정보를 검토하고 삭제할 수 있습니다. 하지만 이미 모델 훈련에 사용된 데이터는 완전히 제거하기 어려울 수 있어요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"기억 기능을 끄면 ChatGPT가 덜 유용해지나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"어느 정도는 그렇습니다. 맥락을 이해하지 못하거나 반복적인 설명이 필요할 수 있어요. 하지만 중요한 정보는 각 세션에서 다시 제공하는 것이 안전합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"임시 채팅과 일반 채팅의 차이점은 무엇인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"임시 채팅은 대화 기록을 저장하지 않고, 해당 세션이 끝나면 모든 정보가 삭제됩니다. 반면 일반 채팅은 히스토리에 남고 미래 상호작용에 영향을 줍니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"비즈니스용 ChatGPT는 개인용보다 더 안전한가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"ChatGPT Team과 Enterprise 버전은 기본적으로 데이터를 모델 훈련에 사용하지 않도록 설정되어 있어 일반적으로 더 높은 프라이버시 보호를 제공합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"다른 AI 챗봇들도 비슷한 기억 기능을 가지고 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"대부분의 현대적 AI 챗봇들은 어떤 형태로든 사용자 정보를 저장합니다. 이는 편리함을 위한 것이지만, 항상 해당 서비스의 개인정보 처리방침을 확인하는 것이 중요합니다.\"\n      }\n    }\n  ]\n}\n</script>",
        "contentSnippet": "쉽게 잊히는 내가 ChatGPT에 알려준 모든 정보들, 그런데 AI는 절대 잊지 않는다고? 프라이버시 보호와 편리함 사이에서 균형 잡는 방법을 알려드릴게요. 당신의 디지털 기억을 안전하게 지키세요!\n\n\n \n솔직히 말해서 요즘 ChatGPT 쓰면서 좀 이상한 느낌 받은 적 있으세요? 내가 어제 뭐라고 했는지, 심지어 몇 주 전에 언급했던 내 취향까지 정확히 기억하고 있을 때 그 미묘한 불편함 말이에요. 지난주에 제가 ChatGPT한테 제 여행 계획에 대해 물어봤는데, 갑자기 \"지난번에 말씀하신 일본 오사카 여행 계획이 어떻게 되고 있나요?\"라고 물어보더라고요. 순간 멍했어요. '내가 언제 이 AI한테 오사카 여행 얘기를 했지?' 싶었거든요.\n \n그렇게 시작된 제 디지털 프라이버시에 대한 고민, 오늘은 ChatGPT의 기억 기능과 그 숨겨진 위험성, 그리고 우리가 어떻게 개인정보를 보호할 수 있는지 함께 알아보려 해요. 여러분도 알다시피, AI가 우리에 대해 알면 알수록 더 도움이 되지만... 그만큼 위험하기도 하죠.  \n \n  ChatGPT의 기억은 어떻게 작동할까?\nChatGPT의 기억 기능은 크게 두 가지로 나눌 수 있어요. 첫째는 **저장된 기억(Saved Memories)**이에요. 이건 여러분이 ChatGPT에게 명시적으로 기억해달라고 부탁한 정보들이죠. \"내 이름은 민지야\", \"나는 고양이 알레르기가 있어\" 같은 명확한 정보들이요.\n \n두 번째는 **대화 기록 참조(Chat History Reference)**예요. 이건 좀 더 미묘한데, 여러분과의 이전 대화에서 자연스럽게 수집된 정보들을 말해요. 예를 들어 여러분이 \"요즘 이직 준비하는데 너무 힘들어\"라고 했다면, ChatGPT는 나중에 갑자기 \"이직 준비는 어떻게 되어가고 있나요?\"라고 물어볼 수 있죠.\n처음엔 되게 편리하고 인간적인 것 같죠? 근데 잠깐만요. 여기서 몇 가지 생각해볼 점이 있어요.\n \n\"AI의 기억은 인간의 기억과 달라요. 우리는 시간이 지나면 잊어버리지만, AI는 당신이 명시적으로 지우라고 할 때까지 모든 것을 완벽하게 기억합니다.\"\n \n \n  프라이버시 위험: 내 정보가 어디로 가는 걸까?\n제가 진짜 걱정되는 건 이런 거예요. 내가 ChatGPT에게 말한 모든 것들, 내 취미부터 시작해서 건강 상태, 금융 정보, 심지어 개인적인 고민까지... 이 모든 것이 어딘가에 저장되어 있다는 거죠.\n여기서 몇 가지 위험 요소를 생각해볼 수 있어요:\n데이터 노출 위험 - ChatGPT가 여러 세션에서 정보를 수집하면서, 민감한 정보가 의도치 않게 다른 맥락에서 유출될 수 있어요.\n모델 훈련에 활용 - OpenAI는 명시적으로 거부하지 않는 한, 여러분의 대화 내용(기억 포함)을 모델 개선에 사용할 수 있다고 명시하고 있어요.\n제3자 데이터 공유 - 데이터가 어떻게 보관되고, 누가 접근 권한을 가지고 있는지 완전히 투명하지 않아요.\n제가 얼마 전에 친구들이랑 얘기하다가 \"나 요즘 이런 생각하고 있는데, 남들이 알면 좀 부끄러울 것 같아서...\" 하는 내용을 ChatGPT에 물어본 적 있었어요. 그때만 해도 그냥 일회성 대화인 줄 알았죠. 근데 몇 주 뒤에 다른 질문을 하는데 갑자기 그 내용을 언급하더라고요! 순간 식은땀이 확 나더라구요.  \n \n ️ 내 정보를 지키는 방법: 프라이버시 컨트롤 활용하기\n다행히도 OpenAI에서는 이런 우려를 반영해 몇 가지 프라이버시 보호 장치를 마련해뒀어요. 이걸 제대로 활용하면 우리의 디지털 흔적을 좀 더 안전하게 관리할 수 있답니다.\n1. 기억 기능 끄기\n가장 간단한 방법은 아예 기억 기능을 꺼버리는 거예요.\nChatGPT 설정으로 이동 (왼쪽 하단 프로필 아이콘 클릭)\n'개인화(Personalization)' > '기억(Memory)' 으로 이동\n기억 기능을 '꺼짐(Off)'으로 설정\n이렇게 하면 ChatGPT가 세션 간에 여러분의 정보를 기억하지 않게 됩니다. 물론 이러면 매번 새로운 대화를 시작해야 하는 불편함이 있긴 하지만, 프라이버시가 더 중요하다면 좋은 선택이에요.\n2. 임시 채팅 모드 활용하기\n민감한 주제에 대해 대화할 때는 임시 채팅 모드를 사용해보세요.\nAI 모델 메뉴 열기 (ChatGPT 3.5 또는 ChatGPT 4 라벨이 붙은 곳)\n'임시 채팅(Temporary chat)' 옵션 선택\n이 모드에서는 대화 내용이 기록에 남지 않고, 미래 상호작용에도 영향을 미치지 않아요. 정말 개인적인 질문이나 일회성 정보 검색에 딱이죠!\n3. 저장된 기억 관리하기\n이미 ChatGPT가 알고 있는 정보를 확인하고 싶다면:\n설정 > 개인화 > 기억\n'기억 관리(Manage Memories)' 인터페이스로 이동\n저장된 정보를 검토하고, 필요에 따라 삭제하거나 수정\n와, 제가 이걸 처음 했을 때 깜짝 놀랐어요. ChatGPT가 제 직업, 취미, 심지어 제가 좋아하는 음식까지 다 기억하고 있더라고요! 바로 불필요한 것들은 삭제했죠. 그런데 이게 어디까지 삭제된 걸까요?  \n \n  데이터 사용 옵트아웃: 내 정보로 AI를 훈련시키지 않기\n여기서 더 나아가, 여러분의 데이터가 AI 모델 개선에 사용되지 않도록 설정할 수도 있어요:\n설정으로 이동\n'데이터 제어(Data Controls)' 탭 선택\n'모델 개선을 위한 데이터 사용' 옵션을 '꺼짐'으로 설정\nChatGPT Team, Enterprise, Edu 고객의 경우 기본적으로 이 옵션이 꺼져 있다고 하지만, 일반 사용자는 직접 확인하고 설정을 변경해야 해요.\n \n  실용적인 가이드라인: 균형 잡기\n결국은 편리함과 프라이버시 사이의 균형인데요, 제가 실제로 사용하는 몇 가지 팁을 공유할게요:\n상황\n권장 설정\n이유\n\n\n\n\n일상적인 질문\n기본 설정\n상대적으로 안전한 정보\n\n\n업무 관련 문의\n임시 채팅\n민감한 기업 정보 보호\n\n\n개인 건강/재정\n기억 끄기+임시 채팅\n최대한의 프라이버시 보호\n\n\n창작 활동\n기억 켜기\n지속적인 프로젝트 작업에 유리\n\n\n\n중요한 팁: 정기적으로 (한 달에 한 번 정도) 저장된 기억을 검토하고 불필요한 정보는 삭제하세요. 디지털 정리는 이제 필수예요!\n \n  무엇을 기대할 수 있을까?\n기술은 계속 발전하고 있고, ChatGPT의 기억 기능도 더욱 정교해질 거예요. 앞으로는 아마도 이런 변화를 기대할 수 있을 것 같아요:\n더 세밀한 프라이버시 제어 - 특정 주제나 카테고리별로 기억 기능을 설정할 수 있는 옵션\n차별화된 데이터 저장 기간 - 일부 정보는 24시간만, 다른 정보는 영구적으로 저장하는 등의 설정\n로컬 기억 저장 - 개인 기기에만 정보를 저장하는 옵션 (클라우드 저장 없이)\n\n\n \n뭐가 됐든, 우리 사용자들이 적극적으로 목소리를 내고 더 나은 프라이버시 보호를 요구하는 것이 중요해요. 내 정보는 내가 지켜야 하니까요!\n \n저는 개인적으로 ChatGPT 활용과 프라이버시 보호 사이에서 균형을 찾아가는 중이에요. 여러분은 어떤가요? ChatGPT의 기억 기능이 도움이 된다고 느끼나요, 아니면 좀 부담스러운가요? 댓글로 여러분의 경험을 공유해주세요. 모두의 의견이 궁금해요!  \n자주 묻는 질문 (FAQ)\nQ: ChatGPT가 저장한 내 정보를 완전히 삭제할 수 있나요?\nA: 네, 설정에서 '기억 관리'로 들어가 저장된 정보를 검토하고 삭제할 수 있습니다. 하지만 이미 모델 훈련에 사용된 데이터는 완전히 제거하기 어려울 수 있어요.\nQ: 기억 기능을 끄면 ChatGPT가 덜 유용해지나요?\nA: 어느 정도는 그렇습니다. 맥락을 이해하지 못하거나 반복적인 설명이 필요할 수 있어요. 하지만 중요한 정보는 각 세션에서 다시 제공하는 것이 안전합니다.\nQ: 임시 채팅과 일반 채팅의 차이점은 무엇인가요?\nA: 임시 채팅은 대화 기록을 저장하지 않고, 해당 세션이 끝나면 모든 정보가 삭제됩니다. 반면 일반 채팅은 히스토리에 남고 미래 상호작용에 영향을 줍니다.\nQ: 비즈니스용 ChatGPT는 개인용보다 더 안전한가요?\nA: ChatGPT Team과 Enterprise 버전은 기본적으로 데이터를 모델 훈련에 사용하지 않도록 설정되어 있어 일반적으로 더 높은 프라이버시 보호를 제공합니다.\nQ: 다른 AI 챗봇들도 비슷한 기억 기능을 가지고 있나요?\nA: 대부분의 현대적 AI 챗봇들은 어떤 형태로든 사용자 정보를 저장합니다. 이는 편리함을 위한 것이지만, 항상 해당 서비스의 개인정보 처리방침을 확인하는 것이 중요합니다.\n \n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT가 저장한 내 정보를 완전히 삭제할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 설정에서 '기억 관리'로 들어가 저장된 정보를 검토하고 삭제할 수 있습니다. 하지만 이미 모델 훈련에 사용된 데이터는 완전히 제거하기 어려울 수 있어요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"기억 기능을 끄면 ChatGPT가 덜 유용해지나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"어느 정도는 그렇습니다. 맥락을 이해하지 못하거나 반복적인 설명이 필요할 수 있어요. 하지만 중요한 정보는 각 세션에서 다시 제공하는 것이 안전합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"임시 채팅과 일반 채팅의 차이점은 무엇인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"임시 채팅은 대화 기록을 저장하지 않고, 해당 세션이 끝나면 모든 정보가 삭제됩니다. 반면 일반 채팅은 히스토리에 남고 미래 상호작용에 영향을 줍니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"비즈니스용 ChatGPT는 개인용보다 더 안전한가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"ChatGPT Team과 Enterprise 버전은 기본적으로 데이터를 모델 훈련에 사용하지 않도록 설정되어 있어 일반적으로 더 높은 프라이버시 보호를 제공합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"다른 AI 챗봇들도 비슷한 기억 기능을 가지고 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"대부분의 현대적 AI 챗봇들은 어떤 형태로든 사용자 정보를 저장합니다. 이는 편리함을 위한 것이지만, 항상 해당 서비스의 개인정보 처리방침을 확인하는 것이 중요합니다.\"\n      }\n    }\n  ]\n}",
        "guid": "http://muzbox.tistory.com/483579",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 언어 모델",
          "ai 데이터 사용",
          "AI 프라이버시",
          "chatgpt 기억 기능",
          "openai 설정",
          "개인정보 보호",
          "기억 관리",
          "데이터 제어",
          "디지털 프라이버시",
          "임시 채팅 모드",
          "챗봇 메모리"
        ],
        "isoDate": "2025-05-06T22:03:46.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "AI PC, AI 노트북 - 지금 구매해야 할까? 알아두면 좋은 5가지 진실",
        "link": "http://muzbox.tistory.com/483578",
        "pubDate": "Tue, 6 May 2025 18:50:11 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483578#entry483578comment",
        "content": "<p data-ke-size=\"size16\"><b></b> 요즘 AI PC 열풍이 불고 있는데, 솔직히 그거 지금 필요 없을 수도 있어요. 왜 지금 AI PC 구매를 미뤄도 괜찮은지, 제가 알아본 진짜 이유들을 공유할게요. 과소비 전에 꼭 읽어보세요!  </p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/tTuT5/btsNJSudK5T/EbN0GZB0JEZBBSapbr7Ro1/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/tTuT5/btsNJSudK5T/EbN0GZB0JEZBBSapbr7Ro1/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/tTuT5/btsNJSudK5T/EbN0GZB0JEZBBSapbr7Ro1/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FtTuT5%2FbtsNJSudK5T%2FEbN0GZB0JEZBBSapbr7Ro1%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1280\" height=\"853\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여러분, 요즘 컴퓨터 매장만 가도 'AI PC'라는 단어가 안 보이는 곳이 없더라고요. 마치 이거 안 사면 뒤처지는 것 같은 느낌이랄까... 근데 말이죠, 잠깐! 과연 지금 당장 AI PC가 필요한 걸까요? 솔직히 저도 한 번쯤 끌렸지만, 좀 더 깊이 알아보니 생각보다 복잡한 문제더라고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">지난주에 오랜만에 친구를 만났는데, 걔가 막 새로운 AI PC 샀다고 자랑하는데 왠지 모르게 그냥 평범해 보이더라고요. \"야, 이게 뭐가 특별해?\" 했더니 눈치 좀 보더라구요.   사실 저도 궁금해서 이것저것 찾아봤는데, 생각보다 복잡한 이야기더라고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">AI PC란 뭐냐면요, 기본적으로 온디바이스 AI 작업을 처리할 수 있는 NPU(Neural Processing Unit)가 내장된 컴퓨터를 말합니다. 인텔이나 AMD, 퀄컴 같은 회사들이 NPU를 탑재한 프로세서를 출시하면서 AI PC 시장을 이끌고 있어요.</p>\n<p data-ke-size=\"size16\">근데 여기서 제가 좀 의문이 들었어요. \"과연 지금 당장 이게 필요할까?\" 이 질문에 대한 답을 찾다 보니, 의외로 많은 사람들이 AI PC 구매를 서두르지 않아도 되는 이유가 있더라고요. 한번 같이 살펴볼까요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>왜 지금 AI PC가 필요 없을 수도 있는지 솔직히 말해볼게요  </b></span></h2>\n<h3 data-ke-size=\"size23\">1. 현재는 AI PC를 위한 앱이 많지 않아요</h3>\n<p data-ke-size=\"size16\">사실 가장 큰 문제는 AI PC의 성능을 제대로 활용할 수 있는 앱이 아직 많지 않다는 거예요. 마이크로소프트의 코파일럿+ 기능이나 어도비의 AI 기능 같은 것들이 있긴 하지만, 아직까지는 제한적이에요. 솔직히 말해서 대부분의 일반 사용자들은 이런 기능이 없어도 별 불편함을 못 느낄 수도 있어요.</p>\n<p data-ke-size=\"size16\">제가 실제로 디자인 업무를 하는 친구한테 물어봤는데, \"그거 없어도 지금 하던 작업 다 할 수 있어\"라고 하더라고요. 물론 앞으로는 상황이 달라지겠지만, 당장은... 음... 그닥?</p>\n<h3 data-ke-size=\"size23\">2. 클라우드 AI도 충분히 좋아요</h3>\n<p data-ke-size=\"size16\">요즘은 클라우드 기반 AI 서비스가 정말 잘 되어 있어요. ChatGPT, Claude, 구글 Gemini 같은 서비스들이 대표적인데, 이런 서비스들은 우리가 가진 기기의 성능에 상관없이 강력한 AI 기능을 제공해 줘요. 굳이 비싼 하드웨어를 구매하지 않아도, 인터넷만 연결되어 있다면 이런 서비스들을 활용할 수 있다는 거죠.</p>\n<p data-ke-size=\"size16\">작년에 제가 오래된 노트북으로도 ChatGPT 잘만 썼거든요. 버벅거림도 없었고, 솔직히 온디바이스 AI가 주는 장점을 크게 못 느꼈어요. 물론 오프라인에서도 AI를 써야 한다면 이야기가 달라지겠지만, 대부분의 상황에선 클라우드 AI로도 충분하더라고요.</p>\n<h3 data-ke-size=\"size23\">3. 성능이 계속 발전 중이에요</h3>\n<p data-ke-size=\"size16\">기술은 항상 발전해요. 지금 출시된 첫 세대 AI PC보다 앞으로 출시될 모델들이 더 강력하고 효율적일 가능성이 높아요. 특히 NPU 성능은 앞으로 더 발전할 여지가 많죠.</p>\n<p data-ke-size=\"size16\">제 경험상, 신기술이 나오면 1~2년 정도 기다렸다가 구매하는 게 좋더라고요. 초기 모델은 항상 문제가 있기 마련이고, 가격도 비싸고... 조금만 기다리면 더 좋은 성능에 더 저렴한 가격으로 살 수 있으니까요.</p>\n<h3 data-ke-size=\"size23\">4. 기존 PC도 AI 작업 가능해요</h3>\n<p data-ke-size=\"size16\">사실 NPU가 없어도 AI 작업이 불가능한 건 아니에요. 현대의 CPU와 GPU도 AI 작업을 처리할 수 있어요. 물론 NPU만큼 효율적이진 않지만, 대부분의 일반적인 AI 작업은 기존 하드웨어로도 충분히 가능해요.</p>\n<p data-ke-size=\"size16\">제 컴퓨터도 꽤 오래됐는데, 스테이블 디퓨전 같은 AI 이미지 생성 프로그램도 돌아가고, 간단한 AI 모델도 실행할 수 있더라고요. 물론 좀 느리긴 하지만... 쓸 수는 있어요.</p>\n<h3 data-ke-size=\"size23\">5. 배터리 효율성은 아직 검증 중이에요</h3>\n<p data-ke-size=\"size16\">제조사들은 AI PC가 배터리 효율성을 높여준다고 주장하지만, 실제 사용 환경에서 이것이 얼마나 효과적인지는 아직 완전히 검증되지 않았어요. 특히 NPU를 활용하는 앱이 많지 않은 상황에서는 배터리 효율 향상을 체감하기 어려울 수 있어요.</p>\n<p data-ke-size=\"size16\">얼마 전에 AI PC를 구매한 동료가 있는데, 배터리 지속 시간이 기존 노트북과 크게 다르지 않다고 하더라고요. \"그니까요, 광고에서 말하는 것만큼 혁신적이진 않아요.\" 라고 말하더라구요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>그럼 언제 AI PC가 필요할까요?  </b></span></h2>\n<p data-ke-size=\"size16\">물론, 모든 사람에게 AI PC가 불필요하다는 건 아니에요. 특정 상황에서는 지금이라도 AI PC가 유용할 수 있어요:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>개발자나 연구자</b>: AI 모델을 직접 개발하거나 테스트하는 사람들에게는 온디바이스 NPU가 유용할 수 있어요.</li>\n<li><b>프라이버시 중시</b>: 모든 AI 작업을 로컬에서 처리하고 싶어서 클라우드 서비스를 신뢰하지 않는 사용자들에게는 AI PC가 좋은 선택일 수 있어요.</li>\n<li><b>얼리어답터</b>: 새로운 기술을 가장 먼저 경험하고 싶은 분들이라면, 첫 세대 AI PC도 충분히 매력적일 수 있겠죠.</li>\n<li><b>특정 AI 앱 사용자</b>: 코파일럿+나 어도비의 온디바이스 AI 기능을 적극적으로 활용하는 사용자라면 AI PC가 유용할 수 있어요.</li>\n</ol>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1749\" data-origin-height=\"985\"><span data-url=\"https://blog.kakaocdn.net/dn/bhaTBp/btsNKzOtzSa/KZYeQLdL90kK0NXVuK5bSk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bhaTBp/btsNKzOtzSa/KZYeQLdL90kK0NXVuK5bSk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bhaTBp/btsNKzOtzSa/KZYeQLdL90kK0NXVuK5bSk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbhaTBp%2FbtsNKzOtzSa%2FKZYeQLdL90kK0NXVuK5bSk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"AI PC, 지금 당장 필요할까요?\" loading=\"lazy\" width=\"1749\" height=\"985\" data-origin-width=\"1749\" data-origin-height=\"985\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>미래는 AI PC의 것일까요?  </b></span></h2>\n<p data-ke-size=\"size16\">솔직히 AI PC는 분명 미래의 트렌드가 될 거예요. 업계 전문가들도 2025년부터 AI PC 시장이 본격적으로 성장할 것으로 예측하고 있고, 더 많은 앱과 서비스가 NPU를 활용하게 될 거예요. 그렇기 때문에 결국에는 대부분의 PC가 AI PC가 될 가능성이 높아요.</p>\n<p data-ke-size=\"size16\">하지만 지금 당장은... 음... 좀 지켜봐도 괜찮지 않을까요? 기술은 항상 발전하고, 첫 세대 제품은 항상 시행착오를 겪기 마련이니까요. 제 개인적인 생각으론, 대부분의 사용자들은 1-2년 정도 더 기다렸다가 AI PC 시장이 성숙해지고 관련 앱 생태계가 더 발전한 후에 구매해도 늦지 않을 것 같아요.</p>\n<p data-ke-size=\"size16\">여러분은 어떻게 생각하세요? 이미 AI PC를 구매하셨나요, 아니면 기다리고 계신가요? 댓글로 의견 공유해 주시면 좋겠어요!  </p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>자주 묻는 질문 (FAQ)</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q: AI PC와 일반 PC의 가장 큰 차이점은 무엇인가요?</b></p>\n<p data-ke-size=\"size16\">A: NPU(Neural Processing Unit)의 유무입니다. AI PC는 AI 작업을 전용으로 처리하는 NPU가 탑재되어 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: NPU가 없어도 AI 작업이 가능한가요?</b></p>\n<p data-ke-size=\"size16\">A: 네, 가능합니다. 기존 CPU와 GPU로도 AI 작업을 처리할 수 있지만, 효율성 측면에서는 NPU보다 떨어질 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: AI PC가 제공하는 실질적인 장점은 무엇인가요?</b></p>\n<p data-ke-size=\"size16\">A: 온디바이스 AI 처리 능력, 프라이버시 강화, 오프라인 환경에서의 AI 사용, 이론적으로는 더 나은 배터리 효율성 등이 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 일반 사용자도 AI PC가 필요한가요?</b></p>\n<p data-ke-size=\"size16\">A: 현재로서는 대부분의 일반 사용자에게 필수적이지 않습니다. 클라우드 AI 서비스로도 충분히 많은 기능을 이용할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 언제쯤 AI PC가 대중화될까요?</b></p>\n<p data-ke-size=\"size16\">A: 업계 전망에 따르면 2025년부터 본격적으로 시장이 성장할 것으로 예상됩니다.<b></b></p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"AI PC와 일반 PC의 가장 큰 차이점은 무엇인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"NPU(Neural Processing Unit)의 유무입니다. AI PC는 AI 작업을 전용으로 처리하는 NPU가 탑재되어 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"NPU가 없어도 AI 작업이 가능한가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 가능합니다. 기존 CPU와 GPU로도 AI 작업을 처리할 수 있지만, 효율성 측면에서는 NPU보다 떨어질 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"AI PC가 제공하는 실질적인 장점은 무엇인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"온디바이스 AI 처리 능력, 프라이버시 강화, 오프라인 환경에서의 AI 사용, 이론적으로는 더 나은 배터리 효율성 등이 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"일반 사용자도 AI PC가 필요한가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"현재로서는 대부분의 일반 사용자에게 필수적이지 않습니다. 클라우드 AI 서비스로도 충분히 많은 기능을 이용할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"언제쯤 AI PC가 대중화될까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"업계 전망에 따르면 2025년부터 본격적으로 시장이 성장할 것으로 예상됩니다.\"\n      }\n    }\n  ]\n}\n</script>",
        "contentSnippet": "요즘 AI PC 열풍이 불고 있는데, 솔직히 그거 지금 필요 없을 수도 있어요. 왜 지금 AI PC 구매를 미뤄도 괜찮은지, 제가 알아본 진짜 이유들을 공유할게요. 과소비 전에 꼭 읽어보세요!  \n\n\n \n여러분, 요즘 컴퓨터 매장만 가도 'AI PC'라는 단어가 안 보이는 곳이 없더라고요. 마치 이거 안 사면 뒤처지는 것 같은 느낌이랄까... 근데 말이죠, 잠깐! 과연 지금 당장 AI PC가 필요한 걸까요? 솔직히 저도 한 번쯤 끌렸지만, 좀 더 깊이 알아보니 생각보다 복잡한 문제더라고요.\n \n지난주에 오랜만에 친구를 만났는데, 걔가 막 새로운 AI PC 샀다고 자랑하는데 왠지 모르게 그냥 평범해 보이더라고요. \"야, 이게 뭐가 특별해?\" 했더니 눈치 좀 보더라구요.   사실 저도 궁금해서 이것저것 찾아봤는데, 생각보다 복잡한 이야기더라고요.\n \nAI PC란 뭐냐면요, 기본적으로 온디바이스 AI 작업을 처리할 수 있는 NPU(Neural Processing Unit)가 내장된 컴퓨터를 말합니다. 인텔이나 AMD, 퀄컴 같은 회사들이 NPU를 탑재한 프로세서를 출시하면서 AI PC 시장을 이끌고 있어요.\n근데 여기서 제가 좀 의문이 들었어요. \"과연 지금 당장 이게 필요할까?\" 이 질문에 대한 답을 찾다 보니, 의외로 많은 사람들이 AI PC 구매를 서두르지 않아도 되는 이유가 있더라고요. 한번 같이 살펴볼까요?\n \n왜 지금 AI PC가 필요 없을 수도 있는지 솔직히 말해볼게요  \n1. 현재는 AI PC를 위한 앱이 많지 않아요\n사실 가장 큰 문제는 AI PC의 성능을 제대로 활용할 수 있는 앱이 아직 많지 않다는 거예요. 마이크로소프트의 코파일럿+ 기능이나 어도비의 AI 기능 같은 것들이 있긴 하지만, 아직까지는 제한적이에요. 솔직히 말해서 대부분의 일반 사용자들은 이런 기능이 없어도 별 불편함을 못 느낄 수도 있어요.\n제가 실제로 디자인 업무를 하는 친구한테 물어봤는데, \"그거 없어도 지금 하던 작업 다 할 수 있어\"라고 하더라고요. 물론 앞으로는 상황이 달라지겠지만, 당장은... 음... 그닥?\n2. 클라우드 AI도 충분히 좋아요\n요즘은 클라우드 기반 AI 서비스가 정말 잘 되어 있어요. ChatGPT, Claude, 구글 Gemini 같은 서비스들이 대표적인데, 이런 서비스들은 우리가 가진 기기의 성능에 상관없이 강력한 AI 기능을 제공해 줘요. 굳이 비싼 하드웨어를 구매하지 않아도, 인터넷만 연결되어 있다면 이런 서비스들을 활용할 수 있다는 거죠.\n작년에 제가 오래된 노트북으로도 ChatGPT 잘만 썼거든요. 버벅거림도 없었고, 솔직히 온디바이스 AI가 주는 장점을 크게 못 느꼈어요. 물론 오프라인에서도 AI를 써야 한다면 이야기가 달라지겠지만, 대부분의 상황에선 클라우드 AI로도 충분하더라고요.\n3. 성능이 계속 발전 중이에요\n기술은 항상 발전해요. 지금 출시된 첫 세대 AI PC보다 앞으로 출시될 모델들이 더 강력하고 효율적일 가능성이 높아요. 특히 NPU 성능은 앞으로 더 발전할 여지가 많죠.\n제 경험상, 신기술이 나오면 1~2년 정도 기다렸다가 구매하는 게 좋더라고요. 초기 모델은 항상 문제가 있기 마련이고, 가격도 비싸고... 조금만 기다리면 더 좋은 성능에 더 저렴한 가격으로 살 수 있으니까요.\n4. 기존 PC도 AI 작업 가능해요\n사실 NPU가 없어도 AI 작업이 불가능한 건 아니에요. 현대의 CPU와 GPU도 AI 작업을 처리할 수 있어요. 물론 NPU만큼 효율적이진 않지만, 대부분의 일반적인 AI 작업은 기존 하드웨어로도 충분히 가능해요.\n제 컴퓨터도 꽤 오래됐는데, 스테이블 디퓨전 같은 AI 이미지 생성 프로그램도 돌아가고, 간단한 AI 모델도 실행할 수 있더라고요. 물론 좀 느리긴 하지만... 쓸 수는 있어요.\n5. 배터리 효율성은 아직 검증 중이에요\n제조사들은 AI PC가 배터리 효율성을 높여준다고 주장하지만, 실제 사용 환경에서 이것이 얼마나 효과적인지는 아직 완전히 검증되지 않았어요. 특히 NPU를 활용하는 앱이 많지 않은 상황에서는 배터리 효율 향상을 체감하기 어려울 수 있어요.\n얼마 전에 AI PC를 구매한 동료가 있는데, 배터리 지속 시간이 기존 노트북과 크게 다르지 않다고 하더라고요. \"그니까요, 광고에서 말하는 것만큼 혁신적이진 않아요.\" 라고 말하더라구요.\n \n그럼 언제 AI PC가 필요할까요?  \n물론, 모든 사람에게 AI PC가 불필요하다는 건 아니에요. 특정 상황에서는 지금이라도 AI PC가 유용할 수 있어요:\n개발자나 연구자: AI 모델을 직접 개발하거나 테스트하는 사람들에게는 온디바이스 NPU가 유용할 수 있어요.\n프라이버시 중시: 모든 AI 작업을 로컬에서 처리하고 싶어서 클라우드 서비스를 신뢰하지 않는 사용자들에게는 AI PC가 좋은 선택일 수 있어요.\n얼리어답터: 새로운 기술을 가장 먼저 경험하고 싶은 분들이라면, 첫 세대 AI PC도 충분히 매력적일 수 있겠죠.\n특정 AI 앱 사용자: 코파일럿+나 어도비의 온디바이스 AI 기능을 적극적으로 활용하는 사용자라면 AI PC가 유용할 수 있어요.\n\n\n미래는 AI PC의 것일까요?  \n솔직히 AI PC는 분명 미래의 트렌드가 될 거예요. 업계 전문가들도 2025년부터 AI PC 시장이 본격적으로 성장할 것으로 예측하고 있고, 더 많은 앱과 서비스가 NPU를 활용하게 될 거예요. 그렇기 때문에 결국에는 대부분의 PC가 AI PC가 될 가능성이 높아요.\n하지만 지금 당장은... 음... 좀 지켜봐도 괜찮지 않을까요? 기술은 항상 발전하고, 첫 세대 제품은 항상 시행착오를 겪기 마련이니까요. 제 개인적인 생각으론, 대부분의 사용자들은 1-2년 정도 더 기다렸다가 AI PC 시장이 성숙해지고 관련 앱 생태계가 더 발전한 후에 구매해도 늦지 않을 것 같아요.\n여러분은 어떻게 생각하세요? 이미 AI PC를 구매하셨나요, 아니면 기다리고 계신가요? 댓글로 의견 공유해 주시면 좋겠어요!  \n자주 묻는 질문 (FAQ)\nQ: AI PC와 일반 PC의 가장 큰 차이점은 무엇인가요?\nA: NPU(Neural Processing Unit)의 유무입니다. AI PC는 AI 작업을 전용으로 처리하는 NPU가 탑재되어 있습니다.\nQ: NPU가 없어도 AI 작업이 가능한가요?\nA: 네, 가능합니다. 기존 CPU와 GPU로도 AI 작업을 처리할 수 있지만, 효율성 측면에서는 NPU보다 떨어질 수 있습니다.\nQ: AI PC가 제공하는 실질적인 장점은 무엇인가요?\nA: 온디바이스 AI 처리 능력, 프라이버시 강화, 오프라인 환경에서의 AI 사용, 이론적으로는 더 나은 배터리 효율성 등이 있습니다.\nQ: 일반 사용자도 AI PC가 필요한가요?\nA: 현재로서는 대부분의 일반 사용자에게 필수적이지 않습니다. 클라우드 AI 서비스로도 충분히 많은 기능을 이용할 수 있습니다.\nQ: 언제쯤 AI PC가 대중화될까요?\nA: 업계 전망에 따르면 2025년부터 본격적으로 시장이 성장할 것으로 예상됩니다.\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"AI PC와 일반 PC의 가장 큰 차이점은 무엇인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"NPU(Neural Processing Unit)의 유무입니다. AI PC는 AI 작업을 전용으로 처리하는 NPU가 탑재되어 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"NPU가 없어도 AI 작업이 가능한가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 가능합니다. 기존 CPU와 GPU로도 AI 작업을 처리할 수 있지만, 효율성 측면에서는 NPU보다 떨어질 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"AI PC가 제공하는 실질적인 장점은 무엇인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"온디바이스 AI 처리 능력, 프라이버시 강화, 오프라인 환경에서의 AI 사용, 이론적으로는 더 나은 배터리 효율성 등이 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"일반 사용자도 AI PC가 필요한가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"현재로서는 대부분의 일반 사용자에게 필수적이지 않습니다. 클라우드 AI 서비스로도 충분히 많은 기능을 이용할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"언제쯤 AI PC가 대중화될까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"업계 전망에 따르면 2025년부터 본격적으로 시장이 성장할 것으로 예상됩니다.\"\n      }\n    }\n  ]\n}",
        "guid": "http://muzbox.tistory.com/483578",
        "categories": [
          "신제품 리뷰/컴퓨터",
          "AI PC",
          "ai 앱 생태계",
          "AI노트북",
          "NPU",
          "개인정보 보호",
          "배터리 효율성",
          "온디바이스 AI",
          "첫 세대 기술",
          "코파일럿+",
          "클라우드 ai"
        ],
        "isoDate": "2025-05-06T09:50:11.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "(RULIWEB`Д')/",
        "title": "[PC] Welcome Back Commander, 템페스트 라이징",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2303",
        "pubDate": "Fri, 09 May 2025 15:15:37 +0900",
        "author": "(RULIWEB`Д')/",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/25/05/09/196b3af38134c329e.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2025-05-09T06:15:37.000Z"
      },
      {
        "creator": "［RULIWEB］",
        "title": "[PS5] 능동적이고 액션 중심적 변화 그리고 메시지, '데스 스트랜딩 2'",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2302",
        "pubDate": "Thu, 08 May 2025 16:01:23 +0900",
        "author": "［RULIWEB］",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/25/05/08/196aeadd23b5104c1.jpg\">",
        "contentSnippet": "",
        "categories": [
          "프리뷰"
        ],
        "isoDate": "2025-05-08T07:01:23.000Z"
      },
      {
        "creator": "｜RULIWEB｜",
        "title": "악역영애 4컷 만화 - 1화, 악역영애 시작인데스와",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2301",
        "pubDate": "Wed, 07 May 2025 12:50:05 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i3.ruliweb.com/thumb/25/05/07/196a8d9016751ad6b.jpg\">",
        "contentSnippet": "",
        "categories": [
          "웹툰"
        ],
        "isoDate": "2025-05-07T03:50:05.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "C++ -  eventpp 분석",
        "link": "https://jacking75.github.io/cpp_lib_20250508/",
        "pubDate": "Thu, 08 May 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vQg7eqYwBK6GqSBvtn9M-ko_is2FJuEFZ5xsNyrBcGSrKPqj3nLLfiQU3fnlyVeIODE5SHmy1yE_emC/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/cpp_lib_20250508/",
        "isoDate": "2025-05-07T15:00:00.000Z"
      },
      {
        "title": "C++ - EASTL 디자인",
        "link": "https://jacking75.github.io/Cpp_20250505/",
        "pubDate": "Mon, 05 May 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vQAsPSfhJPm0pu2EahSwusZjZNPeTETbxklThH8Lm8GliNfLLtn71WRKpv_NkF9CkLuYHEFAqGiA7xa/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/Cpp_20250505/",
        "isoDate": "2025-05-04T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": [
      {
        "title": "서비스 텐션",
        "link": "https://jeho.page/essay/2025/05/08/service-tension.html",
        "pubDate": "2025-05-07T23:44:00.000Z",
        "author": "김재호",
        "content": "<p>카카오에 처음 들어가서 인상적이었던 점은 카톡으로 카톡을 모니터링하던 것이었습니다.<br />\n오호 재밌는걸. C 컴파일러로 C언어를 만드는 느낌이 이런 건가?</p>\n\n<p>카톡 시스템의 장애를 비롯하여 사내 서비스의 수많은 부분을 모니터링했습니다.<br />\n그중 카톡의 국가별 가입자 수를 10분마다 리포팅 해주던 채팅방이 있었습니다.</p>\n\n<p>2012년. 때는 바야흐로 모바일 메신저 왕좌의 게임 시대.<br />\n물론 한국 가입자가 가장 많았지만, 전 세계 각국에서 꽤 많은 사용자들이 가입을 했습니다.</p>\n\n<p>갑자기 브라질의 가입자 수가 늘면 누군가가 채팅방에 말했습니다.<br />\n“어? 브라질에서 튀었네요.”<br />\n“무슨 일이지?”<br />\n끈질긴 누군가가 기어이 찾아내서 공유했습니다.<br />\n“찾아보니 기사가 났어요.”</p>\n\n<p>이런 경험은 처음이었습니다. 아하 포인트를 느꼈던 것 같습니다.<br />\n서비스라는 건 이렇게 하는 거구나.</p>\n\n<p>모니터링 방에는 서비스에 관심 있는 사람들이 자발적으로 들어와 있었는데, 이상 징후를 특히 잘 포착하는 사람들이 있었습니다.<br />\n모니터링 방이 수도 없이 많이 있었는데 누군가는 그냥 지나치는 정보들을 날카롭게 포착해서 공유하는 사람들.</p>\n\n<p>이런 사람들이 그렇게 멋져 보일 수가 없었습니다. 저도 그런 사람이 되고 싶었습니다.<br />\n그렇게 하려면 서비스 텐션을 높여야 했습니다. 몸에 긴장을 풀어버려선 안 됩니다.<br />\n온 신경을 집중해야 하니 집에서 쉴 때도 영화 같은 걸 보기가 힘들었습니다. 계속 신경이 쓰여서.</p>\n\n<p>이상 징후를 찾아내고 원인을 끈질기게 탐색하는 걸 카카오에서 배웠습니다.<br />\n서비스 안에서 작은 파동까지 탐지해 내는 능력은 소중합니다. 긴장을 풀고 느슨하게 있으면 이 능력이 발휘되지 않습니다.</p>\n\n<p>한 편, 서비스 텐션이 끊어질 듯이 탱탱한 상태가 되면 일하기에는 좋지만 사람들을 상대하기에는 좋지 않은 것 같습니다.<br />\n굉장히 날카로워지거든요. 편안한 얼굴이 아니라 인상을 쓰고 있는 표정이 default 가 되어 버립니다.<br />\n몸의 모든 감각이 날카로워져 있어서 다른 사람들에게 하는 말투도 날카롭게 나오곤 하고요.</p>\n\n<p><a href=\"https://withcoffee.app\">커피한잔</a>을 오랫동안 혼자 운영하며 저의 텐션이 점점 느슨해져 가는 걸 느끼고 있습니다.<br />\n마음이 편하고 여유가 있는 건 좋지만, 텐션이 너무 느슨해지면 안 되는데 하는 걱정도 됩니다. 모르고 넘어가면 안 되는 일들을 자꾸 놓치곤 합니다.<br />\n동료의 높은 텐션을 보며 자극받기도 하고, 혼도 나고 하면서 텐션을 끌어올려야 하는데 혼자서는 참 쉽지가 않네요.</p>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2024/03/07/people-saving-cost.html\">서버 비용을 아끼던 사람들 (feat. 카카오 옛날 이야기)</a></li>\n  <li><a href=\"/essay/2022/10/16/kakaotalk-server-development.html\">카톡 서버 개발의 추억</a></li>\n  <li><a href=\"/essay/2024/08/08/defense-fun.html\">수비수 개발자</a></li>\n</ul>",
        "contentSnippet": "카카오에 처음 들어가서 인상적이었던 점은 카톡으로 카톡을 모니터링하던 것이었습니다.\n카톡 시스템의 장애를 비롯하여 사내 서비스의 수많은 부분을 모니터링했습니다.\n2012년. 때는 바야흐로 모바일 메신저 왕좌의 게임 시대.\n갑자기 브라질의 가입자 수가 늘면 누군가가 채팅방에 말했습니다.\n이런 경험은 처음이었습니다. 아하 포인트를 느꼈던 것 같습니다.\n모니터링 방에는 서비스에 관심 있는 사람들이 자발적으로 들어와 있었는데, 이상 징후를 특히 잘 포착하는 사람들이 있었습니다.\n이런 사람들이 그렇게 멋져 보일 수가 없었습니다. 저도 그런 사람이 되고 싶었습니다.\n이상 징후를 찾아내고 원인을 끈질기게 탐색하는 걸 카카오에서 배웠습니다.\n한 편, 서비스 텐션이 끊어질 듯이 탱탱한 상태가 되면 일하기에는 좋지만 사람들을 상대하기에는 좋지 않은 것 같습니다.\n커피한잔을 오랫동안 혼자 운영하며 저의 텐션이 점점 느슨해져 가는 걸 느끼고 있습니다.\n\n함께 읽으면 좋은 글:\n서버 비용을 아끼던 사람들 (feat. 카카오 옛날 이야기)\n카톡 서버 개발의 추억\n수비수 개발자",
        "summary": "카카오에 처음 들어가서 인상적이었던 점은 카톡으로 카톡을 모니터링하던 것이었습니다. 오호 재밌는걸. C 컴파일러로 C언어를 만드는 느낌이 이런 건가?",
        "id": "https://jeho.page/essay/2025/05/08/service-tension",
        "isoDate": "2025-05-07T23:44:00.000Z"
      }
    ]
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": [
      {
        "creator": "noreply@blogger.com (Unknown)",
        "title": "AI 부정행위로 아마존 합격한 21세 한인, 75억 투자 받고 데이트까지 속여 논란",
        "link": "https://blog.gaerae.com/2025/05/columbia-student-suspended-over-interview-cheating-tool.html",
        "pubDate": "Thu, 08 May 2025 06:08:00 +0000",
        "author": "noreply@blogger.com (Unknown)",
        "content": "<div class=\"separator\" style=\"clear: both;\"><img alt=\"\" border=\"0\" data-original-height=\"720\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgjPZSvhKpJGG1-y-SmOmiF82d5m9StrVrH-nIS-u637LL8X7LXV5rqJtlILAnc8SvhfJc86QkRTQcWv4QvIPK6gcKGUjLb66GKgrcZIFhPtb_DxRqxiiOy_62fGcRVCoy7w9GmfYy45QwvvILgcljlgEC1zmv_7HPd3jnLbUAz0taKMil6ECw-_y8B6AA/s1600/AI-%E1%84%87%E1%85%AE%E1%84%8C%E1%85%A5%E1%86%BC%E1%84%92%E1%85%A2%E1%86%BC%E1%84%8B%E1%85%B1%E1%84%85%E1%85%A9-%E1%84%8B%E1%85%A1%E1%84%86%E1%85%A1%E1%84%8C%E1%85%A9%E1%86%AB-%E1%84%92%E1%85%A1%E1%86%B8%E1%84%80%E1%85%A7%E1%86%A8%E1%84%92%E1%85%A1%E1%86%AB-21%E1%84%89%E1%85%A6-%E1%84%92%E1%85%A1%E1%86%AB%E1%84%8B%E1%85%B5%E1%86%AB-75%E1%84%8B%E1%85%A5%E1%86%A8-%E1%84%90%E1%85%AE%E1%84%8C%E1%85%A1-%E1%84%87%E1%85%A1%E1%86%AE%E1%84%80%E1%85%A9-%E1%84%83%E1%85%A6%E1%84%8B%E1%85%B5%E1%84%90%E1%85%B3%E1%84%81%E1%85%A1%E1%84%8C%E1%85%B5-%E1%84%89%E1%85%A9%E1%86%A8%E1%84%8B%E1%85%A7-%E1%84%82%E1%85%A9%E1%86%AB%E1%84%85%E1%85%A1%E1%86%AB.png\" /></div>\n<p><em>\"계산기도, 스펠체크도, 구글도 처음엔 치팅이라 불렸습니다. 이제 AI가 그 자리를 대신할 차례입니다.\"</em></p>\n<p>이 도발적인 말의 주인공은 콜롬비아대 출신 21세 한인 청년 이정인(Chungin “Roy” Lee)입니다. 그는 최근 실리콘밸리를 뒤흔든 AI 스타트업 'Cluely’의 공동창업자로, 자신이 개발한 AI 치팅툴로 아마존 인턴십 면접에 합격한 후 530만 달러(약 75억 원)의 투자금을 유치하며 세계적 화제의 중심에 섰습니다.</p>\n<h2 id=\"ai로-빅테크-면접을-속이다\">AI로 빅테크 면접을 속이다</h2>\n<p>이정인의 여정은 단순한 코딩 프로젝트에서 시작됐습니다. 그는 'Interview Coder'라는 AI 도구를 개발해 아마존의 화상 코딩 면접에 활용했습니다. 이 도구는 브라우저에 보이지 않는 오버레이 창을 띄워 면접관 모르게 실시간으로 답변과 코드를 제공했고, 이정인은 이를 통해 인턴십에 합격했습니다.</p>\n<p>놀라운 점은 그가 이 과정을 유튜브에 공개했다는 사실입니다. \"How I Cheated My Amazon Interview\"라는 제목의 영상은 순식간에 바이럴 히트를 기록했고, 이는 곧 그의 인생을 바꿔놓았습니다.</p>\n<h2 id=\"정학-처분과-창업의-길\">정학 처분과 창업의 길</h2>\n<p>영상이 화제가 되자 콜롬비아대학교는 이정인에게 정학 처분을 내렸고, 아마존에서도 인턴십 제안이 취소되었습니다. 하지만 이정인과 공동창업자 닐 샨무감(Neel Shanmugam)은 좌절하지 않았습니다. 이들은 해당 기술을 발전시켜 'Cluely’라는 스타트업을 설립했습니다.</p>\n<p>\"Cheat on everything(모든 것을 치팅하라)\"이라는 도발적인 슬로건을 내건 Cluely는 면접뿐 아니라 시험, 영업, 심지어 데이트까지 AI가 실시간으로 코칭해주는 서비스를 출시했습니다. 출시 직후 7만 명의 사용자가 몰렸고, 2025년 4월 기준 월 300만 달러의 연간 반복 수익(ARR)을 기록하며 Abstract Ventures와 Susa Ventures로부터 530만 달러의 시드 투자를 유치했습니다.</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">$5 million to change the definition of the word &quot;cheating&quot;<a href=\"https://t.co/rJuDbS1eC5\">https://t.co/rJuDbS1eC5</a> <a href=\"https://t.co/BMbBnz1fTE\">https://t.co/BMbBnz1fTE</a></p>&mdash; Roy (@im_roy_lee) <a href=\"https://twitter.com/im_roy_lee/status/1914438039264280939?ref_src=twsrc%5Etfw\">April 21, 2025</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<h2 id=\"데이트까지-치팅-논란의-확산\">데이트까지 치팅? 논란의 확산</h2>\n<p>Cluely의 마케팅 영상은 더 큰 논란을 일으켰습니다. 이정인이 스마트글라스를 착용하고 데이트 자리에서 AI의 실시간 코칭을 받아 상대방에게 나이와 예술 지식 등을 속이는 장면이 등장한 것입니다. 비록 연출된 광고였지만, 이 영상은 \"AI가 인간관계까지 조작하는 디스토피아적 미래\"에 대한 우려를 증폭시켰습니다.</p>\n<p>Reddit, X(트위터), LinkedIn 등 해외 커뮤니티에서는 \"블랙미러 에피소드 같다\", \"21세기 디지털 사기극\"이라는 비판이 쏟아졌고, Morning Brew, Business Insider 등 주요 매체들도 AI 치팅툴이 가져올 신뢰와 진정성의 붕괴를 우려하는 기사를 연이어 보도했습니다.</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Cluely is out. cheat on everything. <a href=\"https://t.co/EsRXQaCfUI\">pic.twitter.com/EsRXQaCfUI</a></p>&mdash; Roy (@im_roy_lee) <a href=\"https://twitter.com/im_roy_lee/status/1914061483149001132?ref_src=twsrc%5Etfw\">April 20, 2025</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"혁신인가-위협인가\">혁신인가, 위협인가?</h2>\n<p>Cluely 측은 \"AI는 인간의 경쟁자가 아니라 협업 파트너\"라며, 암기·코딩·리서치 등 반복적 작업은 AI에 맡기고 인간은 더 창의적인 일에 집중해야 한다고 주장합니다. 일부 투자자와 기술 옹호자들도 \"시험·면접 시스템의 구식성과 비효율성\"을 지적하며 변화의 필요성을 강조합니다.</p>\n<p>반면 교육계와 기업들은 \"실력과 신뢰 기반의 사회 시스템이 붕괴될 수 있다\"며 경계심을 늦추지 않고 있습니다. 특히 원격 면접·시험의 신뢰성, AI 활용의 윤리적 경계, 개인정보 보호 등 다양한 문제가 제기되고 있습니다.</p>\n<h2 id=\"ai-시대-우리의-선택은\">AI 시대, 우리의 선택은?</h2>\n<p>Cluely 사건은 단순한 기술 논쟁을 넘어, AI가 우리 사회의 근간인 신뢰와 진정성, 공정성에 미치는 영향을 생각하게 합니다. 기술의 발전이 곧 규범의 변화로 이어질지, 아니면 새로운 규제가 등장할지, AI 시대의 공정성과 혁신의 균형은 어떻게 재정립될지 주목할 필요가 있습니다.</p>\n<p>이정인의 말처럼 AI도 결국 계산기나 스펠체크처럼 일상적 도구가 될까요? 아니면 인간의 진정한 역량과 관계를 위협하는 존재가 될까요? AI와 함께하는 미래, 우리는 어떤 기준과 가치를 지켜야 할지 깊은 고민이 필요한 시점입니다.</p>\n<hr />\n<h2 id=\"참고-출처\">참고 출처</h2>\n<ul>\n<li>\n<p><a href=\"https://techcrunch.com/2025/04/21/columbia-student-suspended-over-interview-cheating-tool-raises-5-3m-to-cheat-on-everything/\">TechCrunch: Columbia student suspended over interview cheating tool raises $5.3M to cheat on everything</a></p>\n</li>\n<li>\n<p><a href=\"https://aimresearch.co/ai-startups/cluely-helped-you-cheat-truely-knows-you-did\">AIM Research: Cluely Helped You Cheat, Truely Knows You Did</a></p>\n</li>\n<li>\n<p><a href=\"https://finance.yahoo.com/news/startups-launch-products-catch-people-215512642.html\">Yahoo Finance: Startups launch products to catch people using AI cheating app Cluely</a></p>\n</li>\n<li>\n<p><a href=\"https://www.ndtv.com/feature/ai-startup-that-lets-users-cheat-in-exams-and-interviews-raises-5-3-million-8232657\">NDTV: AI Startup That Lets Users Cheat In Exams And Interviews Raises $5.3 Million</a></p>\n</li>\n<li>\n<p><a href=\"https://www.eweek.com/news/cluely-ai-cheating-app/\">eWeek: ‘Cheat on Everything’ AI App Sparks Outrage - And Raises $5.3 Million</a></p>\n</li>\n<li>\n<p><a href=\"https://www.hindustantimes.com/trending/suspended-from-columbia-student-raises-5-million-for-ai-cheating-tool-the-world-will-say-101745401820881.html\">Hindustan Times: Suspended from Columbia, student raises $5 million for AI cheating tool</a></p>\n</li>\n<li>\n<p><a href=\"https://www.businessinsider.com/cluely-ai-cheat-job-interviews-columbia-chungin-roy-lee-2025-4\">Business Insider: I Tried the AI App That Helps You ‘Cheat’ in Live Conversations</a></p>\n</li>\n<li>\n<p><a href=\"https://www.nbcnews.com/tech/tech-news/columbia-university-student-trolls-big-tech-ai-tool-job-applications-rcna198454\">NBC News: Kicked out of Columbia, this student doesn’t plan to stop trolling big tech with AI tool for job applications</a></p>\n</li>\n</ul>\n\n",
        "contentSnippet": "\"계산기도, 스펠체크도, 구글도 처음엔 치팅이라 불렸습니다. 이제 AI가 그 자리를 대신할 차례입니다.\"\n이 도발적인 말의 주인공은 콜롬비아대 출신 21세 한인 청년 이정인(Chungin “Roy” Lee)입니다. 그는 최근 실리콘밸리를 뒤흔든 AI 스타트업 'Cluely’의 공동창업자로, 자신이 개발한 AI 치팅툴로 아마존 인턴십 면접에 합격한 후 530만 달러(약 75억 원)의 투자금을 유치하며 세계적 화제의 중심에 섰습니다.\nAI로 빅테크 면접을 속이다\n이정인의 여정은 단순한 코딩 프로젝트에서 시작됐습니다. 그는 'Interview Coder'라는 AI 도구를 개발해 아마존의 화상 코딩 면접에 활용했습니다. 이 도구는 브라우저에 보이지 않는 오버레이 창을 띄워 면접관 모르게 실시간으로 답변과 코드를 제공했고, 이정인은 이를 통해 인턴십에 합격했습니다.\n놀라운 점은 그가 이 과정을 유튜브에 공개했다는 사실입니다. \"How I Cheated My Amazon Interview\"라는 제목의 영상은 순식간에 바이럴 히트를 기록했고, 이는 곧 그의 인생을 바꿔놓았습니다.\n정학 처분과 창업의 길\n영상이 화제가 되자 콜롬비아대학교는 이정인에게 정학 처분을 내렸고, 아마존에서도 인턴십 제안이 취소되었습니다. 하지만 이정인과 공동창업자 닐 샨무감(Neel Shanmugam)은 좌절하지 않았습니다. 이들은 해당 기술을 발전시켜 'Cluely’라는 스타트업을 설립했습니다.\n\"Cheat on everything(모든 것을 치팅하라)\"이라는 도발적인 슬로건을 내건 Cluely는 면접뿐 아니라 시험, 영업, 심지어 데이트까지 AI가 실시간으로 코칭해주는 서비스를 출시했습니다. 출시 직후 7만 명의 사용자가 몰렸고, 2025년 4월 기준 월 300만 달러의 연간 반복 수익(ARR)을 기록하며 Abstract Ventures와 Susa Ventures로부터 530만 달러의 시드 투자를 유치했습니다.\n$5 million to change the definition of the word \"cheating\"https://t.co/rJuDbS1eC5 https://t.co/BMbBnz1fTE\n— Roy (@im_roy_lee) April 21, 2025\n \n\n데이트까지 치팅? 논란의 확산\nCluely의 마케팅 영상은 더 큰 논란을 일으켰습니다. 이정인이 스마트글라스를 착용하고 데이트 자리에서 AI의 실시간 코칭을 받아 상대방에게 나이와 예술 지식 등을 속이는 장면이 등장한 것입니다. 비록 연출된 광고였지만, 이 영상은 \"AI가 인간관계까지 조작하는 디스토피아적 미래\"에 대한 우려를 증폭시켰습니다.\nReddit, X(트위터), LinkedIn 등 해외 커뮤니티에서는 \"블랙미러 에피소드 같다\", \"21세기 디지털 사기극\"이라는 비판이 쏟아졌고, Morning Brew, Business Insider 등 주요 매체들도 AI 치팅툴이 가져올 신뢰와 진정성의 붕괴를 우려하는 기사를 연이어 보도했습니다.\nCluely is out. cheat on everything. pic.twitter.com/EsRXQaCfUI\n— Roy (@im_roy_lee) April 20, 2025\n \n혁신인가, 위협인가?\nCluely 측은 \"AI는 인간의 경쟁자가 아니라 협업 파트너\"라며, 암기·코딩·리서치 등 반복적 작업은 AI에 맡기고 인간은 더 창의적인 일에 집중해야 한다고 주장합니다. 일부 투자자와 기술 옹호자들도 \"시험·면접 시스템의 구식성과 비효율성\"을 지적하며 변화의 필요성을 강조합니다.\n반면 교육계와 기업들은 \"실력과 신뢰 기반의 사회 시스템이 붕괴될 수 있다\"며 경계심을 늦추지 않고 있습니다. 특히 원격 면접·시험의 신뢰성, AI 활용의 윤리적 경계, 개인정보 보호 등 다양한 문제가 제기되고 있습니다.\nAI 시대, 우리의 선택은?\nCluely 사건은 단순한 기술 논쟁을 넘어, AI가 우리 사회의 근간인 신뢰와 진정성, 공정성에 미치는 영향을 생각하게 합니다. 기술의 발전이 곧 규범의 변화로 이어질지, 아니면 새로운 규제가 등장할지, AI 시대의 공정성과 혁신의 균형은 어떻게 재정립될지 주목할 필요가 있습니다.\n이정인의 말처럼 AI도 결국 계산기나 스펠체크처럼 일상적 도구가 될까요? 아니면 인간의 진정한 역량과 관계를 위협하는 존재가 될까요? AI와 함께하는 미래, 우리는 어떤 기준과 가치를 지켜야 할지 깊은 고민이 필요한 시점입니다.\n참고 출처\nTechCrunch: Columbia student suspended over interview cheating tool raises $5.3M to cheat on everything\nAIM Research: Cluely Helped You Cheat, Truely Knows You Did\nYahoo Finance: Startups launch products to catch people using AI cheating app Cluely\nNDTV: AI Startup That Lets Users Cheat In Exams And Interviews Raises $5.3 Million\neWeek: ‘Cheat on Everything’ AI App Sparks Outrage - And Raises $5.3 Million\nHindustan Times: Suspended from Columbia, student raises $5 million for AI cheating tool\nBusiness Insider: I Tried the AI App That Helps You ‘Cheat’ in Live Conversations\nNBC News: Kicked out of Columbia, this student doesn’t plan to stop trolling big tech with AI tool for job applications",
        "guid": "tag:blogger.com,1999:blog-1127118646487305903.post-1558459405247705293",
        "categories": [
          {
            "_": "news",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          }
        ],
        "isoDate": "2025-05-08T06:08:00.000Z"
      },
      {
        "creator": "noreply@blogger.com (Unknown)",
        "title": "OpenAI의 Windsurf 인수: Cursor 대신 Windsurf를 선택한 이유와 AI 코딩 시장의 미래",
        "link": "https://blog.gaerae.com/2025/05/openai-windsurf-cursor.html",
        "pubDate": "Wed, 07 May 2025 02:58:00 +0000",
        "author": "noreply@blogger.com (Unknown)",
        "content": "<div class=\"separator\" style=\"clear: both;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhk07ttbxCVLn63wUkV3Bh6araHJimFpD2ZjDPLPdTtLfJcjPTXikc3jmyUj1BvCqECQGjeFIUc3QcN39yZ4UWSVwuHaNm9JF_XDqLjISiHWujvQlrrP_nxQ5q9n7-tzGqQWcl90X7eGm66Wp8S-KQLL-AiLOf2JV3_WH2Zq8Vk_NXlzs664v7Qi8fvC9I/s16000/OpenAI%E1%84%8B%E1%85%B4-Windsurf-%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%89%E1%85%AE.png\" /></div>\n<p>OpenAI가 2025년 5월, AI 코딩 도구 시장의 강자 Windsurf(구 Codeium)를 약 30억 달러(한화 약 4조 원)에 인수하기로 한 결정은 글로벌 IT 업계에 큰 파장을 일으켰습니다. 특히 Cursor 등 이미 인지도가 높은 경쟁 제품이 존재하는 상황에서, OpenAI가 왜 Windsurf를 선택했는지, 그리고 이 선택이 AI 코딩 시장에 어떤 변화를 가져올지 구체적으로 분석합니다.</p>\n<h2 id=\"windsurf와-cursor-그리고-ai-코딩-시장의-경쟁-구도\">Windsurf와 Cursor, 그리고 AI 코딩 시장의 경쟁 구도</h2>\n<p>AI 코딩 어시스턴트 시장은 최근 몇 년간 폭발적으로 성장했습니다.</p>\n<ul>\n<li><strong>Cursor</strong>는 빠른 코드 완성과 협업 기능, 다양한 AI 모델(GPT-4, Claude 등) 지원, 풍부한 확장성을 자랑합니다.</li>\n<li><strong>Windsurf</strong>는 뛰어난 맥락 이해력, 대규모 코드베이스 처리, 직관적 UI, VS Code 플러그인 완벽 호환, 그리고 합리적인 가격이 강점입니다.</li>\n</ul>\n<p>Windsurf는 'Cascade'와 'Supercomplete' 등 고유 기능으로 반복 작업 자동화, 이미지 업로드 기반 웹사이트 코드 생성 등 혁신적 워크플로우를 제공합니다. 데이터 프라이버시와 보안 정책도 업계 최고 수준입니다.</p>\n\n<h2 id=\"openai가-windsurf를-선택한-결정적-이유\">OpenAI가 Windsurf를 선택한 결정적 이유</h2>\n<h3 id=\"cursor-인수-시도와-무산\">Cursor 인수 시도와 무산</h3>\n<p>OpenAI는 처음에 Cursor(Anysphere) 인수를 추진했습니다.<br />\n복수의 테크 전문 매체에 따르면, OpenAI와 Cursor 사이에 실제 인수 협상이 있었으나, Cursor 측이 독립 경영을 고수하며 협상이 결렬되었습니다.<br />\n이후 OpenAI는 Windsurf로 눈을 돌렸고, Windsurf의 기술적·전략적 강점이 인수 결정에 중대한 영향을 미쳤습니다.</p>\n<h3 id=\"windsurf의-기술적·전략적-강점\">Windsurf의 기술적, 전략적 강점</h3>\n<ul>\n<li><strong>기술적 통합 용이성:</strong> Windsurf는 OpenAI의 GPT-4 등 기존 AI 모델과의 통합이 쉽고, ChatGPT 등과 빠른 시너지를 낼 수 있습니다.</li>\n<li><strong>엔터프라이즈 시장 확장성:</strong> 대규모 코드베이스와 레거시 시스템 지원에 강점을 가져, 기업 시장에서의 확장성이 높습니다.</li>\n<li><strong>빠른 성장성과 유연성:</strong> Windsurf는 짧은 시간 내 빠른 성장과 높은 제품-시장 적합성(Product-Market Fit)을 입증했습니다.</li>\n<li><strong>합리적인 인수 비용:</strong> Cursor에 비해 Windsurf는 상대적으로 적은 비용으로 인수 가능해, 재무적 부담이 적으면서도 높은 ROI(투자수익률)를 기대할 수 있습니다.</li></ul>\n<h2 id=\"자체-개발-대신-인수를-택한-이유\">자체 개발 대신 인수를 택한 이유</h2>\n<p>OpenAI가 자체 개발이 아닌 인수를 선택한 배경에는 <b>'속도'</b>와 <b>'리스크 최소화'</b>가 있습니다.<br />\n이미 시장에서 검증된 Windsurf의 기술과 인재를 빠르게 흡수함으로써, Microsoft, Google, Anthropic 등 경쟁사와의 격차를 단기간에 줄일 수 있습니다.<br />\nAI 코딩 시장은 빠르게 변화하고 있어, 자체 개발로는 시장 변화에 신속히 대응하기 어렵다는 현실적 판단이 작용했습니다.</p>\n\n<h2 id=\"인수로-인한-경쟁-구도-변화\">인수로 인한 경쟁 구도 변화</h2>\n<p>이번 인수로 OpenAI는 Cursor, GitHub Copilot, Anthropic 등과 본격적으로 경쟁하게 됩니다.</p>\n<ul>\n<li><strong>Cursor</strong>는 여전히 빠른 완성도와 협업 기능에서 강점을 보이지만, Windsurf는 OpenAI의 AI 역량과 결합해 더 강력한 통합 솔루션을 제공할 수 있게 됩니다.</li>\n<li><strong>시장 전체</strong>로 보면, Google의 Gemini, 중국 DeepSeek 등 신흥 경쟁자까지 가세해 AI 코딩 시장의 경쟁은 더욱 치열해질 전망입니다.</li></ul>\n<h2 id=\"미래-방향성과-기대-효과\">미래 방향성과 기대 효과</h2>\n<p>OpenAI는 Windsurf 인수를 통해</p>\n<ul>\n<li>ChatGPT의 코딩 기능을 한 단계 끌어올리고,</li>\n<li>엔터프라이즈 시장까지 영향력을 확대하며,</li>\n<li>AI 코딩 도구의 표준을 새롭게 정의하려는 전략을 추진할 것으로 보입니다.</li>\n</ul>\n<p>특히, AI가 단순한 코드 자동완성을 넘어, 개발자의 의도와 맥락을 이해하고 복잡한 프로젝트도 스스로 처리하는 'AI 파트너'로 진화하는 시대가 앞당겨질 것으로 기대됩니다.</p>\n<hr />\n<h2 id=\"참고-출처\">참고 출처</h2>\n<ul>\n<li><a href=\"https://www.bloomberg.com/news/articles/2025-05-06/openai-reaches-agreement-to-buy-startup-windsurf-for-3-billion\">Bloomberg: OpenAI Reaches Agreement to Buy Startup Windsurf for $3 Billion</a></li>\n<li><a href=\"https://www.reuters.com/business/openai-agrees-buy-windsurf-about-3-billion-bloomberg-news-reports-2025-05-06/\">Reuters: OpenAI agrees to buy Windsurf for about $3 billion, Bloomberg News reports</a></li>\n<li><a href=\"https://www.cnbc.com/2025/04/17/openai-looked-at-cursor-before-considering-deal-with-rival-windsurf.html\">CNBC: OpenAI looked at Cursor before considering deal with rival Windsurf</a></li>\n<li><a href=\"https://www.cnbc.com/2025/04/16/openai-in-talks-to-pay-about-3-billion-to-acquire-startup-windsurf.html\">CNBC: OpenAI in talks to pay about $3 billion to acquire startup Windsurf</a></li>\n<li><a href=\"https://www.forbes.com/sites/johnwerner/2025/05/06/its-openais-biggest-acquisition-to-date--but-what-does-windsurf-do/\">Forbes: OpenAI Reportedly Strikes $3 Billion Deal To Buy Windsurf</a></li>\n<li><a href=\"https://opentools.ai/news/openais-dollar3-billion-leap-acquiring-windsurf-to-dominate-ai-coding\">OpenTools.ai: OpenAI’s $3 Billion Leap: Acquiring Windsurf to Dominate AI Coding</a></li>\n<li><a href=\"https://www.ainvest.com/news/openai-3-billion-bet-windsurf-strategic-play-dominance-ai-coding-tools-2505/\">AInvest.com: OpenAI’s $3 Billion Bet on Windsurf: A Strategic Play for Dominance</a></li>\n<li><a href=\"https://www.fintechweekly.com/magazine/articles/openai-acquires-windsurf-ai-coding-2025\">Fintech Weekly: OpenAI Reportedly Agrees to Acquire AI Coding Startup Windsurf for $3 Billion</a></li>\n</ul>\n\n",
        "contentSnippet": "OpenAI가 2025년 5월, AI 코딩 도구 시장의 강자 Windsurf(구 Codeium)를 약 30억 달러(한화 약 4조 원)에 인수하기로 한 결정은 글로벌 IT 업계에 큰 파장을 일으켰습니다. 특히 Cursor 등 이미 인지도가 높은 경쟁 제품이 존재하는 상황에서, OpenAI가 왜 Windsurf를 선택했는지, 그리고 이 선택이 AI 코딩 시장에 어떤 변화를 가져올지 구체적으로 분석합니다.\nWindsurf와 Cursor, 그리고 AI 코딩 시장의 경쟁 구도\nAI 코딩 어시스턴트 시장은 최근 몇 년간 폭발적으로 성장했습니다.\nCursor는 빠른 코드 완성과 협업 기능, 다양한 AI 모델(GPT-4, Claude 등) 지원, 풍부한 확장성을 자랑합니다.\nWindsurf는 뛰어난 맥락 이해력, 대규모 코드베이스 처리, 직관적 UI, VS Code 플러그인 완벽 호환, 그리고 합리적인 가격이 강점입니다.\nWindsurf는 'Cascade'와 'Supercomplete' 등 고유 기능으로 반복 작업 자동화, 이미지 업로드 기반 웹사이트 코드 생성 등 혁신적 워크플로우를 제공합니다. 데이터 프라이버시와 보안 정책도 업계 최고 수준입니다.\nOpenAI가 Windsurf를 선택한 결정적 이유\nCursor 인수 시도와 무산\nOpenAI는 처음에 Cursor(Anysphere) 인수를 추진했습니다.\nWindsurf의 기술적, 전략적 강점\n기술적 통합 용이성: Windsurf는 OpenAI의 GPT-4 등 기존 AI 모델과의 통합이 쉽고, ChatGPT 등과 빠른 시너지를 낼 수 있습니다.\n엔터프라이즈 시장 확장성: 대규모 코드베이스와 레거시 시스템 지원에 강점을 가져, 기업 시장에서의 확장성이 높습니다.\n빠른 성장성과 유연성: Windsurf는 짧은 시간 내 빠른 성장과 높은 제품-시장 적합성(Product-Market Fit)을 입증했습니다.\n합리적인 인수 비용: Cursor에 비해 Windsurf는 상대적으로 적은 비용으로 인수 가능해, 재무적 부담이 적으면서도 높은 ROI(투자수익률)를 기대할 수 있습니다.\n\n자체 개발 대신 인수를 택한 이유\nOpenAI가 자체 개발이 아닌 인수를 선택한 배경에는 '속도'와 '리스크 최소화'가 있습니다.\n인수로 인한 경쟁 구도 변화\n이번 인수로 OpenAI는 Cursor, GitHub Copilot, Anthropic 등과 본격적으로 경쟁하게 됩니다.\nCursor는 여전히 빠른 완성도와 협업 기능에서 강점을 보이지만, Windsurf는 OpenAI의 AI 역량과 결합해 더 강력한 통합 솔루션을 제공할 수 있게 됩니다.\n시장 전체로 보면, Google의 Gemini, 중국 DeepSeek 등 신흥 경쟁자까지 가세해 AI 코딩 시장의 경쟁은 더욱 치열해질 전망입니다.\n\n미래 방향성과 기대 효과\nOpenAI는 Windsurf 인수를 통해\nChatGPT의 코딩 기능을 한 단계 끌어올리고,\n엔터프라이즈 시장까지 영향력을 확대하며,\nAI 코딩 도구의 표준을 새롭게 정의하려는 전략을 추진할 것으로 보입니다.\n특히, AI가 단순한 코드 자동완성을 넘어, 개발자의 의도와 맥락을 이해하고 복잡한 프로젝트도 스스로 처리하는 'AI 파트너'로 진화하는 시대가 앞당겨질 것으로 기대됩니다.\n참고 출처\nBloomberg: OpenAI Reaches Agreement to Buy Startup Windsurf for $3 Billion\nReuters: OpenAI agrees to buy Windsurf for about $3 billion, Bloomberg News reports\nCNBC: OpenAI looked at Cursor before considering deal with rival Windsurf\nCNBC: OpenAI in talks to pay about $3 billion to acquire startup Windsurf\nForbes: OpenAI Reportedly Strikes $3 Billion Deal To Buy Windsurf\nOpenTools.ai: OpenAI’s $3 Billion Leap: Acquiring Windsurf to Dominate AI Coding\nAInvest.com: OpenAI’s $3 Billion Bet on Windsurf: A Strategic Play for Dominance\nFintech Weekly: OpenAI Reportedly Agrees to Acquire AI Coding Startup Windsurf for $3 Billion",
        "guid": "tag:blogger.com,1999:blog-1127118646487305903.post-8218067990692659939",
        "categories": [
          {
            "_": "news",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          }
        ],
        "isoDate": "2025-05-07T02:58:00.000Z"
      }
    ]
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "github gist 붙여넣기를 활용해보자 / 코드 붙여넣기 서비스",
        "link": "http://serverdown.tistory.com/1312",
        "pubDate": "Thu, 8 May 2025 19:29:32 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1312#entry1312comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"480\" data-origin-height=\"144\"><span data-url=\"https://blog.kakaocdn.net/dn/bbpdFC/btsNPggJfVG/seyinimxojsNEBB2Ps1ki1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bbpdFC/btsNPggJfVG/seyinimxojsNEBB2Ps1ki1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bbpdFC/btsNPggJfVG/seyinimxojsNEBB2Ps1ki1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbbpdFC%2FbtsNPggJfVG%2FseyinimxojsNEBB2Ps1ki1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"480\" height=\"144\" data-origin-width=\"480\" data-origin-height=\"144\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여기에서 글을 쓰고 블로그에 붙일 수 있나보다.</p>\n<p data-ke-size=\"size16\">gist: <a href=\"https://gist.github.com/\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://gist.github.com/</a></p>\n<figure id=\"og_1746700058638\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Discover gists\" data-og-description=\"GitHub Gist: instantly share code, notes, and snippets.\" data-og-host=\"gist.github.com\" data-og-source-url=\"https://gist.github.com/\" data-og-url=\"https://gist.github.com/starred\" data-og-image=\"https://scrap.kakaocdn.net/dn/iLVcT/hyYM2Ml6ZX/c7e3sAuH3cIIt0c8cqBFt0/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/eqjGoE/hyYM5vvnAD/63Qvh9sCEHQfAlUUfEvlB1/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/bgKwCQ/hyYMQrCO0V/51c0WAR5446R7zSnS8DCU0/img.png?width=300&amp;height=400&amp;face=0_0_300_400\"><a href=\"https://gist.github.com/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://gist.github.com/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/iLVcT/hyYM2Ml6ZX/c7e3sAuH3cIIt0c8cqBFt0/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/eqjGoE/hyYM5vvnAD/63Qvh9sCEHQfAlUUfEvlB1/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/bgKwCQ/hyYMQrCO0V/51c0WAR5446R7zSnS8DCU0/img.png?width=300&amp;height=400&amp;face=0_0_300_400');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Discover gists</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">GitHub Gist: instantly share code, notes, and snippets.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">gist.github.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">붙여보기</p>\n<div id=\"code_1746700138610\" data-ke-type=\"html\" data-source=\"&lt;script src=&quot;https://gist.github.com/thisisone/7d496222f4a975274a6d4dc1d506b2f5.js&quot;&gt;&lt;/script&gt;\">\n<script src=\"https://gist.github.com/thisisone/7d496222f4a975274a6d4dc1d506b2f5.js\"></script>\n</div>\n<p data-ke-size=\"size16\">들어간건가.. 미리 보기 안되넹 ...</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">배경색 검은색으로 고정은 안되려나 ..</p>\n<div style=\"background-color: #000000; color: #ffffff;\">\n<div><span style=\"color: #808080;\">&lt;</span><span style=\"color: #569cd6;\">div</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">style</span><span style=\"color: #ffffff;\">=</span><span style=\"color: #ffffff;\">\"</span><span style=\"color: #d4d4d4;\">background</span><span style=\"color: #ffffff;\">:</span><span style=\"color: #ce9178;\">black</span><span style=\"color: #ffffff;\">;</span><span style=\"color: #ffffff;\">\"</span><span style=\"color: #808080;\">&gt;</span></div>\n<div><span style=\"color: #808080;\">&lt;</span><span style=\"color: #569cd6;\">script</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">src</span><span style=\"color: #ffffff;\">=</span><span style=\"color: #ce9178;\">\"<a href=\"https://gist.github.com/thisisone/7d496222f4a975274a6d4dc1d506b2f5.js\">https://gist.github.com/thisisone/7d496222f4a975274a6d4dc1d506b2f5.js</a>\"</span><span style=\"color: #808080;\">&gt;&lt;/</span><span style=\"color: #569cd6;\">script</span><span style=\"color: #808080;\">&gt;</span></div>\n<div><span style=\"color: #808080;\">&lt;/</span><span style=\"color: #569cd6;\">div</span><span style=\"color: #808080;\">&gt;</span></div>\n</div>\n<p data-ke-size=\"size16\">이렇게 붙여넣어봤다.</p>\n<div id=\"code_1746702337411\" data-ke-type=\"html\" data-source=\"&lt;div style=&quot;background:black;&quot;&gt;\n&lt;script src=&quot;https://gist.github.com/thisisone/7d496222f4a975274a6d4dc1d506b2f5.js&quot;&gt;&lt;/script&gt;\n&lt;/div&gt;\">\n<div style=\"background: black;\">\n<script src=\"https://gist.github.com/thisisone/7d496222f4a975274a6d4dc1d506b2f5.js\"></script>\n</div>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">잘들어간거 확인됨</h2>\n<p data-ke-size=\"size16\">gist 페이지에서 코드를 수정할 수 가 없었다.</p>\n<p data-ke-size=\"size16\">내 컴에서 git clone 을 하고 고쳐서 올리면 바뀌는 것은 확인했다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"414\" data-origin-height=\"363\"><span data-url=\"https://blog.kakaocdn.net/dn/nA2ki/btsNPgA3i64/B245uYmvUcTRPJko30EQr0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/nA2ki/btsNPgA3i64/B245uYmvUcTRPJko30EQr0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/nA2ki/btsNPgA3i64/B245uYmvUcTRPJko30EQr0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FnA2ki%2FbtsNPgA3i64%2FB245uYmvUcTRPJko30EQr0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"414\" height=\"363\" data-origin-width=\"414\" data-origin-height=\"363\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">글 작성후 오른족에 embed 라는 버튼이 있는데 눌러버몬 여러가지를 제공한다.</p>\n<p data-ke-size=\"size16\">embed 는 블로그 같은데 붙일 수 있는 html 태그를 주는 곳이고</p>\n<p data-ke-size=\"size16\">Clone a Htts 는 git clone 할 수 있는 주소를 준다.</p>\n<p data-ke-size=\"size16\">수정이 귀찮지만 붙여넣기엔 velog 만큼 좋으니 활용해 봐야겠다.</p>\n<p data-ke-size=\"size16\">md 파일은 아니라 모양을 낼 수 는 없었다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">흰바당에서도 검은 바탕에 흰글씨가 나오도록 강제하는 스타일을 구해서 추가했습니다.</p>\n<div id=\"code_1746704679016\" data-ke-type=\"html\" data-source=\"&lt;script src=&quot;https://gist.github.com/thisisone/51a65b00714a9c216ae09f83c8c0da7f.js&quot;&gt;&lt;/script&gt;\">\n<script src=\"https://gist.github.com/thisisone/51a65b00714a9c216ae09f83c8c0da7f.js\"></script>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">즐거운 블로그 생황이 되어라 얍</p>",
        "contentSnippet": "여기에서 글을 쓰고 블로그에 붙일 수 있나보다.\ngist: https://gist.github.com/\n\n \nDiscover gists\nGitHub Gist: instantly share code, notes, and snippets.\ngist.github.com\n\n \n붙여보기\n\n\n들어간건가.. 미리 보기 안되넹 ...\n \n배경색 검은색으로 고정은 안되려나 ..\n<div style=\"background:black;\">\n<script src=\"https://gist.github.com/thisisone/7d496222f4a975274a6d4dc1d506b2f5.js\"></script>\n</div>\n이렇게 붙여넣어봤다.\n\n\n\n \n \n \n잘들어간거 확인됨\ngist 페이지에서 코드를 수정할 수 가 없었다.\n내 컴에서 git clone 을 하고 고쳐서 올리면 바뀌는 것은 확인했다.\n\n\n글 작성후 오른족에 embed 라는 버튼이 있는데 눌러버몬 여러가지를 제공한다.\nembed 는 블로그 같은데 붙일 수 있는 html 태그를 주는 곳이고\nClone a Htts 는 git clone 할 수 있는 주소를 준다.\n수정이 귀찮지만 붙여넣기엔 velog 만큼 좋으니 활용해 봐야겠다.\nmd 파일은 아니라 모양을 낼 수 는 없었다.\n \n흰바당에서도 검은 바탕에 흰글씨가 나오도록 강제하는 스타일을 구해서 추가했습니다.\n\n\n \n즐거운 블로그 생황이 되어라 얍",
        "guid": "http://serverdown.tistory.com/1312",
        "categories": [
          "프로그래밍/개발메모",
          "gist",
          "github"
        ],
        "isoDate": "2025-05-08T10:29:32.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "FirebaseAnalytics.unitypackage 다운로드 / Unity / 용량 왜이케 크냐",
        "link": "http://serverdown.tistory.com/1311",
        "pubDate": "Thu, 8 May 2025 13:44:42 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1311#entry1311comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"402\" data-origin-height=\"125\"><span data-url=\"https://blog.kakaocdn.net/dn/b3ccDQ/btsNMTT2Tu2/8kTQYP1hmhTezUVKMt4pxK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b3ccDQ/btsNMTT2Tu2/8kTQYP1hmhTezUVKMt4pxK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b3ccDQ/btsNMTT2Tu2/8kTQYP1hmhTezUVKMt4pxK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb3ccDQ%2FbtsNMTT2Tu2%2F8kTQYP1hmhTezUVKMt4pxK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"402\" height=\"125\" data-origin-width=\"402\" data-origin-height=\"125\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이 패키지는 뭐길레 용량이 90메가가 넘는건지</p>\n<p data-ke-size=\"size16\">이걸 임포트를하면 git 이 350메가가 늘어버립니다.</p>\n<p data-ke-size=\"size16\">그래서 커밋하지 않고 패키지 파일로 가지고 다니느게 좋을 듯합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">.gitignore 파일을 추가해서&nbsp;<br />git 에 커밋되지 않게 제고 했습니다.</p>\n<p data-ke-size=\"size16\">/Assets/ExternalDependencyManager <br />/Assets/Editor\\&nbsp;Default\\&nbsp;Resources <br />/Assets/GeneratedLocalRepo <br />/Assets/firebase</p>\n<p data-ke-size=\"size16\">왜이케 크징</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">FirebaseAnalytics.unitypackage 다운로드 링크:</p>\n<p data-ke-size=\"size16\"><a href=\"https://drive.google.com/file/d/1y14XMmDNDreveM_C1Y5iorjSyc4_-Hj0/view?usp=sharing\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://drive.google.com/file/d/1y14XMmDNDreveM_C1Y5iorjSyc4_-Hj0/view?usp=sharing</a></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">구글아 용량좀 줄여다오</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "이 패키지는 뭐길레 용량이 90메가가 넘는건지\n이걸 임포트를하면 git 이 350메가가 늘어버립니다.\n그래서 커밋하지 않고 패키지 파일로 가지고 다니느게 좋을 듯합니다.\n \n.gitignore 파일을 추가해서 \ngit 에 커밋되지 않게 제고 했습니다.\n/Assets/ExternalDependencyManager \n/Assets/Editor\\ Default\\ Resources \n/Assets/GeneratedLocalRepo \n/Assets/firebase\n왜이케 크징\n \nFirebaseAnalytics.unitypackage 다운로드 링크:\nhttps://drive.google.com/file/d/1y14XMmDNDreveM_C1Y5iorjSyc4_-Hj0/view?usp=sharing\n \n구글아 용량좀 줄여다오",
        "guid": "http://serverdown.tistory.com/1311",
        "categories": [
          "프로그래밍/개발메모",
          "Firebase",
          "unity",
          "유니티",
          "파이어베이스"
        ],
        "isoDate": "2025-05-08T04:44:42.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "크몽 가입했습니다.",
        "link": "http://serverdown.tistory.com/1310",
        "pubDate": "Thu, 8 May 2025 12:19:05 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1310#entry1310comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"390\" data-origin-height=\"603\"><span data-url=\"https://blog.kakaocdn.net/dn/cHjpvT/btsNNIqGvyF/I3A5qGdkzYpV2a4RLwk770/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cHjpvT/btsNNIqGvyF/I3A5qGdkzYpV2a4RLwk770/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cHjpvT/btsNNIqGvyF/I3A5qGdkzYpV2a4RLwk770/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcHjpvT%2FbtsNNIqGvyF%2FI3A5qGdkzYpV2a4RLwk770%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"390\" height=\"603\" data-origin-width=\"390\" data-origin-height=\"603\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">일꺼리 찾아보아요</p>\n<p data-ke-size=\"size16\">링크: <a href=\"https://kmong.com/@%EC%83%81%EC%9D%B8%EB%8F%99#\">프로그램 개발, 웹사이트 신규 제작 전문가 상인동 - 크몽</a></p>\n<figure id=\"og_1746674319222\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"프로그램 개발, 웹사이트 신규 제작 전문가 상인동 - 크몽\" data-og-description=\"전문가 상인동 님을 만나보세요.\" data-og-host=\"kmong.com\" data-og-source-url=\"https://kmong.com/@%EC%83%81%EC%9D%B8%EB%8F%99#\" data-og-url=\"https://kmong.com/@%EC%83%81%EC%9D%B8%EB%8F%99\" data-og-image=\"https://scrap.kakaocdn.net/dn/fZtHc/hyYPoAUtR3/xCmWVdb4osfIIPtRutyKD0/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630\"><a href=\"https://kmong.com/@%EC%83%81%EC%9D%B8%EB%8F%99#\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://kmong.com/@%EC%83%81%EC%9D%B8%EB%8F%99#\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/fZtHc/hyYPoAUtR3/xCmWVdb4osfIIPtRutyKD0/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">프로그램 개발, 웹사이트 신규 제작 전문가 상인동 - 크몽</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">전문가 상인동 님을 만나보세요.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">kmong.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">재밌으려나 ...</p>",
        "contentSnippet": "일꺼리 찾아보아요\n링크: 프로그램 개발, 웹사이트 신규 제작 전문가 상인동 - 크몽\n\n \n프로그램 개발, 웹사이트 신규 제작 전문가 상인동 - 크몽\n전문가 상인동 님을 만나보세요.\nkmong.com\n\n재밌으려나 ...",
        "guid": "http://serverdown.tistory.com/1310",
        "categories": [
          "프로그래밍/개발메모",
          "크몽"
        ],
        "isoDate": "2025-05-08T03:19:05.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "유니티 웹 빌드 웹소켓 통신 구현 개발기 / Unity Web / WebSocket  / jslib",
        "link": "http://serverdown.tistory.com/1309",
        "pubDate": "Thu, 8 May 2025 10:52:03 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1309#entry1309comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1200\" data-origin-height=\"950\"><span data-url=\"https://blog.kakaocdn.net/dn/ySYWN/btsNNddgoW3/SoLW27qL8N0ZK9R0NKoZX1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ySYWN/btsNNddgoW3/SoLW27qL8N0ZK9R0NKoZX1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/ySYWN/btsNNddgoW3/SoLW27qL8N0ZK9R0NKoZX1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FySYWN%2FbtsNNddgoW3%2FSoLW27qL8N0ZK9R0NKoZX1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1200\" height=\"950\" data-origin-width=\"1200\" data-origin-height=\"950\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">진행하다 말다를 반복하는 웹빌드에서 웹소켓 사용하는 작업 메모입니다.</p>\n<p data-ke-size=\"size16\">이것이 구현된다면 웹 브라우저로 온라인 유니티 게임을 만들 수 있습니다.</p>\n<p data-ke-size=\"size16\">웹소켓은 실시간 통신이 된다는 것을 의미합니다.</p>\n<p data-ke-size=\"size16\">기술적으로는 가능하며 제대로된 결과물을 이번엔 만들어야겠다고 생각했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">플레이 데모 영상: <a href=\"https://www.youtube.com/watch?v=wHJ6zOM5Zuw\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=wHJ6zOM5Zuw</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=wHJ6zOM5Zuw\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/RUGxI/hyYRkdM1Zq/9GGUXfTwrHNawNsy4hZxVk/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360,https://scrap.kakaocdn.net/dn/c06HMM/hyYPmcpu80/qELZKc0aXHZkcwAuIYEd51/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360\" data-video-width=\"480\" data-video-height=\"360\" data-video-origin-width=\"480\" data-video-origin-height=\"360\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"SIDNFT Multiplay Tech Demo v1\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/wHJ6zOM5Zuw\" width=\"480\" height=\"360\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">웸브라우저를 두개 띄워 웹소켓 버서와 통신해서 서로 화면이 잘 맞는지 확인하는 영상입니다.</p>\n<p data-ke-size=\"size16\">싱크가 잘맞군요 결과물이 좋으니 개발당시 괴로웠던 시간이 잊혀지는군요<br />(잘가라 괴로워하던 과거의 나)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">유니티 참고 문서: <a href=\"https://docs.unity3d.com/kr/2018.4/Manual/webgl-interactingwithbrowserscripting.html\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://docs.unity3d.com/kr/2018.4/Manual/webgl-interactingwithbrowserscripting.html</a></p>\n<p data-ke-size=\"size16\">이 문서는 유니티 웹 빌드가 자바스크립트 함수를 호출하는 방식을 설명하고 있습니다.</p>\n<p data-ke-size=\"size16\">jslib 파일에 대애 알려주는데 Plugins/아무이름.jslib 에 두시면 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">개발 환경 매우 까다롭다.</h2>\n<p data-ke-size=\"size16\">웹 빌드는 빌드 시간이 오래걸립니다.</p>\n<p data-ke-size=\"size16\">에디터 상태에서는 jslib 는 동작하지 않기 습니다.<br />에디터에서는 c# 코드로 websocket-sharp 을 이용해서 통신을 하면 되고 확인도 쉽습니다.<br />빌드 한다음은 jslib 를 이용해 javascript 로 웹소켓 통신을 하고<br />결과를 유니티로 전달해야합니다.</p>\n<p data-ke-size=\"size16\">또한 빌드가 끝나고 자동으로 뜨는 결과물 페이지에서는<br />unityInstance 가 없기 때문에 SendMessage 를 이용해 유니티로 결과를 전달할 수가 없습니다.<br />이 부분때문에 index2.html 같은걸 만들어서 <br />별도의 node.js 서버에서 웹서버를 띄워서 SendMessage 를 사용할 수 있도록 해야합니다.</p>\n<p data-ke-size=\"size16\">개발이 불편한 환경입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">개발 환경 자세히</h2>\n<h3 data-ke-size=\"size23\">c# 에서 websocket 통신을 하려면</h3>\n<p data-ke-size=\"size16\">github: <a href=\"https://github.com/sta/websocket-sharp\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://github.com/sta/websocket-sharp</a></p>\n<p data-ke-size=\"size16\">websocket-sharp 이 폴더를 유니티에 붙여 넣으면 됩니다.</p>\n<p data-ke-size=\"size16\">이 c# 소스는 node.js 웹서버중 socket.io 랑 맞는게 아니고 ws 랑 맞는 방식입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\">웹 소켓 서버 / node.js + ws</h3>\n<p data-ke-size=\"size16\">웹 소켓 서버는 node.js 의 ws 를 이용했습니다.<br />socket.io 랑은 안맞습니다.<br />socket.io 쓰겠다면 c# 코드는 별도로 찾아보셔야 합니다.</p>\n<p data-ke-size=\"size16\">에니터에서는 개발이 쉽습니다.</p>\n<p data-ke-size=\"size16\">웹소켓 서버를 https (wss) 로 띄우는건 난이도가 있었습니다.<br />몇개의 페이지와 설명에서 잘못된 코드가 상위에 나오는 경우가 있었습니다. 이것 때문에 시간낭비가 꽤 있었습니다.</p>\n<p data-ke-size=\"size16\">공유기의 DDNS 와 letsencrypt 를 이용해 인증을 받아 사용했습니다.</p>\n<p data-ke-size=\"size16\">https 띄우기전 인증서를 넣을때<br />privatekey.pem 를 key 넣고<br /><span style=\"color: #ce9178; letter-spacing: 0px;\">fullchain.pem 을 cert 에 넣어서 성공했습니다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"color: #ce9178; letter-spacing: 0px;\">잘못된 코드들은<br />ca 를 사용하는 코드<br />funnchain.pem 이 아니고 chain.pem 을 사용하는 코드들은 동작이 실패했습니다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"color: #ce9178; letter-spacing: 0px;\">정확히 말하자면 https 는 동작했는데 <br />wss 통신이 실패하는 경우 였는데<br />상황이 복잡해서 많은 시간을 낭비했습니다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"color: #ce9178; letter-spacing: 0px;\">인증 문제는 잘못 되어도 별다른 힌트를 알 수 없었습니다.<br />서버가 죽는 것도 아니고 건 아니고 응답이 없기 때문 입니다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\">.jslib 파일</h3>\n<p data-ke-size=\"size16\">jslib 파일은 결국은 브라우저에서 동작하는 자바스크립트 코드가 있는 파일입니다.</p>\n<p data-ke-size=\"size16\">console.log 로 로그를 찍을 수 있으며 <br />var ws = new WebSocket 을 사용해 웹소켓 클라이언트도 구현할 수 있었습니다.</p>\n<p data-ke-size=\"size16\">프라우저에서 F12 눌러서 콘솔듸워 코딩할 수 있는 부분은 다 된다고 보면 된다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h4 style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size20\">개발 팁 1. jslib 파일을 직접 코딩하지말고 먼저 .js 파일로 동작을 확인한 다음 옮기자</h4>\n<p data-ke-size=\"size16\">.jslib 에서 문제가 생기면 문제를 찾는것과 고치고 확인하는 과정에서 시간낭비가 심합니다.</p>\n<p data-ke-size=\"size16\">vscode 에서 js 파일로 먼저 동작을 확인해보는 것이 좋습니다.</p>\n<p data-ke-size=\"size16\">테스트 까지 끝나면 jslib 에 코드를 복사-붙여넣기 하는 식으로만 사용했습니다.</p>\n<p data-ke-size=\"size16\">vscode 에서 .js 파일로 코딩하면 문법 확인, 들여쓰기도 자동으로 되서 편합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"756\" data-origin-height=\"524\"><span data-url=\"https://blog.kakaocdn.net/dn/buoPvY/btsNSBRX53Y/E0kxTERgIQpklpeFqO1qnK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/buoPvY/btsNSBRX53Y/E0kxTERgIQpklpeFqO1qnK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/buoPvY/btsNSBRX53Y/E0kxTERgIQpklpeFqO1qnK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbuoPvY%2FbtsNSBRX53Y%2FE0kxTERgIQpklpeFqO1qnK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"756\" height=\"524\" data-origin-width=\"756\" data-origin-height=\"524\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">.jslib 에서 바로 코딩을 시작하면 <br />코드 문법을 검사를 할 수 없고 <br />색깔로도 구분이 안되며<br />들여쓰기하는 시간도 걸립니다.</p>\n<p data-ke-size=\"size16\">이런일들은 시간낭비를 크게 발생시킵니다.</p>\n<p data-ke-size=\"size16\">반드시 .js 파일에서 미리 만들어 확인하고 <br />이왕이면 브라우저에서도 확인한 다음에 <br />.jslib 파일을 작성하도록 합시다.</p>\n<h4 style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size20\">&nbsp;</h4>\n<h4 style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size20\">개발 팁<span>&nbsp;</span>2. .jslib 함수내부에서는 try - catch 로 감싸야합니다.</h4>\n<p data-ke-size=\"size16\">위에 이미지 보면 try 코드가 보인다 이렇게 전체를 감싸야합니다.<br />jslib 내부에서 예외가 발생하면 에러를 읽기가 너무 어렵습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\">개발 팁 3. 거의 모든 줄에 로그를 넣읍시다.</h3>\n<p data-ke-size=\"size18\">.jslib 파일에서 문제가 발생하면 빌드 시간 때문에 시간낭비가 심합니다.</p>\n<p data-ke-size=\"size18\">어디서 에러가 나는지 한번에 알 수 있도록 로그를 빽빽히 넣는 편이 좋습니다.</p>\n<p data-ke-size=\"size18\">성공하고나면 지우더라도 개발중엔 이렇게 해야합니다.</p>\n<p data-ke-size=\"size18\">빌드시간 너무 깁니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\">개발 팁 4...jslib 의 함수는 리턴을 받을 수 없었다.</h3>\n<p data-ke-size=\"size16\">자바스크립트 -&gt; 유니티로 데이터를 받으려면 SendMessage 를 이용해 받는 방법밖에 없었습니다.</p>\n<p data-ke-size=\"size16\">함수에서 return 을 이용해 값을 받으려고 해도 유니티에서 읽지를 못했습니다.</p>\n<p data-ke-size=\"size16\">위에서도 설명했지만 SendMessage 를 사용하려면&nbsp; unityInstance 가 필요한데<br />기본빌드에서는 이 전역 변수가 없습니다.<br />전역 변수를 뽑기위한 과정때문에 또 하나의 절차가 유발 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\">브라우저의 javascript 에서 유니티로 데이터 보내기 SendMessage</h3>\n<p data-ke-size=\"size16\">함수 리턴은 받을 수 없었고 받을 수 있다고 해도 <br />통신 데이터를 받아야하는데<br />어차피 즉시 리턴 받는 기능을 쓸일은 없습니다.</p>\n<p data-ke-size=\"size16\">그래서 SendMessage 를 이용해 콜백을 해야하는데&nbsp;</p>\n<p data-ke-size=\"size16\">window.unityInstance.SendMessage( <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"@WebSocket\", <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"jslib_callback\", <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"onopen\" <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</p>\n<p data-ke-size=\"size16\">jslib 에 있는 콜백 코드 입니다.</p>\n<p data-ke-size=\"size16\">유니티의 <span style=\"text-align: start;\">@WebSocket 오브젝트에 <span style=\"text-align: start;\">jslib_callback(\"onopen\") 을 호출해주는 코드 예제입니다.</span></span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\"><span style=\"text-align: start;\">접속 되면 콜백 해주는 코드인데 문제는&nbsp;<br /></span></span> <span style=\"text-align: start;\">window.unityInstance<br /></span><span style=\"color: initial; letter-spacing: 0px;\">기본 빌드에서는 이 변수가 없습니다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"color: initial; letter-spacing: 0px;\">참고로 window 는 브라우저의 전역변수를 보관하는 변수입니다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">빌드에 나오는 index.html 매번 새로 만들어지기 때문에 여기다 코딩을 하면 날아갑니다.<br />index2.html 로 파일을 복사해서 거기서 편집하는 것이 좋습니다.<br /></span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">아래의 그림을 확인해서 then 안에 값을<br />window. <span style=\"text-align: start;\">unityInstance<span>&nbsp; = <span style=\"text-align: start;\">unityInstance;<br />저장해두세요.<br /></span></span></span></span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"761\" data-origin-height=\"424\"><span data-url=\"https://blog.kakaocdn.net/dn/2fMQh/btsNRKaWKji/kZhMVhveY4RkkgTBvo24hk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/2fMQh/btsNRKaWKji/kZhMVhveY4RkkgTBvo24hk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/2fMQh/btsNRKaWKji/kZhMVhveY4RkkgTBvo24hk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F2fMQh%2FbtsNRKaWKji%2FkZhMVhveY4RkkgTBvo24hk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"761\" height=\"424\" data-origin-width=\"761\" data-origin-height=\"424\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\"><span style=\"text-align: start;\"><span><span style=\"text-align: start;\">유니티 로드가 끝나면 then 이 호출 됩니다.</span></span></span></span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\"><span style=\"text-align: start;\"><span><span style=\"text-align: start;\">전역변수로 보관해두고 jslib 에서 사용하면 문제가 없습니다.</span></span></span></span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\"><span style=\"text-align: start;\"><span><span style=\"text-align: start;\">이왕이면 유니티 측에서 빌드될때 강제로 좀 window 에 넣어달라고 요청해볼 생각입니다..</span></span></span></span></p>\n<p data-ke-size=\"size16\">그래서 빌드 후 자동으로 뜨는 결과물 창은 쓸모가 없습니다.</p>\n<p data-ke-size=\"size16\">결과물을 별도로 돌릴 웹 서버를 node.js 로 짜두면 편할 것입니다.<br />이전에 작성해둔 유니티 웹 (br 과 gz 을 지원하는) express 서버 띄우기글이 있습니다.<br />이글은 압축방식을 지워하기 위해 제작하였는데 테스트하는데 많은 도움이 되었습니다.</p>\n<p data-ke-size=\"size16\">링크 : <a href=\"https://serverdown.tistory.com/1225\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://serverdown.tistory.com/1225</a></p>\n<figure id=\"og_1746801221617\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"vercel 로 express 서버를 배포해보자 / 유니티 webgl 압축 지원하는 페이지를 배포 가능\" data-og-description=\"몇일전...vercel 불편하다고 징징한 글을 올렸었는데요과거의 징징글: vercel 처음 써보고 분노한 개발자 사용기 / 배포 deploy / setInterval 안됨새로운 가능성 발견투자한 시간이 아까워 더 찾아봤습니\" data-og-host=\"blog.sidnft.com\" data-og-source-url=\"https://serverdown.tistory.com/1225\" data-og-url=\"https://blog.sidnft.com/1225\" data-og-image=\"https://scrap.kakaocdn.net/dn/66pTW/hyYRuHqE4Y/8eukv1OTMKjpArSBXb8DI1/img.png?width=344&amp;height=147&amp;face=0_0_344_147,https://scrap.kakaocdn.net/dn/XxLo0/hyYRwrIdBA/rmmy6ifKzyRp6fBSb516wK/img.png?width=344&amp;height=147&amp;face=0_0_344_147,https://scrap.kakaocdn.net/dn/bcd66f/hyYPcOqbHb/X3pXCXB8kSTAy4QnkkBkH0/img.png?width=320&amp;height=320&amp;face=0_0_320_320\"><a href=\"https://serverdown.tistory.com/1225\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://serverdown.tistory.com/1225\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/66pTW/hyYRuHqE4Y/8eukv1OTMKjpArSBXb8DI1/img.png?width=344&amp;height=147&amp;face=0_0_344_147,https://scrap.kakaocdn.net/dn/XxLo0/hyYRwrIdBA/rmmy6ifKzyRp6fBSb516wK/img.png?width=344&amp;height=147&amp;face=0_0_344_147,https://scrap.kakaocdn.net/dn/bcd66f/hyYPcOqbHb/X3pXCXB8kSTAy4QnkkBkH0/img.png?width=320&amp;height=320&amp;face=0_0_320_320');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">vercel 로 express 서버를 배포해보자 / 유니티 webgl 압축 지원하는 페이지를 배포 가능</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">몇일전...vercel 불편하다고 징징한 글을 올렸었는데요과거의 징징글: vercel 처음 써보고 분노한 개발자 사용기 / 배포 deploy / setInterval 안됨새로운 가능성 발견투자한 시간이 아까워 더 찾아봤습니</p>\n<p class=\"og-host\" data-ke-size=\"size16\">blog.sidnft.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">저는 개발할 당시 웹소켓 서버 따로 유니티웹 띄우는 서버 따로 해서 동시에 두개 돌리고있었는데<br />지금 생각해보니 한 서버에 둘다 돌려도 되는거 였는데<br />당시엔 피곤해서 그 생각을 못했었습니다.</p>\n<p data-ke-size=\"size16\">이 환경이 갖춰지면 테스트하기엔 충분한 환경이 갖춰졌습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">데모 페이지</h2>\n<p data-ke-size=\"size16\">링크: <a href=\"https://unity.sidnft.com/\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://unity.sidnft.com/</a></p>\n<figure id=\"og_1746801543109\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"SIDNFT's Web Game Demo\" data-og-description=\"\" data-og-host=\"unity.sidnft.com\" data-og-source-url=\"https://unity.sidnft.com/\" data-og-url=\"https://unity.sidnft.com/\" data-og-image=\"\"><a href=\"https://unity.sidnft.com/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://unity.sidnft.com/\">\n<div class=\"og-image\" style=\"background-image: url();\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">SIDNFT's Web Game Demo</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">&nbsp;</p>\n<p class=\"og-host\" data-ke-size=\"size16\">unity.sidnft.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">이 페이지에 가면 Multiplay Demo 링크가 있습니다..</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"621\" data-origin-height=\"471\"><span data-url=\"https://blog.kakaocdn.net/dn/AJnzQ/btsNRIYwTZU/XyStMbnziXHzcnBRkTVTK0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/AJnzQ/btsNRIYwTZU/XyStMbnziXHzcnBRkTVTK0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/AJnzQ/btsNRIYwTZU/XyStMbnziXHzcnBRkTVTK0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FAJnzQ%2FbtsNRIYwTZU%2FXyStMbnziXHzcnBRkTVTK0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"621\" height=\"471\" data-origin-width=\"621\" data-origin-height=\"471\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">입장 버튼을 크게 키워야 겠군요. 아주 작네요</p>\n<p data-ke-size=\"size16\">사람이 없을테니 브라우저 창을 여러개 띄워서 클릭해보면 통신이 된다는 거을 알 수 있을 것이다.</p>\n<p data-ke-size=\"size16\">1. 허공을 찍으면 내 박스가 그곳으로 이동합니다.<br />2. 내 박스를 클릭하면 숫자가 올라갑니다. 크기도 커집니다.<br />3. 다른 유저의 박스를 클릭하면 숫자가 내려갑니다. 크기도 작아집니다.</p>\n<p data-ke-size=\"size16\">딱 이정도 기능만 구현했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\">Unity Play 에서는 ...</h3>\n<p data-ke-size=\"size16\">혹시나 해서&nbsp; Unity Play 에서는 어떻게 되어있나 확인해봤습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"423\" data-origin-height=\"196\"><span data-url=\"https://blog.kakaocdn.net/dn/cAH0Ry/btsNQYgrNTt/f4sZcQIP2XRzEcuaS8fPU0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cAH0Ry/btsNQYgrNTt/f4sZcQIP2XRzEcuaS8fPU0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cAH0Ry/btsNQYgrNTt/f4sZcQIP2XRzEcuaS8fPU0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcAH0Ry%2FbtsNQYgrNTt%2Ff4sZcQIP2XRzEcuaS8fPU0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"423\" height=\"196\" data-origin-width=\"423\" data-origin-height=\"196\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">gameInstance = instance;</span></p>\n<p data-ke-size=\"size16\">얘네들은 문제 점을 인식하고 있었군요.<br />전역변수에 값을 저장해두고 있었습니다.</p>\n<p data-ke-size=\"size16\">이 변수를 사용할 수 있을꺼 같아서<br />추가 로 작업을 했는데 활용 가능했습니다.</p>\n<p data-ke-size=\"size16\">Unity Play Multiplay Demo 링크: <a href=\"https://play.unity.com/en/games/ad4d2c84-f8bb-4c0e-9261-4703c1b9860d/mpdemo\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://play.unity.com/en/games/ad4d2c84-f8bb-4c0e-9261-4703c1b9860d/mpdemo</a></p>\n<figure id=\"og_1746804884291\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"mp_demo on Unity Play\" data-og-description=\"mp_demo\" data-og-host=\"play.unity.com\" data-og-source-url=\"https://play.unity.com/en/games/ad4d2c84-f8bb-4c0e-9261-4703c1b9860d/mpdemo\" data-og-url=\"https://play.unity.com/en/games/ad4d2c84-f8bb-4c0e-9261-4703c1b9860d/mpdemo\" data-og-image=\"https://scrap.kakaocdn.net/dn/bIJ5gi/hyYPhvoqDH/OufxfIYL6xvdnKj2HqvNe0/img.png?width=1024&amp;height=1024&amp;face=0_0_1024_1024,https://scrap.kakaocdn.net/dn/ogXhl/hyYRu8w3Iv/e1q36etDpQsBGZLrEYJmqk/img.png?width=1024&amp;height=1024&amp;face=0_0_1024_1024\"><a href=\"https://play.unity.com/en/games/ad4d2c84-f8bb-4c0e-9261-4703c1b9860d/mpdemo\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://play.unity.com/en/games/ad4d2c84-f8bb-4c0e-9261-4703c1b9860d/mpdemo\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bIJ5gi/hyYPhvoqDH/OufxfIYL6xvdnKj2HqvNe0/img.png?width=1024&amp;height=1024&amp;face=0_0_1024_1024,https://scrap.kakaocdn.net/dn/ogXhl/hyYRu8w3Iv/e1q36etDpQsBGZLrEYJmqk/img.png?width=1024&amp;height=1024&amp;face=0_0_1024_1024');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">mp_demo on Unity Play</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">mp_demo</p>\n<p class=\"og-host\" data-ke-size=\"size16\">play.unity.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">jslib 에 추가된 코드는 아래와 같습니다.</p>\n<p data-ke-size=\"size16\">mergeInto(LibraryManager.library,&nbsp;{ <br />&nbsp;&nbsp;jslib_call_action:&nbsp;function&nbsp;(_v)&nbsp;{ <br />&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;jslib_callback(val)&nbsp;{ <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;go_name&nbsp;=&nbsp;\"@WebSocket\"; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;func_name&nbsp;=&nbsp;\"jslib_callback\"; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(window.unityInstance)&nbsp;{ <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window.unityInstance.SendMessage(go_name,&nbsp;func_name,&nbsp;val); <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(window.gameInstance)&nbsp;{ <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window.gameInstance.SendMessage(go_name,&nbsp;func_name,&nbsp;val); <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(gameInstance)&nbsp;{ <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gameInstance.SendMessage(go_name,&nbsp;func_name,&nbsp;val); <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{ <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.error( <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"SendMessage&nbsp;fail,&nbsp;need&nbsp;instance\", <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;go_name, <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;func_name, <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;); <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <br />&nbsp;&nbsp;&nbsp;&nbsp;} <br /><br />&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{ <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;v&nbsp;=&nbsp;UTF8ToString(_v); <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;console.log(\"jslib_call_action\",&nbsp;v);</p>\n<p data-ke-size=\"size16\">~~~~ (생략)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">코드는 요런식으로 추가되었고</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1073\" data-origin-height=\"800\"><span data-url=\"https://blog.kakaocdn.net/dn/K6XHv/btsNTnyF8OH/EMbFknuGf94jJtvLo2KVYK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/K6XHv/btsNTnyF8OH/EMbFknuGf94jJtvLo2KVYK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/K6XHv/btsNTnyF8OH/EMbFknuGf94jJtvLo2KVYK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FK6XHv%2FbtsNTnyF8OH%2FEMbFknuGf94jJtvLo2KVYK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1073\" height=\"800\" data-origin-width=\"1073\" data-origin-height=\"800\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">window.gameInstance&nbsp;가&nbsp;맞는지</p>\n<p data-ke-size=\"size16\">gameInstance 가 맞는지 확신이 없어서 둘다 넣었습니다.</p>\n<p data-ke-size=\"size16\">빌드를 두번하긴 싫어서 입니다.</p>\n<p data-ke-size=\"size16\">되는지 확인했으니 Unity Play 적극적으로 활용해도 되겠습니다.</p>",
        "contentSnippet": "진행하다 말다를 반복하는 웹빌드에서 웹소켓 사용하는 작업 메모입니다.\n이것이 구현된다면 웹 브라우저로 온라인 유니티 게임을 만들 수 있습니다.\n웹소켓은 실시간 통신이 된다는 것을 의미합니다.\n기술적으로는 가능하며 제대로된 결과물을 이번엔 만들어야겠다고 생각했습니다.\n \n플레이 데모 영상: https://www.youtube.com/watch?v=wHJ6zOM5Zuw\n\n\n\n웸브라우저를 두개 띄워 웹소켓 버서와 통신해서 서로 화면이 잘 맞는지 확인하는 영상입니다.\n싱크가 잘맞군요 결과물이 좋으니 개발당시 괴로웠던 시간이 잊혀지는군요\n(잘가라 괴로워하던 과거의 나)\n \n유니티 참고 문서: https://docs.unity3d.com/kr/2018.4/Manual/webgl-interactingwithbrowserscripting.html\n이 문서는 유니티 웹 빌드가 자바스크립트 함수를 호출하는 방식을 설명하고 있습니다.\njslib 파일에 대애 알려주는데 Plugins/아무이름.jslib 에 두시면 됩니다.\n \n개발 환경 매우 까다롭다.\n웹 빌드는 빌드 시간이 오래걸립니다.\n에디터 상태에서는 jslib 는 동작하지 않기 습니다.\n에디터에서는 c# 코드로 websocket-sharp 을 이용해서 통신을 하면 되고 확인도 쉽습니다.\n빌드 한다음은 jslib 를 이용해 javascript 로 웹소켓 통신을 하고\n결과를 유니티로 전달해야합니다.\n또한 빌드가 끝나고 자동으로 뜨는 결과물 페이지에서는\nunityInstance 가 없기 때문에 SendMessage 를 이용해 유니티로 결과를 전달할 수가 없습니다.\n이 부분때문에 index2.html 같은걸 만들어서 \n별도의 node.js 서버에서 웹서버를 띄워서 SendMessage 를 사용할 수 있도록 해야합니다.\n개발이 불편한 환경입니다.\n \n개발 환경 자세히\nc# 에서 websocket 통신을 하려면\ngithub: https://github.com/sta/websocket-sharp\nwebsocket-sharp 이 폴더를 유니티에 붙여 넣으면 됩니다.\n이 c# 소스는 node.js 웹서버중 socket.io 랑 맞는게 아니고 ws 랑 맞는 방식입니다.\n \n웹 소켓 서버 / node.js + ws\n웹 소켓 서버는 node.js 의 ws 를 이용했습니다.\nsocket.io 랑은 안맞습니다.\nsocket.io 쓰겠다면 c# 코드는 별도로 찾아보셔야 합니다.\n에니터에서는 개발이 쉽습니다.\n웹소켓 서버를 https (wss) 로 띄우는건 난이도가 있었습니다.\n몇개의 페이지와 설명에서 잘못된 코드가 상위에 나오는 경우가 있었습니다. 이것 때문에 시간낭비가 꽤 있었습니다.\n공유기의 DDNS 와 letsencrypt 를 이용해 인증을 받아 사용했습니다.\nhttps 띄우기전 인증서를 넣을때\nprivatekey.pem 를 key 넣고\nfullchain.pem 을 cert 에 넣어서 성공했습니다.\n잘못된 코드들은\nca 를 사용하는 코드\nfunnchain.pem 이 아니고 chain.pem 을 사용하는 코드들은 동작이 실패했습니다.\n정확히 말하자면 https 는 동작했는데 \nwss 통신이 실패하는 경우 였는데\n상황이 복잡해서 많은 시간을 낭비했습니다.\n인증 문제는 잘못 되어도 별다른 힌트를 알 수 없었습니다.\n서버가 죽는 것도 아니고 건 아니고 응답이 없기 때문 입니다.\n \n.jslib 파일\njslib 파일은 결국은 브라우저에서 동작하는 자바스크립트 코드가 있는 파일입니다.\nconsole.log 로 로그를 찍을 수 있으며 \nvar ws = new WebSocket 을 사용해 웹소켓 클라이언트도 구현할 수 있었습니다.\n프라우저에서 F12 눌러서 콘솔듸워 코딩할 수 있는 부분은 다 된다고 보면 된다.\n \n개발 팁 1. jslib 파일을 직접 코딩하지말고 먼저 .js 파일로 동작을 확인한 다음 옮기자\n.jslib 에서 문제가 생기면 문제를 찾는것과 고치고 확인하는 과정에서 시간낭비가 심합니다.\nvscode 에서 js 파일로 먼저 동작을 확인해보는 것이 좋습니다.\n테스트 까지 끝나면 jslib 에 코드를 복사-붙여넣기 하는 식으로만 사용했습니다.\nvscode 에서 .js 파일로 코딩하면 문법 확인, 들여쓰기도 자동으로 되서 편합니다.\n\n\n.jslib 에서 바로 코딩을 시작하면 \n코드 문법을 검사를 할 수 없고 \n색깔로도 구분이 안되며\n들여쓰기하는 시간도 걸립니다.\n이런일들은 시간낭비를 크게 발생시킵니다.\n반드시 .js 파일에서 미리 만들어 확인하고 \n이왕이면 브라우저에서도 확인한 다음에 \n.jslib 파일을 작성하도록 합시다.\n \n개발 팁 2. .jslib 함수내부에서는 try - catch 로 감싸야합니다.\n위에 이미지 보면 try 코드가 보인다 이렇게 전체를 감싸야합니다.\njslib 내부에서 예외가 발생하면 에러를 읽기가 너무 어렵습니다.\n \n개발 팁 3. 거의 모든 줄에 로그를 넣읍시다.\n.jslib 파일에서 문제가 발생하면 빌드 시간 때문에 시간낭비가 심합니다.\n어디서 에러가 나는지 한번에 알 수 있도록 로그를 빽빽히 넣는 편이 좋습니다.\n성공하고나면 지우더라도 개발중엔 이렇게 해야합니다.\n빌드시간 너무 깁니다.\n \n개발 팁 4...jslib 의 함수는 리턴을 받을 수 없었다.\n자바스크립트 -> 유니티로 데이터를 받으려면 SendMessage 를 이용해 받는 방법밖에 없었습니다.\n함수에서 return 을 이용해 값을 받으려고 해도 유니티에서 읽지를 못했습니다.\n위에서도 설명했지만 SendMessage 를 사용하려면  unityInstance 가 필요한데\n기본빌드에서는 이 전역 변수가 없습니다.\n전역 변수를 뽑기위한 과정때문에 또 하나의 절차가 유발 됩니다.\n \n브라우저의 javascript 에서 유니티로 데이터 보내기 SendMessage\n함수 리턴은 받을 수 없었고 받을 수 있다고 해도 \n통신 데이터를 받아야하는데\n어차피 즉시 리턴 받는 기능을 쓸일은 없습니다.\n그래서 SendMessage 를 이용해 콜백을 해야하는데 \nwindow.unityInstance.SendMessage( \n            \"@WebSocket\", \n            \"jslib_callback\", \n            \"onopen\" \n          );\njslib 에 있는 콜백 코드 입니다.\n유니티의 @WebSocket 오브젝트에 jslib_callback(\"onopen\") 을 호출해주는 코드 예제입니다.\n접속 되면 콜백 해주는 코드인데 문제는 \n window.unityInstance\n기본 빌드에서는 이 변수가 없습니다.\n참고로 window 는 브라우저의 전역변수를 보관하는 변수입니다.\n빌드에 나오는 index.html 매번 새로 만들어지기 때문에 여기다 코딩을 하면 날아갑니다.\nindex2.html 로 파일을 복사해서 거기서 편집하는 것이 좋습니다.\n\n아래의 그림을 확인해서 then 안에 값을\nwindow. unityInstance  = unityInstance;\n저장해두세요.\n\n\n\n유니티 로드가 끝나면 then 이 호출 됩니다.\n전역변수로 보관해두고 jslib 에서 사용하면 문제가 없습니다.\n이왕이면 유니티 측에서 빌드될때 강제로 좀 window 에 넣어달라고 요청해볼 생각입니다..\n그래서 빌드 후 자동으로 뜨는 결과물 창은 쓸모가 없습니다.\n결과물을 별도로 돌릴 웹 서버를 node.js 로 짜두면 편할 것입니다.\n이전에 작성해둔 유니티 웹 (br 과 gz 을 지원하는) express 서버 띄우기글이 있습니다.\n이글은 압축방식을 지워하기 위해 제작하였는데 테스트하는데 많은 도움이 되었습니다.\n링크 : https://serverdown.tistory.com/1225\n\n \nvercel 로 express 서버를 배포해보자 / 유니티 webgl 압축 지원하는 페이지를 배포 가능\n몇일전...vercel 불편하다고 징징한 글을 올렸었는데요과거의 징징글: vercel 처음 써보고 분노한 개발자 사용기 / 배포 deploy / setInterval 안됨새로운 가능성 발견투자한 시간이 아까워 더 찾아봤습니\nblog.sidnft.com\n\n \n저는 개발할 당시 웹소켓 서버 따로 유니티웹 띄우는 서버 따로 해서 동시에 두개 돌리고있었는데\n지금 생각해보니 한 서버에 둘다 돌려도 되는거 였는데\n당시엔 피곤해서 그 생각을 못했었습니다.\n이 환경이 갖춰지면 테스트하기엔 충분한 환경이 갖춰졌습니다.\n \n데모 페이지\n링크: https://unity.sidnft.com/\n\n \nSIDNFT's Web Game Demo\n \nunity.sidnft.com\n\n이 페이지에 가면 Multiplay Demo 링크가 있습니다..\n\n\n입장 버튼을 크게 키워야 겠군요. 아주 작네요\n사람이 없을테니 브라우저 창을 여러개 띄워서 클릭해보면 통신이 된다는 거을 알 수 있을 것이다.\n1. 허공을 찍으면 내 박스가 그곳으로 이동합니다.\n2. 내 박스를 클릭하면 숫자가 올라갑니다. 크기도 커집니다.\n3. 다른 유저의 박스를 클릭하면 숫자가 내려갑니다. 크기도 작아집니다.\n딱 이정도 기능만 구현했습니다.\n \nUnity Play 에서는 ...\n혹시나 해서  Unity Play 에서는 어떻게 되어있나 확인해봤습니다.\n\n\ngameInstance = instance;\n얘네들은 문제 점을 인식하고 있었군요.\n전역변수에 값을 저장해두고 있었습니다.\n이 변수를 사용할 수 있을꺼 같아서\n추가 로 작업을 했는데 활용 가능했습니다.\nUnity Play Multiplay Demo 링크: https://play.unity.com/en/games/ad4d2c84-f8bb-4c0e-9261-4703c1b9860d/mpdemo\n\n \nmp_demo on Unity Play\nmp_demo\nplay.unity.com\n\n \njslib 에 추가된 코드는 아래와 같습니다.\nmergeInto(LibraryManager.library, { \n  jslib_call_action: function (_v) { \n    function jslib_callback(val) { \n      const go_name = \"@WebSocket\"; \n      const func_name = \"jslib_callback\"; \n      if (window.unityInstance) { \n        window.unityInstance.SendMessage(go_name, func_name, val); \n      } else if (window.gameInstance) { \n        window.gameInstance.SendMessage(go_name, func_name, val); \n      } else if (gameInstance) { \n        gameInstance.SendMessage(go_name, func_name, val); \n      } else { \n        console.error( \n          \"SendMessage fail, need instance\", \n          go_name, \n          func_name, \n          val \n        ); \n      } \n    } \n    try { \n      const v = UTF8ToString(_v); \n      // console.log(\"jslib_call_action\", v);\n~~~~ (생략)\n \n코드는 요런식으로 추가되었고\n\n\nwindow.gameInstance 가 맞는지\ngameInstance 가 맞는지 확신이 없어서 둘다 넣었습니다.\n빌드를 두번하긴 싫어서 입니다.\n되는지 확인했으니 Unity Play 적극적으로 활용해도 되겠습니다.",
        "guid": "http://serverdown.tistory.com/1309",
        "categories": [
          "프로그래밍/개발메모",
          "unity",
          "web",
          "websocket",
          "wevgl",
          "웹",
          "웹소켓",
          "유니티"
        ],
        "isoDate": "2025-05-08T01:52:03.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "SSD 싸졌어요 / WD BLUE SSD 1TB  / 4.4만",
        "link": "http://serverdown.tistory.com/1308",
        "pubDate": "Wed, 7 May 2025 10:49:02 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1308#entry1308comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"542\" data-origin-height=\"456\"><span data-url=\"https://blog.kakaocdn.net/dn/bi2eAZ/btsNKAmw8X5/Cim8bOezh3AdIjBhT82Ki1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bi2eAZ/btsNKAmw8X5/Cim8bOezh3AdIjBhT82Ki1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bi2eAZ/btsNKAmw8X5/Cim8bOezh3AdIjBhT82Ki1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbi2eAZ%2FbtsNKAmw8X5%2FCim8bOezh3AdIjBhT82Ki1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"542\" height=\"456\" data-origin-width=\"542\" data-origin-height=\"456\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">보드가 옛날꺼라 NVME 슬롯이 1개 뿐이군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">쿠팡 링크: <a href=\"https://www.coupang.com/vp/products/8703461203?itemId=25275293447&amp;vendorItemId=92270931798&amp;q=ssd+1tb&amp;itemsCount=36&amp;searchId=ac989eb42646023&amp;rank=0&amp;searchRank=0&amp;isAddedCart=\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.coupang.com/vp/products/8703461203?itemId=25275293447&amp;vendorItemId=92270931798&amp;q=ssd+1tb&amp;itemsCount=36&amp;searchId=ac989eb42646023&amp;rank=0&amp;searchRank=0&amp;isAddedCart=</a></p>\n<figure id=\"og_1746585647892\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"WD Blue SA510 SATA SSD 1TB SA510 3D - SSD | 쿠팡\" data-og-description=\"쿠팡에서 WD Blue SA510 SATA SSD 1TB SA510 3D 구매하고 더 많은 혜택을 받으세요! 지금 할인중인 다른 SSD 제품도 바로 쿠팡에서 확인할 수 있습니다.\" data-og-host=\"www.coupang.com\" data-og-source-url=\"https://www.coupang.com/vp/products/8703461203?itemId=25275293447&amp;vendorItemId=92270931798&amp;q=ssd+1tb&amp;itemsCount=36&amp;searchId=ac989eb42646023&amp;rank=0&amp;searchRank=0&amp;isAddedCart=\" data-og-url=\"https://www.coupang.com/vp/products/8703461203?vendorItemId=92270931798\" data-og-image=\"https://scrap.kakaocdn.net/dn/bgHNYv/hyYRoNt1iG/0MxaDQ8vv5Z6RitwbUQruK/img.png?width=492&amp;height=492&amp;face=0_0_492_492,https://scrap.kakaocdn.net/dn/bEb8Za/hyYMX43TPZ/ydfjyNviwmNEIqoSTQ9Zg1/img.png?width=492&amp;height=492&amp;face=0_0_492_492\"><a href=\"https://www.coupang.com/vp/products/8703461203?itemId=25275293447&amp;vendorItemId=92270931798&amp;q=ssd+1tb&amp;itemsCount=36&amp;searchId=ac989eb42646023&amp;rank=0&amp;searchRank=0&amp;isAddedCart=\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://www.coupang.com/vp/products/8703461203?itemId=25275293447&amp;vendorItemId=92270931798&amp;q=ssd+1tb&amp;itemsCount=36&amp;searchId=ac989eb42646023&amp;rank=0&amp;searchRank=0&amp;isAddedCart=\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bgHNYv/hyYRoNt1iG/0MxaDQ8vv5Z6RitwbUQruK/img.png?width=492&amp;height=492&amp;face=0_0_492_492,https://scrap.kakaocdn.net/dn/bEb8Za/hyYMX43TPZ/ydfjyNviwmNEIqoSTQ9Zg1/img.png?width=492&amp;height=492&amp;face=0_0_492_492');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">WD Blue SA510 SATA SSD 1TB SA510 3D - SSD | 쿠팡</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">쿠팡에서 WD Blue SA510 SATA SSD 1TB SA510 3D 구매하고 더 많은 혜택을 받으세요! 지금 할인중인 다른 SSD 제품도 바로 쿠팡에서 확인할 수 있습니다.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">www.coupang.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">참고로 저는 쿠팡 파트너가 아니라 저한태 떨어지는건 없습니다.<br />너무 싸서 링크 남겨놓습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">별수 없이 SSD 를 달아야하는데</p>\n<p data-ke-size=\"size16\">검색해보니 어마어마하게 싸게 팔고 있었군요</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"488\" data-origin-height=\"340\"><span data-url=\"https://blog.kakaocdn.net/dn/QVvyf/btsNMc5QBxS/Bo38gKKQHQ0acra9TPVKe0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/QVvyf/btsNMc5QBxS/Bo38gKKQHQ0acra9TPVKe0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/QVvyf/btsNMc5QBxS/Bo38gKKQHQ0acra9TPVKe0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FQVvyf%2FbtsNMc5QBxS%2FBo38gKKQHQ0acra9TPVKe0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"488\" height=\"340\" data-origin-width=\"488\" data-origin-height=\"340\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">말은 쿠팡 와우 할인이라 싸게 파는거 같지만</p>\n<p data-ke-size=\"size16\">미준 무역분쟁으로 미국으로 못가는 제품이 한국으로 오는거 같군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"786\" data-origin-height=\"119\"><span data-url=\"https://blog.kakaocdn.net/dn/cRbHBC/btsNLcMlv9E/REMiTtqAjGosSVnCK7pmTK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cRbHBC/btsNLcMlv9E/REMiTtqAjGosSVnCK7pmTK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cRbHBC/btsNLcMlv9E/REMiTtqAjGosSVnCK7pmTK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcRbHBC%2FbtsNLcMlv9E%2FREMiTtqAjGosSVnCK7pmTK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"786\" height=\"119\" data-origin-width=\"786\" data-origin-height=\"119\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">요런 문구가 있군요 덤핑으로 오는게 맞나봅니당</p>\n<p data-ke-size=\"size16\">A/S 는 불가지만 구입해보겠습니다.</p>\n<p data-ke-size=\"size16\">설마 고장난걸 주진않겠죠</p>\n<p data-ke-size=\"size16\">SSD 가 고장나는건 본적이 없으니</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"337\" data-origin-height=\"147\"><span data-url=\"https://blog.kakaocdn.net/dn/dmEeBB/btsNMKODu7v/HDKQifvW2l8bh45a245VS1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dmEeBB/btsNMKODu7v/HDKQifvW2l8bh45a245VS1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dmEeBB/btsNMKODu7v/HDKQifvW2l8bh45a245VS1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdmEeBB%2FbtsNMKODu7v%2FHDKQifvW2l8bh45a245VS1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"337\" height=\"147\" data-origin-width=\"337\" data-origin-height=\"147\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">와우</p>",
        "contentSnippet": "보드가 옛날꺼라 NVME 슬롯이 1개 뿐이군요\n \n쿠팡 링크: https://www.coupang.com/vp/products/8703461203?itemId=25275293447&vendorItemId=92270931798&q=ssd+1tb&itemsCount=36&searchId=ac989eb42646023&rank=0&searchRank=0&isAddedCart=\n\n \nWD Blue SA510 SATA SSD 1TB SA510 3D - SSD | 쿠팡\n쿠팡에서 WD Blue SA510 SATA SSD 1TB SA510 3D 구매하고 더 많은 혜택을 받으세요! 지금 할인중인 다른 SSD 제품도 바로 쿠팡에서 확인할 수 있습니다.\nwww.coupang.com\n\n참고로 저는 쿠팡 파트너가 아니라 저한태 떨어지는건 없습니다.\n너무 싸서 링크 남겨놓습니다.\n \n별수 없이 SSD 를 달아야하는데\n검색해보니 어마어마하게 싸게 팔고 있었군요\n\n\n말은 쿠팡 와우 할인이라 싸게 파는거 같지만\n미준 무역분쟁으로 미국으로 못가는 제품이 한국으로 오는거 같군요\n \n\n\n요런 문구가 있군요 덤핑으로 오는게 맞나봅니당\nA/S 는 불가지만 구입해보겠습니다.\n설마 고장난걸 주진않겠죠\nSSD 가 고장나는건 본적이 없으니\n \n\n\n와우",
        "guid": "http://serverdown.tistory.com/1308",
        "categories": [
          "프로그래밍/개발메모",
          "ssd",
          "쿠팡",
          "하드웨어"
        ],
        "isoDate": "2025-05-07T01:49:02.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "Anime Girl Singer / 영상 연출에 눌러버린 구매버튼 후기",
        "link": "http://serverdown.tistory.com/1307",
        "pubDate": "Tue, 6 May 2025 23:52:33 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1307#entry1307comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1076\" data-origin-height=\"520\"><span data-url=\"https://blog.kakaocdn.net/dn/4Jb0w/btsNJUFDNBY/cWGkhgxa7D1v3Qm4WSQ8xk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/4Jb0w/btsNJUFDNBY/cWGkhgxa7D1v3Qm4WSQ8xk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/4Jb0w/btsNJUFDNBY/cWGkhgxa7D1v3Qm4WSQ8xk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F4Jb0w%2FbtsNJUFDNBY%2FcWGkhgxa7D1v3Qm4WSQ8xk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1076\" height=\"520\" data-origin-width=\"1076\" data-origin-height=\"520\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">할인 종료 임박 문구에 낚여서 구매했습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"955\" data-origin-height=\"222\"><span data-url=\"https://blog.kakaocdn.net/dn/biyUFh/btsNKrbYKp9/WPApfsXZapNV3uSvNwkVg0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/biyUFh/btsNKrbYKp9/WPApfsXZapNV3uSvNwkVg0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/biyUFh/btsNKrbYKp9/WPApfsXZapNV3uSvNwkVg0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbiyUFh%2FbtsNKrbYKp9%2FWPApfsXZapNV3uSvNwkVg0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"955\" height=\"222\" data-origin-width=\"955\" data-origin-height=\"222\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">그런데 ...</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">홍보 영상: <a href=\"https://www.youtube.com/watch?v=MgqNPe6QXKM\">GAME 3D MODEL ANIME GIRL- SINGER - UE4</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=MgqNPe6QXKM\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/b03SE9/hyYL5WpwpD/an5LQSOY817zbplOzjPpyk/img.jpg?width=1280&amp;height=720&amp;face=610_104_754_260,https://scrap.kakaocdn.net/dn/pzHB0/hyYRpFy32z/Pzsj5mLkxqOocyIEbLbRkK/img.jpg?width=1280&amp;height=720&amp;face=610_104_754_260\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"GAME 3D MODEL ANIME  GIRL- SINGER - UE4\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/MgqNPe6QXKM\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상에 멋진 액션 장민이 있다.</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"kakaotv\" data-video-url=\"https://tv.kakao.com/v/454930439\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/9fLMH/hyYPedAjNd/d8MRUGxW4G7NyFp2dV53QK/img.jpg?width=592&amp;height=444&amp;face=0_0_592_444,https://scrap.kakaocdn.net/dn/c0dtQe/hyYRliQGfE/UG661Fv7twIgmkDIeeVBt0/img.jpg?width=592&amp;height=444&amp;face=0_0_592_444\" data-video-width=\"592\" data-video-height=\"444\" data-video-origin-width=\"592\" data-video-origin-height=\"444\" data-ke-mobilestyle=\"widthContent\" data-video-play-service=\"daum_tistory\" data-original-url=\"\" data-video-title=\"\"><iframe src=\"https://play-tv.kakao.com/embed/player/cliplink/454930439?service=daum_tistory\" width=\"592\" height=\"444\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">영상에 낚여버렸다.</p>\n<p data-ke-size=\"size16\">안에 들어있을줄 알았으나</p>\n<p data-ke-size=\"size16\">문의해보니 언리얼로 제작되었다고 한다.</p>\n<p data-ke-size=\"size16\">언리얼 애셋: <a href=\"https://www.fab.com/listings/880e319a-a59e-4ed2-b268-b32dac7fa016\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.fab.com/listings/880e319a-a59e-4ed2-b268-b32dac7fa016</a></p>\n<p data-ke-size=\"size16\">이걸 사용했다고 하는데&nbsp;</p>\n<p data-ke-size=\"size16\">영상은 절말 잘나오네 언리얼 ㅠㅠ</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상정도의 연출을 하려면 애니메이션 팩을 사야할꺼 같다.</p>\n<p data-ke-size=\"size16\">앰플리파이 애니메이션 팩: <a href=\"https://www.youtube.com/watch?v=ODLSsrRk_kk&amp;t=6s\">Amplify Animation Pack for Unity - YouTube</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=ODLSsrRk_kk\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/ipInt/hyYMT2EOP1/9H7FKy2cmC53mcNLIoj6F1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/S9xH1/hyYRtVu45j/RSSdwH4OsFIkDXlK5KpwJK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Amplify Animation Pack for Unity\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/ODLSsrRk_kk\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">40초 정도에 나오는데</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"kakaotv\" data-video-url=\"https://tv.kakao.com/v/454930621\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/3biVs/hyYRlQG4je/tP2xdd3tjZa4k7yOc33IDk/img.jpg?width=624&amp;height=440&amp;face=0_0_624_440,https://scrap.kakaocdn.net/dn/bXKQSZ/hyYRm28Pan/0nSyFUZDGE4cfLqyFOsjI1/img.jpg?width=624&amp;height=440&amp;face=0_0_624_440\" data-video-width=\"624\" data-video-height=\"440\" data-video-origin-width=\"624\" data-video-origin-height=\"440\" data-ke-mobilestyle=\"widthContent\" data-video-play-service=\"daum_tistory\" data-original-url=\"\" data-video-title=\"\"><iframe src=\"https://play-tv.kakao.com/embed/player/cliplink/454930621?service=daum_tistory\" width=\"624\" height=\"440\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">비슷하다.</p>\n<p data-ke-size=\"size16\">유니티 애셋: <a href=\"https://assetstore.unity.com/packages/3d/animations/amplify-animation-pack-207911\">Amplify Animation Pack | 3D Animations | Unity Asset Store</a></p>\n<figure id=\"og_1746542876885\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Amplify Animation Pack | 3D 애니메이션 | Unity Asset Store\" data-og-description=\"Elevate your workflow with the Amplify Animation Pack asset from Amplify Creations. Find this &amp; other 애니메이션 options on the Unity Asset Store.\" data-og-host=\"assetstore.unity.com\" data-og-source-url=\"https://assetstore.unity.com/packages/3d/animations/amplify-animation-pack-207911\" data-og-url=\"https://assetstore.unity.com/packages/3d/animations/amplify-animation-pack-207911\" data-og-image=\"https://scrap.kakaocdn.net/dn/cBfOiw/hyYM1fhhga/oIL1ToLXkZwB3kzbZlwID1/img.jpg?width=1950&amp;height=1300&amp;face=0_0_1950_1300,https://scrap.kakaocdn.net/dn/yhj6O/hyYM0tVPsT/DkFVblRPwnRpuzFSBStRUK/img.jpg?width=1950&amp;height=1300&amp;face=0_0_1950_1300\"><a href=\"https://assetstore.unity.com/packages/3d/animations/amplify-animation-pack-207911\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://assetstore.unity.com/packages/3d/animations/amplify-animation-pack-207911\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/cBfOiw/hyYM1fhhga/oIL1ToLXkZwB3kzbZlwID1/img.jpg?width=1950&amp;height=1300&amp;face=0_0_1950_1300,https://scrap.kakaocdn.net/dn/yhj6O/hyYM0tVPsT/DkFVblRPwnRpuzFSBStRUK/img.jpg?width=1950&amp;height=1300&amp;face=0_0_1950_1300');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Amplify Animation Pack | 3D 애니메이션 | Unity Asset Store</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Elevate your workflow with the Amplify Animation Pack asset from Amplify Creations. Find this &amp; other 애니메이션 options on the Unity Asset Store.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">assetstore.unity.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">유니티에서도 팔고 있다.</p>\n<p data-ke-size=\"size16\">할이할때 사봐야겠다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">후기</h2>\n<p data-ke-size=\"size16\">20달러에 너무 많은걸 기대한거 같다.</p>\n<p data-ke-size=\"size16\">애니메이션 팩들은 가격은 상당히 비싼편이였다.</p>\n<p data-ke-size=\"size16\">이걸 포함되어있다고 생각했으니</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">급한마음에 질러버렸고</p>\n<p data-ke-size=\"size16\">내 능력으론 당상 쓸 수 없다는 사실을 알게 되었다.</p>\n<p data-ke-size=\"size16\">영상 보고 낚여서 후회글 써본다.</p>\n<p data-ke-size=\"size16\">버튜버 기술도 익힐 겸&nbsp;이번 기회에 애니메이션을 깊게 파봐야겠다.다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "할인 종료 임박 문구에 낚여서 구매했습니다.\n\n\n그런데 ...\n \n홍보 영상: GAME 3D MODEL ANIME GIRL- SINGER - UE4\n\n\n\n \n영상에 멋진 액션 장민이 있다.\n\n\n\n영상에 낚여버렸다.\n안에 들어있을줄 알았으나\n문의해보니 언리얼로 제작되었다고 한다.\n언리얼 애셋: https://www.fab.com/listings/880e319a-a59e-4ed2-b268-b32dac7fa016\n이걸 사용했다고 하는데 \n영상은 절말 잘나오네 언리얼 ㅠㅠ\n \n영상정도의 연출을 하려면 애니메이션 팩을 사야할꺼 같다.\n앰플리파이 애니메이션 팩: Amplify Animation Pack for Unity - YouTube\n\n\n\n40초 정도에 나오는데\n \n\n\n\n비슷하다.\n유니티 애셋: Amplify Animation Pack | 3D Animations | Unity Asset Store\n\n \nAmplify Animation Pack | 3D 애니메이션 | Unity Asset Store\nElevate your workflow with the Amplify Animation Pack asset from Amplify Creations. Find this & other 애니메이션 options on the Unity Asset Store.\nassetstore.unity.com\n\n유니티에서도 팔고 있다.\n할이할때 사봐야겠다.\n \n후기\n20달러에 너무 많은걸 기대한거 같다.\n애니메이션 팩들은 가격은 상당히 비싼편이였다.\n이걸 포함되어있다고 생각했으니\n \n급한마음에 질러버렸고\n내 능력으론 당상 쓸 수 없다는 사실을 알게 되었다.\n영상 보고 낚여서 후회글 써본다.\n버튜버 기술도 익힐 겸 이번 기회에 애니메이션을 깊게 파봐야겠다.다.",
        "guid": "http://serverdown.tistory.com/1307",
        "categories": [
          "프로그래밍/유니티 에셋 리뷰",
          "애니메이션",
          "애셋",
          "유니티"
        ],
        "isoDate": "2025-05-06T14:52:33.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "블록분해 / Tab to Dismantle / v12 업데이트 준비중",
        "link": "http://serverdown.tistory.com/1306",
        "pubDate": "Tue, 6 May 2025 13:38:48 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1306#entry1306comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"512\" data-origin-height=\"512\"><span data-url=\"https://blog.kakaocdn.net/dn/bYo4oJ/btsNKew13W3/35iM5TM4sV3wUf1g8kgdAk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bYo4oJ/btsNKew13W3/35iM5TM4sV3wUf1g8kgdAk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bYo4oJ/btsNKew13W3/35iM5TM4sV3wUf1g8kgdAk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbYo4oJ%2FbtsNKew13W3%2F35iM5TM4sV3wUf1g8kgdAk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"512\" height=\"512\" data-origin-width=\"512\" data-origin-height=\"512\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">작업은 주말에 2일 정도 했구요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">아이콘 변경</h2>\n<p data-ke-size=\"size16\">위 이미지는 이전 버전 아이콘이구요<br />아래가 이번버전 아이콘입니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"512\" data-origin-height=\"512\"><span data-url=\"https://blog.kakaocdn.net/dn/phDUw/btsNKxJOpY2/X3VwZFg4HkwtsAHHlx1OK1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/phDUw/btsNKxJOpY2/X3VwZFg4HkwtsAHHlx1OK1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/phDUw/btsNKxJOpY2/X3VwZFg4HkwtsAHHlx1OK1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FphDUw%2FbtsNKxJOpY2%2FX3VwZFg4HkwtsAHHlx1OK1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"512\" height=\"512\" data-origin-width=\"512\" data-origin-height=\"512\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">명암을 넣었는데 오히려 어두워 졌군요<br />3d 로 돌리면서 보면 볼만한데 아이콘으로는 장점이 안살아나는거 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">v12 주요 변경점</h2>\n<p data-ke-size=\"size16\">그래픽 사양을 낮추기위해 여러가지를 뺏습니다.<br />(별거 아닌 앱이라 있는지도 몰랐는데 저자양에선 느리다고 하더군요)</p>\n<p data-ke-size=\"size16\">명암구분이 잘가도록 셰이더도 교체 했습니다.</p>\n<p data-ke-size=\"size16\">두손가락으로 회전을 넣었는데<br />만드는데 시간이 오래 걸렸으나 정말 쓸모 없는 기능 인거 같습니다.<br />호기심에 넣어봤습니다.</p>\n<p data-ke-size=\"size16\">블록을 선택하면 빨간색으로 변경됩니다.<br />내가 어떤 블록을 선택했는지 구분이 안간다는 비드백을 받았습니다.<br />손가락을 움직이면 선택이 풀립니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">플레이 영상: <a href=\"https://youtube.com/shorts/6tlPk9ogpDk\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://youtube.com/shorts/6tlPk9ogpDk</a></h2>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/shorts/6tlPk9ogpDk\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/b6oHua/hyYPhupIWI/PYjkO9MkKx91xRTl4RY2d1/img.jpg?width=410&amp;height=720&amp;face=0_0_410_720,https://scrap.kakaocdn.net/dn/cwUViy/hyYRmoqKXv/5IXN0vyowLp9SdKKeUlAc1/img.jpg?width=410&amp;height=720&amp;face=0_0_410_720\" data-video-width=\"410\" data-video-height=\"720\" data-video-origin-width=\"410\" data-video-origin-height=\"720\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Tab to Dismantle v12\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/6tlPk9ogpDk\" width=\"410\" height=\"720\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">&nbsp;</h2>\n<h2 data-ke-size=\"size26\">&nbsp;</h2>\n<h2 data-ke-size=\"size26\">다음 버전 예정 사항</h2>\n<p data-ke-size=\"size16\">- 빨간색 표시보다는 멋있는 외곽선을 표시할 예정입니다.</p>\n<p data-ke-size=\"size16\">- 손가락이 화면을 가리기 때문에 별도의 화면을 더 띄울 예정입니다.</p>\n<p data-ke-size=\"size16\">- 검은 화면을 타이틀 글자가 있는 이미지로 교체할 예정입니다.</p>\n<p data-ke-size=\"size16\">- 분리 이팩트 추가 (한다고 했는데 안했네요)</p>\n<p data-ke-size=\"size16\">- 상자 모델 변경 (멋진걸로 찾고 있습니다.)</p>",
        "contentSnippet": "작업은 주말에 2일 정도 했구요\n \n아이콘 변경\n위 이미지는 이전 버전 아이콘이구요\n아래가 이번버전 아이콘입니다.\n\n\n명암을 넣었는데 오히려 어두워 졌군요\n3d 로 돌리면서 보면 볼만한데 아이콘으로는 장점이 안살아나는거 같습니다.\n \n \n \nv12 주요 변경점\n그래픽 사양을 낮추기위해 여러가지를 뺏습니다.\n(별거 아닌 앱이라 있는지도 몰랐는데 저자양에선 느리다고 하더군요)\n명암구분이 잘가도록 셰이더도 교체 했습니다.\n두손가락으로 회전을 넣었는데\n만드는데 시간이 오래 걸렸으나 정말 쓸모 없는 기능 인거 같습니다.\n호기심에 넣어봤습니다.\n블록을 선택하면 빨간색으로 변경됩니다.\n내가 어떤 블록을 선택했는지 구분이 안간다는 비드백을 받았습니다.\n손가락을 움직이면 선택이 풀립니다.\n \n플레이 영상: https://youtube.com/shorts/6tlPk9ogpDk\n\n\n\n \n \n \n다음 버전 예정 사항\n- 빨간색 표시보다는 멋있는 외곽선을 표시할 예정입니다.\n- 손가락이 화면을 가리기 때문에 별도의 화면을 더 띄울 예정입니다.\n- 검은 화면을 타이틀 글자가 있는 이미지로 교체할 예정입니다.\n- 분리 이팩트 추가 (한다고 했는데 안했네요)\n- 상자 모델 변경 (멋진걸로 찾고 있습니다.)",
        "guid": "http://serverdown.tistory.com/1306",
        "categories": [
          "블록 분해 게임 (자작)",
          "블록분해",
          "업데이트"
        ],
        "isoDate": "2025-05-06T04:38:48.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "인디게임이 만들어지는 과정",
        "link": "http://serverdown.tistory.com/1305",
        "pubDate": "Mon, 5 May 2025 11:11:55 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1305#entry1305comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"657\" data-origin-height=\"290\"><span data-url=\"https://blog.kakaocdn.net/dn/Tn44M/btsNJVqAABr/AkKEZaK2IHVKZM4soLDX90/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/Tn44M/btsNJVqAABr/AkKEZaK2IHVKZM4soLDX90/img.png\"><img src=\"https://blog.kakaocdn.net/dn/Tn44M/btsNJVqAABr/AkKEZaK2IHVKZM4soLDX90/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FTn44M%2FbtsNJVqAABr%2FAkKEZaK2IHVKZM4soLDX90%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"657\" height=\"290\" data-origin-width=\"657\" data-origin-height=\"290\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=vY-Z0XnOSs8\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=vY-Z0XnOSs8</a></p>\n<p data-ke-size=\"size16\">영상은 링크로 가서 봐야하군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">2048 로 시작했지만 계속 뭔가 들어가게 되면서&nbsp;</p>\n<p data-ke-size=\"size16\">다른 게임이 됩니다.</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=vY-Z0XnOSs8\n영상은 링크로 가서 봐야하군요\n \n2048 로 시작했지만 계속 뭔가 들어가게 되면서 \n다른 게임이 됩니다.",
        "guid": "http://serverdown.tistory.com/1305",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-05-05T02:11:55.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "주말작업 - 라즈베리파이 서버 설치 / HTTPS &amp; TCP 서버 배포 / mysql 설치 / drizzle orm",
        "link": "http://serverdown.tistory.com/1304",
        "pubDate": "Mon, 5 May 2025 00:22:04 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1304#entry1304comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"840\" data-origin-height=\"280\"><span data-url=\"https://blog.kakaocdn.net/dn/cgLOmB/btsNKxJtwmF/hQdsA4H2RXHfb2BOq8MrWk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cgLOmB/btsNKxJtwmF/hQdsA4H2RXHfb2BOq8MrWk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cgLOmB/btsNKxJtwmF/hQdsA4H2RXHfb2BOq8MrWk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcgLOmB%2FbtsNKxJtwmF%2FhQdsA4H2RXHfb2BOq8MrWk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"840\" height=\"280\" data-origin-width=\"840\" data-origin-height=\"280\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\">묵혀둔 라스베리파이 다시 꺼냈습니다.</h2>\n<p data-ke-size=\"size16\">4년동안 별 활용도 없이 조금 해보다 말고를 반복했는데 이번엔 진짜로 갑니다.</p>\n<h2 data-ke-size=\"size26\">&nbsp;</h2>\n<h2 data-ke-size=\"size26\">&nbsp;</h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"309\" data-origin-height=\"225\"><span data-url=\"https://blog.kakaocdn.net/dn/QbnnE/btsNKg82GFc/jcxSCiDA1UEGEApDEPh1U0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/QbnnE/btsNKg82GFc/jcxSCiDA1UEGEApDEPh1U0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/QbnnE/btsNKg82GFc/jcxSCiDA1UEGEApDEPh1U0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FQbnnE%2FbtsNKg82GFc%2FjcxSCiDA1UEGEApDEPh1U0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"309\" height=\"225\" data-origin-width=\"309\" data-origin-height=\"225\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\">HTTPS 서비스</h2>\n<p data-ke-size=\"size16\">라즈베리파이 꺼내서 서버 설치하고 node.js 로 https 서버도 띄웠습니다.</p>\n<p data-ke-size=\"size16\">주소는 공유기에서 제공하는 DDNS 인가? 하는 이름 서비스 받아왔구요</p>\n<p data-ke-size=\"size16\">letsencrypt 의 webroot 방식으로 인증 받아 사용중입니다.<br /><span style=\"color: initial; letter-spacing: 0px;\">진작 이렇게 쓸껄 돌아돌아 여기까지 왔네요</span></p>\n<p data-ke-size=\"size16\">https 주소: <a href=\"https://sid123.tplinkdns.com/\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://sid123.tplinkdns.com/</a></p>\n<p data-ke-size=\"size16\">기능은 없고 표시만 된다 수준입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">TCP 서버</h2>\n<p data-ke-size=\"size16\">telnet sid123.tplinkdns.com 3001</p>\n<p data-ke-size=\"size16\">입력하고 엔터치면 echo 해 줍니다.</p>\n<p data-ke-size=\"size16\">되는지만 확인한거라</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"400\" data-origin-height=\"400\"><span data-url=\"https://blog.kakaocdn.net/dn/cDi5uu/btsNKoFO8jY/TeapA3XaiiUz8jPMXxmtW1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cDi5uu/btsNKoFO8jY/TeapA3XaiiUz8jPMXxmtW1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cDi5uu/btsNKoFO8jY/TeapA3XaiiUz8jPMXxmtW1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcDi5uu%2FbtsNKoFO8jY%2FTeapA3XaiiUz8jPMXxmtW1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"400\" height=\"400\" data-origin-width=\"400\" data-origin-height=\"400\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\">MYSQL 설치 &amp; drizzle orm</h2>\n<p data-ke-size=\"size16\">mysql 이 없어졌고 mariaDB 가 생겼습니다.&nbsp;</p>\n<p data-ke-size=\"size16\">둘은 호환 되는거라 기능은 동일합니다.</p>\n<p data-ke-size=\"size16\">orm 을 사용해 보려고 설치한거라 별 문제는 없었습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"460\" data-origin-height=\"460\"><span data-url=\"https://blog.kakaocdn.net/dn/cSWtiK/btsNLaNMOa0/RjqLAeonQ2u9Ld9Wy1VRg1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cSWtiK/btsNLaNMOa0/RjqLAeonQ2u9Ld9Wy1VRg1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cSWtiK/btsNLaNMOa0/RjqLAeonQ2u9Ld9Wy1VRg1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcSWtiK%2FbtsNLaNMOa0%2FRjqLAeonQ2u9Ld9Wy1VRg1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"460\" height=\"460\" data-origin-width=\"460\" data-origin-height=\"460\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">DRIZZLE ORM 은 코드로 db 를 관리하는 방식을 말합니다.</p>\n<p data-ke-size=\"size16\">코드에 테이블을 만들면 db 에도 테이블이 생기고 코드를 고치면 db 도고쳐지고</p>\n<p data-ke-size=\"size16\">자동완성도 되고 그런식입니다.</p>\n<p data-ke-size=\"size16\">처음부터 제대로 테이블을 만들 수 없고 쿼리오류가 나서 몇가지 기능은&nbsp; 빼버렸습니다.</p>\n<p data-ke-size=\"size16\">겨우 select insert 만 해서 놔둔 상태입니다.</p>\n<p data-ke-size=\"size16\">DRIZZLE 은 최근에 나온 ORM 인데 문제가 좀 있습니다.</p>\n<p data-ke-size=\"size16\">날짜가 UTC 기반으로 저장되는데 다르게 저장할 방법도 없습니다.</p>\n<p data-ke-size=\"size16\">그냥 저장할때 마다 UTC 에 + 9시간 더하던지 해야하는거 같은데</p>\n<p data-ke-size=\"size16\">좀더 써봐야겠습니다. 진지한 서비스는 아직 못할 수준이군요</p>",
        "contentSnippet": "묵혀둔 라스베리파이 다시 꺼냈습니다.\n4년동안 별 활용도 없이 조금 해보다 말고를 반복했는데 이번엔 진짜로 갑니다.\n \n \n\n\nHTTPS 서비스\n라즈베리파이 꺼내서 서버 설치하고 node.js 로 https 서버도 띄웠습니다.\n주소는 공유기에서 제공하는 DDNS 인가? 하는 이름 서비스 받아왔구요\nletsencrypt 의 webroot 방식으로 인증 받아 사용중입니다.\n진작 이렇게 쓸껄 돌아돌아 여기까지 왔네요\nhttps 주소: https://sid123.tplinkdns.com/\n기능은 없고 표시만 된다 수준입니다.\n \nTCP 서버\ntelnet sid123.tplinkdns.com 3001\n입력하고 엔터치면 echo 해 줍니다.\n되는지만 확인한거라\n \n\n\nMYSQL 설치 & drizzle orm\nmysql 이 없어졌고 mariaDB 가 생겼습니다. \n둘은 호환 되는거라 기능은 동일합니다.\norm 을 사용해 보려고 설치한거라 별 문제는 없었습니다.\n\n\nDRIZZLE ORM 은 코드로 db 를 관리하는 방식을 말합니다.\n코드에 테이블을 만들면 db 에도 테이블이 생기고 코드를 고치면 db 도고쳐지고\n자동완성도 되고 그런식입니다.\n처음부터 제대로 테이블을 만들 수 없고 쿼리오류가 나서 몇가지 기능은  빼버렸습니다.\n겨우 select insert 만 해서 놔둔 상태입니다.\nDRIZZLE 은 최근에 나온 ORM 인데 문제가 좀 있습니다.\n날짜가 UTC 기반으로 저장되는데 다르게 저장할 방법도 없습니다.\n그냥 저장할때 마다 UTC 에 + 9시간 더하던지 해야하는거 같은데\n좀더 써봐야겠습니다. 진지한 서비스는 아직 못할 수준이군요",
        "guid": "http://serverdown.tistory.com/1304",
        "categories": [
          "drizzle",
          "ORM",
          "라즈베리파이",
          "서버"
        ],
        "isoDate": "2025-05-04T15:22:04.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "집에서 서버 돌려보자 / https / tcp / mysql",
        "link": "http://serverdown.tistory.com/1303",
        "pubDate": "Sun, 4 May 2025 18:13:38 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1303#entry1303comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"840\" data-origin-height=\"280\"><span data-url=\"https://blog.kakaocdn.net/dn/b6Zpb7/btsNJvTmO3N/iUveO7kCeyJZTymMkN9u5k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b6Zpb7/btsNJvTmO3N/iUveO7kCeyJZTymMkN9u5k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b6Zpb7/btsNJvTmO3N/iUveO7kCeyJZTymMkN9u5k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb6Zpb7%2FbtsNJvTmO3N%2FiUveO7kCeyJZTymMkN9u5k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"840\" height=\"280\" data-origin-width=\"840\" data-origin-height=\"280\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">시작하게된 썰</h2>\n<p data-ke-size=\"size16\">온라인 게임 만들자는 요청이 있어서 서버를 집에서 돌리기로 했다.</p>\n<p data-ke-size=\"size16\">저번엔 비용은 비용대로 내고 서비스도 망해서 돈이 아까웠다.<br />그래서 이번엔 집에서 할 작정이다.</p>\n<p data-ke-size=\"size16\">매번 쪼금하다 포기했던 라즈베리파이도 꺼내보고 집에서 서버도 돌려볼려고 한다.<br />이번엔 포기하지 말고 끝까지 가볼 생각이다.</p>\n<p data-ke-size=\"size16\">예전에 커피한잔 개발자가 말하길 서비스가 워낙 작아서 비용쓸꺼 없이 집에서 서비스 돌렸다고 한다.</p>\n<p data-ke-size=\"size16\">나도 따라해야겠다.&nbsp;<br />한달에 2.5만원 정도인데 서비스 초기에는 비용이 너무 아깝다.<br />그리고 성능도 라즈베리파이보다 못했었다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">MariaDB 설치하기 ( mysql 과 호환된다.)</h2>\n<p data-ke-size=\"size16\">ORM 을 써볼려고 Drizzle 을 보고 있다. 프리즈마 다음에 나온거라 이게 좋다고 한다.</p>\n<p data-ke-size=\"size16\">설치문서: <a href=\"https://serverdown.tistory.com/1302\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://serverdown.tistory.com/1302</a></p>\n<figure id=\"og_1746349589802\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"라즈베리파이4 MariaDB 설치 및 외부 접속 설정 / Raspberry Pi 4 / RP4\" data-og-description=\"mysql 은 이제 없고 maria db 는 설치가 가능했다.둘은 어차피 호환이 되는 거라 고민없이 Maria db 넘어간다 설치 명령어apt-get updateapt-get upgradeapt-cache search mariadbapt-get install mariadb-server 테스트 실행여\" data-og-host=\"blog.sidnft.com\" data-og-source-url=\"https://serverdown.tistory.com/1302\" data-og-url=\"https://blog.sidnft.com/1302\" data-og-image=\"https://scrap.kakaocdn.net/dn/bWukOV/hyYMSvmSIJ/TAMnoYN9IhY3f5G7l18kD0/img.png?width=800&amp;height=266&amp;face=0_0_800_266,https://scrap.kakaocdn.net/dn/choBkr/hyYMUUf4iR/Pa2oNPn5Y09ImMKNpbvEAk/img.png?width=800&amp;height=266&amp;face=0_0_800_266,https://scrap.kakaocdn.net/dn/e0aD3/hyYM3p69SR/bfXOwpCeNkB16PeeGevr3K/img.png?width=1200&amp;height=400&amp;face=0_0_1200_400\"><a href=\"https://serverdown.tistory.com/1302\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://serverdown.tistory.com/1302\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bWukOV/hyYMSvmSIJ/TAMnoYN9IhY3f5G7l18kD0/img.png?width=800&amp;height=266&amp;face=0_0_800_266,https://scrap.kakaocdn.net/dn/choBkr/hyYMUUf4iR/Pa2oNPn5Y09ImMKNpbvEAk/img.png?width=800&amp;height=266&amp;face=0_0_800_266,https://scrap.kakaocdn.net/dn/e0aD3/hyYM3p69SR/bfXOwpCeNkB16PeeGevr3K/img.png?width=1200&amp;height=400&amp;face=0_0_1200_400');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">라즈베리파이4 MariaDB 설치 및 외부 접속 설정 / Raspberry Pi 4 / RP4</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">mysql 은 이제 없고 maria db 는 설치가 가능했다.둘은 어차피 호환이 되는 거라 고민없이 Maria db 넘어간다 설치 명령어apt-get updateapt-get upgradeapt-cache search mariadbapt-get install mariadb-server 테스트 실행여</p>\n<p class=\"og-host\" data-ke-size=\"size16\">blog.sidnft.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size26\">express 로 https 서비스 돌려보기</h2>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">이거 되면 웹소켓도 돌릴 수 있어서 웹용 온라인 게임을 만들수 있다.<br />유니티의 웹빌드도 온라인 게임 가능하다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">준비중</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size26\">tcp 서버 열여서 소켓 통신 (온라인게임 만들기용도)</h2>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">웹통신은 아니고 소켓 통신이다.<br />웹소켓은 통신이 느린 감이 있어서 모바일에선 소켓 통신을 쓰도록한다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\"><span style=\"text-align: start;\">준비중</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">실제서비스</h2>\n<p data-ke-size=\"size16\">뭐만들지도 잘 모르겠다. 만들고나면 여기다 업데이트 하겠다.</p>\n<p data-ke-size=\"size16\">준비중</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "시작하게된 썰\n온라인 게임 만들자는 요청이 있어서 서버를 집에서 돌리기로 했다.\n저번엔 비용은 비용대로 내고 서비스도 망해서 돈이 아까웠다.\n그래서 이번엔 집에서 할 작정이다.\n매번 쪼금하다 포기했던 라즈베리파이도 꺼내보고 집에서 서버도 돌려볼려고 한다.\n이번엔 포기하지 말고 끝까지 가볼 생각이다.\n예전에 커피한잔 개발자가 말하길 서비스가 워낙 작아서 비용쓸꺼 없이 집에서 서비스 돌렸다고 한다.\n나도 따라해야겠다. \n한달에 2.5만원 정도인데 서비스 초기에는 비용이 너무 아깝다.\n그리고 성능도 라즈베리파이보다 못했었다.\n \nMariaDB 설치하기 ( mysql 과 호환된다.)\nORM 을 써볼려고 Drizzle 을 보고 있다. 프리즈마 다음에 나온거라 이게 좋다고 한다.\n설치문서: https://serverdown.tistory.com/1302\n\n \n라즈베리파이4 MariaDB 설치 및 외부 접속 설정 / Raspberry Pi 4 / RP4\nmysql 은 이제 없고 maria db 는 설치가 가능했다.둘은 어차피 호환이 되는 거라 고민없이 Maria db 넘어간다 설치 명령어apt-get updateapt-get upgradeapt-cache search mariadbapt-get install mariadb-server 테스트 실행여\nblog.sidnft.com\n\n \n \nexpress 로 https 서비스 돌려보기\n이거 되면 웹소켓도 돌릴 수 있어서 웹용 온라인 게임을 만들수 있다.\n유니티의 웹빌드도 온라인 게임 가능하다.\n준비중\n \ntcp 서버 열여서 소켓 통신 (온라인게임 만들기용도)\n웹통신은 아니고 소켓 통신이다.\n웹소켓은 통신이 느린 감이 있어서 모바일에선 소켓 통신을 쓰도록한다.\n준비중\n \n실제서비스\n뭐만들지도 잘 모르겠다. 만들고나면 여기다 업데이트 하겠다.\n준비중",
        "guid": "http://serverdown.tistory.com/1303",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-05-04T09:13:38.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "한비자, 관계의 기술",
        "link": "http://jojoldu.tistory.com/826",
        "pubDate": "Tue, 6 May 2025 09:38:32 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "http://jojoldu.tistory.com/826#entry826comment",
        "content": "<p data-ke-size=\"size16\">사람 대 사람 사이에서 가장 중요한 건 서로간의 '이득' 이라는 것을 책 한권을 통해 전달하는 것으로 읽혔다.<br />이득 기반으로 인간 관계가 움직인다는 사상을 인정하고 좋아하기에 전체적인 내용을 많이 동의했다.</p>\n<p data-ke-size=\"size16\">내 기준에서 회사는 4단계의 계층이 있다고 본다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>대표</li>\n<li>C레벨 혹은 임원</li>\n<li>중간 리더</li>\n<li>팀원</li>\n</ul>\n<p data-ke-size=\"size16\">이 중 이 책에서 언급되는 \"군주\"는 사실상 회사의 대표라고 볼 수 있는데, 대표에게 직언을 할 수 있는 위치인 C레벨 (혹은 임원)은 이 책의 여러 고사들에게서 배울 점이 많다.</p>\n<p data-ke-size=\"size16\">그 중에서도 아래 메세지들은 지금의 내 위치에서 생각해볼 것들이 많았다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>\"군주에게 간언하고 설득하는 자는 군주가 자기를 사랑하는지, 미워하는지 살펴 본 후 설득해야 한다는 것을 알 수 있다\"</li>\n<li>\"누군가를 설득할 때에는 상대방이 수치심을 느끼거나 부끄러워하는 감정을 건드리지 말아야 한다\"</li>\n<li>\"일반적으로 군주들은 신임하지 않는 자가 간언하면 비방한다고 생각하고, 신임하는 사람이 간언하지 않으면 봉록만을 훔치는 자라고 생각하는 경향이 있다\"</li>\n</ul>\n<p data-ke-size=\"size16\">\"<b>군주에게서 충분한 신임을 얻기 전까지는 간언을 조심해야하며, 신뢰를 얻은 후에는 간언을 계속 해야하며, 신뢰의 정도에 따라 간언의 수위를 조절해야하며, 간언을 전달할 때는 최대한 역린을 건드리지 않도록 주의하면서 전달해야한다</b>\" 로 정리될 수 있다.</p>\n<p data-ke-size=\"size16\">이 내용은 군주에게 간언해야하는 위치의 사람들이 항상 생각해야할 것들이다.<br />회사로 본다면 아마도 C레벨과 임원들이 해당될 것 같다.</p>\n<p data-ke-size=\"size16\">종종 회사에 합류하자마자 바로 어떠한 액션을 취하려고 강한 주장을 하거나 대표에게 직언을 하는 리더나 임원들의 이야기들을 들을때가 있다.<br />그리고 그 리더는 대부분 얼마가지 않아 퇴사를 했다는 것도.</p>\n<p data-ke-size=\"size16\">상위 직급자와 나와의 신뢰 관계는 어느 정도이며, 이 정도에서는 어디까지의 이야기가 허용 가능한지 판단할 수 있는 시야를 갖고 있는 사람이 좋은 리더가 될 수 있다는 생각이 들었다.</p>\n<p data-ke-size=\"size16\">또 하나 중요한 점은 C레벨 혹은 중간 리더는 <b>본인의 신뢰 자산을 기반으로 아직 충분한 신뢰 자산이 쌓이지 않은 팀원들의 건설적인 의견을 대표에게 잘 전달해야한다는 것</b>이다.</p>\n<p data-ke-size=\"size16\">예전에 <a href=\"https://www.linkedin.com/posts/xissy_%EC%BF%A0%ED%8C%A1%EC%9D%84-%EB%96%A0%EB%82%98-%EB%8B%A4%EB%A5%B8-%ED%95%9C%EA%B5%AD-%EC%8A%A4%ED%83%80%ED%8A%B8%EC%97%85%EB%93%A4%EC%97%90%EC%84%9C-%EC%9D%BC%ED%95%98%EB%A9%B4%EC%84%9C-%EB%8A%98-%ED%92%88%EA%B3%A0-%EC%9E%88%EB%8D%98-%EA%B6%81%EA%B8%88%EC%A6%9D%EC%9D%B4-%ED%95%98%EB%82%98-activity-7278644686020296704-Bg7l?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAACnY5SkBWe-Gk8dRhHNKDYYBGK-ix9ICZxg\">태호님이 작성하신 쿠팡의 통역가분들에 대한 이야기</a> 를 보고나서, 이것이 조직의 중간 리더의 역할과 다를 바 없다고 생각이 들었다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">&ldquo;회사가 커지면 상하 위계 간은 물론이고 각 조직 간의 크고 작은 이해관계와 알력다툼이 만연하며 성장 속도가 늦어지는데, 어째서 쿠팡은 이렇게 되지 않았고 이를 최소화할 수 있었을까?&rdquo;<br />나중에 문득 깨달은 것이지만, 나는 바로 쿠팡의 통역사분들이 이를 가능하게 했다고 감히 생각한다.<br />쿠팡은 한국 본사의 임원진부터 글로벌 오피스의 실무자까지 많은 외국인들과 함께 일한다.<br />업무 시 공용어는 한국어보다는 영어다.<br />모든 주요 문서는 영어로 작성되고 모든 주요 미팅에는 전담 통역사가 함께 들어와 실시간 통역을 지원한다.<br />그런데 이분들의 실시간 통역이란 것이 단순히 영어를 한글로, 한글을 영어로 바꿔 말하는 게 다가 아니더라.<br />쿠팡의 통역사분들은 수많은 미팅에 들어가고 문서를 검토하며 회사 전반과 각 조직의 가장 많은 정보와 컨텍스트를 갖고 있어 이것이 마법을 만들어낸다.<br /><br />예를 들어,<br />누군가 오해를 살 수 있는 표현을 해도 -&gt; 통역이 오해 없도록 명확한 용어로 바뀐다.<br />누군가 잘못된 정보를 근거로 해도 -&gt; 통역 시 가볍게 다시 물어 정정할 수 있도록 한다.<br />누군가 조직 이기주의 등 편협한 소리를 해도 -&gt; 통역이 톤앤매너를 조절해 건설적으로 이것이 논의될 수 있는 기회로 바꾼다.<br />미팅이 같은 말을 반복하며 빙빙 돌고 있어도 -&gt; 통역이 간파하고 원래의 주제에서 결론을 낼 수 있도록 넛지를 한다.<br />누군가 너무 감정적이거나 화를 내도 -&gt; 통역이 그 감정이 잠시 담길 작은 버퍼가 되어준다.</p>\n<p data-ke-size=\"size16\">등등등<br />정말 수많은 부분에서 통역사분들의 역량이 발휘된다.<br />굉장한 건 이것들이 미팅 안에서 절대 티가 나지 않는다는 것이다.<br />통역사가 주인공이 되는 일은 없다.<br />다만 그 미팅은 여러 함정을 무사히 넘기고 좋은 의사 결정을 이룬다.<br />누군가 정말 잘하는 것들은 그대로 스며들어 당연한 것이 되지 잘한 티가 나지 않더라.</p>\n</blockquote>\n<p data-ke-size=\"size16\">팀원들은 아직까지 조직간 관계나 처세 등에 대해 익숙하지 않다.<br />대표와의 신뢰 관계도 충분하지 않다.<br />이런 상황에서 팀원 -&gt; 대표로의 간언은 유효할 확률이 거의 없다.<br />이때 중간 리더가 (쿠팡의 통역처럼) 팀원의 의견을 잘 해석하여 대표가 설득될 수 있는 수준으로 포장하여 전달해야하는 역할을 해야한다.<br />중간 리더의 신뢰 자산은 그러라고 쌓는 것이다.</p>\n<p data-ke-size=\"size16\">물론 이 외에도 조직원들을 어떻게 대해야하는지에 대해서도 인사이트를 얻을 수 있었다.<br />조직 내에서 해야할 일들에 대해서 \"<b>이 일은 본인에게도 좋은 일이다</b>\" 는 것으로 자연스럽게 귀결 될 수 있도록 전달하는 것이 참 중요하다.</p>\n<p data-ke-size=\"size16\">조직장으로서는 이 일을 개인을 위한 일 인것처럼 느껴지게 할 것인지를 고민해야하고,<br />개인은 어떻게 하면 이 일이 나에게 도움이 되도록 해석할 것인가가 전체적인 삶의 만족도를 결정하게 되는 것 같다.</p>\n<h2 data-ke-size=\"size26\">책 속 문장</h2>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">한비자는 <b>인간은 이해득실만을 따질 뿐 도덕성은 생각하지 않는다</b>고 보았다.<br />그는 이것을 부모가 낳은 아이가 아들일 경우와 딸일 경우 보여주는 행동의 차이로 설명했다.<br />아들이나 딸 모두 부모의 품에서 나왔지만, 아들을 선호하는 것은 따지고 보면 부모 자신의 노후를 걱정한 데서 비롯된다는 것이다.<br />또한 사람들의 이해관계는 늘 어긋난다.<br />예컨대 군주와 신하가 생각하는 이익이 각기 다르며, 남편과 아내, 형과 아우 사이에도 이해는 서로 엇갈리기 마련이다.<br />이 중에서도 특히 군주와 신하는 남남이 만나 각자의 이익을 추구하는 관계이므로 군주가 신하에게 충성만을 요구한다거나 도덕만으로 다스린다는 것은 어리석은 일이다.</p>\n</blockquote>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">[옛날 미자하는 위나라 왕에게 총애를 받았다.<br />위나라의 범에 왕의 수레를 몰래 타는 자에게는 발이 잘리는 형벌을 내리도록 하였다.<br />미자하의 어머니가 병들었을 때 어떤 사람이 밤에 몰래 와서 미자하에게 알려주었다.<br />그러자 미자하는 슬쩍 왕의 수레를 타고 나갔다.<br />왕은 이 일을 듣고 그를 칭찬하며 말하였다.<br />\"효자로구나. 어머지를 위하느라 발이 잘리는 벌도 잊었구나!\"<br />다른 날 미자하는 왕과 함께 정원에서 노닐다가 복숭아를 따먹게 되었는데, 맛이 아주 달자 반쪽을 왕에게 주었다.<br />왕이 말하였다.<br />\"나를 사랑하는구나. 맛이 좋으니 과인을 잊지 않고 맛보게 하는구나\"<br />세월이 흘러 미자하의 미모가 쇠하고 왕의 사랑도 식게 되었을 때 한번은 미자하가 왕에게 죄를 지었다.<br />그러자 왕은 이렇게 말하였다.<br />\"이놈은 옛날에 과인의 수레를 몰래 훔쳐 타기도 하고, 또 자기가 먹던 복숭아를 과인에게 먹으라고 내밀기도 하였다.\"<br />미자하의 행동은 변함이 없었으나 전에는 칭찬을 받았지만 뒤에는 벌을 받은 까닭은 사랑이 미움으로 바뀌었기 때문이다.]<br />...<br /><b>군주에게 간언하고 설득하는 자는 군주가 자기를 사랑하는지, 미워하는지 살펴 본 후 설득해야 한다는 것을 알 수 있다</b>.<br />...<br />비단 왕뿐 아니라 사람에게도 저마다 역린이 있다.<br /><b>누군가를 설득할 때에는 상대방이 수치심을 느끼거나 부끄러워하는 감정을 건드리지 말아야 한다</b>.<br />아무리 논리적으로 설득할지라도 외면당할 수 있기 때문이다.<br />결국 <b>상대방의 마음을 잘 헤아려 나의 의도를 그에게 맞추려면 상대방의 역린을 읽어낼 수 있는 감수성이 필요하다</b>.<br />설득은 마음을 움직이는 일이므로 논리보다는 감성이 앞선다고 할 수 있다.</p>\n</blockquote>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">노자는 통치술의 첫째로서, 통치가의 존재 그 자체를 부정하고 있다.<br /><b>앞에 나서서 설치는 자는 최상의 군주가 아니고 뒤에서 조용히 조종하는 자가 최상</b>이라는 것이다.<br />물론 그 존재 자체도 느끼지 못할 때 그것이 최상이다.</p>\n</blockquote>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">일반적으로 군주들은 <b>신임하지 않는 자가 간언하면 비방한다고 생각하고, 신임하는 사람이 간언하지 않으면 봉록만을 훔치는 자</b>라고 생각하는 경향이 있다.<br />그러므로 <b>신하들은 충성스러운 간언을 할 분위기가 조성되지 않으면 침묵하게 된다</b>.<br />이러한 문제를 해결하고자 당 태종은 간언을 독려한다.<br />\"사람이 자기 얼굴을 보려면 반드시 맑은 거울이 있어야 하고, 군주가 자기 허물을 알려면 반드시 충직한 신하에 의지해야 하오.<br />군주가 만일 자신을 현인이나 성인이라고 여기는 착각에 빠져있고, 신하도 정확한 의견을 제시하여 바로잡지 않는다면, 이런 상황에서 위험과 실패를 면하는 것이 어찌 가능하겠소?<br />군주가 국토와 사직을 버리면 신하 또한 자신의 집안을 보존할 수 없소.<br />수양제는 잔인하고 포학했지만 신하가 입을 다문 채 아무 말도 하지 않았으므로 자기에게 어떤 허물이 있는지 듣지 못했소.<br />결국 나라는 멸망했소.<br />우세기 등의 대신 또한 오래지 않아 피살되었소.<br />이것은 과거 오래전의 일이 아니오.<br />대신들은 내가 백성들에게 불리한 일을 하는 것을 보게 되면, 반드시 거리낌 없이 직언을 하여 비판 해야 하오.\"</p>\n</blockquote>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">한비자는 도성을 떠나 유람을 가는 것 또한 지극히 경계했다.<br /><b>군주가 궁궐을 비우고 외부로 떠나는 것은 결국 궁정의 긴장감을 무너뜨리게 되므로</b>, 조직의 긴장도를 위해 군주는 유람할 시간이 없다는 것이다.</p>\n</blockquote>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">아이가 어릴 때 부모의 양육이 소홀하게 되면, 그 자식은 성장하여 부모를 원망하게 된다.<br />또 그 자식이 장년이 되었을 때 부모에 대한 효도를 망각하면, 그 부모는 자식을 책망하게 될 것이다.<br />부자 사이는 가장 친밀한 사이임에도 책망하거나 원망한다는 것은 서로 상대가 자기를 위해서 일을 한다는 마음이 없었기 때문이다.<br />아랫사람을 고용하여 씨앗을 뿌리거나 경작을 시킬 때, 주인이 집안 살림에서 과용을 하며 좋은 음식과 쫗은 옷을 주고 노동의 대가로 돈도 챙겨주는 것은 그 아랫사람을 배려하기 때문이 아니다 .<br />그렇게 후하게 대해야만 깊이 땅을 팔 것이며, 잡초를 샅샅이 뽑으리라 생각하기 때문인 것이다.<br />...<br />결국 주인과 일하는 사람 양쪽 모두 자기 이익만을 생각하고 있는 것이다.<br />그러므로 자기에게 이익이 되도록 일을 하면 적대적인 나라 사람과도 우호적으로 지낼 수 있고, 자기 이익을 떠나게 되면 부자지간도 서로가 원망하게 된다는 것이다.<br />...<br /><b>남을 위해 죽도록 일하는 것이 아니라 자신의 이익과 목표를 위해 일한다고 생각하면 상대에 대한 평가도 어렵지 않으리라</b>.</p>\n</blockquote>\n<h2 data-ke-size=\"size26\">ps.</h2>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">여담이지만, 챕터별로 편차가 있지만, 챕터의 제목과 챕터의 전반부/후반부의 내용이 상이해서 생뚱 맞다는 느낌을 받았다.<br />챕터의 첫번째 사례로 드는 고사는 제목과 잘 어울려서 챕터를 이해하는데 도움이 되었지만, 두번째, 세번째 고사는 사실 챕터에서 이야기하고자 하는 바와 어울리지 않을 때가 많아서 띠용한 적이 종종 있다.<br />예를 들어 \"15. 만족을 모르면 근심도 떠나지 않는다\" 에서 2번째 고사는 새옹지마 사례다보니 '일희일비 하지 않는다' 라는 주제에선 어울리겠지만, '만족할 줄 알아야 한다'를 이야기해야하는 이 챕터에서는 전혀 어울리는 고사는 아니라고 생각했다.<br />그 외에도 이런 사례가 많아서 책의 좋은 내용과 별개로 책에 대한 평가를 할 때 '절하' 되는 근거가 될 것 같다.</p>\n</blockquote>",
        "contentSnippet": "사람 대 사람 사이에서 가장 중요한 건 서로간의 '이득' 이라는 것을 책 한권을 통해 전달하는 것으로 읽혔다.\n이득 기반으로 인간 관계가 움직인다는 사상을 인정하고 좋아하기에 전체적인 내용을 많이 동의했다.\n내 기준에서 회사는 4단계의 계층이 있다고 본다.\n대표\nC레벨 혹은 임원\n중간 리더\n팀원\n이 중 이 책에서 언급되는 \"군주\"는 사실상 회사의 대표라고 볼 수 있는데, 대표에게 직언을 할 수 있는 위치인 C레벨 (혹은 임원)은 이 책의 여러 고사들에게서 배울 점이 많다.\n그 중에서도 아래 메세지들은 지금의 내 위치에서 생각해볼 것들이 많았다.\n\"군주에게 간언하고 설득하는 자는 군주가 자기를 사랑하는지, 미워하는지 살펴 본 후 설득해야 한다는 것을 알 수 있다\"\n\"누군가를 설득할 때에는 상대방이 수치심을 느끼거나 부끄러워하는 감정을 건드리지 말아야 한다\"\n\"일반적으로 군주들은 신임하지 않는 자가 간언하면 비방한다고 생각하고, 신임하는 사람이 간언하지 않으면 봉록만을 훔치는 자라고 생각하는 경향이 있다\"\n\"군주에게서 충분한 신임을 얻기 전까지는 간언을 조심해야하며, 신뢰를 얻은 후에는 간언을 계속 해야하며, 신뢰의 정도에 따라 간언의 수위를 조절해야하며, 간언을 전달할 때는 최대한 역린을 건드리지 않도록 주의하면서 전달해야한다\" 로 정리될 수 있다.\n이 내용은 군주에게 간언해야하는 위치의 사람들이 항상 생각해야할 것들이다.\n회사로 본다면 아마도 C레벨과 임원들이 해당될 것 같다.\n종종 회사에 합류하자마자 바로 어떠한 액션을 취하려고 강한 주장을 하거나 대표에게 직언을 하는 리더나 임원들의 이야기들을 들을때가 있다.\n그리고 그 리더는 대부분 얼마가지 않아 퇴사를 했다는 것도.\n상위 직급자와 나와의 신뢰 관계는 어느 정도이며, 이 정도에서는 어디까지의 이야기가 허용 가능한지 판단할 수 있는 시야를 갖고 있는 사람이 좋은 리더가 될 수 있다는 생각이 들었다.\n또 하나 중요한 점은 C레벨 혹은 중간 리더는 본인의 신뢰 자산을 기반으로 아직 충분한 신뢰 자산이 쌓이지 않은 팀원들의 건설적인 의견을 대표에게 잘 전달해야한다는 것이다.\n예전에 태호님이 작성하신 쿠팡의 통역가분들에 대한 이야기 를 보고나서, 이것이 조직의 중간 리더의 역할과 다를 바 없다고 생각이 들었다.\n“회사가 커지면 상하 위계 간은 물론이고 각 조직 간의 크고 작은 이해관계와 알력다툼이 만연하며 성장 속도가 늦어지는데, 어째서 쿠팡은 이렇게 되지 않았고 이를 최소화할 수 있었을까?”\n나중에 문득 깨달은 것이지만, 나는 바로 쿠팡의 통역사분들이 이를 가능하게 했다고 감히 생각한다.\n쿠팡은 한국 본사의 임원진부터 글로벌 오피스의 실무자까지 많은 외국인들과 함께 일한다.\n업무 시 공용어는 한국어보다는 영어다.\n모든 주요 문서는 영어로 작성되고 모든 주요 미팅에는 전담 통역사가 함께 들어와 실시간 통역을 지원한다.\n그런데 이분들의 실시간 통역이란 것이 단순히 영어를 한글로, 한글을 영어로 바꿔 말하는 게 다가 아니더라.\n쿠팡의 통역사분들은 수많은 미팅에 들어가고 문서를 검토하며 회사 전반과 각 조직의 가장 많은 정보와 컨텍스트를 갖고 있어 이것이 마법을 만들어낸다.\n예를 들어,\n누군가 오해를 살 수 있는 표현을 해도 -> 통역이 오해 없도록 명확한 용어로 바뀐다.\n누군가 잘못된 정보를 근거로 해도 -> 통역 시 가볍게 다시 물어 정정할 수 있도록 한다.\n누군가 조직 이기주의 등 편협한 소리를 해도 -> 통역이 톤앤매너를 조절해 건설적으로 이것이 논의될 수 있는 기회로 바꾼다.\n미팅이 같은 말을 반복하며 빙빙 돌고 있어도 -> 통역이 간파하고 원래의 주제에서 결론을 낼 수 있도록 넛지를 한다.\n누군가 너무 감정적이거나 화를 내도 -> 통역이 그 감정이 잠시 담길 작은 버퍼가 되어준다.\n등등등\n정말 수많은 부분에서 통역사분들의 역량이 발휘된다.\n굉장한 건 이것들이 미팅 안에서 절대 티가 나지 않는다는 것이다.\n통역사가 주인공이 되는 일은 없다.\n다만 그 미팅은 여러 함정을 무사히 넘기고 좋은 의사 결정을 이룬다.\n누군가 정말 잘하는 것들은 그대로 스며들어 당연한 것이 되지 잘한 티가 나지 않더라.\n팀원들은 아직까지 조직간 관계나 처세 등에 대해 익숙하지 않다.\n대표와의 신뢰 관계도 충분하지 않다.\n이런 상황에서 팀원 -> 대표로의 간언은 유효할 확률이 거의 없다.\n이때 중간 리더가 (쿠팡의 통역처럼) 팀원의 의견을 잘 해석하여 대표가 설득될 수 있는 수준으로 포장하여 전달해야하는 역할을 해야한다.\n중간 리더의 신뢰 자산은 그러라고 쌓는 것이다.\n물론 이 외에도 조직원들을 어떻게 대해야하는지에 대해서도 인사이트를 얻을 수 있었다.\n조직 내에서 해야할 일들에 대해서 \"이 일은 본인에게도 좋은 일이다\" 는 것으로 자연스럽게 귀결 될 수 있도록 전달하는 것이 참 중요하다.\n조직장으로서는 이 일을 개인을 위한 일 인것처럼 느껴지게 할 것인지를 고민해야하고,\n개인은 어떻게 하면 이 일이 나에게 도움이 되도록 해석할 것인가가 전체적인 삶의 만족도를 결정하게 되는 것 같다.\n책 속 문장\n한비자는 인간은 이해득실만을 따질 뿐 도덕성은 생각하지 않는다고 보았다.\n그는 이것을 부모가 낳은 아이가 아들일 경우와 딸일 경우 보여주는 행동의 차이로 설명했다.\n아들이나 딸 모두 부모의 품에서 나왔지만, 아들을 선호하는 것은 따지고 보면 부모 자신의 노후를 걱정한 데서 비롯된다는 것이다.\n또한 사람들의 이해관계는 늘 어긋난다.\n예컨대 군주와 신하가 생각하는 이익이 각기 다르며, 남편과 아내, 형과 아우 사이에도 이해는 서로 엇갈리기 마련이다.\n이 중에서도 특히 군주와 신하는 남남이 만나 각자의 이익을 추구하는 관계이므로 군주가 신하에게 충성만을 요구한다거나 도덕만으로 다스린다는 것은 어리석은 일이다.\n[옛날 미자하는 위나라 왕에게 총애를 받았다.\n위나라의 범에 왕의 수레를 몰래 타는 자에게는 발이 잘리는 형벌을 내리도록 하였다.\n미자하의 어머니가 병들었을 때 어떤 사람이 밤에 몰래 와서 미자하에게 알려주었다.\n그러자 미자하는 슬쩍 왕의 수레를 타고 나갔다.\n왕은 이 일을 듣고 그를 칭찬하며 말하였다.\n\"효자로구나. 어머지를 위하느라 발이 잘리는 벌도 잊었구나!\"\n다른 날 미자하는 왕과 함께 정원에서 노닐다가 복숭아를 따먹게 되었는데, 맛이 아주 달자 반쪽을 왕에게 주었다.\n왕이 말하였다.\n\"나를 사랑하는구나. 맛이 좋으니 과인을 잊지 않고 맛보게 하는구나\"\n세월이 흘러 미자하의 미모가 쇠하고 왕의 사랑도 식게 되었을 때 한번은 미자하가 왕에게 죄를 지었다.\n그러자 왕은 이렇게 말하였다.\n\"이놈은 옛날에 과인의 수레를 몰래 훔쳐 타기도 하고, 또 자기가 먹던 복숭아를 과인에게 먹으라고 내밀기도 하였다.\"\n미자하의 행동은 변함이 없었으나 전에는 칭찬을 받았지만 뒤에는 벌을 받은 까닭은 사랑이 미움으로 바뀌었기 때문이다.]\n...\n군주에게 간언하고 설득하는 자는 군주가 자기를 사랑하는지, 미워하는지 살펴 본 후 설득해야 한다는 것을 알 수 있다.\n...\n비단 왕뿐 아니라 사람에게도 저마다 역린이 있다.\n누군가를 설득할 때에는 상대방이 수치심을 느끼거나 부끄러워하는 감정을 건드리지 말아야 한다.\n아무리 논리적으로 설득할지라도 외면당할 수 있기 때문이다.\n결국 상대방의 마음을 잘 헤아려 나의 의도를 그에게 맞추려면 상대방의 역린을 읽어낼 수 있는 감수성이 필요하다.\n설득은 마음을 움직이는 일이므로 논리보다는 감성이 앞선다고 할 수 있다.\n노자는 통치술의 첫째로서, 통치가의 존재 그 자체를 부정하고 있다.\n앞에 나서서 설치는 자는 최상의 군주가 아니고 뒤에서 조용히 조종하는 자가 최상이라는 것이다.\n물론 그 존재 자체도 느끼지 못할 때 그것이 최상이다.\n일반적으로 군주들은 신임하지 않는 자가 간언하면 비방한다고 생각하고, 신임하는 사람이 간언하지 않으면 봉록만을 훔치는 자라고 생각하는 경향이 있다.\n그러므로 신하들은 충성스러운 간언을 할 분위기가 조성되지 않으면 침묵하게 된다.\n이러한 문제를 해결하고자 당 태종은 간언을 독려한다.\n\"사람이 자기 얼굴을 보려면 반드시 맑은 거울이 있어야 하고, 군주가 자기 허물을 알려면 반드시 충직한 신하에 의지해야 하오.\n군주가 만일 자신을 현인이나 성인이라고 여기는 착각에 빠져있고, 신하도 정확한 의견을 제시하여 바로잡지 않는다면, 이런 상황에서 위험과 실패를 면하는 것이 어찌 가능하겠소?\n군주가 국토와 사직을 버리면 신하 또한 자신의 집안을 보존할 수 없소.\n수양제는 잔인하고 포학했지만 신하가 입을 다문 채 아무 말도 하지 않았으므로 자기에게 어떤 허물이 있는지 듣지 못했소.\n결국 나라는 멸망했소.\n우세기 등의 대신 또한 오래지 않아 피살되었소.\n이것은 과거 오래전의 일이 아니오.\n대신들은 내가 백성들에게 불리한 일을 하는 것을 보게 되면, 반드시 거리낌 없이 직언을 하여 비판 해야 하오.\"\n한비자는 도성을 떠나 유람을 가는 것 또한 지극히 경계했다.\n군주가 궁궐을 비우고 외부로 떠나는 것은 결국 궁정의 긴장감을 무너뜨리게 되므로, 조직의 긴장도를 위해 군주는 유람할 시간이 없다는 것이다.\n아이가 어릴 때 부모의 양육이 소홀하게 되면, 그 자식은 성장하여 부모를 원망하게 된다.\n또 그 자식이 장년이 되었을 때 부모에 대한 효도를 망각하면, 그 부모는 자식을 책망하게 될 것이다.\n부자 사이는 가장 친밀한 사이임에도 책망하거나 원망한다는 것은 서로 상대가 자기를 위해서 일을 한다는 마음이 없었기 때문이다.\n아랫사람을 고용하여 씨앗을 뿌리거나 경작을 시킬 때, 주인이 집안 살림에서 과용을 하며 좋은 음식과 쫗은 옷을 주고 노동의 대가로 돈도 챙겨주는 것은 그 아랫사람을 배려하기 때문이 아니다 .\n그렇게 후하게 대해야만 깊이 땅을 팔 것이며, 잡초를 샅샅이 뽑으리라 생각하기 때문인 것이다.\n...\n결국 주인과 일하는 사람 양쪽 모두 자기 이익만을 생각하고 있는 것이다.\n그러므로 자기에게 이익이 되도록 일을 하면 적대적인 나라 사람과도 우호적으로 지낼 수 있고, 자기 이익을 떠나게 되면 부자지간도 서로가 원망하게 된다는 것이다.\n...\n남을 위해 죽도록 일하는 것이 아니라 자신의 이익과 목표를 위해 일한다고 생각하면 상대에 대한 평가도 어렵지 않으리라.\nps.\n여담이지만, 챕터별로 편차가 있지만, 챕터의 제목과 챕터의 전반부/후반부의 내용이 상이해서 생뚱 맞다는 느낌을 받았다.\n챕터의 첫번째 사례로 드는 고사는 제목과 잘 어울려서 챕터를 이해하는데 도움이 되었지만, 두번째, 세번째 고사는 사실 챕터에서 이야기하고자 하는 바와 어울리지 않을 때가 많아서 띠용한 적이 종종 있다.\n예를 들어 \"15. 만족을 모르면 근심도 떠나지 않는다\" 에서 2번째 고사는 새옹지마 사례다보니 '일희일비 하지 않는다' 라는 주제에선 어울리겠지만, '만족할 줄 알아야 한다'를 이야기해야하는 이 챕터에서는 전혀 어울리는 고사는 아니라고 생각했다.\n그 외에도 이런 사례가 많아서 책의 좋은 내용과 별개로 책에 대한 평가를 할 때 '절하' 되는 근거가 될 것 같다.",
        "guid": "http://jojoldu.tistory.com/826",
        "categories": [
          "도서",
          "C레벨",
          "리더",
          "리더십",
          "스타트업",
          "트레바리",
          "한비자"
        ],
        "isoDate": "2025-05-06T00:38:32.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "코드 품질 개선 기법 10편: 적절한 거리 유지에 신경 쓰자",
        "link": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-10",
        "pubDate": "Fri, 09 May 2025 03:00:00 GMT",
        "content": "안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 회사는 높은 개발 생산성을 유지하기 위해 코드 품질 및 개발 문화 개선에 힘쓰고...",
        "contentSnippet": "안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 회사는 높은 개발 생산성을 유지하기 위해 코드 품질 및 개발 문화 개선에 힘쓰고...",
        "guid": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-10",
        "isoDate": "2025-05-09T03:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": [
      {
        "title": "Cursor에서 MCP 연동하기: Tavily Search로 실시간 웹 검색 기능 구현하기",
        "link": "https://velog.io/@mdy0102/Cursor%EC%97%90%EC%84%9C-MCP-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0-Tavily-Search%EB%A1%9C-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EC%9B%B9-%EA%B2%80%EC%83%89-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0",
        "pubDate": "Tue, 06 May 2025 16:38:56 GMT",
        "content": "<h2 id=\"cursor란\">Cursor란?</h2>\n<p><strong>Cursor</strong>는 AI 기반의 통합 개발 환경(IDE)으로, VSCode(Visual Studio Code)를 기반으로 하여 개발자 생산성을 극대화하는 다양한 기능을 제공합니다. 기본적으로 VSCode 인터페이스와 똑같기 때문에 빠르게 적응하기 쉬우며, Copilot처럼  자연어로 코드 작성 및 수정이 가능합니다. 특히 전체 코드베이스를 이해하고 이에 대한 질문에 답변하는 기능이 뛰어납니다. 내 폴더구조와 여러 파일들을 Context 인식해서 그에 맞게 폴더/파일/코드라인 단위로 코드를 생성해줍니다.</p>\n<h2 id=\"mcp란\">MCP란?</h2>\n<p><strong>MCP(Model Context Protocol)</strong>는 AI 애플리케이션이 외부 데이터 소스나 도구와 통신할 수 있도록 표준화된 인터페이스를 제공하는 오픈 프로토콜입니다. MCP는 AI 모델이 다양한 외부 시스템과 상호 작용할 수 있도록 지원하여, 개발자가 복잡한 통합 작업 없이도 AI 기능을 확장할 수 있게 합니다.</p>\n<p>표준화된 인터페이스를 제공한다는 말은, 동일한 방법으로 외부 데이터 소스나 도구를 호출해서 사용할 수 있다는 것입니다. 마치 Server-Client의 호출이 HTTP프로토콜로 표준화되어 있듯이, MCP Server - MCP Client사이의 통신 프로토콜이 표준화 되어 있는것입니다.</p>\n<p>주로 MCP 서버는 외부 데이터 소스를 제공하거나, 외부 API를 실행하는 기능을 제공하고, 호스트 애플리케이션(예: Cursor, Claude Desktop 등)은 MCP 클라이언트를 통해 MCP 서버를 호출합니다. 주요 시나리오는 유저가 호스트 애플리케이션에 질문을 하면, 호스트 애플리케이션은 어떤 MCP Server를 어떻게 호출할지 AI 모델을 이용해서 판단하고, MCP Server를 실행하고, 그 결과를 취합하여 최종 결론을 내는 방식입니다.\n<img src=\"https://velog.velcdn.com/images/mdy0102/post/db2ea508-4a40-4544-b90d-006a5ef28883/image.png\" alt=\"MCP_architecture\"></p>\n<h2 id=\"cursor에-tavilysearch-mcp-server-연동해야하는-이유\">Cursor에 TavilySearch MCP Server 연동해야하는 이유</h2>\n<p>Cursor는 강력한 AI 기능을 제공하지만, 기본적으로 웹 검색 기능이 내장되어 있지 않습니다. 따라서 최신 정보를 반영하거나 외부 데이터를 실시간으로 조회하는 데에는 한계가 있습니다.</p>\n<p>예를 들어, &quot;최신 AI 기술 동향을 알려줘&quot;와 같은 질문을 할 경우, Cursor는 자체적으로 웹 검색을 수행하지 않기 때문에 최신 정보를 제공하는 데 어려움이 있습니다.</p>\n<p>이러한 문제를 해결하기 위해, Tavily Search API를 제공하는 MCP를 Cursor에 연동하여 실시간 웹 검색 기능을 구현할 수 있습니다. Tavily Search는 웹 검색 API를 통해 다양한 웹 데이터를 조회할 수 있는 기능을 제공합니다.</p>\n<p>이번 글에서는 Tavily Search를 MCP로 연동하여 Cursor 내에서 실시간 웹 검색 기능을 구현하는 방법을 단계별로 안내하겠습니다. 이를 통해 Cursor의 기능을 확장하고, 최신 정보를 반영한 개발 환경을 구축할 수 있습니다.</p>\n<h2 id=\"1사전-준비\">1.사전 준비</h2>\n<h3 id=\"11-cursor-설치\">1.1 Cursor 설치</h3>\n<p>Cursor는 <a href=\"https://www.cursor.com/\">공식 웹사이트</a>에서 다운로드하여 설치할 수 있습니다. 설치 방법은 운영 체제에 따라 다르므로, 해당 페이지의 안내를 참고하시기 바랍니다.</p>\n<p><img src=\"https://velog.velcdn.com/images/mdy0102/post/a8a3a73c-a116-43c7-ae4b-bd0754ba7c48/image.png\" alt=\"cursor\"></p>\n<h3 id=\"12-nodejs-및-npx-설치\">1.2 Node.js 및 npx 설치</h3>\n<p>MCP 서버 실행을 위해 Node.js와 npx가 필요합니다. Node.js는 <a href=\"https://nodejs.org/ko/download\">공식 웹사이트</a>에서 설치할 수 있으며, 설치 시 npx도 함께 제공됩니다.</p>\n<h3 id=\"13-tavily-search-api-키-발급\">1.3 Tavily Search API 키 발급</h3>\n<p>Tavily Search API를 사용하려면 API 키가 필요합니다. Tavily <a href=\"https://tavily.com/\">공식 웹사이트</a>에 가입한 후, 대시보드에서 API 키를 발급받을 수 있습니다. 이 키는 이후 MCP 서버와 Cursor에서 사용됩니다.\n<img src=\"https://velog.velcdn.com/images/mdy0102/post/d1b3b88f-1cc0-4ee0-9e48-a05f53d9c632/image.png\" alt=\"\"></p>\n<h2 id=\"2tavilysearch-mcp-server-테스트\">2.TavilySearch MCP Server 테스트</h2>\n<h3 id=\"방법1---smithery-서비스-사용\">방법1 - Smithery 서비스 사용</h3>\n<p>원래는 MCP Server를 모아두는 Smithery.ai(<a href=\"https://smithery.ai/\">https://smithery.ai/</a>) 에서 쉽게 TavilySearch MCP Server를 실행하려고 했으나.. 일시적으로 사이트 장애가 있어서 직접 내 local에 실행하기로 했습니다.\n<img src=\"https://velog.velcdn.com/images/mdy0102/post/392ccb6f-15ca-4af9-a096-667c9a5fd660/image.png\" alt=\"Smithery\"></p>\n<p>Smithery에 가입하여 아래 페이지에 접속한 후 우측에 Install을 누르면 Smithery에 MCP 서버가 실행되고, Smithery에서 제공하는 endpoint를 제공한다고 들었는데...</p>\n<p><a href=\"https://smithery.ai/server/@tavily-ai/tavily-mcp/api\">https://smithery.ai/server/@tavily-ai/tavily-mcp/api</a>\n<img src=\"https://velog.velcdn.com/images/mdy0102/post/664944c2-9426-4edb-a516-e28662ba1f36/image.png\" alt=\"vail_mcp_server\">\n로그인만 하면 Smithery 페이지 장애가 나서 더이상 실행할 수 없었습니다.\n<img src=\"https://velog.velcdn.com/images/mdy0102/post/92cd75fa-519f-4175-84ce-315a33b53f31/image.png\" alt=\"surprised_cat\"></p>\n<h3 id=\"방법2---local에-mcp-server-실행-테스트\">방법2 - Local에 MCP Server 실행 테스트</h3>\n<p>GitHub의 Tavily-MCP Repository 를 찾아서 따라 내 Local에 MCP Server를 실행해봤습니다.\n<a href=\"https://github.com/tavily-ai/tavily-mcp?tab=readme-ov-file\">https://github.com/tavily-ai/tavily-mcp?tab=readme-ov-file</a>\n<img src=\"https://velog.velcdn.com/images/mdy0102/post/699b195d-0d45-440b-a183-a8394274630b/image.png\" alt=\"github\"></p>\n<p>뭔가를 설치하기는 싫어서 npx를 통해 간단히 실행했습니다. \n1.3단계에서 발급받은 TAVILY의 APIKEY를 환경변수로 설정해주고, npx로 mcp 서버를 실행했을 때 이미지와 같이 서버가 running중이라는 말이 뜨면 성공입니다.</p>\n<pre><code>export TAVILY_API_KEY=&lt;내 API KEY&gt;\nnpx -y tavily-mcp@0.1.4  </code></pre><p><img src=\"https://velog.velcdn.com/images/mdy0102/post/4fb4e6a3-73d0-4c90-a0fc-57db34b9792e/image.png\" alt=\"terminal\"></p>\n<h2 id=\"3-cursor에서-mcp-server등록\">3. Cursor에서 MCP Server등록</h2>\n<p>자, 이제 <code>tavily-mcp@0.1.4</code>가 잘 돌아간다는 것을 확인했으니 cursor에 MCP Server를 등록하겠습니다.</p>\n<ul>\n<li>Cursor Settings를 열고</li>\n<li>Navigate to Features &gt; MCP Servers</li>\n<li>&quot;+ Add New MCP Server&quot; 버튼 클릭</li>\n<li>다음과 같이 json 등록<pre><code>{\n&quot;mcpServers&quot;: {\n  &quot;tavily-mcp&quot;: {\n    &quot;command&quot;: &quot;npx&quot;,\n    &quot;args&quot;: [&quot;-y&quot;, &quot;tavily-mcp@0.1.4&quot;],\n    &quot;env&quot;: {\n      &quot;TAVILY_API_KEY&quot;: &quot;&lt;내 API_KEY&gt;&quot;\n    }\n  }\n}\n}</code></pre>이렇게 등록을 하면 아래와 같이 cursor가 command 명령어를 실행해 <code>tavily-mcp</code> 서버를 띄워놓은것을 확인할 수 있습니다.\n<img src=\"https://velog.velcdn.com/images/mdy0102/post/40b46248-a140-4f8e-8ce9-f3829ae23d16/image.png\" alt=\"cursor\"></li>\n</ul>\n<h2 id=\"4-실행\">4. 실행</h2>\n<p>Cursor에서 <code>Command+I</code>를 눌러 채팅을 연 후 Agent를 선택한 후 채팅을 쳐보겠습니다.</p>\n<p><img src=\"https://velog.velcdn.com/images/mdy0102/post/d1827f4f-7db6-4f6c-8863-9314ba02b1c7/image.png\" alt=\"choose_agent\"></p>\n<p>&quot;langchain_mcp_adapters 이용해서 숫자를 더하고 곱하는 tool이 있는 mcp server 만들어줘 python&quot; 이라고 질문해봤습니다.</p>\n<p><img src=\"https://velog.velcdn.com/images/mdy0102/post/afd8fc61-9554-4b34-bf0f-cec9e3e41249/image.png\" alt=\"cusor_chat1\">\n처음에는 제 로컬 파일중에서 관련내용을 찾았는데, 관련내용이 없었습니다.\n두번째는 웹검색을 하고자 했습니다. 웹검색을 사용해도 되는지 제 동의를 구했습니다.</p>\n<p><img src=\"https://velog.velcdn.com/images/mdy0102/post/7727d0e1-deda-4b24-9db1-4ffdbe6f70e4/image.png\" alt=\"cusor_chat1\">\n검색한 내용을 바탕으로 최종 코드를 작성하여 파일을 생성했습니다.</p>\n<h2 id=\"마무리\">마무리</h2>\n<p>MCP 연동하는게 생각보다 너무 쉬운데, 개발 생산성은 매우 올라가는것 같습니다.\n<a href=\"https://smithery.ai/\">Smithery</a> 나 <a href=\"https://glama.ai/mcp/tools\">Glama</a> 같은 사이트에 보면 MCP 서버가 엄청 많은데, 웹서치 이외에도 다양한 툴을 연동해보면 좋을 것 같습니다.</p>\n<p>하지만 MCP서버를 많이 등록하면 등록할수록 호스트(Cursor)가 질문에 맞는 서버를 고르는 정확도가 떨어질 수 있으니 적당히 필요에 맞게 조절해가며 사용하면 좋을 것 같습니다.(커서는 최대 40개까지 등록할 수 있습니다.)</p>\n<p>그리고 Claude Desktop 에도 MCP 연동할 수 있다는데, 채팅만 사용하려면 Claude에도 연동하면 쓸만할 것 같다는 생각이 들었습니다.</p>\n",
        "contentSnippet": "Cursor란?\nCursor는 AI 기반의 통합 개발 환경(IDE)으로, VSCode(Visual Studio Code)를 기반으로 하여 개발자 생산성을 극대화하는 다양한 기능을 제공합니다. 기본적으로 VSCode 인터페이스와 똑같기 때문에 빠르게 적응하기 쉬우며, Copilot처럼  자연어로 코드 작성 및 수정이 가능합니다. 특히 전체 코드베이스를 이해하고 이에 대한 질문에 답변하는 기능이 뛰어납니다. 내 폴더구조와 여러 파일들을 Context 인식해서 그에 맞게 폴더/파일/코드라인 단위로 코드를 생성해줍니다.\nMCP란?\nMCP(Model Context Protocol)는 AI 애플리케이션이 외부 데이터 소스나 도구와 통신할 수 있도록 표준화된 인터페이스를 제공하는 오픈 프로토콜입니다. MCP는 AI 모델이 다양한 외부 시스템과 상호 작용할 수 있도록 지원하여, 개발자가 복잡한 통합 작업 없이도 AI 기능을 확장할 수 있게 합니다.\n표준화된 인터페이스를 제공한다는 말은, 동일한 방법으로 외부 데이터 소스나 도구를 호출해서 사용할 수 있다는 것입니다. 마치 Server-Client의 호출이 HTTP프로토콜로 표준화되어 있듯이, MCP Server - MCP Client사이의 통신 프로토콜이 표준화 되어 있는것입니다.\n주로 MCP 서버는 외부 데이터 소스를 제공하거나, 외부 API를 실행하는 기능을 제공하고, 호스트 애플리케이션(예: Cursor, Claude Desktop 등)은 MCP 클라이언트를 통해 MCP 서버를 호출합니다. 주요 시나리오는 유저가 호스트 애플리케이션에 질문을 하면, 호스트 애플리케이션은 어떤 MCP Server를 어떻게 호출할지 AI 모델을 이용해서 판단하고, MCP Server를 실행하고, 그 결과를 취합하여 최종 결론을 내는 방식입니다.\n\nCursor에 TavilySearch MCP Server 연동해야하는 이유\nCursor는 강력한 AI 기능을 제공하지만, 기본적으로 웹 검색 기능이 내장되어 있지 않습니다. 따라서 최신 정보를 반영하거나 외부 데이터를 실시간으로 조회하는 데에는 한계가 있습니다.\n예를 들어, \"최신 AI 기술 동향을 알려줘\"와 같은 질문을 할 경우, Cursor는 자체적으로 웹 검색을 수행하지 않기 때문에 최신 정보를 제공하는 데 어려움이 있습니다.\n이러한 문제를 해결하기 위해, Tavily Search API를 제공하는 MCP를 Cursor에 연동하여 실시간 웹 검색 기능을 구현할 수 있습니다. Tavily Search는 웹 검색 API를 통해 다양한 웹 데이터를 조회할 수 있는 기능을 제공합니다.\n이번 글에서는 Tavily Search를 MCP로 연동하여 Cursor 내에서 실시간 웹 검색 기능을 구현하는 방법을 단계별로 안내하겠습니다. 이를 통해 Cursor의 기능을 확장하고, 최신 정보를 반영한 개발 환경을 구축할 수 있습니다.\n1.사전 준비\n1.1 Cursor 설치\nCursor는 공식 웹사이트에서 다운로드하여 설치할 수 있습니다. 설치 방법은 운영 체제에 따라 다르므로, 해당 페이지의 안내를 참고하시기 바랍니다.\n\n1.2 Node.js 및 npx 설치\nMCP 서버 실행을 위해 Node.js와 npx가 필요합니다. Node.js는 공식 웹사이트에서 설치할 수 있으며, 설치 시 npx도 함께 제공됩니다.\n1.3 Tavily Search API 키 발급\nTavily Search API를 사용하려면 API 키가 필요합니다. Tavily 공식 웹사이트에 가입한 후, 대시보드에서 API 키를 발급받을 수 있습니다. 이 키는 이후 MCP 서버와 Cursor에서 사용됩니다.\n\n2.TavilySearch MCP Server 테스트\n방법1 - Smithery 서비스 사용\n원래는 MCP Server를 모아두는 Smithery.ai(https://smithery.ai/) 에서 쉽게 TavilySearch MCP Server를 실행하려고 했으나.. 일시적으로 사이트 장애가 있어서 직접 내 local에 실행하기로 했습니다.\n\nSmithery에 가입하여 아래 페이지에 접속한 후 우측에 Install을 누르면 Smithery에 MCP 서버가 실행되고, Smithery에서 제공하는 endpoint를 제공한다고 들었는데...\nhttps://smithery.ai/server/@tavily-ai/tavily-mcp/api\n\n로그인만 하면 Smithery 페이지 장애가 나서 더이상 실행할 수 없었습니다.\n\n방법2 - Local에 MCP Server 실행 테스트\nGitHub의 Tavily-MCP Repository 를 찾아서 따라 내 Local에 MCP Server를 실행해봤습니다.\nhttps://github.com/tavily-ai/tavily-mcp?tab=readme-ov-file\n\n뭔가를 설치하기는 싫어서 npx를 통해 간단히 실행했습니다. \n1.3단계에서 발급받은 TAVILY의 APIKEY를 환경변수로 설정해주고, npx로 mcp 서버를 실행했을 때 이미지와 같이 서버가 running중이라는 말이 뜨면 성공입니다.\nexport TAVILY_API_KEY=<내 API KEY>\nnpx -y tavily-mcp@0.1.4  \n\n3. Cursor에서 MCP Server등록\n자, 이제 tavily-mcp@0.1.4가 잘 돌아간다는 것을 확인했으니 cursor에 MCP Server를 등록하겠습니다.\nCursor Settings를 열고\nNavigate to Features > MCP Servers\n\"+ Add New MCP Server\" 버튼 클릭\n다음과 같이 json 등록\n{\n\"mcpServers\": {\n  \"tavily-mcp\": {\n    \"command\": \"npx\",\n    \"args\": [\"-y\", \"tavily-mcp@0.1.4\"],\n    \"env\": {\n      \"TAVILY_API_KEY\": \"<내 API_KEY>\"\n    }\n  }\n}\n}\n이렇게 등록을 하면 아래와 같이 cursor가 command 명령어를 실행해 tavily-mcp 서버를 띄워놓은것을 확인할 수 있습니다.\n\n4. 실행\nCursor에서 Command+I를 눌러 채팅을 연 후 Agent를 선택한 후 채팅을 쳐보겠습니다.\n\n\"langchain_mcp_adapters 이용해서 숫자를 더하고 곱하는 tool이 있는 mcp server 만들어줘 python\" 이라고 질문해봤습니다.\n\n처음에는 제 로컬 파일중에서 관련내용을 찾았는데, 관련내용이 없었습니다.\n두번째는 웹검색을 하고자 했습니다. 웹검색을 사용해도 되는지 제 동의를 구했습니다.\n\n검색한 내용을 바탕으로 최종 코드를 작성하여 파일을 생성했습니다.\n마무리\nMCP 연동하는게 생각보다 너무 쉬운데, 개발 생산성은 매우 올라가는것 같습니다.\nSmithery 나 Glama 같은 사이트에 보면 MCP 서버가 엄청 많은데, 웹서치 이외에도 다양한 툴을 연동해보면 좋을 것 같습니다.\n하지만 MCP서버를 많이 등록하면 등록할수록 호스트(Cursor)가 질문에 맞는 서버를 고르는 정확도가 떨어질 수 있으니 적당히 필요에 맞게 조절해가며 사용하면 좋을 것 같습니다.(커서는 최대 40개까지 등록할 수 있습니다.)\n그리고 Claude Desktop 에도 MCP 연동할 수 있다는데, 채팅만 사용하려면 Claude에도 연동하면 쓸만할 것 같다는 생각이 들었습니다.",
        "guid": "https://velog.io/@mdy0102/Cursor%EC%97%90%EC%84%9C-MCP-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0-Tavily-Search%EB%A1%9C-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EC%9B%B9-%EA%B2%80%EC%83%89-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0",
        "isoDate": "2025-05-06T16:38:56.000Z"
      }
    ]
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "요즘 아이들의 뷰티 제품 선호도",
        "link": "https://www.thestartupbible.com/2025/05/some-interesting-facts-on-gen-zs-thoughts-on-beauty-products.html",
        "pubDate": "Wed, 07 May 2025 21:02:44 +0000",
        "content:encodedSnippet": "우리도 소비재에 많이 투자하고, 한국이 잘하는 것 중 하나가 소비재라서 나는 이 시장 관련 기사나 보고서는 최대한 많이 읽으려고 노력한다. 그중 좋아하는 리포트 중 하나가 The New Consumer에서 정기적으로 만드는 건데, 최근에 발행한 Beauty 2025 Special Report를 흥미롭게 읽었다. 화장품도 뷰티 시장에서 중요한 카테고리이고, 한국이 전 세계에서 제일 잘하는 분야 중 하나라서 그런지, 한국 화장품도 몇 번 언급된다. 이 보고서에 요즘 아이들인 MZ 세대가 뷰티를 어떻게 바라보고 대하는지에 대해서 조사한 내용이 있는데, 요약하자면 다음과 같다. 실은, 나는 MZ 세대는 X 세대와는 뭔가 매우 다를 줄 알았는데, 내가 뷰티를 바라보는 시각과 거의 비슷하다.\n1/ 대부분의 미국 MZ는 본인들의 외모에 신경을 쓴다.(“나는 남들이 내 외모에 대해 어떻게 생각하는지 궁금하고, 신경을 쓴다.”)\n2/ 대부분의 MZ는 한 달에 한 번 뷰티 제품을 구매하는데, 특히 스킨케어와 헤어케어 제품을 가장 많이, 자주 구매한다.\n3/ 미국의 경우 TikTok Shop에서 뷰티 제품이 많이 팔린다. 이미 TikTok Shop은 Sephora보다 더 많은 양의 뷰티 제품을 팔고 있다. 하지만, 새로운 제품을 처음 구매하는 건 대부분 오프라인 매장을 선호한다.\n4/ 2024년 미국에서 가장 많이 팔린 뷰티 제품은 향수(fragrance)와 한국 화장품이다.\n5/ 2024년 미국에서 가장 많이 검색된 뷰티 관련 단어 중 하나는 “glass skin(도자기 피부)”이다.\n6/ 이제 미국 소비자들은 뷰티 제품 구매에서 ‘성분’을 매우 중요하게 생각하지만, 성분보다 더 중요한 건 브랜드이다. 아직도 샤넬이나 디올과 같은 명품에 대한 선호도가 매우 높다.\n7/ 우리가 일반적으로 생각하는 것과 달리, Z 세대 고객은 뷰티 브랜드에 대한 충성도가 은근히 높다.\n이 모든 걸 종합해 보면, 뷰티 제품에 대해선, 요즘 아이들은 소셜미디어를 맹신하고, 한 번 구매한 제품이 마음에 들면, 계속 이 제품을 구매할 만큼 충성도가 높다. 하지만, Z 세대들에게 뷰티 제품 구매에 있어서 가장 중요한 건, 마케팅이 아니라 제품 그 자체가 좋아야 한다. 제품이 좋은 건 기본이고, 다양한 소셜 미디어를 통해서, 꾸준하고 일관된 목소리로 시장과 커뮤니티에 이 좋은 제품을 홍보해야 한다. \n무슨 말이냐 하면, 안 그래도 어려운 뷰티 제품 영업, 마케팅, 판매가 이젠 정말 더럽게 어려워졌다는 말이다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/05/some-interesting-facts-on-gen-zs-thoughts-on-beauty-products.html#respond",
        "content": "우리도 소비재에 많이 투자하고, 한국이 잘하는 것 중 하나가 소비재라서 나는 이 시장 관련 기사나 보고서는 최대한 많이 읽으려고 노력한다. 그중 좋아하는 리포트 중 하나가 The New Consumer에서 정기적으로 만드는 건데, 최근에 발행한 Beauty 2025 Special Report를 흥미롭게 읽었다. 화장품도 뷰티 시장에서 중요한 카테고리이고, 한국이 전 세계에서 제일 잘하는 분야 중 하나라서 그런지, 한국 화장품도(...)",
        "contentSnippet": "우리도 소비재에 많이 투자하고, 한국이 잘하는 것 중 하나가 소비재라서 나는 이 시장 관련 기사나 보고서는 최대한 많이 읽으려고 노력한다. 그중 좋아하는 리포트 중 하나가 The New Consumer에서 정기적으로 만드는 건데, 최근에 발행한 Beauty 2025 Special Report를 흥미롭게 읽었다. 화장품도 뷰티 시장에서 중요한 카테고리이고, 한국이 전 세계에서 제일 잘하는 분야 중 하나라서 그런지, 한국 화장품도(...)",
        "guid": "https://www.thestartupbible.com/?p=9438",
        "categories": [
          "Uncategorized",
          "B2C",
          "brand",
          "consumer",
          "general",
          "korea"
        ],
        "isoDate": "2025-05-07T21:02:44.000Z"
      }
    ]
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "MLB를 살리러 온 구원자, 이정후와 오타니",
        "link": "https://blog.toss.im/article/moneyball-2",
        "pubDate": "Fri, 09 May 2025 04:35:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}'바람의 손자' 이정후 덕분에 요즘 MLB(메이저리그 베이스볼)에 관심을 갖는 팬들이 부쩍 늘어났습니다. 이정후는 지난 시즌 부진했던 소속 팀 샌프란시스코 자이언츠가 리그 정상급 팀으로 부상하는 데 큰 역할을 하고 있죠.\n이정후가 활약하고 있는 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}MLB는 최근 산업 전반에 걸쳐 큰 환경 변화를 겪고 있습니다. MLB가 미국 국내 시장보다 해외 시장에서 수익 확대 전략에 초점을 맞추고 있는 것도 이 변화와 깊은 관련이 있어요. 전통적인 사업 모델이 흔들리는 가운데, MLB는 어떤 전략으로 산업 구조를 바꿔 나가고 있을까요?\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}샌프란시스코에서 활약 중인 이정후 / 사진: 로이터\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}MLB의 효자 상품,\n지역 중계권\n미국 5대 프로스포츠의 중계권료를 보면, 왜 미국을 ‘프로 스포츠의 천국’이라 부르는지 잘 알 수 있습니다.\n미국 프로스포츠 중계권 수익은 크게 전국 방송, 지역 방송, 해외 중계로 나뉩니다. 이 가운데 전국 방송 중계권료만 보면 NFL(내셔널 풋볼 리그)이 약 18조 5,000억 원으로 가장 높고, NBA(전미 농구 협회)가 약 5조 3,000억 원으로 그 뒤를 잇습니다. MLB의 전국 방송 중계권료 수입은 약 2조 7,000억 원 규모입니다.\n\n전국 방송 중계권료 측면에서 MLB는 3위지만, 지역 방송 중계권을 놓고 보면 단연 1위입니다. 지역 방송 중계권은 특정 구단이 위치한 지역에서만 제공되는 TV 중계 방송권을 의미해요.\n야구는 경기 수가 많고, 시청률도 어느 정도 보장되기 때문에, 지역 방송사들이 가장 선호하는 콘텐츠였습니다. 덕분에 MLB 구단은 지역 중계권료만으로 막대한 수익을 거둘 수 있었어요.\n미국 주요 프로 스포츠 리그 가운데, 리그 전체 수입에서 지역 중계권료 비중이 가장 높은 것도 MLB입니다. MLB는 전체 수입 가운데 23%가 지역 중계권료 수입이죠. NBA(13%), NHL(12%)에 비해 월등히 높은 수준이며, NFL은 고작 1%에 불과합니다.\n\n급변하는 환경에\n무너지는 MLB 지역 중계권\n하지만 최근 5년 사이, MLB 구단들의 지역 중계권 시장은 빠르게 무너지고 있습니다. 미국의 젊은 세대가 야구에 큰 관심을 보이지 않는 데다가, 코드 커팅*까지 확산된 탓이죠. 2023년 조사에 따르면, 18~29세 미국인 중 야구를 ‘가장 즐겨 보는 스포츠’로 꼽은 비율은 고작 5%에 불과합니다.\n* 코드 커팅: Cord-cutting, 유료 방송 시청자가 가입을 해지하고 인터넷TV, OTT 등 새로운 플랫폼으로 이동하는 현상\nOTT와 유튜브 중심으로 미디어 환경이 재편되면서, 케이블 TV 기반의 중계 모델은 경쟁력을 잃었고, 지역 방송사들은 MLB 중계 횟수를 줄이기 시작했습니다. 인기가 하락한 MLB는 지역 방송사의 유료 회원을 끌어들이는 데 더 이상 도움이 되지 않았고, 잦은 경기 수에 따라 발생하는 높은 중계 제작비도 방송사 입장에서 큰 부담이기 때문이죠.\n\n2023년, 클리블랜드 가디언스와 샌디에이고 파드리스를 포함한 4개 MLB 구단은 지역 방송사의 파산으로 지역 중계권료 수입에 큰 타격을 입었습니다. 2024년에도 지역 중계권 시장의 어려움은 계속됩니다. 볼티모어 오리올스의 지역 중계권 수입은 전년 대비 40% 감소했고, 워싱턴 내셔널스 역시 같은 기간 20% 줄었습니다.\nMLB 사무국은 무너지는 지역 중계권 모델에 대응해 새로운 플랫폼을 통한 중계 방식을 준비하고 있습니다. 그러나 과거 수준의 수익을 회복하는 것은 쉽지 않아 보였고, 새로운 돌파구를 찾아야만 했어요.\nMLB를 살리러 온 구원자\n오타니 쇼헤이\n사실 MLB는 지역 중계권이 무너지고 있다는 걸 일찌감치 감지하고 있었어요. 유럽 시장 진출을 위해 2019년에 MLB 런던시리즈의 막을 연 것도 그 때문이었죠. 다행히 런던시리즈는 성공적이었습니다. 뉴욕 양키스와 보스턴 레드삭스가 펼친 첫 경기는 해외 경기 역사상 최다 관중 기록인 59,659명을 동원했고, 굿즈 판매에서도 신기록을 세웠습니다.\n하지만 지역 중계권이 붕괴된 MLB 구단들에게 유럽 시장은 당장 해결책이 될 순 없었습니다. 유럽에서 MLB를 제대로 확장하려면 오랜 시간이 걸릴 수밖에 없었기 때문이죠.\n\nMLB 런던시리즈에 등장한 해리 왕자와 왕자비 메건 마클 / 사진: 로이터\n이때 등장한 인물이 바로 일본의 오타니 쇼헤이입니다. MLB 최고의 스타로 떠오른 오타니는 투타 겸업, 이른바 ‘이도류’로 야구 팬들의 낭만을 다시 일깨운 주인공입니다.\n2024년, 오타니가 LA 다저스로 이적한 첫 해에 월드시리즈 우승까지 차지하자, MLB는 다시 한 번 ‘야구 르네상스’를 꿈꾸게 됩니다. 뉴욕 양키스와 LA 다저스의 월드시리즈는 전 세계적인 관심을 모으기도 했죠.\n일본의 열기는 특히 뜨거웠습니다. 오타니는 물론 야마모토 요시노부가 다저스의 선발투수로 나섰던 월드시리즈 2차전은 일본 내 시청률 13.9%를 기록했습니다. 이 경기를 지켜본 일본인은 약 1,590만 명으로, 같은 경기를 본 미국 시청자 수 1,380만 명을 넘어섰어요. 일본이 월드시리즈에 보여준 폭발적인 관심은 MLB의 글로벌 확장 가능성을 다시 한번 증명하는 사건이었습니다.\n\nLA다저스의 월드시리즈 우승을 이끈 오타니 쇼헤이 / 사진: 로이터\n재팬 머니는\nMLB를 춤추게 한다\nMLB가 2024년, 역대 최대 규모인 17조 5,200억 원의 수입을 올릴 수 있었던 데에도 일본의 영향력이 크게 작용했어요.\n2024년 MLB 구단의 스폰서십 수입은 약 2조 8,000억 원으로, 전년 대비 20%나 증가했습니다. 이 가운데 일본 기업들의 경기장 광고는 상당한 역할을 했습니다. 오타니 열풍이 거셌던 2023~2024년 사이, MLB 경기장에 광고를 집행한 일본 기업 수는 2022년에 비해 무려 218% 많아졌거든요.\n일본 기업들이 MLB 광고 시장에 뛰어드는 가장 큰 이유는 미국 내에서 자사 제품을 홍보하기 위해서입니다. 하지만 이들은 동시에, 일본 시장을 겨냥한 효과도 함께 기대하고 있습니다. 오타니를 비롯한 일본 선수들의 활약으로 일본 내 MLB 관심도가 급등하면서, 경기장 광고가 일본 시청자들에게도 고스란히 노출되기 때문이죠.\n\n일본 기업들의 광고판으로 가득 찬 다저 스타디움 / 사진: 로이터\n일본에서 MLB가 거둬들이는 중계권료 수입도 상당합니다. 2024년, 일본 미디어가 MLB 중계권료로 지불한 금액은 약 1,000억 원대에 이릅니다. 이는 MLB 해외 중계권 수입의 3분의 1에 해당하는 수준이죠.\n현재 일본에서는 무려 11개의 방송사와 OTT 플랫폼이 경쟁적으로 MLB 경기를 중계하고 있습니다. 여기에 아마존 프라임 일본 법인도 중계에 뛰어들면서, 일본 내 MLB 중계권료는 더욱 상승할 가능성이 높아졌어요.\n흥미롭게도 MLB에서 활약하는 일본 선수는 미국 서부 지역 구단 소속인 경우가 많습니다. 2024년 MLB 명예의 전당에 헌액된 이치로(시애틀 매리너스)를 비롯해서 다르빗슈 유(샌디에이고 파드리스), 오타니 쇼헤이(LA 다저스) 모두 서부 팀에서 뛰고 있어요. 한국 선수들도 마찬가지입니다. 김혜성, 류현진, 박찬호는 LA 다저스, 김하성은 샌디에이고 파드리스, 이정후는 샌프란시스코 자이언츠 소속이죠.\n이는 단순한 우연이 아닙니다. 서부 팀 경기는 현지 기준 오후 7시에 시작되는데, 이는 한국과 일본 시간으로 정오쯤입니다. 실시간 시청은 어렵지만, 점심시간 전후 하이라이트 소비나 SNS 확산에는 유리한 시간대죠. 게다가 주말 낮 경기는 한국과 일본에서 오전 9시쯤 시작돼 생중계 시청에도 적합합니다.\n반면 동부 팀 경기는 한국과 일본의 바쁜 출근 시간대와 겹치고, 주말 낮 경기 역시 새벽 3시쯤 시작돼 시청이 쉽지 않습니다. 이런 시간대 차이는 MLB가 아시아 팬층을 고려해 서부 팀에 아시아 선수를 집중 영입하는 데 영향을 줬다고 볼 수 있는 부분입니다.\n홈런은 오타니가 치고\n돈은 미국이 번다\n일본의 MLB 영향력은 여기에 그치지 않습니다. 재팬 머니는 이제 미국 지역 경제에도 큰 영향을 주고 있습니다.\n2024년 LA 다저스가 월드시리즈 우승을 차지한 뒤, LA의 일본 타운 ‘리틀 도쿄’에는 높이 45m의 오타니 벽화를 보기 위해 일본 관광객들이 끊임없이 방문했습니다. LA 다저스의 스프링캠프가 열린 애리조나 주에는 수백 명의 일본 팬과 취재진이 몰려들었죠. 몰려든 인파로 인해 경기장에는 임시 주차장이 설치됐고, 일본에서 온 팬들은 현지에서 숙박하고 식사하며 골프를 즐기는 등 지역 경제에 실질적인 소비 효과를 만들었습니다.\n이 열기는 도쿄에서 열린 MLB 공식 개막전 도쿄시리즈에서도 그대로 이어졌습니다. LA 다저스와 시카고 컵스가 맞붙은 경기의 온라인 티켓은 판매 시작 4초 만에 전석 매진될 정도였습니다.\n\n이제는 명실상부 패션 브랜드로도 자리 잡은 MLB / 사진: 로이터\n머천다이징 수입(굿즈 판매)도 눈에 띕니다. 2024년 MLB는 국내외에서 약 2조 4,000억 원 규모의 머천다이징 수입을 기록했습니다. 이 중 미국 내 수입이 약 1조 6,000억 원, 해외 수입은 약 8,000억 원입니다.\n일본 시장에서는 MLB 굿즈 수익도 빠르게 증가하고 있어요. MLB 해외 머천다이징 사업을 맡고 있는 패너틱스(Fanatics)의 2024년 일본 내 수입은 전년 대비 170% 증가했고, 오타니가 활약 중인 LA 다저스 관련 굿즈 수입은 무려 2,000%나 급등했습니다.\n도쿄시리즈 현장에서만 패너틱스가 벌어들인 굿즈 수입은 약 576억 원. 이는 패너틱스 역사상 단일 이벤트 기준 최대 매출입니다. NFL 슈퍼볼, MLB 월드시리즈, 올스타 게임까지 담당하는 글로벌 스포츠 굿즈 기업인 패너틱스가 이 기록을 도쿄시리즈에서 경신했다는 점은 오타니와 일본 시장의 경제적 영향력을 명확히 보여줍니다.\n오타니 효과는 여전히 현재진행형입니다. MLB의 머천다이징 수입은 2025년에도 더욱 성장할 것으로 전망됩니다.\n바람을 타고 한국에서 온\n또 다른 구원자, 이정후\nMLB에 뛰어난 능력을 갖춘 선수를 가장 많이 배출한 곳은 중남미 카리브해 연안 국가들입니다. 수많은 MLB 올스타와 명예의 전당 헌액 선수가 이 지역에서 나왔습니다. 하지만 이 지역은 경제적으로 가난한 국가가 많아 중계권료와 스폰서십 수입을 기대하기는 어렵습니다.\n\n고척돔에서 열린 MLB 서울시리즈 개막전 / 사진: 로이터\n그런 면에서 MLB의 핵심 해외 시장은 이미 야구 문화가 널리 퍼져 있고, 경제 수준도 높은 일본과 한국일 수밖에 없습니다. 2024년 MLB 서울시리즈가 열린 것도 같은 맥락입니다. 당시 쿠팡은 중계권료와 티켓 판매권으로 약 120억 원을 지불한 것으로 알려져 있죠.\n이정후는 MLB 입단과 동시에 굿즈 판매 증가, 중계 시청 증가, 구단 SNS 팔로워 수 급등 같은 변화를 이끌었습니다. MLB는 그를 통해 한국 시장의 문이 더 크게 열리길 기대하고 있습니다. 오타니가 일본을 뜨겁게 달궜듯, 이정후가 ‘한국의 MLB 구원자’가 되어주길 바라면서요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 윤동해 Graphic 이은호 이제현",
        "content": "메이저리그의 캐시카우로 떠오른 한국과 일본",
        "contentSnippet": "메이저리그의 캐시카우로 떠오른 한국과 일본",
        "guid": "https://blog.toss.im/article/moneyball-2",
        "isoDate": "2025-05-09T04:35:00.000Z"
      },
      {
        "title": "내게 맞는 실손보험, 어떻게 골라야 할까?",
        "link": "https://blog.toss.im/article/tossmoment-9",
        "pubDate": "Thu, 08 May 2025 07:55:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}갑작스럽게 병원에 갈 일이 생기면, 생각보다 큰 부담이 되는 게 병원비입니다. 진료비는 기본이고, 검사비나 약값까지 더해지면 지출은 꽤 커지죠. 이럴 때 든든한 역할을 해주는 게 바로 실손보험이에요.\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}실손보험의 정식 명칭은 ‘실손의료보험’으로, 병원에서 쓴 진료비 중 일부를 돌려받을 수 있는 보험이에요. 실제로 발생한 비용을 일부 보상받는다고 해서 실비보험이라고도 부르죠.\n실손보험은 가입자 수 4,000만 명을 넘기며, ‘제2의 국민건강보험'이라는 별명까지 얻었어요. 하지만 내가 어떤 상품에 가입했는지, 병원비는 얼마나 보장되는지 정확히 아는 사람은 드물죠. 매달 보험료를 내면서도 그동안 제대로 몰랐던 실손보험에 대해 알려드릴게요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}실손보험 이해를 위한\n필수 용어부터 차근차근\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n보험이 어렵고 복잡해 보이는 가장 큰 이유는 용어가 낯설기 때문입니다. 실손보험을 설명할 때 많이 쓰는 용어들을 하나씩 살펴볼까요? 실손보험의 벽이 조금은 낮아질 수 있을 거예요.\n급여: 국민건강보험 혜택이 적용되는 진료 항목이에요. 일반적인 감기 진료, 엑스레이, 혈액 검사, 처방약 등이 여기에 해당하죠. 진료비 일부를 국민건강보험공단에서 내주기 때문에 진료비 부담이 적은 편이에요. 월급의 급여(給與)와 같은 단어를 쓰지만, 보험의 맥락에서는 ‘국민건강보험공단이 진료비를 일부 대신 지급한다’는 의미로 쓰여요.\n비급여: 건강보험이 적용되지 않는 진료 항목입니다. 도수치료, MRI, 시력 교정술(라식·라섹) 같은 항목이 대표적이죠. 진료비 전액을 본인이 부담해야 해서 병원비가 많이 나올 수 있어요. 자세한 비급여 진료비 항목은 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}건강보험심사평가원에서 확인할 수 있어요.\n본인부담금(자기부담금): 전체 진료비 중 내가 직접 부담해야 하는 금액이에요. 급여 항목이라면 국민건강보험공단이 일부를 대신 내주고 남은 금액이 본인부담금이 됩니다. 비급여 항목은 공단 부담이 없기 때문에 전액이 본인부담금으로 계산돼요. 그리고 본인부담금 중 일부를 보장해 주는 게 실손보험이에요.\n단독형: 실손보험만 따로 가입하는 형태입니다. 과거에는 암보험이나 종신보험에 ‘실손 특약’으로 끼워서 가입하는 경우가 많았지만, 지금은 실손보험을 단독으로 가입할 수 있도록 제도화되어 있어요. 4세대 실손보험은 모두 단독형입니다.\n특약: 특별약관의 줄임말이에요. 4세대 실손보험에서는 비급여 항목을 보장받으려면 특약 형태로 선택 가입해야 해요. 도수치료, MRI 등은 특약을 넣지 않으면 보장받을 수 없습니다. 같은 실손보험이라도, 어떤 특약을 넣었느냐에 따라 보장 범위가 크게 달라질 수 있어요.\n갱신형 보험: 보험료가 일정 기간마다 바뀌는 구조를 말해요. 실손보험은 대부분 갱신형이고, 특히 4세대 실손보험은 병원 이용이 많을수록 보험료가 크게 오를 수 있어요. 반대로 병원에 거의 가지 않는다면 보험료가 줄어들 수도 있습니다.\n실손보험,\n세대별로 뭐가 달라졌나요?\n실손보험은 2003년 첫 등장 이후 총 네 차례에 걸쳐 개편됐어요. 의료 기술이 발전하고, 병원 진료 항목도 다양해지면서 자연스럽게 보험금 지급 구조와 기준도 바뀌게 된 거죠. 세대가 바뀔 때마다 보장 범위, 본인부담금, 비급여 항목 처리 방식, 보험료 갱신 구조 등이 크게 달라졌습니다.\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n1세대 (2009년 9월 이전 가입)\n\n지금까지 나온 실손보험 중 가장 조건이 좋다고 평가받아요. 입원, 통원, 검사비, 약제비 등 대부분의 의료비가 넓게 보장되고, 본인이 부담해야 하는 금액이 거의 없습니다. 보험료가 다소 높은 편이지만, 실질적으로 병원비 대부분을 돌려받을 수 있는 구조였어요.\n\n2세대 (2009년 10월~2017년 3월)\n\n일부 항목에 본인부담금이 생기면서, 과잉 진료를 줄이기 위한 구조로 바뀌었어요. 대신 보험사마다 보장 내용이 비슷한 표준화 구조로 설계되어 비교적 안정적인 운영이 가능해졌죠. 기본적인 보장은 유지하면서도, 과도한 청구를 줄이기 위한 조정이 이루어진 단계예요.\n\n3세대 (2017년 4월~2021년 6월)\n\n특히 비급여 항목 보장이 축소됐고, 본인이 부담해야 하는 금액도 더 커졌어요. 비급여 진료가 많은 경우 체감 혜택이 줄 수 있지만, 병원 이용이 적다면 부담이 크지는 않은 구조예요. 비급여 진료의 남용을 막기 위해 보장의 범위를 조정한 상품이에요.\n\n4세대 (2021년 7월 이후 가입)\n\n급여와 비급여 보장을 아예 분리한 구조예요. 비급여 진료는 특약으로 별도 가입해야 보장되며, 병원 이용이 많을수록 보험료가 오르는 방식이에요. 병원 이용이 적은 사람에게는 유리하지만, 자주 가는 사람은 보험료 부담이 커질 수도 있어요.\n\n나에게 맞는 실손보험\n어떻게 선택하면 좋을까요?\n지금 새로 가입할 수 있는 실손보험은 4세대 상품뿐이에요. 이미 실손보험을 갖고 있다면 유지할지, 전환할지를 건강 상태와 병원 이용 패턴에 따라 따져보는 게 좋아요.\n1세대 실손보험을 갖고 있다면: 되도록이면 유지하는 것이 좋아요. 보장 범위가 가장 넓고, 자기부담금이 거의 없어 조건이 매우 좋습니다. 보험사에서 전환을 권유하더라도 바꿀 필요 없습니다.\n2세대 실손보험을 갖고 있다면: 대부분의 경우 유지하는 게 더 나아요. 보장은 넓고 구조도 안정적이거든요. 다만 병원 이용이 많고 보험료 부담이 크다면, 4세대 전환을 고민해볼 수는 있어요.\n3세대 실손보험을 갖고 있다면: 병원 이용이 적다면 그대로 유지해도 괜찮아요. 하지만 비급여 진료가 많고 병원비 부담이 크다면, 4세대로 전환하고 특약을 조정하는 게 나을 수 있습니다.\n4세대 실손에 가입해야 한다면: 건강에 자신 있고 병원 이용이 적다면 잘 맞는 상품이에요. 다만 비급여 항목은 특약을 추가해야만 보장되고, 병원 이용이 많을수록 보험료가 크게 오를 수 있어요. 특약 구성은 병원 진료 패턴에 맞게 잘 추가하는 게 중요합니다.\n보험에 가입하는 방법은 내가 직접 선택해서 가입하거나, 설계사와의 상담을 통해 가입하는 방식이 있어요. 혼자서 이것저것 비교하며 가입할 수도 있지만, 수많은 선택지를 전부 파악하고 잘 고르는 건 쉬운 일이 아닙니다. 그래서 웬만하면 보험 설계사의 상담을 통해 도움을 받는 걸 추천해요.\n보험 설계사와 상담할 때\n꼼꼼하게 체크해보세요\n사람마다 건강 상태나 환경이 다르기 때문에 나에게 딱 맞는 보험을 선택하는 게 중요해요. 보험 설계사와 상담할 때 아래 질문만 잘 챙겨도, 내게 적합한 보험을 찾는 과정이 훨씬 수월해질 거예요.\nQ1. 제가 가입한 실손보험은 몇 세대인가요?\n실손보험은 세대마다 보장 구조와 자기부담금이 크게 다릅니다. 특히 현재 가입한 상품이 몇 세대인지에 따라 전환 여부를 결정할 수 있기 때문에, 이 질문은 보험 점검의 출발점이에요. 실손보험 상품마다 가입 시기를 확인할 수 있기 때문에, 보험 설계사가 금방 확인해줄 수 있어요.\nQ2. 도수치료나 MRI 같은 비급여 치료는 보장되나요?\n비급여 진료는 병원비가 크게 나올 수 있는 항목이에요. 세대에 따라 아예 보장이 안 될 수도 있고, 4세대 실손에서는 특약을 넣지 않으면 전혀 보장되지 않을 수 있어요. 자주 받는 치료가 비급여 항목이라면, 반드시 확인해야 해요.\nQ3. 보험료는 언제부터 얼마나 오를 수 있나요?\n현재 판매 되는 실손보험은 갱신형이에요. 특히, 4세대 실손은 비급여 치료가 잦을수록 보험료 인상 폭이 커질 수 있어서, 갱신 시점에 따라 보험료가 최대 4배까지 오를 수 있어요! 지금은 보험료가 저렴하더라도 나중에는 부담이 커질 수 있기 때문에 변동 조건은 미리 확인하는 게 중요합니다.\nQ4. 가입 후에도 특약이나 보장을 나중에 바꿀 수 있나요?\n건강 상태는 시간이 지나면 달라질 수 있어요. 하지만 일부 특약은 한 번 해지하면 다시 가입하기 어려운 경우도 있고, 보장 내용을 중간에 조정할 수 없는 상품도 있습니다. 가입 이후에도 보장을 유연하게 변경할 수 있는지 꼭 확인해보세요.\nQ5. 진료비 중에서 실제로 돌려받을 수 있는 금액은 얼마나 되나요?\n실손보험은 병원비 전액을 보장하지 않아요. 본인부담금 구조에 따라 일부만 돌려받는 구조이며, 세대, 특약 여부, 보장 항목에 따라 환급 비율이 달라질 수 있습니다.실제로 환급받을 수 있는 금액의 범위가 얼마나 되는지 미리 확인해두면, 나중에 병원비를 가늠할 때 도움이 될 거예요.\n내 실손보험,\n토스에서 점검 받아보세요\n\n실손보험은 이제 건강보험과 함께 꼭 가입해야 하는 보험 상품이 되었어요. 보험은 통신비처럼 매달 부담하는 고정비인 만큼, 내가 가입한 상품이 내게 잘 맞는지 한 번쯤 확인해보는 게 좋아요.\n토스에서는 내가 가입한 보험이 충분한지, 부족한 건 없는지 한눈에 확인할 수 있는 리포트를 제공해드려요. 더 자세한 설명이 필요하다면, 토스인슈어런스 소속 전문 컨설턴트와의 무료 상담도 가능하죠. \n토스인슈어런스는 고객 상황에 꼭 맞는 보험을 추천하는 것, 그리고 스스로 잘 이해하고 선택할 수 있도록 돕는 것을 가장 중요하게 생각하는 토스의 보험 컨설팅 서비스예요.\n내가 가입한 보험을 잘 알고 싶다면, 아래 버튼을 눌러 지금 바로 점검해보세요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 윤동해 Graphic 조수희 이제현 윤자영",
        "content": "세대별 차이부터 특약까지, 꼭 알아야 할 실손보험 상식",
        "contentSnippet": "세대별 차이부터 특약까지, 꼭 알아야 할 실손보험 상식",
        "guid": "https://blog.toss.im/article/tossmoment-9",
        "isoDate": "2025-05-08T07:55:00.000Z"
      },
      {
        "title": "가정의 달 콘텐츠➃ 스스로 서기 위한 연습, 10대를 위한 돈 이야기",
        "link": "https://blog.toss.im/article/2025may-curation4",
        "pubDate": "Thu, 08 May 2025 06:43:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}서퍼는 언젠가 마주할 ‘나의 파도’를 기다리며, 꾸준한 준비를 해 나갑니다. 모래 위에서 균형을 익히고, 얕은 물에서부터 차근차근 기술을 익힙니다. 좋은 파도가 언제 올지는 알 수 없지만, 준비된 사람만이 그 물살을 탈 수 있으니까요.\n10대의 금융생활도 이와 닮았습니다. .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}용돈을 계획하고, 돈을 모으고, 내가 진짜 원하는 것을 고민하며 써보는 일. 조금은 서툴 수 있어도, 이미 파도를 향해 나아가는 여정의 시작이고 일부일 거예요.\n가정의 달을 맞아, 스스로 서는 법을 연습 중인 청소년들을 위한 토스피드의 콘텐츠를 전합니다. 서핑보드 위, 온전히 홀로 서서 ‘나의 파도’를 타게 될 그날을 응원하면서요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n1. 요즘 10대는 어떻게 돈을 벌까?\n요즘은 재능을 살려 나만의 소득 파이프라인을 만드는 10대들이 많습니다. 이들은 같은 돈이라도 ‘받은 돈’과 ‘번 돈’은 완전히 다르다고 말해요. 일과 돈의 감각을 쌓아가는 10대 세 명의 이야기를 소개합니다. \n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}.css-1lvcgm8{padding:22px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;border-radius:20px;}\n.css-13ko30i{width:375px;}\"내가 돈을 쫓아야,  돈도 나를 쫓는다고 생각해요.\"\n2.청소년이 혼자 살 때, 얼마가 필요할까?\n10대가 끝나기 전에 자립해야 한다면, 무엇이 필요할까요? 양육시설을 나와 자립정착금 500만 원으로 첫 독립을 시작한 두 사람의 이야기. 집을 구하고, 생활을 꾸리고, 경제 감각을 익히는 과정에서 마주한 현실에 대해 살펴봅니다.\n\n 혼자 살게 됐을 때 마주하는 첫 번째 문제는?\n3.청소년이 첫 알바를 시작할 때 알아야 하는 것들\n‘청소년 용돈 버는 법’의 검색 순위가 높아질 정도로 10대부터 돈벌이를 시작하는 친구들이 많아졌습니다. 아르바이트를 하는 목적은 다양하겠지만, 첫 사회생활인 만큼 시작하기 전에 알아야 할 12가지 필수 체크리스트를 알려드릴게요.\n\n청소년이 알바할 때, 12가지 체크리스트\n4.내 아이의 경제교육, 이럴 땐 어떻게 할까요?\n돈에 눈 뜨는 속도가 빨라진 아이들, 그래서 돈에 대해 궁금한 것도 많죠. 토스 앱을 통해 받은 부모님들의 ‘아이 경제 교육’에 대한 10가지 질문에 전문가가 답합니다.\n\n돈 이야기, 아이에게 어디까지 어떻게 해야할까?\n5.토스가 생각하는 10대는 귀엽지 않다\n토스가 10대 사용자를 위해 만드는 틴즈 서비스 사용자 수는 현재 300만 명에 이릅니다. 국내 중고등학생 85%가 토스를 선택하고 있어요. 토스가 10대 사용자에게 선택받을 수 있었던 이유는 무엇일까요?\n\n토스 유스카드가 귀엽지 않은 이유",
        "content": "10대를 위한 콘텐츠 큐레이션",
        "contentSnippet": "10대를 위한 콘텐츠 큐레이션",
        "guid": "https://blog.toss.im/article/2025may-curation4",
        "isoDate": "2025-05-08T06:43:00.000Z"
      },
      {
        "title": "가정의 달 콘텐츠➂ 내일의 나와 가족을 위한 오늘의 선택들",
        "link": "https://blog.toss.im/article/2025may-curation3",
        "pubDate": "Wed, 07 May 2025 04:34:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1odxvuk{white-space:pre-wrap;font-style:italic;}“나무를 심기에 가장 좋은 시기는 20년 전이었다. 두 번째로 좋은 시기는 바로 지금이다.”\n.css-1kxrhf3{white-space:pre-wrap;}오래된 아프리카의 속담을 좋아합니다. 시간이 자산이라는 걸 이보다 더 잘 보여주는 표현이 있을까요? 나무가 땅에 뿌리를 깊게 내리고, 기둥을 단단히 키워 너른 그늘을 만들기까지는 오랜 시간이 필요합니다.\n노후 대비도 마찬가지입니다. 노후는 어느 날 갑자기 찾아오는 게 아니라  조금씩, 천천히, 오랜 시간을 거쳐 우리에게 다가오니까요.\n우리는 시간을 되돌릴 수도, 앞당길 수도 없습니다. 그래서 매일 조금씩 ‘좋은 선택’을 쌓는 것이 중요합니다. .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}10년 뒤, 20년 뒤, 50년 뒤, 편히 쉴 수 있는 그늘을 키워내기 위해 필요한 이야기를 준비했습니다. 토스피드의 콘텐츠가 노후 대비를 위한 ‘오늘의 좋은 선택’을 도와줄 거예요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}1.은퇴 준비, 미리 계산해 볼 수 있을까?\n구글 총괄 디렉터였던 미키김이 ‘20여 년의 회사 생활을 끝내도 되겠다는 판단’을 도왔던 엑셀 문서 3개를 공개합니다. 숫자와 현실 사이, 우리가 진짜 준비해야 할 일을 알려드립니다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}.css-1lvcgm8{padding:22px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;border-radius:20px;}\n.css-13ko30i{width:375px;}돈에 밝은 사람은 어디까지 준비해 두고 퇴사할까?\n2.행복한 노인에게는 매월 얼마가 필요할까?\n지금의 2030대가 할머니, 할아버지가 될 즈음엔 어떤 세상이 되어있지 상상해 본 적 있나요? 4가지 준비를 차근차근 한다면 노후에 대한 불안함을 잠재울 수 있을 거예요.\n\n행복한 노후를 위해 필요한 4가지 \n3.은퇴 계획의 큰 그림을 그려보는 법\n‘10억은 있어야 노후가 가능하다?’ 막연한 숫자 대신, 내 삶에 맞춘 계산이 필요해요. 안정적인 은퇴 설계를 돕는 투자·재무 전문가 영주닐슨 교수가 현실적인 노후 자금의 윤곽을 그리는 법을 알려드립니다.\n\n내 은퇴 자금, 진짜 10억이 필요할까?\n4. .css-wi4a2c{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;font-weight:bold;} 부모님 용돈과 노후 대비, 어떻게 지원 드려야 할까?\n가족끼리는 돈 얘기를 하지 않는 게 좋을까요? 어렵고 불편해서 미뤄둔 대화들이, 사실은 가장 중요한 일일지도 모릅니다. 부모님의 노후 대비를 현명하게 도울 수 있는 전문가의 팁을 전합니다.\n\n부모님 노후 대비 전략 4단계\n5. 다른 사람들의 은퇴 후 삶이 궁금할 때\n누군가는 은퇴 후 몽마르트로 날아가 그림을 그리며 오랜 꿈을 실현하고, 누군가는 N잡러로 다시 ‘현역’이 되었습니다. 각자의 방식으로 은퇴 후 두 번째 인생을 살아가는 사람들의 이야기를 소개합니다. 노후 생활을 먼저 경험하고 있는 이들의 삶에서, 나의 노후에 대한 힌트를 찾아보세요.\n\n몽마르트에 오기까지 30년이 걸렸습니다\n\n67세 N잡러가 전하는 일의 슬픔과 기쁨 \n\n은퇴 전, 세 가지를 준비해 두세요",
        "content": "노후대비를 위한 콘텐츠 큐레이션",
        "contentSnippet": "노후대비를 위한 콘텐츠 큐레이션",
        "guid": "https://blog.toss.im/article/2025may-curation3",
        "isoDate": "2025-05-07T04:34:00.000Z"
      },
      {
        "title": "토스, 틴즈 누적 가입자 300만 명 돌파",
        "link": "https://blog.toss.im/article/teens_",
        "pubDate": "Wed, 07 May 2025 02:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}출시 3년 9개월 만…”10대 청소년의 대표 금융 서비스” 입지 굳혀\n10대의 인생 첫 본인 명의 카드 '유스카드'도 누적 발급건수 320만 건 넘겨\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)는 어린이·청소년 금융서비스 '틴즈'의 누적 가입자가 300만 명을 돌파했다고 7일 밝혔다. 이는 2021년 7월 출시 후 약 3년 9개월 만에 달성한 성과로, \"국내 중·고등학생 85%가 선택한 대표 금융 서비스\"로서의 입지를 더욱 공고히 하게 됐다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n토스 틴즈는 만 7세부터 만 18세까지 이용할 수 있는 전용 서비스로, 송금·결제·교통·쇼핑 과정에서 10대만이 느낄 수 있는 금융의 불편함을 해소하는 데 취지가 있다. 자녀들이 틴즈의 여러 서비스를 통해 올바른 경제관념을 기를 수 있다는 점이 부각되면서 학부모들의 긍정적 평가도 이끌어 내고 있다.\n어린이·청소년 전용 선불식 충전 카드 '유스카드(USS Card)'는 주체적인 금융 습관을 길러주는 대표적인 틴즈 서비스다. 유스카드는 소위 '엄카'(엄마 카드)라 불리는 부모님 명의의 카드가 아닌 본인 이름으로 된 인생 첫 '내카'(내 카드)로 이름을 알리며, 2021년 12월 출시 이후 현재까지 누적 발급건수 320만 장을 돌파했다. 자녀가 본인 카드를 직접 사용, 관리하며 스스로 금융을 설계하는 힘을 기를 수 있어 조기 금융 교육에 관심이 많은 요즘 부모들도 자녀의 '내카' 사용을 적극 권하고 있다.\n틴즈의 ‘머니 스터디 카페’와 ‘모의 주식 투자’ 서비스도 학부모 사이에서 인지도가 높다. 청소년 전용 금융 교육 콘텐츠를 제공하는 머니 스터디 카페는 지난해 1월부터 금융감독원 'e-금융교육센터'와 협력함으로써 콘텐츠의 전문성과 신뢰성을 높였다. 모의 주식 투자는 청소년들이 실시간 시세를 확인하며 가상머니로 국내외 주식 투자를 체험해 볼 수 있는 서비스로, 지금까지 누적 이용자는 약 76만 명에 달한다.\n저금통·용돈기입장 등 자녀의 계획적인 소비습관을 길러주기 위해 오랫동안 활용된 방법도 틴즈에서 재탄생했다. 월 평균 63만 명이 사용하는 저금통은 아이들이 스스로 목표를 세워 저축할 수 있을 뿐 아니라, 부모와 함께 여행이나 선물 같은 목표를 정해 저축하며 새로운 공감대를 형성할 수도 있다. 급식표·시간표 등 교내 생활에 중요한 정보도 틴즈를 통해 확인할 수 있다.\n토스 틴즈는 10대들이 안전한 환경 속에서 금융 생활을 시작할 수 있도록 다양한 청소년 보호 시스템을 구축했다. 먼저 미성년자의 회원 가입 방식을 3단계까지 강화하고, FDS(Fraud Detection System, 이상금융거래탐지시스템)을 더해 이들의 정보를 금융 사기 피해로부터 지키고 있다. 유스카드는 청소년 제한업종과 해외 결제를 원천 차단하며, 송금하려는 계좌가 사기·신고 이력이 있다면 주의 알림을 송출한다.\n토스 관계자는 “국내 3백만 청소년들이 토스 틴즈를 통해 생애 첫 금융 생활을 시작한다는 사실에 큰 자부심과 책임감을 느낀다”면서 “성인이 된 후 더욱 복잡한 금융 환경에서도 주체적인 금융생활을 이어갈 수 있도록 양질의 콘텐츠를 제공하겠다”고 밝혔다.",
        "content": "10대 청소년의 대표 금융 서비스",
        "contentSnippet": "10대 청소년의 대표 금융 서비스",
        "guid": "https://blog.toss.im/article/teens_",
        "isoDate": "2025-05-07T02:00:00.000Z"
      },
      {
        "title": "Toss Surpasses 3 Million Teen Users",
        "link": "https://blog.toss.im/article/Teens3million",
        "pubDate": "Wed, 07 May 2025 01:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}Achieved in 3 years and 9 months since its launch, becoming a “staple financial service” for teens\nMore than 3.2 million USS Cards issued, becoming the first card teens get in their name\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\nViva Republica, the operator of the financial super app “Toss,” announced that the app has surpassed 3 million 'Teen' users. This milestone comes just 3 years and 9 months after the service launched in July 2021. With 85% of middle and high school students choosing Toss as their primary financial services app, the platform has firmly established its position in the sector.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\nToss Teens is a dedicated service available to users aged 7 to 18, designed to address financial inconveniences uniquely experienced by teenagers in areas such as money transfers, payments, transportation, and shopping. As the service highlights its potential to help children develop healthy financial habits, it has been receiving positive feedback from parents.\nThe USS Card is a prepaid top-up card exclusive for children and teens, and is one of the key Teens services that helps teens foster independent financial habits. The Youth Card has gained recognition as a teenager’s very first personal card—‘My Card’—in their own name, rather than a parent’s card often referred to as a ‘mom’s card.’ Over 3.2 million USS Cards have been issued since its launch in December of 2021. By using and managing their own card, children learn to manage their finances—prompting today’s parents, who are increasingly interested in early financial education, to actively encourage their children to use their own card.\nTeens services such as the ‘Money Study Café’ and ‘Mock Investment’ are also well recognized among parents. The Money Study Café, which provides financial education content specifically for teenagers, has enhanced the credibility and expertise of its content through a partnership with the Financial Supervisory Service’s ‘e-Finance Education Center’ since January of last year. The Mock Investment service allows teens to experience investing in domestic and international stocks using virtual money while tracking real-time prices. To date, the service has attracted approximately 760,000 cumulative users.\nTraditional tools long used to help children build smart spending habits—like piggy banks and allowance diary—have been reimagined in Toss Teens. The Piggy Bank service, used by an average of 630,000 users per month, allows kids to set their own savings goals and work toward them. They can also set shared goals with their parents, such as saving for a trip or a gift, creating new opportunities for connection. Toss Teens also offers access to important school-related information, such as lunch menus and class schedules.\nToss Teens has implemented a range of youth protection systems to ensure that teenagers can begin their financial journey in a safe environment. The sign-up process for minors has been reinforced with a three-step verification system, and a Fraud Detection System (FDS) is in place to safeguard their personal information from financial scams. The USS Card blocks transactions in restricted business categories for minors and disables overseas payments entirely. Additionally, if a user attempts to transfer money to an account with a history of fraud or reports, a warning alert is displayed.\n“We feel a deep sense of pride and responsibility knowing that 3 million Korean teenagers are beginning their financial journey through Toss Teens,” a Toss representative said. “We will continue to provide high-quality content to help them lead independent financial lives even in a more complex financial environment they will face as adults.”",
        "content": "Becoming a “staple financial service” for teens",
        "contentSnippet": "Becoming a “staple financial service” for teens",
        "guid": "https://blog.toss.im/article/Teens3million",
        "isoDate": "2025-05-07T01:00:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]