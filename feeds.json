[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Augustin Popa",
        "title": "Microsoft C++ Team at CppCon 2024: Trip Report",
        "link": "https://devblogs.microsoft.com/cppblog/microsoft-c-team-at-cppcon-2024-trip-report/",
        "pubDate": "Fri, 01 Nov 2024 18:06:47 +0000",
        "content:encodedSnippet": "The Microsoft C++ team attended CppCon, the largest C++ conference in the world. This year, the conference was held in Aurora, Colorado from September 16-20.\nMicrosoft Booth\nOur team managed a booth from Monday to Thursday of the week. This gave us an amazing opportunity to interact with the C++ community and discuss many topics of interest as well as hear feedback from our customers.\n\nThe following people worked at the booth (from left to right in the picture above):\nVictor Ciura, who works on Rust and C++ interop. He presented a talk called So You Think You Can Hash.\nMryam Girmay, who works on Visual Studio productivity features. She was one of the co-presenters of this year’s What’s New in Visual Studio for C++ Developers talk.\nSinem Akinci, who works on CMake tooling in the Visual Studio IDE and Visual Studio Code. Sinem also works on GitHub Copilot. She was one of the co-presenters of this year’s What’s New in Visual Studio Code talk.\nAugustin Popa (me), and I work on the vcpkg package manager. My talk was called 10 Problems Large Companies Have with Managing C++ Dependencies and How to Solve Them.\nAlexandra Kemper, who works on the C++ experience in Visual Studio Code. She was one of the co-presenters of this year’s What’s New in Visual Studio Code talk.\nMichael Price, who works on C++ integration with developer services like GitHub and Microsoft Dev Box. He was one of the co-presenters of this year’s What’s New in Visual Studio for C++ Developers talk.\nMicrosoft works on several developer tools for C++, including the Visual Studio IDE, Visual Studio Code, the MSVC compiler toolset, GitHub Copilot for C++, and the vcpkg package manager. We interacted with hundreds of C++ developers across a variety of different industries, experience levels, and familiarity with our product offerings. There were folks who had been using our products before their names started with “Visual”, and some that had never used our tools at all.\nWe were excited to see so much interest from developers for C++ best practices and how to become more productive. We received some great feedback about how we could improve our tools, in terms of bug reports, user experience improvements, and feature requests. We were also able to have several 1 on 1 longer discussions away from the booth to help people solve more specific challenges using Microsoft C++ developer tools.\n\nAt the booth we also gave out some cool swag, including USB adapters, vcpkg bags, stickers, and the ever-popular Visual Studio socks.\nWe also held a raffle at the end of each day at our booth, for some Visual Studio backpacks and tote bags.\n\n\n\nKeynote Talk: Peering forward – C++’s next decade\nAs usual, Herb Sutter delivered an excellent talk at CppCon. This year it was a keynote that looks forward in time, describing the planned evolution of the C++ language. The main topics were reflection, safety, and simplicity. These topics were effectively previews for a number of other C++ talks that elaborated on these topics in great detail.\n\n\nMicrosoft Talks at CppCon 2024\nAside from Herb’s keynote, there were several other talks delivered by folks from Microsoft at CppCon this year.\nSo You Think You Can Hash\nVictor delivered a talk on fundamentals of data structure design, focusing on computing hashes for aggregated user-defined types and experimenting with various hash algorithms. He introduced a method for experimenting with and benchmarking different hash algorithms. This allows easy switching of hashing algorithms used by complex data structures, enabling easy comparisons. This way, hash algorithm designers can concentrate on designing better hash algorithms, with little worry about how these new algorithms can be incorporated into existing code. Type designers can create their hash support just once, without worrying about what hashing algorithm should be used.\n\nThe talk spurred a bunch of hallway conversations on tradeoffs between performance and flexibility of type design, with attendees sharing their project pains and workarounds in this space.\n10 Problems Large Companies Have with Managing C++ Dependencies and How to Solve Them\nI presented a talk on 10 problems that large companies have with C++ dependency management, based on many conversations I had this year with enterprise teams. I also went over how these companies are solving these problems. About half of the problems are solvable with a modern package manager, but the rest require additional investments in development workflows. The talk was well attended and there were some good conversations afterward about the problems.\n\nToday, developers are still more likely to manually manage their dependencies than to use a package manager and consider managing libraries a top pain point for C++, according to ISO C++ surveys. I pointed out some ways that a package manager like vcpkg can mitigate the pain. Here are a few examples:\nSupporting build from source as a fallback without sacrificing the build-time savings of binary dependency acquisition.\nUpgrading dependencies as a set using baselines, rather than managing them individually, to avoid version conflicts / diamond problems.\nHow to continue working in an offline build environment using asset caching.\nGetting any open-source libraries installed and working with your project with minimal effort, while also automatically resolving transitive dependencies.\nIn the second half of the talk, I noted that security is top of mind for enterprises, so vulnerability monitoring, detection, and response is critical. Some enterprises have also started using Software Bill of Materials (SBOMs) to track their dependencies and manage risk. I also pointed out that vcpkg generates SPDX SBOM files for dependencies.\nLastly, I spoke about some workflow changes that make it more manageable to do C++ development at scale, at a large company with many distributed teams. This includes centralizing common development tasks with dedicated core teams, moving to container-based builds and a standardized global build toolchain, and how to handle a large migration to a new software system by breaking it down into smaller, manageable milestones where you get a win at each step.\n\nAfter my talk, I talked with several folks about the problems they were dealing with at their work and what they had in common with the themes of the talk. In my opinion, one of the best things about delivering a talk is the conversations that happen afterward, which lead to new ideas and approaches to improve our software.\nEmbracing an Adversarial Mindset for C++ Security\nAmanda Rousseau delivered a compelling talk on thinking like an adversary with respect to C++ security. She walked through some attack scenarios, vulnerability trends, exploits that actually exist out in the wild, and general strategies for C++ development. For Microsoft, security is always top of mind, and it was interesting hearing from her experiences about how to address these growing concerns.\n\nWhat’s new for Visual Studio Code: Performance, GitHub Copilot, and CMake Enhancements\nThe annual Visual Studio Code talk, delivered this year by Alexandra Kemper and Sinem Akinci, was packed full of updates for C++ developers. Enhancing performance for C++ developers was a top priority for our team, and the talk announced several updates to make the C++ development process faster, including updates to project start-up time and time to colorization. The talk featured enhancements to C++ Copilot completions, sample AI-assisted workflows in C++ code, and new Copilot extensibility points available for developers to tailor the AI tool to their workflow. Demonstrating the chat extension API extensibility points to CppCon via a @CppCon chat participant piqued interest in the crowd. The docs to learn more about these APIs available can be found here: https://code.visualstudio.com/api/extension-guides/chat.\n\n\nThe demo code that was used can be found below. The first demo focused on C++, CMake, and Copilot functionality whereas the second demo focused on a CppCon chat participant for Copilot.\nsinemakinci1/Cpp-Copilot-VSC-Demo at alex-gui-2\nsinemakinci1/cppcon-chat-participant: Chat participant for CppCon\n\nWhat’s New in Visual Studio for C++ Developers\nMryam Girmay and Michael Price presented the 10th annual session demonstrating new features for C++ developers in Visual Studio. Highlighted this year were features to make you a more productive C++ developer, from shrinking your build times with Build Insights and Include Diagnostics, to reducing the amount of time you spend crafting the perfect commit message for those changes you’ve accumulated throughout the day, by letting GitHub Copilot write a first draft for you.\n\nVisual Studio leverages the power of GitHub Copilot to reduce the burden of routine tasks like sketching out unit tests for a function you just wrote or wading through pages of template error messages to understand what you’ve done wrong. And in the talk, Michael and Mryam demonstrated the soon-to-be-generally available content exclusion feature that you can configure to prevent contents from specified files never get sent in a prompt to GitHub Copilot. They also showcased interactive demos, allowing developers to see firsthand how these new features can be leveraged in real-world scenarios.\n\n\nAfter the talk, developers shared valuable feedback on Visual Studio, the Microsoft C++ compiler, and GitHub Copilot. Attendees came with questions and offered several suggestions on how we can further improve our products for them. This input is crucial as the team continues to refine and enhance the tool to better meet the needs of C++ developers.\n\nSome Other Interesting Talks\nThere were many great talks this year. Below are a few that we enjoyed.\nCommon Package Specification (CPS) in practice: A full round trip implementation in Conan C++ package manager\nDiego Rodriguez-Losada Gonzalez of JFrog delivered a very interesting talk where he demoed integrated Common Package Specification (CPS) files with various build systems, including CMake, MSBuild, Autotools, and Meson. The Common Package Specification is a mechanism for describing the useful artifacts of a software package and is a collaborative effort between several software vendors, build system maintainers, library authors, and large companies to eventually standardize such a system across the industry.\nCreating a Sender/Receiver HTTP Server\nThis session was a live-coding demo with building an HTTP server from scratch and debugging problems using C++26 sender/receivers.\nPerformance engineering – Being friendly to your hardware\nExcellent crash course on hardware details, from DRAM inner-workings to CPUs and how to write software to avoid angering the machine.\nSender Patterns to Wrangle Concurrency in Embedded Devices\nSuperb introduction to bare-metal senders and receivers and very crisp explanations of the async examples.\nC++/Rust Interop: Using Bridges in Practice\nQuick tour of the Rust/C++ interop essentials and some of the friction points in hybrid-code projects.\nTheme: Reflection\nEvery CppCon, there tends to be a big focus on some major feature that is coming up in the language. For a long time, that used to be modules. Now that modules are successfully baked into many of our developer tools and are seeing some adoption, the biggest discussion topic has moved to reflection. Reflection is a significant feature improvement that many of us have looked forward to for years, and our patience is getting rewarded. Aside from Herb’s keynote, there were several talks, including Reflection based libraries to look forward to (by Saksham Sharma), Reflection is Not Contemplation (by Andrei Alexandrescu), and Implementing Reflection using the new C++20 Tooling Opportunity: Modules (by Maiko Steeman). Lastly, Daveed Vandevoorde’s Gazing Beyond Reflection for C++26 went into some excellent technical detail while giving a preview of what’s to come and is worth checking out.\nTheme: C++ Security\nWe have all seen the headlines from industry analysts and governments over the past few years citing concerns with code safety or security in C++. This is a big focus area for the C++ Committee as well as large companies that must worry about rising threats to their business. Some specialized talks included: Security Beyond Memory Safety – Using Modern C++ to Avoid Vulnerabilities by Design (by Max Hoffmann), Embracing an Adversarial Mindset for C++ Security (by Amanda Rousseau), Building Safe and Reliable Surgical Robotics (by Milad Khaledyan), Modern C++ Error Handling (by Phil Nash), Mix Assertion, Logging, Unit Testing and Fuzzing: Build Safer Modern C++ Applications (by Xiaofan Sun), “Pick a random number… no, not that one!” – Tales of Real-World Exploits Based on Bad Randomness (by Max Hoffmann), and Compile-time Validation (by Alon Wolf).\nIn addition, LLVM’s Realtime Safety Revolution: Tools for Modern Mission Critical Systems (by Christopher Apple and David Trevelyan) introduced the new Realtime Sanitizer, which detects calls to malloc, pthread_mutex_lock, and other problematic functions in your realtime code at runtime!\nLastly, there was also an expert-led Safety and Security Panel to check out too.\nWomen’s Luncheon\nThe Women’s Networking Luncheon was a fun and resourceful event. Alexandra, Mryam, and Sinem from Microsoft’s team attended. Each table buzzed with interesting discussions: women in tech, inspirations to join the programming world, various work experiences, and ideas to inspire the next generation of women. With table rotations, attendees had the chance to talk to different people in the room. The relaxed atmosphere fostered connections among women from diverse companies and places who share an interest in C++ and programming.\nConclusion\nIt was great to meet many of you in person this year at CppCon. We enjoyed our time there and learned a lot from the C++ community and have taken back our learnings to our day-to-day work. If you didn’t get a chance to attend or missed out on some of the sessions, remember to check out all the CppCon talk on the conference’s YouTube channel as they get rolled out! We also made a playlist of past Microsoft CppCon sessions. We look forward to seeing you again next year.\nThe post Microsoft C++ Team at CppCon 2024: Trip Report appeared first on C++ Team Blog.",
        "dc:creator": "Augustin Popa",
        "comments": "https://devblogs.microsoft.com/cppblog/microsoft-c-team-at-cppcon-2024-trip-report/#respond",
        "content": "<p>The Microsoft C++ team attended CppCon, the largest C++ conference in the world. This year, the conference was held in Aurora, Colorado from September 16-20. Microsoft Booth Our team managed a booth from Monday to Thursday of the week. This gave us an amazing opportunity to interact with the C++ community and discuss many topics [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/microsoft-c-team-at-cppcon-2024-trip-report/\">Microsoft C++ Team at CppCon 2024: Trip Report</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "The Microsoft C++ team attended CppCon, the largest C++ conference in the world. This year, the conference was held in Aurora, Colorado from September 16-20. Microsoft Booth Our team managed a booth from Monday to Thursday of the week. This gave us an amazing opportunity to interact with the C++ community and discuss many topics […]\nThe post Microsoft C++ Team at CppCon 2024: Trip Report appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=34827",
        "categories": [
          "C++",
          "Copilot",
          "Trip Report",
          "Vcpkg",
          "Visual Studio Code",
          "CppCon",
          "MSVC",
          "vcpkg",
          "visual studio"
        ],
        "isoDate": "2024-11-01T18:06:47.000Z"
      },
      {
        "creator": "Mingxin Wang",
        "title": "Analyzing the Performance of the “Proxy” Library",
        "link": "https://devblogs.microsoft.com/cppblog/analyzing-the-performance-of-the-proxy-library/",
        "pubDate": "Fri, 01 Nov 2024 16:06:51 +0000",
        "content:encodedSnippet": "Since the recent announcement of the Proxy 3 library, we have received much positive feedback, and there have been numerous inquiries regarding the library’s actual performance. Although the “Proxy” library is designed to be fast, fulfilling one of our six core missions, it is not immediately clear how fast “Proxy” can be across different platforms and scenarios.\nTo better understand the performance of the “Proxy” library, we designed 15 benchmarks, tested in four different environments, and automated them in our GitHub pipeline to generate benchmarking reports for every code change in the future. Everyone can download the reports and raw benchmarking data attached to each build. The rest of this article delves into the benchmarking details. The numbers shown below were generated from a recent CI build.\nIndirect Invocation\nBoth proxy objects and virtual functions can perform indirect invocations. However, since they have different semantics and memory layout, it should be interesting to see how they compare to each other.\nBecause make_proxy can effectively place a small object alongside metadata (similar to “small buffer optimization” in some other C++ libraries), the benchmarks are divided into two categories: invocation on small objects (4 bytes) and on large objects (48 bytes). By invoking 1,000,000 object of 100 different types, we got the first two rows of the report:\n\nMSVC on Windows Server 2022 (x64)\nGCC on Ubuntu 24.04 (x64)\nClang on Ubuntu 24.04 (x64)\nApple Clang on macOS 15 (ARM64)\n\n\n\n\nIndirect invocation on small objects via proxy vs. virtual functions\nproxy is about 261.7% faster\nproxy is about 44.6% faster\nproxy is about 71.6% faster\nproxy is about 4.0% faster\n\n\nIndirect invocation on large objects via proxy vs. virtual functions\nproxy is about 186.1% faster\nproxy is about 15.5% faster\nproxy is about 17.0% faster\nproxy is about 10.5% faster\n\n\n\nFrom the report, proxy is faster in all four environments, especially on Windows Server. This result is expected because the implementation of proxy directly stores the metadata of the underlying object, making it more cache-friendly.\nLifetime Management\nIn many applications, lifetime management of various objects can become a performance hotspot compared to indirect invocations. We benchmarked this scenario by creating 600,000 small or large objects within a single std::vector (with reserved space).\nBesides proxy, there are three typical standard options for storing arbitrary types: std::unique_ptr, std::shared_ptr, and std::any. std::variant is not included because it is essentially a tagged union and can only provide storage for a known set of types (though useful in data context management).\nFor small objects, proxy and std::any usually won’t allocate additional storage. For large objects, proxy and std::shared_ptr offer allocator support (via pro::allocate_proxy and std::allocate_shared) to improve performance, while there is no direct API to customize std::unique_ptr or std::any.\nHere are the types we used in the benchmarks:\nSmall types\nLarge types\n\n\n\n\nint\nstd::array<char, 100>\n\n\nstd::shared_ptr<int>\nstd::array<std::string, 3>\n\n\nstd::unique_lock<std::mutex>\nstd::unique_lock<std::mutex> + void*[15]\n\n\n\nBy comparing proxy with other solutions, we got the following numbers:\n\nMSVC on Windows Server 2022 (x64)\nGCC on Ubuntu 24.04 (x64)\nClang on Ubuntu 24.04 (x64)\nApple Clang on macOS 15 (ARM64)\n\n\n\n\nBasic lifetime management for small objects with proxy vs. std::unique_ptr\nproxy is about 467.0% faster\nproxy is about 413.0% faster\nproxy is about 430.1% faster\nproxy is about 341.1% faster\n\n\nBasic lifetime management for small objects with proxy vs. std::shared_ptr (without memory pool)\nproxy is about 639.2% faster\nproxy is about 509.3% faster\nproxy is about 492.5% faster\nproxy is about 484.2% faster\n\n\nBasic lifetime management for small objects with proxy vs. std::shared_ptr (with memory pool)\nproxy is about 198.4% faster\nproxy is about 696.1% faster\nproxy is about 660.0% faster\nproxy is about 188.5% faster\n\n\nBasic lifetime management for small objects with proxy vs. std::any\nproxy is about 55.3% faster\nproxy is about 311.0% faster\nproxy is about 323.0% faster\nproxy is about 18.3% faster\n\n\nBasic lifetime management for large objects with proxy (without memory pool) vs. std::unique_ptr\nproxy is about 17.4% faster\nproxy is about 14.8% faster\nproxy is about 29.7% faster\nproxy is about 6.3% slower\n\n\nBasic lifetime management for large objects with proxy (with memory pool) vs. std::unique_ptr\nproxy is about 283.6% faster\nproxy is about 109.6% faster\nproxy is about 204.6% faster\nproxy is about 88.6% faster\n\n\nBasic lifetime management for large objects with proxy vs. std::shared_ptr (both without memory pool)\nproxy is about 29.2% faster\nproxy is about 6.4% faster\nproxy is about 6.5% faster\nproxy is about 4.8% faster\n\n\nBasic lifetime management for large objects with proxy vs. std::shared_ptr (both with memory pool)\nproxy is about 10.8% faster\nproxy is about 9.9% faster\nproxy is about 8.3% faster\nproxy is about 53.2% faster\n\n\nBasic lifetime management for large objects with proxy (without memory pool) vs. std::any\nproxy is about 13.4% faster\nproxy is about 1.3% slower\nproxy is about 0.9% faster\nproxy is about 9.5% faster\n\n\nBasic lifetime management for large objects with proxy (with memory pool) vs. std::any\nproxy is about 270.7% faster\nproxy is about 80.1% faster\nproxy is about 136.9% faster\nproxy is about 120.4% faster\n\n\n\nFrom the benchmarking results:\nproxy is much faster than any other 3 when the underlying object is small, or managed with memory pools.\nproxy is slightly slower than std::unique_ptr when the underlying object is large and not managed with a memory pool.\nThe performance of std::any varies in different environments, but is generally slower than proxy.\nSummary\nAlthough the test environments (GitHub-hosted runners) may differ from actual production environments, the test results show significant performance advantages of proxy in both indirect invocations and lifetime management. If you have more ideas for benchmarking the “Proxy” library, we welcome contributions to our GitHub repository.\nThe post Analyzing the Performance of the “Proxy” Library appeared first on C++ Team Blog.",
        "dc:creator": "Mingxin Wang",
        "comments": "https://devblogs.microsoft.com/cppblog/analyzing-the-performance-of-the-proxy-library/#respond",
        "content": "<p>This article analyzes the performance of the \"Proxy\" library in various scenarios, demonstrating its significant advantages in indirect invocations and lifetime management across different platforms.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/analyzing-the-performance-of-the-proxy-library/\">Analyzing the Performance of the &#8220;Proxy&#8221; Library</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "This article analyzes the performance of the \"Proxy\" library in various scenarios, demonstrating its significant advantages in indirect invocations and lifetime management across different platforms.\nThe post Analyzing the Performance of the “Proxy” Library appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=34833",
        "categories": [
          "C++",
          "Experimental"
        ],
        "isoDate": "2024-11-01T16:06:51.000Z"
      }
    ]
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Netflix TechBlog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Oleg Zinovyev",
        "title": "CLion 2024.3 Goes Beta With Enhanced CLion Nova, Debug Servers, and OpenCV Image Viewer",
        "link": "https://blog.jetbrains.com/clion/2024/11/clion-2024-3-beta/",
        "pubDate": "Wed, 06 Nov 2024 19:32:04 +0000",
        "content:encodedSnippet": "The Beta version of CLion 2024.3 is now available with key improvements and changes announced for the upcoming release. \n\n\n\n\nYou can download build 243.21565.87 from the link below, via the Toolbox App, or as a snap package if you’re using Ubuntu.\nDOWNLOAD CLION 2024.3 BETA\nRead the full release notes on YouTrack. Below is a brief overview of the major features and bug fixes that will be included in CLion 2024.3 and are already available in Beta.\nThe key features\nThroughout the 2024.3 EAP, we’ve added a variety of features for CLion Nova, embedded\ndevelopment, debugging, and more. Here are the most important ones.\nCLion Nova\nSome editor-related features, such as the call hierarchy, the gutter icon for recursive calls, and the Quick Definition popup have improved the user experience when working with CLion Nova.\nThe IDE frontend and backend improvements have significantly reduced CLion Nova’s memory footprint. This is particularly evident when handling large projects like Chromium.\nPredefined code styles from other projects allow you to choose from LLVM, Google, Qt, GNU, and more.\nEmbedded development\nThe Debug Servers configuration option helps you streamline the process of configuring debugging for embedded and remote development.\nSupport for debugging Zephyr West applications makes it easy to configure and run West debugging sessions directly in the IDE.\nEditable peripheral register values allow you to test different configurations and device states during debugging sessions without recompiling your source code or reloading your application or board.\nCLion’s static analysis toolset now includes a significant number of MISRA C++: 2023 checks, offering recommendations for using C++17 in safety-critical systems.\nDebugger\nWith the OpenCV image viewer, you can now view a two-dimensional OpenCV array as an image while debugging. Such an image is displayed in a separate dialog with various editing options.\nThe ability to attach the debugger to an unstarted process is helpful when you need to debug an executable launched by a third-party program or a script.\nYou can now view strings with JSON, XML, or HTML data formatted according to their code style directly in the debugger.\nOther features\nUpdated cloud completion powered by JetBrains AI Assistant now offers a wider range of usage scenarios and improved multiline code suggestions.\nProject status notifications have been moved from the top of the editor to a new widget in the status bar, making them less distracting.\nIf you’re just starting with CLion, you’ll notice the improved onboarding tips, which give you a clearer picture of the IDE’s capabilities right from the start.\nThe key bug fixes\nHere are the major bug fixes that we’ve included in CLion 2024.3 Beta:\nWhen a board is not defined for a new Zephyr West project or a West executable path is incorrect, CLion now warns you of the problem and offers to fix it. You’ll get a link that will take you to the corresponding section of your project settings, where you can define the board or path.\nThe Refresh button in the Call Hierarchy tool window now works as intended when the actual call hierarchy in the source code has been changed.\nAI Assistant again highlights C/C++ code in the chat when you ask it to explain code or suggest a refactoring, for example.\n\n\n\n\nDOWNLOAD CLION 2024.3 BETA\nYour CLion team\nJetBrains\nThe Drive to Develop",
        "dc:creator": "Oleg Zinovyev",
        "content": "The Beta version of CLion 2024.3 is now available with key improvements and changes announced for the upcoming release. You can download build 243.21565.87 from the link below, via the Toolbox App, or as a snap package if you’re using Ubuntu. DOWNLOAD CLION 2024.3 BETA Read the full release notes on YouTrack. Below is a [&#8230;]",
        "contentSnippet": "The Beta version of CLion 2024.3 is now available with key improvements and changes announced for the upcoming release. You can download build 243.21565.87 from the link below, via the Toolbox App, or as a snap package if you’re using Ubuntu. DOWNLOAD CLION 2024.3 BETA Read the full release notes on YouTrack. Below is a […]",
        "guid": "https://blog.jetbrains.com/?post_type=clion&p=522337",
        "categories": [
          "eap",
          "news",
          "ai-assistant",
          "clionnova",
          "debugger",
          "embedded",
          "zephyr-west"
        ],
        "isoDate": "2024-11-06T19:32:04.000Z"
      },
      {
        "creator": "Vladislav Grinin",
        "title": "Updates on Unreal Engine Support in TeamCity: UGS Integration and Open-Sourcing the Plugin",
        "link": "https://blog.jetbrains.com/teamcity/2024/11/unreal-engine-plugin-ugs-integration-and-open-sourcing/",
        "pubDate": "Wed, 06 Nov 2024 14:44:18 +0000",
        "content:encodedSnippet": "We’ve got a few exciting updates about the Unreal Engine plugin announced in the previous blog post. \nTL;DR – we’re adding Unreal Game Sync (UGS) integration and open-sourcing the plugin. These updates are all about making the CI/CD experience smoother for Unreal Engine devs and getting the community more involved.\nUGS\nBefore diving in, let’s quickly go over what Unreal Game Sync (UGS) is for anyone who might not be familiar with it or could use a refresher. In essence, UGS is a lightweight UI for Perforce. Typically, you need to build it from source to get started, and while its graphical client is a WinForms application available only on Windows, there is a command-line interface (CLI) version for other platforms. UGS has been around for a while and is widely used by game studios working with Unreal Engine as a collaboration tool.\nFrom a CI/CD perspective, UGS provides valuable insights into a project’s status (if properly set up), such as build statuses, the ability to flag specific changelists as problematic, and more. To give a better overview, here’s a rough diagram of the components involved:\n\n\n\n\nThere are quite a few components here, with the central one being the Metadata Server. While deploying it isn’t strictly necessary, it does enable the full feature set of UGS. This is also where CI/CD systems post build information. As shown, there are different possible implementations of the Metadata Server, and it’s worth briefly discussing each:\nEpic Metadata Service. This is the original and longest-standing version of the Metadata Server. It requires Windows, IIS, and the older .NET Framework 4.6.2.\nThird-party implementation. Thanks to the open-source nature of the server, it’s possible to create your own implementation. One example is RUGS, which is much easier to set up since it supports Docker.\nHorde. Technically, this is a full-fledged automation platform recently introduced by Epic. It includes a built-in UGS Metadata Server as well as its own build system. Although it has a built-in metadata server, it doesn’t allow publishing from external sources – the transition to Horde assumes that all metadata is generated internally. Horde is a bit outside the scope of this blog post, so we’re only mentioning it for the sake of completeness.\nEntities that the build system is supposed to post to the metadata server are called “badges” in UGS terms. These badges will then show up in the CIS (continuous integration status) column in UGS. It usually looks like this:\n\n\n\n\nAs far as we know, the metadata server endpoints don’t currently have authentication. It appears that the server is intended to be used within a secure, closed network, but this is just our understanding and not an official statement.\nFor a more complete definition of UGS please refer to the official documentation.\nUGS Integration in TeamCity\nLet’s take a look at UGS integration in TeamCity. As of the most recent plugin update, we support these two scenarios:\nPublishing a badge as a build status via the Commit Status Publisher.\nPublishing an arbitrary set of badges defined in your BuildGraph script.\nThis applies to the “distributed” execution mode – a special runner mode in which the BuildGraph definition of the build is converted into a set of builds in TeamCity (build chain). For more details, please refer to our previous blog post or the plugin documentation.\nThe first scenario is pretty straightforward. You only need to configure the Commit Status Publisher build feature and set up a few required parameters.\n\n\n\n\nThe second scenario is more complex. In your script, you can define a set of badges and link them to specific nodes to be tracked. Before diving into the scripts, here’s a quick reminder of how the plugin maps BuildGraph entities to TeamCity entities:\n\nBuildGraphTeamCity\nNodeBuild step\nAgentBuild\n\n\n\n\n\nFor example, if your build process includes compiling an editor, the script might look like this (with unimportant details omitted):\n<Agent Name=\"Build Editor and tools\" Type=\"...\">\n    <Node Name=\"Set binary version\">\n        ...\n    </Node>\n\n    <Node Name=\"Compile Tools\" Requires=\"Set binary version\">\n        ...\n    </Node>\n\n    <Node Name=\"Compile Editor\" Requires=\"Compile Tools\">\n        ...\n    </Node>\n</Agent>\n\n<Badge Name=\"Compile Editor\" Project=\"//UE5/Main/Samples/Games/Lyra\" Requires=\"Compile Editor\"/>\nHere, we define a badge named “Compile Editor” to track the execution of a node with the same name. In distributed BuildGraph mode, TeamCity will recognize this badge and update the build status as the process progresses.\nYou can define multiple badges to track different sets of nodes, and TeamCity will monitor all of them based on the specified dependencies:\n<Agent Name=\"Build A\" Type=\"A\">\n    <Node Name=\"Node 1\">\n        ...\n    </Node>\n</Agent>\n\n<Agent Name=\"Build B\" Type=\"B\">\n    <Node Name=\"Node 2\">\n        ...\n    </Node>\n</Agent>\n\n<Agent Name=\"Build C\" Type=\"C\">\n    <Node Name=\"Node 3\">\n        ...\n    </Node>\n</Agent>\n\n<Badge Name=\"BuildProject\" Project=\"//foo/bar/project\" Requires=\"Node A;Node B;Node C\"/>\nIn this example, there are three agents (each with a single node) that can potentially run concurrently, as they are assigned to different agents and have no dependencies on each other. Each build is tracked by a corresponding badge.\nThe badge will behave as follows:\n“Starting” – displayed as soon as any tracked dependency begins execution.\n“Success” – shown when all dependencies complete successfully.\n“Failure” – Indicated if any dependency encounters an error.\nFor complete examples, please refer to the plugin’s user guide on GitHub.\nOpen-sourcing the Plugin\nWe have received a lot of feedback since the plugin was introduced in May this year. Thank you to everyone who shared ideas for further development, submitted feature requests, or reported bugs! We’ve also been asked several times whether we’re going to open-source the plugin and, if so, when. That time is now!\nWith this step, we hope to:\nIncrease transparency and trust in the plugin’s codebase.\nEngage the community for contributions and improvements.\nSpeed up bug fixes and feature implementations.\nThe source code is now available on GitHub and the latest release is ready for download on the marketplace. We encourage you to submit feature requests, report any bugs you encounter, suggest enhancements, or fork the plugin and customize it to fit your needs.\nCheers!",
        "dc:creator": "Vladislav Grinin",
        "content": "We’ve got a few exciting updates about the Unreal Engine plugin announced in the previous blog post. TL;DR – we’re adding Unreal Game Sync (UGS) integration and open-sourcing the plugin. These updates are all about making the CI/CD experience smoother for Unreal Engine devs and getting the community more involved. UGS Before diving in, let’s [&#8230;]",
        "contentSnippet": "We’ve got a few exciting updates about the Unreal Engine plugin announced in the previous blog post. TL;DR – we’re adding Unreal Game Sync (UGS) integration and open-sourcing the plugin. These updates are all about making the CI/CD experience smoother for Unreal Engine devs and getting the community more involved. UGS Before diving in, let’s […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=523510",
        "categories": [
          "game-developement",
          "news",
          "unreal-engine"
        ],
        "isoDate": "2024-11-06T14:44:18.000Z"
      },
      {
        "creator": "Regina Muradova",
        "title": "JetBrains Academy: New in November",
        "link": "https://blog.jetbrains.com/education/2024/11/05/jetbrains-academy-new-in-november/",
        "pubDate": "Tue, 05 Nov 2024 18:59:45 +0000",
        "content:encodedSnippet": "This month, we’ve introduced new projects and topics to help you reach your coding goals in Kotlin, backend development, Git, or AI.\nKotlin\n🆕 Project: My first project with Kotlin. Easy\nImagine that you’re the owner of a new small corner shop. You are doing well and want to determine how much you earned in the first month. Create a simple tool that will calculate your net income. Upon completing this project, you can use this tool for your own accounting needs.\nGit\n🆕 Project: Safety Net (Beta). Challenging\nThis project will teach you how to use branches to work on different tasks separately, how to cherry-pick, undo, or revert changes if needed, and how to create new features and release them.\nBackend development\n🆕 Topics: Serializers in DRF, Built-in mixins for Class Based Views, Django ORM, Custom management commands, Custom mixins for Class Based Views\nAI tools for developers\n🆕 Topic: Debugging code with AI prompts\nProjects marked as Beta are still in testing. If you’re interested in checking out Beta projects on the platform, make sure the Beta-tester feature is enabled in your profile settings.\nWant to explore more? Check out our full course catalog on JetBrains Academy to discover a wide range of courses and projects to suit your learning goals.\nHappy learning!\nYour JetBrains Academy team",
        "dc:creator": "Regina Muradova",
        "content": "This month, we’ve introduced new projects and topics to help you reach your coding goals in Kotlin, backend development, Git, or AI. Kotlin 🆕 Project: My first project with Kotlin. Easy Imagine that you’re the owner of a new small corner shop. You are doing well and want to determine how much you earned in [&#8230;]",
        "contentSnippet": "This month, we’ve introduced new projects and topics to help you reach your coding goals in Kotlin, backend development, Git, or AI. Kotlin 🆕 Project: My first project with Kotlin. Easy Imagine that you’re the owner of a new small corner shop. You are doing well and want to determine how much you earned in […]",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=523338",
        "categories": [
          "jetbrains-academy",
          "project-based-learning",
          "course-catalog",
          "git",
          "kotlin",
          "online-learning"
        ],
        "isoDate": "2024-11-05T18:59:45.000Z"
      },
      {
        "creator": "Márton Braun",
        "title": "Amper Update November 2024 – Project File Tooling, Compose Resources, KSP2, and Android Release Builds",
        "link": "https://blog.jetbrains.com/amper/2024/11/amper-update-november-2024/",
        "pubDate": "Tue, 05 Nov 2024 13:26:58 +0000",
        "content:encodedSnippet": "Amper 0.5.0 is now available! With this release, we’ve improved the IDE experience when working with multiple modules and project.yaml files, made nested completion in Amper configuration files more powerful, introduced support for Compose Resources and KSP2, improved Android release builds, and more!\nFor the full list of changes and bug fixes in Amper 0.5.0, see the release notes.\nTo get support for Amper’s latest features, use Fleet 1.42 or IntelliJ IDEA 2024.3 (or later versions).\nTooling support for working with modules and project files\nIn the previous update, we introduced project files for standalone Amper projects. With this release, you’ll now get additional tooling to work with these files.\nWhen working in the configuration file of a newly created module, you’ll see a warning and a quick-fix that helps you add it to the list of modules:\n\n\n\n\nWhen referencing a module that doesn’t exist yet, you can use a quick-fix to create that new module:\n\n\n\n\nImproved nested completion\nThe settings block in Amper files offers nested completion for all of the available values you can configure, letting you easily search for values even if you don’t know where in the structure they’re nested.\nTo make this even more convenient, you’ll now get this completion support even when you’re at the top level of a module file:\n\n\n\n\nCompose resources\nYou can now use Compose Multiplatform resources in standalone Amper projects, which allows you to easily access images, strings, fonts, and files in your Compose application.\n\n\n\n\nYou can configure resources under settings.compose to change the package name or the visibility of the generated Res class:\nsettings:\n  compose:\n    enabled: true\n    resources:\n      packageName: com.example.app\n      exposedAccessors: true\nKotlin Symbol Processing\nThe standalone version of Amper now has support for Kotlin Symbol Processing. Many third-party libraries use KSP to generate code as part of the compilation process.\nAmper works with KSP2, so any processors used must be updated for KSP2 as well. We’re expecting most processors to make this upgrade soon, as KSP1 is deprecated and will no longer be supported in Kotlin 2.1. However, at the time of this release, you might still see some gaps in support, such as issues with native targets.\nTo add a processor to your module, use the settings.kotlin.ksp section. You can also specify the options that you want to pass to KSP here.\nsettings:\n  kotlin:\n    ksp:\n      processors:\n        - androidx.room:room-compiler:2.7.0-alpha09\n      processorOptions:\n        room.schemaLocation: ./schema\nIn multiplatform modules, configuration in the settings block is applied to all platforms by default, including KSP processors. If you need to specify which platforms to run a KSP processor on, use a settings block with a platform qualifier:\nsettings@android:\n  kotlin:\n    ksp:\n      processors:\n        - androidx.room:room-compiler:2.7.0-alpha09\nAndroid release builds\nAmper can now create signed release builds of Android apps in both Gradle-based and standalone Amper projects. These builds will use R8 automatically, with minification and shrinking enabled.\nTo enable signing for release builds, use the new android.signing option in the settings block:\nsettings:\n  android:\n    signing: enabled\nYou can provide the signing details by creating a keystore.properties file in the module:\nstoreFile=/Users/example/.keystores/release.keystore\nstorePassword=store_password\nkeyAlias=alias\nkeyPassword=key_password\nThere are options available to customize R8’s obfuscation and to change the location of the properties file containing the signing details. Amper can also generate a new keystore for you if you don’t have one already.\nYou can refer to the documentation about configuring Android builds for more details, and you can also look at samples to see custom Proguard configuration in both standalone and Gradle-based Amper projects.\nParcelize support for Android\nIn projects using the standalone version of Amper, you can now turn on the Parcelize plugin for Android, using the new settings entry: \nsettings:\n  android:\n    parcelize: enabled\nThis lets you annotate Parcelable classes with @Parcelize to generate an implementation automatically:\nimport kotlinx.parcelize.Parcelize\n\n@Parcelize\nclass User(val firstName: String, val lastName: String, val age: Int): Parcelable\nAs Parcelize is an Android-specific feature, it requires some additional configuration in multiplatform projects, which is described in the documentation.\nUpdated dependencies and defaults\nAmper now uses these new versions of dependencies and default values:\nKotlin 2.0.20\nKotlin language version 2.0\nAndroid Gradle Plugin 8.5.0\nAndroid compile SDK and target SDK 35\nThis release also uses kotlinx.serialization 1.7.3 by default and allows you to customize this version if needed:\nsettings:\n  kotlin:\n    serialization:\n      enabled: true\n      version: 1.7.3\nTo make it easier to set up serialization for various formats, the required dependencies are available from the built-in version catalog:\ndependencies:\n  - $kotlin.serialization.json\n  - $kotlin.serialization.protobuf\nNew, unified cache folder\nThere is now a unified location for caching downloaded dependencies, whether Amper is invoked from the command line or used in an IDE. The ~/.amper folder that was used in previous versions can be safely deleted.\nThe new cache locations are as follows:\nOn Windows: ~/AppData/Local/Amper\nOn macOS: ~/Library/Caches/Amper\nOn Linux: ~/.cache/Amper (or if XDG_CACHE_HOME is defined, $XDG_CACHE_HOME/.cache/Amper) \nUpdate your existing projects\nTo update a project using the standalone version of Amper, update your amper scripts by following the download instructions on the Usage page of the documentation.\nIf you’re using a Gradle-based Amper project, update your plugin version to 0.5.0:\nplugins {\n   id(\"org.jetbrains.amper.settings.plugin\").version(\"0.5.0\")\n}\nTry Amper\nTo get started with Amper, try the sample projects with standalone Amper or the samples with Gradle-based projects.\nFor full support of the latest Amper features, use Fleet 1.42 and IntelliJ IDEA 2024.3 (or later versions).\nTry Amper\n                                                    \nShare your feedback\nAmper is still experimental and under active development. You can provide feedback about your experience by joining the discussion in the Kotlinlang Slack’s #amper channel or sharing your suggestions and ideas in a YouTrack issue. Your input and your use cases help shape the future of Amper!",
        "dc:creator": "Márton Braun",
        "content": "Amper 0.5.0 is now available! With this release, we’ve improved the IDE experience when working with multiple modules and project.yaml files, made nested completion in Amper configuration files more powerful, introduced support for Compose Resources and KSP2, improved Android release builds, and more! For the full list of changes and bug fixes in Amper 0.5.0, [&#8230;]",
        "contentSnippet": "Amper 0.5.0 is now available! With this release, we’ve improved the IDE experience when working with multiple modules and project.yaml files, made nested completion in Amper configuration files more powerful, introduced support for Compose Resources and KSP2, improved Android release builds, and more! For the full list of changes and bug fixes in Amper 0.5.0, […]",
        "guid": "https://blog.jetbrains.com/?post_type=amper&p=522950",
        "isoDate": "2024-11-05T13:26:58.000Z"
      },
      {
        "creator": "Irina Mariasova",
        "title": "Java Annotated Monthly – November 2024",
        "link": "https://blog.jetbrains.com/idea/2024/11/java-annotated-monthly-november-2024/",
        "pubDate": "Tue, 05 Nov 2024 11:08:38 +0000",
        "content:encodedSnippet": "Java Annotated Monthly is here! Check out the latest news across Java, Spring, AI, and emerging technologies. We offer practical tutorials to enhance your skills, a curated list of November’s top tech events, both online and offline, and an exclusive feature by industry expert Mala Gupta.\nStay informed, and stay ahead!\nFeatured Content \nJava Developer Advocate with JetBrains, a Java Champion, and a JUG leader, Mala Gupta has authored multiple books with Manning, Packt, and O’Reilly Publications. She has more than two decades of experience in the software industry and is a regular speaker at industry conferences around the world. She is a vocal supporter of Java certification as a path to career advancement.\nIn this featured section, I want to highlight ‘JEP Explained‘ – a collection of heartfelt conversations with the Java architects and experts who helped bring Java 23 features to life. These conversations dive into JDK Enhancement Proposals (JEPs), which are the key features planned for each JDK release. Our hope with this series is to help developers, teams, and anyone passionate about Java not just understand the new Java features, but to look beyond the syntax and dig into the bigger picture with behind-the-scenes stories and the experiences of experts. Here’s the link to the blog post and YouTube playlist.\nJava 23, released in September 2024, has twelve JEPs, and the ‘JEP Explained’ series covers eleven of them. Each conversation packs a bunch of information beyond the JEP itself. For instance, when we talked with Brian Goetz about JEP 455 (about the addition of primitive types to pattern matching), he also talked about balancing new features and complexity in software development, why compiler writers love pattern matching, how designing a feature is often a lesson in humility, and how the evolution of design is an organic process. If this sounds interesting to you, check out the complete interview for more insights from Brian, Aggelos Biboudis, and Tagir Valeev, as they all discuss the inclusion of primitive types in pattern matching.\n99% of developers I talked with believe that one of the reasons for deprecating an API in Java is the availability of better APIs. Ron Pressler stated this is never the case, when we talked with him about JEP 471 (deprecation of Memory-Access Methods in the sun.misc.Unsafe class). Ron also talked about ‘Tip and Tail: a smarter way to manage codebases for different JDKs’, whether folks are swimming naked when they use outdated code, the real secret to performance gains, and much more. Check out this conversation with Ron for more insights.\nWe had another interesting conversation with Viktor Klang and Tagir Valeev about Stream Gatherers in the Streams API. Apart from discussing JEP 473, Viktor touched on topics such as ‘The Power of Simplicity in Software Design’ and how bugs can’t hide in simplicity. He shared how the built-in gatherers can inspire folks, show what this feature can do, help them to get started using them, and then help them create custom gatherers. Viktor also shared why he loves to use JShell for prototyping. Tagir shared that the most complex code that he has ever written was for a Stream API library that he created, streamex. Check out the full interview for more stories.\nIt was a pleasure to talk about being able to use Markdown for writing documentation comments in JavaDoc with Jonathan Gibbons, owner of JEP 467, and Dmitry Chuyko. Jonathan talked about making Java more approachable by simplifying its documentation with Markdown. He discussed why Markdown is a game changer for JavaDoc and addressed which Markdown flavor to use. Dmitry talked about a challenge related to documentation at work – what happens when the documentation of a codebase is larger than its codebase? Check out the full interview here.\nIt was an honor and a privilege to interview all of these Java architects and experts for the JEP Explained interview series: Dr. Venkat Subramaniam, Ken Fogel, Rafael Winterhalter, José Paumard, Zoran Sevarac, Monica Beckwith, Paul Bakker, and Gavin Bierman.\nThough I would have loved to, it is not feasible to highlight all of the fantastic “aha!” moments and learning I experienced while talking with all the guests. Check out the playlist of JEP Explained interviews and this blog post for more details.\nJava News\nJava News Roundup 1, 2, 3, 4 – As usual, the most detailed news digest on all things Java is here.\nThe Inside Java Newsletter: Welcome Java 23! – All the news about the recent release of Java 23 and the related events is conveniently grouped here.\nCheck out some helpful info on the JEPs in progress: \nJEP 14: The Tip & Tail Model of Library Development\nJEP 485: Stream Gatherers\nJEP 484: Class-File API\nJEP 475: Late Barrier Expansion for G1\nJEP 489: Vector API (9th Incubator)\nJEP 472: Prepare to Restrict the Use of JNI\nBig News from Project Valhalla – Inside Java Newscast #77 – Nicolai Parlog discusses Project Valhalla’s latest draft proposal, which introduces value classes, null-restricted types, and other enhancements. The episode recaps Brian Goetz‘s JVMLS 2024 presentation on these updates.\nLoom – Where Are We? #JVMLS – Alan Bateman discusses the latest updates on Project Loom, focusing on its goal of enhancing Java’s concurrency model with lightweight, high-performance virtual threads.\nJava Language Futures – Fall 2024 Edition – In his talk, Gavin Bierman provides an overview of recent developments in the Java programming language and discusses upcoming features and future directions presented at Devoxx Belgium 2024.\nStream Gatherers (JEP 485) – Cay Horstmann discusses JEP 485, introducing gatherers for Java Streams, which enhance stream processing with stateful transformations for complex operations.\nSerialization – A New Hope – Java Serialization, now nearly 30 years old, faces new demands. Viktor Klang introduces a streamlined, data-focused model that leverages recent Java enhancements for safer, more flexible object state management and serialization. Ready for the shift? \nJava Tutorials and Tips\nTake a look at some articles by Miro Wengner in which he explores the new features in JDK 23:\nExploring New Features in JDK 23: Null object pattern to avoid null pointer exception with JEP-455\nExploring New Features in JDK 23: Gatherers upgrades pipeline design pattern JEP-461\nTesting your Java code with mocks and real Elasticsearch – Piotr Przybyl explores two approaches to testing applications using Elasticsearch as a dependency. \nJava Integer Caching: why and how – Nataliia Dziubenko explains Java’s Integer Caching mechanism, covering how and why Java caches small Integer values to optimize memory and speed. \n10 Billion Integers Walk Into an Array – Donal Raab talks about the surprising discoveries after an experiment with 64-bit Pharo Smalltalk.\nCoding Interview Challenge Practice: Learn How to Approach The Gilded Rose and Other Katas to Read and Improve Code – Check out some practical techniques by Emily Bache for improving and understanding complex code through popular coding exercises like The Gilded Rose Kata. \nAre Virtual Threads Going to Make Reactive Programming Irrelevant? – José Paumard explores how virtual threads might replace reactive programming by simplifying concurrency and enhancing performance.\nUsing Lombok Library With JDK 23 – Arnošt Havelka provides tips for fixing compatibility issues when using the Lombok library with JDK 23. \nAI Integration for Java: To the Future, From the Past – The panelists discuss workflows, staff impact, and utilizing different tools, frameworks, and services to integrate AI in Java applications.\nEasily containerize Java applications with cloud native buildpacks – Grace Jansen explains how to quickly containerize Java apps using Cloud Native Buildpacks, an open-source project that is gaining significant momentum within the developer community by offering a polyglot solution with impressive features and advantages.\nHow to use LazyConnectionDataSourceProxy with Spring Data JPA – In this article, Vlad Mihalcea explains how to use LazyConnectionDataSourceProxy with Spring Data JPA to delay database connection use until it’s truly needed, improving efficiency. \nKotlin Corner\nKtor 3.0: New Features and Improved Performance – This blog post will give you a solid overview of what’s new and improved in Ktor 3.0.\nCompose Multiplatform 1.7.0 Released – Learn more about the release, which brings type-safe navigation, enhanced performance on iOS, and added support for drag-and-drop on desktop platforms.\nThe Evolution of the Kotlin Language and How You Can Contribute – Find out how the Kotlin Evolution and Enhancement Process (KEEP) works and what you can do to contribute to the further development of the language. \nUsing DynamoDB with Ktor part 1, part 2, part 3 – Check out a series of articles by Matthias Schenk in which he explains the basics of integrating Amazon DynamoDB with a Ktor application.\nSpring Boot, S3 and Kotlin part 1, part 2, part 3 – This is also a helpful series that explains how to make a Spring Boot Kotlin app work with AWS S3 Object Storage using the S3Client.\nMaking my concurrent algorithm 6000% better – Charlie Tap shares insights into optimizing a concurrent algorithm, boosting its performance significantly through careful analysis and improvements.\nKotlin Under the Hood: Exploring Constructors and Init Blocks – Abhaysing Bhosale explains the types of constructors in Kotlin and how init blocks function, giving a simple look at how they work internally.\nKotlin Multiplatform Developer Roadmap – This roadmap helps developers to navigate Kotlin Multiplatform (KMP) and understand the essential tools and concepts needed to excel in cross-platform development with Kotlin.\nApplying the Factory Method and Abstract Factory Patterns in Kotlin – Explore how to enhance flexibility in object creation using the Factory Method and Abstract Factory design patterns. \nDave Leeds examines code that benefits from these patterns, applies the traditional approach from the classic Gang of Four book, and demonstrates how Kotlin’s features can modernize these implementations.\nGet your KotlinConf 2025 ticket – Join us in Copenhagen on May 21–23, 2025, for the biggest KotlinConf yet! With 2,500 attendees, you’ll explore modern server-side, web, mobile, and desktop Kotlin development, and enjoy days full of sessions, workshops, and networking with top professionals from across the industry.\nKotlinConf 2025 is calling for speakers – Whether it’s server-side, Kotlin Multiplatform, AI, or best practices, we want to hear from you. Submit your talk and inspire others with your experience at the biggest Kotlin event.\nJoin Kotlin Multiplatform Contest – If you are a student or recent graduate, you can win a trip to KotlinConf 2025. Showcase your creativity and coding skills by building a cross-platform project using Kotlin Multiplatform technology.\nLanguages, Frameworks, Libraries, and Technologies\nThis Week in Spring 1, 2, 3, 4 – All the Spring-related news is here for you. \nEfficient Debugging Exceptions – This blog post by Igor Kulakov explores efficient techniques for debugging Java exceptions, focusing on handling exceptions like NumberFormatException and demonstrating advanced debugger tools to capture context, test fixes, and apply changes without restarting the application.\nThe Art of Full Stack Debugging – Shai Almog demonstrates techniques and best practices for effective full-stack debugging.\nSQL Best Practices Every Java Engineer Must Know – This guide explores key strategies for optimizing SQL queries specifically for Java engineers. \nSupercharging Your AI Applications with Spring AI Advisors – Christian Tzolov explains how to enhance AI applications using Spring AI’s Advisor system, which allows developers to modularize, intercept, and transform requests and responses within chat applications.\nGenerally AI – Season 2 – Episode 1: Generative AI and Creativity – In this podcast, you can listen to a talk about how generative AI can boost creativity, focusing on its potential as a supportive tool rather than a replacement for human creators.\nAI, Rust, and Resilience: Key Software Trends Seen by the QCon San Francisco 2024 Program Committee – Curious about software trends? Check them out here. \nThings you never dared to ask about LLMs – Guillaume Laforge answers common questions and clears up mysteries about how large language models work.\nProfile IntelliJ IDEA with its own profiler – Igor Kulakov explores how to use IntelliJ IDEA’s built-in profiler to diagnose performance issues within the IDE itself, offering insights for plugin developers and users seeking to troubleshoot bottlenecks in their projects.\nPodcast: Generally AI – Season 2 – Episode 3: Surviving the AI Winter – In this podcast, you will learn what “AI winters” and “summers” are. \nConferences and Events\nHave a look at the networking and education opportunities for November: \nW-Jax – Munich, Germany, November 4-8\nHarnessing the Power of AI in IntelliJ IDEA – Basel, Switzerland, November 6\nØredev – Malmö, Sweden, November 6-8\nJFall – Ede, Netherlands, November 7\nHeapcon – Belgrade, Serbia, November 7\nJavaDays Czech Republic – Prague, Czech Republic, November 12-13\nBuild GraphQL Services with Spring Boot like Netflix – Online, November 14\nCRaCing Java Snapshots – Atlanta, USA, November 19\nJavaFest India – Bengaluru, India, November 23\nCulture and Community\nUse correct Unicode characters – Despite modern technology, we often use text characters as if we’re still limited to typewriters, creating typographic mishaps and accidental ASCII art. Unicode solved this over two decades ago. Check out these examples to bring sophistication and precision to your writing.\nThe Best Morning Routine (Backed by Science) – Taylor Pearson writes about building a morning routine that boosts productivity and well-being. He draws on historical examples and science.\nSoftware Engineer Titles Have (Almost) Lost All Their Meaning – Trevor I. Lasn questions whether job titles like “senior engineer” in the tech industry still reflect actual experience and skill levels. Are titles becoming just labels? What do you think?\nAnd Finally…\nTop 10 IntelliJ IDEA Shortcuts for Efficient Data Querying With the Database Tools – We’ve gathered the most helpful shortcuts to speed up and streamline data querying in IntelliJ IDEA.\nKtor 3.0 Is Now Available With New Features and Improved Performance – Find out what Ktor is and learn about the latest updates and improvements introduced in Ktor 3.0.\nCode Analysis for Your Projects With IntelliJ IDEA and Qodana – Improve your code base using code analysis from IntelliJ IDEA and Qodana. Run specific inspections, analyze code, fix problems, and add inspections to your CI/CD pipeline. \nHow to Build a CRUD REST API Using Spring Boot – Dive into building a CRUD REST API with Spring Boot and supercharge your productivity using IntelliJ IDEA. From project setup to testing, this guide covers all the essentials! Perfect for beginners and pros alike. \nLivestreams and videos\n7 Ways AI Assistant Can Help You with Version Control – From resolving tricky merge conflicts to generating precise commit messages, AI Assistant offers tools that can save you time and boost your productivity. \nThe Problem of Understanding Code is Solved: AI Assistant to the Rescue – Struggling to understand complex code? JetBrains AI Assistant is here to help! In this video, we walk you through practical examples of how AI Assistant simplifies code comprehension. From summarizing projects and explaining classes to clarifying regex and runtime errors, this tool enhances your productivity and understanding. \nUnfreeze Your Apps: Debugging Tips – In this video, you will look at how to locate code without much prior knowledge of the project structure and APIs, debug hanging applications, and fix faulty code on the fly.\nNew episodes of JEP Explained: \nJEP 480: Structured Concurrency\nJEP 476: Module Import Declarations\nJEP 471: Deprecate the Memory-Access Methods in sun.misc.Unsafe for Removal\nJEP 474 – ZGC: Generational Mode by Default\nJEP 469: Vector API\nJEP 473: Stream Gatherers\nJEP 467: Markdown Documentation Comments\nMigrating Kotlin Plugins to K2 Mode – As Kotlin moves toward enabling K2 mode by default, it’s essential for plugin authors to ensure compatibility with the Kotlin API. This livestream will guide you through updating your plugins for K2, covering compatibility verification, code adaptation with examples, and troubleshooting migration challenges.\nHow to not create a plugin for JetBrains IDEs – This talk explores essential IDE features for tackling everyday challenges and shows how to share them with your team for smoother collaboration.\nThat’s it for today! We’re collecting ideas for the next Java Annotated Monthly – send your suggestions via email or X by November 20. Don’t forget to check out our archive of past JAM issues for any articles you may have missed!",
        "dc:creator": "Irina Mariasova",
        "content": "Java Annotated Monthly is here! Check out the latest news across Java, Spring, AI, and emerging technologies. We offer practical tutorials to enhance your skills, a curated list of November&#8217;s top tech events, both online and offline, and an exclusive feature by industry expert Mala Gupta. Stay informed, and stay ahead! Featured Content&#160; In this [&#8230;]",
        "contentSnippet": "Java Annotated Monthly is here! Check out the latest news across Java, Spring, AI, and emerging technologies. We offer practical tutorials to enhance your skills, a curated list of November’s top tech events, both online and offline, and an exclusive feature by industry expert Mala Gupta. Stay informed, and stay ahead! Featured Content  In this […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=523251",
        "categories": [
          "news",
          "java",
          "java-annotated",
          "kotlin"
        ],
        "isoDate": "2024-11-05T11:08:38.000Z"
      },
      {
        "creator": "Rachel Appel",
        "title": "dotInsights | November 2024",
        "link": "https://blog.jetbrains.com/dotnet/2024/11/04/dotinsights-november-2024/",
        "pubDate": "Mon, 04 Nov 2024 16:51:47 +0000",
        "content:encodedSnippet": "Wow! It’s easy to take the rapid pace of technological advancement for granted, especially given how many of us have been tech-natives for most of our lives. For Mac lovers, Infinite Mac takes a trip across the decades of the 1980s to 2000s through the lens of releases. Experience history all in your browser. Draw an inspiring image in QuickDraw, play a round of Battle Chess, or build your utopia in Civilization and have some tremendous retro-nostalgic fun. Now, let’s get Rider and .NET running on these VMs. 😅\n\n\n\n\nWelcome to dotInsights by JetBrains! This newsletter is the home of recent .NET and software development-related content.\n🌟 Featured Content\nYou might have seen us tease a big announcement, and by this time, the cat’s out of the bag. We are happy to make JetBrains Rider and WebStorm freely available for non-commercial use cases. Non-commercial use applies to anyone learning new technologies, hobbyists who code in their free time, content creators sharing information on social media, and open-source authors improving the technological landscape. This is fantastic news for .NET, Game, and web developers. We hope this brings the joy of using JetBrains IDEs to more developers.\nCheck out the landing pages of the respective products to learn if your situation qualifies you for the non-commercial license. \nWe hope this change empowers developers everywhere to achieve their dreams and make it happen. With code.\n🔗 Links\nHere’s the latest from the developer community.\n.NET Days Online 2024 Recordings – JetBrains\nThe latest in CSS and web UI: I/O 2024 recap – Una Kravetz / Google\nReact 19 RC – The React Team\nAnnouncing Void Zero Inc – Evan You\nBlazor GraphEditor – Kristoffer Strube\nWhat’s new for .NET MAUI in .NET 9: HybridWebView – Naveenkumar Sanjeevirayan\nWolverine 3.0 is Live! – Jeremy Miller\nASP.NET Core 9 and IAsyncEnumerable – Tomasz Pęczek\nTest using OpenTelemetry traces in ASP.NET – Jennifer Moore\nMassTransit v8.3.0 – RabbitMQ ReplyTo Support – Chris Patterson\nBrowser-based applications with BFF and IdentityServer – Roland Gujit\nDon’t Oversell Ideas: Trunk-based development edition – Oskar Dudycz\nHow’s This Website So Fast? – Wes Bos\n.NET 9 RC2 – The .NET Team\nGodot Engine SDK Integrations – Godot Team\nUnity 6 Now Available! – Unity\nHtmt: .NET templating language that is a superset of HTML/XML and AOT-ready– Asko Nõmm\nDoom in Space – Ólafur Waage \nFrom Hell to Heaven: Porting Doom to MAUI – Nico Vermeir\nReSharper Code Inspection Issues Imported into NDepend – NDepend\nClassic Windows UI for Avalonia – Bartosz Korczyński\nVisual Studio Solution Persistence (Slnx) – .NET Team\nXaml Designer v0.2 – OpenSilver\nTUnit (AOT-ready Unit Testing Framework) – Thom Hurst\nWine takes over ownership of Mono – WineHQ\nDEF CON 32 – Inside the FBI’s Secret Encrypted Phone Company ‘Anom’ – Joseph Cox\nCSS Avatar Rhombus – Temani Afif\nHTML for People – Blake Watson\nOxpecker goes full stack! (F#) – Vladimir Shcur\nVite, TypeScript, and Vue Components in ASP.NET Core – James White\n🔦 From our .NET Guide\nEach month, we feature tutorials or tips from our .NET Guide. Here is some helpful knowledge worth filing in your brain for future development.\nHTMX for ASP.NET Core Developers\nLearn what HTMX is, how to integrate it with your existing knowledge of ASP.NET Core development, and how to take your client-side development to the next level with relative ease. You’ll never look at client-side development the same way ever again.\nHTMX for ASP.NET Core Developers\n                                                    \nGenerate terminal commands in Rider with AI\nCan’t recall that PowerShell command? Using Linux or macOS but can’t remember the syntax for a particular shell command? This is a great use case for AI!\nGemerate terminal commands in Rider with AI\n                                                    \n\n\n\n\n☕ Coffee Break\nTake a break to catch some fun social posts.\nI can watch an entire movie without being on my phone https://t.co/C4HOmYD88Q\n— Emma Berquist (@eeberquist) September 17, 2024\n \n\n\n\n\npic.twitter.com/kADya3qVAX\n— The Dalbo Dog (@Dalbodog) September 7, 2024\n \n\n\n\n\nchange him back i don’t care what he’s done no one deserves this https://t.co/mg6lMt6u07\n— old tom (@YuckyTom) September 10, 2024\n \n\n\n\n🗞️ JetBrains News\nWhat’s going on at JetBrains? Check it out here:\nHackerNews Comments on Non-Commercial License Changes\nQodana Self-hosted with 40% off – Code analysis and quality control tools\nMeet Renovated Kotlin Support – K2 Mode: What You Need to Know\nKtor 3.0 Is Now Available With New Features and Improved Performance\nTeamCity Pipelines Is Now Out of Beta\nSolving Remote Development Challenges With CodeCanvas\nJetBrains JavaScript Day 2024 on The Primegean\n\n\n\n\n✉️ Comments? Questions? Send us an  email.\nSubscribe to the dotInsights Newsletter",
        "dc:creator": "Rachel Appel",
        "content": "Wow! It&#8217;s easy to take the rapid pace of technological advancement for granted, especially given how many of us have been tech-natives for most of our lives. For Mac lovers, Infinite Mac takes a trip across the decades of the 1980s to 2000s through the lens of releases. Experience history all in your browser. Draw [&#8230;]",
        "contentSnippet": "Wow! It’s easy to take the rapid pace of technological advancement for granted, especially given how many of us have been tech-natives for most of our lives. For Mac lovers, Infinite Mac takes a trip across the decades of the 1980s to 2000s through the lens of releases. Experience history all in your browser. Draw […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=519808",
        "categories": [
          "net-tools",
          "dotinsights",
          "dotultimate"
        ],
        "isoDate": "2024-11-04T16:51:47.000Z"
      },
      {
        "creator": "Alena Gupaisova",
        "title": "Dobar Dan! Algorithm and Code Training School Heads to Serbia This Winter!",
        "link": "https://blog.jetbrains.com/education/2024/11/04/dobar-dan-algorithm-and-code-training-school-heads-to-serbia-this-winter/",
        "pubDate": "Mon, 04 Nov 2024 10:48:17 +0000",
        "content:encodedSnippet": "At the beginning of 2025, the Algorithm and Code Training School (ACTS) camp is moving to an exciting new location – Serbia! While our summer camp in Romania was a great success, we’re taking things to the next level with an even more intensive competition format. This camp is perfect for young coders aiming to win medals at international informatics competitions. \n\n\n\n\n📍 Location: Serbia.\n📅 Dates: January 25 – February 2, 2025 (these dates are subject to change) \n🎯 For: High school students between the ages of 16 and 20.\n💫 Experience level: Prior participation in the International Olympiad in Informatics (IOI), the European Junior Olympiad in Informatics (EJOI), or similar international competitions.\n🎉 What to expect: 7 days of intensive training, contests, and fun. \n🏫 Organizers: Constructor University and Neapolis University Pafos, with support from the JetBrains Foundation.\n\n\n\n    \nRegister now\n                                                    \nWant to join?\nHere’s how:\nFill out the application on our website.\nShow off your skills in our Youth Challenge Coder track.\nRegistration is open until November 18. Stand out in the selection process, and earn your spot at our intense 7-day winter camp!\nWhy Should You Join?\nTo improve your chances in competitions: ACTS summer camp participants went on to win four gold, four silver, and five bronze medals at IOI 2024.\nTo learn from the best: Train directly with world-class experts, including ICPC World Champion Pavel Mavrin and ICPC Gold Medalist Mikhail Pyaderkin.\nTo take advantage of global networking opportunities: Join a worldwide community of exceptional young programmers, and build lasting friendships with like-minded peers.\n\n\n\n\nWhat our campers say\n“If you want to get gold at IOI, meet a lot of cool people, or just win a water gun and compete in rolling toilet paper as fast as possible, the ACTS camp is the right place for you. I’ve gained lots of new memories and knowledge, and I definitely recommend the camp to everyone else.”\n—Eliška Macáková, International Olympiad in Informatics (IOI) Gold Medalist, International Mathematical Olympiad (IMO) Silver Medalist, Slovakia.\n“It was quite fun. I got to meet a lot of other competitive programmers from the region. We played board games, talked, solved problems together, and overall, it was quite nice. Feels like an IOI before the IOI. The lectures were nice, too. I definitely recommend applying for the camp.” \n—Nemanja Majski, International Olympiad in Informatics (IOI) Silver Medalist, Serbia\n“I really enjoyed the ACTS camp. Besides the various contests and the compelling and well-taught lectures, I also learned a lot about Romanian history and culture and made very good friends from all across Europe. I feel like the ACTS camp was a great preparation for IOI and maybe future CP contests.” \n—Simon Bachran, International Olympiad in Informatics (IOI) Bronze Medalist, Germany\n\n\n\n\nReady to level up?\nRegister now!\n                                                    \nStill have questions? \nJoin our Discord Server or drop us an email!",
        "dc:creator": "Alena Gupaisova",
        "content": "At the beginning of 2025, the Algorithm and Code Training School (ACTS) camp is moving to an exciting new location – Serbia! While our summer camp in Romania was a great success, we&#8217;re taking things to the next level with an even more intensive competition format. This camp is perfect for young coders aiming to [&#8230;]",
        "contentSnippet": "At the beginning of 2025, the Algorithm and Code Training School (ACTS) camp is moving to an exciting new location – Serbia! While our summer camp in Romania was a great success, we’re taking things to the next level with an even more intensive competition format. This camp is perfect for young coders aiming to […]",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=523154",
        "categories": [
          "jetbrains-academy",
          "offline-programs",
          "jetbrainsacademy"
        ],
        "isoDate": "2024-11-04T10:48:17.000Z"
      },
      {
        "creator": "Mukul Mantosh",
        "title": "Create a Full-Stack App With Go and React",
        "link": "https://blog.jetbrains.com/go/2024/11/04/create-a-full-stack-app-with-go-and-react/",
        "pubDate": "Mon, 04 Nov 2024 09:53:17 +0000",
        "content:encodedSnippet": "As a language that emerged over 14 years ago, Go has many use cases. From web development, APIs, and CLIs to Wasm, cloud technologies, and even AI-powered tools, its applications are broad. \nThe same goes for demo projects, which have countless variations and purposes!\nNow, wouldn’t it be great if there was a full-stack, API-oriented, and well-maintained demo project for Go? If you’ve ever experienced a demo project fail during a live presentation, then you’d certainly appreciate a more stable project! \nIn this blog post, I’ll walk you through the process of creating such a project – a full-stack app using Go and React.\nCheck out the source code here to follow along.\nIntroducing Go Eats\nGo Eats is an open-source project similar to the food delivery apps you’ve probably seen and used before. The project simulates the operations involved when placing an order in a real-world food delivery app.\nTo build Go Eats, I used Go as the programming language, Postgres as the database, React for the frontend, and NATS for messaging. While Go is a good choice for these complex full-stack applications, finding demos can be challenging.\nI used GoLand for this project because it takes care of setting up the Go SDK, installing packages, and much more straight out of the box.\nLet’s take a closer look at the entry point of the source code: main.go. \nThis code initializes several services and handlers, establishes a database connection, loads environment variables, and sets up middleware, NATS, and the WebSocket.\nfunc main() {\n\t// load .env file\n\terr := godotenv.Load()\n\tif err != nil {\n\t\tlog.Fatal(\"Error loading .env file\")\n\t}\n\n\tenv := os.Getenv(\"APP_ENV\")\n\tdb := database.New()\n\t// Create Tables\n\tif err := db.Migrate(); err != nil {\n\t\tlog.Fatalf(\"Error migrating database: %s\", err)\n\t}\n\n\t// Connect NATS\n\tnatServer, err := nats.NewNATS(\"nats://127.0.0.1:4222\")\n\n\t// WebSocket Clients\n\twsClients := make(map[string]*websocket.Conn)\n\n\ts := handler.NewServer(db, true)\n\n\t// Initialize Validator\n\tvalidate := validator.New()\n\n\t// Middlewares List\n\tmiddlewares := []gin.HandlerFunc{middleware.AuthMiddleware()}\n\n\t// User\n\tuserService := usr.NewUserService(db, env)\n\tuser.NewUserHandler(s, \"/user\", userService, validate)\n\n\t// Restaurant\n\trestaurantService := restro.NewRestaurantService(db, env)\n\trestaurant.NewRestaurantHandler(s, \"/restaurant\", restaurantService)\n\n\t//.... For the sake of brevity, the full code snippet is omitted here.\n\n\tlog.Fatal(s.Run())\n\n}\nThe journey\nI started by working on backend tasks, such as creating APIs, before moving to the frontend. I chose Gin as the framework to build these APIs.\nWhile I could have gone with Gorilla, Echo, Fiber, or any other framework, I felt Gin would be a better choice for this project. It’s more mature and stable, it’s widely used, and it’s also somewhat of a personal preference. \nBefore selecting any framework, you should carefully consider the problem you are trying to solve or the specific business goal you are trying to achieve. Then weigh up the potential solutions and opt for the best one for your specific use case.\nThe backend\nWhile creating a demo app, it’s important to ensure that the application is flexible enough to accommodate future changes and refactoring.\nFor Go Eats, I implemented a service layer pattern, along with dependency injection. Additionally, I utilized handlers for request and response communication with the service layer, which manages business logic and interacts with the database.\n\t// User\n\tuserService := usr.NewUserService(db, env)\n\tuser.NewUserHandler(s, \"/user\", userService, validate)\n\n\t// Restaurant\n\trestaurantService := restro.NewRestaurantService(db, env)\n\trestaurant.NewRestaurantHandler(s, \"/restaurant\", restaurantService)\n\n\t// Reviews\n\treviewService := review.NewReviewService(db, env)\n\trevw.NewReviewProtectedHandler(s, \"/review\", reviewService, middlewares, validate)\n\n\t// Cart\n\tcartService := cart_order.NewCartService(db, env, natServer)\n\tcrt.NewCartHandler(s, \"/cart\", cartService, middlewares, validate)\nThe project structure shown above ensures that the project is modular and flexible. Remember that creating too many nested directories can add unnecessary complexity. Especially if you’re just starting your programming journey, it’s best to focus on simplicity rather than going through multiple layers. Keep in mind that your code will inevitably need to be refactored at some point.\nThe famous quote by Donald Knuth, “Premature optimization is the root of all evil,” feels particularly apt here.\n\nI did something similar for the database. I used the lightweight Bun SQL client. \nHowever, I made sure that if I need to replace the ORM in the future, my code will be able to adapt to the new changes based on the interface I have defined below.\ntype Database interface {\n\tInsert(ctx context.Context, model any) (sql.Result, error)\n\tDelete(ctx context.Context, tableName string, filter Filter) (sql.Result, error)\n\tSelect(ctx context.Context, model any, columnName string, parameter any) error\n\tSelectAll(ctx context.Context, tableName string, model any) error\n\tSelectWithRelation(ctx context.Context, model any, relations []string, Condition Filter) error\n\tSelectWithMultipleFilter(ctx context.Context, model any, Condition Filter) error\n\tRaw(ctx context.Context, model any, query string, args ...interface{}) error\n\tUpdate(ctx context.Context, tableName string, Set Filter, Condition Filter) (sql.Result, error)\n\tCount(ctx context.Context, tableName string, ColumnExpression string, columnName string, parameter any) (int64, error)\n\tMigrate() error\n\tHealthCheck() bool\n\tClose() error\n}\nThis interface provides a blueprint for CRUD (create, read, update, and delete) operations and other common database interactions, ensuring that any struct implementing this interface can be used to perform these operations.\nGoLand keeps track of class implementation, making navigation much smoother. \nTo navigate to the implementation, press ⌘⌥B / Ctrl+Alt+B.\n\nMost of the operations involve CRUD activities. I was also eager to experiment with server-sent events (SSE) and WebSockets, which I’ve not explored much in the past. This project was a good use case for these technologies.\nLet’s begin with SSE, a technology that enables the server to push notifications, messages, and events to clients over an HTTP connection.\nThe code snippet below reads data from a JSON file and pushes the information so the client renders and displays the relevant data. \nfunc (s *AnnouncementHandler) flashNews(c *gin.Context) {\n\t_, cancel := context.WithTimeout(c.Request.Context(), 5*time.Second)\n\tdefer cancel()\n\n\tevents, err := s.service.FlashEvents()\n\tif err != nil {\n\t\tc.AbortWithStatusJSON(500, gin.H{\"error\": err.Error()})\n\t\treturn\n\t}\n\n\t// Set headers for SSE\n\tc.Header(\"Content-Type\", \"text/event-stream\")\n\tc.Header(\"Cache-Control\", \"no-cache\")\n\tc.Header(\"Connection\", \"keep-alive\")\n\n\tticker := time.NewTicker(6 * time.Second)\n\tdefer ticker.Stop()\n\n\teventIndex := 0\n\n\tfor {\n\t\tselect {\n\t\tcase <-ticker.C:\n\t\t\t// Send the current event\n\t\t\tevent := (*events)[eventIndex]\n\t\t\tc.SSEvent(\"message\", event.Message)\n\t\t\tc.Writer.Flush()\n\n\t\t\t// Move to the next event\n\t\t\teventIndex = (eventIndex + 1) % len(*events)\n\t\tcase <-c.Request.Context().Done():\n\t\t\tticker.Stop()\n\t\t\treturn\n\t\t}\n\t}\n\n}\n\n\n\n\nWebSocket and NATS\nSomething else I’ve not worked with before but have always wanted to try is using WebSockets with the NATS messaging system. I evaluated these technologies as potential solutions for the project and ultimately decided to use them in the demo app.\nHere’s how the messaging process in the Go Eats app functions: \nWhenever a new order is created, a message is published to NATS informing the subscriber about the newly placed order.\nWhen the delivery person updates the order – whether it’s on the way, has failed, or has been delivered – the customer will receive this information in real time, a process that will be reflected in the UI.\n\nThe code below defines the two topics:\norders.new.*: Sends a notification to the customer when a new order is placed.\norders.status.*: Sends a notification to the customer when the delivery status is updated.\n\n\n\n\nFor each received message, the application logs the message, extracts the user ID and message data, and attempts to send the data to the corresponding WebSocket client. If sending fails, the app logs the error, closes the WebSocket connection, and removes the client from the active client’s map.\nNote: Using map[string]*websocket.Conn to manage WebSocket connections with keys as client identifiers, such as userID, will not handle multiple connections from the same client, as the map keys must be unique. This is something I am planning to expand on in a future blog post. \nWhy NATS over Kafka?\nKafka is capable of handling large amounts of data, offering database-level durability and being enterprise-ready. \nHowever, I have never used it before, and I needed something that would work well for my specific use case. In that context, I came across NATS, which is written in Go and is ideal for lightweight, low-latency messaging, particularly in microservices and cloud-native architectures. \nA key point I would like to highlight is its simplicity. NATS was easy to use even when just starting to work with it.\nThe code below initializes a NATS connection and defines methods to publish and subscribe to messages. It connects to a NATS server, publishes messages to a topic, and forwards received messages to WebSocket clients based on user IDs.\ntype NATS struct {\n\tConn *nats.Conn\n}\n\nfunc NewNATS(url string) (*NATS, error) {\n\tnc, err := nats.Connect(url, nats.Name(\"food-delivery-nats\"))\n\tif err != nil {\n\t\tlog.Fatalf(\"Error connecting to NATS:: %s\", err)\n\t}\n\treturn &NATS{Conn: nc}, err\n}\n\nfunc (n *NATS) Pub(topic string, message []byte) error {\n\terr := n.Conn.Publish(topic, message)\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n\nfunc (n *NATS) Sub(topic string, clients map[string]*websocket.Conn) error {\n\n\t_, err := n.Conn.Subscribe(topic, func(msg *nats.Msg) {\n\t\tmessage := string(msg.Data)\n\t\tslog.Info(\"MESSAGE_REPLY_FROM_NATS\", \"RECEIVED_MESSAGE\", message)\n\t\tuserId, messageData := n.formatMessage(message)\n\t\tif conn, ok := clients[userId]; ok {\n\t\t\terr := conn.WriteMessage(websocket.TextMessage, []byte(messageData))\n\t\t\tif err != nil {\n\t\t\t\tlog.Println(\"Error sending message to client:\", err)\n\t\t\t\tconn.Close()\n\t\t\t\tdelete(clients, userId)\n\t\t\t}\n\t\t}\n\t})\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}\n\n//.... For the sake of brevity, the full code snippet is omitted here.\nThe frontend\nTo build the Go Eats UI, I used React. I don’t come from a frontend background, and it was quite challenging to learn and apply unfamiliar concepts. Along the way, I took Stephen Grider’s Modern React with Redux course.\nWhile I’m certainly no expert in React, the course helped a lot. That said, it was the use of GoLand, the JetBrains IDE for Go, which proved to be most valuable throughout this process.\nGoLand has excellent support for full-stack development with less distraction and context switching. The IDE provides exceptional coding support for JavaScript, TypeScript, Dart, React, and many other languages.\nUsing GoLand, I can develop frontend and backend applications with the same IDE.\n\nFinally, here is the final output of how the UI gets rendered through React. \n\nI haven’t gone into much detail about the process of developing the Go Eats frontend. However, if you’re interested, you can check out the source code here. \nSummary\nAs I reflect on my journey developing this demo app, I realize there is much to learn and many improvements that could be made.\nHere are some key lessons from this experience:\nFocus on functionality first!\nIf you’re someone who is just starting to work with Go, don’t worry about making your app scalable or more modular by focusing on dependency injection right away. These concepts will eventually be required, and you will observe the patterns and restructure accordingly. Whatever you build, it won’t be perfect at first, and that’s okay! The journey is one of incremental and constant improvements. \n\n\n\n\nPrioritize testing!\nDon’t forget the importance of regular testing. Making sure you test your project frequently provides confidence that your features work as expected. While I have worked on tests for Go Eats, I still need to improve them further. Additionally, I have tried different testing libraries, such as Testcontainers, which help me test features in a real database instead of using mock ones.\n\n\n\n\nDatabase design matters!\nSpending time on the database schema is extremely valuable. Additionally, there are database migrations, which I haven’t used, but they are quite important, especially when you’re looking for rollbacks, versioning changes, and ensuring that changes are applied in the correct order.\n\n\n\n\n\nWhile I’m happy with what I’ve built so far, it’s just the beginning for Go Eats. Stay tuned for more updates soon! \nI’d also love to hear your feedback. If you’ve had similar experiences or if you have thoughts on what you liked or disliked, or if you have suggestions for improvement, please share them in the comments.",
        "dc:creator": "Mukul Mantosh",
        "content": "As a language that emerged over 14 years ago, Go has many use cases. From web development, APIs, and CLIs to Wasm, cloud technologies, and even AI-powered tools, its applications are broad.&#160; The same goes for demo projects, which have countless variations and purposes! Now, wouldn’t it be great if there was a full-stack, API-oriented, [&#8230;]",
        "contentSnippet": "As a language that emerged over 14 years ago, Go has many use cases. From web development, APIs, and CLIs to Wasm, cloud technologies, and even AI-powered tools, its applications are broad.  The same goes for demo projects, which have countless variations and purposes! Now, wouldn’t it be great if there was a full-stack, API-oriented, […]",
        "guid": "https://blog.jetbrains.com/?post_type=go&p=520415",
        "categories": [
          "tutorials",
          "fullstack",
          "go",
          "goland",
          "react"
        ],
        "isoDate": "2024-11-04T09:53:17.000Z"
      },
      {
        "creator": "Anna Rovinskaia",
        "title": "New Livestream: Build GraphQL Services With Spring Boot Like Netflix",
        "link": "https://blog.jetbrains.com/idea/2024/11/new-livestream-java-22-and-intellij-ideanew-livestream/",
        "pubDate": "Mon, 04 Nov 2024 09:36:01 +0000",
        "content:encodedSnippet": "Join us for a new IntelliJ IDEA Livestream episode with Netflix Staff Engineer, Paul Bakker, to discover how Netflix implements GraphQL services with Spring Boot and the DGS framework.\nDate: November 14, 2024\nTime: 3:00–4:00 pm UTC\nREGISTER FOR THE LIVESTREAM\n\n\n\n\nSession abstract\nNetflix uses GraphQL and the DGS framework (recently fully integrated with Spring GraphQL) as their primary architecture. In this talk, you’ll learn everything you need to know to do the same. This talk is a deep dive into implementing GraphQL services with Spring Boot and the DGS framework. You’ll learn about GraphQL schemas and how to implement them. While we’ll spend some time on the fundamentals, the goal of the presentation is to look at more advanced scenarios you’ll run into, such as batch loading, nested data fetchers, error handling, threading and parallel data fetching, and testing. GraphQL services are great on their own, but things really get exciting when using GraphQL federation in a microservices ecosystem. That’s why we’ll also discuss federation and how to make your service work in a federated architecture!\n\n\n\n\nAsking questions\nPaul will try to answer all your questions during the session. If we run out of time, we’ll publish answers to any remaining questions in a follow-up blog post.\nYour speaker and host\nSpeaker\nPaul Bakker\nPaul is a Staff Engineer at Netflix on the Java Platform team, working on making the Netflix developer experience great. Besides his love for writing code, he has a passion for sharing knowledge. He has published two books with O’Reilly: Modular Cloud Apps with OSGi, published in 2013, and Java 9 Modularity, published in September 2017. Both books are about modularity in Java. Paul loves to speak at tech conferences, and he has presented at numerous conferences around the world about a wide variety of topics. He is active on X (formerly Twitter) as @pbakker.\nHost\nMala Gupta\n\nA Java Champion and JUG leader, Mala has authored multiple books with Manning, Packt, and O’Reilly Publications. She has more than two decades of experience in the software industry and is a regular speaker at industry conferences around the world. She is a vocal supporter of Java certification as a path to career advancement.\n\nHappy developing!",
        "dc:creator": "Anna Rovinskaia",
        "content": "Join us for a new IntelliJ IDEA Livestream episode with Netflix Staff Engineer, Paul Bakker, to discover how Netflix implements GraphQL services with Spring Boot and the DGS framework. Date: November 14, 2024 Time: 3:00–4:00 pm UTC REGISTER FOR THE LIVESTREAM Session abstract Netflix uses GraphQL and the DGS framework (recently fully integrated with Spring [&#8230;]",
        "contentSnippet": "Join us for a new IntelliJ IDEA Livestream episode with Netflix Staff Engineer, Paul Bakker, to discover how Netflix implements GraphQL services with Spring Boot and the DGS framework. Date: November 14, 2024 Time: 3:00–4:00 pm UTC REGISTER FOR THE LIVESTREAM Session abstract Netflix uses GraphQL and the DGS framework (recently fully integrated with Spring […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=519237",
        "categories": [
          "livestreams",
          "intellij-idea",
          "intellijidealivestream",
          "livestream",
          "webinars"
        ],
        "isoDate": "2024-11-04T09:36:01.000Z"
      },
      {
        "creator": "Tagir Valeev",
        "title": "In Memory of Stiver",
        "link": "https://blog.jetbrains.com/idea/2024/11/in-memory-of-stiver/",
        "pubDate": "Sat, 02 Nov 2024 13:24:18 +0000",
        "content:encodedSnippet": "On October 20, the original author of the Fernflower Java decompiler, Stiver, passed away after a long fight against glioblastoma. \nStiver was a German programmer of Russian origin, primarily developing software for medical equipment. Twenty years ago, he developed a deep professional interest in Java virtual machine internals. You may remember his research blog posts, like this one (in Russian) from 2006 about how to tweak the Java class hierarchy using Unsafe when Java 1.5 was just released. Around 2008, Stiver became fascinated by Java decompilation.\nThe Java decompilation landscape was very poor at that time. The first generation of decompilers like JAD or JODE came to an end. While Java as a language evolved, the existing decompilers were mainly unmaintained, which limited their usefulness. New language constructs like assertion statements, annotations, and generic types were not supported. Moreover, the deprecation of JSR/RET instructions in Java bytecode caused a significant difference in how try-finally blocks are compiled. The decompilers failed to handle the new bytecode.\nAnother big problem with existing decompilers was their approach to decompilation. They simply looked for specific bytecode patterns and translated them to the corresponding Java statements and expressions. While simple, this approach is fragile – any minor semantically equivalent change in generated bytecode made proper decompilation impossible. This severely limited the decompiler application.\nStiver decided to write his own decompiler as a side project. To overcome the weaknesses of existing alternatives, he took a different approach. After reading the bytecode, he constructed a control-flow graph in static single-assignment form, which is much better to express the program semantics abstracting the particular shape of bytecode. At the beginning of this project, Stiver knew little about static analysis and compiler design and had to learn a lot, but the effort was worth it. The resulting decompiler produced much better results than anything available at that time. It could even decompile the bytecode produced by some obfuscators without any explicit support.\nStiver did the main development himself between 2008 and 2010. The first public version became available in May 2009 as a web service. A user could upload an individual CLASS file or a whole JAR file and get the decompiled result. The decompiler quickly gained popularity – during the first four months, users decompiled more than half a million Java classes. There was no public standalone version, but Stiver sent it privately to a few Beta testers. After the release, Stiver made numerous improvements and fixed many bugs thanks to early adopters.\n\n\n\n\nAfter 2010, the active development of the decompiler stopped, as Stiver became busier with his primary job. A few third-party software vendors asked Stiver to provide the decompiler for their projects. Notably, it was used with permission in Mod Coder Pack, which is a toolkit for creating mods for the game Minecraft. Still, it became difficult for a regular Java user to find a working version of Fernflower.\nIn 2013, JetBrains approached Stiver with a suggestion to include Fernflower in IntelliJ IDEA. Part of the deal was making Fernflower open source. Everything went well, and the contract was signed. On July 11, 2014, the early access version of IntelliJ IDEA 14 was released, including the decompiler for the first time. You can still see the initial import of the Fernflower source code in the IntelliJ IDEA Git history, on March 4, 2014.\nWhile Stiver was never a JetBrains employee, he helped improve the decompiler for almost a year after the initial import. As Java 8 had just been released, it was necessary to support new language constructs like lambdas. Another big challenge was integrating the decompiler with the IntelliJ IDEA debugger. Line numbers in decompiled code differ from line numbers in the original source, and Stiver helped provide a transparent mapping between them so you can seamlessly debug decompiled code.\n\n\n\n\nAs Fernflower became open source, many other tools in the Java world used it – you can find a number of forks on GitHub. The Java team at JetBrains is constantly improving Fernflower, but it’s still mainly Stiver’s code. If Fernflower hadn’t existed, we likely would have had to invest substantial resources into developing our own decompiler. This could have resulted in IntelliJ IDEA lacking a decompiler or having one that was significantly less effective. Stiver’s work was a real game-changer for Java developers over the past 10 years. With no better alternative to decompile Java bytecode, his contributions have saved developers countless hours while debugging Java code without sources. \nThank you, Stiver! We are deeply saddened by the loss of such a brilliant pioneer whose work and dedication had such a lasting and profound impact.",
        "dc:creator": "Tagir Valeev",
        "content": "On October 20, the original author of the Fernflower Java decompiler, Stiver, passed away after a long fight against glioblastoma. Stiver was a German programmer of Russian origin, primarily developing software for medical equipment. Twenty years ago, he developed a deep professional interest in Java virtual machine internals. You may remember his research blog posts, [&#8230;]",
        "contentSnippet": "On October 20, the original author of the Fernflower Java decompiler, Stiver, passed away after a long fight against glioblastoma. Stiver was a German programmer of Russian origin, primarily developing software for medical equipment. Twenty years ago, he developed a deep professional interest in Java virtual machine internals. You may remember his research blog posts, […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=522796",
        "categories": [
          "compiler",
          "fernflower",
          "stiver"
        ],
        "isoDate": "2024-11-02T13:24:18.000Z"
      },
      {
        "creator": "Irina Mariasova",
        "title": "Top Java Blogs for Experienced Programmers ",
        "link": "https://blog.jetbrains.com/idea/2024/11/top-java-blogs-for-experienced-programmers/",
        "pubDate": "Fri, 01 Nov 2024 15:32:59 +0000",
        "content:encodedSnippet": "Following up on our previous article in which we shared some great multi-author blogs to follow, today we have a curated selection of personal blogs from top Java experts.\nThese experts aren’t just the best at what they do – they’re also great at sharing their knowledge in ways that are easy to understand and fun to read. By following these blogs, you will always be ahead of the game, learning the newest tricks, and loving every moment of it. \nHappy reading, and may your code always compile on the first try!\nJosh Long\n\n\n\n\nWhen it comes to Spring and Java, Josh Long needs no introduction. As the first Spring Developer Advocate and a Java Champion, Josh has built a rich repository of content that is suitable for developers of every level and features diverse formats for any learning style: \nBooks on Java, Spring, and reactive programming.\nLive tutorial videos for hands-on learning.\nConference schedules for attending sessions with Josh live.\nCoffee + Software and Spring Tips YouTube series for practical insights.\nA Bootiful Podcast for fascinating discussions on Java and Spring technology.\n\n\n\n\nArticles to start with: \nGo, Go, Modern Java in 2023!\nEasy and Secure Microservices with Spring Security and Auth0\nJava 21: Threads at Bargain Basement Prices!\nNicolas Fränkel\n\n\n\n\nNicolas Fränkel shares his deep knowledge of Java and software development through his blog. Having consulted for numerous industries – including telecoms, banking, insurance, and retail – he brings a wealth of real-world expertise to his writing. His technical focus is primarily on Java and Spring, Kotlin, Rust, rich internet applications, testing strategies, CI/CD, and DevOps practices. \nBut Nicolas doesn’t just write code – he shares his knowledge in many ways:\nClear, practical blog posts.\nPublished books. \nRegular talks at conferences.\n\n\n\n\nArticles to start with: \nKotlin Coroutines and OpenTelemetry tracing\nFixing duplicate API requests\nAPI versioning\nDonald Raab\n\n\n\n\nWant to learn from the creator of Eclipse Collections? Donald Raab is a Java Champion, blogger, and international conference speaker with over 40 years of programming experience. What’s in his tech toolbox? He writes a lot about Eclipse Collections (his famous Java library), JavaFX tips and tricks, and code quality and productivity secrets that actually work. \nHe is also the creator of the BNY Mellon Code Katas, designed to help developers practice their coding skills through problem-solving. His contributions to the Java community go beyond just technical innovations, as he’s played a key role as a JCP Executive Committee Representative. \nArticles to start with: \nMy first JavaFX application\nMy weird and wonderful first adventures with JavaFX\nOwn Your IDE\nAdam Bien \n\n\n\n\nRemember when Java was just version 1.0? Adam Bien was there, and he’s been shaping the Java ecosystem ever since. Adam isn’t your typical tech influencer – he’s a hands-on architect and developer who turns complex ideas into working proofs of concept, showing us what really works in Java SE, Jakarta EE, and MicroProfile development.\nHis no-nonsense approach to backend and frontend development is refreshing. As a Java Champion, AWS Hero, and author of several books, Adam’s credentials speak for themselves. His writing style is down-to-earth, humorous, and focused on helping developers “kill the bloat”. For practical, straightforward Java insights, Adam Bien’s blog is a must-read.\nArticles and podcasts to start with: \nJava 22 and 23 Features\nLate 2024 Conferences, Java User Groups (JUG), and Workshops\nJava, LLMs, and Seamless AI Integration with langchain4j, Quarkus, and MicroProfile\nVlad Mihalcea\n\n\n\n\nVlad Mihalcea, a Java Champion and outstanding developer, has dedicated years to perfecting the craft of high-performance coding. He literally wrote the book High-Performance Java Persistence, which is crushing it on Amazon’s bestseller list!\nFor over eleven years, Vlad’s been sharing valuable insights about Spring, JPA, and Hibernate in clear, practical ways. And when it comes to databases? If there was a database superhero, it would be Vlad. \nBut wait, there’s more! This isn’t just a blog, it’s a complete learning playground for developers:\nWant regular expert tips? Subscribe to his High-Performance Java Persistence Newsletter.\nReady to practice? Jump into his step-by-step tutorials conveniently organized by topics. \nWant to improve your skills? Try his courses. \nInterested in open source? Experiment with his Hypersistence Optimizer. \n\n\n\n\nArticles to start with: \nWhy and when you should use JPA\nA beginner’s guide to MongoDB performance turbocharging\nTestcontainers Database Integration Testing\nThorben Janssen\n\n\n\n\nThorben Janssen is a Java expert with over 15 years of experience using Hibernate and JPA in various projects, from fast-paced, small ones to large-scale applications. His blog focuses on sharing practical solutions to common Hibernate issues, drawing from his extensive knowledge.\nIn addition to his blog, Janssen manages The Persistence Hub, a platform offering premium video courses, expert sessions, and learning paths tailored to different skill levels. He also keeps developers up to date with the Java Persistence Newsletter. Janssen’s book, Hibernate Tips, and his workshops provide even more in-depth guidance for developers looking to master Java persistence.\nArticles to start with:\nHibernate Best Practices\nHibernate Performance Tuning – 2024 Edition\nJPQL – How to Define Queries in JPA and Hibernate\nNikolai Parlog\n\n\n\n\nNicolai Parlog, aka nipafx, is a passionate Java enthusiast who makes learning Java fun and accessible. His blog focuses on various Java versions and their key features. He explains Java concepts in simple terms and often adds a dash of humor, keeping his content engaging and relatable.\nHere’s what else you can find on his blog:\nHis book The Java Module System provides clear examples and intuitive diagrams, making even complex topics easy to grasp. \nHis talks from conferences. \nVideos with various tutorials.\nDemo projects related to his posts and videos, so you can try out the code and enhance your hands-on learning experience. \nHis Random Musings newsletter, where he writes about Java, content creation, sci-fi, LEGO, and more. \n\n\n\n\nArticles to start with: \nHow To Use switch In Modern Java\nJUnit 5 Basics: @Test, Lifecycle, Assertions, Assumptions, And More\nCode-First Java Module System Tutorial\nTrisha Gee\n\n\n\n\nTrisha Gee is a software engineer, Java Champion, and author. She was a Java advocate at JetBrains and now works as a Lead Developer Advocate at Gradle. Her passion for helping developers succeed shines through in everything she creates.\nTrisha is also a well-known speaker at international conferences, covering topics from Java and Spring to career advice on staying happy and productive in tech.\nHer work resonates within the community, particularly through her books and courses, such as Head First Java, Getting to Know IntelliJ IDEA, and 97 Things Every Java Developer Should Know. That makes you wonder – how can anyone think of 97 things? If you can name at least 10, you’re on the right track!\nArticles to start with:\nGradle Gradle Gradle, with Gradle we’re going to play\nAre Developer Productivity and Developer Joy opposites?\nFlaky tests are poisoning your productivity\nDaniel Ciocîrlan\n\n\n\n\nDaniel Ciocîrlan, the founder of Rock the JVM, turns complex Scala, Kotlin, and Java concepts into manageable, bite-sized chunks of information. No boring lectures here – just clear explanations that click!\nCheck out his blog posts when you want a deep dive, or hop over to his YouTube channel when you need to see code in action. \nArticles to start with:\nThe Big Kotlin Tutorial\nThe Ultimate Guide to Java Virtual Threads\nHTTP Authentication with Scala and Http4s\nHanno Embregts\n\n\n\n\nMeet Hanno Embregts, a Java Champion and Oracle ACE Pro who mixes code with creativity! When he’s not crafting Java solutions or speaking at conferences, you might find him jamming on his guitar or flute. \nHis blog is a well-organized playlist of Java knowledge, sorted by year so you can easily find your favorite tracks! From fresh Java features to battle-tested best practices, Hanno shares stories from his journey as a developer, consultant, and educator.\nThere is also a special section for his talks at Java events that include his keynotes. \nHis blog offers both technical expertise and a personal touch, connecting with readers on multiple levels.\nArticles to start with:\nJava 23 Has Arrived, And It Brings a Truckload of Changes\nJava 22 Is Here, And It’s Ready To Rock\nJava 21 is Available Today, And It’s Quite the Update\nMarit van Dijk\n\n\n\n\nMarit van Dijk, a Java Champion and a JetBrains Developer Advocate, has been in software development for more than 20 years. \nWhat’s in Marit’s tech toolbox? There’s Java (she’s a Champion for a reason), Kotlin with all of the modern tricks, Git for mastering version control, dependency management to keep projects clean, and insider tips on IntelliJ IDEA from someone who knows it inside out.\nOn her blog, you’ll find clear tutorials that simplify complex topics, testing tips that actually work, blog posts solving real problems, and helpful videos for when you’d rather watch than read.\nHer blog keeps track of where she’ll be speaking next, from tech conferences to webinars, and is perfect for catching her live presentations or saying hi at events!\nArticles to start with:\nReading Code like a pro\nTips for reading code\nPair programming in Java with an 8 year old\nSebastian Daschner\n\n\n\n\nSebastian Daschner’s blog focuses on Java, cloud-native technologies, and enterprise software development. As a consultant, trainer, and developer, he’s dedicated to making software development more effective and enjoyable by explaining not just how concepts work but why they matter. A Java Champion and Oracle Developer Champion, Sebastian shares insights on topics like Kubernetes, Quarkus, Docker, and developer productivity. \nOn his blog, you can find your own learning adventure:\nBlog posts.\nVideo courses. \nA regular Java tips newsletter.\nHis YouTube channel. \nPodcasts for learning on the go.\n\n\n\n\nArticles to start with:\n13 Cool IntelliJ Features (You Probably Didn’t Know)\nHow to Become Better at the Keyboard\nEffective Developer Workflows With Quarkus\nTom Cools\n\n\n\n\nTom Cools’ blog is basically a handbook of lessons learned from the ever-changing world of IT because, let’s face it, you never stop learning in this field! As a Java consultant, licensed high school teacher, trainer, and mentor, Tom doesn’t just focus on code but on keeping the learning going, whether he’s sharing advice online or in the classroom.\nHis main topics cover Java, tips on learning programming, presentation skills, and more, making his blog a go-to resource for anyone looking to level up their IT game.\nHe runs the Belgian Java User Group and organizes monthly meetups where Java enthusiasts gather to geek out.\nIf you’d love to hear more from him, you’re in luck – he’s a regular at conferences. Head over to his Talks page for the full lineup of where he’s speaking next.\nArticles to start with:\nJava related things I want to see more of in 2023\nUse Testcontainers to create a Docker Test Image\nJumping into Kotlin\nHolly Cummins\n\n\n\n\nHolly Cummins, a Senior Principal Software Engineer on the Red Hat Quarkus team, brings a wealth of experience and a knack for innovation to the Java community. Her journey from IBM, where she wore multiple hats, including full-stack JavaScript developer, WebSphere Liberty build architect, and innovation leader in the IBM Garage, is just the start. Holly has worked with tech at all scales, from startups to banking giants, and even used cloud power for some cool projects like guiding a blind athlete through ultra-marathons and tackling climate risks.\nHer blog is the perfect mix of tech and thrill, diving into AI, Quarkus, and Java with a playful edge. She’s all about making software development not just doable, but fun.\nArticles to start with:\nZombie Menace, Vampire Peril\nWill Generative AI Kill Developer Jobs\nIs Efficiency A Good Thing? Part I: What is Efficiency, and Are We Any Good At It?\nMarco Behler\n\n\n\n\nMarco Behler’s blog is where Java developers find complex topics made simple and fun. Marco breaks down tricky Java and JVM concepts into easy-to-follow guides and courses, helping developers save time and frustration while getting better at their craft.\nCurrently working as a product manager at JetBrains, Marco has a background in running his own consultancy in Munich and working with big companies like BMW. His love for coding started at a young age – back in school when a friend handed him a CD full of hacking tools. From those early days of cracking code to now giving Java and Spring training across Germany, Austria, and Switzerland, Marco shares his passion through his blog, making it a must-visit for any developer wanting a fresh, engaging take on programming.\nArticles to start with:\nJava & Databases: An Overview of Libraries & APIs\nJava Microservices: A Practical Guide\nWhat is Kubernetes? An Unorthodox Guide for Developers\nSiva Labs\n\n\n\n\nSiva Katamreddy’s blog is for anyone passionate about Java, microservices, and cloud-native development. With over 18 years of experience as a software engineer, Siva dives deep into topics like building scalable applications using Java, Kotlin, Spring Boot, and GoLang. His hands-on expertise extends to microservices, event-driven systems using Kafka and AWS SQS, and infrastructure automation with tools like Jenkins and Terraform.\nSiva’s blog doesn’t just stick to written content – he also shares video tutorials via his YouTube channel, making complex topics accessible for developers of any level. \nArticles to start with:\nGetting Started with Spring Boot\nSpring Boot REST API Best Practices – Part 1\nSpringBoot Best Practices\nIonut Balosin\n\n\n\n\nEver wondered what it takes to build high-performance, scalable, and resilient Java applications? Look no further than Ionut Balosin’s blog. A software architect with over 15 years of hands-on experience in software development across various business applications, Ionut shares his deep technical knowledge in a way that’s both practical and engaging. As an Oracle ACE Associate, security champion, and frequent speaker at major software development conferences, he knows what it takes to create production-ready systems.\nOn his blog, you’ll find trending articles and updates on where you can catch his next live talk. If you’re into practical, real-world insights on building robust applications, this blog is a must-follow. Who knows, you might even book him for a training session after exploring his compelling content!\nArticles to start with:\nJVM Performance Comparison for JDK 21\nLogging patterns and their performance impact\nJVM Performance Comparison for JDK 17\nSummary\nIn this article, we’ve curated a list of top personal blogs from some of the most influential Java experts out there. From JVM performance tuning to real-life software architecture lessons, these authors bring their years of experience straight to your screen. Whether you’re interested in hands-on tutorials, conference talks, or exploring the cutting-edge corners of Java, there’s something here for every developer.\nWho do you follow? Are there any Java gurus or blogs you swear by? Drop their names in the comments and let’s expand the list!",
        "dc:creator": "Irina Mariasova",
        "content": "Following up on our previous article in which we shared some great multi-author blogs to follow, today we have a curated selection of personal blogs from top Java experts. These experts aren’t just the best at what they do – they’re also great at sharing their knowledge in ways that are easy to understand and [&#8230;]",
        "contentSnippet": "Following up on our previous article in which we shared some great multi-author blogs to follow, today we have a curated selection of personal blogs from top Java experts. These experts aren’t just the best at what they do – they’re also great at sharing their knowledge in ways that are easy to understand and […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=522727",
        "categories": [
          "coding",
          "community",
          "idea",
          "java",
          "tutorials",
          "experts",
          "tips-tricks"
        ],
        "isoDate": "2024-11-01T15:32:59.000Z"
      },
      {
        "creator": "Maria Sharobaeva",
        "title": "JetBrains Academy – October Digest",
        "link": "https://blog.jetbrains.com/education/2024/10/31/jetbrains-academy-october-digest-2/",
        "pubDate": "Thu, 31 Oct 2024 16:42:11 +0000",
        "content:encodedSnippet": "We’ve got Halloween updates just for you!\nThe JetBrains Academy team has brewed up a cauldron of October goodies, including new events, webinars, Git videos, courses, and contests for students with spooktacular prizes!🎃\nBoost Your Tech Skills\nMaster the Magic of Git\nGit skills are essential! Watch our videos to see how Git has transformed programming and learn to use it in an IDE.\nWatch the Videos\n                                                    \nKotlin Developer Program\nJoin this 7-month Hyperskill and JetBrains career program to get dedicated mentorship, hands-on experience with professional tools, essential theory, and practical skills. Plus, you’ll receive expert guidance on your CV and tech interview prep!\nEnroll Now\n                                                    \nBoost Your Career in Tech\nWith over 90 hands-on courses, JetBrains Academy helps you improve your CV, build a standout portfolio, and ace IT interviews! Choose your track and start learning.\nGet Started \n                                                    \nStudent Contests\nYouth Challenge Is Back\nDon’t miss your chance to participate in the JetBrains Academy Youth Challenge and win exciting prizes! Registration is open until November 18. If you’re between 13 and 18 and currently enrolled in secondary school, this is your moment to shine.\nRegister Now\n                                                    \nKotlin Multiplatform Contest \nStudents and recent grads, showcase your coding skills in our Kotlin Multiplatform Contest! Build a cross-platform project for the chance to win a trip to KotlinConf 2025 in Copenhagen, Denmark.\nLearn More\n                                                    \nEvents \nJetBrains Academy at EDUtech Asia 2024 Singapore\nMeet up with JetBrains Academy at EDUtech Asia 2024 in Singapore on November 6–7. Stop by Booth D40 to talk with us about learning and teaching computer science with JetBrains Academy, grab some swag, or just say hi!\nRegister Now\n                                                    \n [Recording] C++ Online Coding Workshop\nTune in to our C++ coding workshop to learn how to implement game logic, compare memory management in C and C++, and preview our free C++ Basics course where you will code your own game!\nWatch Now\n                                                    \n[Recording] Bachelor’s in Computer Science and AI\nMissed the live session about the Neapolis University Pafos Computer Science and Artificial Intelligence program? No worries – the recording is available! Watch it to learn about program courses, scholarships, and internship opportunities.\nWatch Now",
        "dc:creator": "Maria Sharobaeva",
        "content": "We’ve got Halloween updates just for you! The JetBrains Academy team has brewed up a cauldron of October goodies, including new events, webinars, Git videos, courses, and contests for students with spooktacular prizes!🎃",
        "contentSnippet": "We’ve got Halloween updates just for you! The JetBrains Academy team has brewed up a cauldron of October goodies, including new events, webinars, Git videos, courses, and contests for students with spooktacular prizes!🎃",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=522489",
        "categories": [
          "digest",
          "jetbrains-academy",
          "newsletter"
        ],
        "isoDate": "2024-10-31T16:42:11.000Z"
      }
    ]
  },
  {
    "name": "Airbnb Engineering & Data Science",
    "category": "기업",
    "posts": []
  },
  {
    "name": "PayPal Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Rhea Patel",
        "title": "Introducing a new, more conversational way to chat with GitHub Copilot",
        "link": "https://devblogs.microsoft.com/visualstudio/conversational-way-to-chat-with-github-copilot/",
        "pubDate": "Wed, 06 Nov 2024 16:46:22 +0000",
        "content:encodedSnippet": "In the fast-evolving world of software development, intuitive AI-driven interactions are becoming essential to unlocking new levels of productivity. Today, we’re excited to share our latest innovation – a guided chat experience within GitHub Copilot that reshapes how developers interact with AI. This guided chat experience is available in Visual Studio 2022 17.12 Preview 3 and above.\nThis guided way to chat was created with one clear goal in mind: to make interactions between developers and AI more natural, effective, and aligned with everyday workflows. It is our deep belief that conversational AI is the future of development, and we’re committed to leading that transformation.\nMaking Copilot Conversations Smarter and Simpler\nAs we’ve refined GitHub Copilot, one thing has become clear: while users appreciate the potential of AI-driven tools, there’s a learning curve. Developers have shared that crafting the right prompt can sometimes feel like a challenge—understanding how to phrase a question, knowing what context to include, and making the most of Copilot’s capabilities. In some cases, the experience left users feeling like they were getting too much or too little from their interactions.\nCustomer feedback highlights the challenge:\n“The chat experience is helpful, but I wish it felt more like an assistant—something that could help guide me and give me only what I need without extra noise.”\n“I love how Copilot just starts generating, but it sometimes feels like I have to sift through a lot to get to what I actually wanted.”\nThese insights inspired us to rethink how AI should work for developers. Rather than relying only on intent-based commands or predefined prompts, this chat allows for a more fluid, conversational experience—one that adapts to the user’s context and needs.\nHow does this work? \nOur guided chat experience takes Copilot beyond simple input-output exchanges, turning it into a collaborative assistant. When the context is clear, Copilot provides direct and relevant answers. When it isn’t, Copilot guides you by asking follow-up questions to ensure clarity and precision.\n\nThe implications are significant:\nMore Engagement: Developers spend less time figuring out how to phrase their prompts and more time focused on the task at hand.\nLess Complexity: Copilot’s ability to guide and clarify reduces the need for developers to navigate complex intent systems.\nIncreased Productivity: With less back-and-forth and more focused responses, developers can move faster through their workflows.\nIn our early trials, we’ve seen encouraging signs that Guided Chat makes a real difference. So we are excited for you all to try it out.\nAs we continue refining this guided way to chat, user feedback and engagement will be at the center of our improvements, ensuring that it delivers the intelligent and seamless experience developers need.\nThank you for your continuous feedback\nWe owe much of our progress to our users’ invaluable feedback. Your insights and suggestions have been instrumental in making Visual Studio better with each update. We appreciate your continuous support and look forward to bringing you more innovative features.\nThe post Introducing a new, more conversational way to chat with GitHub Copilot appeared first on Visual Studio Blog.",
        "dc:creator": "Rhea Patel",
        "content": "<p>In the fast-evolving world of software development, intuitive AI-driven interactions are becoming essential to unlocking new levels of productivity. Today, we’re excited to share our latest innovation &#8211; a guided chat experience within GitHub Copilot that reshapes how developers interact with AI. This guided chat experience is available in Visual Studio 2022 17.12 Preview 3 [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/conversational-way-to-chat-with-github-copilot/\">Introducing a new, more conversational way to chat with GitHub Copilot</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "In the fast-evolving world of software development, intuitive AI-driven interactions are becoming essential to unlocking new levels of productivity. Today, we’re excited to share our latest innovation – a guided chat experience within GitHub Copilot that reshapes how developers interact with AI. This guided chat experience is available in Visual Studio 2022 17.12 Preview 3 […]\nThe post Introducing a new, more conversational way to chat with GitHub Copilot appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=251224",
        "categories": [
          "Artificial Intelligence",
          "Copilot",
          "GitHub Copilot",
          "Visual Studio",
          "Conversational AI",
          "GitHub Copilot Chat"
        ],
        "isoDate": "2024-11-06T16:46:22.000Z"
      },
      {
        "creator": "Pablo Lopes",
        "title": "Learn how to create a Client-Server Application in under 45 Minutes in the new Season of AI",
        "link": "https://devblogs.microsoft.com/visualstudio/learn-how-to-create-a-client-server-application-in-under-45-minutes-in-the-new-season-of-ai/",
        "pubDate": "Tue, 05 Nov 2024 17:03:32 +0000",
        "content:encodedSnippet": "What if you could create a robust, versatile client-server application in under 45 minutes? With Visual Studio and GitHub Copilot, this is not only possible but also efficient and enjoyable. This Season of AI, we show you how to use developer tools like GitHub Copilot to create apps from scratch. This season of AI occurs from October 1 through December 30, 2024, and the first 150 speakers with confirmed events will receive a special swag gift pack!\nYou will experience firsthand how to:\n– Develop both server-side and client-side code using .NET, Blazor, and Minimal APIs.\n– Run and test your application locally with the Azurite storage emulator.\n– Deploy your application to Azure using an automated CI/CD pipeline with GitHub actions.\nWhether you’re enhancing the number of users of your app, making your app more reliable, or striving to iterate quicker, dive in and leverage the capabilities of Visual Studio and GitHub Copilot to transform your development workflow.\nLearn how to use Copilot in Visual Studio\nLearn how to use the commands in Visual Studio for Copilot, inline suggestions, and Copilot Chat. Understand the difference between them and use them to quickly create our Blazor frontend and our ASP.NET API Backend, plus create connections for our application to be deployed on Azure using Azure Table storage and WebApp services, lastly adding CI/CD to our project using GitHub Actions.\nFor this exciting session, we will also guide you through building a simple yet complete Car Database application. This application will retrieve the Car database from Azure Tables and display the data in a user-friendly Web App for everyone to view.\n\nFollow the GitHub tutorial guide\n\nLearn how to do this and more in our guide to our Season of AI! There are also more talks ready to be given in the main repository, where you can everything about Copilots and AI. Check them all and organize an event with this content at aka.ms/RegisterSeasonOfAI and enjoy this Season of AI!\nThe post Learn how to create a Client-Server Application in under 45 Minutes in the new Season of AI appeared first on Visual Studio Blog.",
        "dc:creator": "Pablo Lopes",
        "content": "<p>What if you could create a robust, versatile client-server application in under 45 minutes? With Visual Studio and GitHub Copilot, this is not only possible but also efficient and enjoyable. This Season of AI, we show you how to use developer tools like GitHub Copilot to create apps from scratch. This season of AI occurs [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/learn-how-to-create-a-client-server-application-in-under-45-minutes-in-the-new-season-of-ai/\">Learn how to create a Client-Server Application in under 45 Minutes in the new Season of AI</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "What if you could create a robust, versatile client-server application in under 45 minutes? With Visual Studio and GitHub Copilot, this is not only possible but also efficient and enjoyable. This Season of AI, we show you how to use developer tools like GitHub Copilot to create apps from scratch. This season of AI occurs […]\nThe post Learn how to create a Client-Server Application in under 45 Minutes in the new Season of AI appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=251211",
        "categories": [
          "Artificial Intelligence",
          "Azure",
          "Copilot",
          "Web",
          ".NET",
          "ASP.NET",
          "Blazor",
          "GitHub"
        ],
        "isoDate": "2024-11-05T17:03:32.000Z"
      },
      {
        "creator": "Marco Goertz",
        "title": "The making of Bring Back Plus/Minus",
        "link": "https://devblogs.microsoft.com/visualstudio/the-making-of-bring-back-plus-minus/",
        "pubDate": "Mon, 04 Nov 2024 15:41:35 +0000",
        "content:encodedSnippet": "A lesson about the software forensics process involved in developing the Bring Back Plus/Minus extension, which brings back the plus/minus symbols to the editor outlining feature in Visual Studio 2022.\nWhile I did have the advantage of being able to look at the Visual Studio source code, I could have figured this out just as well without it, and that’s the focus of this article.\nThe investigation of how to bring back the plus/minus symbols started with this important clue from a comment on the Developer Community feedback ticket for this issue:\nHowever, Visual Studio has a very rich extensibility model, and if users have strong feelings about the visuals in their IDE, I encourage people to try writing an extension to change the icon used here. The class that controls the expansion is this one: OutliningMarginHeaderControl\n\nA quick internet search for the class name led me to this reference article for OutliningMarginHeaderControl Class where the definition contains the following valuable information:\nNamespace: Microsoft.VisualStudio.Text.Editor\nAssembly: Microsoft.VisualStudio.Text.UI.Wpf.dll\nPackage: Microsoft.VisualStudio.Text.UI.Wpf v17.9.187\nNow that we know where to find this class, it’s time to examine the assembly. For that we will use the excellent ILSpy tool, which you can install from the Microsoft Store: ILSpy Fresh\nOnce you’ve installed ILSpy, launch it and load the assembly Microsoft.VisualStudio.Text.UI.Wpf.dll. You can find this assembly in the Visual Studio installation folder, usually in the following path:\n<VSInstallDir>\\Common7\\IDE\\CommonExtensions\\Microsoft\\Editor\\Microsoft.VisualStudio.Text.UI.Wpf.dll\nAfter the assembly is loaded, search for the class OutliningMarginHeaderControl in the Microsoft.VisualStudio.Text.Editor namespace and you will find the following code for the static constructor:\n\nThis is where the default style key for the control is being set. The next step is to find the XAML Style for the control. For that we open the Resources node where we find themes/generic.baml, which includes the entire style for the OutliningMarginHeaderControl:\n\n\r\n<Style x:Key=\"{x:Type textUiWpf:OutliningMarginHeaderControl}\" TargetType=\"{x:Type textUiWpf:OutliningMarginHeaderControl}\">\r\n    <Style.Resources> \r\n      <ResourceDictionary> \r\n        <Geometry x:Key=\"ExpandRight\">F1M2.146.146a.5.5,0,0,1,.708,0l4,4a.5.5,0,0,1,0,.708l-4,4a.5.5,0,0,1-.708-.708L5.793,4.5,2.146.854A.5.5,0,0,1,2.146.146Z</Geometry> \r\n        <Geometry x:Key=\"ExpandDown\">F1M8.854,2.146a.5.5,0,0,1,0,.708l-4,4a.5.5,0,0,1-.708,0l-4-4a.5.5,0,0,1,.708-.708L4.5,5.793,8.146,2.146A.5.5,0,0,1,8.854,2.146Z</Geometry> \r\n      </ResourceDictionary> \r\n    </Style.Resources> \r\n    <Setter Property=\"Focusable\" Value=\"False\" /> \r\n    <Setter Property=\"FrameworkElement.Cursor\" Value=\"Hand\" /> \r\n    <Setter Property=\"Template\"> \r\n      <Setter.Value> \r\n        <ControlTemplate TargetType=\"{x:Type textUiWpf:OutliningMarginHeaderControl}\"> \r\n          <Grid> \r\n            <Viewbox Name=\"ExpandCollapseIcon\" Width=\"9\" Height=\"13\" VerticalAlignment=\"Center\"> \r\n              <Border Width=\"9\" Height=\"13\" Background=\"{DynamicResource outlining.chevron.background}\"> \r\n                <Rectangle Name=\"ExpandCollapseRectangle\" Width=\"9\" Height=\"9\"> \r\n                  <FrameworkElement.Resources> \r\n                    <ResourceDictionary> \r\n                      <SolidColorBrush x:Key=\"canvas\" Opacity=\"0\" /> \r\n                    </ResourceDictionary> \r\n                  </FrameworkElement.Resources> \r\n                  <Shape.Fill> \r\n                    <DrawingBrush Stretch=\"None\"> \r\n                      <DrawingBrush.Drawing> \r\n                        <DrawingGroup> \r\n                          <DrawingGroup> \r\n                            <GeometryDrawing Brush=\"{DynamicResource canvas}\" Geometry=\"F1 M9,0 L9,9 L0,9 L0,0\" /> \r\n                          </DrawingGroup> \r\n                          <DrawingGroup> \r\n                            <GeometryDrawing Brush=\"{DynamicResource outlining.chevron.foreground}\" Geometry=\"{StaticResource ExpandRight}\" /> \r\n                          </DrawingGroup> \r\n                        </DrawingGroup> \r\n                      </DrawingBrush.Drawing> \r\n                    </DrawingBrush> \r\n                  </Shape.Fill> \r\n                </Rectangle> \r\n              </Border> \r\n            </Viewbox> \r\n          </Grid> \r\n          <ControlTemplate.Triggers> \r\n            <Trigger Property=\"textUiWpf:OutliningMarginHeaderControl.IsExpanded\" Value=\"True\"> \r\n              <Setter TargetName=\"ExpandCollapseRectangle\" Property=\"Shape.Fill\"> \r\n                <Setter.Value> \r\n                  <DrawingBrush Stretch=\"None\"> \r\n                    <DrawingBrush.Drawing> \r\n                      <DrawingGroup> \r\n                        <DrawingGroup> \r\n                          <GeometryDrawing Brush=\"{DynamicResource canvas}\" Geometry=\"F1 M9,0 L9,9 L0,9 L0,0\" /> \r\n                        </DrawingGroup> \r\n                        <DrawingGroup> \r\n                          <GeometryDrawing Brush=\"{DynamicResource outlining.chevron.foreground}\" Geometry=\"{StaticResource ExpandDown}\" /> \r\n                        </DrawingGroup> \r\n                      </DrawingGroup> \r\n                    </DrawingBrush.Drawing> \r\n                  </DrawingBrush> \r\n                </Setter.Value> \r\n              </Setter> \r\n            </Trigger> \r\n          </ControlTemplate.Triggers> \r\n        </ControlTemplate> \r\n      </Setter.Value> \r\n    </Setter> \r\n</Style> \r\n\nThis is the style for the new chevron symbols. Here we find interesting things like the geometry for the expand/collapse symbols, the colors, and the trigger that changes the symbol when the control is expanded. The next step is to find the original Style for the plus/minus symbols. For that we can either use an older VS installation or we can take advantage of the reference information above, which states that this control is included in the Microsoft.VisualStudio.Text.UI.Wpf v17.9.187 NuGet package. Now we know that the symbols changed in 17.9, so we will look for a version before that. For example, the last one before that is 17.8.222.\nWe can download the package, change its extension from .nupkg to .zip, and extract the assembly from the lib\\net472 folder. Once we have the assembly, we can load it in ILSpy and look for the original style for the control just like we did before:\n\r\n<Style x:Key=\"{x:Type textUiWpf:OutliningMarginHeaderControl}\" TargetType=\"{x:Type textUiWpf:OutliningMarginHeaderControl}\">\r\n\t<Setter Property=\"Focusable\" Value=\"False\" />\r\n\t<Setter Property=\"Template\">\r\n\t\t<Setter.Value>\r\n\t\t\t<ControlTemplate TargetType=\"{x:Type textUiWpf:OutliningMarginHeaderControl}\">\r\n\t\t\t\t<Grid>\r\n\t\t\t\t\t<Border Name=\"WhitePadding\" Height=\"11\" Width=\"9\" BorderBrush=\"{DynamicResource ViewBackgroundBrush}\" Background=\"{DynamicResource ViewBackgroundBrush}\" BorderThickness=\"0,1,0,1\" VerticalAlignment=\"Center\">\r\n\t\t\t\t\t\t<Border Name=\"TheSquare\" Height=\"9\" Width=\"9\" BorderBrush=\"{DynamicResource outlining.verticalrule.foreground}\" Background=\"{DynamicResource outlining.square.background}\" BorderThickness=\"1\">\r\n\t\t\t\t\t\t\t<Canvas>\r\n\t\t\t\t\t\t\t\t<Line X1=\"1\" Y1=\"3.5\" X2=\"6\" Y2=\"3.5\" Stroke=\"{DynamicResource outlining.square.foreground}\" />\r\n\t\t\t\t\t\t\t\t<Line Name=\"Vertical\" X1=\"3.5\" Y1=\"1\" X2=\"3.5\" Y2=\"6\" Stroke=\"{DynamicResource outlining.square.foreground}\" />\r\n\t\t\t\t\t\t\t</Canvas>\r\n\t\t\t\t\t\t</Border>\r\n\t\t\t\t\t</Border>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<ControlTemplate.Triggers>\r\n\t\t\t\t\t<Trigger Property=\"textUiWpf:OutliningMarginHeaderControl.IsExpanded\" Value=\"True\">\r\n\t\t\t\t\t\t<Setter TargetName=\"Vertical\" Property=\"Visibility\" Value=\"Hidden\" />\r\n\t\t\t\t\t\t<Setter TargetName=\"TheSquare\" Value=\"{DynamicResource ViewBackgroundBrush}\" Property=\"Border.Background\" />\r\n\t\t\t\t\t</Trigger>\r\n\t\t\t\t</ControlTemplate.Triggers>\r\n\t\t\t</ControlTemplate>\r\n\t\t</Setter.Value>\r\n\t</Setter>\r\n</Style>\r\n\nSince the new style no longer uses dynamic resources for outlining.square, we must assume that these resources are no longer available in the new version of VS. This means that we needed to replace these resources with other colors. For the foreground outlining.chevron.foreground made sense. The background was a little bit harder because outlining.chevron.background didn’t do anything. With a little experimenting I had settled on outlining.collapsehintadornment.background for the first version of the extension. Both were not ideal or what they used to be – the chevron foreground is quite a bit darker and the background for the plus symbol is a lot lighter than before, but this combination worked in both light and dark themes, and any other existing color resources would look wrong in one theme or another.\nHow to build a VSIX extension to override the style\nTo override the style, I started by creating a new VSIX project with an async package:\n\nThen I added a new ResourceDictionary file Style.xaml to the project and copied the style from the old assembly, pasted it into the ResourceDictionary, and updated it with the new color resource value. Make sure that the Build Action for this Style.xaml is set to Page. I also gave this style a key x:Key=\"OriginalOutliningMarginHeaderControlStyle\", so that I can easily look it up later:\n\r\n<ResourceDictionary\r\n\txmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n\txmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n\txmlns:textUiWpf=\"clr-namespace:Microsoft.VisualStudio.Text.Editor;assembly=Microsoft.VisualStudio.Text.UI.Wpf\">\r\n\t<Style x:Key=\"OriginalOutliningMarginHeaderControlStyle\" TargetType=\"textUiWpf:OutliningMarginHeaderControl\">\r\n\t\t...\r\n\nThe last thing that needed to be done was to override the style in the InitializeAsync method of the package. The following code loads the resource dictionary, looks up the style by its key, and places it in the current application’s resources using the implicit style key typeof(OutliningMarginHeaderControl), so that Visual Studio will find this Style first:\n\r\nprotected override async Task InitializeAsync(CancellationToken cancellationToken, IProgress progress) \r\n{ \r\n\t// When initialized asynchronously, the current thread may be a background thread at this point. \r\n\t// Do any initialization that requires the UI thread after switching to the UI thread. \r\n\tawait this.JoinableTaskFactory.SwitchToMainThreadAsync(cancellationToken); \r\n\tvar resourceDictionary = new ResourceDictionary(); \r\n\tresourceDictionary.Source = new Uri(\"pack://application:,,,/BringBackPlusMinus;component/Style.xaml\"); \r\n\tvar style = resourceDictionary[\"OriginalOutliningMarginHeaderControlStyle\"]; \r\n\tApplication.Current.Resources[typeof(OutliningMarginHeaderControl)] = style; \r\n}\r\n\nBuilding and running the project launched the experimental instance of Visual Studio and voila – the plus/minus symbols were back!\nNow all that was left to do was to update the vsixmanifest, build the extension in Release mode, and upload it to the Visual Studio Marketplace following this Walkthrough: Publish a Visual Studio extension.\nAdding support for color customization\nWhen I started using the preview builds of Visual Studio 2022 17.12, I noticed that the rendering of the plus/minus symbols was broken because the chevron symbol color definition had changed. I decided to introduce a dedicated color definition for the plus/minus symbols to avoid such problems going forward:\n\r\n[Export(typeof(EditorFormatDefinition))] \r\n[Name(OutliningExpanderIdentifier)] \r\n[UserVisible(true)] \r\ninternal sealed class OutliningExpanderFormatDefinition : EditorFormatDefinition \r\n{ \r\n\tpublic const string OutliningExpanderIdentifier = \"outlining.plusminus\"; \r\n\tpublic OutliningExpanderFormatDefinition() \r\n\t{ \r\n\t\tthis.ForegroundColor = Color.FromRgb(0x55, 0x55, 0x55); \r\n\t\tthis.BackgroundColor = Color.FromRgb(0xE2, 0xE2, 0xE2); \r\n\t\tthis.DisplayName = Strings.OutliningMarginPlusMinus; \r\n\t} \r\n}\r\n\nAs an added benefit the colors are now consistent with the original plus/minus symbols, and they can be customized in Tools -> Options -> Environment -> Fonts and Colors:\n\nTo make sure that the colors look correct in the dark theme as well, I added a ThemeColors.xml file to the project with the following content:\n\r\n<Themes> \r\n\t<Theme Name=\"Dark\" GUID=\"{1ded0138-47ce-435e-84ef-9ec1f439b749}\"> \r\n\t\t<Category Name=\"BringBackPlusMinus\" GUID=\"{063E9575-C1A8-4729-BB15-AAA2EFB44FC0}\"> \r\n\t\t\t<Color Name=\"outlining.plusminus\"> \r\n\t\t\t\t<Background Type=\"CT_RAW\" Source=\"FF000000\" /> \r\n\t\t\t\t<Foreground Type=\"CT_RAW\" Source=\"FFE2E2E2\" /> \r\n\t\t\t</Color> \r\n\t\t</Category> \r\n\t</Theme> \r\n</Themes>\r\n\nIt needs to be converted to a .pkgdef file using the VsixColorCompiler first, which is then included in the extension’s .vsixmanifest.\nConclusion\nIn summary, with a little bit of detective work we were able to locate the style for the outlining symbols, build a VSIX extension, and override the style with the original style that brings back the original plus/minus outlining buttons.\nThe source code for the extension is available on GitHub.\nThe post The making of Bring Back Plus/Minus appeared first on Visual Studio Blog.",
        "dc:creator": "Marco Goertz",
        "content": "<p>A lesson about the software forensics process involved in developing the Bring Back Plus/Minus extension, which brings back the plus/minus symbols to the editor outlining feature in Visual Studio 2022. While I did have the advantage of being able to look at the Visual Studio source code, I could have figured this out just as well without [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/the-making-of-bring-back-plus-minus/\">The making of Bring Back Plus/Minus</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "A lesson about the software forensics process involved in developing the Bring Back Plus/Minus extension, which brings back the plus/minus symbols to the editor outlining feature in Visual Studio 2022. While I did have the advantage of being able to look at the Visual Studio source code, I could have figured this out just as well without […]\nThe post The making of Bring Back Plus/Minus appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=250989",
        "categories": [
          "Extensibility",
          "Visual Studio",
          "Extensions",
          "Feedback",
          "story"
        ],
        "isoDate": "2024-11-04T15:41:35.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김범진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권영재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권혁우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김준형",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": [
      {
        "title": "Kotlin 객체 생성의 안전성과 유효성 강화하기",
        "link": "https://cheese10yun.github.io/kotlin-pattern-2/",
        "pubDate": "2024-11-01T15:00:00.000Z",
        "content": "<p>코틀린에서 객체 생성과 값 타입 관리의 안전성을 강화하는 다양한 방법에 대해 알아보겠습니다. 이번 포스팅에서는 <code>User</code>라는 엔티티 클래스를 예로 들어 생성자 제약 사항을 안전하게 처리하는 방법과, <code>value class</code>를 활용해 값 타입을 효율적으로 관리하는 방법에 대해 설명하겠습니다.</p><h2><span id=\"기존-생성자-코드의-문제점\">기존 생성자 코드의 문제점</span></h2><p>아래는 간단한 <code>User</code> 클래스입니다. 이 클래스는 JPA 엔티티로 정의되어 있으며, 데이터베이스와 매핑되는 사용자 정보를 나타냅니다.</p><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Entity(name = <span class=\"meta-string\">\"user\"</span>)</span></span><br><span class=\"line\"><span class=\"meta\">@Table(name = <span class=\"meta-string\">\"user\"</span>)</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span></span>(</span><br><span class=\"line\">    <span class=\"meta\">@Id</span></span><br><span class=\"line\">    <span class=\"meta\">@GeneratedValue(strategy = GenerationType.IDENTITY)</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> id: <span class=\"built_in\">Long</span>? = <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: String,</span><br><span class=\"line\">    <span class=\"keyword\">val</span> email: String,</span><br><span class=\"line\">    <span class=\"meta\">@Enumerated(EnumType.STRING)</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> stats: UserStats</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure><p>위 코드를 보면 객체 생성 시 다음과 같은 문제가 발생할 수 있습니다:</p><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 잘못된 객체 생성 예시</span></span><br><span class=\"line\"><span class=\"keyword\">val</span> user = User(</span><br><span class=\"line\">    id = <span class=\"number\">1</span>L,  <span class=\"comment\">// 외부에서 설정하면 안 됨</span></span><br><span class=\"line\">    name = <span class=\"string\">\"  John Doe  \"</span>,  <span class=\"comment\">// 공백 제거 불가</span></span><br><span class=\"line\">    email = <span class=\"string\">\"  john.doe@example.com  \"</span>,  <span class=\"comment\">// 공백 제거 불가</span></span><br><span class=\"line\">    stats = UserStats.ACTIVE  <span class=\"comment\">// 생성 시 초기값은 무조건 NORMAL이어야 함</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure><ol><li><code>id</code>는 데이터베이스에서 자동으로 생성되기 때문에, 외부에서 객체 생성 시 값을 전달하면 안 됩니다.</li><li><code>stats</code> 필드는 초기 생성 시 무조건 <code>UserStats.NORMAL</code>이어야 하므로, 외부에서 제어권을 가지면 안 됩니다.</li><li><code>name</code>과 <code>email</code> 필드는 공백을 제거해야 하는데, 현재 생성자로는 이러한 처리가 어렵습니다.</li><li>그 외에도 객체 생성 시 내부적으로 유효성 검사를 하는 것이 제한적입니다.</li></ol><p>이러한 문제들을 해결하기 위해, 우리는 안전한 객체 생성 방식을 도입할 수 있습니다.</p><h4><span id=\"companion-object를-활용한-객체-생성-안전성-강화\">Companion Object를 활용한 객체 생성 안전성 강화</span></h4><p>이 문제를 해결하기 위해, <code>companion object</code>와 <code>operator fun invoke</code>를 활용한 객체 생성 방식을 제안합니다. 아래는 수정된 코드입니다:</p><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> <span class=\"keyword\">private</span> <span class=\"keyword\">constructor</span></span>(</span><br><span class=\"line\">    <span class=\"keyword\">var</span> id: <span class=\"built_in\">Long</span>? = <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: String,</span><br><span class=\"line\">    <span class=\"keyword\">val</span> email: String,</span><br><span class=\"line\">    <span class=\"meta\">@Enumerated(EnumType.STRING)</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> stats: UserStats</span><br><span class=\"line\">) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">companion</span> <span class=\"keyword\">object</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">operator</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">invoke</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">            name: <span class=\"type\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">            email: <span class=\"type\">String</span></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">        )</span></span>: User &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 유효성 검사 로직 추가</span></span><br><span class=\"line\">            require(name.isNotBlank()) &#123; <span class=\"string\">\"Name must not be blank\"</span> &#125;</span><br><span class=\"line\">            require(email.isNotBlank()) &#123; <span class=\"string\">\"Email must not be blank\"</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> User(</span><br><span class=\"line\">                name = name.trim(),</span><br><span class=\"line\">                email = email.trim(),</span><br><span class=\"line\">                id = <span class=\"literal\">null</span>,</span><br><span class=\"line\">                stats = UserStats.NORMAL</span><br><span class=\"line\">            )</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>이제 외부에서 객체를 생성할 때는 다음과 같이 사용할 수 있습니다:</p><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 안전한 객체 생성 예시</span></span><br><span class=\"line\"><span class=\"keyword\">val</span> user = User(</span><br><span class=\"line\">    name = <span class=\"string\">\"  John Doe  \"</span>,</span><br><span class=\"line\">    email = <span class=\"string\">\"  john.doe@example.com  \"</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure><p>위 코드는 기존의 생성자 호출 방식과 동일하게 사용할 수 있지만, 내부적으로는 안전한 로직을 적용하여 객체를 생성하도록 유도합니다. 이를 통해 불필요한 오류를 방지하고 객체 생성 과정을 간소화할 수 있습니다.</p><h3><span id=\"주요-개선-사항\">주요 개선 사항</span></h3><ol><li><strong>기본 생성자 막기</strong>: <code>private constructor</code>를 사용해 기본 생성자를 외부에서 호출하지 못하게 막았습니다. 이를 통해 객체 생성을 <code>companion object</code> 내부의 로직으로만 유도할 수 있게 되었습니다.</li><li><strong>invoke 연산자 활용</strong>: <code>companion object</code>에 <code>operator fun invoke</code>를 정의하여 객체 생성 시 사용자가 보다 명확한 API를 사용할 수 있게 했습니다. 이는 기존의 생성자 호출 방식과 동일하게 사용할 수 있으면서도 <code>name</code>과 <code>email</code>의 앞뒤 공백을 자동으로 제거하고, <code>stats</code> 필드는 무조건 <code>UserStats.NORMAL</code>로 설정하게 되었습니다.</li><li><strong>안전한 필드 초기화</strong>: <code>id</code>와 같이 외부에서 설정되면 안 되는 필드는 생성자에서 제외하여, 개발자가 실수로 이를 설정하는 것을 방지했습니다.</li></ol><h2><span id=\"value-class를-활용한-값-타입-관리\">Value Class를 활용한 값 타입 관리</span></h2><p>또한, 이메일과 같은 값 타입을 별도로 관리하기 위해 코틀린의 <code>value class</code>를 활용하는 것도 좋은 방법입니다. 아래는 <code>Email</code>이라는 값 클래스를 정의하고 사용하는 예시입니다:</p><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JvmInline</span></span><br><span class=\"line\">value <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Email</span></span>(<span class=\"keyword\">val</span> value: String) &#123;</span><br><span class=\"line\">    init &#123;</span><br><span class=\"line\">        require(value.isNotBlank()) &#123; <span class=\"string\">\"Email must not be blank\"</span> &#125;</span><br><span class=\"line\">        require(value.contains(<span class=\"string\">\"@\"</span>)) &#123; <span class=\"string\">\"Email must contain '@'\"</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h3><span id=\"email-value-class-적용\">Email Value Class 적용</span></h3><p>위에서 정의한 <code>Email</code> 클래스를 <code>User</code> 클래스와 <code>Order</code> 클래스에 적용해보겠습니다:</p><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> <span class=\"keyword\">private</span> <span class=\"keyword\">constructor</span></span>(</span><br><span class=\"line\">    <span class=\"keyword\">var</span> id: <span class=\"built_in\">Long</span>? = <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"keyword\">var</span> name: String,</span><br><span class=\"line\">    <span class=\"keyword\">val</span> email: Email,</span><br><span class=\"line\">    <span class=\"keyword\">var</span> stats: UserStats</span><br><span class=\"line\">) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">companion</span> <span class=\"keyword\">object</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">operator</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">invoke</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">            name: <span class=\"type\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">            email: <span class=\"type\">String</span></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">        )</span></span>: User &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 유효성 검사 로직 추가</span></span><br><span class=\"line\">            require(name.isNotBlank()) &#123; <span class=\"string\">\"Name must not be blank\"</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> User(</span><br><span class=\"line\">                name = name.trim(),</span><br><span class=\"line\">                email = Email(email),</span><br><span class=\"line\">                id = <span class=\"literal\">null</span>,</span><br><span class=\"line\">                stats = UserStats.NORMAL</span><br><span class=\"line\">            )</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Order 클래스 정의</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Order</span> <span class=\"keyword\">private</span> <span class=\"keyword\">constructor</span></span>(</span><br><span class=\"line\">    <span class=\"keyword\">var</span> id: <span class=\"built_in\">Long</span>? = <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"keyword\">val</span> email: Email,</span><br><span class=\"line\">    <span class=\"keyword\">var</span> amount: <span class=\"built_in\">Double</span></span><br><span class=\"line\">) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">companion</span> <span class=\"keyword\">object</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">operator</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">invoke</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">            email: <span class=\"type\">String</span>,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">            amount: <span class=\"type\">Double</span></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">        )</span></span>: Order &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 유효성 검사 로직 추가</span></span><br><span class=\"line\">            require(amount &gt; <span class=\"number\">0</span>) &#123; <span class=\"string\">\"Amount must be greater than zero\"</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> Order(</span><br><span class=\"line\">                email = Email(email),</span><br><span class=\"line\">                id = <span class=\"literal\">null</span>,</span><br><span class=\"line\">                amount = amount</span><br><span class=\"line\">            )</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><h3><span id=\"value-class를-통한-객체-관리의-이점\">Value Class를 통한 객체 관리의 이점</span></h3><ol><li><strong>명확한 타입 정의</strong>: <code>Email</code>이라는 값 클래스를 사용함으로써, 이메일 주소를 단순히 문자열로 다루는 대신 명확한 타입으로 관리할 수 있습니다. 이를 통해 이메일 값이 기대하는 형태로만 사용되도록 강제할 수 있습니다.</li><li><strong>유효성 검사 통합</strong>: 이메일과 관련된 유효성 검사 로직을 <code>Email</code> 클래스 내부에 정의함으로써, 이메일이 생성되는 모든 곳에서 일관된 유효성 검사를 적용할 수 있습니다. 이를 통해 코드 중복을 줄이고 유지보수성을 높일 수 있습니다.</li><li><strong>가독성 향상</strong>: 이메일과 같은 값 타입을 별도로 정의함으로써, 코드의 가독성을 높이고, 객체의 의미를 보다 명확하게 전달할 수 있습니다. 이를 통해 코드가 더 직관적이며 이해하기 쉬워집니다.</li><li><strong>재사용성</strong>: <code>Email</code> 클래스는 <code>User</code> 클래스뿐만 아니라, 예를 들어 <code>Order</code>와 같은 다른 도메인 객체에서도 재사용할 수 있습니다. 이를 통해 일관된 이메일 관리와 유효성 검사를 보장하며, 코드 중복을 최소화할 수 있습니다. 이렇게 공통적으로 사용되는 값 타입을 재사용함으로써 코드의 유지보수성과 확장성을 크게 향상시킬 수 있습니다.</li></ol><h3><span id=\"value-class-사용-시-주의-사항\">Value Class 사용 시 주의 사항</span></h3><p><code>value class</code>로 감싼 타입은 JPA나 MongoDB와 같은 데이터베이스 접근 라이브러리를 사용할 때 자동으로 매핑되지 않기 때문에, 적절한 컨버터를 정의해줘야 합니다. 예를 들어, JPA에서는 <code>AttributeConverter</code>를 사용하여 <code>Email</code> 클래스를 문자열로 변환하고 다시 복원할 수 있는 컨버터를 구현해야 합니다.</p><h2><span id=\"결론\">결론</span></h2><p>코틀린에서 객체를 생성하는 다양한 방법이 있지만, 제약 사항이 많은 경우에는 <code>companion object</code>와 <code>invoke</code> 연산자를 활용하는 방식이 매우 유용합니다. 또한, 값 타입을 별도로 관리하기 위해 <code>value class</code>를 사용하는 것도 좋은 접근법입니다. 이를 통해 외부에서 설정하지 말아야 할 필드를 보호하고, 객체 생성 시 발생할 수 있는 오류를 줄일 수 있으며, 값 타입에 대한 유효성 검사와 관리도 일관되게 할 수 있습니다.</p><p>여러분도 코틀린을 사용할 때, 이러한 안전한 객체 생성 방식과 값 타입 관리를 적용해보세요! 필요에 따라 객체의 생성 로직을 유연하고 안전하게 제어할 수 있을 것입니다.</p>",
        "contentSnippet": "코틀린에서 객체 생성과 값 타입 관리의 안전성을 강화하는 다양한 방법에 대해 알아보겠습니다. 이번 포스팅에서는 User라는 엔티티 클래스를 예로 들어 생성자 제약 사항을 안전하게 처리하는 방법과, value class를 활용해 값 타입을 효율적으로 관리하는 방법에 대해 설명하겠습니다.\n기존 생성자 코드의 문제점\n아래는 간단한 User 클래스입니다. 이 클래스는 JPA 엔티티로 정의되어 있으며, 데이터베이스와 매핑되는 사용자 정보를 나타냅니다.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n@Entity(name = \"user\")\n@Table(name = \"user\")\nclass User(\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    var id: Long? = null,\n    var name: String,\n    val email: String,\n    @Enumerated(EnumType.STRING)\n    var stats: UserStats\n)\n\n\n위 코드를 보면 객체 생성 시 다음과 같은 문제가 발생할 수 있습니다:\n\n\n1\n2\n3\n4\n5\n6\n7\n\n// 잘못된 객체 생성 예시\nval user = User(\n    id = 1L,  // 외부에서 설정하면 안 됨\n    name = \"  John Doe  \",  // 공백 제거 불가\n    email = \"  john.doe@example.com  \",  // 공백 제거 불가\n    stats = UserStats.ACTIVE  // 생성 시 초기값은 무조건 NORMAL이어야 함\n)\n\n\nid는 데이터베이스에서 자동으로 생성되기 때문에, 외부에서 객체 생성 시 값을 전달하면 안 됩니다.\nstats 필드는 초기 생성 시 무조건 UserStats.NORMAL이어야 하므로, 외부에서 제어권을 가지면 안 됩니다.\nname과 email 필드는 공백을 제거해야 하는데, 현재 생성자로는 이러한 처리가 어렵습니다.\n그 외에도 객체 생성 시 내부적으로 유효성 검사를 하는 것이 제한적입니다.\n\n이러한 문제들을 해결하기 위해, 우리는 안전한 객체 생성 방식을 도입할 수 있습니다.\nCompanion Object를 활용한 객체 생성 안전성 강화\n이 문제를 해결하기 위해, companion object와 operator fun invoke를 활용한 객체 생성 방식을 제안합니다. 아래는 수정된 코드입니다:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\nclass User private constructor(\n    var id: Long? = null,\n    var name: String,\n    val email: String,\n    @Enumerated(EnumType.STRING)\n    var stats: UserStats\n) {\n    companion object {\n        operator fun invoke(\n            name: String,\n            email: String\n        ): User {\n            // 유효성 검사 로직 추가\n            require(name.isNotBlank()) { \"Name must not be blank\" }\n            require(email.isNotBlank()) { \"Email must not be blank\" }\n\n            return User(\n                name = name.trim(),\n                email = email.trim(),\n                id = null,\n                stats = UserStats.NORMAL\n            )\n        }\n    }\n}\n\n\n이제 외부에서 객체를 생성할 때는 다음과 같이 사용할 수 있습니다:\n\n\n1\n2\n3\n4\n5\n\n// 안전한 객체 생성 예시\nval user = User(\n    name = \"  John Doe  \",\n    email = \"  john.doe@example.com  \"\n)\n\n\n위 코드는 기존의 생성자 호출 방식과 동일하게 사용할 수 있지만, 내부적으로는 안전한 로직을 적용하여 객체를 생성하도록 유도합니다. 이를 통해 불필요한 오류를 방지하고 객체 생성 과정을 간소화할 수 있습니다.\n주요 개선 사항\n\n기본 생성자 막기: private constructor를 사용해 기본 생성자를 외부에서 호출하지 못하게 막았습니다. 이를 통해 객체 생성을 companion object 내부의 로직으로만 유도할 수 있게 되었습니다.\ninvoke 연산자 활용: companion object에 operator fun invoke를 정의하여 객체 생성 시 사용자가 보다 명확한 API를 사용할 수 있게 했습니다. 이는 기존의 생성자 호출 방식과 동일하게 사용할 수 있으면서도 name과 email의 앞뒤 공백을 자동으로 제거하고, stats 필드는 무조건 UserStats.NORMAL로 설정하게 되었습니다.\n안전한 필드 초기화: id와 같이 외부에서 설정되면 안 되는 필드는 생성자에서 제외하여, 개발자가 실수로 이를 설정하는 것을 방지했습니다.\n\nValue Class를 활용한 값 타입 관리\n또한, 이메일과 같은 값 타입을 별도로 관리하기 위해 코틀린의 value class를 활용하는 것도 좋은 방법입니다. 아래는 Email이라는 값 클래스를 정의하고 사용하는 예시입니다:\n\n\n1\n2\n3\n4\n5\n6\n7\n\n@JvmInline\nvalue class Email(val value: String) {\n    init {\n        require(value.isNotBlank()) { \"Email must not be blank\" }\n        require(value.contains(\"@\")) { \"Email must contain '@'\" }\n    }\n}\n\n\nEmail Value Class 적용\n위에서 정의한 Email 클래스를 User 클래스와 Order 클래스에 적용해보겠습니다:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n\nclass User private constructor(\n    var id: Long? = null,\n    var name: String,\n    val email: Email,\n    var stats: UserStats\n) {\n    companion object {\n        operator fun invoke(\n            name: String,\n            email: String\n        ): User {\n            // 유효성 검사 로직 추가\n            require(name.isNotBlank()) { \"Name must not be blank\" }\n\n            return User(\n                name = name.trim(),\n                email = Email(email),\n                id = null,\n                stats = UserStats.NORMAL\n            )\n        }\n    }\n}\n\n// Order 클래스 정의\nclass Order private constructor(\n    var id: Long? = null,\n    val email: Email,\n    var amount: Double\n) {\n    companion object {\n        operator fun invoke(\n            email: String,\n            amount: Double\n        ): Order {\n            // 유효성 검사 로직 추가\n            require(amount > 0) { \"Amount must be greater than zero\" }\n\n            return Order(\n                email = Email(email),\n                id = null,\n                amount = amount\n            )\n        }\n    }\n}\n\n\nValue Class를 통한 객체 관리의 이점\n\n명확한 타입 정의: Email이라는 값 클래스를 사용함으로써, 이메일 주소를 단순히 문자열로 다루는 대신 명확한 타입으로 관리할 수 있습니다. 이를 통해 이메일 값이 기대하는 형태로만 사용되도록 강제할 수 있습니다.\n유효성 검사 통합: 이메일과 관련된 유효성 검사 로직을 Email 클래스 내부에 정의함으로써, 이메일이 생성되는 모든 곳에서 일관된 유효성 검사를 적용할 수 있습니다. 이를 통해 코드 중복을 줄이고 유지보수성을 높일 수 있습니다.\n가독성 향상: 이메일과 같은 값 타입을 별도로 정의함으로써, 코드의 가독성을 높이고, 객체의 의미를 보다 명확하게 전달할 수 있습니다. 이를 통해 코드가 더 직관적이며 이해하기 쉬워집니다.\n재사용성: Email 클래스는 User 클래스뿐만 아니라, 예를 들어 Order와 같은 다른 도메인 객체에서도 재사용할 수 있습니다. 이를 통해 일관된 이메일 관리와 유효성 검사를 보장하며, 코드 중복을 최소화할 수 있습니다. 이렇게 공통적으로 사용되는 값 타입을 재사용함으로써 코드의 유지보수성과 확장성을 크게 향상시킬 수 있습니다.\n\nValue Class 사용 시 주의 사항\nvalue class로 감싼 타입은 JPA나 MongoDB와 같은 데이터베이스 접근 라이브러리를 사용할 때 자동으로 매핑되지 않기 때문에, 적절한 컨버터를 정의해줘야 합니다. 예를 들어, JPA에서는 AttributeConverter를 사용하여 Email 클래스를 문자열로 변환하고 다시 복원할 수 있는 컨버터를 구현해야 합니다.\n결론\n코틀린에서 객체를 생성하는 다양한 방법이 있지만, 제약 사항이 많은 경우에는 companion object와 invoke 연산자를 활용하는 방식이 매우 유용합니다. 또한, 값 타입을 별도로 관리하기 위해 value class를 사용하는 것도 좋은 접근법입니다. 이를 통해 외부에서 설정하지 말아야 할 필드를 보호하고, 객체 생성 시 발생할 수 있는 오류를 줄일 수 있으며, 값 타입에 대한 유효성 검사와 관리도 일관되게 할 수 있습니다.\n여러분도 코틀린을 사용할 때, 이러한 안전한 객체 생성 방식과 값 타입 관리를 적용해보세요! 필요에 따라 객체의 생성 로직을 유연하고 안전하게 제어할 수 있을 것입니다.",
        "summary": "\n    \n      \n      \n        <p>코틀린에서 객체 생성과 값 타입 관리의 안전성을 강화하는 다양한 방법에 대해 알아보겠습니다. 이번 포스팅에서는 <code>User</code>라는 엔티티 클래스를 예로 들어 생성자 제약 사항을 안전하게 처리하는 방법과, <code>value cl\n      \n    \n    ",
        "id": "https://cheese10yun.github.io/kotlin-pattern-2/",
        "isoDate": "2024-11-01T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": [
      {
        "creator": "강철 벼룩",
        "title": "Azure App 서비스 제거 오류 해결 방법",
        "link": "http://www.dokyun.pe.kr/351",
        "pubDate": "Sun, 3 Nov 2024 21:58:49 +0900",
        "author": "강철 벼룩",
        "comments": "http://www.dokyun.pe.kr/351#entry351comment",
        "content": "<h2 data-ke-size=\"size26\">How to troubleshoot removing azure app service.</h2>\n<h3 data-ke-size=\"size23\">[문제 설명]</h3>\n<p data-ke-size=\"size18\">Azure App 서비스 배포 후 가상 네트워크와 통합을 구성했다.</p>\n<p data-ke-size=\"size18\">이 후 리소스 그룹을 삭제하는 과정에서 가상 네트워크 및 기타 리소스들이 먼저 삭제되고 App&nbsp; 서비스와 App 서비스 요금제는 삭제되지 않고 남는 현상이 생기는 경우가 있다.</p>\n<p data-ke-size=\"size18\">(1)두 가지 리소스를 선택하고 개별 리소스 삭제를 시도하거나 (2) <span style=\"color: #333333; text-align: start;\">리소스 그룹을 다시 삭제 시도</span>할 경우 아래 그림과 같이 리소스를 삭제 할 수 없는 문제가 발생한다.</p>\n<p data-ke-size=\"size18\">이 경우 Azure PowerShell을 통해 리소스 그룹의 삭제를 시도해도 마찬 가지다.&nbsp;</p>\n<p><figure class=\"imageblock alignLeft\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"3.png\" data-origin-width=\"1710\" data-origin-height=\"914\"><span data-url=\"https://blog.kakaocdn.net/dn/bVJeNJ/btsKuxZ6SfF/UNIWCVE8Loy354qMvwUOmK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bVJeNJ/btsKuxZ6SfF/UNIWCVE8Loy354qMvwUOmK/img.png\" data-alt=\"App 서비스와 App 서비스 요금제 삭제 오류\"><img src=\"https://blog.kakaocdn.net/dn/bVJeNJ/btsKuxZ6SfF/UNIWCVE8Loy354qMvwUOmK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbVJeNJ%2FbtsKuxZ6SfF%2FUNIWCVE8Loy354qMvwUOmK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"3.png\" data-origin-width=\"1710\" data-origin-height=\"914\"/></span><figcaption>App 서비스와 App 서비스 요금제 삭제 오류</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">App 서비스의 [설정] 섹션에서 [네트워킹] 메뉴를 선택하고 [아웃바운드 트래픽 구성] 섹션의 Virtual Network 통합을 확인하면 다음 그림처럼 이미 삭제된 가상 네트워크를 정보를 여전히 물고 있어서(1) 삭제 종속성 문제가 발생한다(2).</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"2.png\" data-origin-width=\"1710\" data-origin-height=\"763\"><span data-url=\"https://blog.kakaocdn.net/dn/pvGYo/btsKvfLnd1U/jp3TRHL4rimagJf4qhFgBK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/pvGYo/btsKvfLnd1U/jp3TRHL4rimagJf4qhFgBK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/pvGYo/btsKvfLnd1U/jp3TRHL4rimagJf4qhFgBK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FpvGYo%2FbtsKvfLnd1U%2Fjp3TRHL4rimagJf4qhFgBK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"2.png\" data-origin-width=\"1710\" data-origin-height=\"763\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">&nbsp;[해결 방법]</h2>\n<p data-ke-size=\"size18\">해결 방법은 간단하다.</p>\n<p data-ke-size=\"size18\">[아웃바운드 트래픽 구성] 섹션의 Virtual Network 통합 정보와 동일한 가상 네트워크와 서브넷을 다시 생성한 후(1), 다음 그림과 같이 [Virtual Network 통합] 블레이드에서 [연결 끊기]를 클릭해 통합을 해제 한다(2).</p>\n<p><figure class=\"imageblock alignLeft\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"1.png\" data-origin-width=\"1149\" data-origin-height=\"550\"><span data-url=\"https://blog.kakaocdn.net/dn/bkAbED/btsKvapQOt7/GN9mXF9qbhWvG1yr48ak51/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bkAbED/btsKvapQOt7/GN9mXF9qbhWvG1yr48ak51/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bkAbED/btsKvapQOt7/GN9mXF9qbhWvG1yr48ak51/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbkAbED%2FbtsKvapQOt7%2FGN9mXF9qbhWvG1yr48ak51%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"1.png\" data-origin-width=\"1149\" data-origin-height=\"550\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size18\">이후 App&nbsp; 서비스와 App 서비스 요금제를 삭제할 수 있고(3), 남은 가상 네트워크를(4) 삭제하면 정상적으로 모든 리소스를 정리할 수 있다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"4.png\" data-origin-width=\"1392\" data-origin-height=\"1144\"><span data-url=\"https://blog.kakaocdn.net/dn/8dVFE/btsKux6QBCW/lS2JfALkwdKXtRie3AswaK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/8dVFE/btsKux6QBCW/lS2JfALkwdKXtRie3AswaK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/8dVFE/btsKux6QBCW/lS2JfALkwdKXtRie3AswaK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F8dVFE%2FbtsKux6QBCW%2FlS2JfALkwdKXtRie3AswaK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"4.png\" data-origin-width=\"1392\" data-origin-height=\"1144\"/></span></figure>\n</p>",
        "contentSnippet": "How to troubleshoot removing azure app service.\n[문제 설명]\nAzure App 서비스 배포 후 가상 네트워크와 통합을 구성했다.\n이 후 리소스 그룹을 삭제하는 과정에서 가상 네트워크 및 기타 리소스들이 먼저 삭제되고 App  서비스와 App 서비스 요금제는 삭제되지 않고 남는 현상이 생기는 경우가 있다.\n(1)두 가지 리소스를 선택하고 개별 리소스 삭제를 시도하거나 (2) 리소스 그룹을 다시 삭제 시도할 경우 아래 그림과 같이 리소스를 삭제 할 수 없는 문제가 발생한다.\n이 경우 Azure PowerShell을 통해 리소스 그룹의 삭제를 시도해도 마찬 가지다. \nApp 서비스와 App 서비스 요금제 삭제 오류\n\n\n \nApp 서비스의 [설정] 섹션에서 [네트워킹] 메뉴를 선택하고 [아웃바운드 트래픽 구성] 섹션의 Virtual Network 통합을 확인하면 다음 그림처럼 이미 삭제된 가상 네트워크를 정보를 여전히 물고 있어서(1) 삭제 종속성 문제가 발생한다(2).\n\n\n \n [해결 방법]\n해결 방법은 간단하다.\n[아웃바운드 트래픽 구성] 섹션의 Virtual Network 통합 정보와 동일한 가상 네트워크와 서브넷을 다시 생성한 후(1), 다음 그림과 같이 [Virtual Network 통합] 블레이드에서 [연결 끊기]를 클릭해 통합을 해제 한다(2).\n\n\n \n이후 App  서비스와 App 서비스 요금제를 삭제할 수 있고(3), 남은 가상 네트워크를(4) 삭제하면 정상적으로 모든 리소스를 정리할 수 있다.",
        "guid": "http://www.dokyun.pe.kr/351",
        "categories": [
          "Azure &amp; Windows/Azure",
          "app service",
          "app 서비스",
          "azure",
          "가상 네트워크 통합"
        ],
        "isoDate": "2024-11-03T12:58:49.000Z"
      }
    ]
  },
  {
    "name": "김상훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": [
      {
        "title": "첫 면접",
        "link": "https://elky84.github.io/2024/11/05/first_interview/",
        "pubDate": "Tue, 05 Nov 2024 00:00:00 +0000",
        "content": "<p>2005년의 어느 날, 개발자로서의 첫 면접은 너무나 긴장되었다.</p>\n\n<p>2004년 모바일 게임 (당시는 피쳐폰 게임 개발 회사였다)에서 아르바이트 겸 툴 개발을 하긴 했지만, 당시 아르바이트로는 정식 면접을 보고 일했다기 보다는 테스터로 일하다가 툴 개발을 맡았던 상태라서, 1시간이라는 시간으로 보는 정식 면접은 처음이어서 너무 떨렸다.</p>\n\n<p>나의 첫 지원 직군은 게임 클라이언트 개발자였고, 당시 지원한 회사는 CCR이었다. CCR은 포트리스2로 유명한 회사였지만, 첫 면접이다 보니 준비하는 방법을 잘 몰랐다고 보는 게 맞을 거 같다.</p>\n\n<hr />\n\n<p>면접을 보러 가서 막상 질문은 아주 무난했다.</p>\n\n<p>최근에 읽은 책, C++ 기초 질문 후에 30분도 안 되서 면접이 끝났다.</p>\n\n<p>정확한 사유는 듣지 못했지만, 아주 떨려서 어버버 했고, 아마도 긴장해서 대화가 매끄럽게 이어지지 않아서 1시간의 반도 못 채우고 마무리 되었던 게 아닐까 싶다.</p>\n\n<p>그렇게 긴장 가득했던 첫 면접이 끝났다.</p>\n\n<hr />\n\n<p>내가 무엇이 부족한지 명확히 인지하지는 못했지만, 그래도 조금 더 후기도 찾아보고, 정보를 찾아가며 면접 대비를 하기 시작했다.</p>\n\n<p>당시에 페이퍼 코딩 또는, 필기 시험을 보는 회사가 종종 있었고, Quick Sort와 Linked List를 준비해두면 도움이 될거라는 말을 듣고 열심히 준비했고, 첫 구직 때는 아니었지만 이후에 종종 써먹을 수 있어서 좋았다.</p>\n\n<p>Quick Sort를 짤 수 있게 되면, 자연스레 더 쉬운 정렬들은 자연스레 외워진다는 장점이 있지만, 핸드 코딩 과정이나 페이퍼 코딩 과정에서 실수 할 수 있다는 단점이 있었는데, 컴파일러를 쓸 수 없는 환경인 만큼 조금의 오타나 버그가 있어도, 메커니즘을 이해했다는 것이 느껴지면 합격 점수를 주셨던 거 같다.</p>\n\n<p>여러 면접 후기 등으로 널리 퍼진 문제 등을 통한 면접 대비도 대비지만, 면접 횟수가 늘면서 면접이라는 시간을 덜 긴장하게 된 것도 영향이 있었을 테고, 한 달 정도의 구직 기간 끝에 당시 몇 년간 운영해오던 온라인 게임의 클라이언트 개발자로 업무를 시작하게 됐다.</p>\n\n<p>그리고 한참이 지난 지금의 결론은, 결국 첫 면접은 잘 못볼 확률이 높기 때문에, 면접 복기와, 면접 횟수를 최대한 늘려서 면접 스킬과, 자신만의 면접 노하우를 쌓는 것이 중요하다고 생각한다.</p>\n\n<hr />\n\n<p>첫 면접에 이어 구직 과정의 몇몇 회사의 질문 중 하나로 받게 되었던 20년 후의 내 미래인 나는 여전히 코딩을 하고 있다.</p>\n\n<p>20년 전 만큼은 아니지만 여전히 코딩이 재밌고, 성취감도 있고, 성장하고 배우는 것도 많게 느낀다.</p>\n\n<p>언제까지 내가 일할 수 있을지는 잘 모르겠지만, 적어도 아직은 행복한 마음으로 프로그래밍을 해오고 있다.</p>\n\n<p>그래서 지금까지 해올 수 있었던 거 같고, 앞으로도 더 오래 하고 싶은 마음이 드는 힘 인 것 같다. 아마도, 지금의 면접관 중 나와 비슷한 시대와 생각을 가진 사람도 적지 않을 것이다. 프로그래밍을 즐기는 모습을 보여주는 것도 또 다른 면접 성공 전략이 아닐까 싶다.</p>\n",
        "contentSnippet": "2005년의 어느 날, 개발자로서의 첫 면접은 너무나 긴장되었다.\n2004년 모바일 게임 (당시는 피쳐폰 게임 개발 회사였다)에서 아르바이트 겸 툴 개발을 하긴 했지만, 당시 아르바이트로는 정식 면접을 보고 일했다기 보다는 테스터로 일하다가 툴 개발을 맡았던 상태라서, 1시간이라는 시간으로 보는 정식 면접은 처음이어서 너무 떨렸다.\n나의 첫 지원 직군은 게임 클라이언트 개발자였고, 당시 지원한 회사는 CCR이었다. CCR은 포트리스2로 유명한 회사였지만, 첫 면접이다 보니 준비하는 방법을 잘 몰랐다고 보는 게 맞을 거 같다.\n면접을 보러 가서 막상 질문은 아주 무난했다.\n최근에 읽은 책, C++ 기초 질문 후에 30분도 안 되서 면접이 끝났다.\n정확한 사유는 듣지 못했지만, 아주 떨려서 어버버 했고, 아마도 긴장해서 대화가 매끄럽게 이어지지 않아서 1시간의 반도 못 채우고 마무리 되었던 게 아닐까 싶다.\n그렇게 긴장 가득했던 첫 면접이 끝났다.\n내가 무엇이 부족한지 명확히 인지하지는 못했지만, 그래도 조금 더 후기도 찾아보고, 정보를 찾아가며 면접 대비를 하기 시작했다.\n당시에 페이퍼 코딩 또는, 필기 시험을 보는 회사가 종종 있었고, Quick Sort와 Linked List를 준비해두면 도움이 될거라는 말을 듣고 열심히 준비했고, 첫 구직 때는 아니었지만 이후에 종종 써먹을 수 있어서 좋았다.\nQuick Sort를 짤 수 있게 되면, 자연스레 더 쉬운 정렬들은 자연스레 외워진다는 장점이 있지만, 핸드 코딩 과정이나 페이퍼 코딩 과정에서 실수 할 수 있다는 단점이 있었는데, 컴파일러를 쓸 수 없는 환경인 만큼 조금의 오타나 버그가 있어도, 메커니즘을 이해했다는 것이 느껴지면 합격 점수를 주셨던 거 같다.\n여러 면접 후기 등으로 널리 퍼진 문제 등을 통한 면접 대비도 대비지만, 면접 횟수가 늘면서 면접이라는 시간을 덜 긴장하게 된 것도 영향이 있었을 테고, 한 달 정도의 구직 기간 끝에 당시 몇 년간 운영해오던 온라인 게임의 클라이언트 개발자로 업무를 시작하게 됐다.\n그리고 한참이 지난 지금의 결론은, 결국 첫 면접은 잘 못볼 확률이 높기 때문에, 면접 복기와, 면접 횟수를 최대한 늘려서 면접 스킬과, 자신만의 면접 노하우를 쌓는 것이 중요하다고 생각한다.\n첫 면접에 이어 구직 과정의 몇몇 회사의 질문 중 하나로 받게 되었던 20년 후의 내 미래인 나는 여전히 코딩을 하고 있다.\n20년 전 만큼은 아니지만 여전히 코딩이 재밌고, 성취감도 있고, 성장하고 배우는 것도 많게 느낀다.\n언제까지 내가 일할 수 있을지는 잘 모르겠지만, 적어도 아직은 행복한 마음으로 프로그래밍을 해오고 있다.\n그래서 지금까지 해올 수 있었던 거 같고, 앞으로도 더 오래 하고 싶은 마음이 드는 힘 인 것 같다. 아마도, 지금의 면접관 중 나와 비슷한 시대와 생각을 가진 사람도 적지 않을 것이다. 프로그래밍을 즐기는 모습을 보여주는 것도 또 다른 면접 성공 전략이 아닐까 싶다.",
        "guid": "https://elky84.github.io/2024/11/05/first_interview/",
        "categories": [
          "면접",
          "첫면접",
          "면접"
        ],
        "isoDate": "2024-11-05T00:00:00.000Z"
      },
      {
        "title": "거창하지 않아도 괜찮을 수 있는 설계",
        "link": "https://elky84.github.io/2024/11/03/design/",
        "pubDate": "Sun, 03 Nov 2024 00:00:00 +0000",
        "content": "<p>보통 개발자 커리큘럼에 설계는 없다.</p>\n\n<p>이외에도 여러 팀 프로젝트 등을 거치면서도, 설계를 제대로 해보고 취업하기란 쉽지 않다.</p>\n\n<p>실무를 하면 자연스레 탄탄한 설계를 하고 일하는 줄 알았다.</p>\n\n<p>막상 실무를 해보니, 설계 시간이 없거나, 요구 사항이 모호한 경우가 많았다.</p>\n\n<p>내가 일해온 회사와 프로젝트 경험 상 설계를 해주는 아키텍트도 못 만나기도 했고, 그렇다 보니 나름의 방식의 설계를 하고 구현하게 됐다.</p>\n\n<p>완벽한 설계를 경험해보지 못한 사람이 설계를 이야기 하는 것이 이상하게 들릴 수 있지만, 적지 않은 개발자가 나와 같은 상황이었을 거고, 앞으로도 그럴 수 있음을 감안하면 나는 설계를 거창하게 바라보기 보다는 구현을 돕는 계획과 같은 수준의 설계로도 충분히 이득을 볼 수 있다고 생각한다.</p>\n\n<p>당연한 얘기지만, 아주 섬세하고 세부적인 부분까지 설계해야 되는 업무를 주로 해오신 분께는 해당 되지 않는 이야기다.</p>\n\n<hr />\n\n<h1 id=\"구현의-돕는-설계의-예시\">구현의 돕는 설계의 예시</h1>\n\n<ol>\n  <li>시퀀스 다이어그램</li>\n  <li>Domain 정의 및 역할 정의</li>\n  <li>필수 조건\n    <ul>\n      <li>충족되는지 모든 과정에서 검토 되어야 함</li>\n    </ul>\n  </li>\n  <li>전제 조건\n    <ul>\n      <li>구현할 기능이 동작하는 데에 필요한 전제 조건</li>\n    </ul>\n  </li>\n  <li>팀 내 규칙\n    <ul>\n      <li>계획이 팀 내의 구현 규칙을 준수하는가?</li>\n    </ul>\n  </li>\n  <li>구현 난이도\n    <ul>\n      <li>이미 존재하는 기능만을 이용해 구현 가능한가?</li>\n      <li>기존 규칙들을 따르는 것만으로 구현에 이슈가 없는가?</li>\n    </ul>\n  </li>\n  <li>레이어의 기준\n    <ul>\n      <li>그 기준에 부합하게 계획되어있는가?</li>\n    </ul>\n  </li>\n</ol>\n\n<p>예시 일 뿐 모든 항목에 부합해야만 작업을 진행한다가 아니라, 작업 할 때 마다 고민해보면 좋을 목록이라고 봐도 좋다.</p>\n\n<p>중요한 것은, <strong>어떻게 구현할지가 머릿속에 그려지고 이를 기록으로 옮길 수 있느냐다.</strong></p>\n\n<p>텍스트도 좋고 excalidraw같은 다이어그램 도구도 좋다.</p>\n\n<p>같은 팀 동료가 그 자료를 보자마자 이해할 수 있다면 더 좋겠지만, 적어도 자신이 다시 봤을 때 이해가 될 정도의 기록이면 설계로 의미를 가질 수 있다.</p>\n\n<hr />\n\n<p>그리고 구현 하면서의 과정, 작업 완료 후 예상과의 차이를 기록함으로써 설계와 구현의 오차를 파악하고 개선할 수 있는 기회로도 쓸 수 있다.</p>\n\n<p>사실 우리가 설계에 시간을 많이 받을 수 있는 프로젝트가 흔치 않다.</p>\n\n<p>그렇다 보니 나름의 효율적 설계의 수준을 일하는 회사와 팀, 시기에 맞춰서 조정하면서 일하게 되는데, 계획을 세우며 일하는 습관의 일환으로 시도해보며 그 수준을 조정해보는 것도 좋은 성장의 방식이라고 생각한다.</p>\n",
        "contentSnippet": "보통 개발자 커리큘럼에 설계는 없다.\n이외에도 여러 팀 프로젝트 등을 거치면서도, 설계를 제대로 해보고 취업하기란 쉽지 않다.\n실무를 하면 자연스레 탄탄한 설계를 하고 일하는 줄 알았다.\n막상 실무를 해보니, 설계 시간이 없거나, 요구 사항이 모호한 경우가 많았다.\n내가 일해온 회사와 프로젝트 경험 상 설계를 해주는 아키텍트도 못 만나기도 했고, 그렇다 보니 나름의 방식의 설계를 하고 구현하게 됐다.\n완벽한 설계를 경험해보지 못한 사람이 설계를 이야기 하는 것이 이상하게 들릴 수 있지만, 적지 않은 개발자가 나와 같은 상황이었을 거고, 앞으로도 그럴 수 있음을 감안하면 나는 설계를 거창하게 바라보기 보다는 구현을 돕는 계획과 같은 수준의 설계로도 충분히 이득을 볼 수 있다고 생각한다.\n당연한 얘기지만, 아주 섬세하고 세부적인 부분까지 설계해야 되는 업무를 주로 해오신 분께는 해당 되지 않는 이야기다.\n구현의 돕는 설계의 예시\n시퀀스 다이어그램\nDomain 정의 및 역할 정의\n필수 조건\n    \n충족되는지 모든 과정에서 검토 되어야 함\n전제 조건\n    \n구현할 기능이 동작하는 데에 필요한 전제 조건\n팀 내 규칙\n    \n계획이 팀 내의 구현 규칙을 준수하는가?\n구현 난이도\n    \n이미 존재하는 기능만을 이용해 구현 가능한가?\n기존 규칙들을 따르는 것만으로 구현에 이슈가 없는가?\n레이어의 기준\n    \n그 기준에 부합하게 계획되어있는가?\n예시 일 뿐 모든 항목에 부합해야만 작업을 진행한다가 아니라, 작업 할 때 마다 고민해보면 좋을 목록이라고 봐도 좋다.\n중요한 것은, 어떻게 구현할지가 머릿속에 그려지고 이를 기록으로 옮길 수 있느냐다.\n텍스트도 좋고 excalidraw같은 다이어그램 도구도 좋다.\n같은 팀 동료가 그 자료를 보자마자 이해할 수 있다면 더 좋겠지만, 적어도 자신이 다시 봤을 때 이해가 될 정도의 기록이면 설계로 의미를 가질 수 있다.\n그리고 구현 하면서의 과정, 작업 완료 후 예상과의 차이를 기록함으로써 설계와 구현의 오차를 파악하고 개선할 수 있는 기회로도 쓸 수 있다.\n사실 우리가 설계에 시간을 많이 받을 수 있는 프로젝트가 흔치 않다.\n그렇다 보니 나름의 효율적 설계의 수준을 일하는 회사와 팀, 시기에 맞춰서 조정하면서 일하게 되는데, 계획을 세우며 일하는 습관의 일환으로 시도해보며 그 수준을 조정해보는 것도 좋은 성장의 방식이라고 생각한다.",
        "guid": "https://elky84.github.io/2024/11/03/design/",
        "categories": [
          "설계",
          "설계"
        ],
        "isoDate": "2024-11-03T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": [
      {
        "title": "안드로이드 Theme와 GetStream Theme를 알아보고 CompositionLocalProvider의 역할을 알아본다.(GetStream 후원글)",
        "link": "https://thdev.tech/compose/2024/11/03/GetStream-Theme/",
        "pubDate": "Sun, 03 Nov 2024 00:00:00 +0000",
        "content": "<p>Compose Theme는 어떻게 적용하고 활용할 수 있을까?</p>\n\n<ul>\n  <li>Material Theme에 따라서 사용할까?</li>\n  <li>우리만의 디자인 시스템 색상 값과 필요한 정보를 포함하여 Custom theme 구성?</li>\n</ul>\n\n<p>이런 고민은 한 번쯤? 해볼 수 있을 것 같다.</p>\n\n<p>본 글은 GetStream의 후원으로 작성된 글로 다음의 내용을 다루어보려 한다.</p>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">Material 3</code> 사용하지 않는다면?</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">Material 3</code> 사용하여 테마 만들기?</li>\n  <li>SDK로 유명한 <code class=\"language-plaintext highlighter-rouge\">GetStream</code>에서는 Theme를 어떻게 사용하고 있을까?</li>\n  <li>추가로 Theme 함수의 내부에는 <code class=\"language-plaintext highlighter-rouge\">CompositionLocalProvider</code>가 많던데? <code class=\"language-plaintext highlighter-rouge\">CompositionLocalProvider</code>을 좀 더 살펴보자.</li>\n</ul>\n\n<p>본문을 통해 하나씩 이야기해 보겠다.</p>\n\n<ul>\n  <li><a href=\"https://getstream.io/?utm_source=Taehwan_Android_Blog&amp;utm_medium=Taehwan_Android_Blog&amp;utm_content=Developer&amp;utm_campaign=Taehwan_Android_Blog_Nov_2024&amp;utm_term=DevRel\">GetStream SDK 알아보기 - 링크</a></li>\n</ul>\n\n<h3>읽기 전에</h3>\n\n<ul>\n  <li>XML Theme는 다루지 않는다.</li>\n  <li>Compose component에 대해 설명하지 않는다.</li>\n  <li>Material 3에서 사용하는 Token 방식의 Color 지정을 논하진 않는다.</li>\n  <li>GetStream 후원으로 작성한 글이다.</li>\n</ul>\n\n<!--more-->\n\n<p><br /></p>\n\n<h2>Compose에서 Theme가 필요할까?</h2>\n\n<p>Android에서 Theme가 필요할까? XML을 다룰 때는 특별히 테마를 신경 쓰지 않고, 필요할 때(투명, 바텀, alert 등) 사용하고, XML 코드에 대부분 색상을 직접 지정하였다.</p>\n\n<p>Compose에서도 Theme 없이 만들 수 있지 않을까? Compose Theme가 필요한지 먼저 따져보기 전에 Android Studio에서 제공하는 기본 코드를 살펴보자.</p>\n\n<p>Empty Activity 프로젝트를 생성하면 바로 확인할 수 있는 코드로, Material 3 기반 코드로 작성되어 있다.</p>\n\n<p>setContent부터 MyApplicationTheme, Compose Component 조합으로 화면을 그리고 있다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">class</span> <span class=\"nc\">MainActivity</span> <span class=\"p\">:</span> <span class=\"nc\">ComponentActivity</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"n\">savedInstanceState</span><span class=\"p\">:</span> <span class=\"nc\">Bundle</span><span class=\"p\">?)</span> <span class=\"p\">{</span>\n        <span class=\"k\">super</span><span class=\"p\">.</span><span class=\"nf\">onCreate</span><span class=\"p\">(</span><span class=\"n\">savedInstanceState</span><span class=\"p\">)</span>\n        <span class=\"nf\">enableEdgeToEdge</span><span class=\"p\">()</span>\n        <span class=\"nf\">setContent</span> <span class=\"p\">{</span>\n            <span class=\"nc\">MyApplicationTheme</span> <span class=\"p\">{</span>\n                <span class=\"nc\">Scaffold</span><span class=\"p\">(</span><span class=\"n\">modifier</span> <span class=\"p\">=</span> <span class=\"nc\">Modifier</span><span class=\"p\">.</span><span class=\"nf\">fillMaxSize</span><span class=\"p\">())</span> <span class=\"p\">{</span> <span class=\"n\">innerPadding</span> <span class=\"p\">-&gt;</span>\n                    <span class=\"nc\">Greeting</span><span class=\"p\">(</span>\n                        <span class=\"n\">name</span> <span class=\"p\">=</span> <span class=\"s\">\"Android\"</span><span class=\"p\">,</span>\n                        <span class=\"n\">modifier</span> <span class=\"p\">=</span> <span class=\"nc\">Modifier</span><span class=\"p\">.</span><span class=\"nf\">padding</span><span class=\"p\">(</span><span class=\"n\">innerPadding</span><span class=\"p\">)</span>\n                    <span class=\"p\">)</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>기본 코드에서도 알 수 있지만 <code class=\"language-plaintext highlighter-rouge\">MyApplicationTheme {}</code>이 시작 부분에 적용됨을 알 수 있다.</p>\n\n<p>여기서 고민해 볼 수 있는데 <code class=\"language-plaintext highlighter-rouge\">Theme {}</code> 시작 부분을 꼭 가져야 할까?</p>\n\n<p>답은, 없는것보단 적용하는 것이 좋으며, Material을 따르지 않더라도 CustomTheme를 가지는 것이 좋다.</p>\n\n<p>우선 Theme가 없다면 아래와 같이 직접 코드 작성 시 Color와 TextStyle을 일일이 지정해야 한다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">Text</span><span class=\"p\">(</span>\n    <span class=\"n\">text</span> <span class=\"p\">=</span> <span class=\"s\">\"Hello $name!\"</span><span class=\"p\">,</span>\n    <span class=\"n\">color</span> <span class=\"p\">=</span> <span class=\"nc\">Color</span><span class=\"p\">.</span><span class=\"nc\">Blue</span><span class=\"p\">,</span>\n    <span class=\"n\">modifier</span> <span class=\"p\">=</span> <span class=\"n\">modifier</span>\n<span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>한두 줄이라면 크게 상관없겠지만 Theme라는 틀을 활용하면 요구사항을 빠르고, 유연하게 적용할 수 있다.</p>\n\n<p>없는 것보단 있는 것이 당연하지만 좋다.(Material을 따르지 않고 CustomTheme 사용하는 것은 또 다른 이야기가 된다.)</p>\n\n<p><br /></p>\n\n<h2>구글에서 제공하는 <code class=\"language-plaintext highlighter-rouge\">Material 3</code>를 사용하지 않는다면?</h2>\n\n<p>Theme를 가지는 것은 당연하지만 좋은 선택이다. 하지만 <code class=\"language-plaintext highlighter-rouge\">Material 3</code>을 사용하는 것이 맞을까?</p>\n\n<p>우선 Compose Material 3 라이브러리에는 아래와 같이 3개의 디펜던시를 필요로 한다.</p>\n\n<ul>\n  <li>androidx.compose.material3 - Material3 Theme를 포함하여 UI 요소를 포함</li>\n  <li>androidx.compose.foundation - UI 위에 가장 기본이 되는 Text/TextField 와 같은 부분을 적용</li>\n  <li>androidx.compose.ui - Compose 레이아웃을 포함한 구성</li>\n  <li>androidx.compose.runtime - 컴포즈의 프로그래밍 모델 및 상태 관리의 기본 구성 요소를 포함하는 핵심</li>\n</ul>\n\n<p><img src=\"/images/posts/2024/GetStream-Theme/sample_03.png\" alt=\"sample_03\" /></p>\n\n<p><a href=\"https://developer.android.com/develop/ui/compose/layering\">공식 문서 Jetpack Compose architectural layering - link</a> 참고</p>\n\n<p>이 중 <code class=\"language-plaintext highlighter-rouge\">Material 3</code>를 포함하지 않는 것을 말하거나, <code class=\"language-plaintext highlighter-rouge\">Material 3</code>을 사용은 하지만 Theme는 따로 구성하는 것 역시 가능한 선택지이다.</p>\n\n<p>여기서 2가지를 이야기해 보겠다.</p>\n\n<p><br /></p>\n\n<h3>Custom Theme를 만들면서 <code class=\"language-plaintext highlighter-rouge\">Material 3</code>를 포함하지 않는다면?</h3>\n\n<p>시간과 여유가 있다면 이 방식을 선택해도 무관하다. Compose 처음 나왔을 때는 <code class=\"language-plaintext highlighter-rouge\">Material Theme</code>를 사용하지 않아도 된다는 이야기들이 많았었다.</p>\n\n<p>하지만 <code class=\"language-plaintext highlighter-rouge\">Material Theme</code> 기반으로 제공해 주는 UI가 상당한데, 모든 Components 정보는 <a href=\"https://m3.material.io/components\">Material 3의 Components - 링크</a>을 참고하길</p>\n\n<ul>\n  <li>Scaffold : TopBar, BottomBar, Content 영역을 포함하는 틀이다.\n    <ul>\n      <li><a href=\"https://thdev.tech/android/2023/01/25/Android-Compose-Scaffold/\">안드로이드 Compose Scaffold, TopAppBar 활용한 개발 - 링크</a></li>\n      <li><a href=\"https://thdev.tech/android/2023/01/11/Android-Compose-Material-Theme/\">안드로이드 Compose Material 2 컬러 정보를 알아보자 - 링크</a></li>\n    </ul>\n  </li>\n  <li>Text : 기본 Material UI 가이드를 포함</li>\n  <li>Checkbox</li>\n  <li>RadioButton</li>\n  <li>BottomSheet</li>\n  <li>Snackbar</li>\n</ul>\n\n<p>등 이후에 새로 추가되는 요소들도 여기에 모두 포함된다. Material 3를 처음부터 사용하지 않고 만들겠다면 이와 동일한 코드를 직접 작성하겠다는 의미이거나, 내부 코드를 복사해서 우리만의 Theme를 만들겠다는 의미이다.</p>\n\n<p>이걸 정말 하는 것이 맞을까는 다른 이야기다. 이 모든 걸 다 직접 만들고 관리할 수 있는가?</p>\n\n<p>어차피 선택은 팀과 개인의 자유이지만 Color 정도의 Custom만으로도 충분히 좋은 코드를 만들 수 있다는 점에서는 이 방식이 좋은 선택지인지는 모르겠다.</p>\n\n<p><br /></p>\n\n<h3>Custom Theme를 만들면서 <code class=\"language-plaintext highlighter-rouge\">Material 3</code>를 포함한다면?</h3>\n\n<p>필자는 이 방식으로 내부에서 사용할 Components를 재정의하여 사용하고 있고, Theme 역시 Material 3를 따르도록 설계해두었다.</p>\n\n<p>2년 전만 해도 이렇게 문서에 이 색상이 어디에서 적용되는지 알지 못하였지만 이젠 문서만 잘 보아도 이 색상을 어디에서 사용할 수 있는지 알 수 있다.</p>\n\n<p><img src=\"/images/posts/2024/GetStream-Theme/sample_02.png\" alt=\"sample_02\" /></p>\n\n<p>이걸 기반으로 Custom Theme를 내부에 정의하여 사용하고 있는데 아래와 같은 형태다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">object</span> <span class=\"nc\">SomeColor</span> <span class=\"p\">{</span>\n\n    <span class=\"nd\">@Stable</span>\n    <span class=\"kd\">val</span> <span class=\"py\">Color</span> <span class=\"p\">=</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"mh\">0xFF000000</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"nd\">@Immutable</span>\n<span class=\"kd\">data class</span> <span class=\"nc\">SomeColorScheme</span><span class=\"p\">(</span>\n    <span class=\"kd\">val</span> <span class=\"py\">primary</span><span class=\"p\">:</span> <span class=\"nc\">Color</span><span class=\"p\">,</span>\n    <span class=\"c1\">//... Material 3 참고 color 정의</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n   <span class=\"c1\">// 내부 코드 참고</span>\n<span class=\"p\">}</span>\n\n<span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">SomeTheme</span><span class=\"p\">(</span>\n    <span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nd\">@Composable</span> <span class=\"p\">()</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nc\">MaterialTheme</span><span class=\"p\">(</span>\n        <span class=\"n\">colorScheme</span> <span class=\"p\">=</span> <span class=\"nc\">SomeColor</span><span class=\"p\">.</span><span class=\"nc\">Colors</span><span class=\"p\">.</span><span class=\"nf\">toMaterialTheme</span><span class=\"p\">(),</span>\n        <span class=\"n\">content</span> <span class=\"p\">=</span> <span class=\"n\">content</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>마지막에 <code class=\"language-plaintext highlighter-rouge\">toMaterialTheme</code>를 이용해서 한번 복사하는 과정을 거치는데 이유는 Scaffold를 보면 알 수 있는데 다음과 같이 사용하고 있기 때문에 <code class=\"language-plaintext highlighter-rouge\">MaterialTheme</code>를 한번 감싸서 처리하고 있다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">Scaffold</span><span class=\"p\">(</span>\n    <span class=\"n\">containerColor</span><span class=\"p\">:</span> <span class=\"nc\">Color</span> <span class=\"p\">=</span> <span class=\"nc\">MaterialTheme</span><span class=\"p\">.</span><span class=\"n\">colorScheme</span><span class=\"p\">.</span><span class=\"n\">background</span><span class=\"p\">,</span>\n    <span class=\"n\">contentColor</span><span class=\"p\">:</span> <span class=\"nc\">Color</span> <span class=\"p\">=</span> <span class=\"nf\">contentColorFor</span><span class=\"p\">(</span><span class=\"n\">containerColor</span><span class=\"p\">),</span>\n    <span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nd\">@Composable</span> <span class=\"p\">(</span><span class=\"nc\">PaddingValues</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span>\n<span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>모든 Components를 내부용으로 만들 것이라면 불필요한 작업이다.</p>\n\n<p><br /></p>\n\n<h3>답은 없다.</h3>\n\n<p>두가지 방법 중 2번째 방식을 선택한 이유와 고민 포인트는 아래와 같다.</p>\n\n<ul>\n  <li>모든 컴포넌트를 내부에서 재정의하려면 시간이 걸린다.\n    <ul>\n      <li>따로 디자인 시스템을 가지는 것은 아니니 공통화의 목적으로 컴포넌트를 만들어간다.</li>\n    </ul>\n  </li>\n  <li>신경 안 쓰고 사용하더라도 기본 Theme는 따라갈 수 있도록 만들면 좋겠다.\n    <ul>\n      <li>내부의 SomeScaffold를 사용하지 않더라도 그냥 Scaffold를 사용하여도 동일하게 나와야 한다.</li>\n    </ul>\n  </li>\n</ul>\n\n<p>여기서 중요한 포인트 <code class=\"language-plaintext highlighter-rouge\">lint</code>를 만들어 사용하면 SomeScaffold 대신 Scaffold 사용하지 않게 만들 수 있지만 이런 부분을 고려하지 않았다.</p>\n\n<ul>\n  <li><a href=\"https://github.com/android/nowinandroid/tree/main/lint\">Now In Android lint - 링크</a></li>\n</ul>\n\n<p>결국 차이라고 해봐야 Material Theme를 호출할 것인가  말 것인가의 차이다.</p>\n\n<p>Material Theme를 호출하였을 경우에는 <code class=\"language-plaintext highlighter-rouge\">dynamicColor</code> 역시 대응이 가능하다. 하지만 보통의 회사 서비스에서는 이를 고려할 이유는 많지 않을 것 같지만 개인은 충분히 선택할 수 있는 선택지이다.</p>\n\n<p><img src=\"/images/posts/2024/GetStream-Theme/sample_01.png\" alt=\"sample_01\" /></p>\n\n<p><br /></p>\n\n<h2>Material 3 Theme를 따라보자.</h2>\n\n<p>Material 3 Theme를 사용한다는 것은 결국 ColorCode를 적절한 위치에 위치시켜야 한다는 이야기이다. Theme를 만드는 데 있어서 Color가 어느 지점에 적절하게 사용되어야 하는지를 알아야 하는데, 위에서도 언급했지만 다행히 구글이 문서를 갱신해 주었고, 적절한 위치의 색상 사용을 알 수 있다는 것이다.</p>\n\n<p><a href=\"https://m3.material.io/develop/android/mdc-android\">Material 3 Theme - 링크</a>에서 Components를 확인.</p>\n\n<p>적용할 수 있는 Color set은 아래와 같은데 이 값들만 36가지 종류를 가진다는 점이다. 이 값을 모두 매핑해서 사용하기엔 부담이 크다.</p>\n\n<blockquote>\n  <p>여담이지만 필자는 구글이 문서를 업데이트하기 전 이미 이 작업을 하였는데, 색상이 어디에서 사용되는지 일일이 다 찾아서 사용하였는데 이와 관련한 글을 남겼었다.</p>\n</blockquote>\n\n<p><a href=\"https://thdev.tech/android/2023/01/11/Android-Compose-Material-Theme/\">안드로이드 Compose Material 2 컬러 정보를 알아보자 - 링크</a></p>\n\n<p>이 중에 중요하다고 생각 드는 부분만 몇 가지 남기면?</p>\n\n<ul>\n  <li>\n    <p>이 부분은 GPT를 통한 번역</p>\n  </li>\n  <li>primary: 앱의 화면과 구성 요소에서 가장 자주 표시되는 주요 색상이다.</li>\n  <li>onPrimary: 주요 색상 위에 표시되는 텍스트와 아이콘에 사용되는 색상이다.</li>\n  <li>secondary: 보조 색상은 제품을 강조하고 구별하는 더 많은 방법을 제공합니다. 보조 색상은 다음에 가장 적합하다</li>\n  <li>onSecondary: 보조 색상 위에 표시되는 텍스트와 아이콘에 사용되는 색상이다.</li>\n  <li>tertiary: 주요 색상과 보조 색상의 균형을 맞추거나 입력 필드와 같은 요소에 더 높은 주의를 끌기 위해 사용할 수 있는 제3의 색상이다.</li>\n  <li>onTertiary: 제3의 색상 위에 표시되는 텍스트와 아이콘에 사용되는 색상이다.</li>\n  <li>background: 스크롤 가능한 콘텐츠 뒤에 나타나는 배경색이다.</li>\n  <li>onBackground: 배경색 위에 표시되는 텍스트와 아이콘에 사용되는 색상이다.</li>\n  <li>surface: 카드, 시트, 메뉴와 같은 구성 요소의 표면에 영향을 미치는 표면 색상이다.</li>\n  <li>onSurface: 표면 색상 위에 표시되는 텍스트와 아이콘에 사용되는 색상이다.</li>\n  <li>error: 오류 색상은 텍스트 필드의 잘못된 텍스트와 같이 구성 요소의 오류를 나타내는 데 사용한다.</li>\n  <li>onError: 오류 색상 위에 표시되는 텍스트와 아이콘에 사용되는 색상이다.</li>\n</ul>\n\n<p>그래도 이만큼이다. 다행히 내부적으로 머트리얼 2에서 이상하게 사용하던 코드도 제거되어서 머트리얼 3는 그나마 괜찮아졌다는 점이다.</p>\n\n<p>이 코드를 기반으로 ColorScheme을 정의하고, 이를 Theme에 주입해 주는 역할을 하면 되는데, 기본으로 생성해 준 코드에서는 아래와 같다.</p>\n\n<p>3가지 파라메터로 Dark theme 여부, dynamicColor 여부, 마지막 람다 표현으로 content 시작점을 사용할 수 있는데, 결국 <code class=\"language-plaintext highlighter-rouge\">MaterialTheme</code>에 colorScheme, typography, content를 지정하여 사용하게 된다는 점이다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">MyApplicationTheme</span><span class=\"p\">(</span>\n    <span class=\"n\">darkTheme</span><span class=\"p\">:</span> <span class=\"nc\">Boolean</span> <span class=\"p\">=</span> <span class=\"nf\">isSystemInDarkTheme</span><span class=\"p\">(),</span>\n    <span class=\"c1\">// Dynamic color is available on Android 12+</span>\n    <span class=\"n\">dynamicColor</span><span class=\"p\">:</span> <span class=\"nc\">Boolean</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">,</span>\n    <span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nd\">@Composable</span> <span class=\"p\">()</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">val</span> <span class=\"py\">colorScheme</span> <span class=\"p\">=</span> <span class=\"k\">when</span> <span class=\"p\">{</span>\n        <span class=\"n\">dynamicColor</span> <span class=\"p\">&amp;&amp;</span> <span class=\"nc\">Build</span><span class=\"p\">.</span><span class=\"nc\">VERSION</span><span class=\"p\">.</span><span class=\"nc\">SDK_INT</span> <span class=\"p\">&gt;=</span> <span class=\"nc\">Build</span><span class=\"p\">.</span><span class=\"nc\">VERSION_CODES</span><span class=\"p\">.</span><span class=\"nc\">S</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n            <span class=\"kd\">val</span> <span class=\"py\">context</span> <span class=\"p\">=</span> <span class=\"nc\">LocalContext</span><span class=\"p\">.</span><span class=\"n\">current</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">darkTheme</span><span class=\"p\">)</span> <span class=\"nf\">dynamicDarkColorScheme</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"nf\">dynamicLightColorScheme</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"n\">darkTheme</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">DarkColorScheme</span>\n        <span class=\"k\">else</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">LightColorScheme</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nc\">MaterialTheme</span><span class=\"p\">(</span>\n        <span class=\"n\">colorScheme</span> <span class=\"p\">=</span> <span class=\"n\">colorScheme</span><span class=\"p\">,</span>\n        <span class=\"n\">typography</span> <span class=\"p\">=</span> <span class=\"nc\">Typography</span><span class=\"p\">,</span>\n        <span class=\"n\">content</span> <span class=\"p\">=</span> <span class=\"n\">content</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>이렇게 <code class=\"language-plaintext highlighter-rouge\">MaterialTheme</code>를 사용하여 지정한 코드에서 특정 컬러를 적용하고 싶다면 <code class=\"language-plaintext highlighter-rouge\">MaterialTheme.colorScheme.primary</code>로 호출하여 사용한다.</p>\n\n<p>이 부분이 이미 적용되어 있는 Scaffold는 아래와 같이 사용하기만 해도 기본 또는 dynamicColor에 따라 색상이 적용된다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">Screen</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nc\">Scaffold</span> <span class=\"p\">{</span>\n        <span class=\"nc\">Box</span><span class=\"p\">(</span><span class=\"n\">modifier</span> <span class=\"p\">=</span> <span class=\"nc\">Modifier</span><span class=\"p\">.</span><span class=\"nf\">padding</span><span class=\"p\">(</span><span class=\"n\">it</span><span class=\"p\">))</span> <span class=\"p\">{}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p><br /></p>\n\n<h2>MaterialTheme에는 어떤 걸 포함하고 있을까?</h2>\n\n<p>GetStream의 코드를 보기 전에 MaterialTheme에는 어떤 걸 외부로 제공하고 있는지 살펴보고 넘어가 보자.</p>\n\n<ul>\n  <li>colorScheme : 현재 테마의 색상 정보를 가져올 수 있으며 <code class=\"language-plaintext highlighter-rouge\">MaterialTheme.colorScheme.xxx</code>으로 불러서 사용</li>\n  <li>typography : 현재 테마의 폰트 정보를 가지며 <code class=\"language-plaintext highlighter-rouge\">MaterialTheme.typography.xxx</code>로 불러서 사용</li>\n  <li>shapes : 현재 테마의 shapes 정보를 가지며 <code class=\"language-plaintext highlighter-rouge\">MaterialTheme.shapes.xxx</code>로 불러서 사용</li>\n</ul>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">object</span> <span class=\"nc\">MaterialTheme</span> <span class=\"p\">{</span>\n    <span class=\"cm\">/**\n     * Retrieves the current [ColorScheme] at the call site's position in the hierarchy.\n     */</span>\n    <span class=\"kd\">val</span> <span class=\"py\">colorScheme</span><span class=\"p\">:</span> <span class=\"nc\">ColorScheme</span>\n        <span class=\"nd\">@Composable</span>\n        <span class=\"nd\">@ReadOnlyComposable</span>\n        <span class=\"k\">get</span><span class=\"p\">()</span> <span class=\"p\">=</span> <span class=\"nc\">LocalColorScheme</span><span class=\"p\">.</span><span class=\"n\">current</span>\n\n    <span class=\"cm\">/**\n     * Retrieves the current [Typography] at the call site's position in the hierarchy.\n     */</span>\n    <span class=\"kd\">val</span> <span class=\"py\">typography</span><span class=\"p\">:</span> <span class=\"nc\">Typography</span>\n        <span class=\"nd\">@Composable</span>\n        <span class=\"nd\">@ReadOnlyComposable</span>\n        <span class=\"k\">get</span><span class=\"p\">()</span> <span class=\"p\">=</span> <span class=\"nc\">LocalTypography</span><span class=\"p\">.</span><span class=\"n\">current</span>\n\n    <span class=\"cm\">/**\n     * Retrieves the current [Shapes] at the call site's position in the hierarchy.\n     */</span>\n    <span class=\"kd\">val</span> <span class=\"py\">shapes</span><span class=\"p\">:</span> <span class=\"nc\">Shapes</span>\n        <span class=\"nd\">@Composable</span>\n        <span class=\"nd\">@ReadOnlyComposable</span>\n        <span class=\"k\">get</span><span class=\"p\">()</span> <span class=\"p\">=</span> <span class=\"nc\">LocalShapes</span><span class=\"p\">.</span><span class=\"n\">current</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>이와 같이 Material Theme를 지정해두고 사용할 수 있다. 내부적으로 <code class=\"language-plaintext highlighter-rouge\">SomeTheme</code>를 사용한다면 이와 같은 클래스를 직접 만들어 활용하게 되는 것이다.</p>\n\n<p><br /></p>\n\n<h2>GetStream Theme 알아보기 전에</h2>\n\n<p>Material 3의 Theme는 일반적인 앱에서 활용할 수 있는 정도의 가장 기본 가이드를 제공해 준다. 반면 <a href=\"https://getstream.io/?utm_source=Taehwan_Android_Blog&amp;utm_medium=Taehwan_Android_Blog&amp;utm_content=Developer&amp;utm_campaign=Taehwan_Android_Blog_Nov_2024&amp;utm_term=DevRel\">GetStream - 링크</a> <code class=\"language-plaintext highlighter-rouge\">APIs and SDKs to Build In-App Chat &amp; Video &amp; Feeds Faster.</code>에서 사용하기 위한 SDK 용도로 확장해 사용하고 있다.</p>\n\n<p>Material 3의 Theme 샘플을 통해서도 확장 가능하지만 SDK에서 활용될 수 있는 점을 적절하게 이용하면 Theme 사용을 좀 더 넓은 의미로 확장해 사용할 수 있음을 알 수 있으니 Theme를 사용하는 방식을 알아보자.</p>\n\n<p><br /></p>\n\n<h2>GetStream에서 사용하는 Theme</h2>\n\n<p>기본 Theme를 내부적으로 사용할 수 있도록 <code class=\"language-plaintext highlighter-rouge\">SomeTheme</code>를 만들어 사용할 수 있음을 확인하였다. 그럼 GetStream에서 제공하는 Theme는 어디까지 제공하고 있을까?</p>\n\n<p>GetStream의 코드를 보기 전에 문서를 먼저 살펴보았다.</p>\n\n<ul>\n  <li><a href=\"https://getstream.io/chat/docs/sdk/android/compose/general-customization/chat-theme/?utm_source=Taehwan_Android_Blog&amp;utm_medium=Taehwan_Android_Blog&amp;utm_content=Developer&amp;utm_campaign=Taehwan_Android_Blog_Nov_2024&amp;utm_term=DevRel\">GetStream ChartTheme에서의 Custom 제공 정보 - 링크</a></li>\n</ul>\n\n<p>이 문서에는 생각보다 Theme를 더 넓은 의미로 활용하고 있음을 알 수 있는데, 아래와 같이 나열해 보았다.</p>\n\n<ul>\n  <li>기본 정보\n    <ul>\n      <li>Get Stream chart 관련 기본 설정</li>\n      <li>test 관련 옵션 제공</li>\n    </ul>\n  </li>\n  <li>권한과 관련\n    <ul>\n      <li>Audio/Video를 활용하기 위한 권한 처리</li>\n      <li>파일 첨부 처리를 도와주는 제어, 팩토리, 권한 관련</li>\n    </ul>\n  </li>\n  <li>Theme와 관련\n    <ul>\n      <li>Theme에 대한 상세정보, 화면별로 필요한 Theme 정보, font 정보</li>\n    </ul>\n  </li>\n  <li>기타\n    <ul>\n      <li>Stream MediaRecorder</li>\n      <li>DateFormatter</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h3>코드를 살펴보자</h3>\n\n<ul>\n  <li><a href=\"https://getstream.io/chat/docs/sdk/android/compose/general-customization/chat-theme/?utm_source=Taehwan_Android_Blog&amp;utm_medium=Taehwan_Android_Blog&amp;utm_content=Developer&amp;utm_campaign=Taehwan_Android_Blog_Nov_2024&amp;utm_term=DevRel\">GetStream ChartTheme에서의 Custom 제공 정보 - 링크</a></li>\n</ul>\n\n<p>이 코드는 <a href=\"https://github.com/GetStream/stream-chat-android/blob/main/stream-chat-android-compose/src/main/java/io/getstream/chat/android/compose/ui/theme/ChatTheme.kt\">GetStream ChatTheme.kt - 링크</a>의 코드 중 일부를 적은 부분인데, SDK로서의 역할을 할 수 있는 모든 부분을 담고 있다고 보아도 좋을 것 같다.</p>\n\n<ul>\n  <li>SDK라면 지정해 준 정보를 내부에서 바꾸지 않고 그대로 활용함을 보장해야 하며</li>\n  <li>외부에서 주입해 주는 커스텀 역시 충분히 제공하는 것이 좋다.</li>\n</ul>\n\n<p>라는 관점으로 보면 이 GetStream의 SDK로써는 충분히 유용하게 작성되었다는 점이다.</p>\n\n<p>문맥상 매우 길어져서 몇 가지 정보만 가져와보았으니 참고해 보면 좋을 듯하다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Composable</span>\n<span class=\"k\">public</span> <span class=\"k\">fun</span> <span class=\"nf\">ChatTheme</span><span class=\"p\">(</span>\n    <span class=\"cm\">/* 생략 */</span>\n    <span class=\"n\">autoTranslationEnabled</span><span class=\"p\">:</span> <span class=\"nc\">Boolean</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">,</span> <span class=\"c1\">// 각종 옵션들</span>\n    <span class=\"cm\">/* 생략 */</span>\n    <span class=\"n\">colors</span><span class=\"p\">:</span> <span class=\"nc\">StreamColors</span> <span class=\"p\">=</span> <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">isInDarkMode</span><span class=\"p\">)</span> <span class=\"nc\">StreamColors</span><span class=\"p\">.</span><span class=\"nf\">defaultDarkColors</span><span class=\"p\">()</span> <span class=\"k\">else</span> <span class=\"nc\">StreamColors</span><span class=\"p\">.</span><span class=\"nf\">defaultColors</span><span class=\"p\">(),</span> <span class=\"c1\">// color 정의</span>\n    <span class=\"cm\">/* 생략 */</span>\n    <span class=\"n\">rippleTheme</span><span class=\"p\">:</span> <span class=\"nc\">RippleTheme</span> <span class=\"p\">=</span> <span class=\"nc\">StreamRippleTheme</span><span class=\"p\">,</span> <span class=\"c1\">// Ripple 정의</span>\n    <span class=\"n\">attachmentFactories</span><span class=\"p\">:</span> <span class=\"nc\">List</span><span class=\"p\">&lt;</span><span class=\"nc\">AttachmentFactory</span><span class=\"p\">&gt;</span> <span class=\"p\">=</span> <span class=\"nc\">StreamAttachmentFactories</span><span class=\"p\">.</span><span class=\"nf\">defaultFactories</span><span class=\"p\">(),</span> <span class=\"c1\">// 파일 첨부 정보</span>\n    <span class=\"cm\">/* 생략 */</span>\n    <span class=\"n\">allowUIAutomationTest</span><span class=\"p\">:</span> <span class=\"nc\">Boolean</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">,</span> <span class=\"c1\">// 테스트 관련</span>\n    <span class=\"n\">dateFormatter</span><span class=\"p\">:</span> <span class=\"nc\">DateFormatter</span> <span class=\"p\">=</span> <span class=\"nc\">DateFormatter</span><span class=\"p\">.</span><span class=\"nf\">from</span><span class=\"p\">(</span><span class=\"nc\">LocalContext</span><span class=\"p\">.</span><span class=\"n\">current</span><span class=\"p\">),</span> <span class=\"c1\">// 채팅에 사용할 date formatter</span>\n    <span class=\"cm\">/* 생략 */</span>\n    <span class=\"n\">messagePreviewFormatter</span><span class=\"p\">:</span> <span class=\"nc\">MessagePreviewFormatter</span> <span class=\"p\">=</span> <span class=\"nc\">MessagePreviewFormatter</span><span class=\"p\">.</span><span class=\"nf\">defaultFormatter</span><span class=\"p\">(</span>\n        <span class=\"n\">context</span> <span class=\"p\">=</span> <span class=\"nc\">LocalContext</span><span class=\"p\">.</span><span class=\"n\">current</span><span class=\"p\">,</span>\n        <span class=\"n\">typography</span> <span class=\"p\">=</span> <span class=\"n\">typography</span><span class=\"p\">,</span>\n        <span class=\"n\">attachmentFactories</span> <span class=\"p\">=</span> <span class=\"n\">attachmentFactories</span><span class=\"p\">,</span>\n        <span class=\"n\">autoTranslationEnabled</span> <span class=\"p\">=</span> <span class=\"n\">autoTranslationEnabled</span><span class=\"p\">,</span>\n    <span class=\"p\">),</span>\n    <span class=\"cm\">/* 생략 */</span>\n    <span class=\"n\">attachmentsPickerTabFactories</span><span class=\"p\">:</span> <span class=\"nc\">List</span><span class=\"p\">&lt;</span><span class=\"nc\">AttachmentsPickerTabFactory</span><span class=\"p\">&gt;</span> <span class=\"p\">=</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">useDefaultSystemMediaPicker</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nc\">AttachmentsPickerTabFactories</span><span class=\"p\">.</span><span class=\"nf\">defaultFactoriesWithoutStoragePermissions</span><span class=\"p\">()</span>\n        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n            <span class=\"nc\">AttachmentsPickerTabFactories</span><span class=\"p\">.</span><span class=\"nf\">defaultFactories</span><span class=\"p\">()</span>\n        <span class=\"p\">},</span>\n    <span class=\"cm\">/* Theme 관련 생략 */</span>\n    <span class=\"n\">streamMediaRecorder</span><span class=\"p\">:</span> <span class=\"nc\">StreamMediaRecorder</span> <span class=\"p\">=</span> <span class=\"nc\">DefaultStreamMediaRecorder</span><span class=\"p\">(</span><span class=\"nc\">LocalContext</span><span class=\"p\">.</span><span class=\"n\">current</span><span class=\"p\">),</span>\n    <span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nd\">@Composable</span> <span class=\"p\">()</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p><br /></p>\n\n<h3>함수 안에도 조금 살펴보자.</h3>\n\n<p>ChatTheme의 코드 중에 눈에 띄는 코드는 <code class=\"language-plaintext highlighter-rouge\">allowUIAutomationTest</code> 옵션을 별도로 제공한다는 점이다.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">allowUIAutomationTest - true/false</code>를 제공함으로써 <code class=\"language-plaintext highlighter-rouge\">semantics</code>를 활용한 UI Test 대응을 미리 해두었다는 점이다. 컴포즈에서 Ui test를 아직 시도하지는 않아서 자세한 내용은 문서를 참고해 보시길</p>\n\n<p><a href=\"https://developer.android.com/develop/ui/compose/accessibility/semantics\">semantics - 링크</a></p>\n\n<p>그 외에는 <code class=\"language-plaintext highlighter-rouge\">LocalXXX</code>로 시작하는 코드들이 상당히 많이 보인다. <code class=\"language-plaintext highlighter-rouge\">LocalXXX</code> 부분의 코드가 많이 보인다는 건 이 부분을 살펴보는 것이 도움이 될 수 있다는 점이다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">CompositionLocalProvider</span><span class=\"p\">(</span>\n        <span class=\"nc\">LocalColors</span> <span class=\"n\">provides</span> <span class=\"n\">colors</span><span class=\"p\">,</span>\n        <span class=\"cm\">/* 생략 */</span>\n        <span class=\"nc\">LocalComposerLinkPreviewEnabled</span> <span class=\"n\">provides</span> <span class=\"n\">isComposerLinkPreviewEnabled</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">allowUIAutomationTest</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nc\">Box</span><span class=\"p\">(</span>\n                <span class=\"n\">modifier</span> <span class=\"p\">=</span> <span class=\"nc\">Modifier</span><span class=\"p\">.</span><span class=\"nf\">semantics</span> <span class=\"p\">{</span> <span class=\"n\">testTagsAsResourceId</span> <span class=\"p\">=</span> <span class=\"n\">allowUIAutomationTest</span> <span class=\"p\">},</span>\n            <span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"nf\">content</span><span class=\"p\">()</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n            <span class=\"nf\">content</span><span class=\"p\">()</span>\n        <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p><br /></p>\n\n<h2>GetStream의 CompositionLocalProvider 적용 부분은?</h2>\n\n<p>Stream에서 사용하는 <code class=\"language-plaintext highlighter-rouge\">CompositionLocalProvider</code>는 모두 <code class=\"language-plaintext highlighter-rouge\">compositionLocalOf</code>을 활용하고 있다는 점이다.</p>\n\n<p>사실 Theme의 시작점이고 값의 변경은 <code class=\"language-plaintext highlighter-rouge\">staticCompositionLocalOf</code>을 사용하여 UI가 다시 그려짐을 보장하여도 될 것 같은데, <code class=\"language-plaintext highlighter-rouge\">compositionLocalOf</code>을 사용하고 있다는 점이다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">LocalColors</span> <span class=\"p\">=</span> <span class=\"n\">compositionLocalOf</span><span class=\"p\">&lt;</span><span class=\"nc\">StreamColors</span><span class=\"p\">&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nf\">error</span><span class=\"p\">(</span><span class=\"s\">\"No colors provided! Make sure to wrap all usages of Stream components in a ChatTheme.\"</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n<span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">LocalDimens</span> <span class=\"p\">=</span> <span class=\"n\">compositionLocalOf</span><span class=\"p\">&lt;</span><span class=\"nc\">StreamDimens</span><span class=\"p\">&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nf\">error</span><span class=\"p\">(</span><span class=\"s\">\"No dimens provided! Make sure to wrap all usages of Stream components in a ChatTheme.\"</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>그리고 또 하나 중요한 포인트는 private으로 Theme 이외에서는 이 값들을 업데이트하지 않음을 보장해 주고 있다.</p>\n\n<p>구글의 대표적인 Color 처리하는 코드는 아래와 같은데, Stream에서는 이 부분을 모두 private으로 적용한 부분을 그대로 활용할 수 있음을 보장한다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">val</span> <span class=\"py\">LocalContentColor</span> <span class=\"p\">=</span> <span class=\"nf\">compositionLocalOf</span> <span class=\"p\">{</span> <span class=\"nc\">Color</span><span class=\"p\">.</span><span class=\"nc\">Black</span> <span class=\"p\">}</span>\n</code></pre></div></div>\n\n<blockquote>\n  <p>LocalContentColor는 언제 어디서든 값을 변경하고 업데이트할 수 있다.</p>\n</blockquote>\n\n<p><br /></p>\n\n<h2>GetStream은 Theme에서 CompositionLocalProvider를 활용하여 값을 부르는 건 알겠는데?</h2>\n\n<p>Theme의 범위를 어디까지 잡아야 할까? Stream의 코드 아랫 부분에 외부에서 사용할 수 있는 값들을 매핑하였는데 아래와 같다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">public</span> <span class=\"kd\">object</span> <span class=\"nc\">ChatTheme</span> <span class=\"p\">{</span>\n    <span class=\"k\">public</span> <span class=\"kd\">val</span> <span class=\"py\">colors</span><span class=\"p\">:</span> <span class=\"nc\">StreamColors</span>\n        <span class=\"nd\">@Composable</span>\n        <span class=\"nd\">@ReadOnlyComposable</span>\n        <span class=\"k\">get</span><span class=\"p\">()</span> <span class=\"p\">=</span> <span class=\"nc\">LocalColors</span><span class=\"p\">.</span><span class=\"n\">current</span>\n\n    <span class=\"cm\">/* 생략 */</span>\n\n    <span class=\"cm\">/**\n     * Retrieves the current list of [StreamMediaRecorder] at the call site's position in the hierarchy.\n     */</span>\n    <span class=\"k\">public</span> <span class=\"kd\">val</span> <span class=\"py\">streamMediaRecorder</span><span class=\"p\">:</span> <span class=\"nc\">StreamMediaRecorder</span>\n        <span class=\"nd\">@Composable</span>\n        <span class=\"nd\">@ReadOnlyComposable</span>\n        <span class=\"k\">get</span><span class=\"p\">()</span> <span class=\"p\">=</span> <span class=\"nc\">LocalStreamMediaRecorder</span><span class=\"p\">.</span><span class=\"n\">current</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>모든 정보는 <code class=\"language-plaintext highlighter-rouge\">ChatTheme.colors.xxx</code>로 부르거나 <code class=\"language-plaintext highlighter-rouge\">ChatTheme.streamMediaRecorder.xxxx</code>로 바로 활용할 수 있다는 점이다.</p>\n\n<p>그런데 Theme인데 <code class=\"language-plaintext highlighter-rouge\">streamMediaRecorder</code>를 바로 불러다 사용하는 것이 맞을까?</p>\n\n<p>개인적으론 SDK라서 이를 활용하는 방식도 좋은 방법이라고 생각한다. 결국 <code class=\"language-plaintext highlighter-rouge\">CompositionLocalProvider</code>를 통해 사용 범위를 명확히 지정하여 사용하고 있고, 이 값들은 초기에 지정해 준 정보를 그대로 사용하고 있음을 명시적으로 작성해두었기 때문에 특별히 문제는 없는 듯하다.</p>\n\n<p>하지만 일반적인 서비스에서 이렇게까지 하는 게 맞을까는 고민이 필요한 점이다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">SomeTheme</span><span class=\"p\">.</span><span class=\"n\">triggerEvent</span><span class=\"p\">.</span><span class=\"n\">xxxx</span> <span class=\"c1\">// 이렇게 사용하는 것이 맞을까?</span>\n<span class=\"nc\">LocalTriggerEvent</span><span class=\"p\">.</span><span class=\"n\">current</span><span class=\"p\">.</span><span class=\"n\">xxxx</span> <span class=\"c1\">// 이렇게 활용하는 것이 더 좋을까?</span>\n</code></pre></div></div>\n\n<p><br /></p>\n\n<h2>CompositionLocalProvider를 좀 더 알아보자.</h2>\n\n<p><code class=\"language-plaintext highlighter-rouge\">CompositionLocalProvider</code>을 깊이 있게 탐구하는 것은 아니지만 문서에 나와있는 내용을 좀 더 알아보고 넘어가자.</p>\n\n<p><br /></p>\n\n<h3>결국 Theme는 CompositionLocalProvider를 활용한다.</h3>\n\n<p><code class=\"language-plaintext highlighter-rouge\">CompositionLocalProvider</code>를 이용해 필요한 정보를 라이프 사이클에 맞게 불러다 활용할 수 있는데, <code class=\"language-plaintext highlighter-rouge\">Material 3 Theme</code> 내부도 Stream에서의 코드와 마찬가지로 적용하고 있다.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">MaterialTheme</code>는 크게 <code class=\"language-plaintext highlighter-rouge\">ColorScheme</code>, <code class=\"language-plaintext highlighter-rouge\">Shapes</code>, <code class=\"language-plaintext highlighter-rouge\">Typography</code>를 주입받고, 내부에서 필요한 정보를 추가로 Provider에 셋하고 있다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">MaterialTheme</span><span class=\"p\">(</span>\n    <span class=\"n\">colorScheme</span><span class=\"p\">:</span> <span class=\"nc\">ColorScheme</span> <span class=\"p\">=</span> <span class=\"nc\">MaterialTheme</span><span class=\"p\">.</span><span class=\"n\">colorScheme</span><span class=\"p\">,</span>\n    <span class=\"n\">shapes</span><span class=\"p\">:</span> <span class=\"nc\">Shapes</span> <span class=\"p\">=</span> <span class=\"nc\">MaterialTheme</span><span class=\"p\">.</span><span class=\"n\">shapes</span><span class=\"p\">,</span>\n    <span class=\"n\">typography</span><span class=\"p\">:</span> <span class=\"nc\">Typography</span> <span class=\"p\">=</span> <span class=\"nc\">MaterialTheme</span><span class=\"p\">.</span><span class=\"n\">typography</span><span class=\"p\">,</span>\n    <span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nd\">@Composable</span> <span class=\"p\">()</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">val</span> <span class=\"py\">rippleIndication</span> <span class=\"p\">=</span> <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">compose</span><span class=\"p\">.</span><span class=\"n\">material</span><span class=\"p\">.</span><span class=\"n\">ripple</span><span class=\"p\">.</span><span class=\"nf\">rememberRipple</span><span class=\"p\">()</span>\n    <span class=\"kd\">val</span> <span class=\"py\">selectionColors</span> <span class=\"p\">=</span> <span class=\"nf\">rememberTextSelectionColors</span><span class=\"p\">(</span><span class=\"n\">colorScheme</span><span class=\"p\">)</span>\n    <span class=\"nc\">CompositionLocalProvider</span><span class=\"p\">(</span>\n        <span class=\"nc\">LocalColorScheme</span> <span class=\"n\">provides</span> <span class=\"n\">colorScheme</span><span class=\"p\">,</span>\n        <span class=\"nc\">LocalIndication</span> <span class=\"n\">provides</span> <span class=\"n\">rippleIndication</span><span class=\"p\">,</span>\n        <span class=\"n\">androidx</span><span class=\"p\">.</span><span class=\"n\">compose</span><span class=\"p\">.</span><span class=\"n\">material</span><span class=\"p\">.</span><span class=\"n\">ripple</span><span class=\"p\">.</span><span class=\"nc\">LocalRippleTheme</span> <span class=\"n\">provides</span> <span class=\"nc\">MaterialRippleTheme</span><span class=\"p\">,</span>\n        <span class=\"nc\">LocalShapes</span> <span class=\"n\">provides</span> <span class=\"n\">shapes</span><span class=\"p\">,</span>\n        <span class=\"nc\">LocalTextSelectionColors</span> <span class=\"n\">provides</span> <span class=\"n\">selectionColors</span><span class=\"p\">,</span>\n        <span class=\"nc\">LocalTypography</span> <span class=\"n\">provides</span> <span class=\"n\">typography</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nc\">ProvideTextStyle</span><span class=\"p\">(</span><span class=\"n\">value</span> <span class=\"p\">=</span> <span class=\"n\">typography</span><span class=\"p\">.</span><span class=\"n\">bodyLarge</span><span class=\"p\">,</span> <span class=\"n\">content</span> <span class=\"p\">=</span> <span class=\"n\">content</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>이 중 colorScheme은 <code class=\"language-plaintext highlighter-rouge\">staticCompositionLocalOf</code>을 사용하여 초기화하고 있고,</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">internal</span> <span class=\"kd\">val</span> <span class=\"py\">LocalColorScheme</span> <span class=\"p\">=</span> <span class=\"nf\">staticCompositionLocalOf</span> <span class=\"p\">{</span> <span class=\"nf\">lightColorScheme</span><span class=\"p\">()</span> <span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p><code class=\"language-plaintext highlighter-rouge\">selectionColors</code>은 <code class=\"language-plaintext highlighter-rouge\">compositionLocalOf</code>을 활용하고 있다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">val</span> <span class=\"py\">LocalTextSelectionColors</span> <span class=\"p\">=</span> <span class=\"nf\">compositionLocalOf</span> <span class=\"p\">{</span> <span class=\"nc\">DefaultTextSelectionColors</span> <span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>결국 이 둘을 잘 알면 유용하게 사용할 수 있다는 의미이니 문서를 참고해 보자.</p>\n\n<p><br /></p>\n\n<h2>CompositionLocalProvider란?</h2>\n\n<p><a href=\"https://developer.android.com/develop/ui/compose/compositionlocal\">Locally scoped data with CompositionLocal - 링크</a>이란 공식 문서이다.</p>\n\n<p>compostionLocalProvider에는 2개의 초기화 방법을 제공한다.</p>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">compositionLocalOf</code> : 현재 범위 내에 compositionLocal의 정보가 변경되었을 경우 해당 범위 내의 이 값을 사용하는 범위를 갱신\n    <ul>\n      <li>ContentColor를 범위 내에서 color 변경한다면 이 색상을 호출하여 사용하는 곳을 추적하여 UI를 갱신</li>\n    </ul>\n  </li>\n  <li><code class=\"language-plaintext highlighter-rouge\">staticCompositionLocalOf</code> : 이 값은 범위 내의 값을 추적하지 않고 그냥 전부 새로 그림.\n    <ul>\n      <li>ContentColor를 이 값으로 활용할 경우 화면을 전부 새로 그림</li>\n    </ul>\n  </li>\n</ul>\n\n<p>이 두 함수의 영향 범위는 매우 다름을 알 수 있다.</p>\n\n<p>이전에 작성한 Compose에서 웹뷰를 유지하는 방법에서는 <code class=\"language-plaintext highlighter-rouge\">staticCompositionLocalOf</code> 활용하는 방법을 소개했었으니 참고해 보셔도 좋다.</p>\n\n<ul>\n  <li><a href=\"https://thdev.tech/compose/2024/07/21/Android-Compose-Navigation-Web/\">Compose Navigation - WebView Recomposition 해결? - 링크</a></li>\n</ul>\n\n<p><code class=\"language-plaintext highlighter-rouge\">staticCompositionLocalOf</code>은 값이 명확하게 1회 초기화하며 이후에는 변경하지 않음을 명시할 경우 활용하는 것이 좋고, <code class=\"language-plaintext highlighter-rouge\">compositionLocalOf</code>는 언제든 변경되고, 이 값이 변경되었을 경우 값을 사용한 부분도 UI 갱신이 일어나야 하는 경우 이를 활용하는 것이 좋다.</p>\n\n<p>이 내용을 깊이 있게 알고 싶다면 Jetpack Compose Internals의 <code class=\"language-plaintext highlighter-rouge\">4장 Compose UI, 측정 정책 (Measuring policies)</code> 부분에서 매우 상세하게 다루고 있으니 책을 참고하여 추가 학습하시길</p>\n\n<p><a href=\"https://leanpub.com/composeinternalskor\">Jetpack Compose Internals 한국어 번역(번역 엄재웅, 류기민) - 링크</a></p>\n\n<p><br /></p>\n\n<h2>마무리</h2>\n\n<p>이 글은 GetStream의 후원을 받아 작성하였다. GetStream의 내부 Theme 활용을 글로 담았는데, SDK를 만든다면 이런 형태로의 Theme를 활용할 수 있구나를 파악할 수 있었다.</p>\n\n<p>거기에 결국 Theme 값을 유지하면서 상태를 보장해 주는 방식을 private으로 잘 구분하여 사용해야 하며, Theme를 통해 더 많은 값을 불러다 활용할 수 있도록 만들어주는 것 역시 가능함을 알 수 있었다.</p>\n\n<p>이런 방식에서는 사실 호불호가 생길 수 있긴 하다.</p>\n\n<ul>\n  <li>Theme인데 왜 Theme와 관련 없는 설정 정보를 포함하는 것인가?</li>\n  <li>초기화만 하고, Theme가 아닌 접근 방법을 제공하면 더 좋은 거 아닐까?</li>\n</ul>\n\n<p>이 부분은 코드 컨벤션과 관련이 있지 않을까 싶다. <code class=\"language-plaintext highlighter-rouge\">SomeTheme.value.xxxx</code>를 사용하였을 때 <code class=\"language-plaintext highlighter-rouge\">LocalXXX.current</code>를 기억하고 사용하는 행위를 반대로 줄일 수 있으니 말이다.</p>\n\n<p>이 글로 Theme를 구성하는 전반적인 방법이나 <code class=\"language-plaintext highlighter-rouge\">CompositionLocal</code> 사용을 다 알 수 있는 것은 아니지만 Theme를 이렇게까지 활용하고 접근 제어를 어떻게 하는 것이 좋을지만 이해해도 다행이라고 생각한다.</p>\n\n<p>Material 3에서 사용하는 Token 방식의 Color 지정을 논하진 않았는데 이 방식은 figma와 밀접한 관련이 있다고 하니 아래 링크를 참고하시길</p>\n\n<ul>\n  <li><a href=\"https://m3.material.io/foundations/design-tokens/overview\">m3 Design tokens - 링크</a></li>\n  <li><a href=\"https://getstream.io/?utm_source=Taehwan_Android_Blog&amp;utm_medium=Taehwan_Android_Blog&amp;utm_content=Developer&amp;utm_campaign=Taehwan_Android_Blog_Nov_2024&amp;utm_term=DevRel\">GetStream SDK 알아보기 - 링크</a></li>\n</ul>\n\n",
        "contentSnippet": "Compose Theme는 어떻게 적용하고 활용할 수 있을까?\nMaterial Theme에 따라서 사용할까?\n우리만의 디자인 시스템 색상 값과 필요한 정보를 포함하여 Custom theme 구성?\n이런 고민은 한 번쯤? 해볼 수 있을 것 같다.\n본 글은 GetStream의 후원으로 작성된 글로 다음의 내용을 다루어보려 한다.\nMaterial 3 사용하지 않는다면?\nMaterial 3 사용하여 테마 만들기?\nSDK로 유명한 GetStream에서는 Theme를 어떻게 사용하고 있을까?\n추가로 Theme 함수의 내부에는 CompositionLocalProvider가 많던데? CompositionLocalProvider을 좀 더 살펴보자.\n본문을 통해 하나씩 이야기해 보겠다.\nGetStream SDK 알아보기 - 링크\n읽기 전에\nXML Theme는 다루지 않는다.\nCompose component에 대해 설명하지 않는다.\nMaterial 3에서 사용하는 Token 방식의 Color 지정을 논하진 않는다.\nGetStream 후원으로 작성한 글이다.\n\nCompose에서 Theme가 필요할까?\nAndroid에서 Theme가 필요할까? XML을 다룰 때는 특별히 테마를 신경 쓰지 않고, 필요할 때(투명, 바텀, alert 등) 사용하고, XML 코드에 대부분 색상을 직접 지정하였다.\nCompose에서도 Theme 없이 만들 수 있지 않을까? Compose Theme가 필요한지 먼저 따져보기 전에 Android Studio에서 제공하는 기본 코드를 살펴보자.\nEmpty Activity 프로젝트를 생성하면 바로 확인할 수 있는 코드로, Material 3 기반 코드로 작성되어 있다.\nsetContent부터 MyApplicationTheme, Compose Component 조합으로 화면을 그리고 있다.\n\nclass MainActivity : ComponentActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        enableEdgeToEdge()\n        setContent {\n            MyApplicationTheme {\n                Scaffold(modifier = Modifier.fillMaxSize()) { innerPadding ->\n                    Greeting(\n                        name = \"Android\",\n                        modifier = Modifier.padding(innerPadding)\n                    )\n                }\n            }\n        }\n    }\n}\n\n\n기본 코드에서도 알 수 있지만 MyApplicationTheme {}이 시작 부분에 적용됨을 알 수 있다.\n여기서 고민해 볼 수 있는데 Theme {} 시작 부분을 꼭 가져야 할까?\n답은, 없는것보단 적용하는 것이 좋으며, Material을 따르지 않더라도 CustomTheme를 가지는 것이 좋다.\n우선 Theme가 없다면 아래와 같이 직접 코드 작성 시 Color와 TextStyle을 일일이 지정해야 한다.\n\nText(\n    text = \"Hello $name!\",\n    color = Color.Blue,\n    modifier = modifier\n)\n\n\n한두 줄이라면 크게 상관없겠지만 Theme라는 틀을 활용하면 요구사항을 빠르고, 유연하게 적용할 수 있다.\n없는 것보단 있는 것이 당연하지만 좋다.(Material을 따르지 않고 CustomTheme 사용하는 것은 또 다른 이야기가 된다.)\n\n구글에서 제공하는 Material 3를 사용하지 않는다면?\nTheme를 가지는 것은 당연하지만 좋은 선택이다. 하지만 Material 3을 사용하는 것이 맞을까?\n우선 Compose Material 3 라이브러리에는 아래와 같이 3개의 디펜던시를 필요로 한다.\nandroidx.compose.material3 - Material3 Theme를 포함하여 UI 요소를 포함\nandroidx.compose.foundation - UI 위에 가장 기본이 되는 Text/TextField 와 같은 부분을 적용\nandroidx.compose.ui - Compose 레이아웃을 포함한 구성\nandroidx.compose.runtime - 컴포즈의 프로그래밍 모델 및 상태 관리의 기본 구성 요소를 포함하는 핵심\n\n공식 문서 Jetpack Compose architectural layering - link 참고\n이 중 Material 3를 포함하지 않는 것을 말하거나, Material 3을 사용은 하지만 Theme는 따로 구성하는 것 역시 가능한 선택지이다.\n여기서 2가지를 이야기해 보겠다.\n\nCustom Theme를 만들면서 Material 3를 포함하지 않는다면?\n시간과 여유가 있다면 이 방식을 선택해도 무관하다. Compose 처음 나왔을 때는 Material Theme를 사용하지 않아도 된다는 이야기들이 많았었다.\n하지만 Material Theme 기반으로 제공해 주는 UI가 상당한데, 모든 Components 정보는 Material 3의 Components - 링크을 참고하길\nScaffold : TopBar, BottomBar, Content 영역을 포함하는 틀이다.\n    \n안드로이드 Compose Scaffold, TopAppBar 활용한 개발 - 링크\n안드로이드 Compose Material 2 컬러 정보를 알아보자 - 링크\nText : 기본 Material UI 가이드를 포함\nCheckbox\nRadioButton\nBottomSheet\nSnackbar\n등 이후에 새로 추가되는 요소들도 여기에 모두 포함된다. Material 3를 처음부터 사용하지 않고 만들겠다면 이와 동일한 코드를 직접 작성하겠다는 의미이거나, 내부 코드를 복사해서 우리만의 Theme를 만들겠다는 의미이다.\n이걸 정말 하는 것이 맞을까는 다른 이야기다. 이 모든 걸 다 직접 만들고 관리할 수 있는가?\n어차피 선택은 팀과 개인의 자유이지만 Color 정도의 Custom만으로도 충분히 좋은 코드를 만들 수 있다는 점에서는 이 방식이 좋은 선택지인지는 모르겠다.\n\nCustom Theme를 만들면서 Material 3를 포함한다면?\n필자는 이 방식으로 내부에서 사용할 Components를 재정의하여 사용하고 있고, Theme 역시 Material 3를 따르도록 설계해두었다.\n2년 전만 해도 이렇게 문서에 이 색상이 어디에서 적용되는지 알지 못하였지만 이젠 문서만 잘 보아도 이 색상을 어디에서 사용할 수 있는지 알 수 있다.\n\n이걸 기반으로 Custom Theme를 내부에 정의하여 사용하고 있는데 아래와 같은 형태다.\n\nobject SomeColor {\n\n    @Stable\n    val Color = Color(0xFF000000)\n}\n\n@Immutable\ndata class SomeColorScheme(\n    val primary: Color,\n    //... Material 3 참고 color 정의\n) {\n   // 내부 코드 참고\n}\n\n@Composable\nfun SomeTheme(\n    content: @Composable () -> Unit,\n) {\n    MaterialTheme(\n        colorScheme = SomeColor.Colors.toMaterialTheme(),\n        content = content,\n    )\n}\n\n\n마지막에 toMaterialTheme를 이용해서 한번 복사하는 과정을 거치는데 이유는 Scaffold를 보면 알 수 있는데 다음과 같이 사용하고 있기 때문에 MaterialTheme를 한번 감싸서 처리하고 있다.\n\n@Composable\nfun Scaffold(\n    containerColor: Color = MaterialTheme.colorScheme.background,\n    contentColor: Color = contentColorFor(containerColor),\n    content: @Composable (PaddingValues) -> Unit\n)\n\n\n모든 Components를 내부용으로 만들 것이라면 불필요한 작업이다.\n\n답은 없다.\n두가지 방법 중 2번째 방식을 선택한 이유와 고민 포인트는 아래와 같다.\n모든 컴포넌트를 내부에서 재정의하려면 시간이 걸린다.\n    \n따로 디자인 시스템을 가지는 것은 아니니 공통화의 목적으로 컴포넌트를 만들어간다.\n신경 안 쓰고 사용하더라도 기본 Theme는 따라갈 수 있도록 만들면 좋겠다.\n    \n내부의 SomeScaffold를 사용하지 않더라도 그냥 Scaffold를 사용하여도 동일하게 나와야 한다.\n여기서 중요한 포인트 lint를 만들어 사용하면 SomeScaffold 대신 Scaffold 사용하지 않게 만들 수 있지만 이런 부분을 고려하지 않았다.\nNow In Android lint - 링크\n결국 차이라고 해봐야 Material Theme를 호출할 것인가  말 것인가의 차이다.\nMaterial Theme를 호출하였을 경우에는 dynamicColor 역시 대응이 가능하다. 하지만 보통의 회사 서비스에서는 이를 고려할 이유는 많지 않을 것 같지만 개인은 충분히 선택할 수 있는 선택지이다.\n\n\nMaterial 3 Theme를 따라보자.\nMaterial 3 Theme를 사용한다는 것은 결국 ColorCode를 적절한 위치에 위치시켜야 한다는 이야기이다. Theme를 만드는 데 있어서 Color가 어느 지점에 적절하게 사용되어야 하는지를 알아야 하는데, 위에서도 언급했지만 다행히 구글이 문서를 갱신해 주었고, 적절한 위치의 색상 사용을 알 수 있다는 것이다.\nMaterial 3 Theme - 링크에서 Components를 확인.\n적용할 수 있는 Color set은 아래와 같은데 이 값들만 36가지 종류를 가진다는 점이다. 이 값을 모두 매핑해서 사용하기엔 부담이 크다.\n여담이지만 필자는 구글이 문서를 업데이트하기 전 이미 이 작업을 하였는데, 색상이 어디에서 사용되는지 일일이 다 찾아서 사용하였는데 이와 관련한 글을 남겼었다.\n안드로이드 Compose Material 2 컬러 정보를 알아보자 - 링크\n이 중에 중요하다고 생각 드는 부분만 몇 가지 남기면?\n이 부분은 GPT를 통한 번역\nprimary: 앱의 화면과 구성 요소에서 가장 자주 표시되는 주요 색상이다.\nonPrimary: 주요 색상 위에 표시되는 텍스트와 아이콘에 사용되는 색상이다.\nsecondary: 보조 색상은 제품을 강조하고 구별하는 더 많은 방법을 제공합니다. 보조 색상은 다음에 가장 적합하다\nonSecondary: 보조 색상 위에 표시되는 텍스트와 아이콘에 사용되는 색상이다.\ntertiary: 주요 색상과 보조 색상의 균형을 맞추거나 입력 필드와 같은 요소에 더 높은 주의를 끌기 위해 사용할 수 있는 제3의 색상이다.\nonTertiary: 제3의 색상 위에 표시되는 텍스트와 아이콘에 사용되는 색상이다.\nbackground: 스크롤 가능한 콘텐츠 뒤에 나타나는 배경색이다.\nonBackground: 배경색 위에 표시되는 텍스트와 아이콘에 사용되는 색상이다.\nsurface: 카드, 시트, 메뉴와 같은 구성 요소의 표면에 영향을 미치는 표면 색상이다.\nonSurface: 표면 색상 위에 표시되는 텍스트와 아이콘에 사용되는 색상이다.\nerror: 오류 색상은 텍스트 필드의 잘못된 텍스트와 같이 구성 요소의 오류를 나타내는 데 사용한다.\nonError: 오류 색상 위에 표시되는 텍스트와 아이콘에 사용되는 색상이다.\n그래도 이만큼이다. 다행히 내부적으로 머트리얼 2에서 이상하게 사용하던 코드도 제거되어서 머트리얼 3는 그나마 괜찮아졌다는 점이다.\n이 코드를 기반으로 ColorScheme을 정의하고, 이를 Theme에 주입해 주는 역할을 하면 되는데, 기본으로 생성해 준 코드에서는 아래와 같다.\n3가지 파라메터로 Dark theme 여부, dynamicColor 여부, 마지막 람다 표현으로 content 시작점을 사용할 수 있는데, 결국 MaterialTheme에 colorScheme, typography, content를 지정하여 사용하게 된다는 점이다.\n\n@Composable\nfun MyApplicationTheme(\n    darkTheme: Boolean = isSystemInDarkTheme(),\n    // Dynamic color is available on Android 12+\n    dynamicColor: Boolean = true,\n    content: @Composable () -> Unit\n) {\n    val colorScheme = when {\n        dynamicColor && Build.VERSION.SDK_INT >= Build.VERSION_CODES.S -> {\n            val context = LocalContext.current\n            if (darkTheme) dynamicDarkColorScheme(context) else dynamicLightColorScheme(context)\n        }\n\n        darkTheme -> DarkColorScheme\n        else -> LightColorScheme\n    }\n\n    MaterialTheme(\n        colorScheme = colorScheme,\n        typography = Typography,\n        content = content\n    )\n}\n\n\n이렇게 MaterialTheme를 사용하여 지정한 코드에서 특정 컬러를 적용하고 싶다면 MaterialTheme.colorScheme.primary로 호출하여 사용한다.\n이 부분이 이미 적용되어 있는 Scaffold는 아래와 같이 사용하기만 해도 기본 또는 dynamicColor에 따라 색상이 적용된다.\n\n@Composable\nfun Screen() {\n    Scaffold {\n        Box(modifier = Modifier.padding(it)) {}\n    }\n}\n\n\n\nMaterialTheme에는 어떤 걸 포함하고 있을까?\nGetStream의 코드를 보기 전에 MaterialTheme에는 어떤 걸 외부로 제공하고 있는지 살펴보고 넘어가 보자.\ncolorScheme : 현재 테마의 색상 정보를 가져올 수 있으며 MaterialTheme.colorScheme.xxx으로 불러서 사용\ntypography : 현재 테마의 폰트 정보를 가지며 MaterialTheme.typography.xxx로 불러서 사용\nshapes : 현재 테마의 shapes 정보를 가지며 MaterialTheme.shapes.xxx로 불러서 사용\n\nobject MaterialTheme {\n    /**\n     * Retrieves the current [ColorScheme] at the call site's position in the hierarchy.\n     */\n    val colorScheme: ColorScheme\n        @Composable\n        @ReadOnlyComposable\n        get() = LocalColorScheme.current\n\n    /**\n     * Retrieves the current [Typography] at the call site's position in the hierarchy.\n     */\n    val typography: Typography\n        @Composable\n        @ReadOnlyComposable\n        get() = LocalTypography.current\n\n    /**\n     * Retrieves the current [Shapes] at the call site's position in the hierarchy.\n     */\n    val shapes: Shapes\n        @Composable\n        @ReadOnlyComposable\n        get() = LocalShapes.current\n}\n\n\n이와 같이 Material Theme를 지정해두고 사용할 수 있다. 내부적으로 SomeTheme를 사용한다면 이와 같은 클래스를 직접 만들어 활용하게 되는 것이다.\n\nGetStream Theme 알아보기 전에\nMaterial 3의 Theme는 일반적인 앱에서 활용할 수 있는 정도의 가장 기본 가이드를 제공해 준다. 반면 GetStream - 링크 APIs and SDKs to Build In-App Chat & Video & Feeds Faster.에서 사용하기 위한 SDK 용도로 확장해 사용하고 있다.\nMaterial 3의 Theme 샘플을 통해서도 확장 가능하지만 SDK에서 활용될 수 있는 점을 적절하게 이용하면 Theme 사용을 좀 더 넓은 의미로 확장해 사용할 수 있음을 알 수 있으니 Theme를 사용하는 방식을 알아보자.\n\nGetStream에서 사용하는 Theme\n기본 Theme를 내부적으로 사용할 수 있도록 SomeTheme를 만들어 사용할 수 있음을 확인하였다. 그럼 GetStream에서 제공하는 Theme는 어디까지 제공하고 있을까?\nGetStream의 코드를 보기 전에 문서를 먼저 살펴보았다.\nGetStream ChartTheme에서의 Custom 제공 정보 - 링크\n이 문서에는 생각보다 Theme를 더 넓은 의미로 활용하고 있음을 알 수 있는데, 아래와 같이 나열해 보았다.\n기본 정보\n    \nGet Stream chart 관련 기본 설정\ntest 관련 옵션 제공\n권한과 관련\n    \nAudio/Video를 활용하기 위한 권한 처리\n파일 첨부 처리를 도와주는 제어, 팩토리, 권한 관련\nTheme와 관련\n    \nTheme에 대한 상세정보, 화면별로 필요한 Theme 정보, font 정보\n기타\n    \nStream MediaRecorder\nDateFormatter\n\n코드를 살펴보자\nGetStream ChartTheme에서의 Custom 제공 정보 - 링크\n이 코드는 GetStream ChatTheme.kt - 링크의 코드 중 일부를 적은 부분인데, SDK로서의 역할을 할 수 있는 모든 부분을 담고 있다고 보아도 좋을 것 같다.\nSDK라면 지정해 준 정보를 내부에서 바꾸지 않고 그대로 활용함을 보장해야 하며\n외부에서 주입해 주는 커스텀 역시 충분히 제공하는 것이 좋다.\n라는 관점으로 보면 이 GetStream의 SDK로써는 충분히 유용하게 작성되었다는 점이다.\n문맥상 매우 길어져서 몇 가지 정보만 가져와보았으니 참고해 보면 좋을 듯하다.\n\n@Composable\npublic fun ChatTheme(\n    /* 생략 */\n    autoTranslationEnabled: Boolean = false, // 각종 옵션들\n    /* 생략 */\n    colors: StreamColors = if (isInDarkMode) StreamColors.defaultDarkColors() else StreamColors.defaultColors(), // color 정의\n    /* 생략 */\n    rippleTheme: RippleTheme = StreamRippleTheme, // Ripple 정의\n    attachmentFactories: List<AttachmentFactory> = StreamAttachmentFactories.defaultFactories(), // 파일 첨부 정보\n    /* 생략 */\n    allowUIAutomationTest: Boolean = false, // 테스트 관련\n    dateFormatter: DateFormatter = DateFormatter.from(LocalContext.current), // 채팅에 사용할 date formatter\n    /* 생략 */\n    messagePreviewFormatter: MessagePreviewFormatter = MessagePreviewFormatter.defaultFormatter(\n        context = LocalContext.current,\n        typography = typography,\n        attachmentFactories = attachmentFactories,\n        autoTranslationEnabled = autoTranslationEnabled,\n    ),\n    /* 생략 */\n    attachmentsPickerTabFactories: List<AttachmentsPickerTabFactory> =\n        if (useDefaultSystemMediaPicker) {\n            AttachmentsPickerTabFactories.defaultFactoriesWithoutStoragePermissions()\n        } else {\n            AttachmentsPickerTabFactories.defaultFactories()\n        },\n    /* Theme 관련 생략 */\n    streamMediaRecorder: StreamMediaRecorder = DefaultStreamMediaRecorder(LocalContext.current),\n    content: @Composable () -> Unit,\n)\n\n\n\n함수 안에도 조금 살펴보자.\nChatTheme의 코드 중에 눈에 띄는 코드는 allowUIAutomationTest 옵션을 별도로 제공한다는 점이다.\nallowUIAutomationTest - true/false를 제공함으로써 semantics를 활용한 UI Test 대응을 미리 해두었다는 점이다. 컴포즈에서 Ui test를 아직 시도하지는 않아서 자세한 내용은 문서를 참고해 보시길\nsemantics - 링크\n그 외에는 LocalXXX로 시작하는 코드들이 상당히 많이 보인다. LocalXXX 부분의 코드가 많이 보인다는 건 이 부분을 살펴보는 것이 도움이 될 수 있다는 점이다.\n\nCompositionLocalProvider(\n        LocalColors provides colors,\n        /* 생략 */\n        LocalComposerLinkPreviewEnabled provides isComposerLinkPreviewEnabled,\n) {\n    if (allowUIAutomationTest) {\n            Box(\n                modifier = Modifier.semantics { testTagsAsResourceId = allowUIAutomationTest },\n            ) {\n                content()\n            }\n        } else {\n            content()\n        }\n}\n\n\n\nGetStream의 CompositionLocalProvider 적용 부분은?\nStream에서 사용하는 CompositionLocalProvider는 모두 compositionLocalOf을 활용하고 있다는 점이다.\n사실 Theme의 시작점이고 값의 변경은 staticCompositionLocalOf을 사용하여 UI가 다시 그려짐을 보장하여도 될 것 같은데, compositionLocalOf을 사용하고 있다는 점이다.\n\nprivate val LocalColors = compositionLocalOf<StreamColors> {\n    error(\"No colors provided! Make sure to wrap all usages of Stream components in a ChatTheme.\")\n}\nprivate val LocalDimens = compositionLocalOf<StreamDimens> {\n    error(\"No dimens provided! Make sure to wrap all usages of Stream components in a ChatTheme.\")\n}\n\n\n그리고 또 하나 중요한 포인트는 private으로 Theme 이외에서는 이 값들을 업데이트하지 않음을 보장해 주고 있다.\n구글의 대표적인 Color 처리하는 코드는 아래와 같은데, Stream에서는 이 부분을 모두 private으로 적용한 부분을 그대로 활용할 수 있음을 보장한다.\n\nval LocalContentColor = compositionLocalOf { Color.Black }\n\n\nLocalContentColor는 언제 어디서든 값을 변경하고 업데이트할 수 있다.\n\nGetStream은 Theme에서 CompositionLocalProvider를 활용하여 값을 부르는 건 알겠는데?\nTheme의 범위를 어디까지 잡아야 할까? Stream의 코드 아랫 부분에 외부에서 사용할 수 있는 값들을 매핑하였는데 아래와 같다.\n\npublic object ChatTheme {\n    public val colors: StreamColors\n        @Composable\n        @ReadOnlyComposable\n        get() = LocalColors.current\n\n    /* 생략 */\n\n    /**\n     * Retrieves the current list of [StreamMediaRecorder] at the call site's position in the hierarchy.\n     */\n    public val streamMediaRecorder: StreamMediaRecorder\n        @Composable\n        @ReadOnlyComposable\n        get() = LocalStreamMediaRecorder.current\n}\n\n\n모든 정보는 ChatTheme.colors.xxx로 부르거나 ChatTheme.streamMediaRecorder.xxxx로 바로 활용할 수 있다는 점이다.\n그런데 Theme인데 streamMediaRecorder를 바로 불러다 사용하는 것이 맞을까?\n개인적으론 SDK라서 이를 활용하는 방식도 좋은 방법이라고 생각한다. 결국 CompositionLocalProvider를 통해 사용 범위를 명확히 지정하여 사용하고 있고, 이 값들은 초기에 지정해 준 정보를 그대로 사용하고 있음을 명시적으로 작성해두었기 때문에 특별히 문제는 없는 듯하다.\n하지만 일반적인 서비스에서 이렇게까지 하는 게 맞을까는 고민이 필요한 점이다.\n\nSomeTheme.triggerEvent.xxxx // 이렇게 사용하는 것이 맞을까?\nLocalTriggerEvent.current.xxxx // 이렇게 활용하는 것이 더 좋을까?\n\n\n\nCompositionLocalProvider를 좀 더 알아보자.\nCompositionLocalProvider을 깊이 있게 탐구하는 것은 아니지만 문서에 나와있는 내용을 좀 더 알아보고 넘어가자.\n\n결국 Theme는 CompositionLocalProvider를 활용한다.\nCompositionLocalProvider를 이용해 필요한 정보를 라이프 사이클에 맞게 불러다 활용할 수 있는데, Material 3 Theme 내부도 Stream에서의 코드와 마찬가지로 적용하고 있다.\nMaterialTheme는 크게 ColorScheme, Shapes, Typography를 주입받고, 내부에서 필요한 정보를 추가로 Provider에 셋하고 있다.\n\n@Composable\nfun MaterialTheme(\n    colorScheme: ColorScheme = MaterialTheme.colorScheme,\n    shapes: Shapes = MaterialTheme.shapes,\n    typography: Typography = MaterialTheme.typography,\n    content: @Composable () -> Unit\n) {\n    val rippleIndication = androidx.compose.material.ripple.rememberRipple()\n    val selectionColors = rememberTextSelectionColors(colorScheme)\n    CompositionLocalProvider(\n        LocalColorScheme provides colorScheme,\n        LocalIndication provides rippleIndication,\n        androidx.compose.material.ripple.LocalRippleTheme provides MaterialRippleTheme,\n        LocalShapes provides shapes,\n        LocalTextSelectionColors provides selectionColors,\n        LocalTypography provides typography,\n    ) {\n        ProvideTextStyle(value = typography.bodyLarge, content = content)\n    }\n}\n\n\n이 중 colorScheme은 staticCompositionLocalOf을 사용하여 초기화하고 있고,\n\ninternal val LocalColorScheme = staticCompositionLocalOf { lightColorScheme() }\n\n\nselectionColors은 compositionLocalOf을 활용하고 있다.\n\nval LocalTextSelectionColors = compositionLocalOf { DefaultTextSelectionColors }\n\n\n결국 이 둘을 잘 알면 유용하게 사용할 수 있다는 의미이니 문서를 참고해 보자.\n\nCompositionLocalProvider란?\nLocally scoped data with CompositionLocal - 링크이란 공식 문서이다.\ncompostionLocalProvider에는 2개의 초기화 방법을 제공한다.\ncompositionLocalOf : 현재 범위 내에 compositionLocal의 정보가 변경되었을 경우 해당 범위 내의 이 값을 사용하는 범위를 갱신\n    \nContentColor를 범위 내에서 color 변경한다면 이 색상을 호출하여 사용하는 곳을 추적하여 UI를 갱신\nstaticCompositionLocalOf : 이 값은 범위 내의 값을 추적하지 않고 그냥 전부 새로 그림.\n    \nContentColor를 이 값으로 활용할 경우 화면을 전부 새로 그림\n이 두 함수의 영향 범위는 매우 다름을 알 수 있다.\n이전에 작성한 Compose에서 웹뷰를 유지하는 방법에서는 staticCompositionLocalOf 활용하는 방법을 소개했었으니 참고해 보셔도 좋다.\nCompose Navigation - WebView Recomposition 해결? - 링크\nstaticCompositionLocalOf은 값이 명확하게 1회 초기화하며 이후에는 변경하지 않음을 명시할 경우 활용하는 것이 좋고, compositionLocalOf는 언제든 변경되고, 이 값이 변경되었을 경우 값을 사용한 부분도 UI 갱신이 일어나야 하는 경우 이를 활용하는 것이 좋다.\n이 내용을 깊이 있게 알고 싶다면 Jetpack Compose Internals의 4장 Compose UI, 측정 정책 (Measuring policies) 부분에서 매우 상세하게 다루고 있으니 책을 참고하여 추가 학습하시길\nJetpack Compose Internals 한국어 번역(번역 엄재웅, 류기민) - 링크\n\n마무리\n이 글은 GetStream의 후원을 받아 작성하였다. GetStream의 내부 Theme 활용을 글로 담았는데, SDK를 만든다면 이런 형태로의 Theme를 활용할 수 있구나를 파악할 수 있었다.\n거기에 결국 Theme 값을 유지하면서 상태를 보장해 주는 방식을 private으로 잘 구분하여 사용해야 하며, Theme를 통해 더 많은 값을 불러다 활용할 수 있도록 만들어주는 것 역시 가능함을 알 수 있었다.\n이런 방식에서는 사실 호불호가 생길 수 있긴 하다.\nTheme인데 왜 Theme와 관련 없는 설정 정보를 포함하는 것인가?\n초기화만 하고, Theme가 아닌 접근 방법을 제공하면 더 좋은 거 아닐까?\n이 부분은 코드 컨벤션과 관련이 있지 않을까 싶다. SomeTheme.value.xxxx를 사용하였을 때 LocalXXX.current를 기억하고 사용하는 행위를 반대로 줄일 수 있으니 말이다.\n이 글로 Theme를 구성하는 전반적인 방법이나 CompositionLocal 사용을 다 알 수 있는 것은 아니지만 Theme를 이렇게까지 활용하고 접근 제어를 어떻게 하는 것이 좋을지만 이해해도 다행이라고 생각한다.\nMaterial 3에서 사용하는 Token 방식의 Color 지정을 논하진 않았는데 이 방식은 figma와 밀접한 관련이 있다고 하니 아래 링크를 참고하시길\nm3 Design tokens - 링크\nGetStream SDK 알아보기 - 링크",
        "guid": "https://thdev.tech/compose/2024/11/03/GetStream-Theme/",
        "isoDate": "2024-11-03T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕홍",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성희",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "애드센스 인페이지 광고 최적화 방법 (광고수, 광고 노출 간격)",
        "link": "http://muzbox.tistory.com/483494",
        "pubDate": "Wed, 6 Nov 2024 10:05:16 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483494#entry483494comment",
        "content": "<p data-ke-size=\"size16\">구글 애드센스 인페이지 광고 노출 수와 배치 간격 설정 방법을 알아보세요. 사용자 경험을 고려한 최적화 전략을 통해 수익성을 높일 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"구글 애드센스 인페이지광고 설정방법.png\" data-origin-width=\"991\" data-origin-height=\"731\"><span data-url=\"https://blog.kakaocdn.net/dn/dXoyJ8/btsKxjgOQwc/CaBNYOiMl1JwD2KYK344W1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dXoyJ8/btsKxjgOQwc/CaBNYOiMl1JwD2KYK344W1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dXoyJ8/btsKxjgOQwc/CaBNYOiMl1JwD2KYK344W1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdXoyJ8%2FbtsKxjgOQwc%2FCaBNYOiMl1JwD2KYK344W1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"애드센스 인페이지 광고 최적화 방법\" width=\"600\" height=\"443\" data-filename=\"구글 애드센스 인페이지광고 설정방법.png\" data-origin-width=\"991\" data-origin-height=\"731\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;구글 애드센스의 인페이지 형식 광고는 광고가 웹 콘텐츠와 자연스럽게 어우러져 사용자들이 쉽게 받아들일 수 있는 광고 형식입니다. 하지만 무조건적인 광고 배치는 오히려 사이트의 가독성을 떨어뜨리거나 사용자 이탈률을 높일 수 있습니다. 그렇다면 애드센스 인페이지 광고의 노출 수와 배치 간격을 어떻게 최적화할 수 있을까요? 이번 글에서 그 구체적인 방법을 알려드립니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\">애드센스 인페이지 광고 설정방법</h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">먼저, 애드센스에서 제공하는 인페이지 광고의 노출 수를 적절히 설정하는 것이 중요합니다. 너무 많은 광고가 페이지에 노출될 경우 사용자의 집중력이 분산되거나 광고에 대한 피로감이 생길 수 있습니다. 따라서 웹페이지의 길이와 내용에 따라 광고의 노출 수를 조정하는 것이 좋습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">1. 애드센스 방문 후 좌측 메뉴에서 \"광고\"를 선택한 후 해당사이트에서&nbsp; ✏️&nbsp; 수정 버튼을 클릭합니다.▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"01.png\" data-origin-width=\"1309\" data-origin-height=\"720\"><span data-url=\"https://blog.kakaocdn.net/dn/euctUP/btsKw6aHgS0/pnIsFoQGthhujXI84dvbw0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/euctUP/btsKw6aHgS0/pnIsFoQGthhujXI84dvbw0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/euctUP/btsKw6aHgS0/pnIsFoQGthhujXI84dvbw0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FeuctUP%2FbtsKw6aHgS0%2FpnIsFoQGthhujXI84dvbw0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"01.png\" data-origin-width=\"1309\" data-origin-height=\"720\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">2. 자동광고 설정을 활성화 한 후 - 인페이지 형식을 클릭합니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"02.png\" data-origin-width=\"1311\" data-origin-height=\"777\"><span data-url=\"https://blog.kakaocdn.net/dn/FVELc/btsKyqGdb5Q/6TkaQ0TNKKSW7JgS7tkoD1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/FVELc/btsKyqGdb5Q/6TkaQ0TNKKSW7JgS7tkoD1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/FVELc/btsKyqGdb5Q/6TkaQ0TNKKSW7JgS7tkoD1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FFVELc%2FbtsKyqGdb5Q%2F6TkaQ0TNKKSW7JgS7tkoD1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"02.png\" data-origin-width=\"1311\" data-origin-height=\"777\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">3. 그림과 같이 광고 세부조정을 활성화 한 후 - 광고수, 간격등을 조정합니다. 조정이 완료되면 \"사이트에 적용\"버튼을 클릭하면 설정이 종료됩니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"03.png\" data-origin-width=\"1288\" data-origin-height=\"691\"><span data-url=\"https://blog.kakaocdn.net/dn/cuCCqK/btsKw3kY3uG/1Vy6mrdbk3g3RDc51vUbm1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cuCCqK/btsKw3kY3uG/1Vy6mrdbk3g3RDc51vUbm1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cuCCqK/btsKw3kY3uG/1Vy6mrdbk3g3RDc51vUbm1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcuCCqK%2FbtsKw3kY3uG%2F1Vy6mrdbk3g3RDc51vUbm1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"03.png\" data-origin-width=\"1288\" data-origin-height=\"691\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>애드센스 인페이지 광고 노출 수 설정하기</b></span></h2>\n<p data-ke-size=\"size16\">먼저, 애드센스에서 제공하는 인페이지 광고의 노출 수를 적절히 설정하는 것이 중요합니다. 너무 많은 광고가 페이지에 노출될 경우 사용자의 집중력이 분산되거나 광고에 대한 피로감이 생길 수 있습니다. 따라서 웹페이지의 길이와 내용에 따라 광고의 노출 수를 조정하는 것이 좋습니다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>단락별 광고 배치</b>: 콘텐츠 길이에 맞춰 단락마다 광고를 배치하면 자연스러운 사용자 경험을 제공합니다. 예를 들어, 긴 글의 경우 첫 단락과 중간, 마지막에 광고를 배치해도 좋습니다.</li>\n<li><b>최대 노출 수 제한</b>: 페이지당 광고 노출 수는 구글의 정책에 따라 제한됩니다. 일반적으로 한 페이지에서 3~4개의 인페이지 광고를 초과하지 않도록 설정하는 것이 적절합니다.</li>\n<li><b>주요 섹션에 광고 배치</b>: 웹사이트에서 가장 눈에 잘 띄는 영역에 인페이지 광고를 배치하면 클릭률을 높이는 데 도움이 됩니다. 예를 들어, 글의 중간 부분이나 종료 직전 부분이 주요 위치로 활용될 수 있습니다.</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>인페이지 광고의 배치 간격 설정하기</b></span></h2>\n<p data-ke-size=\"size16\">광고 배치 간격을 설정할 때는 사용자의 콘텐츠 소비 흐름을 방해하지 않는 것이 핵심입니다. 지나치게 짧은 간격으로 광고를 배치하면 오히려 사용자 경험이 악화될 수 있으므로 적절한 배치 간격을 유지하는 것이 중요합니다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>본문 중 2~3 단락마다 배치</b>: 긴 글에서는 2~3 단락마다 한 번씩 광고를 배치하는 것이 자연스러운 흐름을 유지하는 데 효과적입니다.</li>\n<li><b>적당한 스크롤 간격 유지</b>: 스크롤을 통해 사용자들이 광고를 자연스럽게 접할 수 있도록 배치 간격을 조정합니다. 보통 화면 높이 기준으로 2~3개 스크롤 뒤에 광고가 나타나게 하는 것이 좋습니다.</li>\n<li><b>모바일과 데스크탑 구분</b>: 모바일 화면에서는 스크롤 속도가 빨라 광고 간격을 더 길게 설정할 필요가 있습니다. 데스크탑에서는 화면에 보이는 부분을 고려해 배치 간격을 조정합니다.</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>사용자 경험을 고려한 광고 최적화 전략</b></span></h2>\n<p data-ke-size=\"size16\">광고를 효과적으로 배치하면서도 사용자 경험을 고려하는 것이 중요합니다. 사용자 경험을 고려한 광고 최적화 전략을 통해 광고 효과를 높이고 사이트 이탈률을 줄일 수 있습니다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>광고 배치 테스트</b>: 여러 위치에 광고를 배치해보고 클릭률 및 이탈률을 분석해 최적의 배치를 찾습니다.</li>\n<li><b>광고와 콘텐츠 구분</b>: 광고가 콘텐츠와 혼동되지 않도록 광고 배경색이나 테두리를 활용해 구분합니다.</li>\n<li><b>속도 최적화</b>: 광고가 사이트 속도를 저하시킬 경우, 사용자 만족도가 떨어질 수 있으므로 로딩 속도를 유지하면서도 적절한 위치에 광고를 배치하는 것이 중요합니다.</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>마치며</b></span></h2>\n<p data-ke-size=\"size16\">구글 애드센스 인페이지 광고의 효과를 극대화하려면, 사용자 경험을 저해하지 않으면서도 자연스럽게 광고가 노출될 수 있는 배치 전략이 필요합니다. 노출 수와 배치 간격을 잘 설정하면 광고 수익을 증대시키는 동시에 사용자 경험도 긍정적으로 유지할 수 있습니다. 실험과 분석을 통해 최적의 배치를 찾아보세요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>Q&amp;A</b></span></h2>\n<h3 data-ke-size=\"size23\">Q1. 인페이지 광고와 배너 광고의 차이는 무엇인가요?</h3>\n<p data-ke-size=\"size16\"><b>A1.</b> 인페이지 광고는 콘텐츠와 자연스럽게 어우러져 표시되며, 사용자가 콘텐츠를 소비하면서 광고도 자연스럽게 보게 되는 형식입니다. 배너 광고는 주로 페이지 상단, 사이드바, 하단 등에 고정된 형태로 노출됩니다.</p>\n<h3 data-ke-size=\"size23\">Q2. 애드센스에서 광고 노출 수가 제한되는 이유는 무엇인가요?</h3>\n<p data-ke-size=\"size16\"><b>A2.</b> 구글 애드센스는 과도한 광고 노출로 인한 사용자 경험 저하를 방지하기 위해 광고 노출 수를 제한합니다. 이를 통해 광고주와 사용자 모두에게 긍정적인 경험을 제공하고자 합니다.</p>\n<h3 data-ke-size=\"size23\">Q3. 모바일과 데스크탑에서 광고 배치 전략이 다른 이유는 무엇인가요?</h3>\n<p data-ke-size=\"size16\"><b>A3.</b> 모바일에서는 화면 크기가 작고 스크롤 속도가 빠르기 때문에, 광고 간격을 더 넓게 설정하는 것이 효과적입니다. 데스크탑에서는 더 많은 광고를 한 화면에 자연스럽게 배치할 수 있어 전략이 다르게 적용됩니다.</p>",
        "contentSnippet": "구글 애드센스 인페이지 광고 노출 수와 배치 간격 설정 방법을 알아보세요. 사용자 경험을 고려한 최적화 전략을 통해 수익성을 높일 수 있습니다.\n\n\n \n 구글 애드센스의 인페이지 형식 광고는 광고가 웹 콘텐츠와 자연스럽게 어우러져 사용자들이 쉽게 받아들일 수 있는 광고 형식입니다. 하지만 무조건적인 광고 배치는 오히려 사이트의 가독성을 떨어뜨리거나 사용자 이탈률을 높일 수 있습니다. 그렇다면 애드센스 인페이지 광고의 노출 수와 배치 간격을 어떻게 최적화할 수 있을까요? 이번 글에서 그 구체적인 방법을 알려드립니다.\n \n애드센스 인페이지 광고 설정방법\n먼저, 애드센스에서 제공하는 인페이지 광고의 노출 수를 적절히 설정하는 것이 중요합니다. 너무 많은 광고가 페이지에 노출될 경우 사용자의 집중력이 분산되거나 광고에 대한 피로감이 생길 수 있습니다. 따라서 웹페이지의 길이와 내용에 따라 광고의 노출 수를 조정하는 것이 좋습니다.\n \n1. 애드센스 방문 후 좌측 메뉴에서 \"광고\"를 선택한 후 해당사이트에서  ✏️  수정 버튼을 클릭합니다.▼\n\n\n \n2. 자동광고 설정을 활성화 한 후 - 인페이지 형식을 클릭합니다. ▼\n\n\n \n3. 그림과 같이 광고 세부조정을 활성화 한 후 - 광고수, 간격등을 조정합니다. 조정이 완료되면 \"사이트에 적용\"버튼을 클릭하면 설정이 종료됩니다. ▼\n\n\n \n \n애드센스 인페이지 광고 노출 수 설정하기\n먼저, 애드센스에서 제공하는 인페이지 광고의 노출 수를 적절히 설정하는 것이 중요합니다. 너무 많은 광고가 페이지에 노출될 경우 사용자의 집중력이 분산되거나 광고에 대한 피로감이 생길 수 있습니다. 따라서 웹페이지의 길이와 내용에 따라 광고의 노출 수를 조정하는 것이 좋습니다.\n단락별 광고 배치: 콘텐츠 길이에 맞춰 단락마다 광고를 배치하면 자연스러운 사용자 경험을 제공합니다. 예를 들어, 긴 글의 경우 첫 단락과 중간, 마지막에 광고를 배치해도 좋습니다.\n최대 노출 수 제한: 페이지당 광고 노출 수는 구글의 정책에 따라 제한됩니다. 일반적으로 한 페이지에서 3~4개의 인페이지 광고를 초과하지 않도록 설정하는 것이 적절합니다.\n주요 섹션에 광고 배치: 웹사이트에서 가장 눈에 잘 띄는 영역에 인페이지 광고를 배치하면 클릭률을 높이는 데 도움이 됩니다. 예를 들어, 글의 중간 부분이나 종료 직전 부분이 주요 위치로 활용될 수 있습니다.\n \n인페이지 광고의 배치 간격 설정하기\n광고 배치 간격을 설정할 때는 사용자의 콘텐츠 소비 흐름을 방해하지 않는 것이 핵심입니다. 지나치게 짧은 간격으로 광고를 배치하면 오히려 사용자 경험이 악화될 수 있으므로 적절한 배치 간격을 유지하는 것이 중요합니다.\n본문 중 2~3 단락마다 배치: 긴 글에서는 2~3 단락마다 한 번씩 광고를 배치하는 것이 자연스러운 흐름을 유지하는 데 효과적입니다.\n적당한 스크롤 간격 유지: 스크롤을 통해 사용자들이 광고를 자연스럽게 접할 수 있도록 배치 간격을 조정합니다. 보통 화면 높이 기준으로 2~3개 스크롤 뒤에 광고가 나타나게 하는 것이 좋습니다.\n모바일과 데스크탑 구분: 모바일 화면에서는 스크롤 속도가 빨라 광고 간격을 더 길게 설정할 필요가 있습니다. 데스크탑에서는 화면에 보이는 부분을 고려해 배치 간격을 조정합니다.\n \n사용자 경험을 고려한 광고 최적화 전략\n광고를 효과적으로 배치하면서도 사용자 경험을 고려하는 것이 중요합니다. 사용자 경험을 고려한 광고 최적화 전략을 통해 광고 효과를 높이고 사이트 이탈률을 줄일 수 있습니다.\n광고 배치 테스트: 여러 위치에 광고를 배치해보고 클릭률 및 이탈률을 분석해 최적의 배치를 찾습니다.\n광고와 콘텐츠 구분: 광고가 콘텐츠와 혼동되지 않도록 광고 배경색이나 테두리를 활용해 구분합니다.\n속도 최적화: 광고가 사이트 속도를 저하시킬 경우, 사용자 만족도가 떨어질 수 있으므로 로딩 속도를 유지하면서도 적절한 위치에 광고를 배치하는 것이 중요합니다.\n \n마치며\n구글 애드센스 인페이지 광고의 효과를 극대화하려면, 사용자 경험을 저해하지 않으면서도 자연스럽게 광고가 노출될 수 있는 배치 전략이 필요합니다. 노출 수와 배치 간격을 잘 설정하면 광고 수익을 증대시키는 동시에 사용자 경험도 긍정적으로 유지할 수 있습니다. 실험과 분석을 통해 최적의 배치를 찾아보세요!\n \n \nQ&A\nQ1. 인페이지 광고와 배너 광고의 차이는 무엇인가요?\nA1. 인페이지 광고는 콘텐츠와 자연스럽게 어우러져 표시되며, 사용자가 콘텐츠를 소비하면서 광고도 자연스럽게 보게 되는 형식입니다. 배너 광고는 주로 페이지 상단, 사이드바, 하단 등에 고정된 형태로 노출됩니다.\nQ2. 애드센스에서 광고 노출 수가 제한되는 이유는 무엇인가요?\nA2. 구글 애드센스는 과도한 광고 노출로 인한 사용자 경험 저하를 방지하기 위해 광고 노출 수를 제한합니다. 이를 통해 광고주와 사용자 모두에게 긍정적인 경험을 제공하고자 합니다.\nQ3. 모바일과 데스크탑에서 광고 배치 전략이 다른 이유는 무엇인가요?\nA3. 모바일에서는 화면 크기가 작고 스크롤 속도가 빠르기 때문에, 광고 간격을 더 넓게 설정하는 것이 효과적입니다. 데스크탑에서는 더 많은 광고를 한 화면에 자연스럽게 배치할 수 있어 전략이 다르게 적용됩니다.",
        "guid": "http://muzbox.tistory.com/483494",
        "categories": [
          "Google 이야기/애드센스 노하우",
          "CTR",
          "광고노출수",
          "광고배치",
          "광고최적화",
          "구글애드센스",
          "데스크탑광고",
          "모바일광고",
          "배치간격",
          "사용자경험",
          "인페이지광고"
        ],
        "isoDate": "2024-11-06T01:05:16.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "안드로이드 추천 앱, 추천 어플 (24.11.04) 독서일기, 혈당관리, 당뇨 관리, 스냅챗, B612, 미래 자녀 얼굴확인, 캠핑장 예약",
        "link": "http://muzbox.tistory.com/483493",
        "pubDate": "Mon, 4 Nov 2024 11:23:57 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483493#entry483493comment",
        "content": "<p data-ke-size=\"size16\">구글 플레이 스토어의 수많은 앱 중, 유용하고 안전한 앱을 엄선해 매주 소개합니다. 신뢰할 수 있는 앱 리뷰를 확인하세요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"안드로이드 추천앱.png\" data-origin-width=\"500\" data-origin-height=\"500\"><span data-url=\"https://blog.kakaocdn.net/dn/dwzJn7/btsKt6vulib/JqPM5JZpsCV9uRc1HowzVK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dwzJn7/btsKt6vulib/JqPM5JZpsCV9uRc1HowzVK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dwzJn7/btsKt6vulib/JqPM5JZpsCV9uRc1HowzVK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdwzJn7%2FbtsKt6vulib%2FJqPM5JZpsCV9uRc1HowzVK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"안드로이드 추천 앱, 추천 어플 (24.11.04)\" data-filename=\"안드로이드 추천앱.png\" data-origin-width=\"500\" data-origin-height=\"500\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">안드로이드 앱스토어인 구글 플레이 스토어에는 하루에도 엄청난 수의 앱과 게임이 신규로 등록됩니다. 이 모든앱들을 사용자가 확인하고 양질의 앱을 선택하는 것이 사실상 불가능 하다는 얘기죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">또한, 최근들어 강화되었다 하지만 여전히 구글 플레이스토어에는 유해한 앱들이 사라지지 않고 이들 앱으로 피해를 보는 사용자도 많습니다.본 블로그에서는 일주일에 한번정도 운영자가 직접 유용하고 편리한 앱을 엄선하여 소개합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: center;\" data-ke-size=\"size16\"><span style=\"color: #ee2323;\"><b>'어떤오후의 프리웨어 이야기'에서 추천하는 2024년 11월 4일자 '안드로이드 추천 앱'입니다.</b></span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>1. 리드로그&nbsp;-&nbsp;교보문고의&nbsp;독서&nbsp;기록&nbsp;앱 <br /></b></h2>\n<p data-ke-size=\"size16\">일상에서&nbsp;새롭게&nbsp;영감을&nbsp;얻을&nbsp;수&nbsp;있는&nbsp;문장을&nbsp;매일&nbsp;수집하고&nbsp;기록하는&nbsp;앱입니다.&nbsp;마음에&nbsp;드는&nbsp;문장을&nbsp;카메라로&nbsp;스캔하거나&nbsp;앨범에서&nbsp;불러와&nbsp;간편하게&nbsp;저장할&nbsp;수&nbsp;있으며,&nbsp;직접&nbsp;작성도&nbsp;가능합니다. <br /><br />효율적인 문장 보관을 위해 폴더별로 분류하고 필요할 때마다 쉽게 찾아볼 수 있습니다. 또한, 키워드나 태그를 통해 문장, 폴더, 주제를 검색하여 필요한 문장을 한 번에 불러올 수 있으며, 관심 있는 주제나 콘텐츠의 태그를 팔로우해 맞춤 문장을 얻을 수 있습니다. 책, 영화, 노래 등 다양한 콘텐츠에서 좋은 문장을 발견하고 이를 통해 새로운 영감을 받을 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"리드로그 01-tile.jpg\" data-origin-width=\"1635\" data-origin-height=\"2895\"><span data-url=\"https://blog.kakaocdn.net/dn/LLvQx/btsKuPTZ0Hx/1Cd78EMZzPBOfY81Zy3Ye0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/LLvQx/btsKuPTZ0Hx/1Cd78EMZzPBOfY81Zy3Ye0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/LLvQx/btsKuPTZ0Hx/1Cd78EMZzPBOfY81Zy3Ye0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FLLvQx%2FbtsKuPTZ0Hx%2F1Cd78EMZzPBOfY81Zy3Ye0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"리드로그 01-tile.jpg\" data-origin-width=\"1635\" data-origin-height=\"2895\"/></span></figure>\n</p>\n<figure id=\"og_1730686873093\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"리드로그 - 교보문고의 독서 기록 앱 - Google Play 앱\" data-og-description=\"수집부터 활용까지 효율적인 기록 노하우 공개, 이제 리드로그로 똑똑한 &lsquo;문장 수집 생활&rsquo; 시작하세요!\" data-og-host=\"play.google.com\" data-og-source-url=\"https://play.google.com/store/apps/details?id=com.kyobobook.readlog\" data-og-url=\"https://play.google.com/store/apps/details?id=com.kyobobook.readlog&amp;hl=ko\" data-og-image=\"https://scrap.kakaocdn.net/dn/bPnCKO/hyXsQSBHCv/eTmeBIEK4YbcpykneptjyK/img.jpg?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/e2eRa/hyXprmlV3T/k7icF7P9sAJdgslC5pV8D0/img.jpg?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/oxBNm/hyXsYwkm4W/DWrrP7Nhmd280mOfh4jbNk/img.jpg?width=240&amp;height=240&amp;face=0_0_240_240\"><a href=\"https://play.google.com/store/apps/details?id=com.kyobobook.readlog\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://play.google.com/store/apps/details?id=com.kyobobook.readlog\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bPnCKO/hyXsQSBHCv/eTmeBIEK4YbcpykneptjyK/img.jpg?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/e2eRa/hyXprmlV3T/k7icF7P9sAJdgslC5pV8D0/img.jpg?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/oxBNm/hyXsYwkm4W/DWrrP7Nhmd280mOfh4jbNk/img.jpg?width=240&amp;height=240&amp;face=0_0_240_240');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">리드로그 - 교보문고의 독서 기록 앱 - Google Play 앱</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">수집부터 활용까지 효율적인 기록 노하우 공개, 이제 리드로그로 똑똑한 &lsquo;문장 수집 생활&rsquo; 시작하세요!</p>\n<p class=\"og-host\" data-ke-size=\"size16\">play.google.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>2. Health&nbsp;Sense:&nbsp;Blood&nbsp;Sugar&nbsp;Hub<br /></b></h2>\n<p data-ke-size=\"size16\">혈당,&nbsp;혈압,&nbsp;심박수,&nbsp;BMI&nbsp;등을&nbsp;쉽고&nbsp;안전하게&nbsp;추적할&nbsp;수&nbsp;있는&nbsp;앱입니다.&nbsp;이&nbsp;앱은&nbsp;간단한&nbsp;인터페이스를&nbsp;통해&nbsp;다양한&nbsp;건강&nbsp;데이터를&nbsp;기록할&nbsp;수&nbsp;있으며,&nbsp;차트와&nbsp;그래프를&nbsp;통해&nbsp;사용자가&nbsp;건강&nbsp;수치를&nbsp;쉽게&nbsp;모니터링하고&nbsp;조절하도록&nbsp;도와줍니다.&nbsp;또한,&nbsp;과학적으로&nbsp;입증된&nbsp;건강&nbsp;정보와&nbsp;팁을&nbsp;제공하여&nbsp;단기,&nbsp;중기,&nbsp;장기적인&nbsp;건강&nbsp;개선에&nbsp;유용한&nbsp;통찰력을&nbsp;제공합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Health Sense 01-tile.jpg\" data-origin-width=\"1635\" data-origin-height=\"2895\"><span data-url=\"https://blog.kakaocdn.net/dn/bKmgW0/btsKvBt5AAc/nCDKi6UFEZ90vtkjycJgg0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bKmgW0/btsKvBt5AAc/nCDKi6UFEZ90vtkjycJgg0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bKmgW0/btsKvBt5AAc/nCDKi6UFEZ90vtkjycJgg0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbKmgW0%2FbtsKvBt5AAc%2FnCDKi6UFEZ90vtkjycJgg0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Health Sense 01-tile.jpg\" data-origin-width=\"1635\" data-origin-height=\"2895\"/></span></figure>\n</p>\n<figure id=\"og_1730686888296\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Health Sense: Blood Sugar Hub - Google Play 앱\" data-og-description=\"건강 데이터를 이해하세요\" data-og-host=\"play.google.com\" data-og-source-url=\"https://play.google.com/store/apps/details?id=com.healthapplines.healthsense.bloodsugarhub\" data-og-url=\"https://play.google.com/store/apps/details?id=com.healthapplines.healthsense.bloodsugarhub&amp;hl=ko\" data-og-image=\"https://scrap.kakaocdn.net/dn/bs4PgD/hyXs1miSZ7/f6ri1ERFKQLXZm1zDYihL0/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/jdVSX/hyXsTPjWUi/eWel6FWkF5QFukJSnEoqI0/img.png?width=600&amp;height=300&amp;face=140_46_318_269,https://scrap.kakaocdn.net/dn/bYBvAY/hyXs2Fwbmo/eYgisopzIlUWgmPsqxIUhK/img.png?width=240&amp;height=240&amp;face=0_0_240_240\"><a href=\"https://play.google.com/store/apps/details?id=com.healthapplines.healthsense.bloodsugarhub\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://play.google.com/store/apps/details?id=com.healthapplines.healthsense.bloodsugarhub\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bs4PgD/hyXs1miSZ7/f6ri1ERFKQLXZm1zDYihL0/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/jdVSX/hyXsTPjWUi/eWel6FWkF5QFukJSnEoqI0/img.png?width=600&amp;height=300&amp;face=140_46_318_269,https://scrap.kakaocdn.net/dn/bYBvAY/hyXs2Fwbmo/eYgisopzIlUWgmPsqxIUhK/img.png?width=240&amp;height=240&amp;face=0_0_240_240');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Health Sense: Blood Sugar Hub - Google Play 앱</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">건강 데이터를 이해하세요</p>\n<p class=\"og-host\" data-ke-size=\"size16\">play.google.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>3. Snapchat</b></h2>\n<p data-ke-size=\"size16\">&nbsp;친구 및 가족과 순간을 빠르고 재미있게 공유하는 소셜 미디어 앱입니다. 카메라 기능이 기본으로 실행되어 사진과 동영상을 쉽게 촬영하고, 다양한 렌즈와 필터로 자신을 표현할 수 있습니다. 실시간 채팅, 그룹 스토리, 최대 16명까지 영상 채팅 기능이 제공되며, 특별한 Friendmoji로 소통이 가능합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;스토리 섹션에서는 친구들의 일상과 뉴스, 독점 콘텐츠를 확인할 수 있으며, 스포트라이트에서는 인기 콘텐츠를 감상하고 공유할 수 있습니다. 지도 기능으로 친구의 위치와 활동을 확인하고, 메모리에 소중한 순간을 무제한 저장할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">우정 프로필에서는 친구와의 추억과 공통점을 확인하며 관계를 더 돈독하게 할 수 있습니다. 다만, 모든 콘텐츠는 스크린샷 등으로 저장될 수 있으므로 공유 시 주의가 필요합니다. 개인정보 보호 정책은 개인정보 보호센터에서 확인할 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Snapchat 01-tile.jpg\" data-origin-width=\"1635\" data-origin-height=\"2895\"><span data-url=\"https://blog.kakaocdn.net/dn/cJhC07/btsKtWmbTBa/IhGivvOZwboAu80eFI08nk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cJhC07/btsKtWmbTBa/IhGivvOZwboAu80eFI08nk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cJhC07/btsKtWmbTBa/IhGivvOZwboAu80eFI08nk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcJhC07%2FbtsKtWmbTBa%2FIhGivvOZwboAu80eFI08nk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Snapchat 01-tile.jpg\" data-origin-width=\"1635\" data-origin-height=\"2895\"/></span></figure>\n</p>\n<figure id=\"og_1730686924103\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Snapchat - Google Play 앱\" data-og-description=\"지금 이 순간을 공유하세요!\" data-og-host=\"play.google.com\" data-og-source-url=\"https://play.google.com/store/apps/details?id=com.snapchat.android\" data-og-url=\"https://play.google.com/store/apps/details?id=com.snapchat.android&amp;hl=ko\" data-og-image=\"https://scrap.kakaocdn.net/dn/kVbBO/hyXsZ24oh4/k1Ru4VG6o5SQ7DVfKrPuW0/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/qEb0g/hyXs1s3Nrq/RXebLR6t74PtytkWIPNw31/img.png?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/dsolHZ/hyXsPGaKPH/Op69H9SqK318T4fNW70y6k/img.png?width=240&amp;height=240&amp;face=0_0_240_240\"><a href=\"https://play.google.com/store/apps/details?id=com.snapchat.android\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://play.google.com/store/apps/details?id=com.snapchat.android\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/kVbBO/hyXsZ24oh4/k1Ru4VG6o5SQ7DVfKrPuW0/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/qEb0g/hyXs1s3Nrq/RXebLR6t74PtytkWIPNw31/img.png?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/dsolHZ/hyXsPGaKPH/Op69H9SqK318T4fNW70y6k/img.png?width=240&amp;height=240&amp;face=0_0_240_240');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Snapchat - Google Play 앱</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">지금 이 순간을 공유하세요!</p>\n<p class=\"og-host\" data-ke-size=\"size16\">play.google.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>4. B612&nbsp;AI&nbsp;Photo&amp;Video&nbsp;Editor <br /></b></h2>\n<p data-ke-size=\"size16\">&nbsp;사진과 동영상을 특별하게 편집할 수 있는 올인원 카메라 앱입니다. 다양한 이펙트, 필터, 스티커가 매일 업데이트되며, 사용자는 자신의 개성에 맞는 필터를 쉽게 만들어 공유할 수 있습니다. <br /><br />&nbsp;주요 기능으로는 실시간 필터와 뷰티 효과를 통해 이상적인 사진을 촬영할 수 있는 스마트 카메라, AR 메이크업으로 자연스러운 룩을 연출할 수 있는 기능, 고해상도와 야간 촬영 모드, GIF 제작, 다양한 음악을 사용해 뮤직비디오 스타일의 동영상을 만드는 기능이 포함되어 있습니다. 또한, 전문가용 색감 보정 도구와 인물 보정 기능을 통해 인생샷을 완성할 수 있으며, 다양한 편집 도구와 스티커, 텍스트 추가 기능으로 사진과 영상을 더욱 풍성하게 꾸밀 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"B612 01-tile.jpg\" data-origin-width=\"1635\" data-origin-height=\"2895\"><span data-url=\"https://blog.kakaocdn.net/dn/bmyUU7/btsKtUPq5MF/0x63QLBPAoN0g35zl3vxz0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bmyUU7/btsKtUPq5MF/0x63QLBPAoN0g35zl3vxz0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bmyUU7/btsKtUPq5MF/0x63QLBPAoN0g35zl3vxz0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbmyUU7%2FbtsKtUPq5MF%2F0x63QLBPAoN0g35zl3vxz0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"B612 01-tile.jpg\" data-origin-width=\"1635\" data-origin-height=\"2895\"/></span></figure>\n</p>\n<figure id=\"og_1730686949228\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"B612 AI Photo&amp;Video Editor - Google Play 앱\" data-og-description=\"매일매일 업데이트되는 트렌디한 이펙트, 필터, 스티커들을 만나보세요!\" data-og-host=\"play.google.com\" data-og-source-url=\"https://play.google.com/store/apps/details?id=com.linecorp.b612.android\" data-og-url=\"https://play.google.com/store/apps/details?id=com.linecorp.b612.android&amp;hl=ko\" data-og-image=\"https://scrap.kakaocdn.net/dn/eFj3C/hyXs0OrOnM/nVoSKaR6yercVRofInLzQ1/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/bTENWr/hyXsQE3ZWU/WSCLMBz5KpH41oKKu0G440/img.png?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/bCh6Iy/hyXsSXafzH/l3GltemSbFpOvtSxy1T18k/img.png?width=240&amp;height=240&amp;face=0_0_240_240\"><a href=\"https://play.google.com/store/apps/details?id=com.linecorp.b612.android\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://play.google.com/store/apps/details?id=com.linecorp.b612.android\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/eFj3C/hyXs0OrOnM/nVoSKaR6yercVRofInLzQ1/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/bTENWr/hyXsQE3ZWU/WSCLMBz5KpH41oKKu0G440/img.png?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/bCh6Iy/hyXsSXafzH/l3GltemSbFpOvtSxy1T18k/img.png?width=240&amp;height=240&amp;face=0_0_240_240');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">B612 AI Photo&amp;Video Editor - Google Play 앱</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">매일매일 업데이트되는 트렌디한 이펙트, 필터, 스티커들을 만나보세요!</p>\n<p class=\"og-host\" data-ke-size=\"size16\">play.google.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>5. 캠핏&nbsp;-&nbsp;실시간&nbsp;캠핑장&nbsp;예약,&nbsp;오토캠핑,&nbsp;글램핑,&nbsp;차박</b></h2>\n<p data-ke-size=\"size16\">&nbsp;캠핑을 위한 원스톱 플랫폼으로, 원하는 캠핑장을 손쉽게 실시간으로 예약할 수 있습니다. 실시간 예약 기능을 통해 캠핑장 예약이 가능하며, 빈자리 찾기 및 알림 기능으로 원하는 날짜에 빈자리가 생기면 바로 알림을 받을 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;또한, 캠핑 커뮤니티를 통해 캠퍼들과 노하우를 공유하고, 장비위키에서 실제 사용자들의 후기 정보를 확인해 필요한 장비 정보를 빠르게 찾을 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"캠핏 01-tile.jpg\" data-origin-width=\"1635\" data-origin-height=\"2895\"><span data-url=\"https://blog.kakaocdn.net/dn/HAdFP/btsKutjtQTb/X2qKzD0jL6fSJMJFR6oRcK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/HAdFP/btsKutjtQTb/X2qKzD0jL6fSJMJFR6oRcK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/HAdFP/btsKutjtQTb/X2qKzD0jL6fSJMJFR6oRcK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FHAdFP%2FbtsKutjtQTb%2FX2qKzD0jL6fSJMJFR6oRcK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"캠핏 01-tile.jpg\" data-origin-width=\"1635\" data-origin-height=\"2895\"/></span></figure>\n</p>\n<figure id=\"og_1730686973649\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"캠핏 - 실시간 캠핑장 예약, 오토캠핑, 글램핑, 차박 - Google Play 앱\" data-og-description=\"실시간 캠핑장 예약, 오토캠핑, 글램핑, 차박\" data-og-host=\"play.google.com\" data-og-source-url=\"https://play.google.com/store/apps/details?id=kr.co.camfit.app\" data-og-url=\"https://play.google.com/store/apps/details?id=kr.co.camfit.app&amp;hl=ko\" data-og-image=\"https://scrap.kakaocdn.net/dn/wLSY0/hyXs1zQl8Y/sRk924rdFMsRhkKO24BzbK/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/kKpnQ/hyXsXjT8Zu/rp6ijnNbpPJk3Iaxu2gkO1/img.png?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/b08KUS/hyXsSJEmTe/aYcCcgAUFpveLIBWmvkf2K/img.png?width=240&amp;height=240&amp;face=0_0_240_240\"><a href=\"https://play.google.com/store/apps/details?id=kr.co.camfit.app\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://play.google.com/store/apps/details?id=kr.co.camfit.app\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/wLSY0/hyXs1zQl8Y/sRk924rdFMsRhkKO24BzbK/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/kKpnQ/hyXsXjT8Zu/rp6ijnNbpPJk3Iaxu2gkO1/img.png?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/b08KUS/hyXsSJEmTe/aYcCcgAUFpveLIBWmvkf2K/img.png?width=240&amp;height=240&amp;face=0_0_240_240');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">캠핏 - 실시간 캠핑장 예약, 오토캠핑, 글램핑, 차박 - Google Play 앱</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">실시간 캠핑장 예약, 오토캠핑, 글램핑, 차박</p>\n<p class=\"og-host\" data-ke-size=\"size16\">play.google.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "구글 플레이 스토어의 수많은 앱 중, 유용하고 안전한 앱을 엄선해 매주 소개합니다. 신뢰할 수 있는 앱 리뷰를 확인하세요.\n \n\n\n \n안드로이드 앱스토어인 구글 플레이 스토어에는 하루에도 엄청난 수의 앱과 게임이 신규로 등록됩니다. 이 모든앱들을 사용자가 확인하고 양질의 앱을 선택하는 것이 사실상 불가능 하다는 얘기죠.\n \n또한, 최근들어 강화되었다 하지만 여전히 구글 플레이스토어에는 유해한 앱들이 사라지지 않고 이들 앱으로 피해를 보는 사용자도 많습니다.본 블로그에서는 일주일에 한번정도 운영자가 직접 유용하고 편리한 앱을 엄선하여 소개합니다.\n \n'어떤오후의 프리웨어 이야기'에서 추천하는 2024년 11월 4일자 '안드로이드 추천 앱'입니다.\n \n1. 리드로그 - 교보문고의 독서 기록 앱 \n\n일상에서 새롭게 영감을 얻을 수 있는 문장을 매일 수집하고 기록하는 앱입니다. 마음에 드는 문장을 카메라로 스캔하거나 앨범에서 불러와 간편하게 저장할 수 있으며, 직접 작성도 가능합니다. \n효율적인 문장 보관을 위해 폴더별로 분류하고 필요할 때마다 쉽게 찾아볼 수 있습니다. 또한, 키워드나 태그를 통해 문장, 폴더, 주제를 검색하여 필요한 문장을 한 번에 불러올 수 있으며, 관심 있는 주제나 콘텐츠의 태그를 팔로우해 맞춤 문장을 얻을 수 있습니다. 책, 영화, 노래 등 다양한 콘텐츠에서 좋은 문장을 발견하고 이를 통해 새로운 영감을 받을 수 있습니다.\n\n\n\n \n리드로그 - 교보문고의 독서 기록 앱 - Google Play 앱\n수집부터 활용까지 효율적인 기록 노하우 공개, 이제 리드로그로 똑똑한 ‘문장 수집 생활’ 시작하세요!\nplay.google.com\n\n \n \n \n2. Health Sense: Blood Sugar Hub\n\n혈당, 혈압, 심박수, BMI 등을 쉽고 안전하게 추적할 수 있는 앱입니다. 이 앱은 간단한 인터페이스를 통해 다양한 건강 데이터를 기록할 수 있으며, 차트와 그래프를 통해 사용자가 건강 수치를 쉽게 모니터링하고 조절하도록 도와줍니다. 또한, 과학적으로 입증된 건강 정보와 팁을 제공하여 단기, 중기, 장기적인 건강 개선에 유용한 통찰력을 제공합니다.\n\n\n\n \nHealth Sense: Blood Sugar Hub - Google Play 앱\n건강 데이터를 이해하세요\nplay.google.com\n\n \n \n \n \n \n3. Snapchat\n 친구 및 가족과 순간을 빠르고 재미있게 공유하는 소셜 미디어 앱입니다. 카메라 기능이 기본으로 실행되어 사진과 동영상을 쉽게 촬영하고, 다양한 렌즈와 필터로 자신을 표현할 수 있습니다. 실시간 채팅, 그룹 스토리, 최대 16명까지 영상 채팅 기능이 제공되며, 특별한 Friendmoji로 소통이 가능합니다.\n \n 스토리 섹션에서는 친구들의 일상과 뉴스, 독점 콘텐츠를 확인할 수 있으며, 스포트라이트에서는 인기 콘텐츠를 감상하고 공유할 수 있습니다. 지도 기능으로 친구의 위치와 활동을 확인하고, 메모리에 소중한 순간을 무제한 저장할 수 있습니다.\n \n우정 프로필에서는 친구와의 추억과 공통점을 확인하며 관계를 더 돈독하게 할 수 있습니다. 다만, 모든 콘텐츠는 스크린샷 등으로 저장될 수 있으므로 공유 시 주의가 필요합니다. 개인정보 보호 정책은 개인정보 보호센터에서 확인할 수 있습니다.\n\n\n\n \nSnapchat - Google Play 앱\n지금 이 순간을 공유하세요!\nplay.google.com\n\n \n \n \n \n \n4. B612 AI Photo&Video Editor \n\n 사진과 동영상을 특별하게 편집할 수 있는 올인원 카메라 앱입니다. 다양한 이펙트, 필터, 스티커가 매일 업데이트되며, 사용자는 자신의 개성에 맞는 필터를 쉽게 만들어 공유할 수 있습니다. \n 주요 기능으로는 실시간 필터와 뷰티 효과를 통해 이상적인 사진을 촬영할 수 있는 스마트 카메라, AR 메이크업으로 자연스러운 룩을 연출할 수 있는 기능, 고해상도와 야간 촬영 모드, GIF 제작, 다양한 음악을 사용해 뮤직비디오 스타일의 동영상을 만드는 기능이 포함되어 있습니다. 또한, 전문가용 색감 보정 도구와 인물 보정 기능을 통해 인생샷을 완성할 수 있으며, 다양한 편집 도구와 스티커, 텍스트 추가 기능으로 사진과 영상을 더욱 풍성하게 꾸밀 수 있습니다.\n\n\n\n \nB612 AI Photo&Video Editor - Google Play 앱\n매일매일 업데이트되는 트렌디한 이펙트, 필터, 스티커들을 만나보세요!\nplay.google.com\n\n \n \n \n \n \n5. 캠핏 - 실시간 캠핑장 예약, 오토캠핑, 글램핑, 차박\n 캠핑을 위한 원스톱 플랫폼으로, 원하는 캠핑장을 손쉽게 실시간으로 예약할 수 있습니다. 실시간 예약 기능을 통해 캠핑장 예약이 가능하며, 빈자리 찾기 및 알림 기능으로 원하는 날짜에 빈자리가 생기면 바로 알림을 받을 수 있습니다.\n \n 또한, 캠핑 커뮤니티를 통해 캠퍼들과 노하우를 공유하고, 장비위키에서 실제 사용자들의 후기 정보를 확인해 필요한 장비 정보를 빠르게 찾을 수 있습니다.\n\n\n\n \n캠핏 - 실시간 캠핑장 예약, 오토캠핑, 글램핑, 차박 - Google Play 앱\n실시간 캠핑장 예약, 오토캠핑, 글램핑, 차박\nplay.google.com",
        "guid": "http://muzbox.tistory.com/483493",
        "categories": [
          "ANDROID &amp; 모바일/추천 무료 앱",
          "B612",
          "당뇨 관리",
          "독서일기",
          "무료앱",
          "미래 자녀 얼굴확인",
          "스냅챗",
          "안드로이드 추천앱",
          "캠핑장 예약모바일",
          "혈당관리"
        ],
        "isoDate": "2024-11-04T02:23:57.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "ChatGPT의 실시간 웹 검색 기능 활용법",
        "link": "http://muzbox.tistory.com/483492",
        "pubDate": "Fri, 1 Nov 2024 11:58:36 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483492#entry483492comment",
        "content": "<p data-ke-size=\"size16\">OpenAI의 ChatGPT가 실시간 웹 검색 기능을 도입하여 구글과의 검색 시장 경쟁을 본격화했습니다. 최신 정보를 실시간으로 검색하고, 다양한 활용 사례를 통해 새로운 검색 경험을 제공합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"챗gpt 실시기 웹 검색 수동.png\" data-origin-width=\"887\" data-origin-height=\"451\"><span data-url=\"https://blog.kakaocdn.net/dn/zndKe/btsKsbbJ2X2/LVrss97CtJ3CpxwJYZzkC0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/zndKe/btsKsbbJ2X2/LVrss97CtJ3CpxwJYZzkC0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/zndKe/btsKsbbJ2X2/LVrss97CtJ3CpxwJYZzkC0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FzndKe%2FbtsKsbbJ2X2%2FLVrss97CtJ3CpxwJYZzkC0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"챗gpt 실시기 웹 검색 수동.png\" data-origin-width=\"887\" data-origin-height=\"451\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;OpenAI는 ChatGPT에 실시간 웹 검색 기능을 추가하며 기존 검색 엔진 시장의 판도를 뒤흔들고 있습니다. Microsoft Bing과 협력하여 ChatGPT가 실시간으로 최신 정보에 접근할 수 있게 됨에 따라, 사용자들은 기존의 검색 방식을 대체할 새로운 검색 경험을 제공합니다. 구글이 주도하는 검색 시장에 도전장을 던진 ChatGPT의 검색 기능에 대해 자세히 알아보고, 실시간 검색이 어떤 변화를 가져올지 살펴보겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>ChatGPT 실시간 웹 검색 기능 개요와 활성화 방법</b></span></h2>\n<h3 data-ke-size=\"size23\"><b><i>1. 실시간 웹 검색 기능 개요</i></b></h3>\n<p data-ke-size=\"size16\">&nbsp;ChatGPT의 실시간 웹 검색 기능은 최신 뉴스, 스포츠 경기 결과, 주가, 날씨 등 사용자가 필요로 하는 정보를 즉시 제공합니다. 검색 엔진이나 뉴스 사이트를 별도로 열 필요 없이 ChatGPT 대화창에서 바로 검색할 수 있다는 점에서 기존의 검색 방식과 차별화됩니다. 이 기능은 현재 ChatGPT 플러스 사용자와 서치GPT 대기 사용자들에게 우선 제공되고 있으며, 향후 무료 사용자에게도 확대될 예정입니다.&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"챗gpt 실시기 웹 검색 02.png\" data-origin-width=\"972\" data-origin-height=\"592\"><span data-url=\"https://blog.kakaocdn.net/dn/bemIQO/btsKq2UnOtI/GFiQGXK4nzfIWxpEKwC1Z0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bemIQO/btsKq2UnOtI/GFiQGXK4nzfIWxpEKwC1Z0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bemIQO/btsKq2UnOtI/GFiQGXK4nzfIWxpEKwC1Z0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbemIQO%2FbtsKq2UnOtI%2FGFiQGXK4nzfIWxpEKwC1Z0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"챗gpt 실시기 웹 검색 02.png\" data-origin-width=\"972\" data-origin-height=\"592\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\"><i><b>2. 기능 활성화 및 접근성</b></i></h3>\n<p data-ke-size=\"size16\">ChatGPT의 실시간 검색 기능은 자동으로 활성화되며, 필요에 따라 프롬프트창 아래의 \" \"를 클릭하여 수동으로 검색할 수도 있습니다. 사용자는 질문을 통해 간단하게 최신 정보를 얻을 수 있으며, 결과물은 원본 출처와 함께 제공되어 신뢰성도 높습니다. 결과에는 뉴스나 블로그 링크가 포함되어 있으며, 출처 버튼을 클릭하면 관련 정보가 사이드바에 표시됩니다.</p>\n<blockquote data-ke-style=\"style3\">  이모지를 클릭하지 않고 검색을 요청할 때와 비교해 보면,  을 사용한 검색 요청은 명확하게 GPT-4가 인터넷 검색 기능을 사용할 필요가 있음을 알리는 역할을 합니다.   없이 검색 관련 요청을 하면, GPT-4는 우선 자체적으로 제공 가능한 답변을 시도하며 인터넷이 필요하지 않은 정보를 제공합니다. <br /><br />즉,  을 입력하면 바로 인터넷 검색을 활성화하여 최신 정보를 가져오는 반면,   없이 요청할 경우에는 모델이 가지고 있는 지식 범위 내에서 답변을 제공하거나, 필요하다고 판단될 때에만 추가 검색을 시도합니다.</blockquote>\n<h3 data-ke-size=\"size23\"><i><b>3. GPT-4 기반 검색 엔진의 데이터 신뢰성 강화</b></i></h3>\n<p data-ke-size=\"size16\">OpenAI는 GPT-4의 최신 미세 조정 버전을 기반으로 검색 기능을 운영합니다. 또한 AP통신, 로이터, 파이낸셜 타임스와 같은 언론사와 파트너십을 맺어, 신뢰할 수 있는 출처에서 최신 데이터를 제공하고 있습니다. 이를 통해 ChatGPT는 다양한 미디어와 협력하여 데이터 신뢰성을 높이며, 경쟁 AI보다 한층 더 높은 수준의 정확도를 보장합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>ChatGPT 실시간 웹 검색 활용 예시</b></span></h2>\n<h3 data-ke-size=\"size23\"><i><b>예시 1: 실시간 주가와 최신 경제 뉴스 확인하기</b></i></h3>\n<p data-ke-size=\"size16\">사용자가 ChatGPT에서 &ldquo;애플 주가와 관련된 최신 뉴스&rdquo;를 입력하면, 실시간으로 업데이트되는 애플 주가 그래프와 관련된 최신 기사를 확인할 수 있습니다. 이때 기사와 주가 정보는 원본 출처와 함께 제공되므로, 추가 정보를 직접 확인할 수 있습니다. 기존 검색 엔진처럼 여러 번 검색할 필요 없이 대화형으로 간편하게 필요한 정보를 얻을 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><i><b>예시 2: 위치 기반 추천으로 인근 명소 찾기</b></i></h3>\n<p data-ke-size=\"size16\">특정 지역의 레스토랑이나 명소를 추천받고 싶다면 ChatGPT의 위치 기반 검색이 유용합니다. &ldquo;서울 경복궁 주변 맛집&rdquo;을 입력하면, Bing 지도를 기반으로 위치가 표시된 레스토랑 목록이 함께 나타나 편리하게 선택할 수 있습니다. 레스토랑의 위치는 물론, 가격대와 평점 등의 필터 기능을 통해 조건에 맞는 장소를 찾을 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"맛집.jpg\" data-origin-width=\"972\" data-origin-height=\"560\"><span data-url=\"https://blog.kakaocdn.net/dn/8k3b2/btsKq9eOC1P/QzkKSkJrXsQpFafZDu1ok0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/8k3b2/btsKq9eOC1P/QzkKSkJrXsQpFafZDu1ok0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/8k3b2/btsKq9eOC1P/QzkKSkJrXsQpFafZDu1ok0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F8k3b2%2FbtsKq9eOC1P%2FQzkKSkJrXsQpFafZDu1ok0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"맛집.jpg\" data-origin-width=\"972\" data-origin-height=\"560\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><i><b>예시 3: 최신 이벤트 정보와 특정 날짜의 일정 확인하기</b></i></h3>\n<p data-ke-size=\"size16\">ChatGPT의 실시간 검색 기능은 선거와 같은 주요 이벤트 일정과 최신 정보를 빠르게 제공합니다. &ldquo;2024년 미국 대통령 선거 일정&rdquo;을 입력하면 최신 뉴스와 일정을 제공해 사용자들이 중요한 정보를 놓치지 않도록 돕습니다. 이처럼 시의성이 중요한 검색에 ChatGPT가 실시간으로 업데이트된 정보를 제공하여 유용합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>아직은 글쎄... 웹검색이 가능하다 정도?</b></span></h2>\n<p data-ke-size=\"size16\">OpenAI의 ChatGPT는 실시간 웹 검색 기능을 통해 최신 정보에 접근할 수 있는 기능을 제공하지만, 여전히 몇 가지 한계가 존재합니다. 특히 검색 결과를 기반으로 정확한 최종 답변을 제공하기보다는, 사용자에게 정보를 제시하는 역할을 하므로 최신성의 판단은 최종적으로 사용자의 몫이 됩니다.</p>\n<h3 data-ke-size=\"size23\"><i><b>퍼플렉시티와 비교되는 최신성 확보의 어려움</b></i></h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"챗gpt 실시기 웹 검색 03.png\" data-origin-width=\"841\" data-origin-height=\"346\"><span data-url=\"https://blog.kakaocdn.net/dn/db1kKD/btsKsxyH3Yb/7YVzw5VtMLnKWQ8UuEWoF1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/db1kKD/btsKsxyH3Yb/7YVzw5VtMLnKWQ8UuEWoF1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/db1kKD/btsKsxyH3Yb/7YVzw5VtMLnKWQ8UuEWoF1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fdb1kKD%2FbtsKsxyH3Yb%2F7YVzw5VtMLnKWQ8UuEWoF1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"챗gpt 실시기 웹 검색 03.png\" data-origin-width=\"841\" data-origin-height=\"346\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"퍼플렉시티.png\" data-origin-width=\"689\" data-origin-height=\"409\"><span data-url=\"https://blog.kakaocdn.net/dn/duHSA7/btsKraERtxa/Py54W1bbKMChaBZRXZKZa0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/duHSA7/btsKraERtxa/Py54W1bbKMChaBZRXZKZa0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/duHSA7/btsKraERtxa/Py54W1bbKMChaBZRXZKZa0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FduHSA7%2FbtsKraERtxa%2FPy54W1bbKMChaBZRXZKZa0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"퍼플렉시티.png\" data-origin-width=\"689\" data-origin-height=\"409\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;ChatGPT의 실시간 검색 기능은 사용자 질문에 따라 웹에서 정보를 가져오는 방식으로 작동하지만, 경쟁 서비스인 퍼플렉시티(Perplexity)에 비해 최신성을 확보하는 데 있어 제한적입니다. 퍼플렉시티는 빠른 최신 정보 제공과 관련 정보 연결이 강점인 반면, ChatGPT는 최신 데이터를 기반으로 실시간 정보를 제공하는 데는 시간이 걸릴 수 있으며, 직접적인 피드백을 통해 최종 정보의 정확성을 보장하는 데까지는 도달하지 못하는 경우가 있습니다.</p>\n<h3 data-ke-size=\"size23\"><i><b>정보의 정확성과 최신성을 판단해야 하는 사용자 책임</b></i></h3>\n<p data-ke-size=\"size16\">실시간 웹 검색을 통해 제공되는 정보는 기본적으로 신뢰할 수 있는 출처에서 가져오지만, OpenAI의 ChatGPT가 최종 결과를 보장하지는 않습니다. 따라서 사용자는 제공된 정보가 최신인지, 신뢰할 수 있는지를 스스로 판단하는 것이 중요합니다. 특히 중요한 의사결정이나 최신 정보가 필수적인 경우에는 복수의 출처를 확인하는 것이 좋습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이러한 한계는 OpenAI가 파트너 언론사와 협력하여 신뢰도를 높이려는 노력에도 불구하고, 현재 ChatGPT가 실시간 정보 검색에서 정보의 최신성과 정확성을 완벽하게 보장하기에는 어려움이 있다는 점을 반영합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>AI 검색 시장의 변화와 OpenAI의 경쟁 전략</b></span></h2>\n<p data-ke-size=\"size16\">&nbsp;OpenAI는 ChatGPT의 검색 기능을 통해 구글과 MS Bing이 주도하는 검색 시장에 본격적으로 도전장을 내밀었습니다. 현재 전 세계 검색 시장에서 구글은 약 90%의 점유율을 차지하고 있으며, Bing은 4%에 불과합니다. 그러나 ChatGPT는 Bing과의 협력과 AI 기반의 자연어 검색 기능을 활용해 사용자가 대화형으로 정보를 검색하는 새로운 경험을 제공합니다. 이에 따라 기존의 검색 시장에 영향을 미칠 가능성을 내비치고 있습니다. 특히, 광고 없이 순수한 정보 검색 환경을 제공하겠다는 방침을 밝히며, 구글과는 다른 접근 방식을 보여주고 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">OpenAI는 앞으로도 주요 언론사와 협력을 확대해 최신 데이터를 제공하며 정보의 신뢰성과 정확성을 지속적으로 보장할 계획입니다. 동시에 AI 모델의 성능을 최적화하여 ChatGPT가 실시간 정보 검색에서 높은 정확도를 유지할 수 있도록 하는 데 중점을 두고 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>마치며</b></span></h2>\n<p data-ke-size=\"size16\">ChatGPT의 실시간 웹 검색 기능 도입은 기존의 검색 방식에 변화를 가져올 잠재력이 큽니다. 경제 뉴스와 같은 최신 정보를 실시간으로 확인할 수 있을 뿐만 아니라, 위치 기반 정보와 이벤트 일정을 쉽게 확인할 수 있어 사용자들에게 유용한 기능입니다. 앞으로 ChatGPT의 실시간 검색 기능을 통해 구글과의 경쟁이 어떻게 전개될지, AI 검색 시장의 발전을 지켜보는 것도 흥미로울 것입니다. 이제 ChatGPT를 통해 최신 정보를 실시간으로 확인하고 다양한 활용 사례를 직접 경험해보세요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>Q&amp;A</b></span></h2>\n<h3 data-ke-size=\"size23\"><i><b>Q1: ChatGPT의 실시간 검색 기능은 어떤 사용자가 이용할 수 있나요?</b></i></h3>\n<p data-ke-size=\"size16\">A1: 현재는 플러스 사용자와 서치GPT 신청자들이 우선적으로 사용할 수 있으며, 이후 무료 사용자에게도 단계적으로 확대될 예정입니다.</p>\n<h3 data-ke-size=\"size23\"><i><b>Q2: ChatGPT의 실시간 검색은 어떤 출처에서 데이터를 가져오나요?</b></i></h3>\n<p data-ke-size=\"size16\">A2: Bing 검색 엔진을 기반으로 하며, AP통신, 로이터 등 주요 언론사와의 협력을 통해 신뢰할 수 있는 출처에서 정보를 제공합니다.</p>\n<h3 data-ke-size=\"size23\"><i><b>Q3: ChatGPT는 기존 검색 엔진과 어떻게 다른가요?</b></i></h3>\n<p data-ke-size=\"size16\">A3: ChatGPT는 대화형 질문과 응답 형식으로 정보를 제공합니다. 여러 번 검색할 필요 없이 질문을 통해 원하는 정보를 실시간으로 얻을 수 있다는 점에서 차별화됩니다.</p>",
        "contentSnippet": "OpenAI의 ChatGPT가 실시간 웹 검색 기능을 도입하여 구글과의 검색 시장 경쟁을 본격화했습니다. 최신 정보를 실시간으로 검색하고, 다양한 활용 사례를 통해 새로운 검색 경험을 제공합니다.\n\n\n \n OpenAI는 ChatGPT에 실시간 웹 검색 기능을 추가하며 기존 검색 엔진 시장의 판도를 뒤흔들고 있습니다. Microsoft Bing과 협력하여 ChatGPT가 실시간으로 최신 정보에 접근할 수 있게 됨에 따라, 사용자들은 기존의 검색 방식을 대체할 새로운 검색 경험을 제공합니다. 구글이 주도하는 검색 시장에 도전장을 던진 ChatGPT의 검색 기능에 대해 자세히 알아보고, 실시간 검색이 어떤 변화를 가져올지 살펴보겠습니다.\n \n \nChatGPT 실시간 웹 검색 기능 개요와 활성화 방법\n1. 실시간 웹 검색 기능 개요\n ChatGPT의 실시간 웹 검색 기능은 최신 뉴스, 스포츠 경기 결과, 주가, 날씨 등 사용자가 필요로 하는 정보를 즉시 제공합니다. 검색 엔진이나 뉴스 사이트를 별도로 열 필요 없이 ChatGPT 대화창에서 바로 검색할 수 있다는 점에서 기존의 검색 방식과 차별화됩니다. 이 기능은 현재 ChatGPT 플러스 사용자와 서치GPT 대기 사용자들에게 우선 제공되고 있으며, 향후 무료 사용자에게도 확대될 예정입니다. \n\n\n2. 기능 활성화 및 접근성\nChatGPT의 실시간 검색 기능은 자동으로 활성화되며, 필요에 따라 프롬프트창 아래의 \" \"를 클릭하여 수동으로 검색할 수도 있습니다. 사용자는 질문을 통해 간단하게 최신 정보를 얻을 수 있으며, 결과물은 원본 출처와 함께 제공되어 신뢰성도 높습니다. 결과에는 뉴스나 블로그 링크가 포함되어 있으며, 출처 버튼을 클릭하면 관련 정보가 사이드바에 표시됩니다.\n  이모지를 클릭하지 않고 검색을 요청할 때와 비교해 보면,  을 사용한 검색 요청은 명확하게 GPT-4가 인터넷 검색 기능을 사용할 필요가 있음을 알리는 역할을 합니다.   없이 검색 관련 요청을 하면, GPT-4는 우선 자체적으로 제공 가능한 답변을 시도하며 인터넷이 필요하지 않은 정보를 제공합니다. \n즉,  을 입력하면 바로 인터넷 검색을 활성화하여 최신 정보를 가져오는 반면,   없이 요청할 경우에는 모델이 가지고 있는 지식 범위 내에서 답변을 제공하거나, 필요하다고 판단될 때에만 추가 검색을 시도합니다.\n3. GPT-4 기반 검색 엔진의 데이터 신뢰성 강화\nOpenAI는 GPT-4의 최신 미세 조정 버전을 기반으로 검색 기능을 운영합니다. 또한 AP통신, 로이터, 파이낸셜 타임스와 같은 언론사와 파트너십을 맺어, 신뢰할 수 있는 출처에서 최신 데이터를 제공하고 있습니다. 이를 통해 ChatGPT는 다양한 미디어와 협력하여 데이터 신뢰성을 높이며, 경쟁 AI보다 한층 더 높은 수준의 정확도를 보장합니다.\n \n \nChatGPT 실시간 웹 검색 활용 예시\n예시 1: 실시간 주가와 최신 경제 뉴스 확인하기\n사용자가 ChatGPT에서 “애플 주가와 관련된 최신 뉴스”를 입력하면, 실시간으로 업데이트되는 애플 주가 그래프와 관련된 최신 기사를 확인할 수 있습니다. 이때 기사와 주가 정보는 원본 출처와 함께 제공되므로, 추가 정보를 직접 확인할 수 있습니다. 기존 검색 엔진처럼 여러 번 검색할 필요 없이 대화형으로 간편하게 필요한 정보를 얻을 수 있습니다.\n예시 2: 위치 기반 추천으로 인근 명소 찾기\n특정 지역의 레스토랑이나 명소를 추천받고 싶다면 ChatGPT의 위치 기반 검색이 유용합니다. “서울 경복궁 주변 맛집”을 입력하면, Bing 지도를 기반으로 위치가 표시된 레스토랑 목록이 함께 나타나 편리하게 선택할 수 있습니다. 레스토랑의 위치는 물론, 가격대와 평점 등의 필터 기능을 통해 조건에 맞는 장소를 찾을 수 있습니다.\n\n\n \n예시 3: 최신 이벤트 정보와 특정 날짜의 일정 확인하기\nChatGPT의 실시간 검색 기능은 선거와 같은 주요 이벤트 일정과 최신 정보를 빠르게 제공합니다. “2024년 미국 대통령 선거 일정”을 입력하면 최신 뉴스와 일정을 제공해 사용자들이 중요한 정보를 놓치지 않도록 돕습니다. 이처럼 시의성이 중요한 검색에 ChatGPT가 실시간으로 업데이트된 정보를 제공하여 유용합니다.\n \n \n아직은 글쎄... 웹검색이 가능하다 정도?\nOpenAI의 ChatGPT는 실시간 웹 검색 기능을 통해 최신 정보에 접근할 수 있는 기능을 제공하지만, 여전히 몇 가지 한계가 존재합니다. 특히 검색 결과를 기반으로 정확한 최종 답변을 제공하기보다는, 사용자에게 정보를 제시하는 역할을 하므로 최신성의 판단은 최종적으로 사용자의 몫이 됩니다.\n퍼플렉시티와 비교되는 최신성 확보의 어려움\n\n\n \n\n\n \n ChatGPT의 실시간 검색 기능은 사용자 질문에 따라 웹에서 정보를 가져오는 방식으로 작동하지만, 경쟁 서비스인 퍼플렉시티(Perplexity)에 비해 최신성을 확보하는 데 있어 제한적입니다. 퍼플렉시티는 빠른 최신 정보 제공과 관련 정보 연결이 강점인 반면, ChatGPT는 최신 데이터를 기반으로 실시간 정보를 제공하는 데는 시간이 걸릴 수 있으며, 직접적인 피드백을 통해 최종 정보의 정확성을 보장하는 데까지는 도달하지 못하는 경우가 있습니다.\n정보의 정확성과 최신성을 판단해야 하는 사용자 책임\n실시간 웹 검색을 통해 제공되는 정보는 기본적으로 신뢰할 수 있는 출처에서 가져오지만, OpenAI의 ChatGPT가 최종 결과를 보장하지는 않습니다. 따라서 사용자는 제공된 정보가 최신인지, 신뢰할 수 있는지를 스스로 판단하는 것이 중요합니다. 특히 중요한 의사결정이나 최신 정보가 필수적인 경우에는 복수의 출처를 확인하는 것이 좋습니다.\n \n이러한 한계는 OpenAI가 파트너 언론사와 협력하여 신뢰도를 높이려는 노력에도 불구하고, 현재 ChatGPT가 실시간 정보 검색에서 정보의 최신성과 정확성을 완벽하게 보장하기에는 어려움이 있다는 점을 반영합니다.\n \n \nAI 검색 시장의 변화와 OpenAI의 경쟁 전략\n OpenAI는 ChatGPT의 검색 기능을 통해 구글과 MS Bing이 주도하는 검색 시장에 본격적으로 도전장을 내밀었습니다. 현재 전 세계 검색 시장에서 구글은 약 90%의 점유율을 차지하고 있으며, Bing은 4%에 불과합니다. 그러나 ChatGPT는 Bing과의 협력과 AI 기반의 자연어 검색 기능을 활용해 사용자가 대화형으로 정보를 검색하는 새로운 경험을 제공합니다. 이에 따라 기존의 검색 시장에 영향을 미칠 가능성을 내비치고 있습니다. 특히, 광고 없이 순수한 정보 검색 환경을 제공하겠다는 방침을 밝히며, 구글과는 다른 접근 방식을 보여주고 있습니다.\n \nOpenAI는 앞으로도 주요 언론사와 협력을 확대해 최신 데이터를 제공하며 정보의 신뢰성과 정확성을 지속적으로 보장할 계획입니다. 동시에 AI 모델의 성능을 최적화하여 ChatGPT가 실시간 정보 검색에서 높은 정확도를 유지할 수 있도록 하는 데 중점을 두고 있습니다.\n \n \n마치며\nChatGPT의 실시간 웹 검색 기능 도입은 기존의 검색 방식에 변화를 가져올 잠재력이 큽니다. 경제 뉴스와 같은 최신 정보를 실시간으로 확인할 수 있을 뿐만 아니라, 위치 기반 정보와 이벤트 일정을 쉽게 확인할 수 있어 사용자들에게 유용한 기능입니다. 앞으로 ChatGPT의 실시간 검색 기능을 통해 구글과의 경쟁이 어떻게 전개될지, AI 검색 시장의 발전을 지켜보는 것도 흥미로울 것입니다. 이제 ChatGPT를 통해 최신 정보를 실시간으로 확인하고 다양한 활용 사례를 직접 경험해보세요.\n \n \nQ&A\nQ1: ChatGPT의 실시간 검색 기능은 어떤 사용자가 이용할 수 있나요?\nA1: 현재는 플러스 사용자와 서치GPT 신청자들이 우선적으로 사용할 수 있으며, 이후 무료 사용자에게도 단계적으로 확대될 예정입니다.\nQ2: ChatGPT의 실시간 검색은 어떤 출처에서 데이터를 가져오나요?\nA2: Bing 검색 엔진을 기반으로 하며, AP통신, 로이터 등 주요 언론사와의 협력을 통해 신뢰할 수 있는 출처에서 정보를 제공합니다.\nQ3: ChatGPT는 기존 검색 엔진과 어떻게 다른가요?\nA3: ChatGPT는 대화형 질문과 응답 형식으로 정보를 제공합니다. 여러 번 검색할 필요 없이 질문을 통해 원하는 정보를 실시간으로 얻을 수 있다는 점에서 차별화됩니다.",
        "guid": "http://muzbox.tistory.com/483492",
        "categories": [
          "AI, 미래기술/채팅",
          "bing 기반 검색",
          "ChatGPT",
          "OpenAI",
          "경제 뉴스",
          "데이터 신뢰성",
          "실시간 검색",
          "위치 추천",
          "인공지능",
          "주요 이벤트 일정",
          "최신 정보"
        ],
        "isoDate": "2024-11-01T02:58:36.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "샤말란의눈",
        "title": "[PS5] PS5 프로, 스펙 및 실제 게임에서의 시각적 차이",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2264",
        "pubDate": "Wed, 06 Nov 2024 20:10:16 +0900",
        "author": "샤말란의눈",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/24/11/04/192f2a45a1313b2a1.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2024-11-06T11:10:16.000Z"
      },
      {
        "creator": "｜RULIWEB｜",
        "title": "[게임툰] 돌아온 초 액션 배틀, 드래곤볼 스파킹! 제로",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2263",
        "pubDate": "Fri, 01 Nov 2024 21:30:37 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/24/11/01/192e7b2ee6351ad6b.jpg\">",
        "contentSnippet": "",
        "categories": [
          "게임툰"
        ],
        "isoDate": "2024-11-01T12:30:37.000Z"
      },
      {
        "creator": "｜RULIWEB｜",
        "title": "[게임툰] 23년 만에 돌아온 호러 명작, 사일런트 힐 2 리메이크",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2262",
        "pubDate": "Fri, 01 Nov 2024 21:25:17 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/24/11/01/192e7ac954551ad6b.png\">",
        "contentSnippet": "",
        "categories": [
          "게임툰"
        ],
        "isoDate": "2024-11-01T12:25:17.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "GitHub Copilot - Visual Studio의 빠른 정보에서 Copilot을 사용하여 C++ 심볼 이해하기",
        "link": "https://jacking75.github.io/tech-ai_20241102/",
        "pubDate": "Sat, 02 Nov 2024 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vRA4eHQFK1NKU3KSH3rFsd4Hw-M-Nl7v3Pgnyo4hovS8-4thqP4pm6AZ2Va9P4BK7aiaTzIpYxUeQ6T/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/tech-ai_20241102/",
        "isoDate": "2024-11-01T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "트럼프가 당선되었습니다. 투자 방향 변경",
        "link": "http://serverdown.tistory.com/935",
        "pubDate": "Wed, 6 Nov 2024 18:14:27 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/935#entry935comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"299\" data-origin-height=\"168\"><span data-url=\"https://blog.kakaocdn.net/dn/CQx06/btsKzNgERi2/xVePueQUcFm0nGgsmKnA0k/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/CQx06/btsKzNgERi2/xVePueQUcFm0nGgsmKnA0k/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/CQx06/btsKzNgERi2/xVePueQUcFm0nGgsmKnA0k/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FCQx06%2FbtsKzNgERi2%2FxVePueQUcFm0nGgsmKnA0k%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"299\" data-origin-height=\"168\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=u5LdAu1CpqE\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=u5LdAu1CpqE</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=u5LdAu1CpqE\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/ldixF/hyXsPfWui7/h8nH7WOfsKYM5lCwHlY0Jk/img.jpg?width=1280&amp;height=720&amp;face=26_122_958_548,https://scrap.kakaocdn.net/dn/bEV4V2/hyXwrYKWIJ/A2F6DX76WzpUar0Zyb2kS0/img.jpg?width=1280&amp;height=720&amp;face=26_122_958_548\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"1143. 트럼프 제국의 부활 - 비트코인 100만불 가나!\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/u5LdAu1CpqE\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">우선 미국 채권</h2>\n<p data-ke-size=\"size16\">버립니다.</p>\n<h2 data-ke-size=\"size26\">&nbsp;</h2>\n<h2 data-ke-size=\"size26\">국내증시 와 2차전지</h2>\n<p data-ke-size=\"size16\">2차전지 뿐이 아니라 국내 증시는 줄일 예정입니다.<br />2024년 내내 고통스러웠습니다.</p>\n<p data-ke-size=\"size16\">25년은 미국이 갈꺼라 안될꺼 같고</p>\n<p data-ke-size=\"size16\">26년은 짝수해라 안될꺼 같습니다.</p>\n<p data-ke-size=\"size16\">1 ~ 3월까지 짧게는 해볼 수 있지 않을까 싶습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">빅테크가 좋아보입니다.</h2>\n<p data-ke-size=\"size16\">반독점 수사가 약회될 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">다음으로 나스닥도 좋아보입니다.</h2>\n<p data-ke-size=\"size16\">빅테크가 가면 신기술에도 투자가 늘것입니다.<br />AI 투자는 증가할 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">코인도 좋아보이는데요</h2>\n<p data-ke-size=\"size16\">일론 머스크도 있고 트럼트도 코인을 좋아했습니다.<br />게리 겐슬러라는 SEC 의장이 코인 사업을 계속 방해하고 있었는데요.<br />트럼프는 취임 첫날에 짤라버린다고 했습니다.</p>\n<p data-ke-size=\"size16\">제 코인 포트폴리오는 아래와 같구요</p>\n<p data-ke-size=\"size16\">비트코인<br />리플<br />도지코인<br />베이비도지</p>\n<p data-ke-size=\"size16\">오늘도 올랐다 빠지는걸로 봐서 아직 늦지 않았습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">테슬라는 좋아보이는데 전기차는 잘 모르겠습니다.</h2>\n<p data-ke-size=\"size16\">일론 머스크의 스페이스 엑스는 트럼프가 칭천했으나 전기차에 대한 발언은 별로 없었군요<br />일론은 전기차 지원금을 줄여 경쟁자들을 망치려는 계획인걸로 알고 있습니다.</p>\n<p data-ke-size=\"size16\">전기차 제조사들이 경쟁력을 높이기위해 <br />오히려 더 많이 투자할 수도 있을지도 모른다 라는 30% 짜리 희망을 걸어야할지 의문입니다.</p>\n<p data-ke-size=\"size16\">트럼프는 또한 전기차 대신 옥수수 기름을 섞은 연료를 대안으로 생각하는군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=u5LdAu1CpqE\n\n\n\n \n우선 미국 채권\n버립니다.\n \n국내증시 와 2차전지\n2차전지 뿐이 아니라 국내 증시는 줄일 예정입니다.\n2024년 내내 고통스러웠습니다.\n25년은 미국이 갈꺼라 안될꺼 같고\n26년은 짝수해라 안될꺼 같습니다.\n1 ~ 3월까지 짧게는 해볼 수 있지 않을까 싶습니다.\n \n \n빅테크가 좋아보입니다.\n반독점 수사가 약회될 것입니다.\n \n다음으로 나스닥도 좋아보입니다.\n빅테크가 가면 신기술에도 투자가 늘것입니다.\nAI 투자는 증가할 것입니다.\n \n코인도 좋아보이는데요\n일론 머스크도 있고 트럼트도 코인을 좋아했습니다.\n게리 겐슬러라는 SEC 의장이 코인 사업을 계속 방해하고 있었는데요.\n트럼프는 취임 첫날에 짤라버린다고 했습니다.\n제 코인 포트폴리오는 아래와 같구요\n비트코인\n리플\n도지코인\n베이비도지\n오늘도 올랐다 빠지는걸로 봐서 아직 늦지 않았습니다.\n \n테슬라는 좋아보이는데 전기차는 잘 모르겠습니다.\n일론 머스크의 스페이스 엑스는 트럼프가 칭천했으나 전기차에 대한 발언은 별로 없었군요\n일론은 전기차 지원금을 줄여 경쟁자들을 망치려는 계획인걸로 알고 있습니다.\n전기차 제조사들이 경쟁력을 높이기위해 \n오히려 더 많이 투자할 수도 있을지도 모른다 라는 30% 짜리 희망을 걸어야할지 의문입니다.\n트럼프는 또한 전기차 대신 옥수수 기름을 섞은 연료를 대안으로 생각하는군요",
        "guid": "http://serverdown.tistory.com/935",
        "categories": [
          "투자"
        ],
        "isoDate": "2024-11-06T09:14:27.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "비트액스 감마 채굴기 왔습니다. / Bitaxe Gamma",
        "link": "http://serverdown.tistory.com/934",
        "pubDate": "Wed, 6 Nov 2024 13:49:47 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/934#entry934comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"983\" data-origin-height=\"431\"><span data-url=\"https://blog.kakaocdn.net/dn/NthkY/btsKxJfe8Cc/4nqLlcrnWuodc46XMl9IU1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/NthkY/btsKxJfe8Cc/4nqLlcrnWuodc46XMl9IU1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/NthkY/btsKxJfe8Cc/4nqLlcrnWuodc46XMl9IU1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FNthkY%2FbtsKxJfe8Cc%2F4nqLlcrnWuodc46XMl9IU1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"983\" data-origin-height=\"431\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">비트엑스는 오픈소스 비트코인 재굴기 입니다.</p>\n<p data-ke-size=\"size16\">개발방법이 다 공개되어있어서 전세계에서 가내수공업으로 만들어 팔고 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">가격 및 통관절차</h2>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">요약: 제품 30만원 통관세 3.7만원</span></p>\n<p data-ke-size=\"size16\">가격은 유로 250 인데 세금 포함해서 33만원 정도 들었습니다.</p>\n<p data-ke-size=\"size16\">비트로닉스에서 주문해서&nbsp;</p>\n<p data-ke-size=\"size16\">UPS 로 오게되는데 한국에 오면 카카오톡으로 어느 사이트 들어가서 정보 입력하라고 합니다.</p>\n<p data-ke-size=\"size16\">배달원이 오기전에 연락해주고 세금을 입금주소로 넣으라고 안내해주면 그대로 하면 됩니다.</p>\n<p data-ke-size=\"size16\">돈만 있으면 아주 편하게 진행되네요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">제품설명</h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"601\" data-origin-height=\"509\"><span data-url=\"https://blog.kakaocdn.net/dn/b4cAiA/btsKwNvS1DU/etPJel9qzwHbfb260xWvpK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b4cAiA/btsKwNvS1DU/etPJel9qzwHbfb260xWvpK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b4cAiA/btsKwNvS1DU/etPJel9qzwHbfb260xWvpK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb4cAiA%2FbtsKwNvS1DU%2FetPJel9qzwHbfb260xWvpK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"601\" data-origin-height=\"509\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">1. 전원선<br />PC 에 쓰는 파워선 그겁니다.</p>\n<p data-ke-size=\"size16\">2. 아답타<br />모델명: GST60A05<br />정보에 5V 6A 30W 최대<br />라고 적혀있군요 이로서 30w 쓴다는걸 알 수 있습니다.</p>\n<p data-ke-size=\"size16\">3. 본체 (아주 작습니다.)</p>\n<p data-ke-size=\"size16\">4. 스텐드 주문했는데 없어도 될뻔했습니다. 10유로 치곤 별거 없습니다.<br />다음엔 스마트폰 스텐드 쓰면 될것 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"407\" data-origin-height=\"360\"><span data-url=\"https://blog.kakaocdn.net/dn/cAOaZP/btsKxOnjfQl/C0XDVr8KwJJE4ZQmpOIfRK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cAOaZP/btsKxOnjfQl/C0XDVr8KwJJE4ZQmpOIfRK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cAOaZP/btsKxOnjfQl/C0XDVr8KwJJE4ZQmpOIfRK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcAOaZP%2FbtsKxOnjfQl%2FC0XDVr8KwJJE4ZQmpOIfRK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"407\" data-origin-height=\"360\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">하얀게 아이팟 입니다. 생각보다 매우 작네요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"554\" data-origin-height=\"405\"><span data-url=\"https://blog.kakaocdn.net/dn/cl3dWt/btsKyh3VFE3/pASCbdsYP6YhsOMpXG0DEk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cl3dWt/btsKyh3VFE3/pASCbdsYP6YhsOMpXG0DEk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cl3dWt/btsKyh3VFE3/pASCbdsYP6YhsOMpXG0DEk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fcl3dWt%2FbtsKyh3VFE3%2FpASCbdsYP6YhsOMpXG0DEk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"554\" data-origin-height=\"405\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">힘이 없어서 전원선 곶으면 옆으로 눕습니다.</p>\n<p data-ke-size=\"size16\">이래서 스텐드가 필요 없다는 뜻이였습니다.&nbsp;</p>\n<p data-ke-size=\"size16\">벽걸이 같은데 잘 걸어두는게 나을꺼 같군요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">팬도 녹투아 좋은거 주문했는데 pc 에 쓰는 큰게 들어있는줄 알았는데 에어팟 케이스 만한게 달려있군요<br />15유로&nbsp;<br />기본 쿨러는 10유로 였던가 그렇습니다.</p>\n<p data-ke-size=\"size16\">기본 쿨러 주문 해보고 다시 글 써보겠습니다.<br />나중엔 pc 쿨러 달수있도록 개조할꺼 같군요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">세팅</h2>\n<p data-ke-size=\"size16\">설정은 쉽게 끝났습니다.</p>\n<p data-ke-size=\"size16\">wifi 는 5Ghz 는 접속이 안되었고 24Ghz 느린 걸로 연결시켜서 사용중입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">솔로 풀 설정값<br />Stratum URL: public-pool.io<br /><span style=\"text-align: start;\">Stratum Port: 21496<br /><span style=\"text-align: start;\">Stratum User: bc1qc272dkew26ea46z2egmt22a3uplpzqgc7snlcs.bitaxeGammaT1 &lt;-- 제 지갑 주소, 본인껄 넣으세요<br />Stratum Password: x&nbsp;<br /></span></span></p>\n<p data-ke-size=\"size16\">unMinable 은 안됩니다. 패스</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">공동 채굴장&nbsp;</p>\n<p data-ke-size=\"size16\">가입은 여기 <a href=\"https://pool.braiins.com/mining/overview\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://pool.braiins.com/mining/overview</a></p>\n<p data-ke-size=\"size16\">가입하시면 접속주소 아이디 암호를 알려줍니다</p>\n<p data-ke-size=\"size16\">저같은경우</p>\n<p data-ke-size=\"size16\">Stratum&nbsp;URL:&nbsp;sg.stratu<a href=\"http://m.braiins.com\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">http://m.braiins.com</a><br />Stratum&nbsp;Port:&nbsp;3333<br />Stratum&nbsp;User:&nbsp;내이름.워커이름<br />Stratum&nbsp;Password:&nbsp;???????</p>\n<p data-ke-size=\"size16\">요런식 으로 나오네요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">구매 / 통관 / 세팅 글<br /><a href=\"https://serverdown.tistory.com/831\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://serverdown.tistory.com/831</a></p>\n<figure id=\"og_1730867745706\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"겨울을 대비해 비트코인 채굴기를 구해보자 / Bitaxe bitronics / 배송중\" data-og-description=\"영상: https://www.youtube.com/watch?v=4LjFLb1Ezwo겨울은 춥습니다. 채굴기를 돌려 난방을 할 수 있습니다.&nbsp;이분이 사서 해본거 같은데 저도 따라배봐야겠습니다.영상 참고하시고&nbsp;영상에서는 Bitaxe 부터 \" data-og-host=\"serverdown.tistory.com\" data-og-source-url=\"https://serverdown.tistory.com/831\" data-og-url=\"https://serverdown.tistory.com/831\" data-og-image=\"https://scrap.kakaocdn.net/dn/LK6Y4/hyXsUnT2ti/HMtrovdMcUUg0JImdjpXu1/img.png?width=381&amp;height=452&amp;face=0_0_381_452,https://scrap.kakaocdn.net/dn/17unH/hyXsRxVVOg/mmaafOQrWJy1eY3SEfpstk/img.png?width=381&amp;height=452&amp;face=0_0_381_452,https://scrap.kakaocdn.net/dn/53mW9/hyXsThLaKr/I0MU8DpAyBXSe98M7lyXwk/img.png?width=972&amp;height=532&amp;face=0_0_972_532\"><a href=\"https://serverdown.tistory.com/831\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://serverdown.tistory.com/831\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/LK6Y4/hyXsUnT2ti/HMtrovdMcUUg0JImdjpXu1/img.png?width=381&amp;height=452&amp;face=0_0_381_452,https://scrap.kakaocdn.net/dn/17unH/hyXsRxVVOg/mmaafOQrWJy1eY3SEfpstk/img.png?width=381&amp;height=452&amp;face=0_0_381_452,https://scrap.kakaocdn.net/dn/53mW9/hyXsThLaKr/I0MU8DpAyBXSe98M7lyXwk/img.png?width=972&amp;height=532&amp;face=0_0_972_532');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">겨울을 대비해 비트코인 채굴기를 구해보자 / Bitaxe bitronics / 배송중</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">영상: https://www.youtube.com/watch?v=4LjFLb1Ezwo겨울은 춥습니다. 채굴기를 돌려 난방을 할 수 있습니다.&nbsp;이분이 사서 해본거 같은데 저도 따라배봐야겠습니다.영상 참고하시고&nbsp;영상에서는 Bitaxe 부터</p>\n<p class=\"og-host\" data-ke-size=\"size16\">serverdown.tistory.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><br /><br /></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "비트엑스는 오픈소스 비트코인 재굴기 입니다.\n개발방법이 다 공개되어있어서 전세계에서 가내수공업으로 만들어 팔고 있습니다.\n \n가격 및 통관절차\n요약: 제품 30만원 통관세 3.7만원\n가격은 유로 250 인데 세금 포함해서 33만원 정도 들었습니다.\n비트로닉스에서 주문해서 \nUPS 로 오게되는데 한국에 오면 카카오톡으로 어느 사이트 들어가서 정보 입력하라고 합니다.\n배달원이 오기전에 연락해주고 세금을 입금주소로 넣으라고 안내해주면 그대로 하면 됩니다.\n돈만 있으면 아주 편하게 진행되네요\n \n \n \n제품설명\n\n\n1. 전원선\nPC 에 쓰는 파워선 그겁니다.\n2. 아답타\n모델명: GST60A05\n정보에 5V 6A 30W 최대\n라고 적혀있군요 이로서 30w 쓴다는걸 알 수 있습니다.\n3. 본체 (아주 작습니다.)\n4. 스텐드 주문했는데 없어도 될뻔했습니다. 10유로 치곤 별거 없습니다.\n다음엔 스마트폰 스텐드 쓰면 될것 같습니다.\n \n \n\n\n하얀게 아이팟 입니다. 생각보다 매우 작네요\n \n \n\n\n힘이 없어서 전원선 곶으면 옆으로 눕습니다.\n이래서 스텐드가 필요 없다는 뜻이였습니다. \n벽걸이 같은데 잘 걸어두는게 나을꺼 같군요.\n \n팬도 녹투아 좋은거 주문했는데 pc 에 쓰는 큰게 들어있는줄 알았는데 에어팟 케이스 만한게 달려있군요\n15유로 \n기본 쿨러는 10유로 였던가 그렇습니다.\n기본 쿨러 주문 해보고 다시 글 써보겠습니다.\n나중엔 pc 쿨러 달수있도록 개조할꺼 같군요.\n \n \n세팅\n설정은 쉽게 끝났습니다.\nwifi 는 5Ghz 는 접속이 안되었고 24Ghz 느린 걸로 연결시켜서 사용중입니다.\n \n솔로 풀 설정값\nStratum URL: public-pool.io\nStratum Port: 21496\nStratum User: bc1qc272dkew26ea46z2egmt22a3uplpzqgc7snlcs.bitaxeGammaT1 <-- 제 지갑 주소, 본인껄 넣으세요\nStratum Password: x \n\nunMinable 은 안됩니다. 패스\n \n공동 채굴장 \n가입은 여기 https://pool.braiins.com/mining/overview\n가입하시면 접속주소 아이디 암호를 알려줍니다\n저같은경우\nStratum URL: sg.stratuhttp://m.braiins.com\nStratum Port: 3333\nStratum User: 내이름.워커이름\nStratum Password: ???????\n요런식 으로 나오네요\n \n구매 / 통관 / 세팅 글\nhttps://serverdown.tistory.com/831\n\n \n겨울을 대비해 비트코인 채굴기를 구해보자 / Bitaxe bitronics / 배송중\n영상: https://www.youtube.com/watch?v=4LjFLb1Ezwo겨울은 춥습니다. 채굴기를 돌려 난방을 할 수 있습니다. 이분이 사서 해본거 같은데 저도 따라배봐야겠습니다.영상 참고하시고 영상에서는 Bitaxe 부터\nserverdown.tistory.com",
        "guid": "http://serverdown.tistory.com/934",
        "categories": [
          "코인"
        ],
        "isoDate": "2024-11-06T04:49:47.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "둔촌주공 23억 최고 거래가 취소되었다고 합니다.",
        "link": "http://serverdown.tistory.com/933",
        "pubDate": "Wed, 6 Nov 2024 11:29:53 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/933#entry933comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"775\" data-origin-height=\"551\"><span data-url=\"https://blog.kakaocdn.net/dn/o5afg/btsKyC0Kk64/B8WpnYY0kPfS5xEOt5wgOK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/o5afg/btsKyC0Kk64/B8WpnYY0kPfS5xEOt5wgOK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/o5afg/btsKyC0Kk64/B8WpnYY0kPfS5xEOt5wgOK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fo5afg%2FbtsKyC0Kk64%2FB8WpnYY0kPfS5xEOt5wgOK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"775\" data-origin-height=\"551\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">여기 보시면 스샷에 7월 8월 열심이 부추기던 기사인데요.</p>\n<p data-ke-size=\"size16\">둔촌주공은 재건축이 완료되어 이제 이름이 올림픽파크 포레온 로 되었군요</p>\n<p data-ke-size=\"size16\">기자들이 열심히 써주면 그 가격이 실제가격인줄알고 추격매수하게되는데 이러면 정말 위험합니다.<br /><br /></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"774\" data-origin-height=\"552\"><span data-url=\"https://blog.kakaocdn.net/dn/bcXikg/btsKzgXbnLi/RY3z0aW5JtDkbJ3XL2lnuk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bcXikg/btsKzgXbnLi/RY3z0aW5JtDkbJ3XL2lnuk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bcXikg/btsKzgXbnLi/RY3z0aW5JtDkbJ3XL2lnuk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbcXikg%2FbtsKzgXbnLi%2FRY3z0aW5JtDkbJ3XL2lnuk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"774\" data-origin-height=\"552\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이런식으로 친구가 샀다느니 살려고 했는데 못사서 아쉽다느니 하는 글을 열심히 써줍니다.</p>\n<p data-ke-size=\"size16\">또한 이들은 내려갈때도 그때 안사서 잘했다는 식으로 방향만 바꿔서 글을 쓰게 될것입니다.</p>\n<p data-ke-size=\"size16\">\"너 때문에 떠밀려서 집사샀다\" 라고 한다면 \"그건 니 문제고 나는 모르지\" 를 시전하겠지요</p>\n<p data-ke-size=\"size16\">기사에다 \"이번 계약 확정 여부는 3달 뒤에 나옵니다.\" 라고 써주기만했어도 <br />읽는 사람도 생각을 하고 지식도 얻고 중립도 지킬 수 있는데</p>\n<p data-ke-size=\"size16\">절대 안하죠. 여러분에게 부동산 시장의 규칙을 가르쳐줄 생각은 없고 \"내 기사 많이 읽어\" 가 목적이기 때문입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">미대선의 언론도 다르지 않았다.</h2>\n<p data-ke-size=\"size16\">트럼프 해리스 미대선때 언론사들을 유심히 봤는데<br />본인들이 지지하다가도 마지막에 반대 후보를 지지하는 양방향 잡기 글을 쓰는걸 보고 기겁했습니다.</p>\n<p data-ke-size=\"size16\">이때 느꼈죠. \"기자는 개뿔! 소솔가 들이네\"</p>\n<p data-ke-size=\"size16\">알아보니 마지막에 당선이 바껴서 내가 지지하던 후보가 아니게되면 <br />큰 후폭풍을 맞는다는군요. 실제로 피해를 보는 구독자가 나오게 되고 구독자도 줄게됩니다.<br />그래서 마지막엔 꼭 바꿔서 흔들어 줘야한다고 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=97wkAdmE2zs\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=97wkAdmE2zs</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=97wkAdmE2zs\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/b1QZST/hyXsWeOqPJ/QTuFlBzAzd6p7WGk7dYkm1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/bpZWxP/hyXsVNgk0L/hF4NAoODYvtvfa6dIHc3tK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"둔촌주공 신고가 결국 \" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/97wkAdmE2zs\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">제목: 둔촌주공 신고가 결국 '취소', 부채로 버텨온 집값, 최악의 공포가 엄습한다...부동산 붕괴 징조</p>\n<p data-ke-size=\"size16\">계약 취소건은 여기서 나옵니다.</p>\n<p data-ke-size=\"size16\">모르면 호구되기 딱 좋은 세상입니다. 기자는 정말 좋은 직업이군요</p>",
        "contentSnippet": "여기 보시면 스샷에 7월 8월 열심이 부추기던 기사인데요.\n둔촌주공은 재건축이 완료되어 이제 이름이 올림픽파크 포레온 로 되었군요\n기자들이 열심히 써주면 그 가격이 실제가격인줄알고 추격매수하게되는데 이러면 정말 위험합니다.\n\n\n\n이런식으로 친구가 샀다느니 살려고 했는데 못사서 아쉽다느니 하는 글을 열심히 써줍니다.\n또한 이들은 내려갈때도 그때 안사서 잘했다는 식으로 방향만 바꿔서 글을 쓰게 될것입니다.\n\"너 때문에 떠밀려서 집사샀다\" 라고 한다면 \"그건 니 문제고 나는 모르지\" 를 시전하겠지요\n기사에다 \"이번 계약 확정 여부는 3달 뒤에 나옵니다.\" 라고 써주기만했어도 \n읽는 사람도 생각을 하고 지식도 얻고 중립도 지킬 수 있는데\n절대 안하죠. 여러분에게 부동산 시장의 규칙을 가르쳐줄 생각은 없고 \"내 기사 많이 읽어\" 가 목적이기 때문입니다.\n \n미대선의 언론도 다르지 않았다.\n트럼프 해리스 미대선때 언론사들을 유심히 봤는데\n본인들이 지지하다가도 마지막에 반대 후보를 지지하는 양방향 잡기 글을 쓰는걸 보고 기겁했습니다.\n이때 느꼈죠. \"기자는 개뿔! 소솔가 들이네\"\n알아보니 마지막에 당선이 바껴서 내가 지지하던 후보가 아니게되면 \n큰 후폭풍을 맞는다는군요. 실제로 피해를 보는 구독자가 나오게 되고 구독자도 줄게됩니다.\n그래서 마지막엔 꼭 바꿔서 흔들어 줘야한다고 합니다.\n \n \n영상: https://www.youtube.com/watch?v=97wkAdmE2zs\n\n\n\n제목: 둔촌주공 신고가 결국 '취소', 부채로 버텨온 집값, 최악의 공포가 엄습한다...부동산 붕괴 징조\n계약 취소건은 여기서 나옵니다.\n모르면 호구되기 딱 좋은 세상입니다. 기자는 정말 좋은 직업이군요",
        "guid": "http://serverdown.tistory.com/933",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2024-11-06T02:29:53.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "물이 계속 생성된다. 지구 멸망 시나리오",
        "link": "http://serverdown.tistory.com/932",
        "pubDate": "Tue, 5 Nov 2024 22:31:07 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/932#entry932comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=IcTf-E6Cje8\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=IcTf-E6Cje8</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=IcTf-E6Cje8\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/eCxrE/hyXsRq0oUU/rAnKWg1eY63kLoy6U7IBU0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/EQZPZ/hyXs44Wsas/UsoriBvMkWDaOyX1hfV7t1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"새롭게 밝혀지는 지구에 많은 물이 존재하게 된 이유\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/IcTf-E6Cje8\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">영상 제목은 새롭게&nbsp;밝혀지는&nbsp;지구에&nbsp;많은&nbsp;물이&nbsp;존재하게&nbsp;된&nbsp;이유</p>\n<p data-ke-size=\"size16\">이거 입니다만 내용을 보면</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">태양 빛을 받으면 행성 내에서 물이 생겨난다고합니다.</p>\n<p data-ke-size=\"size16\">그래서 달에도 물이 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">제 생각이지만 이것은 멸망 시나리오 같습니다.</p>\n<p data-ke-size=\"size16\">물이 계속 생성된다면 오히려 물을 날려버릴 방법이 없을것 같습니다.</p>\n<p data-ke-size=\"size16\">물은 너무 무거워서 우주에다 올려서 버릴 수도 없고</p>\n<p data-ke-size=\"size16\">수증기로 만들면 이산화탄소 보다도 온난화를 더크게 일으킵니다.</p>\n<p data-ke-size=\"size16\">결국 물을 처리할 수 없어서 멸망하는 시나리오가 떠오릅니다.</p>\n<p data-ke-size=\"size16\">ㅎㅎ</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=IcTf-E6Cje8\n\n\n\n영상 제목은 새롭게 밝혀지는 지구에 많은 물이 존재하게 된 이유\n이거 입니다만 내용을 보면\n \n태양 빛을 받으면 행성 내에서 물이 생겨난다고합니다.\n그래서 달에도 물이 있습니다.\n \n제 생각이지만 이것은 멸망 시나리오 같습니다.\n물이 계속 생성된다면 오히려 물을 날려버릴 방법이 없을것 같습니다.\n물은 너무 무거워서 우주에다 올려서 버릴 수도 없고\n수증기로 만들면 이산화탄소 보다도 온난화를 더크게 일으킵니다.\n결국 물을 처리할 수 없어서 멸망하는 시나리오가 떠오릅니다.\nㅎㅎ",
        "guid": "http://serverdown.tistory.com/932",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2024-11-05T13:31:07.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "최근 발생하는 유튜브 사기 사건 주의보 / 투자 사기 / 아파트분양 사기 / 2024년 11월",
        "link": "http://serverdown.tistory.com/931",
        "pubDate": "Tue, 5 Nov 2024 20:56:45 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/931#entry931comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=t9ofdWctYMY\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=t9ofdWctYMY</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=t9ofdWctYMY\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/pqAl3/hyXs1NUcCR/LGCp30q7jpE9bKKrfszatK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/74UhL/hyXs3SvijJ/vbqLOADTfCtN9xMgbZUnKk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"&quot;언니가 알려줄게&quot; 조회수 110만&hellip;\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/t9ofdWctYMY\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">노던트러스트 맥시고 채권 사기구요</p>\n<p data-ke-size=\"size16\">백종원 사기도 있습니다.</p>\n<p data-ke-size=\"size16\">유튜브에 있는 영상들이 가짜이며 이들은 블로그나 기사도 만들어 올립니다.</p>\n<p data-ke-size=\"size16\">언론사는 돈만받고 기사 올려주기 때문에 판별능력이 없는사람이 이런것에 휘말리면 헤어나올 수가 없다고합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">점점더 직접투자를 하도록 강요되고 있군요</p>\n<p data-ke-size=\"size16\">주식 공부해서 살아남아야겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">언더스텐딩: <a href=\"https://www.youtube.com/watch?v=qF5JsOnubTY\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=qF5JsOnubTY</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=qF5JsOnubTY\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/mxKxi/hyXsPzU4Hu/4aVqvVgfR9mPKJ802hOO61/img.jpg?width=1280&amp;height=720&amp;face=536_140_664_280,https://scrap.kakaocdn.net/dn/1oZvW/hyXsPmnBJe/WhmbiKV5Jy5xY8EiDGU6O0/img.jpg?width=1280&amp;height=720&amp;face=536_140_664_280\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"요즘 이런 사기가 횡행하고 있습니다 (행복자산관리연구소 김현우 소장)\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/qF5JsOnubTY\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">아파트 사기도 있나봅니다.</p>\n<p data-ke-size=\"size16\">22분에 아파트 신종 분양사기가 있군요</p>\n<p data-ke-size=\"size16\">방법은 비슷합니다. 홈페이지 블로그 기사 등등 만들고</p>\n<p data-ke-size=\"size16\">예비입주자 모집 이라고하는데 예비 입주자는 법적 근거가 없는 영역입니다.<br />그래서 바로 잡을 순 없는 형태입니다.</p>\n<p data-ke-size=\"size16\">참고로 입주자 모집은 법적보호를 받을 수 있는 부분이라 이렇게 쓰고 모집하면 사기로 바로 잡히기 때문에 못씁니다.</p>\n<p data-ke-size=\"size16\">계약금 정도 받은 다음에 실제로 추진하지 않습니다. 천년만연 미루는 방식입니다.<br />용인에서 현재 발생중이라고 하네요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여기가 용인 어반시티 영상인가보군요</p>\n<p data-ke-size=\"size16\"><a href=\"https://www.youtube.com/watch?v=hpLSPnCgBoY\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=hpLSPnCgBoY</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=hpLSPnCgBoY\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/Txwdu/hyXsSjaDi4/LBw6knBXi83BYDVX0PkZk1/img.jpg?width=480&amp;height=360&amp;face=235_138_266_171,https://scrap.kakaocdn.net/dn/madMZ/hyXsYwTaV1/F3Fz7AR7Bap91B2K3KpdYK/img.jpg?width=480&amp;height=360&amp;face=235_138_266_171\" data-video-width=\"480\" data-video-height=\"360\" data-video-origin-width=\"480\" data-video-origin-height=\"360\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"용인시청역 어반시티 민간임대아파트 제가 정확하게 알려드립니다\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/hpLSPnCgBoY\" width=\"480\" height=\"360\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">이래서 구분이 어렵다는 거구요<br />100%&nbsp; 토지확보라는 표현을 쓰는데요 이것도 사실일 수 있습니다.</p>\n<p data-ke-size=\"size16\">잘 보고 판단할 수 가 없으니 시청에 꼭 물어봐야합니다.</p>\n<p data-ke-size=\"size16\">길가다 우연히 본 분양사무소 들어가서 계약하는 짓을 하지 말고 <br />청약홈으로 ...</p>\n<p data-ke-size=\"size16\">여러분은 구분할 방법이 없습니다.</p>\n<p data-ke-size=\"size16\"><br /><br /></p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=t9ofdWctYMY\n\n\n\n노던트러스트 맥시고 채권 사기구요\n백종원 사기도 있습니다.\n유튜브에 있는 영상들이 가짜이며 이들은 블로그나 기사도 만들어 올립니다.\n언론사는 돈만받고 기사 올려주기 때문에 판별능력이 없는사람이 이런것에 휘말리면 헤어나올 수가 없다고합니다.\n \n점점더 직접투자를 하도록 강요되고 있군요\n주식 공부해서 살아남아야겠습니다.\n \n언더스텐딩: https://www.youtube.com/watch?v=qF5JsOnubTY\n\n\n\n아파트 사기도 있나봅니다.\n22분에 아파트 신종 분양사기가 있군요\n방법은 비슷합니다. 홈페이지 블로그 기사 등등 만들고\n예비입주자 모집 이라고하는데 예비 입주자는 법적 근거가 없는 영역입니다.\n그래서 바로 잡을 순 없는 형태입니다.\n참고로 입주자 모집은 법적보호를 받을 수 있는 부분이라 이렇게 쓰고 모집하면 사기로 바로 잡히기 때문에 못씁니다.\n계약금 정도 받은 다음에 실제로 추진하지 않습니다. 천년만연 미루는 방식입니다.\n용인에서 현재 발생중이라고 하네요\n \n여기가 용인 어반시티 영상인가보군요\nhttps://www.youtube.com/watch?v=hpLSPnCgBoY\n\n\n\n이래서 구분이 어렵다는 거구요\n100%  토지확보라는 표현을 쓰는데요 이것도 사실일 수 있습니다.\n잘 보고 판단할 수 가 없으니 시청에 꼭 물어봐야합니다.\n길가다 우연히 본 분양사무소 들어가서 계약하는 짓을 하지 말고 \n청약홈으로 ...\n여러분은 구분할 방법이 없습니다.",
        "guid": "http://serverdown.tistory.com/931",
        "categories": [
          "유튜브",
          "사기"
        ],
        "isoDate": "2024-11-05T11:56:45.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "최근 크게 빠져버린 인도 주식 ETF 더 사봅니다.",
        "link": "http://serverdown.tistory.com/930",
        "pubDate": "Tue, 5 Nov 2024 16:45:00 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/930#entry930comment",
        "content": "<h2 style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size26\">인도증시 장점</h2>\n<p data-ke-size=\"size16\">1. 고 성장 국가라 옛날 중국처럼 잘 가는거 같습니다.</p>\n<p data-ke-size=\"size16\">2. 배당줍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size26\">TIGER&nbsp;인도니프티50&nbsp;/&nbsp;453870</h2>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">이거는 커버트콜 아니고 인토 주식에 투자합니다.&nbsp;<br />11년간&nbsp;상승해왔다는걸로&nbsp;계속&nbsp;가고있습니다.<br />중국 처럼 갈꺼라면 한참 더가야할듯합니다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">최근에 배당이 나와서 크게 빠진 상태입니다.<br />이럴때 사시면 됩니다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"819\" data-origin-height=\"622\"><span data-url=\"https://blog.kakaocdn.net/dn/6HHR5/btsKxOfULxk/iD9YwB0904KsXim1HTv0T0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/6HHR5/btsKxOfULxk/iD9YwB0904KsXim1HTv0T0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/6HHR5/btsKxOfULxk/iD9YwB0904KsXim1HTv0T0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F6HHR5%2FbtsKxOfULxk%2FiD9YwB0904KsXim1HTv0T0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"819\" data-origin-height=\"622\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">군데군데 보시면 푹푹 빠진게 보이시죠<br />이번에도 또 빠졌습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"447\" data-origin-height=\"172\"><span data-url=\"https://blog.kakaocdn.net/dn/T1QGk/btsKyj7N9Ik/kyUqocrfxKX0SJLcqs0Ohk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/T1QGk/btsKyj7N9Ik/kyUqocrfxKX0SJLcqs0Ohk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/T1QGk/btsKyj7N9Ik/kyUqocrfxKX0SJLcqs0Ohk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FT1QGk%2FbtsKyj7N9Ik%2FkyUqocrfxKX0SJLcqs0Ohk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"447\" data-origin-height=\"172\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">HTS 로 보니 배당락 이후 급격히 빠졌네요</p>\n<p data-ke-size=\"size16\">배당받고 나가자 움직임인거 같습니다.&nbsp;</p>\n<p data-ke-size=\"size16\">빠진뒤에 매번 잘 오르던 종목이라 사면 되지 않을가 싶습니다.</p>\n<p data-ke-size=\"size16\">오르좀 조금씩 줄여야징</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">인도도 커버드콜 있으면 좋겠다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "인도증시 장점\n1. 고 성장 국가라 옛날 중국처럼 잘 가는거 같습니다.\n2. 배당줍니다.\n \n \nTIGER 인도니프티50 / 453870\n이거는 커버트콜 아니고 인토 주식에 투자합니다. \n11년간 상승해왔다는걸로 계속 가고있습니다.\n중국 처럼 갈꺼라면 한참 더가야할듯합니다.\n최근에 배당이 나와서 크게 빠진 상태입니다.\n이럴때 사시면 됩니다.\n \n\n\n군데군데 보시면 푹푹 빠진게 보이시죠\n이번에도 또 빠졌습니다.\n \n\n\nHTS 로 보니 배당락 이후 급격히 빠졌네요\n배당받고 나가자 움직임인거 같습니다. \n빠진뒤에 매번 잘 오르던 종목이라 사면 되지 않을가 싶습니다.\n오르좀 조금씩 줄여야징\n \n인도도 커버드콜 있으면 좋겠다.",
        "guid": "http://serverdown.tistory.com/930",
        "categories": [
          "투자"
        ],
        "isoDate": "2024-11-05T07:45:00.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "국내 상장된 미국 커버드콜 상품 추천",
        "link": "http://serverdown.tistory.com/929",
        "pubDate": "Tue, 5 Nov 2024 16:32:52 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/929#entry929comment",
        "content": "<h2 data-ke-size=\"size26\">먼저 커버드콜이란?</h2>\n<p data-ke-size=\"size16\">어렵게 말하면 회사주식과 옵션거래를 섞어 추가 배당금을 만드는 방식입니다.</p>\n<p data-ke-size=\"size16\">쉽게 설명하자면 알아서 팔아서 배당으로 줍니다.</p>\n<p data-ke-size=\"size16\">배당으로 주기 때문에 오를때 좀 덜오르구요<br />반대로 떨어질대도 덜 떨어집니다. 팔아버려서 본주를 덜 가지고 있기 때문입니다.<br /><br />요약하자면 아래위로 덜 움직이는 대신 배당을 준다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">TIGER&nbsp;미국AI빅테크10타겟데일리커버드콜&nbsp;/&nbsp;493810</h2>\n<p data-ke-size=\"size16\">빅텍크를 투자하는 커버드콜 상품입니다.</p>\n<p data-ke-size=\"size16\">빅테크가 생각보다 잘 가기때문에 아래위로 잘 움직입니다.&nbsp;<br />추천하구요 AI 때문에 2025년도 빅테크는 잘 갈것으로 보입니다.</p>\n<h2 data-ke-size=\"size26\">TIGER 미국배당다우존스타겟커버드콜1호 / 458750</h2>\n<p data-ke-size=\"size16\">이거는 고배당 조목으로 배당이 더 많습니다.<br />누가 계산해보니 (23년도 중반 ~ 24년도 중반)<br />배당&nbsp;6%&nbsp; <br />주가상승&nbsp;4% <br />이정도 나왔다고 합니다.<br />미국 주식은 어쨋튼 가기 때문에 들고 버티는데 심리적으로 도움이 됩니다.<br /><br /></p>\n<h2 data-ke-size=\"size26\">&nbsp;</h2>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "먼저 커버드콜이란?\n어렵게 말하면 회사주식과 옵션거래를 섞어 추가 배당금을 만드는 방식입니다.\n쉽게 설명하자면 알아서 팔아서 배당으로 줍니다.\n배당으로 주기 때문에 오를때 좀 덜오르구요\n반대로 떨어질대도 덜 떨어집니다. 팔아버려서 본주를 덜 가지고 있기 때문입니다.\n요약하자면 아래위로 덜 움직이는 대신 배당을 준다.\n \nTIGER 미국AI빅테크10타겟데일리커버드콜 / 493810\n빅텍크를 투자하는 커버드콜 상품입니다.\n빅테크가 생각보다 잘 가기때문에 아래위로 잘 움직입니다. \n추천하구요 AI 때문에 2025년도 빅테크는 잘 갈것으로 보입니다.\nTIGER 미국배당다우존스타겟커버드콜1호 / 458750\n이거는 고배당 조목으로 배당이 더 많습니다.\n누가 계산해보니 (23년도 중반 ~ 24년도 중반)\n배당 6%  \n주가상승 4% \n이정도 나왔다고 합니다.\n미국 주식은 어쨋튼 가기 때문에 들고 버티는데 심리적으로 도움이 됩니다.",
        "guid": "http://serverdown.tistory.com/929",
        "categories": [
          "투자"
        ],
        "isoDate": "2024-11-05T07:32:52.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "티스토리 글쓰기 이벤트 시작일은 11월 7일부터 입니당",
        "link": "http://serverdown.tistory.com/928",
        "pubDate": "Tue, 5 Nov 2024 15:00:29 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/928#entry928comment",
        "content": "<p data-ke-size=\"size16\">관리 메뉴에 이벤트 버튼이 생겼습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"386\" data-origin-height=\"717\"><span data-url=\"https://blog.kakaocdn.net/dn/ddIhM1/btsKwN9KhhK/KKVGLKXl6HTg0qSXKXTpsk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ddIhM1/btsKwN9KhhK/KKVGLKXl6HTg0qSXKXTpsk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/ddIhM1/btsKwN9KhhK/KKVGLKXl6HTg0qSXKXTpsk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FddIhM1%2FbtsKwN9KhhK%2FKKVGLKXl6HTg0qSXKXTpsk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"386\" data-origin-height=\"717\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">그림의 제일 밑에 [챌린지] 라고 보이시죠</p>\n<p data-ke-size=\"size16\">이벤트페이지: <a href=\"https://www.tistory.com/event/write-challenge-2024\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.tistory.com/event/write-challenge-2024</a></p>\n<figure id=\"og_1730786295421\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"작심삼주 오블완 챌린지\" data-og-description=\"오늘 블로그 완료! 21일 동안 매일 블로그에 글 쓰고 글력을 키워보세요.\" data-og-host=\"www.tistory.com\" data-og-source-url=\"https://www.tistory.com/event/write-challenge-2024\" data-og-url=\"https://www.tistory.com/event/write-challenge-2024\" data-og-image=\"https://scrap.kakaocdn.net/dn/chAmAW/hyXs2FNIMY/dmaSgdybZ3qxPEKjA8ThnK/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/ci0S34/hyXsXEt20V/ClAGctUZ7FmlhkJQgCA0Qk/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/be6OCj/hyXsTB460l/HIp5yoAsvK9K4WywqJVCwK/img.png?width=960&amp;height=1773&amp;face=0_0_960_1773\"><a href=\"https://www.tistory.com/event/write-challenge-2024\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://www.tistory.com/event/write-challenge-2024\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/chAmAW/hyXs2FNIMY/dmaSgdybZ3qxPEKjA8ThnK/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/ci0S34/hyXsXEt20V/ClAGctUZ7FmlhkJQgCA0Qk/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/be6OCj/hyXsTB460l/HIp5yoAsvK9K4WywqJVCwK/img.png?width=960&amp;height=1773&amp;face=0_0_960_1773');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">작심삼주 오블완 챌린지</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">오늘 블로그 완료! 21일 동안 매일 블로그에 글 쓰고 글력을 키워보세요.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">www.tistory.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">딱히 신청할 필요는 없는거 같고 챌린지 페이지 열리면 도장같은걸 주나봅니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">커피 햄버거 치킨 정도가 있구요</p>\n<p data-ke-size=\"size16\">21일 완주하면&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"597\" data-origin-height=\"338\"><span data-url=\"https://blog.kakaocdn.net/dn/BKjLl/btsKw3dGqFz/fJAKp1aoy7bL2RlzwZuKBk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/BKjLl/btsKw3dGqFz/fJAKp1aoy7bL2RlzwZuKBk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/BKjLl/btsKw3dGqFz/fJAKp1aoy7bL2RlzwZuKBk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FBKjLl%2FbtsKw3dGqFz%2FfJAKp1aoy7bL2RlzwZuKBk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"597\" data-origin-height=\"338\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">저는 모니터 아니면 아이폰 주세요</p>\n<p data-ke-size=\"size16\">ㅋ</p>",
        "contentSnippet": "관리 메뉴에 이벤트 버튼이 생겼습니다.\n \n\n\n그림의 제일 밑에 [챌린지] 라고 보이시죠\n이벤트페이지: https://www.tistory.com/event/write-challenge-2024\n\n \n작심삼주 오블완 챌린지\n오늘 블로그 완료! 21일 동안 매일 블로그에 글 쓰고 글력을 키워보세요.\nwww.tistory.com\n\n딱히 신청할 필요는 없는거 같고 챌린지 페이지 열리면 도장같은걸 주나봅니다.\n \n커피 햄버거 치킨 정도가 있구요\n21일 완주하면 \n\n\n저는 모니터 아니면 아이폰 주세요\nㅋ",
        "guid": "http://serverdown.tistory.com/928",
        "categories": [
          "이벤트"
        ],
        "isoDate": "2024-11-05T06:00:29.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "2024 미대선 투표 막바지 해리스가 유리해지는 상황 / 불법입국자 투표가능 / 중국국적자도 투표가능",
        "link": "http://serverdown.tistory.com/927",
        "pubDate": "Mon, 4 Nov 2024 15:51:59 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/927#entry927comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=QhD489Xg9y4\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=QhD489Xg9y4</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=QhD489Xg9y4\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cGiK4K/hyXs0OwO7K/XbqdhkIVIWPmQ5EuQmtRrk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/paCx9/hyXs3jVZPv/pbVOzwscdy7FgHts6LivI1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"선거가 위험하다 [강미은TV 방구석외신]\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/QhD489Xg9y4\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">소문으로 있었는데 누가 실제로 해봤나봅니다.</p>\n<p data-ke-size=\"size16\">ID 를 확인하려고 하면 인종차별로 처벌받을 수 있는 법률 때문에 미국적자인지 확인이 불가능한 상황이구요</p>\n<p data-ke-size=\"size16\">이러다보니 불법이민자들이 투표를 하고 있다고 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">언론인들도 트럼프 우세 외치다 말 바꾸기 시작했네요</p>\n<p data-ke-size=\"size16\">영상의 채널이나 다른 언론사들도 마찬가지지만 본인들도 에측한 후보가 떨어지면 타격이 큽니다. <br />시청자들이 떨어져 나가게 되서요 그래서 선거 막바지엔 반대 방향 이야기를 해서 물을 좀 타야합니다.</p>\n<p data-ke-size=\"size16\">또 언론인들은 승부각 박빙이여야 시청율을 확보 할 수 있기때문에<br />이런 의도도 분명히 있습니다.</p>\n<p data-ke-size=\"size16\">일단 저는 베팅을 바꾸진 않을 것입니다.</p>\n<p data-ke-size=\"size16\">트럽프에 베팅<br />코인 + 미국주식에 배팅했습니다.</p>\n<p data-ke-size=\"size16\">해리스가 되면 2차전지가 좋다고 하더군요<br />2차전지는 가지곤 있지만 어마어마한 마이너스라 그냥 물도안타고 버티는 중입니다.</p>\n<p data-ke-size=\"size16\">그런데 중국이랑 패권 다툼하면서 중국국적자도 투표하게 하면 어저자는건지 ...<br />민주당은 중국 이랑 싸울 생각이 없는거 같기도 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=QhD489Xg9y4\n\n\n\n \n소문으로 있었는데 누가 실제로 해봤나봅니다.\nID 를 확인하려고 하면 인종차별로 처벌받을 수 있는 법률 때문에 미국적자인지 확인이 불가능한 상황이구요\n이러다보니 불법이민자들이 투표를 하고 있다고 합니다.\n \n언론인들도 트럼프 우세 외치다 말 바꾸기 시작했네요\n영상의 채널이나 다른 언론사들도 마찬가지지만 본인들도 에측한 후보가 떨어지면 타격이 큽니다. \n시청자들이 떨어져 나가게 되서요 그래서 선거 막바지엔 반대 방향 이야기를 해서 물을 좀 타야합니다.\n또 언론인들은 승부각 박빙이여야 시청율을 확보 할 수 있기때문에\n이런 의도도 분명히 있습니다.\n일단 저는 베팅을 바꾸진 않을 것입니다.\n트럽프에 베팅\n코인 + 미국주식에 배팅했습니다.\n해리스가 되면 2차전지가 좋다고 하더군요\n2차전지는 가지곤 있지만 어마어마한 마이너스라 그냥 물도안타고 버티는 중입니다.\n그런데 중국이랑 패권 다툼하면서 중국국적자도 투표하게 하면 어저자는건지 ...\n민주당은 중국 이랑 싸울 생각이 없는거 같기도 합니다.",
        "guid": "http://serverdown.tistory.com/927",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2024-11-04T06:51:59.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "2024년 11월 4일 / 빠떼리아저시 / 금투세 폐지 발언 예언 적중",
        "link": "http://serverdown.tistory.com/926",
        "pubDate": "Mon, 4 Nov 2024 14:38:49 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/926#entry926comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=cPGI4oBbhac&amp;t=7s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=cPGI4oBbhac&amp;t=7s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=cPGI4oBbhac\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/eJI5g/hyXsZviaSd/cLblC01Knj5tMrBN2F3kJk/img.jpg?width=1280&amp;height=720&amp;face=742_188_948_412,https://scrap.kakaocdn.net/dn/b8LlOa/hyXsYXs0xc/74ettisJy0brhndwOcKTWk/img.jpg?width=1280&amp;height=720&amp;face=742_188_948_412\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"지금부터 2차 전지 돈 되는 이야기할 건데 퍼트리지 마라\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/cPGI4oBbhac\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">11월 1일 금요일 밤에 촬영된 내용입니다.</p>\n<p data-ke-size=\"size16\">빠떼리아저씨는 금투세 폐지가 나올것으로 예언했고</p>\n<p data-ke-size=\"size16\">11-12일에 표결될꺼라길레 시간좀 걸리나 보다 생각했는데</p>\n<p data-ke-size=\"size16\">월요일에 날 밝고 나서 바로 폐지 발언 나왔네요 ㄷㄷㄷ</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">뉴스링크: <a href=\"https://news.kbs.co.kr/news/pc/view/view.do?ncd=8097450\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://news.kbs.co.kr/news/pc/view/view.do?ncd=8097450</a></p>\n<figure id=\"og_1730698508712\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"[속보] 이재명 &ldquo;금투세 폐지에 동의하기로&hellip;주식시장 너무 어려워&rdquo;\" data-og-description=\"더불어민주당은 오늘(4일) 내년 도입 예정이었던 금융투자소득세를 폐지하는 것으로 결론을 내렸습니다. 이...\" data-og-host=\"news.kbs.co.kr\" data-og-source-url=\"https://news.kbs.co.kr/news/pc/view/view.do?ncd=8097450\" data-og-url=\"https://news.kbs.co.kr/news/pc/view/view.do?ncd=8097450\" data-og-image=\"https://scrap.kakaocdn.net/dn/ddJqD0/hyXsQE2MoN/TWJ0yMpz5rwPtTGtp3uZj0/img.jpg?width=640&amp;height=360&amp;face=259_87_339_174,https://scrap.kakaocdn.net/dn/bvflcW/hyXsWSNpl8/odQbpdrWtM5VhsfbJA7XfK/img.jpg?width=640&amp;height=360&amp;face=259_87_339_174,https://scrap.kakaocdn.net/dn/bLQIu8/hyXsXqFi9K/P7bKJTcKZ8i5utqGAZzQ1k/img.jpg?width=1920&amp;height=1080&amp;face=864_189_1161_513\"><a href=\"https://news.kbs.co.kr/news/pc/view/view.do?ncd=8097450\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://news.kbs.co.kr/news/pc/view/view.do?ncd=8097450\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/ddJqD0/hyXsQE2MoN/TWJ0yMpz5rwPtTGtp3uZj0/img.jpg?width=640&amp;height=360&amp;face=259_87_339_174,https://scrap.kakaocdn.net/dn/bvflcW/hyXsWSNpl8/odQbpdrWtM5VhsfbJA7XfK/img.jpg?width=640&amp;height=360&amp;face=259_87_339_174,https://scrap.kakaocdn.net/dn/bLQIu8/hyXsXqFi9K/P7bKJTcKZ8i5utqGAZzQ1k/img.jpg?width=1920&amp;height=1080&amp;face=864_189_1161_513');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">[속보] 이재명 &ldquo;금투세 폐지에 동의하기로&hellip;주식시장 너무 어려워&rdquo;</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">더불어민주당은 오늘(4일) 내년 도입 예정이었던 금융투자소득세를 폐지하는 것으로 결론을 내렸습니다. 이...</p>\n<p class=\"og-host\" data-ke-size=\"size16\">news.kbs.co.kr</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이유로는 주식시장이 안좋아서 인데 금투세 나올때 마다 주식시장이 안좋아지면 영원히 막을 수 잇겠구나 싶기도...</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상에서는 에코프로비엠을 예로 들어</p>\n<p data-ke-size=\"size16\">1. 금투세 폐지 될꺼다</p>\n<p data-ke-size=\"size16\">2. 뻬따꼼플리 현상</p>\n<p data-ke-size=\"size16\">뜻은 이거라고 하네요&nbsp;<br /><span style=\"text-align: left;\">(불어)<span>&nbsp;</span></span><b>기정사실</b><span style=\"text-align: left;\">의 뜻으로 증시 용어로 '기정사실'을 의미한다. 기정사실화, 즉 투자자들이 예상 하거나 짐작 했던 일이 현실화 되는 것. 즉, 기대하고 있던 사건이 현실화되면 주가는 지금까지 움직이던 방향과 반대로 움직인다는 것을 말한다.</span> </p>\n<p data-ke-size=\"size16\"><span style=\"text-align: left;\">3. 공매도 방식 변경으로 이제 곰매도 갚아야할 타이밍<br />11월 부터 바로 적용된다네요.<br />무한연장 안되고. 최장 1년까지만 연장됨</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: left;\">4. 코스피 이전<br />내년에 있습니다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: left;\">5. 한병화 턴 했음<br />갑자기 2차전지 추천하고 있습니다.<br />트럼프가 되도 간다네요</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: left;\">이런 이유인데 언제나 그렇듯이 설득력 있습니다.</span></p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=cPGI4oBbhac&t=7s\n\n\n\n11월 1일 금요일 밤에 촬영된 내용입니다.\n빠떼리아저씨는 금투세 폐지가 나올것으로 예언했고\n11-12일에 표결될꺼라길레 시간좀 걸리나 보다 생각했는데\n월요일에 날 밝고 나서 바로 폐지 발언 나왔네요 ㄷㄷㄷ\n \n뉴스링크: https://news.kbs.co.kr/news/pc/view/view.do?ncd=8097450\n\n \n[속보] 이재명 “금투세 폐지에 동의하기로…주식시장 너무 어려워”\n더불어민주당은 오늘(4일) 내년 도입 예정이었던 금융투자소득세를 폐지하는 것으로 결론을 내렸습니다. 이...\nnews.kbs.co.kr\n\n \n이유로는 주식시장이 안좋아서 인데 금투세 나올때 마다 주식시장이 안좋아지면 영원히 막을 수 잇겠구나 싶기도...\n \n영상에서는 에코프로비엠을 예로 들어\n1. 금투세 폐지 될꺼다\n2. 뻬따꼼플리 현상\n뜻은 이거라고 하네요 \n(불어) 기정사실의 뜻으로 증시 용어로 '기정사실'을 의미한다. 기정사실화, 즉 투자자들이 예상 하거나 짐작 했던 일이 현실화 되는 것. 즉, 기대하고 있던 사건이 현실화되면 주가는 지금까지 움직이던 방향과 반대로 움직인다는 것을 말한다. \n3. 공매도 방식 변경으로 이제 곰매도 갚아야할 타이밍\n11월 부터 바로 적용된다네요.\n무한연장 안되고. 최장 1년까지만 연장됨\n4. 코스피 이전\n내년에 있습니다.\n5. 한병화 턴 했음\n갑자기 2차전지 추천하고 있습니다.\n트럼프가 되도 간다네요\n이런 이유인데 언제나 그렇듯이 설득력 있습니다.",
        "guid": "http://serverdown.tistory.com/926",
        "categories": [
          "투자"
        ],
        "isoDate": "2024-11-04T05:38:49.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": []
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": [
      {
        "title": "Android 폰에 웹서버 설치하기",
        "link": "https://hyeonseok.com/blog/925",
        "pubDate": "Sun, 03 Nov 2024 12:30:57 GMT",
        "content": "<p>철지난 스마트폰을 보면 하드웨어 성능은 나쁘지 않은데 이를 활용할 방법은 없을까 고민해 왔다. 보통은 대체제들도 가격이 워낙 싸서 그다지 유용한 경우는 많지 않았다. 라즈베리 파이 가격이 많아 올라서 작은 서버로 사용할 수 있을지 시도해 봤다.</p>\r\n\r\n<p>서버는 리눅스 계열이 익숙해서 살펴보니 하드코어하게 <a href=\"https://ubuntu-touch.io/\">폰을 다 밀고 설치하는 방법</a>도 있는데 설치할 수 있는 폰도 제한적이고 위험도도 높아 보였다. 가장 많이 사용하는 방법은 <a href=\"https://termux.dev/\">터먹스(Termux)</a> 앱을 사용하는 방법 같다. 터먹스는 \"안드로이드 터미널 에뮬레이터와 리눅스 환경 앱(Android terminal emulator and Linux environment app)\"이라고 설명이 되어 있는데 루팅 필요없이 리눅스 환경을 사용할 수 있다고 한다. 앱을 깔고 실행하면 터미널 창이 나오고 얼추 리눅스 비슷한 환경이다.</p>\r\n\r\n<p>폰에서 터미널을 계속 쓸수는 없으니 <a href=\"https://gist.github.com/mjnaderi/b933fe940cd47b09d5cfc14875e77d67\">ssh 연결 방법</a>을 참고해서 sshd를 올리고 원격으로 접속한다.</p>\r\n\r\n<pre><code>whoami # 현재 사용자 이름\r\npasswd # 비밀번호 설정\r\npkg install openssh\r\nsshd</code></pre>\r\n\r\n<p>기본 8022로 ssh가 열리고 설정한 비밀번호로 접속하면 된다. 퍼블릭키 추가하면 별도 설정없이 비밀번호 없이도 잘 연결된다.</p>\r\n\r\n<pre><code>ssh -p 8022 u0_a332@192.168.1.1</code></pre>\r\n\r\n<p>Nginx도 그냥 설치하고 실행하면 된다.</p>\r\n\r\n<pre><code>pkg install nginx\r\nnginx</code></pre>\r\n\r\n<P>설정 파일은 <code>/data/data/com.termux/files/usr/etc/nginx/nginx.conf</code>에 들어 있는데 앞부분 <code>/data/data/com.termux/files/usr</code>는 <code>$PREFIX</code>로 설정되어 있고 여기를 루트 디렉토리 처럼 생각하면 된다.</p>\r\n\r\n<pre><code>vi $PREFIX/etc/nginx/nginx.conf</code></pre>\r\n\r\n<p><code>nano</code>는 기본으로 들어 있는데 <code>vi</code>는 없어서 <code>pkg install vim</code>으로 설치해야 쓸 수 있다.</p>\r\n\r\n<p>ssh로 연결해서 사용하다 보면 계속 해서 연결이 끊기거나 지연되는데 폰이 슬립으로 들어가면 안드로이드가 프로세스를 슬립시켜서 그렇다. 안드로이드 노티피케이션에서 웨이크 락(wake-lock)을 요청해도 되고 터미널에서 코드로 활성화 할 수도 있다.</p>\r\n\r\n<pre><code>termux-wake-lock</code></pre>\r\n\r\n<p>안드로이드 버전이나 제조사에 따라서 조금씩 다른것 같은데 배터리 최적화 기능을 끄거나 터먹스를 배터리 관리 대상에서 빼거나 하는 추가 설정도 필요해 보인다. 터먹스앱이 백그라운드로 전환되지 않게 전면에 위치하도록 열어둬야 한다는 글도 찾아볼 수 있었다.</p>\r\n\r\n<p><code>crontab</code>도 사용하려면 설치하고 실행해 준다. 위의 웨이크 락이 안걸려 있으면 크론이 이상한 간격으로 작동한다든가 한꺼번에 몰아서 작동하는 현상을 볼 수 있다. <a href=\"https://healthchecks.io/\">Healthchecks.io</a> 같은 서비스로 계속해서 잘 도는지 확인해 볼 수 있다.</p>\r\n\r\n<pre><code>pkg install cronie\r\ncrond</code></pre>\r\n\r\n<p>안드로이드를 재부팅하면 터먹스를 자동으로 실행해 준다거나 <code>termux-services</code>를 통해 <code>runit</code>이나 <code>systemd</code>같이 자동으로 뜨게 관리도 가능하다. 나는 <code>top</code>에 프로세스가 늘고 복잡해지는 것이 싫어서 설치했다가 다시 지웠다. 대신 <code>.bashrc</code>에 매번 실행되게 등록해 놓고 쓰고 있다. 폰을 재부팅하면 터먹스를 한번 눌러주기만 하면 된다. 프로세스 체크하는 부분은 <a href=\"https://claude.ai/\">클로드(Claude)</a>가 만들어줬다.</p>\r\n\r\n<pre><code>termux-wake-lock\r\nexport EDITOR=\"vi\"\r\n\r\nif ! pgrep -x \"crond\" > /dev/null\r\nthen\r\n    echo \"Starting crond.\"\r\n    sudo crond\r\nelse\r\n    echo \"crond   is running.\"\r\nfi</code></pre>\r\n\r\n<p>계속 켜져 있게 하는 부분에서 처음에 약간의 삽질을 했지만 지금은 제로보드로 돌아가는 오래된 사이트를 올려뒀고 잘 작동되고 있다. 월비용을 내고 사용하는 VM 호스팅보다 훨씬 좋은 CPU/메모리 자원으로 작동하고 있다. 트래픽이 거의 없는 사이트여서 장애에 대한 부담은 없다. 공유기 IP 바뀔때 손을 봐줘야 하는데 몇 달 동안 IP가 자동으로 바뀌거나 하지는 않았다.</p>\r\n\r\n<p>충전기에 연결된 상태로 계속 두고 있어서 배터리가 좀 걱정되는데 <code>termux-battery-status</code>같은 패키지로 배터리 상태 검사도 가능하다. 기종에 따라 85%까지만 충전되게 하는 기능이 있는 경우도 있어서 설정해 두고 쓰고 있다. 집에 <a href=\"https://www.tp-link.com/kr/home-networking/smart-plug/tapo-p100/\">스마트 플러그</a>가 몇 개 있어서 정기적으로 충전기 연결을 끊어놓을 생각이다.</p>",
        "contentSnippet": "철지난 스마트폰을 보면 하드웨어 성능은 나쁘지 않은데 이를 활용할 방법은 없을까 고민해 왔다. 보통은 대체제들도 가격이 워낙 싸서 그다지 유용한 경우는 많지 않았다. 라즈베리 파이 가격이 많아 올라서 작은 서버로 사용할 수 있을지 시도해 봤다.\n\r\n\r\n서버는 리눅스 계열이 익숙해서 살펴보니 하드코어하게 폰을 다 밀고 설치하는 방법도 있는데 설치할 수 있는 폰도 제한적이고 위험도도 높아 보였다. 가장 많이 사용하는 방법은 터먹스(Termux) 앱을 사용하는 방법 같다. 터먹스는 \"안드로이드 터미널 에뮬레이터와 리눅스 환경 앱(Android terminal emulator and Linux environment app)\"이라고 설명이 되어 있는데 루팅 필요없이 리눅스 환경을 사용할 수 있다고 한다. 앱을 깔고 실행하면 터미널 창이 나오고 얼추 리눅스 비슷한 환경이다.\n\r\n\r\n폰에서 터미널을 계속 쓸수는 없으니 ssh 연결 방법을 참고해서 sshd를 올리고 원격으로 접속한다.\n\r\n\r\nwhoami # 현재 사용자 이름\r\npasswd # 비밀번호 설정\r\npkg install openssh\r\nsshd\n\r\n\r\n기본 8022로 ssh가 열리고 설정한 비밀번호로 접속하면 된다. 퍼블릭키 추가하면 별도 설정없이 비밀번호 없이도 잘 연결된다.\n\r\n\r\nssh -p 8022 u0_a332@192.168.1.1\n\r\n\r\nNginx도 그냥 설치하고 실행하면 된다.\n\r\n\r\npkg install nginx\r\nnginx\n\r\n\r\n설정 파일은 /data/data/com.termux/files/usr/etc/nginx/nginx.conf에 들어 있는데 앞부분 /data/data/com.termux/files/usr는 $PREFIX로 설정되어 있고 여기를 루트 디렉토리 처럼 생각하면 된다.\n\r\n\r\nvi $PREFIX/etc/nginx/nginx.conf\n\r\n\r\nnano는 기본으로 들어 있는데 vi는 없어서 pkg install vim으로 설치해야 쓸 수 있다.\n\r\n\r\nssh로 연결해서 사용하다 보면 계속 해서 연결이 끊기거나 지연되는데 폰이 슬립으로 들어가면 안드로이드가 프로세스를 슬립시켜서 그렇다. 안드로이드 노티피케이션에서 웨이크 락(wake-lock)을 요청해도 되고 터미널에서 코드로 활성화 할 수도 있다.\n\r\n\r\ntermux-wake-lock\n\r\n\r\n안드로이드 버전이나 제조사에 따라서 조금씩 다른것 같은데 배터리 최적화 기능을 끄거나 터먹스를 배터리 관리 대상에서 빼거나 하는 추가 설정도 필요해 보인다. 터먹스앱이 백그라운드로 전환되지 않게 전면에 위치하도록 열어둬야 한다는 글도 찾아볼 수 있었다.\n\r\n\r\ncrontab도 사용하려면 설치하고 실행해 준다. 위의 웨이크 락이 안걸려 있으면 크론이 이상한 간격으로 작동한다든가 한꺼번에 몰아서 작동하는 현상을 볼 수 있다. Healthchecks.io 같은 서비스로 계속해서 잘 도는지 확인해 볼 수 있다.\n\r\n\r\npkg install cronie\r\ncrond\n\r\n\r\n안드로이드를 재부팅하면 터먹스를 자동으로 실행해 준다거나 termux-services를 통해 runit이나 systemd같이 자동으로 뜨게 관리도 가능하다. 나는 top에 프로세스가 늘고 복잡해지는 것이 싫어서 설치했다가 다시 지웠다. 대신 .bashrc에 매번 실행되게 등록해 놓고 쓰고 있다. 폰을 재부팅하면 터먹스를 한번 눌러주기만 하면 된다. 프로세스 체크하는 부분은 클로드(Claude)가 만들어줬다.\n\r\n\r\ntermux-wake-lock\r\nexport EDITOR=\"vi\"\r\n\r\nif ! pgrep -x \"crond\" > /dev/null\r\nthen\r\n    echo \"Starting crond.\"\r\n    sudo crond\r\nelse\r\n    echo \"crond   is running.\"\r\nfi\n\r\n\r\n계속 켜져 있게 하는 부분에서 처음에 약간의 삽질을 했지만 지금은 제로보드로 돌아가는 오래된 사이트를 올려뒀고 잘 작동되고 있다. 월비용을 내고 사용하는 VM 호스팅보다 훨씬 좋은 CPU/메모리 자원으로 작동하고 있다. 트래픽이 거의 없는 사이트여서 장애에 대한 부담은 없다. 공유기 IP 바뀔때 손을 봐줘야 하는데 몇 달 동안 IP가 자동으로 바뀌거나 하지는 않았다.\n\r\n\r\n충전기에 연결된 상태로 계속 두고 있어서 배터리가 좀 걱정되는데 termux-battery-status같은 패키지로 배터리 상태 검사도 가능하다. 기종에 따라 85%까지만 충전되게 하는 기능이 있는 경우도 있어서 설정해 두고 쓰고 있다. 집에 스마트 플러그가 몇 개 있어서 정기적으로 충전기 연결을 끊어놓을 생각이다.",
        "guid": "https://hyeonseok.com/blog/925",
        "isoDate": "2024-11-03T12:30:57.000Z"
      }
    ]
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "Tech Week 2024, 사내 해커톤 Hack Day에 참여했습니다!",
        "link": "https://techblog.lycorp.co.jp/ko/tech-week-2024-hackathon-hack-day-recap",
        "pubDate": "Tue, 05 Nov 2024 03:00:00 GMT",
        "content": "안녕하세요. LINE 앨범과 공유 서비스를 개발하고 있는 Android 엔지니어 정우진, Product UX 조직에서 공통 UX를 담당하는 디자이너 정승희입니다.\n저희는 지난 9월...",
        "contentSnippet": "안녕하세요. LINE 앨범과 공유 서비스를 개발하고 있는 Android 엔지니어 정우진, Product UX 조직에서 공통 UX를 담당하는 디자이너 정승희입니다.\n저희는 지난 9월...",
        "guid": "https://techblog.lycorp.co.jp/ko/tech-week-2024-hackathon-hack-day-recap",
        "isoDate": "2024-11-05T03:00:00.000Z"
      },
      {
        "title": "Flutter 클린 아키텍처: 작은 앱부터 대규모 프로젝트까지 맞춤 설계",
        "link": "https://techblog.lycorp.co.jp/ko/flutter-clean-architecture",
        "pubDate": "Fri, 01 Nov 2024 02:00:00 GMT",
        "content": "안녕하세요. 저는 LINE+ ABC Studio에서 앱을 개발하고 있는 윤기영입니다. 최근 운영 중이던 앱의 규모가 점점 커지면서 기존 구조로는 앱을 유지 보수하거나 확장하기 어려...",
        "contentSnippet": "안녕하세요. 저는 LINE+ ABC Studio에서 앱을 개발하고 있는 윤기영입니다. 최근 운영 중이던 앱의 규모가 점점 커지면서 기존 구조로는 앱을 유지 보수하거나 확장하기 어려...",
        "guid": "https://techblog.lycorp.co.jp/ko/flutter-clean-architecture",
        "isoDate": "2024-11-01T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황의윤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "이제 안심해도 됩니다",
        "link": "https://www.thestartupbible.com/2024/11/in-good-hands.html",
        "pubDate": "Wed, 06 Nov 2024 21:23:00 +0000",
        "content:encodedSnippet": "영어에서 많이 사용하는 문장 중 “You are in good hands”라는 말이 있다. 말 그대로 믿을만한 손이 나를 잘 잡고 있으니 걱정하지 말고 안심해도 된다는 의미다. 다양한 상황에서 이 말을 하는데, 비즈니스 상황 외에 내가 가장 많이 이 말을 들었던 건 미국 영화나 드라마에서 주인공이 적진에 침투해서 인질을 구출하면서 안심시키는 장면이 아닐까 싶다. 나도 영어로 대화할 땐 이 말을 꽤 자주 사용하는데, 투자자로서 내가 우리 투자사 대표님들에게 주로 하는 말이다.\n스트롱이 첫 번째 기관 투자를 했다면, 이 스타트업의 대표에게 “우리가 한국에서 투자를 제일 잘하는 VC도 아니고, 우리한테 투자를 받으면 회사가 꼭 성공하는 것도 아니지만, 그래도 you are in good hands 입니다. 저희는 회사들이 힘들 때 뒤에서 같이 고민하고 같이 궂은일을 할 준비가 되어 있는 투자자예요.”라는 말을 자주 한다. 우리 투자사 중 80% 이상이 우리가 첫 번째 기관투자를 했으니, 대부분의 대표님들에게 이런 말을 한다고 봐도 된다.\n솔직히 한국어로 “우리랑 같이 하니까 앞으론 걱정하지 말고 안심해도 됩니다.”라고 말하는 거랑 영어로 “You are in good hands”라고 하는 거랑 느낌이나 어감이 많이 다르긴 하다. 영어로 하는 게 임팩트가 훨씬 더 크긴 한데, 어쨌든 이 말은 내가 투자자로서 창업가들에게 자주 하는 말이다.\n그런데 얼마 전에 이 반대의 상황을 경험했다. 우리가 여러 번 투자한 스타트업의 대표가 나한테 “You are in good hands.”라고 했는데, 이 말을 듣고 뭔가 기분이 묘하긴 했다. 기분이 묘했다는 게 나빴다는 건 전혀 아니고, 오히려 그 반대였다. 내가 항상 불안해하는 창업가분들에게 이 말을 하면, 이분들의 표정이 조금은 더 편해지고, 심적으로 안정감을 찾는 것 같았는데, 나도 그런 느낌이 들었다고나 할까? “아, 이 말을 들으니, 이런 기분이 드네. 좋구먼.” 뭐, 이런 생각을 했던 것 같다.\n그 회사의 자세한 상황에 대해서 여기서 말하진 않겠다. 그런데 모든 스타트업이 그렇듯이 항상 돈은 없고, 항상 사업은 불안하고, 항상 원하는 수치는 안 나오는, 그런 전형적인 초기 스타트업이 대부분 거치는 긴 어둠의 터널을 지나는 중이었다. 우리는 사업을 직접 하는 사람은 아니지만, 이런 힘든 시기를 겪고 있는 창업가들과 워낙 많이 교류하다 보니, 이들과의 대화 속에서 항상 우리의 걱정과 근심이 직간접적으로 반영된다. 그날도 이야기하면서 이런 나의 우려가 표출됐던 것 같은데, 이분이 나를 똑바로 보면서, “걱정하지 마세요. You are in good hands.”라는 말을 했다. 이 말을 듣고 정말로 얼마나 안심이 되던지, 아마도 그분은 잘 모를 것이다.\n그래서 어느 순간부터 나는 우리에게 자금을 제공해 주는 해외 LP 분들이 글로벌 경기, 한국의 경기, 북한, 스트롱의 포트폴리오, 스트롱의 어려운 상황들 등에 대해서 우려를 표시하면, “Don’t worry. You are in good hands.”라는 말을 하기 시작했다. 우리의 창업가분들이 우리에게 큰 안심을 제공하듯이, 내가 하는 이 말도 우리의 LP들에게 큰 안심을 줄 수 있길 바란다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/11/in-good-hands.html#respond",
        "content": "영어에서 많이 사용하는 문장 중 “You are in good hands”라는 말이 있다. 말 그대로 믿을만한 손이 나를 잘 잡고 있으니 걱정하지 말고 안심해도 된다는 의미다. 다양한 상황에서 이 말을 하는데, 비즈니스 상황 외에 내가 가장 많이 이 말을 들었던 건 미국 영화나 드라마에서 주인공이 적진에 침투해서 인질을 구출하면서 안심시키는 장면이 아닐까 싶다. 나도 영어로 대화할(...)",
        "contentSnippet": "영어에서 많이 사용하는 문장 중 “You are in good hands”라는 말이 있다. 말 그대로 믿을만한 손이 나를 잘 잡고 있으니 걱정하지 말고 안심해도 된다는 의미다. 다양한 상황에서 이 말을 하는데, 비즈니스 상황 외에 내가 가장 많이 이 말을 들었던 건 미국 영화나 드라마에서 주인공이 적진에 침투해서 인질을 구출하면서 안심시키는 장면이 아닐까 싶다. 나도 영어로 대화할(...)",
        "guid": "https://www.thestartupbible.com/?p=9259",
        "categories": [
          "Uncategorized",
          "B2C",
          "FoundersAtWork",
          "fundraising",
          "inspiring",
          "Strong"
        ],
        "isoDate": "2024-11-06T21:23:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "내 앞의 창업가",
        "link": "https://www.thestartupbible.com/2024/11/reflecting-myself-in-the-founder-in-the-room.html",
        "pubDate": "Sun, 03 Nov 2024 21:39:00 +0000",
        "content:encodedSnippet": "우린 지난 12년 동안 많은 회사에 투자했지만, 이 많은 포트폴리오와 같이 일하는 스트롱의 투자팀은 매우 작다. 나를 포함한 우리 투자팀의 규모는 딱 6명인데, 우리가 많이 받는 질문 중 하나가 어떻게 이렇게 작은 팀이 그렇게 많은 포트폴리오를 관리하냐 이다(실은 우리 내부에서는 “관리”라는 말보단 “지원”이라는 말을 더 많이 사용한다).\n어쨌든 우린 아주 lean 하게 일한다. 작은 팀이 엄청 많은 회사를 만나고, 현실적으로 힘들지만, 나는 욕심 같아서는 한국의 초기 스타트업을 전부 다 한 번씩은 만나보고 싶다. 요새도 우린 모두 다양한 팀을 만나고 있는데, 작은 투자팀이 많은 창업가들을 만나야 해서, 주로 첫 번째 미팅은 모두 각개전투 하고 있다. 지난 3개월 동안 나도 많은 창업가와 팀을 만났는데 이 중 어떤 창업가들과의 만남은 기억에 남아서 여기서 몇 자 적어보고 싶다.\n이 창업가가 하는 사업은 좀 뻔한 사업이었다. 아마도 웬만한 VC들은 “또 이 사업이야?”라면서 어쩌면 만나지도 않고 패스할 만한 그런 사업이었는데, 심지어 수치도 별로였다. 솔직히 나도 그냥 자료만 보고 안 만날까 하다가, 그래도 팀은 젊고 똑똑한 것 같아서 한 시간 정도는 이야기해 봐야겠다는 생각으로 만났는데, 역시 사업이라고 하기엔 제품도 없고, 수치는 전혀 없고, 전략도 특별하진 않았던 것 같다.\n하지만, 이 창업가는 정말 모든 걸 다 갈아 넣으면서 나에게 적극적으로 어필했다. 최근에 이렇게 열심히 본인의 사업을 나에게 설명했던 창업가가 있었느냐는 생각이 들 정도로. 그래서 미팅의 시작은 그냥 밋밋했지만, 이분과 이야기를 하면서 점점 더 집중하게 됐고, 점점 더 빠져들게 됐다. 이미 여러 VC들에게 거절당한 경험이 있고, 이 사업 절대로 안 된다는 절망적인 이야기를 너무 많이 들었기 때문에, 이번이 마지막 피칭이라는 생각으로 땀을 뻘뻘 흘리면서 자료를 설명하고, 내가 중간에 이것저것 물어보면 혹시나 본인이 말실수할까 긴장하면서 말도 버벅거렸다. 중간마다 내가 이분을 테스트하기 위해서 조금 재수 없거나, 불편한 질문을 던졌는데, 최대한 화를 안 내면서 논리적으로 설명하려고 하는 노력과 흔적들 또한 여기저기서 볼 수 있었다.\n내가 제품 데모를 보여달라고 하니, 이미 만들어 놓은 10개 이상의 데모 계정 중 하나를 선택해서 열심히 불완전한 제품의 데모를 보여줬다. 이때, 오래전 내가 뮤직쉐이크 하면서 VC들에게 피칭했던 그 모습이 이 창업가에게서 보였다. 그리고 마치 내가 이분에게 빙의?가 된 것처럼 몇 초 동안 2008년~2012년으로 돌아갔었다.\n우린 누구나 음악을 만들 수 있는 소프트웨어와 남이 만든 음악을 소비할 수 있는 작은 플랫폼/커뮤니티를 제공했는데, 음악 관련 사업이다 보니, VC들에게 반드시 고품질의 음악을 들려줘야 했다. 그래서 나는 투자자를 만날 때는 항상 노트북과 최신형 BOSE 휴대용 스피커를 갖고 다녔고, 방금 언급했던 창업가처럼 여러 개의 계정을 미리 파놓고, 각 계정에 다양한 시나리오를 이미 심어놓은 후에 상황에 맞춰서 제품 데모를 했다. 그런데 정말 데모 귀신이라는 게 존재하는지, 중요한 VC와 결정적인 미팅에서 멋진 데모를 보여주고 싶을 땐 매번 노트북이 버벅거리고, 중요한 기능이 작동하지 않아서, 나도 당황하고, 말도 제대로 못 하고, 땀을 뻘뻘 흘린 적이 한두 번이 아니었다.\n최근 했던 몇 미팅에서 만난 창업가들을 보면서 이런 오래전의 내 모습이 떠올랐고, 그때의 절박했던 상황과 생각들이 주마등같이 스쳐 지나갔다. 당시에 나는 꼭 투자받고 싶었던 VC가 몇 군데 있었는데, 결국 이들 그 누구에게도 투자를 못 받았다. 당시 나는 창업가의 위치에서 속으로는 “제발 이 투자자는 나 같은 보석을 알아보고, 우리 사업의 가능성을 알아봐 줬으면 너무너무 좋겠다.”라는 절박한 마음으로 열심히, 최선을 다해서, 미친놈처럼 피칭했었는데, 그걸 바로 내 앞의 창업가가 나한테 하고 있었던 것이다.\n내 앞의 창업가에게 우리가 투자할지 안 할지 잘 모르겠지만, 이런 생각을 하면 언제나 마음을 열어두고, 가능성을 열어두고 싶다. 이분의 사업이 아무리 봐도 망할 것 같아도, 이 창업가의 한 시간이 헛되지 않게 최선을 다해서 듣고, 보고, 물어보고, 공부해야겠다는 다짐을 다시 했다. 이 창업가의 눈에서 보이는 절박감과 초롱초롱함은 내가 오래전에 VC들에게 피칭할 때 수없이 어필하고 강조했지만, 그들이 무시하고 놓친 중요한 것들이니까.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/11/reflecting-myself-in-the-founder-in-the-room.html#comments",
        "content": "우린 지난 12년 동안 많은 회사에 투자했지만, 이 많은 포트폴리오와 같이 일하는 스트롱의 투자팀은 매우 작다. 나를 포함한 우리 투자팀의 규모는 딱 6명인데, 우리가 많이 받는 질문 중 하나가 어떻게 이렇게 작은 팀이 그렇게 많은 포트폴리오를 관리하냐 이다(실은 우리 내부에서는 “관리”라는 말보단 “지원”이라는 말을 더 많이 사용한다). 어쨌든 우린 아주 lean 하게 일한다. 작은 팀이(...)",
        "contentSnippet": "우린 지난 12년 동안 많은 회사에 투자했지만, 이 많은 포트폴리오와 같이 일하는 스트롱의 투자팀은 매우 작다. 나를 포함한 우리 투자팀의 규모는 딱 6명인데, 우리가 많이 받는 질문 중 하나가 어떻게 이렇게 작은 팀이 그렇게 많은 포트폴리오를 관리하냐 이다(실은 우리 내부에서는 “관리”라는 말보단 “지원”이라는 말을 더 많이 사용한다). 어쨌든 우린 아주 lean 하게 일한다. 작은 팀이(...)",
        "guid": "https://www.thestartupbible.com/?p=9257",
        "categories": [
          "Uncategorized",
          "failure",
          "FoundersAtWork",
          "fundraising",
          "media",
          "musicshake",
          "Strong",
          "vc"
        ],
        "isoDate": "2024-11-03T21:39:00.000Z"
      }
    ]
  },
  {
    "name": "Build a Great Product",
    "category": "개인",
    "posts": []
  },
  {
    "name": "지금 써보러 갑니다",
    "category": "개인",
    "posts": []
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "쿠팡 엔지니어링",
    "category": "기업",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "리멤버 (드라마 앤 컴퍼니)",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "토스플레이스, 2024 서울 카페쇼 참가",
        "link": "https://blog.toss.im/article/tossplace-cafeshow",
        "pubDate": "Wed, 06 Nov 2024 23:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}아시아 최대 규모 커피 박람회 참가… 매장 운영 효율 높이는 솔루션 대거 소개\n토스플레이스 전시관, 개막 첫 날 6일 관람객 1천3백여 명 방문\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n비바리퍼블리카(토스)의 결제 단말기 제조 및 결제 솔루션 공급 자회사 토스플레이스(대표 최재호)가 이달 6일부터 9일까지 나흘간 서울 코엑스에서 열리는 ‘2024 서울 카페쇼’에 참가해 전용 전시관을 운영한다고 7일 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n서울 카페쇼 개막 첫 날인 6일 토스플레이스 전시관을 방문한 관람객은 1천3백여 명으로 집계됐다. 전시 주제는 '요즘 카페, 요즘 결제. 토스 단말기'다. 토스 단말기는 심미성을 고려한 콤팩트한 디자인과 직관적인 인터페이스를 적용하고 신용카드부터 삼성·애플페이, QR 간편결제까지 모든 결제 방식과 ‘키오스크 모드’ 등 다양한 부가서비스를 지원해 카페와 베이커리 업종에서 특히 수요가 높다.\n전시관은 자영업자가 토스 단말기를 활용해 매장 운영 효율을 높일 수 있는 솔루션을 체험하는 ‘체험존’과 단말기 설치 전문 상담을 받을 수 있는 ‘상담존’으로 구성됐다. 선보이는 솔루션은 ▲인건비 줄여주는 ‘키오스크 모드’ ▲모바일로 미리 주문하는 ‘픽업주문’ ▲첫 방문 고객도 단골로 만드는 ‘포인트’ 적립과 ‘스탬프’ 기능이 대표적이다.\n결제 체험을 하면 타포린백, 커피 드립백, 생수 등 굿즈를 제공하는 현장 이벤트도 운영한다. 이 이벤트는 토스플레이스 전시관을 방문하는 관람객 누구나 참여할 수 있다.\n토스플레이스 관계자는 “결제는 매장 매출과 직결되는 핵심적인 부분이자 고객의 이용 경험을 완성 시키는 중요한 단계\"라며 “편리한 결제 뿐 아니라 카페와 베이커리 업종에 맞는 다양한 솔루션도 지속 선보여 자영업자의 성공을 지원하겠다”고 말했다.\n한편 올해 23회째를 맞이한 서울 카페쇼는 글로벌 커피 비즈니스 플랫폼으로 거듭난 아시아 최대 규모 커피 박람회다. 이번 서울 카페쇼는 전 세계 36개국에서 681개 업체, 3천891개 브랜드가 참여해 역대 최대 규모로 조성됐다.",
        "content": "‘요즘 카페, 요즘 결제. 토스 단말기’로 코엑스에서 전시 선보여",
        "contentSnippet": "‘요즘 카페, 요즘 결제. 토스 단말기’로 코엑스에서 전시 선보여",
        "guid": "https://blog.toss.im/article/tossplace-cafeshow",
        "isoDate": "2024-11-06T23:00:00.000Z"
      },
      {
        "title": "토스, BNK경남은행과 업무협약…사회초년생 신용대출 상품 출시",
        "link": "https://blog.toss.im/article/tossbnk",
        "pubDate": "Wed, 06 Nov 2024 05:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}6일 토스 본사서 협약 체결…씬파일러를 위한 신용대출 상품 출시\n‘비대면 대출 신청 절차' 개선으로 별도 앱 설치 필요 없이 편리하게 이용 가능\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n모바일 금융 서비스 ‘토스’를 운영하는 비바리퍼블리카(이하 ‘토스’)가 BNK경남은행과 사회초년생 신용대출 상품 출시를 위한 업무협약을 체결했다고 6일 밝혔다.\n협약식은 6일 서울 강남구 역삼동 토스 본사에서 진행되었으며, 토스 이승건 대표와 BNK경남은행 예경탁 은행장 등 양사 주요 관계자들이 참석했다. 이번 협약으로 양사는 새로운 대출 상품 출시에 이어 다양한 영역에서 비즈니스 파트너로서 상호 협력할 계획이다.\n‘사회초년생을 위한 신용대출’ 상품을 위해 토스는 대안평가정보인 토스스코어를 제공하고, BNK경남 은행은 대출 재원을 마련한다. 또한, ‘비대면 대출 신청 절차’를 개선해 추가 앱 설치나 별도 회원가입 없이 바로 대출 신청을 할 수 있는 편의성을 제공한다.\n향후 토스와 BNK경남은행은 대출 대상자를 개인사업자와 전문직군 등으로 확대하고, 건전한 대출 모집 환경 조성을 위한 주택담보대출 모집인 비교 서비스도 출시할 계획이다.\n토스 이승건 대표는 “누구에게나 편리하고 평등한 금융을 만든다는 미션을 가진 토스와 상생 금융을 지향하는 BNK경남은행이 만나 협력한다는 점에서 의미가 깊다”며 “이번 협약으로 사회초년생뿐만 아니라 더 다양한 금융 소비자 계층을 위한 사업을 펼칠 수 있을 것으로 기대한다”고 말했다.\nBNK경남은행 예경탁 은행장은 “디지털금융을 강화하기 위해 국내 유일 글로벌 100대 유니콘 기업인 토스와 전략적 사업제휴 협약을 맺고 협력하게 됐다”며 “BNK경남은행과 토스가 갖고 있는 디지털 기술을 잘 활용한다면 고객들에게 편리한 금융 서비스를 손쉽게 제공할 것으로 기대한다”고 말했다.",
        "content": "11월 6일 토스가 BNK경남은행과 신용대출 상품 출시 업무협약을 체결했어요. ",
        "contentSnippet": "11월 6일 토스가 BNK경남은행과 신용대출 상품 출시 업무협약을 체결했어요.",
        "guid": "https://blog.toss.im/article/tossbnk",
        "isoDate": "2024-11-06T05:00:00.000Z"
      },
      {
        "title": "토스플레이스, 최재호 신임 대표 취임",
        "link": "https://blog.toss.im/article/tossplace--",
        "pubDate": "Mon, 04 Nov 2024 01:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}토스플레이스, 4일 이사회 열고 최재호 신임 대표이사 선임\n최재호 대표, “토스 단말기 보급 2년간 10배 확대 목표… 대한민국 결제 시장 이끌 것”\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n비바리퍼블리카(이하 토스)의 결제 단말기 제조 및 결제 솔루션 공급 자회사 토스플레이스가 4일 오전 이사회를 열고 최재호 신임 대표이사를 선임했다고 밝혔다. 최재호 신임 대표는 오늘부터 토스플레이스 대표이사직을 수행하며 임기는 2년이다.\n최재호 대표는 결제 비즈니스 전문가로 IBM, 현대카드 등을 거쳐 2020년 토스에 TPO(Technical Product Owner)로 합류했다. 토스에서 마이데이터 사업을 총괄해 성공적으로 오픈했고, 최근까지 토스페이 사업 총괄 부사장으로 재직하며 토스페이 거래액과 이용고객 수를 2년 간 3배 성장시키는 성과를 거뒀다.\n최재호 대표는 \"토스플레이스 단말기 보급을 앞으로 2년간 현재보다 10배 확대하겠다\"며 \"이를 통해 토스플레이스가 대한민국 결제 시장을 혁신하고 주도하는데 앞장설 것\"이라고 포부를 밝혔다.\n한편 토스플레이스는 토스가 오프라인 매장 혁신에 도전하기 위해 만든 계열사다. 신용카드 등장 이후로 수십년간 정체돼 있던 오프라인 결제 및 가맹점 사업 시장을 디지털화하는 한편, 공급자 위주였던 시장 환경을 소비자 위주 환경으로 변화시키는 것을 목표로 하고 있다.\n토스플레이스 가맹점 수는 토스 단말기 출시 1년 8개월 만인 10월 기준 6만5천개를 돌파했다. 결제 단말기 시장에서 유례가 없는 빠른 속도다. 신규 가맹점 모집 시장에서의 점유율은 20% 이상이다. \n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}.css-wgpbp3{display:block;margin-top:6px;}.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}최재호 토스플레이스 신임 대표",
        "content": "토스 단말기 보급 2년간 10배 확대 목표… 대한민국 결제 시장 이끌 것",
        "contentSnippet": "토스 단말기 보급 2년간 10배 확대 목표… 대한민국 결제 시장 이끌 것",
        "guid": "https://blog.toss.im/article/tossplace--",
        "isoDate": "2024-11-04T01:00:00.000Z"
      },
      {
        "title": "탄소중립포인트, 앱으로 쉽게 적립하는 법: 카본페이",
        "link": "https://blog.toss.im/article/money-policies-29",
        "pubDate": "Fri, 01 Nov 2024 04:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}탄소중립포인트를 적립할 수 있는 모바일 앱 ‘카본페이(Carbon Pay)'가 9월 30일 출시됐습니다. 탄소중립포인트는 친환경 활동을 하면 포인트를 적립해 주는 제도예요.\n이전에는 탄소중립포인트 웹사이트에 가입하고, 참여매장이나 기업 앱에도 별도의 회원가입을 해야 했는데요. .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}앱을 통해 탄소중립포인트 회원가입을 해두면 이후 매장에선 앱을 실행해 QR코드만 제시하면 간편하게 포인트를 적립할 수 있어요. \n간편로그인 방식으로 접속도 쉽고 내가 적립한 포인트도 바로 조회할 수 있습니다.  연간 포인트 적립 한도는 7만 원이에요. 현금이나 참여기업·카드사의 포인트로 받아 쓸 수 있어요.\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n🌱 탄소중립포인트 받을 수 있는 친환경 활동\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n세제/화장품 살 때 빈 통을 가져가서 리필해오기: 2,000원/회\n배달앱에서 다회용기 사용을 선택하여 음식 주문하기: 1,000원/개\n차량 공유업체에서 무공해차(전기차, 수소차) 대여하기: 100원/km\n그린카드로 친환경제품을 구매하거나, 결제수단에 관계없이 참여매장에서 친환경제품 구매하기: 1,000원/건\n배달앱 및 커피전문점 등에서 텀블러 이용 등 일회용품 줄이기: 300원/개\n일회용컵 보증금제 참여매장에서 일회용컵 이용 후 반환하기: 200원/개\n재활용 가치가 높은 고품질 재활용품 배출하기: 100원/kg\n폐휴대폰을 버리지 않고 반납하기: 1,000원/개\n\n\n\n카본페이 앱을 이용하면, 참여매장도 쉽게 찾아볼 수 있어요. 사용자 위치기반 기술을 통해 내가 있는 곳 주변의 참여매장을 검색할 수 있어요. 길찾기 기능까지 있어서 어렵지 않게 포인트를 적립할 수 있는 매장을 찾을 수 있습니다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}Edit 이지영 Graphic 조수희",
        "content": "최초 가입하면 실천다짐금 5,000원 받을 수 있어요.",
        "contentSnippet": "최초 가입하면 실천다짐금 5,000원 받을 수 있어요.",
        "guid": "https://blog.toss.im/article/money-policies-29",
        "isoDate": "2024-11-01T04:00:00.000Z"
      },
      {
        "title": "생애주기가설로 알아보는 노후 대비, 당신은 충분히 준비됐나요?",
        "link": "https://blog.toss.im/article/economic-terms-34-life-cycle-hyphothesis",
        "pubDate": "Thu, 31 Oct 2024 02:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-8atqhb{width:100%;}.css-1c1qox8{font-size:30px;letter-spacing:0em;line-height:1.55;font-weight:bold;color:var(--adaptiveGrey900);margin:40px 0 4px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-p4abj2{display:contents;line-height:1.55;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}🔖 이번 주 경제 용어\n생애주기가설\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}이번 주 경제 용어는 노후에 잘 살기 위해 필요한 정보예요.\n\n.css-1pgssrp{max-width:100%;border-radius:16px;}\n현재 소비는 현재 소득뿐 아니라 평생 소득을 고려해 결정해야 한다고 주장하는 가설이에요.\n\n\n여러분은 한 달 월급에서 얼마나 저축하세요? 최소 50%는 저축해야 나중에 잘 살 수 있다고 하지만, 그게 쉽지만은 않죠.\n그래도 미래의 나를 위해 현재의 소비를 줄이고 자금을 모아 불리려는 노력을 하는 분들이 많을 것입니다. 10년, 20년 뒤의 내 소득이 지금과 같거나 비슷할거라 보장할 수 없고, 나이가 들수록 일자리를 얻는 것이 쉽지 않기 때문에 소득은 지금보다 줄어들 가능성이 크기 때문이에요.\n많은 사람들이 젊을 때 돈을 아껴서 저축하고, 나이가 들어 소득이 줄어들면 그동안 모은 자산을 꺼내 쓰며 소비를 유지하려고 합니다. 이렇게 하면 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}노후에 소득이 줄어도 인생 전체에서 소비 수준을 일정하게 유지할 수 있기 때문입니다.\n이처럼 현재 소비하는 기준이 현재 소득만 고려하는 것이 아니라, 평생의 소득을 염두하여 결정해야 한다는 이론을 ‘생애주기가설’이라고 합니다. 이 이론은 이탈리아 경제학자 프랑코 모딜리아니(Franco Modigliani)가 1950년대에 제안한 것인데요. 1980년대에 접어들며 은퇴 설계의 중요한 이론으로 자리 잡았습니다.\n생애주기가설에 따라 각 생애주기 별 금융생활을 어떻게 설계하면 좋을지 예시를 들어드릴게요.\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}\n① 유아기: 아동수당 적금 상품 가입, 백일·돌 선물로 받는 금 모아두기\n② 아동, 청소년기: 예금·주식·채권 등 금융 상품 공부, 용돈 관리를 위한 용돈기입장 작성하기\n③ 20대: 월급의 50% 저축, 세금 혜택 있는 금융 상품 가입하기\n④ 30대: 개인 연금 가입, 주택 마련 준비\n⑤ 40대: 대출 상환, 양육·노후 등 목적별 자산 분리\n⑥ 50대: 은퇴 설계, 중위험·중수익 투자로 전환\n⑦ 60대 이상: 현금흐름 관리\n\n이 예시가 반드시 따라야 하는 정답은 아니지만, 어느 정도 발맞춰 따라간다면 노후에 소득이 부족해 허덕이는 일을 미리미리 예방할 수 있을 겁니다. 지금 이 아티클을 확인했을 때가 가장 빠른 때라 생각하고, 바로 시작할 수 있는 것은 무엇일지 생각해보고 실천에 옮겨보시길 추천드립니다.\n\n\n.css-2yhypk{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);font-style:italic;-webkit-text-decoration:underline!important;text-decoration:underline!important;}\"'장수의 축복' 누리려면…어릴때부터 재테크 공부해야\n(연합뉴스 2024.9.30)\n경제학자 프랑코 모딜리아니는 이러한 문제를 예견한 듯 생애 주기 가설(Life-Cycle Hypothesis)을 제시했습니다. 그는 사람들이 생애 전반에 걸쳐 소득의 변화를 감안해 소비와 저축을 조율한다고 설명했으며, 이 이론으로 1985년 노벨 경제학상을 수상했습니다.\n이 가설에 따르면 사람들은 경제활동을 활발히 하는 청·장년기에는 저축을 하고, 노년기에는 그 저축을 사용해야 합니다. 그러나 오늘날 한국 사회에서 경제활동 인구의 사회 진출은 늦어지고, 은퇴는 앞당겨졌지만, 수명은 길어졌습니다. 즉 소득이 높은 경제활동 기간은 짧아지고, 소득이 낮은 노년기는 더 길어진 셈입니다.\n모딜리아니의 이론에 따르면 지금의 청·장년 세대는 부모 세대보다 더 높은 저축률을 유지해야 합니다. 하지만 현실은 그렇지 않습니다. 저축률보다 가계부채가 더 빠르게 증가하고 있기 때문입니다. 국민연금과 국민건강보험 등 사회적 안전망이 저출산과 고령화로 인해 한계에 부딪히고 있다는 사실을 많은 사람이 인식하고 있음에도 실제 노후 준비에는 반영되지 않고 있습니다. 이는 노후 대비가 더욱 복잡하고, 개인적인 차원의 준비가 중요해졌음을 시사합니다.\n과거 장수(長壽)는 축복으로 여겨졌습니다. 돌잔치에서 아이가 돌잡이 상에서 장수의 상징인 '실'을 잡으면 모두가 기뻐했고, 장수한 노인은 마을의 자랑이 되곤 했습니다. 하지만 이제는 장수가 축복만은 아닙니다. 생명보험 업계에서는 질병, 사고와 더불어 '장수 리스크'라는 새로운 개념이 등장했습니다.\n사람들은 장수로 인해 더 오랜 시간 동안 경제적·사회적 지원이 필요하게 되었고, 이는 노후 준비를 더욱 복잡하게 만들었습니다. 앞으로는 더 많은 사람이 이 '장수 리스크'를 직시하고 준비해야 합니다. 부모 세대의 노후 준비 방식을 그대로 답습하는 것이 아니라, 자신의 수명과 경제적 상황을 고려한 맞춤형 준비가 필요합니다. 장수는 여전히 축복일 수 있지만, 그것을 어떻게 준비하느냐에 따라 그 축복은 달라질 것입니다.(중략)\n\n\n노후 준비의 중요성은 누구나 공감하는 바지만, 여전히 많은 사람들이 적절한 대비를 하지는 못하고 있습니다. 사회 진출 시기가 늦어지고 은퇴 시기는 빨라지면서 경제활동 기간은 점점 짧아지고 있기 때문인데요. 더군다나 평균 수명까지 늘어나면서 소득이 없는 노년기가 점차 길어지고 있습니다.\n이런 상황 속에서 많은 이들이 짧은 경제활동 기간 동안 벌어들인 소득만으로 길어진 노후를 대비하는 데에 여전히 부족함을 느끼고 있어요. 은퇴 후 살아야 할 시간이 늘어났지만, 충분한 저축을 하지 못한 채로 은퇴를 맞이한 많은 사람들이 노후 빈곤에 허덕이고 있습니다.\n이렇게 오래 살게 될 것이라는 불확실성은 ‘장수 리스크'라는 새로운 경제적 고민을 동반하게 합니다. 젊을 때 소비를 줄이고 저축을 늘리게 만들고요. 그러나 저축만 하는 것은 근본적인 해결책이 되기 어렵습니다. 본인에게 맞는 자산 불리는 방법을 반드시 찾아내어, 각자의 상황에 맞는 맞춤형 노후 준비를 철저히 해야 합니다.\n우선 국민연금만으로는 충분하지 않기 때문에, .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}퇴직연금 등 다양한 방법으로 소득을 보충해야 합니다. 특히 저금리 시대에는 저축만으로는 충분한 노후 자금을 마련하기 어렵기 때문에, 투자를 통한 자산 증식도 필수적입니다. 최근에는 인컴 자산, 임대 수입, 배당주 투자를 통해 은퇴 후에도 소득원을 만드는 방법도 다양해지고 있으니까요, 내게 맞는 방법을 찾아 반드시 ‘실행’하는 게 가장 중요합니다.\n길어진 노후를 대비해 다양한 소득원을 확보하고, 더 이상 은퇴 이후 삶이 불안하지 않도록 미리 젊을 때부터 준비가 절실합니다. 그래야 장수가 다시금 축복으로 여겨질 수 있을 테니까요.\n\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n장수 리스크: 사람들이 더 오래 살게 되면서 노후 자금이 부족해질 위험을 의미. 예상보다 긴 수명으로 인해 경제적 준비가 충분하지 않다면 은퇴 후 빈곤층으로 떨어질 수 있어요.\n사회적 안전망: 국민연금, 국민건강보험 등 정부가 제공하는 제도. 국민의 노후와 건강을 지원하는 제도이기는 하나, 고령화와 저출산의 영향으로 사회적 안전망의 지속 가능성에 대한 우려가 심각해요.\n개인연금: 국민연금 외에 개인이 추가적으로 가입하는 연금 상품. 노후 자금을 더 탄탄히 준비하기 위해 꼭 필요한 수단이에요. 특히 길어진 노후를 대비하기 위해 개인연금의 역할이 점점 더 중요해지고 있어서, 정부에서도 세제 혜택을 강화하는 중입니다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 금혜원 Graphic 조수희 이동건",
        "content": "오늘 세운 계획이 노후를 바꿉니다, 지금 점검해보세요.",
        "contentSnippet": "오늘 세운 계획이 노후를 바꿉니다, 지금 점검해보세요.",
        "guid": "https://blog.toss.im/article/economic-terms-34-life-cycle-hyphothesis",
        "isoDate": "2024-10-31T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]