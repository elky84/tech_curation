[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Sinem Akinci",
        "title": "Document build instructions and more with enhanced C++ awareness from Copilot Chat in Visual Studio",
        "link": "https://devblogs.microsoft.com/cppblog/document-build-instructions-and-more-with-enhanced-c-awareness-from-copilot-chat-in-visual-studio/",
        "pubDate": "Thu, 30 Jan 2025 15:48:47 +0000",
        "content:encodedSnippet": "C++ development often involves nuances beyond the file you’re developing in. This can leave developers with many mental tabs open, balancing all the relevant context for their project to develop their C++ code properly.\nCopilot Chat in Visual Studio can already utilize context provided by specified files and invoked agents such as @workspace to generate suggestions. However, to improve the relevance of Copilot suggestions, we must provide tailored context to Copilot with considerations specific to the C++ language for developers to achieve better results. That way, developers can focus less on providing all the information necessary for their questions and focus more on the task at hand.\nVisual Studio can now provide Copilot Chat with various levels of C++ project context. These updates are designed to help C++ developers incorporate more relevant suggestions into their code, faster than ever.\nTo showcase Copilot’s increased awareness of C++, we will walk through 3 sample C++ workflows where Chat can provide assistance:\nImproving documentation for build instructions\nGenerating new tests\nModernizing C++ code\nUpgrade to the latest version of Visual Studio 2022 and try out GitHub Copilot (now with plans available for free) to access these updates for C++.\nDocumenting Build Instructions\nC++ projects can sometimes require developers to undergo several steps to be able to configure a project for development before they are even able to begin coding. Due to these requirements, it is important to document relevant instructions for onboarding developers thoroughly.\nWe asked Copilot Chat to improve documentation in the open-source project Endless Sky’s README. Copilot was able to include relevant context, such as dependencies like Ninja, to enhance Chat suggestions for improving documentation specific to this project’s needs, minimizing manual toil to onboard developers onto a project.\n\nGenerating Additional Tests\nWriting unit tests for C++ can be cumbersome and painstaking. With the /tests command, Copilot can assist with generating unit tests for the selected code. Copilot now has awareness of the available testing structure found in your project, so that when you invoke /tests to generate tests in your projects, friction is minimal for integrating the generated tests that fit in with your existing ones.\nFor example, when we prompted to generate new unit tests for the Step method in the Weather.cpp file in endless-sky using the /tests command, Copilot generated new tests that resemble the existing tests in the project:\n\nWhen compared to existing test code, like test_ship.cpp, the Chat response includes the same relevant header files and test case structure like using SCENARIO and GIVEN for test cases.\n\nRefactoring C++ code for modernization\nMaintainability of C++ code can be difficult as C++ coding conventions evolve over the years. C++ developers often need to refactor legacy code to improve code clarity and maintainability over time.\nNow, when asking Copilot questions related to C++ development such as refactoring code,  Copilot has the awareness to not only provide suggestions that are relevant to your selected code, but also suggestions that are compliant with your project’s configurations and standards.\nLet’s take a look at an example, using some loop code that finds the greatest even element in a given container below. It can be useful to update C++ raw loop code to utilize algorithms instead for a myriad of reasons, including improving code readability and minimizing errors\n\nWhen initially asked to refactor the code to incorporate algorithms or ranges using older C++/CMake versions, Copilot suggests using std::max_element to improve the code to be more concise instead of requiring a manual loop.\n\nAfter updating the standard of the project to the latest standard of C++23, Copilot responses now include newer C++ features that can be relevant to the question, such as std::ranges, to improve the code.\n\nWhat do you think?\nTry out the latest Chat improvements for your C++ workflows today. To access these updates to Copilot, you’ll need an active GitHub Copilot subscription and the latest version of Visual Studio.\nIn addition, our team is working hard on improving C++ integrations with Copilot, so please let us know any other enhancements you’d like to see to your C++ workflows and content you’d like to see. Comment below, or you can find us via email at visualcpp@microsoft.com or via X at @VisualC.\n \n \n \nThe post Document build instructions and more with enhanced C++ awareness from Copilot Chat in Visual Studio appeared first on C++ Team Blog.",
        "dc:creator": "Sinem Akinci",
        "comments": "https://devblogs.microsoft.com/cppblog/document-build-instructions-and-more-with-enhanced-c-awareness-from-copilot-chat-in-visual-studio/#comments",
        "content": "<p>C++ development often involves nuances beyond the file you’re developing in. This can leave developers with many mental tabs open, balancing all the relevant context for their project to develop their C++ code properly. Copilot Chat in Visual Studio can already utilize context provided by specified files and invoked agents such as @workspace to generate [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/document-build-instructions-and-more-with-enhanced-c-awareness-from-copilot-chat-in-visual-studio/\">Document build instructions and more with enhanced C++ awareness from Copilot Chat in Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "C++ development often involves nuances beyond the file you’re developing in. This can leave developers with many mental tabs open, balancing all the relevant context for their project to develop their C++ code properly. Copilot Chat in Visual Studio can already utilize context provided by specified files and invoked agents such as @workspace to generate […]\nThe post Document build instructions and more with enhanced C++ awareness from Copilot Chat in Visual Studio appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=35053",
        "categories": [
          "C++",
          "CMake",
          "Copilot"
        ],
        "isoDate": "2025-01-30T15:48:47.000Z"
      }
    ]
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Netflix TechBlog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Elena Kerpeleva",
        "title": "Busy Plugin Developers Newsletter – Q4 2024",
        "link": "https://blog.jetbrains.com/platform/2025/01/busy-plugin-developers-newsletter-q4-2024/",
        "pubDate": "Fri, 31 Jan 2025 11:54:42 +0000",
        "content:encodedSnippet": "⭐️ Marketplace updates\nGranular plugin feedback\nIn addition to the general star rating of plugins, we’re introducing detailed ratings for more granular feedback. Users can now rate plugins across five categories:\nIntegration with IDE\nPerformance\nAvailable Features\nUser Interface\nDocumentation Quality\nAggregated ratings are shown in the Reviews tab. Find more details in our documentation. \n\n\n\n\nPerpetual licenses for paid plugins\nJetBrains Marketplace now offers perpetual licensing for paid plugins. This new license type allows users to make a one-time payment for lifetime access to your plugin, including all future updates. It can be an appealing choice for users who prefer a single upfront payment rather than recurring charges. Learn how to implement this new model in our blog post.\n\n\n\n\n⭐️ Plugin development tooling updates\nIntelliJ Platform Plugin Template 2.0.2\nThe IntelliJ Platform Plugin Template is a repository that simplifies the initial stages of plugin development for IntelliJ-based IDEs. \nThe latest update includes upgrades to dependencies, an update to the platformVersion (2023.3.8), and a Gradle Wrapper upgrade to 8.10.2. Additionally, a fix was introduced to address the logs location for the “Run Plugin” run configuration. New Gradle settings were added, and several run configurations were adjusted. Find the full details in the release notes.\nIntelliJ Plugin Verifier 1.381\nIntelliJ Plugin Verifier checks the binary compatibility between IntelliJ-based IDE builds and IntelliJ Platform plugins. \nIntelliJ Plugin Verifier Version 1.381 improves compatibility with SLF4J 1.x and adds support for product-info.json in macOS distributions. Check out the changelog for more details.\nIntelliJ Platform Gradle Plugin 2.2.1\nThe IntelliJ Platform Gradle Plugin is a plugin for the Gradle build system to help configure your environment for building, testing, verifying, and publishing plugins for IntelliJ-based IDEs. \nVersion 2.2.1 of the plugin introduces improvements in plugin dependency resolution, enhances Plugin Verifier functionality, and adds support for LSP API Test Framework as TestFrameworkType.Plugin.LSP. This update also includes fixes for handling local IntelliJ Platform directories, adjustments to custom plugin repositories, and better handling of missing layout entries when creating an IDE. Find all of the details here. \n⭐️ Useful resources\nNew In-IDE Documentation Provider\nA new documentation provider for plugin.xml and Live Templates configuration files has been added to DevKit, making it easier to access relevant information directly in the IDE. The SDK documentation page is now automatically rendered within the IDE, ensuring plugin developers have key details at hand.\nSupport for additional file types is also planned. Stay tuned for more updates! \n\n\n\n\nLive Templates Configuration File\nThe new article provides a detailed overview of the elements and attributes used in live template configuration files for IntelliJ Platform plugins. It explains their structure and functionality, helping developers customize and manage live templates effectively.\n\n\n\n\n⭐️ Community highlights\nThe first JetBrains Plugin Developer Conf Is now on YouTube\nOn November 7, 2024, we hosted the first-ever JetBrains Plugin Developer Conf, bringing together over 2,000 developers to learn, share, and connect. \nThe event featured talks from JetBrains experts and plugin developers on topics like testing, localization, and user feedback. If you missed it or want to revisit your favorite sessions, all recordings are now available on YouTube in a dedicated playlist. \nWatch the talks and explore the technical insights shared during this exciting day!",
        "dc:creator": "Elena Kerpeleva",
        "content": "⭐️ Marketplace updates Granular plugin feedback In addition to the general star rating of plugins, we’re introducing detailed ratings for more granular feedback. Users can now rate plugins across five categories: Aggregated ratings are shown in the Reviews tab. Find more details in our documentation.&#160; Perpetual licenses for paid plugins JetBrains Marketplace now offers perpetual [&#8230;]",
        "contentSnippet": "⭐️ Marketplace updates Granular plugin feedback In addition to the general star rating of plugins, we’re introducing detailed ratings for more granular feedback. Users can now rate plugins across five categories: Aggregated ratings are shown in the Reviews tab. Find more details in our documentation.  Perpetual licenses for paid plugins JetBrains Marketplace now offers perpetual […]",
        "guid": "https://blog.jetbrains.com/?post_type=platform&p=542331",
        "categories": [
          "marketplace",
          "news",
          "busy-plugin-developers"
        ],
        "isoDate": "2025-01-31T11:54:42.000Z"
      },
      {
        "creator": "Irina Mariasova",
        "title": "Top Java Conferences and Events in 2025",
        "link": "https://blog.jetbrains.com/idea/2025/01/top-java-conferences-and-events-in-2025/",
        "pubDate": "Fri, 31 Jan 2025 11:50:16 +0000",
        "content:encodedSnippet": "Planning your 2025 tech calendar? Java conferences offer more than just technical sessions – they’re your gateway to connecting with a vibrant community of professionals and passionate Java fans, exploring new cities, and finding fresh inspiration.\nAs the IDE of choice for professional development in Java and Kotlin, IntelliJ IDEA is built to support developers at every stage of their journey. That’s why our team will be at these events—whether at a booth where you can meet our team or through expert talks sharing insights from the cutting edge of development.\nWe’ve put together this guide to help you choose the events that best match your interests and goals.\nJava conferences and events to attend in 2025\nDevnexus\n📍Atlanta, Georgia, USA\n📅 March 4–6\n💡JetBrains booth: +\nDevnexus is the longest-running and largest Java ecosystem conference globally, bringing together developers, architects, and tech enthusiasts to share knowledge and explore the latest advancements in the Java world.\nDevnexus 2025 is packed with three days of workshops, sessions, and full-day training seminars to boost your skills. With 14 tracks, over 160 expert speakers, and a celebration of Java’s 30th anniversary, it’s the ultimate event for anyone passionate about Java and development.\nJavaOne \n📍Redwood Shores, California, USA\n📅March 18–20\nSince 1996, JavaOne has been a popular gathering spot for developers worldwide to connect, learn, and celebrate everything Java. Designed by developers for developers, this one-of-a-kind annual event is hosted by Oracle’s Java organization. \nJavaOne 2025 will celebrate two big milestones: the launch of Java 24 and Java’s 30th anniversary. You don’t want to miss those! Learn from expert-led sessions and keynotes, meet the stars of the Java community, and pitch your ideas at the JavaOne Unconference. \nDevoxx\nDevoxx is a series of global community-driven conferences organized by developers who understand what other developers truly need. With events in Belgium, France, the UK, Poland, and more, Devoxx keeps its global appeal while reflecting the unique culture and tech trends of its region. \nHere are the must-visit events for 2025 from the Devoxx series:\nDevoxx Belgium \n📍Antwerp, Belgium\n📅October 6-10\n💡JetBrains booth: +\nDevoxx France\n📍Paris, France\n📅April 16-18\n💡JetBrains booth: +\nDevoxx Poland  \n📍Krakow, Poland\n📅June 11-13\nDevoxx UK \n📍London, United Kingdom\n📅May 7-9 \nJava Land\n📍Nürburgring\n📅 April 1-3 \nJavaLand features 148 presentations carefully selected from nearly 470 submissions, ensuring a diverse and high-quality program featuring a dedicated training day on April 3, hands-on workshops, and countless opportunities to engage with industry experts and fellow developers. \nThe conference also offers the NextGen program, which allows students and trainees to attend JavaLand 2025 for free.\nSpring I/O\n📍Barcelona, Spain \n📅May 22-23\n💡JetBrains booth: +\nSpring I/O is a popular conference for the Spring Framework ecosystem hosting over 1,200 guests annually. You will start with a full-day of workshops and then enjoy two days of expert-led sessions about Spring Framework updates, microservices architecture, reactive programming, cloud-native development, Kubernetes integration, and more. \nWhile in Barcelona, attendees can also explore iconic landmarks such as the Sagrada Família, Park Güell, and the Gothic Quarter. Don’t miss this chance to enhance your skills and stay ahead in Spring technologies! See you there!\nSpringOne\n📍The USA\n📅 August \n💡JetBrains booth: +\nSpringOne is the premier Spring conference, with over 2,500 attendees. It offers both virtual and in-person attendance options. Attendees have the opportunity to engage with the latest Spring innovations and technical content presented by community members and the Spring development team. \nWhile this year’s event hasn’t been announced yet, you can check out the session recordings from the last year’s event on this YouTube channel to get a general idea of what talks to expect. For the most current information, please visit the official SpringOne website.\nJavaZone\n📍Lillestrøm, Norway\n📅September 3-4\nJavaZone, one of Europe’s largest Java conferences, is gearing up for its 24th edition in 2025. Organized by javaBin, the Norwegian Java User Group, this annual event gathers over 3,000 developers, architects, and tech enthusiasts. The 2025 speaker lineup is pending, but past editions have showcased international and local experts talking passionately about all things Java. \nJ-Fall\n📍The Netherlands\n📅November\nThough the exact dates and place are not announced yet, get ready to team up with 1,800+ Java people from the Dutch Java User Group (NLJUG) in November.\nYou’ll hear from amazing speakers, including Java Champions, and you’ll get a chance to participate in hands-on workshops and deep-dive sessions. It’s more than just talks – J-Fall celebrates everything Java, with the NLJUG Innovation Award highlighting the most groundbreaking Java project of the year. Plus, explore the buzzing market floor where companies showcase their Java-powered innovations. \nJ-Fall is exclusively for NLJUG members and always sells out fast – last year, it was sold out in just an hour! Want in? Once the sales are open, secure your spot!\nSeveral speakers from JetBrains will be there, so feel free to join their sessions and network. \nSee you there! \nWe hope this guide helps you to plan the year for cool networking and new knowledge. Our team will be happy to meet you!",
        "dc:creator": "Irina Mariasova",
        "content": "Planning your 2025 tech calendar? Java conferences offer more than just technical sessions – they&#8217;re your gateway to connecting with a vibrant community of professionals and passionate Java fans, exploring new cities, and finding fresh inspiration. As the IDE of choice for professional development in Java and Kotlin, IntelliJ IDEA is built to support developers [&#8230;]",
        "contentSnippet": "Planning your 2025 tech calendar? Java conferences offer more than just technical sessions – they’re your gateway to connecting with a vibrant community of professionals and passionate Java fans, exploring new cities, and finding fresh inspiration. As the IDE of choice for professional development in Java and Kotlin, IntelliJ IDEA is built to support developers […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=542221",
        "categories": [
          "news",
          "conference",
          "event",
          "java"
        ],
        "isoDate": "2025-01-31T11:50:16.000Z"
      },
      {
        "creator": "Sasha Korepanov",
        "title": "Faster Debugging for Massive C++ Projects in Rider",
        "link": "https://blog.jetbrains.com/dotnet/2025/01/31/faster-debugging-in-rider/",
        "pubDate": "Fri, 31 Jan 2025 10:30:30 +0000",
        "content:encodedSnippet": "If you work on large Unreal Engine projects in Rider, you’ve likely experienced the dreaded debug-step delay – hit F10 for Step Over, contemplate making coffee, then finally see the next line execute. \nThese delays occur in LLDB Debugger, the engine behind Rider’s debugging capabilities for C++ and other native languages. After months of focused optimization work, we’ve made significant improvements to our custom version of LLDB on Windows. As a result, Step Over has gotten a major speed boost – up to 50 times faster in certain cases. These improvements will debut in Rider 2025.1 and the EAP builds leading up to it.\nDownload Rider 2025.1 EAP\n                                                    \nIn this blog post, we’ll tell you about the game-changing optimizations that got us there.\nCreating a benchmarking environment\nOur initial challenge was to reproduce the slow stepping behavior users report. Standard Unreal Engine demos weren’t showing the full extent of the problem – the difference between a 10ms and 100ms step isn’t immediately obvious. The real issues emerge in massive projects with gigabytes of debug symbols.\nTo properly assess the situation and measure our improvements, we generated an extreme test case – a C++ project with a 1 GB binary and 8 GB of debug symbols to amplify the stepping delays our users might encounter.\nA look under the hood\nTo better understand our approach to tackling the performance issues, let’s look at how stepping actually works in Rider.\nLLDB Debugger is part of the LLVM-project-compiler infrastructure, designed specifically for C++ and other native languages. As part of the LLVM project, it provides low-level debugging capabilities essential for complex codebases. Rider maintains its own customized version of LLDB to ensure an optimal debugging experience for C++ projects, particularly with Unreal Engine development.\nWhen you press F10, the IDE sends a stepping request to LLDB, which must:\nFind the next stop location (the instruction address).\nPlace a software breakpoint there and resume the debugging process.\nAfter stopping at the instruction address, check if the step is really finished. If not, try again.\nOnce the step is finished, restore the call stacks.\nReport to the IDE that the step has finished.\nThe IDE requests all call stacks for all threads.\nThe IDE requests the visualization of local variables for the current frame from LLDB, which triggers dozens of expression evaluations in LLDB.\nThis process involves resolving symbols by addresses and names, as well as examining assembly instructions. The larger the debugging program and the more debug symbols it has, the slower these operations become. \nHere are some specifics on the optimizations we implemented to address this.\nOur optimization strategy\nNegative caching \nDuring stepping, LLDB makes numerous requests to debug symbols (PDB), most commonly to use addresses to resolve symbols. For example, when LLDB restores the call stack, it resolves every frame address using debug symbols from the PDB. Very often, the root (the bottom) of the call stack consists of functions like invoke_main(), __scrt_common_main_seh(), __scrt_common_main(), and mainCRTStartup(). These functions are compiled into the user application, but the compiler doesn’t provide debug symbols for them. As a result, LLDB cannot find any debug information for these addresses. \nAlthough LLDB was already caching successful lookups internally, we discovered that it was ignoring failed lookups, which turned out to be surprisingly expensive operations. Our implementation of caching for these failed results gave us an immediate performance boost.\nLooking beyond the mutex\nBecause LLDB is multithreaded, certain operations require mutex locks to ensure thread synchronization. For one, access to debug symbols is mutex-protected, which means we need to be extra cautious with these blocking operations in performance-heavy scenarios. Any slow operation with debug symbols inherently affects the entire stepping process. One such bottleneck turned out to be searching for template function symbols by name.\nWhy do we need to search for template functions at all? After each step, Rider asks LLDB to show you what’s in each variable in the current frame. To do this, LLDB uses Natvis, which might need dozens of expression evaluations for just one variable. Each evaluation means LLDB has to resolve names in the debug symbols, including trying to match type names against function names.\nThe core problem lies in how MSVC’s PDB files store template function names. Take test<const char *, int> as an example – LLDB won’t find it because MSVC expects test<char const *,int> (notice how const moved and the spaces disappeared). Previously, Rider’s LLDB would search for test<*> to try to find all possible matches. This is a seemingly simple solution, until you consider how many variations of std::unique_ptr<*> exist in a real project. This wildcard search became painfully slow with thousands of template instantiations.\n\nWe solved this by transforming the template name into MSVC’s exact format before searching. While LLDB still adds wildcards, the more specific name pattern dramatically reduces the search scope. This optimization not only significantly reduces template function search times but also fixes incorrect cast expression parsing.\nNext line, please!\nRider uses custom scripted thread plans rather than native LLDB stepping, which has Windows-specific issues. But how exactly does stepping work? When you invoke Step Over, you’re telling the debugger to advance to the next line – but finding that “next line” is trickier than it sounds.\nThe thread plan scans instructions starting from the program counter (RIP in x86_64) until it finds an instruction on a different line or hits a branch instruction (like jmp, call, ret) – even if that branch is on the same line. To actually move to the chosen instruction, LLDB uses software breakpoints, overwriting the target instruction with a breakpoint instruction (int3 in x86_64). After hitting the breakpoint and stopping, LLDB restores the original instruction and checks if this is where we really want to stop.\n\nHere’s where it gets interesting: sometimes that “next line” lands us inside an inlined function. While that’s fine for stepping in, it’s not what we want for stepping over. Previously, when the thread plan detected an inlined function, it had to repeat the whole process – find another instruction, set a breakpoint, and try again. In optimized builds with heavy inlining (very common in STL and Unreal Engine code), this could happen hundreds of times per step! Each round requires at least two memory writes, making it an expensive operation. \nOur fix? We now check instructions in advance and simply skip them if they’re in an inlined function.\nIs it a call? \nAnother key optimization focused on how thread plans identify call instructions. While LLDB’s SB API can check if an instruction is a branch, it lacks a direct method to identify calls specifically. This forced thread plans to check instruction mnemonics using the available method, which proved costly – resolving mnemonics requires parsing the complete instruction including operands and comments.\nTo solve this issue, we added a new method to the SB API that checks for calls by examining the instruction bytecode directly, bypassing the overhead of full instruction parsing.\nMeasuring the improvements\nWe compared stepping performance between Rider 2024.3 and 2025.1 across several scenarios, measuring the time between sending a stepping request to LLDB and receiving the first frame stack:\nLarge C++ project built without optimizations:\n\n\n\n\nSame project built with optimizations enabled:\n\n\n\n\nSame project build with optimizations, but specific scenarios where stepping operations previously caused 23-second delays:\n\n\n\n\nReal-world test using a sample game project built with Unreal Engine (320MB binary, 2.5GB debug symbols):\n\n\n\n\nThe improvements deliver up to 50x faster stepping times, with most operations now completing in under 100ms. While these extreme test cases may not reflect every project, developers working with large C++ codebases, particularly Unreal Engine projects, should notice significantly smoother debugging sessions.\nWe need your help\nThese debugging improvements will be available in Rider 2025.1, as well as the EAP builds leading up to its release. As we continue to work on the performance of the debugger, we’ll be looking out for edge cases that might need additional optimization. Here’s where your input is invaluable! \nWe’ve put together a self-profiler for you to use whenever you’re dealing with slow stepping through C++ code. The Profile Native Debugger Process action can be invoked via Search Everywhere or from the Help menu.\n\n\n\n\nWhen you trigger this action, the IDE will ask you to grant administrative privileges for profiling. Once you’re done profiling the problematic actions of the debugger, you’ll get a notification with a link to the resulting snapshot. This snapshot can then be shared with us on YouTrack and Zendesk and may be a crucial asset in future investigations. We appreciate your help in perfecting the debugger with us.\nDownload Rider 2025.1 EAP\n                                                    \nSpecial thanks to:\nMikhail Zakharov for developing the self-profiler.\nAleksei Gusarov for thorough code reviews.",
        "dc:creator": "Sasha Korepanov",
        "content": "If you work on large Unreal Engine projects in Rider, you&#8217;ve likely experienced the dreaded debug-step delay – hit F10 for Step Over, contemplate making coffee, then finally see the next line execute.&#160; These delays occur in LLDB Debugger, the engine behind Rider&#8217;s debugging capabilities for C++ and other native languages. After months of focused [&#8230;]",
        "contentSnippet": "If you work on large Unreal Engine projects in Rider, you’ve likely experienced the dreaded debug-step delay – hit F10 for Step Over, contemplate making coffee, then finally see the next line execute.  These delays occur in LLDB Debugger, the engine behind Rider’s debugging capabilities for C++ and other native languages. After months of focused […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=541858",
        "categories": [
          "net-tools",
          "news",
          "rider",
          "cpp",
          "debugger",
          "gamedev",
          "unreal-engine"
        ],
        "isoDate": "2025-01-31T10:30:30.000Z"
      },
      {
        "creator": "Raisa Kanischeva",
        "title": "Global Developer Population Reaches 19.6 Million in 2024: Explore the Updates in Our Data Playground",
        "link": "https://blog.jetbrains.com/research/2025/01/global-developer-population-2024/",
        "pubDate": "Fri, 31 Jan 2025 10:13:18 +0000",
        "content:encodedSnippet": "A year ago, we launched the Developer Ecosystem: Data Playground, an interactive dashboard offering insights into the global developer landscape. Today, we’re excited to introduce a significant update that enhances the dashboard with refined data, salary ranges, and even more granular insights into developer demographics and market trends.\nWhat’s New?\nTo make it easier to explore and analyze different aspects of the developer landscape, we have now separated the IT Salary Calculator from the Data Playground dashboard. This will allow users to focus specifically on salary insights or dive deeper into developer population estimates without overlap:\nThe IT Salary Calculator now stands on its own, allowing users to focus exclusively on salary trends. Our calculator provides clear salary ranges tailored by country, programming language, and total experience level.\nThe Data Playground has been refined with a new methodology and 2024 data for deeper insights. This dashboard offers an in-depth view of global and regional developer populations, distributions across age groups and experience levels, and the prevalence of various programming languages, OSs, technologies, and more.\n“This separation ensures a more streamlined experience and makes it easier to find the exact insights you need.”\n\n            \nIrina Chichikova\n                                                                Frontend Developer\n                                    \nHow Many Developers Are There in the World? 2024 Update\nUsing our 2023 methodology, we estimated approximately 13.4 million professional developers worldwide. For 2024, our revised model puts the number closer to 19.6 million professional developers globally — a major increase driven by key updates to our methodology. To ensure accuracy, we have also revised historical estimates, aligning past data with our refined model.\n\nWhy Did the Numbers Change?\nImproved Data Sources\nWe’ve integrated new data from international labor organizations and the latest data from our 2024 Developer Ecosystem Survey, ensuring our estimates reflect the most up-to-date trends.\nRefined Methodology\nOur model now better accounts for regional specifics and countries where developer growth has been accelerating. The five fastest-growing developer populations between 2019 and 2024 are:\n India: 1.3M -> 2.6M (+1.3M, +14% YoY)\n United States: 1.7M -> 2.9M (+1.2M, +11% YoY)\n China: 3M -> 3.9M (+0.9M, +5% YoY)\n Brazil: 0.4M -> 0.6M (+0.2M, +9% YoY)\n Japan: 1.1M -> 1.3M (+0.2M, +4% YoY)\nIndia now accounts for 14% year-over-year growth in its developer workforce, driven by its booming IT sector.\nThe United States and China continue to dominate in total numbers of professional developers. \nExpanded Definition of Professional Developers\nWhile we continue to focus on professional developers, we’ve refined our categories to include roles like Software Quality Assurance Analysts, Testers, and Data Scientists. These professions were previously grouped into broader categories that also included many non-coding specialists. With these roles now explicitly categorized in labor statistics, our estimates provide a more accurate picture of the developer workforce.\n“Our Data Science team worked on updating the model to incorporate fresh labor statistics and better reflect the rapid growth of the ICT sector. We also focused on including more coding professions in estimation, such as Software Quality Assurance Analysts and Data Scientists, to ensure our estimates align more closely with the realities of the evolving developer landscape.”\n\n            \nVasiliy Kaminskiy \n                                                                Data Science Team Lead\n                                    \n“The global developer workforce is expanding faster than ever. Whether you’re hiring, planning a product launch, or exploring new markets, our updated Developer Ecosystem: Data Playground offers the insights you need to stay ahead.”\n\n            \nNadia Lokot\n                                                                Product Manager\n                                    \nStart Exploring Now\n                                    \nIT Salary Calculator: Now with Ranges\nThe IT Salary Calculator has been significantly enhanced to provide users with more accurate and actionable insights. The tool now offers salary ranges segmented by country, programming language, and total experience level, making it invaluable for job seekers, employers, and industry analysts.\n“The salary data still comes from the Developer Ecosystem Survey but is now more precise. This year, respondents provided exact incomes (e.g., $4,200 monthly) instead of selecting from ranges (e.g., $4,000-$5,000). Additionally, we now display gross annual income – before taxes and including bonuses – for better comparability with other salary sources.”\n\n            \nMikhail Tribunskiy\n                                                                Data Scientist \n                                    \n\nCheck salary distribution for your country and programming language with real data. \nTry the IT Salary Calculator\n                                    \nLet us know your feedback as we continue to improve and expand this resource!",
        "dc:creator": "Raisa Kanischeva",
        "content": "A year ago, we launched the Developer Ecosystem: Data Playground, an interactive dashboard offering insights into the global developer landscape. Today, we’re excited to introduce a significant update that enhances the dashboard with refined data, salary ranges, and even more granular insights into developer demographics and market trends. What’s New? To make it easier to [&#8230;]",
        "contentSnippet": "A year ago, we launched the Developer Ecosystem: Data Playground, an interactive dashboard offering insights into the global developer landscape. Today, we’re excited to introduce a significant update that enhances the dashboard with refined data, salary ranges, and even more granular insights into developer demographics and market trends. What’s New? To make it easier to […]",
        "guid": "https://blog.jetbrains.com/?post_type=research&p=541947",
        "categories": [
          "research",
          "data-playground",
          "developer-ecosystem"
        ],
        "isoDate": "2025-01-31T10:13:18.000Z"
      },
      {
        "creator": "Will Vincent",
        "title": "Python Developer Advocate – Will Vincent",
        "link": "https://blog.jetbrains.com/pycharm/2025/01/python-developer-advocate-will-vincent/",
        "pubDate": "Thu, 30 Jan 2025 15:09:25 +0000",
        "content:encodedSnippet": "Hi, I’m a new Python Developer Advocate, focusing especially on web development. If you have any questions or want to share ideas around JetBrains products, most notably PyCharm, say hi at william.vincent@jetbrains.com.\nBackground\nI’m a former Django Board Member and the author of three books on Django. Since 2019, I’ve co-hosted the Django Chat podcast and co-written the weekly Django News newsletter while also maintaining several open-source projects, including the awesome-django and Lithium starter project repos. These days most of my new content is found on LearnDjango.com, which has a growing list of free tutorials and premium courses.\nI love learning and teaching, so if you attend a Python conference, you might see me give a talk. Before focusing on web development in Python, I worked at multiple early-stage startups, including Quizlet, and taught a course on Web Development at Williams College.\nWhat I’ll Be Doing\nI’ll be attending a number of conferences this year, including DjangoCon Europe, DjangoCon US, PyCon US, EuroPython, and PyTorch. Come say hi if you see me there.\nI’m working on several open tickets around core Django as well as its official documentation.\nAnd I’m excited to learn more about data science this year, exploring ways that it can (or should) overlap with web development, so be on the lookout for future videos, blog posts, and more from me in this area.\nWhat Interests/Excites Me About the Role\nI’ve worked with JetBrains for years as a Django Board Member. Their annual fundraiser is the single biggest contributor to the Django Software Foundation Budget. And the annual Django Developers Survey, which I started up, is now run in conjunction with JetBrains, who helps with the formatting and data analysis. In short, JetBrains is a long-time partner in the open-source community and continues to be.\nAs a Developer Advocate, I will continue to teach what I learn about Python, web development, and data science to the community. Now is a particularly exciting moment as new AI features make their way into text editors and IDEs. There is a lot to figure out around how developers can properly benefit from these tools.\nFun Facts\nI met my wife at the University of St. Andrews, where I lived in the same dorm as Prince William and Kate.\nI was a Book Editor before switching into tech\nI’m a longtime Liverpool FC supporter\n\n\n\n\nConnect\nEmail: william.vincent@jetbrains.com\nGitHub: https://github.com/wsvincent\nBluesky: https://bsky.app/profile/wsvincent.bsky.social \nFosstodon: https://fosstodon.org/@wsvincent",
        "dc:creator": "Will Vincent",
        "content": "Hi, I’m a new Python Developer Advocate, focusing especially on web development. If you have any questions or want to share ideas around JetBrains products, most notably PyCharm, say hi at william.vincent@jetbrains.com. Background I’m a former Django Board Member and the author of three books on Django. Since 2019, I’ve co-hosted the Django Chat podcast [&#8230;]",
        "contentSnippet": "Hi, I’m a new Python Developer Advocate, focusing especially on web development. If you have any questions or want to share ideas around JetBrains products, most notably PyCharm, say hi at william.vincent@jetbrains.com. Background I’m a former Django Board Member and the author of three books on Django. Since 2019, I’ve co-hosted the Django Chat podcast […]",
        "guid": "https://blog.jetbrains.com/?post_type=pycharm&p=540961",
        "categories": [
          "developer-advocate",
          "django",
          "pycharm",
          "python"
        ],
        "isoDate": "2025-01-30T15:09:25.000Z"
      },
      {
        "creator": "Maria Kosukhina",
        "title": "IntelliJ IDEA 2025.1 EAP 3: Kotlin K2 Mode Updates, Enhanced Logical Code Structure View, and More ",
        "link": "https://blog.jetbrains.com/idea/2025/01/intellij-idea-2025-1-eap-3/",
        "pubDate": "Thu, 30 Jan 2025 14:07:49 +0000",
        "content:encodedSnippet": "The IntelliJ IDEA 2025.1 Early Access Program is in full swing, and build #3 is now available!\nYou can download this version from our website, update directly from within the IDE, use the free Toolbox App, or install it via snap packages for Ubuntu. \nDownload IntelliJ IDEA 2025.1 EAP 3\nWe’re covering all of the notable updates introduced in this Early Access Program in our dedicated 2025.1 EAP blog section. Below are the highlights from this week’s release.\nKotlin \nJava-to-Kotlin auto-conversion with copy-paste in K2 mode\nWe are getting closer to reaching feature parity between K2 and K1 modes. K1 mode’s auto-conversion for Java code in Kotlin files is a popular feature that makes it easier to cross the barrier between the two languages. Now, in K2 mode, you can also paste Java code and have it automatically translated to Kotlin. If you want to add a Kotlin file to your Java project, Kotlin will also be configured automatically.\n\n\n\n\nFrameworks and technologies\nSupport for Liquibase in the Logical code structure view\nWe’ve improved the Logical code structure view introduced in IntelliJ IDEA 2024.3, expanding it to support additional file types. With IntelliJ IDEA 2025.1 EAP 3, you can now enjoy a more meaningful structure representation and streamlined navigation tailored specifically for Liquibase change sets. Easily explore and manage your change sets with an intuitive overview that highlights their logical hierarchy, helping you stay organized and productive when working on database schema changes.\n\n\n\n\nCode completion for nonexistent Spring Data repositories \nIntelliJ IDEA now helps you write code with even fewer distractions by automatically creating Spring Data repositories for you. Simply start typing the entity name, and if the repository doesn’t exist, the IDE will suggest creating one. Choose the repository type and seamlessly continue your work by adding derived query methods and processing the extracted data.\n\n\n\n\nThese are this week’s most noteworthy updates. For the complete list of changes, check out the release notes.\nWe’d love to hear your thoughts – share your feedback in the comments below or on X, and report any bugs through our issue tracker.\nStay tuned for more news coming next week, and happy developing!",
        "dc:creator": "Maria Kosukhina",
        "content": "The IntelliJ IDEA 2025.1 Early Access Program is in full swing, and build #3 is now available! You can download this version from our website, update directly from within the IDE, use the free Toolbox App, or install it via snap packages for Ubuntu.&#160; Download IntelliJ IDEA 2025.1 EAP 3 We’re covering all of the [&#8230;]",
        "contentSnippet": "The IntelliJ IDEA 2025.1 Early Access Program is in full swing, and build #3 is now available! You can download this version from our website, update directly from within the IDE, use the free Toolbox App, or install it via snap packages for Ubuntu.  Download IntelliJ IDEA 2025.1 EAP 3 We’re covering all of the […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=541696",
        "categories": [
          "eap",
          "2025-1-eap",
          "intellij-idea-2025-1",
          "intellij-idea-2025-1-eap"
        ],
        "isoDate": "2025-01-30T14:07:49.000Z"
      },
      {
        "creator": "Anastasia Khramushina",
        "title": "JetBrains and LinkedIn Partner to Launch a Professional Certificate",
        "link": "https://blog.jetbrains.com/team/2025/01/29/jetbrains-and-linkedin-partner-to-launch-a-professional-certificate/",
        "pubDate": "Wed, 29 Jan 2025 17:48:51 +0000",
        "content:encodedSnippet": "JetBrains has partnered with LinkedIn to offer the Java Foundations Professional Certificate, exclusively available on LinkedIn Learning.\nWith over 1 billion members on the platform and 7 people hired every minute, LinkedIn provides unmatched access to professional growth opportunities. Together, with our expertise in software development and education, we’re combining the best of both worlds: expert-led credentials and career-oriented networking.\n\n\n\n    \nSTART LEARNING\n                                                    \nWhat’s a professional certificate?\nLinkedIn Learning offers professional certificates from industry leaders, including Microsoft, Atlassian, GitHub, Adobe, and now JetBrains. Professional certificates make it easy to complete courses, take assessments, and share your credentials without leaving LinkedIn – great for making your profile stand out to recruiters.\n\n\n\n\nWith over 20 years of expertise in software development and the trust of 11.4 million developers, we can ensure you’re learning from the best. The Java Foundations Professional Certificate enhances your LinkedIn profile, validates your Java skills, and gives you real-world experience. You’ll work in IntelliJ IDEA, the industry’s leading IDE for Java development, gaining practical knowledge essential for your career.\nWhy Java?\nWith 78% of Java developers choosing IntelliJ IDEA and over a million learners on JetBrains Academy, the Java Foundations Professional Certificate on LinkedIn Learning was a natural progression for us. But in a world buzzing with AI, why is learning Java still important?\nJava provides a strong foundation in programming concepts. Learning Java makes it easier to dive into specialized fields like AI later. Our Computer Science Learning Curve Survey 2024, conducted among more than 23,000 learners, shows that most of them begin their journey with foundational languages like Java.\nJava remains one of the most widely used programming languages. It powers industries from mobile development to large-scale enterprise solutions. Its demand continues to grow, offering stability and opportunities in your career path.\nWhat you’ll learn\nThe Java Foundations Professional Certificate consists of five courses that are designed to take you from zero experience to proficiency in Java. By the end of the series, you’ll have gained the skills required to apply for junior developer positions right on LinkedIn.\nSyntax and Structure\nStart your journey by learning how to install Java and IntelliJ IDEA and work with variables, data types, and key language components. You’ll also practice controlling program flow with conditional logic and loops, as well as using Java collections.\nObjects and APIs\nIn this course, you’ll go through the fundamentals of objects and APIs in Java. You’ll learn about inheritance, polymorphism, abstraction, interfaces, and data structures, in addition to getting tips on handling exceptions, resolving errors, and preventing memory leaks.\nObject-Oriented Programming (OOP)\nThis course covers the fundamentals of OOP in Java to help you write secure, scalable, and maintainable code. You’ll find out how object-oriented principles are built into the language with classes, instances, and constructors to represent real-world objects.\nData Structures\nData structures are crucial for nearly all applications. This course covers essential data structures and their uses, as well as considerations like speed and performance. You’ll learn about arrays, their benefits and drawbacks, and how to use them effectively. The course also delves into Java Collections, emphasizing the Collection interface, which underlies most Java data structures.\nJava Database Connectivity (JDBC) API\nDevelopers building mobile, web, or desktop apps often need to integrate relational databases. In this course, you’ll be introduced to the JDBC API and learn how to use it to manage data from databases like Postgres, Oracle, MySQL, and SQL Server in Java applications.\nWe can’t wait to see you getting started with the Java Foundations Professional Certificate and taking your first steps on the path to becoming a developer. Make sure you let us know how you get on, and don’t forget to share your certificate and tag us on LinkedIn!\nThe JetBrains team",
        "dc:creator": "Anastasia Khramushina",
        "content": "JetBrains has partnered with LinkedIn to offer the Java Foundations Professional Certificate, exclusively available on LinkedIn Learning. With over 1 billion members on the platform and 7 people hired every minute, LinkedIn provides unmatched access to professional growth opportunities. Together, with our expertise in software development and education, we’re combining the best of both worlds: [&#8230;]",
        "contentSnippet": "JetBrains has partnered with LinkedIn to offer the Java Foundations Professional Certificate, exclusively available on LinkedIn Learning. With over 1 billion members on the platform and 7 people hired every minute, LinkedIn provides unmatched access to professional growth opportunities. Together, with our expertise in software development and education, we’re combining the best of both worlds: […]",
        "guid": "https://blog.jetbrains.com/?post_type=team&p=541151",
        "categories": [
          "java",
          "learning-courses",
          "news",
          "partners",
          "certificate",
          "linkedin"
        ],
        "isoDate": "2025-01-29T17:48:51.000Z"
      },
      {
        "creator": "Julia Shashkova",
        "title": "9 Tips for Productive Java Development With Databases in IntelliJ IDEA",
        "link": "https://blog.jetbrains.com/idea/2025/01/tips-for-productive-java-development-with-databases-in-intellij-idea/",
        "pubDate": "Wed, 29 Jan 2025 15:41:10 +0000",
        "content:encodedSnippet": "In this article, we’ll share nine time-saving ways IntelliJ IDEA can boost your productivity when developing Java applications with databases – whether you’re starting a new project or diving into an ongoing one.\nGet IntelliJ IDEA Ultimate\nCreate data sources automatically from properties\nIntelliJ IDEA makes it easy to create a data source for your Spring project right from the application.properties file – simply open it and click on a gutter icon next to the properties. \n\n\n\n\nIn the opened Data Sources and Drivers dialog, you’ll see a data source already assigned and the database-related fields prefilled – all you need to do is to test connectivity (just in case) and click OK. The data source will be created for you.\nTest Spring Data JPA query methods without running the application\nIntelliJ IDEA simplifies Spring Data JPA method query verification! It provides autocompletion for names and the ability to check generated queries without running the application. Just click the dedicated gutter icon to execute repository methods directly in the JPQL console.\n\n\n\n\nReview database schemas as diagrams\nDatabase diagrams are great for quickly grasping the structure of databases and understanding the relationships between their various objects. IntelliJ IDEA can create detailed diagrams for data sources, schemas, or tables to help you analyze the data structure more effectively. To generate a diagram, right-click a database object in the Database tool window and select Diagrams | Show Diagram.\n\n\n\n\nYou can also assign colors to diagram objects to further enhance the way you interact with and comprehend your database structure.\n\n\n\n\nReview query results right in the editor\nIntelliJ IDEA provides a compact way to review query results right in the editor. To enable it, click the In-Editor Results button in the query console before running your query. ​​This is especially useful for working with smaller datasets or data samples.\n\n\n\n\nModify query data in the results set view\nWhen you need to make changes to cell values in IntelliJ IDEA, you don’t have to write and re-run queries! Simply click on a cell value that you want to edit, enter the new value, then click the Submit button (⬆) or ⌘↩/Ctrl+Enter to push changes to the database.\n\n\n\n\nView query results as charts\nCharts provide a powerful and user-friendly way to quickly gain actionable insights from your query results. This feature is particularly useful when analyzing large datasets, looking for patterns, or presenting trends in an easily comprehensible format.\nTo open chart settings, click the Switch to Chart icon on the data editor toolbar. You can choose from a wide range of chart types, including bar charts, pie charts, area charts, line charts, and more, depending on what best suits your needs.\n\n\n\n\nWhen you need to present your findings or keep snapshots of data dynamics, you can export charts in .png format. To save a chart snapshot, simply click the Export to PNG button in Series Settings.\n\n\n\n\nProfile your query with an execution plan\nYou can also visualize execution plans for queries, illustrating the set of steps that were used to access data in a database and the cost of each step – in other words, how long it takes to run the statement. \nTo open the execution plan, right-click an SQL statement, select Explain Plan | Explain Plan, and then click on the Show Diagram icon.\n\n\n\n\nUse DB migration libraries to update application databases\nDatabase schemas evolve over time as business requirements change, and database schema updates and migration can be tricky and error-prone when done manually. Instead, take advantage of IntelliJ IDEA’s built-in support for automatically generating migration scripts based on existing JPA entities. For more information, refer to this article.\n\n\n\n\nLeverage AI Assistant\nAI Assistant makes data query and managing data faster and more efficient. It helps speed up SQL query generation, provides explanations, suggests fixes, and can even generate test data tables!\n\n\n\n\n\n\n\n\nBy following these tips, you can optimize your workflow, save time, and make working with databases more productive and enjoyable. Check out this page to learn more about the database tools in IntelliJ IDEA.\nHappy developing!",
        "dc:creator": "Julia Shashkova",
        "content": "In this article, we’ll share nine time-saving ways IntelliJ IDEA can boost your productivity when developing Java applications with databases – whether you&#8217;re starting a new project or diving into an ongoing one. Get IntelliJ IDEA Ultimate Create data sources automatically from properties IntelliJ IDEA makes it easy to create a data source for your [&#8230;]",
        "contentSnippet": "In this article, we’ll share nine time-saving ways IntelliJ IDEA can boost your productivity when developing Java applications with databases – whether you’re starting a new project or diving into an ongoing one. Get IntelliJ IDEA Ultimate Create data sources automatically from properties IntelliJ IDEA makes it easy to create a data source for your […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=541248",
        "categories": [
          "tips-tricks",
          "database-tools",
          "productivity"
        ],
        "isoDate": "2025-01-29T15:41:10.000Z"
      },
      {
        "creator": "Elena Pishkova",
        "title": "YouTrack 2025 Roadmap",
        "link": "https://blog.jetbrains.com/youtrack/2025/01/youtrack-2025-roadmap/",
        "pubDate": "Wed, 29 Jan 2025 13:01:08 +0000",
        "content:encodedSnippet": "Our commitment to you\nWe remain fully committed, as we have been all these years, to developing YouTrack as a platform that evolves with your needs. Our promise to you is to ensure that YouTrack continues to be available in both Server and Cloud versions, giving you the freedom to choose the hosting option that best fits your organization and data governance policies.\nLearning from experience as teams choose YouTrack\nYouTrack is growing faster than ever, with a double-digit percentage increase in the customer base over the last year. We see adoption increasing in various team functions across small and medium enterprises. Together with our consulting partners, we work closely to help the largest enterprises with thousands of employees migrate their processes to YouTrack.\nWe know how tough it is to find the right project management tools – so many are out there! Teams often spend months exploring solutions to find the one that fits their needs.\nMany teams switch to YouTrack to save costs without losing functionality or to find a server solution suitable for teams of a few to several hundred employees. Others transition from lightweight tools or development-specific issue-tracking platforms to gain more flexibility for growing teams and to bring various departments to work together. Some are just beginning their journey, moving from email or chat-based coordination to smart solutions like YouTrack that can support the existing business flows.\nAfter adopting YouTrack, many teams have shared invaluable feedback, shaping our immediate priorities for 2025 and our roadmap for the future. Still, we remain flexible with our planning, leaving room to respond to your needs while staying true to our long-term vision and commitment to YouTrack as a flexible and powerful solution.\nA bold new design for YouTrack\nThe big step in 2025\nWe’ll start 2025 with a bold new look and feel for YouTrack, introducing changes that reflect years of learning and exploration into how teams work on projects.\nNew navigation panel\nThe main menu will move from the top to the left side of the screen, accommodating the growing number of features and pages in YouTrack. We aim to make all the YouTrack key sections more accessible, reducing clicks and making navigation faster for all users. Starting in early 2025, the new navigation panel will be enabled by default for all users. While you will temporarily have the option to switch back to the old one in version 2025.1, we recommend embracing the new interface as we hope it will become the standard by midyear.\n\n\n\n\nProject hierarchy path for tasks, tickets, and articles\nThis project-centric hierarchy will provide clickable breadcrumb paths for tasks, tickets, and articles, allowing you to navigate through project-related information effortlessly. For example, if you’re part of a design team contributing to a specific project, you will only ever be a couple of clicks away from any of the tasks and articles related to your design project.\n\n\n\n\nRedesigned Issues page\nOne of the main differences between YouTrack Lite and Classic has been the layout of the Issues page. This meant that if you had a layout preference, your choice between YouTrack Lite and Classic was restricted. You don’t need to worry about that anymore! The unified Issues page will eliminate the need to choose between Classic and Lite, combining their capabilities into a unified experience. It will include customizable settings, allowing you to tailor your task list to a table or list view with as much or as little detail as you need. We’re also working to improve the way you can search and filter tasks. Once implemented, this redesign will be the default, and there will not be an option to revert it.\n\n\n\n\nFurther UX improvements for everyone\nLater in 2025 and beyond, we will focus on expanding and enriching the new design with:\nRevamped project pages for teams to stay connected to their work context.\nAdvanced project-centric navigation to keep you in your project’s context when needed.\nA My Work page with a personalized view designed to help you focus on your tasks and priorities.\nOnboarding for new users to guide them more easily through YouTrack’s features and help them be productive from day one.\nAI assistance for team members and managers\nWe’re dedicating resources to delivering AI automation features for team members and their project managers. The free AI assistance that comes out of the box in YouTrack will be enhanced with options that are useful in daily work.\nLet AI complete content for you. We are improving AI’s ability to suggest text completions, making drafting tasks or updates faster and more intuitive.\nTask field suggestions from AI. Intelligent suggestions for completing fields in your tasks can streamline work and help you provide critical details effortlessly in no time.\nFuture AI capabilities. Looking ahead, we are working hard to implement the AI-based automation of your routine at a new level. We want to make it possible for you to start your day by reviewing the jobs done for you by AI agents and approving suggestions for moving forward with your projects, either in YouTrack or in the other connected systems.\nExpanding Helpdesk for internal and B2B support teams\nWhile our Helpdesk solution currently allows standard users to be contributors when they are involved in helping your support teams with customer tickets, our customer feedback has highlighted another important scenario – internal helpdesk projects. In these cases, standard users also need to be able to act as reporters in internal helpdesk or service desk setups. To address this, we will also focus on improving the user interface for tickets submitted by internal reporters, improving email notifications for internal reporters, ensuring proper visibility and comment settings for users, and resolving other issues related to ticket visibility and comments for such a scenario.\nOur long-term goal with the Helpdesk solution is to introduce advanced capabilities for separating and managing client organizations within it. This will enable B2B support teams to provide tailored experiences for different clients.\nMore flexibility for project managers\nPlanning canvas\nWe’re working on introducing a planning canvas to make project planning more visual and collaborative. This feature will allow teams to start working using a whiteboard-style interface where ideas can be drafted and transformed into actionable tasks with just a few clicks. Teams will also be able to move existing tasks to the canvas for better visualization and interactive adjustments.\nCustomized naming for tasks\nWould you like to call your tasks something other than “issues”? You may want to call them “documents” for legal projects, “purchase orders” for finance ones, or “jobs” or “employees” for HR and recruitment workflows. We’re continuing to work on a feature that will give you the flexibility to tailor the naming and structure of your entries when starting a specific project.\nMore apps for your teams\nYouTrack apps already allow you to add significant functionality, including entire new pages. For example, the Diagram Editor app lets teams create and manage visual diagrams directly within YouTrack.\nWe are committed to further supporting our partners and customers in building apps. If you have an idea for a new app or feature, feel free to contact us – we’d love to collaborate and discuss how we can help.\n\n\n\n\nExtended enterprise features\nIn relation to YouTrack Server, for our large enterprise customers, we plan to introduce more tools to help you monitor database performance and manage workloads effectively. These updates will help teams ensure stability and optimize resource usage as they scale.\nWe’ll prioritize Docker images as the primary method for installing and upgrading server instances, with .zip distribution support ending in early 2025. As containerized deployments offering secure and isolated environments become the IT standard, we aim to align with industry best practices by focusing exclusively on containerized solutions. \nFor YouTrack Cloud, we’re committed to providing a guaranteed cloud service uptime of 99.99% and confirming this in our terms of service.\nWe’re also expanding single sign-on (SSO) support to include automated user provisioning and deprovisioning. Okta and Entra ID integration improvements are coming in early in 2025, with additional updates to follow. To further enhance user management for enterprise teams, we’re introducing:\nSCIM 2.0 protocol support to further enhance user management capabilities.\nOIDC protocol support to make it possible to sign-in with even more identity providers.\nLet’s shape the future of YouTrack together\nWe’d love to hear from you! Your feedback shapes YouTrack’s future, and we’re always open to ideas, suggestions, and insights. Whether you want to share a feature request, an improvement suggestion, or just your thoughts, get in touch with us by commenting on this blog or using our public project tracker. \nThank you for being a part of the YouTrack community. Together, we’re building a more powerful YouTrack for 2025 and beyond.\nYour YouTrack team,\nCelebrating 15 years with you!",
        "dc:creator": "Elena Pishkova",
        "content": "Our commitment to you We remain fully committed, as we have been all these years, to developing YouTrack as a platform that evolves with your needs. Our promise to you is to ensure that YouTrack continues to be available in both Server and Cloud versions, giving you the freedom to choose the hosting option that [&#8230;]",
        "contentSnippet": "Our commitment to you We remain fully committed, as we have been all these years, to developing YouTrack as a platform that evolves with your needs. Our promise to you is to ensure that YouTrack continues to be available in both Server and Cloud versions, giving you the freedom to choose the hosting option that […]",
        "guid": "https://blog.jetbrains.com/?post_type=youtrack&p=538837",
        "categories": [
          "features",
          "news",
          "roadmap",
          "ai-assistance",
          "apps",
          "helpdesk",
          "youtrack-cloud",
          "youtrack-server"
        ],
        "isoDate": "2025-01-29T13:01:08.000Z"
      },
      {
        "creator": "Vladimir Dvorak",
        "title": "JITWatch4i: Analyzing IntelliJ IDEA’s Startup",
        "link": "https://blog.jetbrains.com/platform/2025/01/jitwatch4i-analyzing-intellij-idea-s-startup/",
        "pubDate": "Wed, 29 Jan 2025 11:40:05 +0000",
        "content:encodedSnippet": "Introduction\nA typical Java or Kotlin programmer spends most of their productive time either creating application code in an editor or searching for bugs in a debugger. Occasionally, they might dive into a profiler when looking for places where the application spends too much time. However, they almost never venture into the Java C1 or C2 compilers and their resulting products – low-level assembly code. For the most part, the Java compilers are black boxes that typically remain closed under normal circumstances.\nSome time ago, I tried to analyze the startup of larger projects, such as IntelliJ IDEA. When analyzing program startup in a JIT-based virtual machine, it’s essential to realize that standard profiling tools don’t provide an accurate picture of CPU load or the performance of individual methods. The final times are distorted because some code runs in a non-optimized form and some CPU capacity is used for compiling methods. This led me to search for a tool that could display compilation processes, and that’s how I found JITWatch.\nThis article introduces JITWatch4i, an IntelliJ IDEA plugin based on JITWatch, designed for analyzing and visualizing compilation processes directly within IntelliJ IDEA. After laying a theoretical foundation with a general overview of Java’s tiered compilation process, we’ll demonstrate the plugin in action, comparing IntelliJ IDEA’s startup speed under different values of the -XX:TieredOldPercentage parameter.\nJITWatch\nDeveloped by Chris Newland, JITWatch is a Java program that analyzes JVM (HotSpot) compilation logs and provides a detailed analysis of the behavior of both compilers in the Java Virtual Machine.\nWhy JITWatch4i?\nFrom my point of view, the original JITWatch is undoubtedly a useful tool for analyzing JIT processes in the JVM. However, while using it, I encountered several issues that made my work more difficult:\nConfiguration requires you to set paths to source files, that is, to all modules containing code for the analyzed project. For large applications like IntelliJ IDEA, whose complete structure you may not even know, this is quite time-consuming.\nConfiguration requires you to set class locations, essentially duplicating the classpath of the analyzed program.\nJITWatch uses JavaFX for its UI. It takes a long time to visualize a project with tens of thousands of compilations in JavaFX, and some charts are practically unusable.\nInstalling and running JITWatch isn’t complicated, but it also isn’t a one-click process.\nWhen I used JITWatch, I particularly struggled with its lack of direct integration into a modern development environment – specifically the environment of the project I was working on. Eventually, I concluded that such an integration could bring new life to this great project, which led me to create JITWatch4i.\nJITWatch4i is a plugin for IntelliJ IDEA that integrates the JIT analysis visualization features of the original JITWatch directly into the IDE. Integration with IntelliJ IDEA removes the need to manually configure paths to source code or compiled classes, as the IDE already has information about the structure of the currently open project and its dependencies, which the plugin can directly use.\nFurthermore, the original JavaFX framework was replaced with the older but simpler Swing library, which is significantly optimized in the JetBrains Runtime. As a result, visualizing large projects is still reasonably fast, even when dealing with a large number of compilations.\nTypical JITWatch use cases\nAccording to the documentation of the original JITWatch project, this tool is useful in several key areas. It allows you to:\nVerify whether methods you consider performance-critical were JIT-compiled during program execution.\nFind out exactly when certain methods were compiled and better understand the impact of JVM compilation threshold settings.\nLearn how long the compilation of individual methods took, which ones took the compiler the longest, or which generated the most native code.\nBetter understand how Java compilers work.\nTrack how your source code is translated into bytecode and ultimately into machine code.\nIntroduction to Java compilation\nTo delve further into this topic, it’s helpful to have a basic understanding of Java compilers.\nFundamentally, the JVM contains an interpreter, which is used for a limited number of initial method calls, and two main compilers:\nC1, which is capable of quickly generating less-optimized native code. By default, C1 generates code that also collects profiling statistics later used by C2. This mode is called tiered compilation.\nC2, although slower than C1, creates code that is significantly faster. C2 leverages statistics collected by the code compiled with C1 to decide how to optimize the code. Statistics for a given method are gathered while it is running in an interpreter or in code compiled with additional profile-gathering code.\nCompilation levels\nIn this context, you’ll often hear about five compilation levels labeled L0–L4:\nL0 – A term indicating that a method is executed in the interpreter, during which basic statistics, such as the number of calls and backward jumps, are collected.\nL1 – C1 compilation that does not include profiling for C2. It provides the fastest possible output from C1 and is mainly used for trivial methods where deep optimization in C2 wouldn’t provide a significant benefit.\nL2 – C1 compilation with limited profiling, with statistics collected on the number of method calls and backward jumps. This allows us to determine which methods are actively used so that their subsequent compilations can be planned. L2-compiled code is on average about 30% faster than L3-compiled code. At application startup, when the C2 compiler is overloaded, it’s more time-efficient to compile code using L2. If the method remains active, the scheduler’s decision mechanism will later choose to compile it at L4.\nL3 – C1 compilation with full profiling. Unlike L2, this level also gathers statistics on conditional branches and information about which classes are used in the method. L3 code is the slowest compiled code produced by the C1 compiler. The compiler scheduler aims to minimize the time a method spends running in L3 code.\nL4 – Compilation with C2, which leverages the statistics collected previously. This makes it possible to generate faster, more efficient native code.\nCompilation queue\nThe JVM uses a compilation queue to manage and prioritize tasks across compiler threads. Methods are queued based on a compilation policy that prioritizes those likely to benefit most from optimization, ensuring the efficient use of resources and delivering performance gains.\nCompilation parameters\nDuring its lifetime, a single method can run under 5 different compilation levels (L0–L4). Transitions between the per-method compilation levels (L1–L4) in the JVM are controlled by a set of key parameters. These parameters dictate when a particular method is promoted to a higher level of optimization, which in turn influences both startup speed and long-term performance. Below are the most important ones:\n-XX:Tier3InvocationThreshold – The number of calls required to transition to L3. Default value: 2,000.\n-XX:Tier4InvocationThreshold – The number of calls required to transition to L4 (C2). Default value: 15,000.\n-XX:TieredOldPercentage – A somewhat mysterious parameter that significantly impacts startup speed. It specifies the percentage threshold after which a method is considered old and ceases to be prioritized, based on the length of the compilation queue. Default value: 1000.\nThese parameters influence how quickly methods transition between compilation levels. Compilation levels are normally upgraded, with the exceptions being cases of deoptimization or when the C2 compiler is overloaded. Lowering these parameters accelerates the progression of code through its compilation levels, effectively speeding up its “maturity.” However, this comes at the cost of increased overhead during application startup, as methods are compiled more frequently and at earlier stages.\nAnalyzing the startup of IntelliJ IDEA\nOne use case for the JITWatch4i plugin is analyzing an application’s startup. Let’s demonstrate this with an example of IntelliJ IDEA’s startup under different values of the -XX:TieredOldPercentage parameter. For simplicity, we’ll compare two tests: one with -XX:TieredOldPercentage=100000, which is the default value in IntelliJ IDEA, and another with -XX:TieredOldPercentage=1000, which is the default value in the JVM.\nTo analyze the startup, we need to run IntelliJ IDEA with parameters that generate compilation logs, which we will then load into JITWatch4.\nFor the first test, we set the following in idea64.vmoptions (the configuration of TieredOldPercentage is already in use):\n-XX:TieredOldPercentage=100000\n-XX:+UnlockDiagnosticVMOptions\n-XX:+LogCompilation\n-XX:LogFile=compilation_100k.log\nFor the second test, we set this in idea64.vmoptions:\n-XX:TieredOldPercentage=1000\n-XX:+UnlockDiagnosticVMOptions\n-XX:+LogCompilation\n-XX:LogFile=compilation_1k.log\nFor easier comparison, we use the following command to make IntelliJ IDEA run for the same amount of time in both cases:\ntimeout --kill-after=5 20 ./idea.sh\nWe load the compilation logs into JITWatch4i and compare them using the Timeline and Comp. Activity tabs.\nTimeline\nThe graph on the Timeline tab illustrates the L1–L4 compilations over time, with each line color representing a specific compilation level:\nBlack – Total compilations\nBlue – L1\nRed – L2\nMagenta – L3\nGreen – L4\n-XX:TieredOldPercentage=100000\n\n\n\n-XX:TieredOldPercentage=1000\n\n\n\nWhen comparing the charts, it’s clear that:\nWith -XX:TieredOldPercentage=100000, there are far more L2 (red line) compilations than with -XX:TieredOldPercentage=1000. Typically, a method follows the path L0 → L3 → L4 unless the C2 compiler is overloaded. When C2 is overloaded, a method may be compiled from L0 to L2 instead of to L3. Whether a method takes the L2 path or skips straight to L3 or L4 depends on how busy the C2 compiler is and whether the method is considered “old”.\nIf the compiler is overloaded, the method may go to L2.\nIf the method is old, L2 is skipped entirely and the method goes from L0 to L3 or L3 to L4.\nThe TieredOldPercentage parameter determines when a method is considered old by adjusting the JVM *Threshold parameters at which a method changes levels. Once a method is classified as old, the JVM stops routing it through L2. An issue arises, however, when the C2 compiler is overloaded and unable to accept new tasks, which means methods cannot graduate from L3 to L4, leaving them stuck at L3 for an extended period. This slows performance because L3 compilation involves collecting extensive statistics.\nThe charts show that for -XX:TieredOldPercentage=100000, the numbers of L3 and L4 compilations are almost the same. In this case, methods that do not progress to L4 remain in L2 instead of being promoted to or staying in the slower L3 code. L2 code is approximately 30% faster than L3 code, so this configuration avoids generating an excess of slower L3 methods. As a result, IntelliJ IDEA starts faster with this parameter.\nCompilation queue\n-XX:TieredOldPercentage=100000\n\n\n\n-XX:TieredOldPercentage=1000\n\n\n\nIn the Compiler Queues chart on the Comp.Activity tab, you can see the length of the compiler queue over time. Comparing them reveals that the -XX:TieredOldPercentage=1000 queue is initially more overloaded than the -XX:TieredOldPercentage=100000 queue.\nCompilation activity\n-XX:TieredOldPercentage=100000\n\n\n\n-XX:TieredOldPercentage=1000\n\n\n\nLet’s compare the lengths of individual method compilations in the Native Size chart on the Comp.Activity tab. The X-axis represents time, and the rectangles correspond to the compilation of individual methods. The height of a rectangle is proportional to the length of the resulting native method. It is apparent that the compilation of some methods in C2 is truly long. \nFurther gains may be achievable by postponing the compilation of methods in C2 that take a long time. Initial experiments suggest this does yield results. Though the improvements have only been marginal so far, further tweaking the set of postponed methods could boost them.\nConclusion\nJITWatch4i expands the capabilities of the original JITWatch through a plugin-based integration with IntelliJ IDEA, eliminating source-path setups and speeding up visualization for large projects. The example of IntelliJ IDEA’s startup under different -XX:TieredOldPercentage values shows how the JVM balances quick-to-compile L2 code versus slower but highly optimized L4 code. Using the analysis in JITWatch4i, these optimization steps become transparent, allowing you to understand the impact of your settings and ultimately leading to more informed performance tuning and faster startup times.\nReferences:\nJITWatch4i\nJITWatch",
        "dc:creator": "Vladimir Dvorak",
        "content": "Introduction A typical Java or Kotlin programmer spends most of their productive time either creating application code in an editor or searching for bugs in a debugger. Occasionally, they might dive into a profiler when looking for places where the application spends too much time. However, they almost never venture into the Java C1 or [&#8230;]",
        "contentSnippet": "Introduction A typical Java or Kotlin programmer spends most of their productive time either creating application code in an editor or searching for bugs in a debugger. Occasionally, they might dive into a profiler when looking for places where the application spends too much time. However, they almost never venture into the Java C1 or […]",
        "guid": "https://blog.jetbrains.com/?post_type=platform&p=541247",
        "categories": [
          "idea",
          "jetbrains-runtime",
          "intellij-idea",
          "intellij-platform",
          "performance-profiling"
        ],
        "isoDate": "2025-01-29T11:40:05.000Z"
      },
      {
        "creator": "Roman Pronskiy",
        "title": "PHP Annotated – January 2025",
        "link": "https://blog.jetbrains.com/phpstorm/2025/01/php-annotated-january-2025/",
        "pubDate": "Wed, 29 Jan 2025 11:26:50 +0000",
        "content:encodedSnippet": "@media (min-width: 769px) { main .article-section .content ul:not([class]):not([id]) li ul:not([class]):not([id]) { margin-top: 0; margin-bottom: 24px; } } main .article-section .content ul:not([class]):not([id]) li, main .article-section .content ul:not([class]):not([id]) > li {padding-bottom: 18px;}  main .article-section .content ul:not([class]):not([id]) li ul:not([class]):not([id]) li {padding-bottom: 0;} img.alignico {margin-right: 10px;margin-top: 5px;float: left;}  summary {display: list-item;cursor: pointer;font-style: italic; } section.article-section a {color: #7755f3} code {color: red;} #roman-pronskiy,.copy-heading:has(#roman-pronskiy){margin-top: 0;} main li a[href^=\"https://github.com\"]:before {background: no-repeat 2px center url(data:image/svg+xml;utf8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxNCIgaGVpZ2h0PSIxNCIgZmlsbD0ibm9uZSIgdmlld0JveD0iMCAwIDMyIDMyIj48cGF0aCBmaWxsPSIjMjQyOTJFIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiIGQ9Ik0xNiAwYTE2IDE2IDAgMCAwLTUgMzEuMmMuNy4xIDEtLjQgMS0uOHYtM2MtNCAuOC01LTEtNS40LTEuOC0uMS0uNS0xLTItMS42LTIuMy0uNi0uMy0xLjQtMSAwLTEgMS4yIDAgMi4xIDEuMSAyLjQgMS42IDEuNSAyLjQgMy44IDEuNyA0LjcgMS4zLjEtMSAuNi0xLjcgMS0yLjEtMy41LS40LTcuMy0xLjgtNy4zLTggMC0xLjcuNy0zLjEgMS43LTQuMi0uMi0uNC0uNy0yIC4xLTQuMyAwIDAgMS40LS40IDQuNCAxLjdhMTQuOCAxNC44IDAgMCAxIDggMGMzLjEtMi4xIDQuNC0xLjcgNC40LTEuNyAxIDIuMi40IDMuOS4yIDQuM2E2IDYgMCAwIDEgMS42IDQuM2MwIDYuMS0zLjcgNy41LTcuMyA3LjkuNi41IDEuMSAxLjQgMS4xIDN2NC4zYzAgLjQuMyAxIDEuMS44QTE2IDE2IDAgMCAwIDE2IDBaIiBjbGlwLXJ1bGU9ImV2ZW5vZGQiLz48L3N2Zz4=);content: \"\";padding-left: 20px;} main li a[href^=\"https://www.youtube.com\"]:before {background: no-repeat 0px center url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='100%25' version='1.1' viewBox='0 0 68 48' width='100%25'%3E%3Cpath class='ytp-large-play-button-bg' d='m .66,37.62 c 0,0 .66,4.70 2.70,6.77 2.58,2.71 5.98,2.63 7.49,2.91 5.43,.52 23.10,.68 23.12,.68 .00,-1.3e-5 14.29,-0.02 23.81,-0.71 1.32,-0.15 4.22,-0.17 6.81,-2.89 2.03,-2.07 2.70,-6.77 2.70,-6.77 0,0 .67,-5.52 .67,-11.04 l 0,-5.17 c 0,-5.52 -0.67,-11.04 -0.67,-11.04 0,0 -0.66,-4.70 -2.70,-6.77 C 62.03,.86 59.13,.84 57.80,.69 48.28,0 34.00,0 34.00,0 33.97,0 19.69,0 10.18,.69 8.85,.84 5.95,.86 3.36,3.58 1.32,5.65 .66,10.35 .66,10.35 c 0,0 -0.55,4.50 -0.66,9.45 l 0,8.36 c .10,4.94 .66,9.45 .66,9.45 z' fill='%23FF0000' fill-opacity='0.81'%3E%3C/path%3E%3Cpath d='m 26.96,13.67 18.37,9.62 -18.37,9.55 -0.00,-19.17 z' fill='%23fff'%3E%3C/path%3E%3Cpath d='M 45.02,23.46 45.32,23.28 26.96,13.67 43.32,24.34 45.02,23.46 z' fill='%23ccc'%3E%3C/path%3E%3C/svg%3E\"); content: \"\";padding-left: 18px;background-size: 16px;}\nWelcome to the January edition of PHP Annotated! This recap is carefully handcrafted and brings you the most interesting developments in the PHP community over the past couple of months, so you don’t have to sift through the noise, we’ve done it for you.\nHighlights\nPHP 8.4\n        PHP 8.4 was officially released on November 21, 2024, and by now, version 8.4.3 is already available.\n        This major language update brings many new features, such as property hooks, asymmetric visibility, an updated DOM API, performance improvements, bug fixes, and general code cleanup.\n        If you want to learn more about all the goodies in the release, visit php.watch and stitcher.io.\n        There are also some lesser known improvements that you can learn more about from the Tideways blog:\nPHP 8.4 improves Closure Naming for simplified debugging.\nWhat’s new in PHP 8.4 in terms of performance, debugging, and operations.\n        Install or upgrade to PHP 8.4\nWindows: Compiled binaries available at windows.php.net.\nFedora/RHEL/CentOS: Available as a software collection (php84) from the Remi repo.\nmacOS: PHP 8.4 can be installed via Homebrew using the shivammathur/homebrew-php tap.\nDocker: PHP 8.4 images are now available on Docker Hub with 8.4 tags.\nHerd also comes with PHP 8.4 supported.\n        Watch a 📺 Celebrating PHP 8.4 stream with Nicolas, Brent, and Roman:\n\n    \nPHP 8.2 goes in security-fixes-only phase\n        Starting this year, PHP versions now follow a four-year support timeline: two years of active support followed by two years of security fixes.\n        For PHP 8.1 security patches will be provided until December 31, 2025, while PHP 8.2 will be maintained until December 31, 2026. The recent PHP 8.2.27 release marked the end of its active support phase.\n    \nPHPStan 2.0 has been released\n        This update introduces Level 10 code analysis with stricter handling of mixed types, and adds support for the List type. You can also expect reduced memory consumption and improved performance.\n        Markus Staab shares interesting technical insights about improving PHPStan:\nA mixed type PHPStan journey, PHPStan performance on different hardware, My new PHPStan focus: multi-phpversion support.\n    \n🎂 The PHP Foundation turned three\n\n        The PHP Foundation was established three years ago. Over the past year, the PHP Foundation has supported the work of ten core developers, and made a significant contribution to the PHP language.\n        Consider supporting the PHP Foundation via OpenCollective or GitHub Sponsors.\n        The PHP Foundation has been also active with developments:\nPHP 8.4: How Property Hooks Happened – Larry Garfield details the decade-long journey of implementing Property Hooks in PHP 8.4.\nThe PHP Installer for Extensions php/pie reached version 0.5!\nPie: new extension installer for PHP post by Grzegorz Korba.\n            \nRector 2.0\n5 new features.\n    \nFrankenPHP 1.3\nConductor – Automatic dependency updates for Composer\nYou can now run code examples directly on the php.net website\nPHP Core\n✅ RFC: Add persistent curl share handles\n\n        PHP 8.5 will bring a new function curl_share_init_persistent(), which would allow cURL handles to be stored in global memory and reused in subsequent requests.\n        Persistence allows PHP scripts to eliminate the overhead of establishing a connection (and DNS lookups, SSL session IDs, etc.) and can improve performance and reliability.\n    \n✅ RFC: Support Closures in constant expressions\n        In PHP 8.5 it will be possible to use closures in previously\nIn attribute parameters,\nAs default values of properties and parameters.\nConstants and class constants.\n✅ RFC: Attributes on Constants\n        Attributes were first introduced in the RFC: Attributes v2. Daniel Scherzer proposes to add support for attributes on compile-time non-class constants.\n✅ RFC: Error Backtraces v2\n\n        Previously, unlike exceptions, PHP errors did not provide backtraces, which made it difficult to figure out their underlying cause. PHP 8.5 will come with a new ini setting fatal_error_backtraces=1 which will generate detailed error messages and trace for E_ERRORs.\n    \n📣 RFC: Records vs. RFC: Data Class vs. RFC: Structs\n        Apparently, there is a big interest in the community to add a simple native way of creating Value Objects in PHP.\n        Which one would you prefer?\n    \n\n    \nTools\nringPHP/php-mrloop – A PHP port of the mrloop eventware designed to harness the powers of io_uring. Read an Introducing ext-mrloop blog post to learn why io_ring is better than select(), poll(), and epoll() async io implementations.\nloupe-php/loupe – A full text search engine with tokenization, stemming, typo tolerance, filters, and geo support based on only PHP and SQLite.\ntwigstan/twigstan – TwigStan is a static analyzer for Twig templates powered by PHPStan.\nazjezz/psl – A modern, consistent, centralized, well-typed, non-blocking set of APIs for PHP programmers.\nFull LAMP Sandbox – (PHP + WebServer + DB) running 100% inside your browser.\ncarthage-software/mago – A toolchain for PHP that aims to provide a set of tools to help developers write better code. Built in Rust.\nsmoqadam/pvm – A simple bash script to manage multiple PHP versions on Linux and macOS.\ntnylea/php-ext – A Chrome extension to show PHP (Laravel) devtools console.\nphikiphp/phiki – Syntax highlighting powered by TextMate grammars in PHP.\ncoduo/php-humanizer – A useful tool to transform different strings and numbers to human-readable form.\nRoadRunner v2024.3.0 – The PHP application server got a major update with auto workers scaling.\nAI\necholabsdev/prism – A unified interface for working with LLMs in Laravel. Supports Anthropic, DeepSeek, Gemini, Groq, Mistral, Ollama, OpenAI, and xAI APIs.\n        Also extensible with jordan-price/toolbox.\n    \nCodeWithKyrian/whisper.php – Local Speech to Text in PHP made easy thanks to Whisper.cpp and OpenAI.\ndeepseek-php/deepseek-php-client – Supercharged community-maintained PHP API client that allows you to interact with deepseek API.\nPhpStorm\nPhpStorm 2024.3 is now available\n\n        The new PhpStorm comes with full PHP 8.4 support, inline AI prompts, Laravel Herd support.\n        Support for .env files is now built into PhpStorm. Previously it required installing a separate plugin.\n        JetBrains also announced a closed beta for Junie, AI Coding Agent for IDEs.\n    \nMetaStorm – This plugin allows extending PhpStorm’s behaviour and adding support for your custom frameworks with a few lines in a config file. It unlocks both references and autocompletion at regular places such as method($object,\n), render(), etc.\n    \nbuggregator/phpstorm-plugin – This plugin works in the pair with buggregator/trap and allows dumping and debugging PHP projects just inside the IDE. Supports VarDumper server, Xhprof profiler, local SMTP server, local Sentry, and much more.\nCron & Crontab Support Plugin\n    \nFrameworks\nSymfony 7.2.0 has been released\nLiving on the Edge category on this blog to learn about the main features of this new stable release.\n    \nDrupal CMS\nDrupal Starshot Initiative, Drupal CMS is the new way of creating web apps based on Drupal with no-code building experience.\n    \nthedevdojo/wave – The SaaS starter kit based on Laravel.\nWordPress as a git repo by Adam Zieliński – A promising addition that might be landed in WordPress core, allowing using markdown files as a backend for WordPress site.\nHow Geocodio keeps 300M addresses up to date with Laravel and SQLite.\nNaoray/laravel-github-monolog – Laravel log Channel for GitHub issues.\nMisc\nBuilding Maintainable PHP Applications: Data Transfer Objects by Davor Minchorov.\nPlaytime with PHP Attributes by Pete Wond.\nWhy Final Classes make Rector and PHPStan more powerful by Tomas Votruba.\nProperty Hooks in PHP 8.4: Game Changer or Hidden Trap? by David Grudl.\nPHP version stats: January, 2025 by Brent.\nUnleash: Feature flags in PHP by Dominik Chrástecký.\nThe Dangers of PHP’s unserialize and How to stay safe by Sheikh Heera.\nStop using Pseudo-Types by Frédéric Bouchery.\nImporting 1.7 billion rows of CSV data from Stripe by Jon Purvis.\nazjezz/php-pretty-diff – A nice demo repository on how to use Rust code in a PHP project with FFI.\n# symbol in comments and attributes in PHP!\n\n    \nConferences\nThese PHP events are all worth a visit, and some are still accepting presentation proposals:\nLaracon EU 2025 – Amsterdam, The Netherlands, February 3–4.\nPHP UK Conference 2025 – London, UK, February 19.\nLaracon India 2025 – Ahmedabad, India, March 8–9. CFP\n    \nPHP Conference Odawara 2025 – Japan, April 12.\nphp[tek] 2025 – Chicago, IL, USA, May 20–22.\nPHPers Summit 2025 – Poznań, Poland, May 24–25. CFP\n    \nSummer Camp – Opatija, Croatia, July 3–5. CFP 🆕\nTo find a PHP meetup happening near you, check out the calendar on php.net.\nFun\n\n    \n\n    \nIf you have any interesting or useful links to share via PHP Annotated, please leave a comment on this post or let us know on X/Twitter.\nSubscribe to PHP Annotated\nRoman Pronskiy\nDeveloper Advocate at @PhpStorm, Executive Director at @The PHP Foundation.\nTwitter | GitHub",
        "dc:creator": "Roman Pronskiy",
        "content": "Welcome to the January edition of PHP Annotated! This recap is carefully handcrafted and brings you the most interesting developments in the PHP community over the past couple of months, so you don’t have to sift through the noise, we’ve done it for you. Highlights PHP 8.4 PHP 8.4 was officially released on November 21, [&#8230;]",
        "contentSnippet": "Welcome to the January edition of PHP Annotated! This recap is carefully handcrafted and brings you the most interesting developments in the PHP community over the past couple of months, so you don’t have to sift through the noise, we’ve done it for you. Highlights PHP 8.4 PHP 8.4 was officially released on November 21, […]",
        "guid": "https://blog.jetbrains.com/?post_type=phpstorm&p=541415",
        "categories": [
          "news",
          "laravel",
          "php",
          "php-8-3",
          "php-8-4",
          "php-annotated-monthly",
          "rfc",
          "symfony"
        ],
        "isoDate": "2025-01-29T11:26:50.000Z"
      },
      {
        "creator": "Evgenia Verbina",
        "title": "An Introduction to Django Views",
        "link": "https://blog.jetbrains.com/pycharm/2025/01/django-views/",
        "pubDate": "Wed, 29 Jan 2025 10:51:08 +0000",
        "content:encodedSnippet": "Views are central to Django’s architecture pattern, and having a solid grasp of how to work with them is essential for any developer working with the framework. If you’re new to developing web apps with Django or just need a refresher on views, we’ve got you covered. \nGaining a better understanding of views will help you make faster progress in your Django project. Whether you’re working on an API backend or web UI flows, knowing how to use views is crucial.\nRead on to discover what Django views are, their different types, best practices for working with them, and examples of use cases.\nWhat are Django views?\nViews are a core component of Django’s MTV (model-template-view) architecture pattern. They essentially act as middlemen between models and templates, processing user requests and returning responses.\nYou may have come across views in the MVC (model-view-controller) pattern. However, these are slightly different from views in Django and don’t translate exactly. Django views are essentially controllers in MVC, while Django templates roughly align with views in MVC. This makes understanding the nuances of Django views vital, even if you’re familiar with views in an MVC context.\nViews are part of the user interface in Django, and they handle the logic and data processing for web requests made to your Django-powered apps and sites. They render your templates into what the user sees when they view your webpage. Each function-based or class-based view takes a user’s request, fetches the data from its models, applies business logic or data processing, and then prepares and returns an HTTP response to a template.\nThis response can be anything a web browser can display and is typically an HTML webpage. However, Django views can also return images, XML documents, redirects, error pages, and more.\nRendering and passing data to templates\nDjango provides the render() shortcut to make template rendering simple from within views. Using render() helps avoid the boilerplate of loading the template and creating the response manually.\nPyCharm offers smart code completion that automatically suggests the render() function from django.shortcuts when you start typing it in your views. It also recognizes template names and provides autocompletion for template paths, helping you avoid typos and errors.\nThe user provides the request, the template name, and a context dictionary, which gives data for the template. Once the necessary data is obtained, the view passes it to the template, where it can be rendered and presented to the user.\nfrom django.shortcuts import render\n\ndef my_view(request):\n    # Some business logic to obtain data\n    data_to_pass = {'variable1': 'value1', 'variable2': 'value2'}\n\n    # Pass the data to the template\n    return render(request, 'my_template.html', context=data_to_pass)\nIn this example, data_to_pass is a dictionary containing the data you want to send to the template. The render function is then used to render the template (my_template.html) with the provided context data.\nNow, in your template (my_template.html), you can access and display the data.\n<!DOCTYPE html>\n<html>\n<head>\n    <title>My Template</title>\n</head>\n<body>\n    <h1>{{ variable1 }}</h1>\n    <p>{{ variable2 }}</p>\n</body>\n</html>\nIn the template, you use double curly braces ({{ }}) to indicate template variables. These will be replaced with the values from the context data passed by the view.\nPyCharm offers completion and syntax highlighting for Django template tags, variables, and loops. It also provides in-editor linting for common mistakes. This allows you to focus on building views and handling logic, rather than spending time manually filling in template elements or debugging common errors.\n\n\n\n    \nStart with PyCharm Pro for free\n                                                    \nFunction-based views\nDjango has two types of views: function-based views and class-based views.\nFunction-based views are built using simple Python functions and are generally divided into four basic categories: create, read, update, and delete (CRUD). This is the foundation of any framework in development. They take in an HTTP request and return an HTTP response.\nfrom django.http import HttpResponse\n\ndef my_view(request):\n\n    # View logic goes here\n    context = {\"message\": \"Hello world\"}\n\n    return HttpResponse(render(request, \"mytemplate.html\", context))\nThis snippet handles the logic of the view, prepares a context dictionary for passing data to a template that is rendered, and returns the final template HTML in a response object.\nFunction-based views are simple and straightforward. The logic is contained in a single Python function instead of spread across methods in a class, making them most suited to use cases with minimal processing.\nPyCharm allows you to automatically generate the def my_view(request) structure using live templates. Live templates are pre-defined code snippets that can be expanded into boilerplate code. This feature saves you time and ensures a consistent structure for your view definitions.\nYou can invoke live templates simply by pressing ⌘J, typing Listview, and pressing the tab key. \n\n\n\n\nMoreover, PyCharm includes a Django Structure tool window, where you can see a list of all the views in your Django project, organized by app. This allows you to quickly locate views, navigate between them, and identify which file each view belongs to.\n\n\n\n\nClass-based views\nDjango introduced class-based views so users wouldn’t need to write the same code repeatedly. They don’t replace function-based views but instead have certain applications and advantages, especially in cases where complex logic is required.\nClass-based views in Django provide reusable parent classes that implement various patterns and functionality typically needed by web application views. You can take your views from these parent classes to reduce boilerplate code. \nClass-based views offer generic parent classes like:\nListView\nDetailView\nCreateView\nAnd many more.\nBelow are two similar code snippets demonstrating a simple BookListView. The first shows a basic implementation using the default class-based conventions, while the second illustrates how you can customize the view by specifying additional parameters. \nBasic implementation: \nfrom django.views.generic import ListView\nfrom .models import Book \n\nclass BookListView(ListView):\n    model = Book\n    # The template_name is omitted because Django defaults to 'book_list.html' \n    # based on the convention of <model_name>_list.html for ListView.\nWhen BookListView gets rendered, it automatically queries the Book records and passes them under the variable books when rendering book_list.html. This means you can create a view to list objects quickly without needing to rewrite the underlying logic.\nCustomized implementation:\nfrom django.views.generic import ListView\nfrom .models import Book \n\nclass BookListView(ListView):\n\n    model = Book\n\t# You can customize the view further by adding additional attributes or methods \n    def get_queryset(self):\n\t# Example of customizing the queryset to filter books\n\treturn Book.objects.filter(is_available=True)\nIn the second snippet, we’ve introduced a custom get_queryset() method, allowing us to filter the records displayed in the view more precisely. This shows how class-based views can be extended beyond their default functionality to meet the needs of your application. \nClass-based views also define methods that tie into key parts of the request and response lifecycle, such as: \nget() – logic for GET requests.\npost() – logic for POST requests.\ndispatch() – determines which method to call get() or post().\nThese types of views provide structure while offering customization where needed, making them well-suited to elaborate use cases.\nPyCharm offers live templates for class-based views like ListView, DetailView, and TemplateView, allowing you to generate entire view classes in seconds, complete with boilerplate methods and docstrings.\n\n\n\n\nCreating custom class-based views\nYou can also create your own view classes by subclassing Django’s generic ones and customizing them for your needs. \nSome use cases where you might want to make your own classes include:\nAdding business logic, such as complicated calculations.\nMixing multiple generic parents to blend functionality.\nManaging sessions or state across multiple requests.\nOptimizing database access with custom queries. \nReusing common rendering logic across different areas. \nA custom class-based view could look like this:\nfrom django.views.generic import View\nfrom django.shortcuts import render\nfrom . import models\n\nclass ProductSalesView(View):\n\n    def get(self, request):\n     \n        # Custom data processing \n        sales = get_sales_data()\n        \n        return render(request, \"sales.html\", {\"sales\": sales})\n\n    def post(self, request):\n\n        # Custom form handling\n        form = SalesSearchForm(request.POST)  \n        if form.is_valid():\n            results = models.Sale.objects.filter(date__gte=form.cleaned_data['start_date'])\n            context = {\"results\": results}\n            return render(request, \"search_results.html\", context)\n            \n        # Invalid form handling\n        errors = form.errors\n        return render(request, \"sales.html\", {\"errors\": errors})\nHere, custom get and post handlers enable you to extend the existing ones between requests.\nWhen to use each view type\nFunction-based and class-based views can both be useful depending on the complexity and needs of the view logic. \nThe main differences are that class-based views:\nPromote reuse via subclassing and parents inheriting behavior.\nAre ideal for state management between requests.\nProvide more structure and enforced discipline.\nYou might use them working with:\nDashboard pages with complex rendering logic. \nPublic-facing pages that display dynamic data.\nAdmin portals for content management.\nList or detail pages involving database models.\nOn the other hand, function-based views:\nAre simpler and take less code to create.\nCan be easier for Python developers to grasp.\nAre highly flexible and have fewer constraints.\nTheir use cases include: \nPrototyping ideas.\nSimple CRUD or database views.\nLanding or marketing pages. \nAPI endpoints for serving web requests.\nIn short, function-based views are flexible, straightforward, and are easier to reason about. However, for more complex cases, you’ll need to create more code that you can’t reuse.\nClass-based views in Django enforce structure and are reusable, but they can be more challenging to understand and implement, as well as harder to debug.\nViews and URLs\nAs we’ve established, in Django, views are the functions or classes that determine how a template is rendered. Each view links to a specific URL pattern, guiding incoming requests to the right place.\nUnderstanding the relationship between views and URLs is important for managing your application’s flow effectively. \nEvery view corresponds with a URL pattern defined in your Django app’s urls.py file. This URL mapping ensures that when a user navigates to a specific address in your application, Django knows exactly which view to invoke. \nLet’s take a look at a simple URL configuration: \nfrom django.urls import path\nfrom .views import BookListView\n\nurlpatterns = [\n    path('books/', BookListView.as_view(), name='book-list'),\n]\nIn this setup, when a user visits /books/, the BookListView kicks in to render the list of books. By clearly mapping URLs to views, you make your codebase easier to read and more organized.\nSimplify URL management with PyCharm\nManaging and visualizing endpoints in Django can become challenging as your application grows. PyCharm addresses this with its Endpoints tool window, which provides a centralized view of all your app’s URL patterns, linked views, and HTTP methods. This feature allows you to see a list of every endpoint in your project, making it easier to track which views are tied to specific URLs. \nInstead of searching through multiple urls.py files, you can instantly locate and navigate to the corresponding views with just a click. This is especially useful for larger Django projects where URL configurations span multiple files or when working in teams where establishing context quickly is crucial.\nFurthermore, the Endpoints tool window lets you visualize all endpoints in a table-like interface. Each row displays the URL path, the HTTP method (GET, POST, etc.), and the associated view function or class of a given endpoint. \nThis feature not only boosts productivity but also improves code navigation, allowing you to spot missing or duplicated URL patterns with ease. This level of visibility is invaluable for debugging routing issues or onboarding new developers to a project.\nCheck out this video for more information on the Endpoints tool window and how you can benefit from it. \n\n\n\n\n\n\nBest practices for using Django views\nHere are some guidelines that can help you create well-structured and maintainable views.\nKeep views focused\nViews should concentrate on handling requests, fetching data, passing data to templates, and controlling flow and redirects. Complicated business logic and complex processing should happen elsewhere, such as in model methods or dedicated service classes. \nHowever, you should be mindful not to overload your models with too much logic, as this can lead to the “fat model” anti-pattern in Django. Django’s documentation on views provides more insights about structuring them properly. \nKeep views and templates thin\nIt’s best to keep both views and templates slim. Views should handle request processing and data retrieval, while templates should focus on presentation with minimal logic.\nComplex processing should be done in Python outside the templates to improve maintainability and testing. For more on this, check out the Django templates documentation.\nDecouple database queries\nExtracting database queries into separate model managers or repositories instead of placing them directly in views can help reduce duplication. Refer to the Django models documentation for guidance on managing database interactions effectively. \nUse generic class-based views when possible\nDjango’s generic class-based views, like DetailView and ListView, provide reusability without requiring you to write much code. Opt for using them over reinventing the wheel to make better use of your time. The generic views documentation is an excellent resource for understanding these features. \nFunction-based views are OK for simple cases\nFor basic views like serving APIs, a function can be more effective than a class. Reserve complex class-based views for intricate UI flows. The writing views documentation page offers helpful examples.\nStructure routes and URLs cleanly\nOrganize routes and view handlers by grouping them into apps by functionality. This makes it easier to find and navigate the source. Check out the Django URL dispatcher documentation for best practices in structuring your URL configurations. \nNext steps \nNow that you have a basic understanding of views in Django, you’ll want to dig deeper into the framework and other next steps.\nBrush up on your Django knowledge with our How to Learn Django blog post, which is ideal for beginners or those looking to refresh their expertise.\nDiscover how to create and run your first Django project in PyCharm, with our tutorial on crafting a basic to-do application, or explore our complete list of Django project ideas for further inspiration. \nExplore the state of Django to see the latest trends in Django development for further inspiration.\nIf you’re still deciding which Python framework to use, our Django vs. Flask and Django vs. FastAPI comparison guides can help.\nDjango support in PyCharm\nPyCharm Professional is the best-in-class IDE for Django development. It allows you to code faster with Django-specific code assistance, project-wide navigation and refactoring, and full support for Django templates. You can connect to your database in a single click and work on TypeScript, JavaScript, and frontend frameworks. PyCharm also supports Flask and FastAPI out of the box. \nCreate better applications and streamline your code. Get started with PyCharm now for an effortless Django development experience.\nStart with PyCharm Pro for free",
        "dc:creator": "Evgenia Verbina",
        "content": "Views are central to Django’s architecture pattern, and having a solid grasp of how to work with them is essential for any developer working with the framework. If you’re new to developing web apps with Django or just need a refresher on views, we’ve got you covered.&#160; Gaining a better understanding of views will help [&#8230;]",
        "contentSnippet": "Views are central to Django’s architecture pattern, and having a solid grasp of how to work with them is essential for any developer working with the framework. If you’re new to developing web apps with Django or just need a refresher on views, we’ve got you covered.  Gaining a better understanding of views will help […]",
        "guid": "https://blog.jetbrains.com/?post_type=pycharm&p=540782",
        "categories": [
          "how-tos",
          "web-development",
          "django"
        ],
        "isoDate": "2025-01-29T10:51:08.000Z"
      }
    ]
  },
  {
    "name": "Airbnb Engineering & Data Science",
    "category": "기업",
    "posts": []
  },
  {
    "name": "PayPal Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Dominic Nahous",
        "title": "Customizing collapsed text Indicators",
        "link": "https://devblogs.microsoft.com/visualstudio/customizing-collapsed-text-indicators/",
        "pubDate": "Thu, 30 Jan 2025 19:03:06 +0000",
        "content:encodedSnippet": "Visual Studio 2022 introduces new options for customizing the collapsed text indicator, which helps in distinguishing between different sections of collapsed text in the editor. This aims to make the coding environment more intuitive and easier to use by providing additional customization for visual cues.\n\nCustomizing your coding environment\nYou can now personalize the color and background of the editor’s collapsed text indicator independently by setting custom colors for both the collapsed and expanded text indicators. This feature can be accessed via the Tools > Options > Environment > Fonts and Colors menu.\n\nThe two new entries in the Test Editor settings list that control the color of the collapsed text indicator are:\nCollapsed Text Indicator (Collapsed)\nCollapsed Text Indicator (Expanded)\nIn addition to customizing the collapsed and expanded colors separately, both the foreground and background colors for these indicators can be set independently from one another.\nConclusion\nThis new customization feature in Visual Studio 2022 enhances the coding environment by providing clear visual distinctions between different sections of code, making it easier to navigate and manage.\nThe post Customizing collapsed text Indicators appeared first on Visual Studio Blog.",
        "dc:creator": "Dominic Nahous",
        "content": "<p>Visual Studio 2022 introduces new options for customizing the collapsed text indicator, which helps in distinguishing between different sections of collapsed text in the editor. This aims to make the coding environment more intuitive and easier to use by providing additional customization for visual cues. Customizing your coding environment You can now personalize the color [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/customizing-collapsed-text-indicators/\">Customizing collapsed text Indicators</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Visual Studio 2022 introduces new options for customizing the collapsed text indicator, which helps in distinguishing between different sections of collapsed text in the editor. This aims to make the coding environment more intuitive and easier to use by providing additional customization for visual cues. Customizing your coding environment You can now personalize the color […]\nThe post Customizing collapsed text Indicators appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=252226",
        "categories": [
          "Accessibility",
          "Visual Studio",
          "UI Design"
        ],
        "isoDate": "2025-01-30T19:03:06.000Z"
      },
      {
        "creator": "Aaron Yim",
        "title": "Iterate across multiple files more efficiently with GitHub Copilot Edits (Preview)",
        "link": "https://devblogs.microsoft.com/visualstudio/iterate-across-multiple-files-more-efficiently-with-github-copilot-edits-preview/",
        "pubDate": "Tue, 28 Jan 2025 13:00:58 +0000",
        "content:encodedSnippet": "GitHub Copilot Edits (Preview) in Visual Studio 2022 combines the conversational flow of chat and an inline review experience to help you iterate across your codebase with more control and efficiency.\n Here’s how Copilot Edits helps with iterating across multiple files:\nPreview with clarity: Review a clear summary that highlights affected files and proposed changes.\nReview with flow: View code diffs inline, directly in your editor. Either the TAB key to accept and Alt+Del keys to reject individual changes, or apply/dismiss all at once.\nIterate with confidence: Use checkpoints to revisit earlier iterations of a code file or try an alternative approach anytime for novel ideas.\ndocument.createElement('video');\nhttps://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/01/edits-final-_-jan-16-_-captions.mp4\n\nAvailable in Visual Studio 2022 Preview\nCopilot Edits is available in versions 17.13 Preview 3 and later of Visual Studio 2022.\nTo use Copilot Edits, sign in to Visual Studio 2022 with a GitHub account that has access to Copilot, now available to all users with Copilot Free.\nGet Visual Studio 2022 Preview\n\nGet started with GitHub Copilot Edits in Visual Studio\nStart an Edits thread: In the Copilot Chat window, click the Edits thread button (a “+” symbol with a pencil icon).\nDescribe your changes: Use natural language to describe your edits, just as you would in Copilot Chat.\nSpecify context or let Copilot discover: Copilot Edits will automatically consider your current file, open files, or search for related files across your codebase. You can also specify context using # commands like #errors, #file, #solution.\n\nFor more details on how to use Copilot Edits, visit our documentation.\nWe appreciate your feedback\nYour feedback is invaluable for helping us improve Copilot Edits – please share with us on the Developer Community ticket for Copilot Edits or the Send Feedback button in Visual Studio.\nThe post Iterate across multiple files more efficiently with GitHub Copilot Edits (Preview) appeared first on Visual Studio Blog.",
        "enclosure": {
          "url": "https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/01/edits-final-_-jan-16-_-captions.mp4",
          "length": "13169216",
          "type": "video/mp4"
        },
        "dc:creator": "Aaron Yim",
        "content": "<p>GitHub Copilot Edits (Preview) in Visual Studio 2022 combines the conversational flow of chat and an inline review experience to help you iterate across your codebase with more control and efficiency. 💡 Here’s how Copilot Edits helps with iterating across multiple files: Preview with clarity: Review a clear summary that highlights affected files and proposed [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/iterate-across-multiple-files-more-efficiently-with-github-copilot-edits-preview/\">Iterate across multiple files more efficiently with GitHub Copilot Edits (Preview)</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "GitHub Copilot Edits (Preview) in Visual Studio 2022 combines the conversational flow of chat and an inline review experience to help you iterate across your codebase with more control and efficiency. 💡 Here’s how Copilot Edits helps with iterating across multiple files: Preview with clarity: Review a clear summary that highlights affected files and proposed […]\nThe post Iterate across multiple files more efficiently with GitHub Copilot Edits (Preview) appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=252165",
        "categories": [
          "Visual Studio",
          "#Githubcopilot",
          "Conversational AI",
          "Copilot",
          "GitHub Copilot",
          "GitHub Copilot Chat",
          "Visual Studio 2022"
        ],
        "isoDate": "2025-01-28T13:00:58.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김범진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": [
      {
        "title": "생성AI, LLM, AI Agent와 그래픽, 디자인, 미디어아트 관련 자료 소개",
        "link": "http://daddynkidsmakers.blogspot.com/2025/01/ai-llm-ai-agent.html",
        "pubDate": "2025-01-27T07:33:00.000Z",
        "author": "Daddy Maker",
        "content": "<div style=\"text-align: left;\">이 글은&nbsp;생성AI, LLM, AI Agent와 그래픽, 디자인, 미디어아트에 관한 자료를 정리한 것이다. 관련 도구 및 예제는 다음 링크에 자세히 설명하였으니 참고한다.</div><div style=\"text-align: left;\"><ul style=\"text-align: left;\"><li><a href=\"https://github.com/mac999/llm-media-art-demo\">mac999/llm-media-art-demo</a></li></ul></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEiMKcSoz0KlxzRwrACD4ETJ_QVTgPHuSnwdZlGSPua6ThFYmOv7iDT91VuO3YhrlOJbEQeUb_lTcmP6k2sdNsxK4pYUNXSsHPgq2qKyz-HH9goSHU72R0sugMX_cF2iVs5-KVFySG2r0cuomWH5Xcl05ouP1bc5ERcVCXe-zN5d5i2JYaZZJjFALLCJLafL\" style=\"font-weight: 700; margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"1440\" data-original-width=\"2557\" height=\"180\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEiMKcSoz0KlxzRwrACD4ETJ_QVTgPHuSnwdZlGSPua6ThFYmOv7iDT91VuO3YhrlOJbEQeUb_lTcmP6k2sdNsxK4pYUNXSsHPgq2qKyz-HH9goSHU72R0sugMX_cF2iVs5-KVFySG2r0cuomWH5Xcl05ouP1bc5ERcVCXe-zN5d5i2JYaZZJjFALLCJLafL\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">프롬프트에서 생성된 그래픽스 예시</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div><div style=\"text-align: left;\"><b>Blender LLM 기반 그래픽 모델링 관련 자료</b></div><div style=\"text-align: left;\">LLM, ollama, Blender python library 등을 이용하면, 프롬프트를 입력해, 3차원 모델을 자동 생성할 수 있다. 다음은 관련 예시를 보여준다.&nbsp;</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEi6CLm9igiCylVoCqTR431R5bSX8Epow6C5JiGbmvWN6930ZJF6sA4iRd7mg1VADjfXJ1muLKBNaEx86oWT0hgWMtYJVGNuD9RK_pG6pNp_UhW9jaIIkRmoghXvakx9__Ts3YE9mO700lLBrTU_HV2E02Yihzl4CTobM7quYUP-TvYRbUf6fAylyY7ZZMD1\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"1435\" data-original-width=\"2560\" height=\"224\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEi6CLm9igiCylVoCqTR431R5bSX8Epow6C5JiGbmvWN6930ZJF6sA4iRd7mg1VADjfXJ1muLKBNaEx86oWT0hgWMtYJVGNuD9RK_pG6pNp_UhW9jaIIkRmoghXvakx9__Ts3YE9mO700lLBrTU_HV2E02Yihzl4CTobM7quYUP-TvYRbUf6fAylyY7ZZMD1=w400-h224\" width=\"400\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEhGc2wKcxfapMoAJ8Jg_aTBXJuSiwY3QliRlFCkUxiBbPrjzalCigQJDYg8CnZ4sXQbnVYSxNoDMvX7KBN3p8CUzHvgaQjFiQvVeAwkZEGG0wDKMTrcEKxB4IMxhj955QJF1fue-2X9EnXggwxyGMpmvygCTL1IC2ZCeiGMaXwMn9FlQSNTS5E_6NMwzBAL\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"1440\" data-original-width=\"2560\" height=\"225\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhGc2wKcxfapMoAJ8Jg_aTBXJuSiwY3QliRlFCkUxiBbPrjzalCigQJDYg8CnZ4sXQbnVYSxNoDMvX7KBN3p8CUzHvgaQjFiQvVeAwkZEGG0wDKMTrcEKxB4IMxhj955QJF1fue-2X9EnXggwxyGMpmvygCTL1IC2ZCeiGMaXwMn9FlQSNTS5E_6NMwzBAL=w400-h225\" width=\"400\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">Prompt: Create 100 cubes. The y position of each cube follows the cosine function along the x-axis with random color.</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEi0vVROrQij9YN29m5rBS0MANXb-bzNFInS--9wiiAxxo1YWk6qQOF_RR9i3sqmPQD5wO1TLi-r6mCQC02v7VoI4t7wDoguU1k8Y9iN-sxYyPQTDJi3I1ZX8zZZ2Q-3nKiyZoJSHbAasxOTr4LHEuIAxrbZxAuEaT430d_xsYw1jpWS7rkzCHCcWZqn8jzZ\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"1440\" data-original-width=\"2558\" height=\"225\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEi0vVROrQij9YN29m5rBS0MANXb-bzNFInS--9wiiAxxo1YWk6qQOF_RR9i3sqmPQD5wO1TLi-r6mCQC02v7VoI4t7wDoguU1k8Y9iN-sxYyPQTDJi3I1ZX8zZZ2Q-3nKiyZoJSHbAasxOTr4LHEuIAxrbZxAuEaT430d_xsYw1jpWS7rkzCHCcWZqn8jzZ=w400-h225\" width=\"400\" /></a></div><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">이를 이용해 다음과 같은 GPT 에이전트가 구현된다.&nbsp;</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><iframe allowfullscreen=\"\" class=\"BLOG_video_class\" height=\"266\" src=\"https://www.youtube.com/embed/YUytEtaVrrc\" width=\"320\" youtube-src-id=\"YUytEtaVrrc\"></iframe></div></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><b><br /></b></div><div class=\"separator\" style=\"clear: both; text-align: left;\">상세한 동작 메커니즘은 다음 링크를 참고한다.</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><ul style=\"text-align: left;\"><li><a href=\"https://github.com/mac999/blender-llm-addin\">mac999/blender-llm-addin</a></li></ul></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><b><br /></b></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><b>LLM과 컴퓨터 그래픽스</b></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: left;\">앞에서 사용한 방법과 동일하게, OpenGL, processing.org 등 3차원 가시화 도구를 이용해 실시간으로 프롬프트를 통해 컴퓨터 그래픽스 장면을 생성할 수 있다. 다음은 프롬프트를 통해 생성된 그래픽스를 보여준다.&nbsp;</div><br /><div class=\"separator\" style=\"clear: both; text-align: left;\"><div class=\"separator\" style=\"clear: both; font-weight: bold; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEg45dwr8HkBpedqUpbzr51ueAXeWTTYtMvNoGOBILRgdH8ZDEZK0dNQwWKs7g9h_Lpz0eWm57MFmCznnzUz6nt8KgypitH7Pf43ln0PTrOzDiC_MnPno7I7IYc_VwUR0yx1i6asB4e04-02jtbCE3HpzEF6IySlFkBmTMJ7h_mKr5CVV8Swil-Ol-Rbb9N8\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"588\" data-original-width=\"1163\" height=\"162\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEg45dwr8HkBpedqUpbzr51ueAXeWTTYtMvNoGOBILRgdH8ZDEZK0dNQwWKs7g9h_Lpz0eWm57MFmCznnzUz6nt8KgypitH7Pf43ln0PTrOzDiC_MnPno7I7IYc_VwUR0yx1i6asB4e04-02jtbCE3HpzEF6IySlFkBmTMJ7h_mKr5CVV8Swil-Ol-Rbb9N8\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">데이터 기반 그래픽스 렌더링 예시</div><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">생성된 그래픽스 코드는 다음과 같다.&nbsp;</div><div class=\"separator\" style=\"clear: both;\"><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">from p5 import *</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">import pandas as pd</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"># Load the dataset</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">data = pd.read_csv('input.csv')</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">def setup():</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; size(720, 400)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; no_stroke()</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">def draw_cone(size_x, size_y, position):</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; with push_matrix():</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; translate(*position)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; cone(size_x, size_y)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">def draw():</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; background(20, 100, 24)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; lights()</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; rotate_x(frame_count * 0.01)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; # rotate_y(frame_count * 0.01)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; blinn_phong_material()</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; interval = 200</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; for i, row in data.iterrows():</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; x = (i % 3) * interval - interval</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; y = 0</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; z = (i // 3) * interval - interval</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; draw_cone(row['energy'], row['temperature'], (x, y, z))</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; locX = mouse_x - width/2</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; locY = mouse_y - height/2</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; light_specular(0, 0, 255)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; point_light(360, 360*1.5, 360, locX, locY, 400)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">if __name__ == '__main__':</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; run(mode='P3D')</span></div></div><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><b>LLM과 사운드 엔지니어링</b></div><div class=\"separator\" style=\"clear: both; text-align: left;\">동일한 원리로 사운드를 개발할 수 있다. 다음은 LLM을 통해 생성된 사운드 코드를 실행한 결과이다.&nbsp;</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><iframe allowfullscreen=\"\" class=\"BLOG_video_class\" height=\"266\" src=\"https://www.youtube.com/embed/lcP9c8LYGD4\" width=\"320\" youtube-src-id=\"lcP9c8LYGD4\"></iframe></div><div class=\"separator\" style=\"clear: both; text-align: center;\">사운드 생성 예</div><b><br /></b></div><div class=\"separator\" style=\"clear: both; text-align: left;\">생성된 코드는 다음과 같다.</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">from psonic import *</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">import time</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">from threading import Thread, Condition</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">set_server_parameter_from_log(\"127.0.0.1\")</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">def play_mozart(condition):</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; while True:</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; with condition:</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; condition.notifyAll() # Message to threads&nbsp; &nbsp; &nbsp;&nbsp;</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; beat = 0.33</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; melody = [</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; E5, E5, F5, G5, G5, F5, E5, D5, C5, C5, D5, E5, E5, D5, D5,</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; E5, E5, F5, G5, G5, F5, E5, D5, C5, C5, D5, E5, D5, C5, C5</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; ]</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; # Drum beat pattern</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; def play_beat():</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(DRUM_HEAVY_KICK, amp=1.5)&nbsp; # Strong kick drum</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(ELEC_CHIME, amp=1.2)&nbsp; # Electric guitar sample</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(BD_ZOME, amp=1.5)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sleep(beat / 2)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(DRUM_CYMBAL_CLOSED, amp=1.2)&nbsp; # Closed cymbal</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(ELEC_CHIME, amp=0.6)&nbsp;&nbsp;</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(BD_ZOME, amp=0.6)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sleep(beat / 2)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(DRUM_SNARE_HARD, amp=1.3)&nbsp; # Strong snare</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(ELEC_CHIME, amp=1.2)&nbsp; &nbsp;</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(BD_ZOME, amp=1.3)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sleep(beat / 2)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp;&nbsp;</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(DRUM_CYMBAL_CLOSED, amp=1.2)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(ELEC_CHIME, amp=0.6)&nbsp;&nbsp;</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sample(BD_ZOME, amp=0.6)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; sleep(beat / 2)</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; # Melody, Beat Channel Play&nbsp;</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; for note in melody:</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; play(note, amp=1.0) # , release=0.2)&nbsp; # Melody</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; play_beat()&nbsp; # Beat Pattern</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">condition = Condition()</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">mozart_thread = Thread(name='producer', target=play_mozart, args=(condition,))</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">mozart_thread.start()</span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\"><br /></span></div><div class=\"separator\" style=\"clear: both;\"><span style=\"font-size: x-small;\">input(\"Press Enter to continue...\")</span></div></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><b>LLM과 피지컬 컴퓨팅</b></div><div class=\"separator\" style=\"clear: both; text-align: left;\">피지컬 컴퓨팅에 많이 사용되는 아두이노 등을 이용해, 프롬프트로 명령을 주면, 임베딩 컴퓨터가 명령을 실행할 수 있는 코드를 LLM이 생성해, 모터, 조명과 같은 액추에이터를 동작시킬 수 있다. 다음은 그 예를 보여준다.&nbsp;</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><iframe allowfullscreen=\"\" class=\"BLOG_video_class\" height=\"266\" src=\"https://www.youtube.com/embed/2VpRcF7pqug\" width=\"320\" youtube-src-id=\"2VpRcF7pqug\"></iframe></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://neural-maze.github.io/blog/posts/202405-crewai-ollama-arduino/\">Arduino programming with CrewAI · The Neural Maze</a></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">참고로, 아두이노의 경우, .ino 코드 파일을 실시간으로 컴파일해 아두이노보드로 전송하는 cli 도구가 설치 시 포함되어 있다. 이를 이용해, 컴파일 에이전트를 구현할 수 있다.&nbsp;</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgYkSl780s8vW_zXTN8LO36a-L-q_cv8OB3vA1DIPOBlR3NobI1BOfgobcWcIc8vv75m3c45YpO6Q5bz7trUbT3e0WF78bYX30PZOGXWKZaAJgzcaYBe1yQJwhXTPMbQgwNH_2NpwJrdGUPF6ev5mHrzfa_E0aA-wo4mtFr_4IJT4hm8tX3YKIwJfID_Gsj\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"384\" data-original-width=\"956\" height=\"129\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgYkSl780s8vW_zXTN8LO36a-L-q_cv8OB3vA1DIPOBlR3NobI1BOfgobcWcIc8vv75m3c45YpO6Q5bz7trUbT3e0WF78bYX30PZOGXWKZaAJgzcaYBe1yQJwhXTPMbQgwNH_2NpwJrdGUPF6ev5mHrzfa_E0aA-wo4mtFr_4IJT4hm8tX3YKIwJfID_Gsj\" width=\"320\" /></a></div>Arduino CLI 도구</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">이 주제와 관련된 레퍼런스는 다음과 같다.</div><div class=\"separator\" style=\"clear: both; text-align: left;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\"><b>레퍼런스</b></div></div><div style=\"text-align: left;\"><span style=\"font-size: x-small;\"><br /></span></div><div style=\"text-align: left;\"><span style=\"font-size: x-small;\">AI 에이전트</span></div><div style=\"text-align: left;\"><ul style=\"text-align: left;\"><li><a href=\"https://blenderartists.org/t/can-i-install-pandas-or-other-modules-into-blenders-python/1375122/6\"><span style=\"font-size: x-small;\">Can I install Pandas (or other modules) into Blender's Python? - Coding / Python Support - Blender Artists Community</span></a></li><li><a href=\"https://medium.com/@rameshkannanyt0078/the-best-ollama-models-for-developers-and-programmers-1662dae514a7\"><span style=\"font-size: x-small;\">The Best Ollama Models for Developers and Programmers | by Ramesh kannan s | Dec, 2024 | Medium</span></a></li><li><a href=\"https://www.reddit.com/r/LocalLLaMA/comments/1gkewyp/best_llm_model_for_coding/\"><span style=\"font-size: x-small;\">Best LLM Model for coding : r/LocalLLaMA</span></a></li><li><a href=\"https://ollama.com/library/codellama:7b\"><span style=\"font-size: x-small;\">codellama:7b</span></a></li><li><a href=\"https://blog.context.ai/comparing-leading-multi-agent-frameworks/\"><span style=\"font-size: x-small;\">Comparing multi-agent frameworks</span></a></li><li><a href=\"https://www.crewai.com/\"><span style=\"font-size: x-small;\">CrewAI</span></a></li></ul><div><span style=\"font-size: x-small;\">그래픽 모델링</span></div><div><ul><li><a href=\"https://www.youtube.com/watch?v=YUytEtaVrrc\"><span style=\"font-size: x-small;\">5 Steps to setup VSCode for Blender Python (on Windows)</span></a></li><li><a href=\"https://github.com/nutti/fake-bpy-module\"><span style=\"font-size: x-small;\">Fake Blender Python API module collection for the code completion.</span></a></li><li><a href=\"https://ollama.com/blog/vision-models\"><span style=\"font-size: x-small;\">Vision models · Ollama Blog</span></a></li><li><a href=\"https://p5.readthedocs.io/en/latest/\"><span style=\"font-size: x-small;\">P5 library documentation</span></a></li></ul></div><div><span style=\"font-size: x-small;\">사운드 엔지니어링</span></div><div><ul style=\"text-align: left;\"><li><a href=\"https://medium.com/@9derick/music-coding-sonic-pi-337d501cf2f1\"><span style=\"font-size: x-small;\">Music + Coding = Sonic PI. I love music. I love listening to it… | by Derick Castillo | Medium</span></a></li><li><a href=\"https://github.com/gkvoelkl/python-sonic/tree/master\"><span style=\"font-size: x-small;\">Python-sonic: Programming Music with Python, Sonic Pi and Supercollider</span></a></li><li><a href=\"https://github.com/sonic-pi-net/sonic-pi\"><span style=\"font-size: x-small;\">sonic-pi: Code. Music. Live.</span></a></li><li><a href=\"https://sonic-pi.net/\"><span style=\"font-size: x-small;\">Sonic Pi - The Live Coding Music Synth for Everyone</span></a></li><li><a href=\"https://github.com/belangeo/pyo\"><span style=\"font-size: x-small;\">Python DSP module</span></a></li><li><a href=\"https://github.com/csound/csound\"><span style=\"font-size: x-small;\">csound: Main repository for Csound</span></a></li><li><a href=\"https://github.com/librosa/librosa/blob/main/LICENSE.md\"><span style=\"font-size: x-small;\">librosa</span></a></li><li><a href=\"https://github.com/CPJKU/madmom\"><span style=\"font-size: x-small;\">Python audio and music signal processing library</span></a></li><li><a href=\"https://in-thread.sonic-pi.net/t/link-sonic-pi-to-python/2938/5\"><span style=\"font-size: x-small;\">Link sonic pi to Python - Support, Help &amp; Resources - in_thread</span></a></li><li><a href=\"https://www.restack.io/p/real-time-audio-libraries-for-ai-answer-python-sound-synthesis-cat-ai\"><span style=\"font-size: x-small;\">Python Sound Synthesis Libraries | Restackio</span></a></li></ul></div><div><span style=\"font-size: x-small;\">피지컬 컴퓨팅</span></div><div><ul><li><a href=\"https://medium.com/@lmpo/ai-assisted-arduino-programming-dcc256f34846\"><span style=\"font-size: x-small;\">AI-Assisted Arduino Programming. The rapid advancement of Large Language… | by LM Po | Medium</span></a></li><li><a href=\"https://docs.m5stack.com/en/guide/llm/llm/arduino\"><span style=\"font-size: x-small;\">M5 board</span></a></li><li><a href=\"https://community.home-assistant.io/t/using-llama-3-to-control-home-assistant/743937/6\"><span style=\"font-size: x-small;\">Using Llama 3 to control Home Assistant - Configuration / Voice Assistant - Home Assistant Community</span></a></li><li><a href=\"https://fixtse.com/blog/llama-3-home-assistant\"><span style=\"font-size: x-small;\">Using Llama 3 to Control Home Assistant | fixtSE</span></a></li><li><a href=\"https://dev.to/nite_dev/programming-arduino-with-python-18k8\"><span style=\"font-size: x-small;\">Programming Arduino with Python - DEV Community</span></a></li><li><a href=\"https://www.tinkerassist.com/blog/compile-upload-arduino-code-with-python\"><span style=\"font-size: x-small;\">Compile &amp; Upload Arduino Code with Python | Tinker Assist Blog</span></a></li></ul></div></div>",
        "contentSnippet": "이 글은 생성AI, LLM, AI Agent와 그래픽, 디자인, 미디어아트에 관한 자료를 정리한 것이다. 관련 도구 및 예제는 다음 링크에 자세히 설명하였으니 참고한다.\n\nmac999/llm-media-art-demo\n\n\n프롬프트에서 생성된 그래픽스 예시\n\n\nBlender LLM 기반 그래픽 모델링 관련 자료\nLLM, ollama, Blender python library 등을 이용하면, 프롬프트를 입력해, 3차원 모델을 자동 생성할 수 있다. 다음은 관련 예시를 보여준다. \n\n\n\n\nPrompt: Create 100 cubes. The y position of each cube follows the cosine function along the x-axis with random color.\n\n\n이를 이용해 다음과 같은 GPT 에이전트가 구현된다. \n\n\n\n\n\n상세한 동작 메커니즘은 다음 링크를 참고한다.\n\nmac999/blender-llm-addin\n\n\n\nLLM과 컴퓨터 그래픽스\n\n앞에서 사용한 방법과 동일하게, OpenGL, processing.org 등 3차원 가시화 도구를 이용해 실시간으로 프롬프트를 통해 컴퓨터 그래픽스 장면을 생성할 수 있다. 다음은 프롬프트를 통해 생성된 그래픽스를 보여준다. \n\n\n데이터 기반 그래픽스 렌더링 예시\n\n생성된 그래픽스 코드는 다음과 같다. \n\nfrom p5 import *\nimport pandas as pd\n\n\n# Load the dataset\ndata = pd.read_csv('input.csv')\n\n\ndef setup():\n  size(720, 400)\n  no_stroke()\n\n\ndef draw_cone(size_x, size_y, position):\n  with push_matrix():\n    translate(*position)\n    cone(size_x, size_y)\n\n\ndef draw():\n  background(20, 100, 24)\n  lights()\n  rotate_x(frame_count * 0.01)\n  # rotate_y(frame_count * 0.01)\n  blinn_phong_material()\n\n\n  interval = 200\n  for i, row in data.iterrows():\n    x = (i % 3) * interval - interval\n    y = 0\n    z = (i // 3) * interval - interval\n    draw_cone(row['energy'], row['temperature'], (x, y, z))\n\n\n  locX = mouse_x - width/2\n  locY = mouse_y - height/2\n  light_specular(0, 0, 255)\n  point_light(360, 360*1.5, 360, locX, locY, 400)\n\n\nif __name__ == '__main__':\n  run(mode='P3D')\n\n\nLLM과 사운드 엔지니어링\n동일한 원리로 사운드를 개발할 수 있다. 다음은 LLM을 통해 생성된 사운드 코드를 실행한 결과이다. \n\n\n사운드 생성 예\n\n\n생성된 코드는 다음과 같다.\n\nfrom psonic import *\nimport time\nfrom threading import Thread, Condition\n\n\nset_server_parameter_from_log(\"127.0.0.1\")\n\n\ndef play_mozart(condition):\n  while True:\n    with condition:\n      condition.notifyAll() # Message to threads      \n\n\n    beat = 0.33\n\n\n    melody = [\n      E5, E5, F5, G5, G5, F5, E5, D5, C5, C5, D5, E5, E5, D5, D5,\n      E5, E5, F5, G5, G5, F5, E5, D5, C5, C5, D5, E5, D5, C5, C5\n    ]\n\n\n    # Drum beat pattern\n    def play_beat():\n      sample(DRUM_HEAVY_KICK, amp=1.5)  # Strong kick drum\n      sample(ELEC_CHIME, amp=1.2)  # Electric guitar sample\n      sample(BD_ZOME, amp=1.5)\n      sleep(beat / 2)\n\n\n      sample(DRUM_CYMBAL_CLOSED, amp=1.2)  # Closed cymbal\n      sample(ELEC_CHIME, amp=0.6)  \n      sample(BD_ZOME, amp=0.6)\n      sleep(beat / 2)\n\n\n      sample(DRUM_SNARE_HARD, amp=1.3)  # Strong snare\n      sample(ELEC_CHIME, amp=1.2)   \n      sample(BD_ZOME, amp=1.3)\n      sleep(beat / 2)\n      \n      sample(DRUM_CYMBAL_CLOSED, amp=1.2)\n      sample(ELEC_CHIME, amp=0.6)  \n      sample(BD_ZOME, amp=0.6)\n      sleep(beat / 2)\n\n\n    # Melody, Beat Channel Play \n    for note in melody:\n      play(note, amp=1.0) # , release=0.2)  # Melody\n      play_beat()  # Beat Pattern\n\n\n\n\ncondition = Condition()\nmozart_thread = Thread(name='producer', target=play_mozart, args=(condition,))\nmozart_thread.start()\n\n\ninput(\"Press Enter to continue...\")\n\n\nLLM과 피지컬 컴퓨팅\n피지컬 컴퓨팅에 많이 사용되는 아두이노 등을 이용해, 프롬프트로 명령을 주면, 임베딩 컴퓨터가 명령을 실행할 수 있는 코드를 LLM이 생성해, 모터, 조명과 같은 액추에이터를 동작시킬 수 있다. 다음은 그 예를 보여준다. \n\nArduino programming with CrewAI · The Neural Maze\n\n\n참고로, 아두이노의 경우, .ino 코드 파일을 실시간으로 컴파일해 아두이노보드로 전송하는 cli 도구가 설치 시 포함되어 있다. 이를 이용해, 컴파일 에이전트를 구현할 수 있다. \n\n\nArduino CLI 도구\n\n\n이 주제와 관련된 레퍼런스는 다음과 같다.\n\n\n레퍼런스\n\n\n\nAI 에이전트\n\nCan I install Pandas (or other modules) into Blender's Python? - Coding / Python Support - Blender Artists Community\nThe Best Ollama Models for Developers and Programmers | by Ramesh kannan s | Dec, 2024 | Medium\nBest LLM Model for coding : r/LocalLLaMA\ncodellama:7b\nComparing multi-agent frameworks\nCrewAI\n\n그래픽 모델링\n\n5 Steps to setup VSCode for Blender Python (on Windows)\nFake Blender Python API module collection for the code completion.\nVision models · Ollama Blog\nP5 library documentation\n\n사운드 엔지니어링\n\nMusic + Coding = Sonic PI. I love music. I love listening to it… | by Derick Castillo | Medium\nPython-sonic: Programming Music with Python, Sonic Pi and Supercollider\nsonic-pi: Code. Music. Live.\nSonic Pi - The Live Coding Music Synth for Everyone\nPython DSP module\ncsound: Main repository for Csound\nlibrosa\nPython audio and music signal processing library\nLink sonic pi to Python - Support, Help & Resources - in_thread\nPython Sound Synthesis Libraries | Restackio\n\n피지컬 컴퓨팅\n\nAI-Assisted Arduino Programming. The rapid advancement of Large Language… | by LM Po | Medium\nM5 board\nUsing Llama 3 to control Home Assistant - Configuration / Voice Assistant - Home Assistant Community\nUsing Llama 3 to Control Home Assistant | fixtSE\nProgramming Arduino with Python - DEV Community\nCompile & Upload Arduino Code with Python | Tinker Assist Blog",
        "id": "tag:blogger.com,1999:blog-5201956450461596914.post-2529442541951005452",
        "isoDate": "2025-01-27T07:33:00.000Z"
      }
    ]
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권영재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권혁우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김준형",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김상훈",
    "category": "개인",
    "posts": [
      {
        "creator": "김상훈",
        "title": "딥시크 양조장",
        "link": "https://interpiler.com/2025/02/01/%eb%94%a5%ec%8b%9c%ed%81%ac-%ec%96%91%ec%a1%b0%ec%9e%a5/",
        "pubDate": "Sat, 01 Feb 2025 00:08:14 +0000",
        "content:encodedSnippet": "딥시크(DeepSeek)가 왜 AI 엔지니어들의 영역을 벗어나 온 세상을 시끄럽게 하는지 아래 그림 한 장이 잘 설명한다. 이른바 증류(distillation)라고 불리는 기법 때문이다.\n\nChatGPT는 우리 눈을 현혹시켰다. 너무나 그럴싸한 답변을 내놓아 사람인지 기계인지 구별하기 힘들어서다. 이 놀라운 능력의 기반은 근본적으로 더 많은 데이터에 있다. 오늘날의 AI는 인간이 AI를 처음 연구하던 수십년 전과 근본적인 차이가 있는데, 1) 방대한 데이터가 인터넷을 통해 쉽게 접근 가능한 수준으로 디지털화됐고, 2) 이 방대한 데이터를 동시에 처리할 수 있는 어마어마한 하드웨어(엔비디아 칩 등) 인프라가 마련됐기 때문이다.\n오픈AI 같은 대규모언어모델(LLM) 회사는 이 거대한 데이터를 활용해 ChatGPT라는 결과물을 만들어 낸다. 하지만 쉬운 일도, 값싼 일도 아니다. 좋은 데이터(책, 영화, 뉴스, 사진 등)일수록 소유자가 있고, 소유자들은 오픈AI가 자신들의 데이터를 무료로 활용하는 걸 반대하며 법적 분쟁도 불사하기 때문에 1)을 확보하려면 비용이 생각보다 많이 든다. 그렇다고 2)가 싼 것도 아니다. 오픈AI가 세계적인 성공을 거두자 구글도, 아마존도, 테슬라도 이 시장에 뛰어들었고 동시에 엔비디아칩의 가격은 천정부지로 올랐다. 반응은 연쇄적이어서, 엔비디아칩을 설치할 데이터센터 건설비도, 부지 확보 비용도, 그 데이터센터를 돌릴 전기료도 모두 함께 오르고 있다.\n딥시크가 사용한 증류 기법은 이런 상황에서 생겼다. 발상의 전환이었다. AI의 답변은 기본적으로 통계에 기반해 높은 확률의 정답을 뽑아주는 것에 가깝다. 따라서 ChatGPT 같은 기존 AI들은 질문을 받았을 때 거대한 데이터를 돌려서 적절한 답을 출력한다. 최종 사용자는 인식하지 못하지만 질문이 입력되는 순간 저 먼 곳 어딘가의 데이터센터에서 AI가 수많은 계산을 벌이고, 정답에 가까운 근사값들을 뽑아낸 뒤, 그 중 하나의 정답을 선택해 사용자에게 제시한다.\n예를 들어, 거대한 도서관(인터넷)에 다가가 사서에게 “새우튀김을 바삭하게 튀기는 법에 대한 요리책을 찾아줘”라고 부탁한다 가정해 보자. 기존의 사서(옛 AI)들은 ‘새우튀김’이라는 표제어의 책을 찾거나, ‘요리책’ 분류의 서가를 뒤진다. 수십-수백권 정도의 책을 수십분 정도 뒤지면 가능한 일이지만 불편하고 부정확하다. 반면 ChatGPT 같은 사서는 머릿속에 도서관의 모든 책을 기억해 두고, 예전 도서관 방문자들의 모든 요청도 기억해 둔다. 심지어 어떤 책을 꺼내줬을 때 사용자의 추가 요청은 없었는지, 만족한다는 피드백을 남겼는지도 동시에 고려한다. 전통적인 사서는 할 수 없는 일이었지만 데이터센터와 엔비디아칩으로 무장한 ChatGPT 사서라면 가능하다. 방문자는 ChatGPT 사서에게 한 권의 책을 정답(hard target)으로 받게 되지만, 이 책을 제시하기 위해 ChatGPT 사서는 뒷켠에 수십권의 유사한 책(soft target)도 쌓아놓는다.\n증류 기법은 여기서 등장한다. ChatGPT처럼 수억권의 책을 기억하는 대신 ChatGPT 같은 거대 모델을 미리 만들어 두고, 이 모델이 만들어 놓은 수십권의 책들(soft target)만 가지고 사서(DeepSeek)를 교육시키면 어떨까? 방문자가 요리책을 요청할 때, ChatGPT는 도서관 전체를 뒤져보고 답을 내놓아야 하지만, 딥시크는 요리책 전문 사서에게 배운 요령을 활용해 적절한 답을 내놓기 때문에 수백 수천배 쉽고 빠르게 답할 수 있지 않을까? 수천가지 분야에 대해 수십권의 정보를 저장하는 일은 엄청나 보이지만, 수억권의 책을 한번에 파악하고 답을 내는 것과 비교하면 훨씬 쉬운 일이다.\n여기서 가장 중요한 질문이 등장한다. 그렇다면, 딥시크가 학습을 위한 거대 모델을 스스로 만들지 않고 이미 외부에 존재하는 거대 모델(ChatGPT, Gemini, Claude 등등)을 활용했다면 어떻게 되는 걸까?\n기존 AI회사들은 이미 약관을 통해 다른 AI 기업이 학습 목적으로 자신들의 AI를 쓰지 못하도록 규정을 마련해 놓았다. 하지만 규정을 마련했다고 질문을 던지고 답을 얻는 과정 자체를 차단할 수는 없다. 그래서 오픈AI는 딥시크를 거꾸로 분석해 이 회사가 자신들의 AI를 활용한 증거를 수집하고 있다. 아래 그림이 뜻하는게 바로 이런 얘기다.(물론 딥시크는 이런 오픈AI의 주장을 인정하지 않았다.)\n오픈AI와 딥시크 사이의 갈등은 사실 기업 간 갈등에 지나지 않는다. 산업으로 보면 더 심각하다. ChatGPT 같은 새로운 AI는 끝내주는 성능을 갖췄지만 학습에 필요한 데이터 확보에도, 작동에 필요한 전력 확보에도 모두 어마어마한 비용을 쓴다. 딥시크가 활용해 효용을 입증한 증류 모델은 이 비용 투자를 무력화한다.\n증류니까 증류주에 비교해 보자. 증류식 소주 한 병을 제대로 만들려면 논을 사서, 볍씨를 뿌리고, 쌀을 수확한 뒤, 발효시켜 찌꺼기를 가라앉히고, 청주를 만들어 이 청주를 또 증류해야 한다. ChatGPT 같은 새로운 AI들은 논을 사서 쌀을 수확하고, 청주를 빚어 소주를 증류하는 모든 과정을 직접 진행한다. 그런데 누군가 이 과정을 건너뛰고 ChatGPT 양조장에서 청주만 훔쳐내어 소주를 빚는다면?\n이게 지금 투자자들을 패닉에 빠뜨린 이유다. 현실의 양조장이라면 도난방지 등의 물리적 억제로 청주를 지킬 수 있지만, AI는 상대가 누구라도 질문을 던지면 답변을 제공한다. 물리적 억제가 의미없다는 뜻이다. 상황이 이런데 엔비디아칩과 데이터센터, 발전소 건설에 수십조를 투자하는 게 과연 의미가 있을까? 군비 경쟁 시기였다면 내가 만들어 쌓아놓은 무기가 후발주자와의 격차를 늘리는 투자였다. AI 경쟁 시기에는 내가 만들어 쌓아놓은 인프라가 후발주자의 무임승차에 사용되는 낭비가 되고 있는지도 모른다. 투자자들의 심리가 순간적으로 얼어붙은 이유다.",
        "dc:creator": "김상훈",
        "comments": "https://interpiler.com/2025/02/01/%eb%94%a5%ec%8b%9c%ed%81%ac-%ec%96%91%ec%a1%b0%ec%9e%a5/#respond",
        "content": "딥시크(DeepSeek)가 왜 AI 엔지니어들의 영역을 벗어나 온 세상을 시끄럽게 하는지 아래 그림 한 장이 잘 설명한다. 이른바 증류(distillation)라고 불리는 기법 때문이다. ChatGPT는 우리 눈을 현혹시켰다. 너무나 그럴싸한 답변을 내놓아 사람인지 기계인지 구별하기 힘들어서다. 이 놀라운 능력의 기반은 근본적으로 더 많은 데이터에 있다. 오늘날의 AI는 인간이 AI를 처음 연구하던 수십년 전과 근본적인 차이가 있는데, 1) 방대한 &#8230; <a href=\"https://interpiler.com/2025/02/01/%eb%94%a5%ec%8b%9c%ed%81%ac-%ec%96%91%ec%a1%b0%ec%9e%a5/\" class=\"more-link\">계속 읽기 <span class=\"screen-reader-text\">딥시크 양조장</span> <span class=\"meta-nav\">\t</span></a>",
        "contentSnippet": "딥시크(DeepSeek)가 왜 AI 엔지니어들의 영역을 벗어나 온 세상을 시끄럽게 하는지 아래 그림 한 장이 잘 설명한다. 이른바 증류(distillation)라고 불리는 기법 때문이다. ChatGPT는 우리 눈을 현혹시켰다. 너무나 그럴싸한 답변을 내놓아 사람인지 기계인지 구별하기 힘들어서다. 이 놀라운 능력의 기반은 근본적으로 더 많은 데이터에 있다. 오늘날의 AI는 인간이 AI를 처음 연구하던 수십년 전과 근본적인 차이가 있는데, 1) 방대한 … 계속 읽기 딥시크 양조장",
        "guid": "http://interpiler.com/?p=1652",
        "categories": [
          "That's IT",
          "AI",
          "ChatGPT",
          "딥시크",
          "증류"
        ],
        "isoDate": "2025-02-01T00:08:14.000Z"
      },
      {
        "creator": "김상훈",
        "title": "중국의 아웃라이어",
        "link": "https://interpiler.com/2025/01/31/%ec%a4%91%ea%b5%ad%ec%9d%98-%ec%95%84%ec%9b%83%eb%9d%bc%ec%9d%b4%ec%96%b4/",
        "pubDate": "Fri, 31 Jan 2025 09:00:58 +0000",
        "content:encodedSnippet": "연휴 기간 내내 DeepSeek 때문에 세계가 뒤집혔다. 엔비디아 주식이 폭락하고, 나스닥이 따라서 급락하고, 삼성전자와 하이닉스도 오늘 개장한 국내 주식시장에서 급락하고…\n한편에선 다른 칭송이 이어진다. 한국은 이과 수험생이 성적순으로 전국 모든 대학 의대를 휩쓸고 난 다음에야 컴퓨터공학이든, 수학이든, 물리학이든 도전하는데 중국에선 매년 150만 명의 이공계 인재가 배출되고 있다고…\n또 다른 측면에선 중국 까내리기 얘기도 들린다. 주로 미국 사람들. “저거 실제로는 더 비싸게 주고 만든 거야.”, “딥시크라는 게 결국 오픈AI 기술을 베껴서 만든 거야” 등등…\n이런 얘기들이 틀렸다는 게 아니다. 다만 구독하는 뉴스레터 중에 MIT 박사과정 중인 중국인의 글이 있어서 재미있게 봤다. 요약하면,\n우리가 생각하는 중국의 혁신은 일본과 한국이 행했던 혁신 모델의 대규모 확장판에 가깝다. 미래에 잘 될 산업에 국가적 투자를 몰아주고, 빠르게 밀어붙여 세계를 지배하는 방식 말이다. 일본 자동차 산업, 한국 반도체 산업이 그랬고, 지금은 중국이 조선 철강 태양광 전기차 등등 수많은 산업 영역에서 동시다발적으로 이런 패스트 팔로어 전략을 택했다. 혁신을 스스로 만들기보다는 유학과 모방을 통해 앞선 선도자의 기술을 빠르게 이전받았고, 선도자를 따라잡기 위해 996(오전 9시에 출근해 오후 9시에 퇴근하는 주6일 근무)으로 상징되는 근면함으로 추격 속도를 높였다. 알리바바도, BYD도, 핀둬둬도 모두 이런 식으로 성장했고 그 뒤에는 정부의 투자나 비호가 있었다.\n그런데 딥시크는 이런 기존 공식과는 전혀 다른 방식으로 등장했다. 우선 애초에 이 프로젝트 자체가 국가 프로젝트도 아니었고, 국가 지원금도 받지 않았다. 헤지펀드로 돈을 번 양문봉(량원펑)이라는 젊은이가 세운 150명짜리 작은 회사에서 이뤄낸 성취다.\n또 이 회사는 경험많은 연구자나 임원을 채용하는 대신 중국 명문대를 갓 졸업한 신입사원을 채용한다. 즉, 나이 많은 직원들이 없다보니 ‘업계 선배들’의 눈치를 보지 않는다. 유학파가 거의 없는 것도 특징. 대신 직원을 뽑을 때 경진대회 등의 수상 경력을 중시한다. 그러니까 유학파를 통해 전파되는 실리콘밸리 트렌드 같은 걸 의식하지도 않는다. 즉, 기술 이전을 통한 혁신이 아니다.\n선도자를 따라잡기 위한 근면성도 강조하지 않는다. 심지어 딥시크에는 내부 경쟁이 없고, KPI가 없다. 분위기를 해친다는 이유에서다. 필요하면 함께 토론하는 ‘대학같은 문화’가 지향점인데, 이 문화를 지키기 위해 직원수를 150명 이하로 일부러 적게 유지한다.\n이런 회사를 과연 중국의 혁신 성공 사례로 얘기할 수 있을까? 그렇다고 하려면 두가지 조건이 충족되어야 한다. 첫째, 딥시크 같은 방식의 성공 사례가 재현되어야 한다. 아니면 이건 그냥 독특한 예외일 뿐이다. 둘째, 딥시크가 성공을 이어갈 수 있어야 한다. 국가와 업계, 권위자들의 압력에서 자유로운 회사를 중국 정부가 용인할 수 있고, 이 회사가 계속 중국의 영웅으로 남을 수 있을까.\n뭐 이건 중국 사람들이 할 걱정이고, 한국인으로서는 딥시크 채용과 관련된 기사에서 나온 이 코멘트가 가장 기억에 남는다. 왜 딥시크는 중국 기술 업계의 레전드급 사람들을 채용하지 않느냐는 질문에 대해 이 회사 헤드헌터는 이렇게 답했다.\n“한 번 큰 성공을 이뤄낸 사람들은 이미 성공했기 때문에 결코 실패할 수 없다는 짐을 짊어지고 있어요.”",
        "dc:creator": "김상훈",
        "comments": "https://interpiler.com/2025/01/31/%ec%a4%91%ea%b5%ad%ec%9d%98-%ec%95%84%ec%9b%83%eb%9d%bc%ec%9d%b4%ec%96%b4/#respond",
        "content": "연휴 기간 내내 DeepSeek 때문에 세계가 뒤집혔다. 엔비디아 주식이 폭락하고, 나스닥이 따라서 급락하고, 삼성전자와 하이닉스도 오늘 개장한 국내 주식시장에서 급락하고&#8230; 한편에선 다른 칭송이 이어진다. 한국은 이과 수험생이 성적순으로 전국 모든 대학 의대를 휩쓸고 난 다음에야 컴퓨터공학이든, 수학이든, 물리학이든 도전하는데 중국에선 매년 150만 명의 이공계 인재가 배출되고 있다고&#8230; 또 다른 측면에선 중국 까내리기 얘기도 들린다. 주로 &#8230; <a href=\"https://interpiler.com/2025/01/31/%ec%a4%91%ea%b5%ad%ec%9d%98-%ec%95%84%ec%9b%83%eb%9d%bc%ec%9d%b4%ec%96%b4/\" class=\"more-link\">계속 읽기 <span class=\"screen-reader-text\">중국의 아웃라이어</span> <span class=\"meta-nav\">\t</span></a>",
        "contentSnippet": "연휴 기간 내내 DeepSeek 때문에 세계가 뒤집혔다. 엔비디아 주식이 폭락하고, 나스닥이 따라서 급락하고, 삼성전자와 하이닉스도 오늘 개장한 국내 주식시장에서 급락하고… 한편에선 다른 칭송이 이어진다. 한국은 이과 수험생이 성적순으로 전국 모든 대학 의대를 휩쓸고 난 다음에야 컴퓨터공학이든, 수학이든, 물리학이든 도전하는데 중국에선 매년 150만 명의 이공계 인재가 배출되고 있다고… 또 다른 측면에선 중국 까내리기 얘기도 들린다. 주로 … 계속 읽기 중국의 아웃라이어",
        "guid": "http://interpiler.com/?p=1649",
        "categories": [
          "That's IT"
        ],
        "isoDate": "2025-01-31T09:00:58.000Z"
      }
    ]
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": [
      {
        "title": "컴포즈에 사용할 Composable Architecutre 설명(리엑트?)",
        "link": "https://thdev.tech/architecture/2025/02/02/Android-Architecture-01/",
        "pubDate": "Sun, 02 Feb 2025 00:00:00 +0000",
        "content": "<p>이 글은 최근 유행하는 MVI (Model-View-Intent) 패턴과는 다른, 리액트의 Reducer, UiState, Effect, Action 개념을 포함하는 T Composable Architecture를 소개하는 글의 첫 번째 편입니다.</p>\n\n<ul>\n  <li><a href=\"https://github.com/taehwandev/TComposableArchitecture\">TComposableArchitecture - 링크</a></li>\n  <li>2부 예고: Alert/Snackbar(Toast)의 로직 처리를 위한 고민</li>\n</ul>\n\n<p>T는 글쓴이 이름의 첫 글자이며, 나머지는 Compose와 Architecture를 의미합니다.</p>\n\n<p>Compose에서는 MVI가 가장 적합하다는 의견이 많지만, MVI를 소개하는 cycle.js.org에서는 다음과 같이 설명합니다.</p>\n\n<p><a href=\"https://cycle.js.org/model-view-intent.html\">cycle.js.org - Model-View-Intent - 링크</a></p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Model-View-Intent (MVI) is reactive, functional, and follows the core idea in MVC. It is reactive because Intent observes the User, Model observes the Intent, View observes the Model, and the User observes the View. It is functional because each of these components is expressed as a referentially transparent function over streams. It follows the original MVC purpose because View and Intent bridge the gap between the user and the digital model, each in one direction.\n</code></pre></div></div>\n\n<p>위를 번역하면 아래와 같은데,</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>모델-뷰-인텐트(MVI)는 반응적이고 기능적이며 MVC의 핵심 아이디어를 따릅니다. 인텐트가 사용자를 관찰하고, 모델이 인텐트를 관찰하고, 뷰가 모델을 관찰하고, 사용자가 뷰를 관찰하기 때문에 반응형입니다. 이러한 각 구성 요소는 스트림을 통해 참조적으로 투명한 함수로 표현되므로 기능적입니다. 뷰와 인텐트는 각각 한 방향으로 사용자와 디지털 모델 사이의 간극을 메우기 때문에 원래의 MVC 목적에 부합합니다.\n</code></pre></div></div>\n\n<p>핵심은 reactive, functional, MVC의 융합입니다. 지금 우리가 사용하는 MVI 패턴과는 다른 부분이 있는데, reactive와 functional은 같고 MVVM을 포함해서 UDF(단방향 데이터 흐름)가 더 적합하다고 보는 것이 좋아보인다.</p>\n\n<h3>이 글에서는</h3>\n<ul>\n  <li>필자가 생각하는 Composable 구조는?</li>\n</ul>\n\n<!--more-->\n\n<h2>아키텍처 이해는?</h2>\n\n<p>아키텍처를 이해하는 데 필요한 부분은 UDF(Unidirectional Data Flow, 단방향 데이터 흐름)를 통해 설명하는 것이 가장 좋다. 여기서 실질적인 데이터 흐름을 관찰하고 능동적으로 변화하는지 여부가 리액트의 핵심 개념이다.</p>\n\n<p><a href=\"https://thdev.tech/dataflow/2024/11/09/Data-flow/\">데이터 흐름(Data flow)을 이해해 보는 데 있어 필요한 것은? 짝퉁 개발자처럼 논하기</a></p>\n\n<p>일반적인 Android 아키텍처에서의 데이터 흐름을 표현하면 아래와 같다.</p>\n\n<p><img src=\"/images/posts/2025/Android-Architecture-01/sample_01.png\" alt=\"sample_01\" /></p>\n\n<p>현재는 UiState를 포함하는데, 이 또한 리액트의 개념 중 하나이다.</p>\n\n<p><br /></p>\n\n<h3>데이터 흐름 표현한 코드</h3>\n\n<p>위 도식에 대한 코드를 작성하며 설명해보겠다</p>\n\n<h4>Repository 부분</h4>\n\n<p>그림과 반대로 Repository 코드부터 작성해야 어느 부분이 구독을 일으켜 반응적으로 업데이트되는지 이해할 수 있다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">class</span> <span class=\"nc\">SomeRepository</span><span class=\"p\">(</span><span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">someApi</span><span class=\"p\">:</span> <span class=\"nc\">SomeApi</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n  <span class=\"k\">suspend</span> <span class=\"k\">fun</span> <span class=\"nf\">loadData</span><span class=\"p\">():</span> <span class=\"nc\">DataEntity</span> <span class=\"p\">=</span>\n    <span class=\"n\">someApi</span><span class=\"p\">.</span><span class=\"nf\">load</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h4>ViewModel 부분</h4>\n\n<p>이 부분에서는 호출이 일어나고, 코루틴 blocking으로 응답을 처리한다. 응답 결과를 반응적으로 받는 것이 아니라 즉시 호출하고 즉시 반환받는다는 점이 중요하다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">class</span> <span class=\"nc\">SomeViewModel</span><span class=\"p\">(</span><span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">someRepository</span><span class=\"p\">:</span> <span class=\"nc\">SomeRepository</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n  <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">_uiState</span> <span class=\"p\">=</span> <span class=\"nc\">MutableStateFlow</span><span class=\"p\">(</span><span class=\"nc\">SomeUiState</span><span class=\"p\">())</span>\n  <span class=\"kd\">val</span> <span class=\"py\">uiState</span> <span class=\"p\">=</span> <span class=\"n\">_uiState</span><span class=\"p\">.</span><span class=\"nf\">asStateFlow</span><span class=\"p\">()</span>\n\n  <span class=\"k\">fun</span> <span class=\"nf\">load</span><span class=\"p\">()</span> <span class=\"p\">=</span> <span class=\"n\">viewModelScope</span><span class=\"p\">.</span><span class=\"nf\">launch</span> <span class=\"p\">{</span>\n    <span class=\"kd\">val</span> <span class=\"py\">data</span> <span class=\"p\">=</span> <span class=\"n\">someRepository</span><span class=\"p\">.</span><span class=\"nf\">loadData</span><span class=\"p\">()</span> <span class=\"c1\">// 여기까진 일반적인 호출</span>\n    <span class=\"c1\">// 여기부터 반응형을 위한 stateFlow 관리</span>\n    <span class=\"n\">_uiState</span><span class=\"p\">.</span><span class=\"n\">value</span> <span class=\"p\">=</span> <span class=\"n\">data</span><span class=\"p\">.</span><span class=\"nf\">convert</span><span class=\"p\">()</span> <span class=\"c1\">// convert 후 _uiState에 갱신</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h4>ViewModel에 Effect를 추가하여 reducer 처럼 사용한다면</h4>\n\n<p>현재는 반응형 코드 형태로 StateFlow를 사용하고 있다. 여기에 MVI의 Effect를 추가하면 아래와 같이 변경해야 한다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">sealed</span> <span class=\"kd\">interface</span> <span class=\"nc\">Effect</span> <span class=\"p\">{</span>\n  <span class=\"n\">data</span> <span class=\"kd\">object</span> <span class=\"nc\">Load</span> <span class=\"p\">:</span> <span class=\"nc\">Effect</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>Effect를 받아서 처리하도록 수정하면:</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">class</span> <span class=\"nc\">SomeViewModel</span><span class=\"p\">(</span><span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">someRepository</span><span class=\"p\">:</span> <span class=\"nc\">SomeRepository</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n  <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">_uiState</span> <span class=\"p\">=</span> <span class=\"nc\">MutableStateFlow</span><span class=\"p\">(</span><span class=\"nc\">SomeUiState</span><span class=\"p\">())</span>\n  <span class=\"kd\">val</span> <span class=\"py\">uiState</span> <span class=\"p\">=</span> <span class=\"n\">_uiState</span><span class=\"p\">.</span><span class=\"nf\">asStateFlow</span><span class=\"p\">()</span>\n\n  <span class=\"k\">fun</span> <span class=\"nf\">reduce</span><span class=\"p\">(</span><span class=\"n\">effect</span><span class=\"p\">:</span> <span class=\"nc\">Effect</span><span class=\"p\">)</span> <span class=\"p\">=</span> <span class=\"n\">viewModelScope</span><span class=\"p\">.</span><span class=\"nf\">launch</span> <span class=\"p\">{</span>\n    <span class=\"k\">when</span> <span class=\"p\">(</span><span class=\"n\">effect</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">is</span> <span class=\"nc\">Effect</span><span class=\"p\">.</span><span class=\"nc\">Load</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n        <span class=\"kd\">val</span> <span class=\"py\">data</span> <span class=\"p\">=</span> <span class=\"n\">someRepository</span><span class=\"p\">.</span><span class=\"nf\">loadData</span><span class=\"p\">()</span> <span class=\"c1\">// 여기까진 일반적인 호출</span>\n        <span class=\"c1\">// 여기부터 반응형을 위한 stateFlow 관리</span>\n        <span class=\"n\">_uiState</span><span class=\"p\">.</span><span class=\"n\">value</span> <span class=\"p\">=</span> <span class=\"n\">data</span><span class=\"p\">.</span><span class=\"nf\">convert</span><span class=\"p\">()</span> <span class=\"c1\">// convert 후 _uiState에 갱신</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>이 코드는 간단하게 작성되었고, 사용하는 MVI 라이브러리에 따라 다를 수 있다. 마지막에 UiState를 반환하고 BaseReducer로 전달하는 작업을 하는 라이브러리도 있지만, 여기서는 생략했다.</p>\n\n<h4>View 부분</h4>\n\n<p>마지막으로 View 부분이다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">ContentView</span><span class=\"p\">(</span>\n  <span class=\"n\">someViewModel</span><span class=\"p\">:</span> <span class=\"nc\">SomeViewModel</span> <span class=\"p\">=</span> <span class=\"nf\">viewModels</span><span class=\"p\">(),</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">val</span> <span class=\"py\">uiState</span> <span class=\"k\">by</span> <span class=\"n\">someViewModel</span><span class=\"p\">.</span><span class=\"n\">uiState</span><span class=\"p\">.</span><span class=\"nf\">collectAsStateWithLifecycle</span><span class=\"p\">()</span>\n\n  <span class=\"nc\">Column</span> <span class=\"p\">{</span>\n    <span class=\"nc\">Button</span><span class=\"p\">(</span>\n      <span class=\"n\">onClick</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n        <span class=\"n\">someViewModel</span><span class=\"p\">.</span><span class=\"nf\">reduce</span><span class=\"p\">(</span><span class=\"nc\">Effect</span><span class=\"p\">.</span><span class=\"nc\">Load</span><span class=\"p\">),</span> <span class=\"c1\">// 새로운 데이터 업데이트</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nc\">Text</span><span class=\"p\">(</span>\n        <span class=\"n\">text</span> <span class=\"p\">=</span> <span class=\"s\">\"Button\"</span><span class=\"p\">,</span>\n      <span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nc\">Text</span><span class=\"p\">(</span>\n      <span class=\"n\">text</span> <span class=\"p\">=</span> <span class=\"n\">uiState</span><span class=\"p\">.</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"c1\">// UiState에 따라 갱신</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>이 코드를 도식화한 부분이 위에서 본 그림에 해당한다.</p>\n\n<p><img src=\"/images/posts/2025/Android-Architecture-01/sample_01.png\" alt=\"sample_01\" /></p>\n\n<p><br /></p>\n\n<h2>MVI인가 안드로이드 아키텍처인가?</h2>\n\n<p>제 생각에는 크게 보면 MVI와 Android 아키텍처는 크게 다르지 않다고 생각한다.</p>\n\n<p>Android 아키텍처도 리액트의 UiState 개념을 포함하고 있으며, 이미 오래전부터 RxJava, LiveData, Flow 같은 리액트 개념을 가져와서 사용하고 있었다. 동적으로 데이터 흐름을 받고, 이걸 업데이트하는 부분을 구독 형태로 사용했죠.</p>\n\n<p>그럼 남는 것은 무엇일까? 좀 더 쉽게 쓸 수 있는 부분을 추가하면 어떨까?</p>\n\n<p>그전에 ViewModel에 이벤트를 전달할 때 어떻게 하는지 살펴보는 것이 좋을 것 같다.</p>\n\n<p><br /></p>\n\n<h2>Action</h2>\n\n<ul>\n  <li>내용 수정</li>\n</ul>\n\n<p>Action은 View에서 ViewModel로 이벤트를 전달하는 데 사용되는 개념이다. MVI 패턴에서는 Intent가 Action과 유사한 역할을 한다.</p>\n\n<p>이후 데이터 흐름은 Action을 받고, ViewModel은 Action에 따라 UiState를 업데이트할 수 있다. View는 업데이트된 UiState를 사용하여 화면을 그린다.</p>\n\n<p>반대로 ViewModel에서 발생한 이벤트를 Effect를 통해 View에 전달하는데 사용한다. Effect는 Toast 메시지 표시, 화면 이동 등과 같은 일회성 이벤트를 나타낸다.</p>\n\n<p>그럼 <code class=\"language-plaintext highlighter-rouge\">@Composable</code> 함수에서 onClick을 처리하는 방법에 대해 크게 3가지로 나눠 설명해 본다.</p>\n\n<h4>1. Higher-order function을 파라미터로 받아서 호출하는 방식</h4>\n\n<p>제일 흔하게 쓰는 방법 중 하나이다. 이 방식을 버릴 수는 없다. Action을 지정할 수는 없으니까 공통 컴포넌트를 만들거나 재사용해야 하는 Component를 만들 때 이 방식은 필수이다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">SomeItem</span><span class=\"p\">(</span>\n  <span class=\"n\">onClick</span><span class=\"p\">:</span> <span class=\"p\">()</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nc\">Surface</span><span class=\"p\">(</span>\n    <span class=\"n\">onClick</span> <span class=\"p\">=</span> <span class=\"n\">onClick</span><span class=\"p\">,</span>\n  <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// 생략</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>하지만 이 방식은 ViewModel이 있는 곳까지 끌어올려 체이닝시켜야 한다는 단점이 있다. 그렇다고 안 할 수도 없고, ViewModel을 모든 곳에 주입할 수도 없다.</p>\n\n<h4>2. ViewModel 같은 호출 함수를 직접 파라미터로 전달해서 호출하는 방법</h4>\n\n<p>1번 방법에서 Screen을 만나면 ViewModel을 쓸 수 있는데, 이 부분에서 Higher-order function을 실질적인 함수 호출할 수 있다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">SomeScreen</span><span class=\"p\">(</span>\n  <span class=\"n\">viewModel</span><span class=\"p\">:</span> <span class=\"nc\">SomeViewModel</span> <span class=\"p\">=</span> <span class=\"nf\">viewModels</span><span class=\"p\">(),</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nc\">Surface</span><span class=\"p\">(</span>\n    <span class=\"n\">onClick</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n      <span class=\"n\">viewModel</span><span class=\"p\">.</span><span class=\"nf\">some</span><span class=\"p\">()</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// 생략</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>여기서 주의할 점은 Stateless와 Stateful로 함수를 잘 구분해서 작성해야 Preview에 좋다는 것인데, 무작정 Stateful로 작성하면 Preview가 어려워진다.</p>\n\n<p><a href=\"https://developer.android.com/develop/ui/compose/state\">Stateful versus stateless - 공식 문서 링크</a></p>\n\n<h4>3-1. UiState에 Higher-order 정의를 넘겨주고 호출하는 방식</h4>\n\n<p>Effect를 모른다면 이 방식도 선택할 수 있을것 같다. 어떤 함수를 불러야 할지 모른다면.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">data class</span> <span class=\"nc\">SomeUiState</span><span class=\"p\">(</span>\n  <span class=\"kd\">val</span> <span class=\"py\">onClick</span><span class=\"p\">:</span> <span class=\"p\">()</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>Item을 사용하면 viewModel을 알지 않더라도 바로 불러줄 수 있는 장점이 생긴다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">SomeView</span><span class=\"p\">(</span>\n  <span class=\"n\">someUiState</span><span class=\"p\">:</span> <span class=\"nc\">SomeUiState</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nc\">Surface</span><span class=\"p\">(</span>\n    <span class=\"n\">onClick</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n      <span class=\"n\">someUiState</span><span class=\"p\">.</span><span class=\"nf\">onClick</span><span class=\"p\">()</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// 생략</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h4>3-2. UiState에 Action(Effect) 정보를 넘겨주고 호출하는 방식</h4>\n\n<p>이번엔 Effect를 정의하고, 이를 활용한다면 어떨까?</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">sealed</span> <span class=\"kd\">interface</span> <span class=\"nc\">Effect</span> <span class=\"p\">{</span>\n  <span class=\"n\">data</span> <span class=\"kd\">object</span> <span class=\"nc\">Some</span> <span class=\"p\">:</span> <span class=\"nc\">Effect</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">data class</span> <span class=\"nc\">SomeUiState</span><span class=\"p\">(</span>\n  <span class=\"kd\">val</span> <span class=\"py\">effect</span><span class=\"p\">:</span> <span class=\"nc\">Effect</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>이 방식에서는 결국 viewModel을 알아야 호출할 수 있다는 점이다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">SomeScreen</span><span class=\"p\">(</span>\n  <span class=\"n\">someUiState</span><span class=\"p\">:</span> <span class=\"nc\">SomeUiState</span><span class=\"p\">,</span>\n  <span class=\"n\">viewModel</span><span class=\"p\">:</span> <span class=\"nc\">SomeViewModel</span> <span class=\"p\">=</span> <span class=\"nf\">viewModels</span><span class=\"p\">(),</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nc\">Surface</span><span class=\"p\">(</span>\n    <span class=\"n\">onClick</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n      <span class=\"n\">viewModel</span><span class=\"p\">.</span><span class=\"nf\">onEffect</span><span class=\"p\">(</span><span class=\"n\">someUiState</span><span class=\"p\">.</span><span class=\"n\">effect</span><span class=\"p\">)</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// 생략</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p><br /></p>\n\n<h2>이 같은 방식은</h2>\n\n<p>위에서 나열한 4가지 방식은 필자가 생각나는 대로 적은 것이다.</p>\n\n<p>1, 2, 3-2 방식은 viewModel을 결국 <code class=\"language-plaintext highlighter-rouge\">@Composable</code>에서 알아야 한다는 단점이 생기고, 여기 까지 끌고 오기 위해선 Higher-order function을 계속 넘겨줘야 한다는 부분도 생긴다.</p>\n\n<blockquote>\n  <p>결국 Higher-order function을 계속 넘겨주는 것도 나쁜 건 아니지만 많아지면 관리할 부분이 많다는 점이 생긴다.</p>\n</blockquote>\n\n<p>그렇다고 3-1번의 방식을 선택하는 것은 좋은 선택지는 아니라고 보는데, 고민이 필요하지만 개발 편의성에서는 최고의 선택일 듯 하다.</p>\n\n<p><br /></p>\n\n<h2>T Composable Architecture</h2>\n\n<p>필자가 작업한 T Composable Architecture는 과거에 작성한 글에서도 이야기했던 부분에 해당한다.</p>\n\n<ul>\n  <li><a href=\"https://thdev.tech/android/2021/10/18/Android-ViewModel-ClickEvent/\">Android view에서 ViewModel을 어떻게 호출해 사용해 볼 수 있을까?</a></li>\n  <li><a href=\"https://thdev.tech/android/2021/10/23/Android-ViewModel-ClickEvent-UnitTest/\">Android view에서 ViewModel을 호출했는데, UnitTest는 어떻게 할까?</a></li>\n</ul>\n\n<p>이 글에서도 이미 소개했던 방식을 Compose 전용으로 라이브러리화하여 배포했다.</p>\n\n<p>여기선 용어도 수정하였고, 형태도 변경시켰다.</p>\n\n<ul>\n  <li>Action : Effect, MVI에서 말하는 Intent와 동일할 수 있다. view에서는 Action을 발생 시킨다.</li>\n  <li>reducer : ViewModel에서 View에서 발생한 Action을 받아 처리하는 부분이다. MVI 코드에서는 Intent를 reducer로 처리하는 것과 동일하다.\n    <ul>\n      <li>다만 마지막에 Action은 다음 Action을 지정할 수 있다.</li>\n      <li>이 방식은 <a href=\"https://github.com/pointfreeco/swift-composable-architecture\">Swift-composable architecture - 링크</a>에서 영감 받은 부분이다.</li>\n    </ul>\n  </li>\n</ul>\n\n<p>나머지는 코드 부분에 대한 부분이고, 이 글에서 알아야 할 부분은 위와 같이 2가지이다.</p>\n\n<p><br /></p>\n\n<h2>T Composable Architecture 활용하기</h2>\n\n<p>활용하기 전에 전체 sequence를 그려보았는데, flow 1과 flow 2로 나눠질 수 있다. Repository에서 이벤트 처리 후 UiState를 갱신할 수도 있고, SideEffect를 처리 할 수도 있다.</p>\n\n<p><img src=\"/images/posts/2025/Android-Architecture-01/sample_02.webp\" alt=\"sample_02\" /></p>\n\n<p>전체 샘플 코드는 아래 링크를 참고하길</p>\n\n<p><a href=\"https://github.com/taehwandev/TComposableArchitecture/blob/main/app/src/main/java/tech/thdev/composable/architecture/app/feature/main/MainActivity.kt\">Sample code - link</a></p>\n\n<h4>디펜던시 정의</h4>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>implementation(\"tech.thdev:composable-architecture-system:latestversion\")\n</code></pre></div></div>\n\n<h4>Action 정의</h4>\n\n<p>Action을 정의하는데, CaAction을 상속받아 구현한다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">sealed</span> <span class=\"kd\">interface</span> <span class=\"nc\">Action</span> <span class=\"p\">:</span> <span class=\"nc\">CaAction</span> <span class=\"p\">{</span>\n    \n    <span class=\"n\">data</span> <span class=\"kd\">object</span> <span class=\"nc\">Task</span> <span class=\"p\">:</span> <span class=\"nc\">Action</span> <span class=\"c1\">// Use object for simple actions</span>\n    \n    <span class=\"n\">data</span> <span class=\"kd\">object</span> <span class=\"nc\">LoadData</span> <span class=\"p\">:</span> <span class=\"nc\">Action</span> <span class=\"c1\">// Use object for simple actions</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h4>SideEffect 정의</h4>\n\n<p>여기서는 SideEffect란 용어를 사용하였다. CaSideEffect를 상속 받아 구현한다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">sealed</span> <span class=\"kd\">interface</span> <span class=\"nc\">SideEffect</span> <span class=\"p\">:</span> <span class=\"nc\">CaSideEffect</span> <span class=\"p\">{</span>\n    \n    <span class=\"n\">data</span> <span class=\"kd\">object</span> <span class=\"nc\">ShowToast</span> <span class=\"p\">:</span> <span class=\"nc\">SideEffect</span> <span class=\"c1\">// Use object for simple side effects</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h4>ViewModel 정의</h4>\n\n<p>Hilt를 사용하여 아래와 같이 사용할 ViewModel을 지정한다.</p>\n\n<p>여기서는 reducer()를 상속받아 정의한다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@HiltViewModel</span>\n<span class=\"kd\">class</span> <span class=\"nc\">MainViewModel</span> <span class=\"nd\">@Inject</span> <span class=\"k\">constructor</span><span class=\"p\">(</span>\n    <span class=\"n\">flowCaActionStream</span><span class=\"p\">:</span> <span class=\"nc\">FlowCaActionStream</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">CaViewModel</span><span class=\"p\">&lt;</span><span class=\"nc\">Action</span><span class=\"p\">,</span> <span class=\"nc\">SideEffect</span><span class=\"p\">&gt;(</span><span class=\"n\">flowCaActionStream</span><span class=\"p\">,</span> <span class=\"nc\">Action</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n\n  <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">_uiState</span> <span class=\"p\">=</span> <span class=\"nc\">MutableStateFlow</span><span class=\"p\">(</span><span class=\"nc\">UiState</span><span class=\"p\">())</span>\n  <span class=\"kd\">val</span> <span class=\"py\">state</span> <span class=\"p\">=</span> <span class=\"n\">_uiState</span><span class=\"p\">.</span><span class=\"nf\">asStateFlow</span><span class=\"p\">()</span>\n\n  <span class=\"k\">override</span> <span class=\"k\">suspend</span> <span class=\"k\">fun</span> <span class=\"nf\">reducer</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">:</span> <span class=\"nc\">Action</span><span class=\"p\">):</span> <span class=\"nc\">CaAction</span> <span class=\"p\">=</span>\n      <span class=\"k\">when</span> <span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n          <span class=\"k\">is</span> <span class=\"nc\">Action</span><span class=\"p\">.</span><span class=\"nc\">Task</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n            <span class=\"n\">_uiState</span><span class=\"p\">.</span><span class=\"n\">value</span> <span class=\"p\">=</span> <span class=\"nc\">UiState</span><span class=\"p\">(</span><span class=\"n\">showPlaceholder</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">)</span>\n            <span class=\"nc\">Action</span><span class=\"p\">.</span><span class=\"nc\">LoadData</span> <span class=\"c1\">// next event</span>\n          <span class=\"p\">}</span>\n\n          <span class=\"k\">is</span> <span class=\"nc\">Action</span><span class=\"p\">.</span><span class=\"nc\">LoadData</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n              <span class=\"kd\">val</span> <span class=\"py\">loadEnd</span> <span class=\"p\">=</span> <span class=\"c1\">// load network</span>\n              <span class=\"n\">_uiState</span><span class=\"p\">.</span><span class=\"n\">value</span> <span class=\"p\">=</span> <span class=\"nc\">UiState</span><span class=\"p\">(</span><span class=\"n\">text</span> <span class=\"p\">=</span> <span class=\"n\">loadEnd</span><span class=\"p\">)</span>\n\n              <span class=\"nf\">sendSideEffect</span><span class=\"p\">(</span><span class=\"nc\">SideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowToast</span><span class=\"p\">)</span>\n\n              <span class=\"nc\">CaActionNone</span> <span class=\"c1\">// Or return another action</span>\n          <span class=\"p\">}</span>\n          <span class=\"c1\">// ... other actions</span>\n      <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h4>Activity에서 사용하는 경우</h4>\n\n<p>마지막으로 Activity에서는 아래와 같이 동작시켜줘야 한다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@AndroidEntryPoint</span>\n<span class=\"kd\">class</span> <span class=\"nc\">MainActivity</span> <span class=\"p\">:</span> <span class=\"nc\">CaActionActivity</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">mainViewModel</span> <span class=\"k\">by</span> <span class=\"n\">viewModels</span><span class=\"p\">&lt;</span><span class=\"nc\">MainViewModel</span><span class=\"p\">&gt;()</span>\n\n    <span class=\"nd\">@Composable</span>\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">ContentView</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"nc\">TComposableArchitectureTheme</span> <span class=\"p\">{</span>\n            <span class=\"kd\">val</span> <span class=\"py\">action</span> <span class=\"p\">=</span> <span class=\"nc\">LocalActionOwner</span><span class=\"p\">.</span><span class=\"n\">current</span>\n\n            <span class=\"nc\">Column</span> <span class=\"p\">{</span>\n              <span class=\"nc\">Button</span><span class=\"p\">(</span>\n                <span class=\"n\">onClick</span> <span class=\"p\">=</span> <span class=\"n\">action</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"nc\">Action</span><span class=\"p\">.</span><span class=\"nc\">LoadData</span><span class=\"p\">),</span>\n              <span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"nc\">Text</span><span class=\"p\">(</span>\n                  <span class=\"n\">text</span> <span class=\"p\">=</span> <span class=\"s\">\"OnClick\"</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n              <span class=\"p\">}</span>\n\n              <span class=\"nc\">Text</span><span class=\"p\">(</span>\n                <span class=\"n\">text</span> <span class=\"p\">=</span> <span class=\"n\">uiState</span><span class=\"p\">.</span><span class=\"n\">text</span><span class=\"p\">,</span>\n              <span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"nc\">LaunchedEffect</span><span class=\"p\">(</span><span class=\"nc\">Unit</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"n\">mainViewModel</span><span class=\"p\">.</span><span class=\"nf\">loadAction</span><span class=\"p\">()</span> <span class=\"c1\">// Required: Load actions</span>\n                <span class=\"n\">mainViewModel</span><span class=\"p\">.</span><span class=\"nf\">action</span><span class=\"p\">(</span><span class=\"nc\">Action</span><span class=\"p\">.</span><span class=\"nc\">Task</span><span class=\"p\">)</span> <span class=\"c1\">// Option task</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"n\">mainViewModel</span><span class=\"p\">.</span><span class=\"n\">sideEffect</span><span class=\"p\">.</span><span class=\"nf\">collectAsEvent</span> <span class=\"p\">{</span> <span class=\"c1\">// Optional: Handle side effects</span>\n                <span class=\"k\">when</span> <span class=\"p\">(</span><span class=\"n\">it</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                    <span class=\"nc\">SideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowToast</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                        <span class=\"nc\">Toast</span><span class=\"p\">.</span><span class=\"nf\">makeText</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"nd\">@MainActivity</span><span class=\"p\">,</span> <span class=\"s\">\"message\"</span><span class=\"p\">,</span> <span class=\"nc\">Toast</span><span class=\"p\">.</span><span class=\"nc\">LENGTH_SHORT</span><span class=\"p\">).</span><span class=\"nf\">show</span><span class=\"p\">()</span>\n                    <span class=\"p\">}</span>\n                    <span class=\"c1\">// ... other side effects</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h4>Composable에서 활용하는 경우</h4>\n\n<p>만약 Composable에서 이를 활용한다고 하면</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">SomeScreen</span><span class=\"p\">(</span>\n  <span class=\"n\">mainViewModel</span><span class=\"p\">:</span> <span class=\"nc\">MainViewModel</span> <span class=\"p\">=</span> <span class=\"nf\">viewModels</span><span class=\"p\">(),</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">val</span> <span class=\"py\">uiState</span> <span class=\"k\">by</span> <span class=\"n\">mainViewModel</span><span class=\"p\">.</span><span class=\"n\">uiState</span><span class=\"p\">.</span><span class=\"nf\">collectAsStateWithLifecycle</span><span class=\"p\">()</span>\n\n  <span class=\"nc\">SomeScreen</span><span class=\"p\">(</span>\n    <span class=\"n\">uiState</span> <span class=\"p\">=</span> <span class=\"n\">uiState</span><span class=\"p\">,</span>\n  <span class=\"p\">)</span>\n\n  <span class=\"nc\">LaunchedEffect</span><span class=\"p\">(</span><span class=\"nc\">Unit</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"n\">mainViewModel</span><span class=\"p\">.</span><span class=\"nf\">loadAction</span><span class=\"p\">()</span> <span class=\"c1\">// Required: Load actions</span>\n      <span class=\"n\">mainViewModel</span><span class=\"p\">.</span><span class=\"nf\">action</span><span class=\"p\">(</span><span class=\"nc\">Action</span><span class=\"p\">.</span><span class=\"nc\">Task</span><span class=\"p\">)</span> <span class=\"c1\">// Option task</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">SomeScreen</span><span class=\"p\">(</span>\n  <span class=\"n\">uiState</span><span class=\"p\">:</span> <span class=\"nc\">UiState</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">val</span> <span class=\"py\">action</span> <span class=\"p\">=</span> <span class=\"nc\">LocalActionOwner</span><span class=\"p\">.</span><span class=\"n\">current</span>\n\n  <span class=\"nc\">Column</span> <span class=\"p\">{</span>\n    <span class=\"nc\">Button</span><span class=\"p\">(</span>\n      <span class=\"n\">onClick</span> <span class=\"p\">=</span> <span class=\"n\">action</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"nc\">Action</span><span class=\"p\">.</span><span class=\"nc\">LoadData</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"nc\">Text</span><span class=\"p\">(</span>\n        <span class=\"n\">text</span> <span class=\"p\">=</span> <span class=\"s\">\"OnClick\"</span><span class=\"p\">,</span>\n      <span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nc\">Text</span><span class=\"p\">(</span>\n      <span class=\"n\">text</span> <span class=\"p\">=</span> <span class=\"n\">uiState</span><span class=\"p\">.</span><span class=\"n\">text</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>구현할 부분에서는 <code class=\"language-plaintext highlighter-rouge\">loadAction</code>을 호출을 LaunchEffect()에 따라 생성하도록 강제하였다.</p>\n\n<p><br /></p>\n\n<h2>LocalActionOwner의 활용은?</h2>\n\n<p>이 코드는 크게 Action을 처리하기 위한 내부 구현체가 하나 있다. 나머진 일반적인 MVVM + 리엑트, UiState 처리와 동일하다.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">LocalActionOwner.current</code>를 사용하였을때의 장점은 무엇일까?</p>\n\n<ul>\n  <li>viewModel, Higher-order function을 파라메터로 매번 넘길 필요없이 사용할 위치에서 즉시 <code class=\"language-plaintext highlighter-rouge\">LocalActionOwner.current</code>를 사용하여 액션을 전달할 수 있다.</li>\n</ul>\n\n<p>이 하나만으로도 개발에서 귀찮은 보일러플레이트 코드를 줄일 수 있을 거라고 생각한다.</p>\n\n<p>다행히도 LocalActionOwner.current를 포함해도 Preview에 영향 받지 않는다는 점이다.</p>\n\n<p><br /></p>\n\n<h2>Action에서 Next 활용은?</h2>\n\n<p>그리고 앞서 언급하였듯 reducer에서는 next Action을 정의하도록 구현하였다.</p>\n\n<ul>\n  <li>filter하여 현재 Screen에서 발생한 이벤트만을 감지할 수 있다.\n    <ul>\n      <li>내가 가진 화면에서의 Action 만을 처리한다. 만약 필요하면 상위에서 정의한 Action을 넘겨야 한다.\n        <ul>\n          <li>보통 그럴일이 잘 없긴하다.</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>ViewModel에서 이벤트를 처리하고나서도 다른 액션을 또 처리해야할 때가 있다. A 액션이 끝나면 B 액션을 처리해야 하는 경우가 꼭 생긴다. 이런 부분을 어떻게 할까하다가 TCA에서 활용하는 방식으로 리턴 시켰다.\n    <ul>\n      <li>이 부분은 MVI에서 UiState를 리턴시키는것과는 매우 다른 부분이다.</li>\n    </ul>\n  </li>\n</ul>\n\n<p>리턴 시킨 Aciton이 다음 이벤트 어떤 걸 처리할지를 지정할 수 있도록 하였는데, 이런 장점으로 인해 A가 끝나면 B로 이벤트를 전달하여 처리할 수 있다.</p>\n\n<p>함수 다시 부르면 되는 것도 있겠지만 Stream 상에서의 다음 이벤트를 또 이어주기가 쉽진 않아 이 방식으로 구현하도록 해두었다.</p>\n\n<p><br /></p>\n\n<h2>주요 코드</h2>\n\n<p>주요 코드는 다음과 같다.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">InternalCaAction</code>을 <code class=\"language-plaintext highlighter-rouge\">@Singleton</code>으로 작성했다는 점이 특징이다. 앱 내에 단 하나만 존재할 수 있다.</p>\n\n<p>SharedFlow를 활용하여 여러 view에서 동일한 이벤트를 하나로 통합했지만, 어디에서나 접근 가능하다는 단점이 있다. 반대로 어디서든 보낼 수 있다는 장점이 있다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Singleton</span>\n<span class=\"kd\">class</span> <span class=\"nc\">InternalCaAction</span> <span class=\"nd\">@Inject</span> <span class=\"k\">constructor</span><span class=\"p\">()</span> <span class=\"p\">:</span> <span class=\"nc\">FlowCaActionStream</span><span class=\"p\">,</span> <span class=\"nc\">CaActionSender</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">flowCaAction</span> <span class=\"p\">=</span> <span class=\"nc\">MutableSharedFlow</span><span class=\"p\">&lt;</span><span class=\"nc\">CaAction</span><span class=\"p\">&gt;(</span>\n        <span class=\"n\">extraBufferCapacity</span> <span class=\"p\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">onBufferOverflow</span> <span class=\"p\">=</span> <span class=\"nc\">BufferOverflow</span><span class=\"p\">.</span><span class=\"nc\">DROP_OLDEST</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">flowAction</span><span class=\"p\">():</span> <span class=\"nc\">Flow</span><span class=\"p\">&lt;</span><span class=\"nc\">CaAction</span><span class=\"p\">&gt;</span> <span class=\"p\">=</span>\n        <span class=\"n\">flowCaAction</span><span class=\"p\">.</span><span class=\"nf\">asSharedFlow</span><span class=\"p\">()</span>\n            <span class=\"p\">.</span><span class=\"nf\">filter</span> <span class=\"p\">{</span> <span class=\"n\">it</span> <span class=\"p\">!=</span> <span class=\"nc\">CaActionNone</span> <span class=\"p\">}</span>\n\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">:</span> <span class=\"nc\">CaAction</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">flowCaAction</span><span class=\"p\">.</span><span class=\"nf\">tryEmit</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">nextAction</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">:</span> <span class=\"nc\">CaAction</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>이 문제를 해결하기 위해 <code class=\"language-plaintext highlighter-rouge\">CaViewModel</code>에 필터링 코드를 추가했다.</p>\n\n<pre><code class=\"language-kotiln\">abstract class CaViewModel&lt;ACTION : CaAction, SIDE_EFFECT : CaSideEffect&gt;(\n    flowCaActionStream: FlowCaActionStream,\n    actionClass: KClass&lt;ACTION&gt;,\n) : ViewModel() {\n\n    @VisibleForTesting\n    val flowAction by lazy(LazyThreadSafetyMode.NONE) {\n        flowCaActionStream.flowAction()\n            .filterIsInstance(actionClass) // filter\n            .map {\n                reducer(action = it)\n            }\n            .onEach {\n                flowCaActionStream.nextAction(it)\n            }\n    }\n}\n</code></pre>\n\n<p>이제 작성한 screen을 벗어나는 일은 발생하지 않는다.</p>\n\n<p><br /></p>\n\n<h2>Compose에서 활용하기 위한 중요 코드</h2>\n\n<p>액티비티 기준으로 매번 갱신할 이유가 없어 <code class=\"language-plaintext highlighter-rouge\">staticCompositionLocalOf</code>를 사용하였다. 영향 범위에 대한 글은 이전에 웹뷰 작성하면서 언급했기에 여기서는 언급하지 않는다.</p>\n\n<p><a href=\"https://thdev.tech/compose/2024/07/21/Android-Compose-Navigation-Web/\">Compose Navigation - WebView Recomposition 해결? - 링크</a></p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">object</span> <span class=\"nc\">LocalCaActionSenderOwner</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">LocalComposition</span> <span class=\"p\">=</span> <span class=\"n\">staticCompositionLocalOf</span><span class=\"p\">&lt;</span><span class=\"nc\">CaActionSender</span><span class=\"p\">?&gt;</span> <span class=\"p\">{</span> <span class=\"k\">null</span> <span class=\"p\">}</span>\n\n    <span class=\"kd\">val</span> <span class=\"py\">current</span><span class=\"p\">:</span> <span class=\"nc\">CaActionSender</span><span class=\"p\">?</span>\n        <span class=\"nd\">@Composable</span>\n        <span class=\"k\">get</span><span class=\"p\">()</span> <span class=\"p\">=</span> <span class=\"nc\">LocalComposition</span><span class=\"p\">.</span><span class=\"n\">current</span>\n\n    <span class=\"k\">infix</span> <span class=\"k\">fun</span> <span class=\"nf\">provides</span><span class=\"p\">(</span><span class=\"n\">registerOwner</span><span class=\"p\">:</span> <span class=\"nc\">CaActionSender</span><span class=\"p\">):</span> <span class=\"nc\">ProvidedValue</span><span class=\"p\">&lt;</span><span class=\"nc\">CaActionSender</span><span class=\"p\">?&gt;</span> <span class=\"p\">=</span>\n        <span class=\"nc\">LocalComposition</span> <span class=\"n\">provides</span> <span class=\"n\">registerOwner</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p><code class=\"language-plaintext highlighter-rouge\">provides</code>를 시켜두고, 이를 지속해서 활용하는 형태로 만들었다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">CompositionLocalProvider</span><span class=\"p\">(</span>\n    <span class=\"nc\">LocalCaActionSenderOwner</span> <span class=\"n\">provides</span> <span class=\"n\">caActionSender</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nc\">ContentView</span><span class=\"p\">()</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>사용할 때는</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">val</span> <span class=\"py\">action</span> <span class=\"p\">=</span> <span class=\"nc\">LocalActionOwner</span><span class=\"p\">.</span><span class=\"n\">current</span>\n\n<span class=\"nc\">Button</span><span class=\"p\">(</span>\n  <span class=\"n\">onClick</span> <span class=\"p\">=</span> <span class=\"n\">action</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"nc\">Action</span><span class=\"p\">.</span><span class=\"nc\">Some</span><span class=\"p\">)</span>\n<span class=\"p\">)</span> <span class=\"p\">{}</span>\n</code></pre></div></div>\n\n<p>이로 인해 파라미터 전달 이유도 사라지고, 필요한 부분에 <code class=\"language-plaintext highlighter-rouge\">LocalActionOwner.current</code>를 호출하여 사용할 수 있다.</p>\n\n<p><br /></p>\n\n<h2>다음 작업은</h2>\n\n<p>다음 작업은 Alert/Toast/Snackbar를 Action을 활용해 처리하는 방법을 소개할 예정이다. UI 커스터마이징이 가능하도록 설계가 필요하며, Action으로 처리할지 별도로 분리할지 결정해야 한다.</p>\n\n<p>이 부분에 대한 고민은 다음 글에서 다루도록 하겠다.</p>\n\n<p><br /></p>\n\n<h2>마무리</h2>\n\n<p>Slack의 <a href=\"https://slackhq.github.io/circuit/\">Circuit - 링크</a>을 사용하는 것도 좋은 방법 중 하나이지만, 직접 구현한 이유는 어렵지 않다고 생각했기 때문이다.</p>\n\n<p>데이터 흐름이 중요한 부분이라 어려울 부분은 없다고 생각하지만, 개념만 가지고 만든 부분이라 정확하지 않을 수 있다.</p>\n\n<p>이전에 작성한 <a href=\"https://github.com/pointfreeco/swift-composable-architecture\">Swift-composable architecture - 링크</a>에서 영감을 받아 만든 라이브러리라고 생각하는 것이 편할 것 같다.</p>\n\n<p><a href=\"https://thdev.tech/tca/2025/01/04/iOS-TCA/\">iOS TCA 살펴보기 - 링크</a></p>\n\n",
        "contentSnippet": "이 글은 최근 유행하는 MVI (Model-View-Intent) 패턴과는 다른, 리액트의 Reducer, UiState, Effect, Action 개념을 포함하는 T Composable Architecture를 소개하는 글의 첫 번째 편입니다.\nTComposableArchitecture - 링크\n2부 예고: Alert/Snackbar(Toast)의 로직 처리를 위한 고민\nT는 글쓴이 이름의 첫 글자이며, 나머지는 Compose와 Architecture를 의미합니다.\nCompose에서는 MVI가 가장 적합하다는 의견이 많지만, MVI를 소개하는 cycle.js.org에서는 다음과 같이 설명합니다.\ncycle.js.org - Model-View-Intent - 링크\n\nModel-View-Intent (MVI) is reactive, functional, and follows the core idea in MVC. It is reactive because Intent observes the User, Model observes the Intent, View observes the Model, and the User observes the View. It is functional because each of these components is expressed as a referentially transparent function over streams. It follows the original MVC purpose because View and Intent bridge the gap between the user and the digital model, each in one direction.\n\n\n위를 번역하면 아래와 같은데,\n\n모델-뷰-인텐트(MVI)는 반응적이고 기능적이며 MVC의 핵심 아이디어를 따릅니다. 인텐트가 사용자를 관찰하고, 모델이 인텐트를 관찰하고, 뷰가 모델을 관찰하고, 사용자가 뷰를 관찰하기 때문에 반응형입니다. 이러한 각 구성 요소는 스트림을 통해 참조적으로 투명한 함수로 표현되므로 기능적입니다. 뷰와 인텐트는 각각 한 방향으로 사용자와 디지털 모델 사이의 간극을 메우기 때문에 원래의 MVC 목적에 부합합니다.\n\n\n핵심은 reactive, functional, MVC의 융합입니다. 지금 우리가 사용하는 MVI 패턴과는 다른 부분이 있는데, reactive와 functional은 같고 MVVM을 포함해서 UDF(단방향 데이터 흐름)가 더 적합하다고 보는 것이 좋아보인다.\n이 글에서는\n필자가 생각하는 Composable 구조는?\n아키텍처 이해는?\n아키텍처를 이해하는 데 필요한 부분은 UDF(Unidirectional Data Flow, 단방향 데이터 흐름)를 통해 설명하는 것이 가장 좋다. 여기서 실질적인 데이터 흐름을 관찰하고 능동적으로 변화하는지 여부가 리액트의 핵심 개념이다.\n데이터 흐름(Data flow)을 이해해 보는 데 있어 필요한 것은? 짝퉁 개발자처럼 논하기\n일반적인 Android 아키텍처에서의 데이터 흐름을 표현하면 아래와 같다.\n\n현재는 UiState를 포함하는데, 이 또한 리액트의 개념 중 하나이다.\n\n데이터 흐름 표현한 코드\n위 도식에 대한 코드를 작성하며 설명해보겠다\nRepository 부분\n그림과 반대로 Repository 코드부터 작성해야 어느 부분이 구독을 일으켜 반응적으로 업데이트되는지 이해할 수 있다.\n\nclass SomeRepository(private val someApi: SomeApi) {\n\n  suspend fun loadData(): DataEntity =\n    someApi.load()\n}\n\n\nViewModel 부분\n이 부분에서는 호출이 일어나고, 코루틴 blocking으로 응답을 처리한다. 응답 결과를 반응적으로 받는 것이 아니라 즉시 호출하고 즉시 반환받는다는 점이 중요하다.\n\nclass SomeViewModel(private val someRepository: SomeRepository) {\n\n  private val _uiState = MutableStateFlow(SomeUiState())\n  val uiState = _uiState.asStateFlow()\n\n  fun load() = viewModelScope.launch {\n    val data = someRepository.loadData() // 여기까진 일반적인 호출\n    // 여기부터 반응형을 위한 stateFlow 관리\n    _uiState.value = data.convert() // convert 후 _uiState에 갱신\n  }\n}\n\n\nViewModel에 Effect를 추가하여 reducer 처럼 사용한다면\n현재는 반응형 코드 형태로 StateFlow를 사용하고 있다. 여기에 MVI의 Effect를 추가하면 아래와 같이 변경해야 한다.\n\nsealed interface Effect {\n  data object Load : Effect\n}\n\n\nEffect를 받아서 처리하도록 수정하면:\n\nclass SomeViewModel(private val someRepository: SomeRepository) {\n\n  private val _uiState = MutableStateFlow(SomeUiState())\n  val uiState = _uiState.asStateFlow()\n\n  fun reduce(effect: Effect) = viewModelScope.launch {\n    when (effect) {\n      is Effect.Load -> {\n        val data = someRepository.loadData() // 여기까진 일반적인 호출\n        // 여기부터 반응형을 위한 stateFlow 관리\n        _uiState.value = data.convert() // convert 후 _uiState에 갱신\n      }\n    }\n  }\n}\n\n\n이 코드는 간단하게 작성되었고, 사용하는 MVI 라이브러리에 따라 다를 수 있다. 마지막에 UiState를 반환하고 BaseReducer로 전달하는 작업을 하는 라이브러리도 있지만, 여기서는 생략했다.\nView 부분\n마지막으로 View 부분이다.\n\n@Composable\nfun ContentView(\n  someViewModel: SomeViewModel = viewModels(),\n) {\n  val uiState by someViewModel.uiState.collectAsStateWithLifecycle()\n\n  Column {\n    Button(\n      onClick = {\n        someViewModel.reduce(Effect.Load), // 새로운 데이터 업데이트\n      }\n    ) {\n      Text(\n        text = \"Button\",\n      )\n    }\n\n    Text(\n      text = uiState.text, // UiState에 따라 갱신\n    )\n  }\n}\n\n\n이 코드를 도식화한 부분이 위에서 본 그림에 해당한다.\n\n\nMVI인가 안드로이드 아키텍처인가?\n제 생각에는 크게 보면 MVI와 Android 아키텍처는 크게 다르지 않다고 생각한다.\nAndroid 아키텍처도 리액트의 UiState 개념을 포함하고 있으며, 이미 오래전부터 RxJava, LiveData, Flow 같은 리액트 개념을 가져와서 사용하고 있었다. 동적으로 데이터 흐름을 받고, 이걸 업데이트하는 부분을 구독 형태로 사용했죠.\n그럼 남는 것은 무엇일까? 좀 더 쉽게 쓸 수 있는 부분을 추가하면 어떨까?\n그전에 ViewModel에 이벤트를 전달할 때 어떻게 하는지 살펴보는 것이 좋을 것 같다.\n\nAction\n내용 수정\nAction은 View에서 ViewModel로 이벤트를 전달하는 데 사용되는 개념이다. MVI 패턴에서는 Intent가 Action과 유사한 역할을 한다.\n이후 데이터 흐름은 Action을 받고, ViewModel은 Action에 따라 UiState를 업데이트할 수 있다. View는 업데이트된 UiState를 사용하여 화면을 그린다.\n반대로 ViewModel에서 발생한 이벤트를 Effect를 통해 View에 전달하는데 사용한다. Effect는 Toast 메시지 표시, 화면 이동 등과 같은 일회성 이벤트를 나타낸다.\n그럼 @Composable 함수에서 onClick을 처리하는 방법에 대해 크게 3가지로 나눠 설명해 본다.\n1. Higher-order function을 파라미터로 받아서 호출하는 방식\n제일 흔하게 쓰는 방법 중 하나이다. 이 방식을 버릴 수는 없다. Action을 지정할 수는 없으니까 공통 컴포넌트를 만들거나 재사용해야 하는 Component를 만들 때 이 방식은 필수이다.\n\n@Composable\nfun SomeItem(\n  onClick: () -> Unit,\n) {\n  Surface(\n    onClick = onClick,\n  ) {\n    // 생략\n  }\n}\n\n\n하지만 이 방식은 ViewModel이 있는 곳까지 끌어올려 체이닝시켜야 한다는 단점이 있다. 그렇다고 안 할 수도 없고, ViewModel을 모든 곳에 주입할 수도 없다.\n2. ViewModel 같은 호출 함수를 직접 파라미터로 전달해서 호출하는 방법\n1번 방법에서 Screen을 만나면 ViewModel을 쓸 수 있는데, 이 부분에서 Higher-order function을 실질적인 함수 호출할 수 있다.\n\n@Composable\nfun SomeScreen(\n  viewModel: SomeViewModel = viewModels(),\n) {\n  Surface(\n    onClick = {\n      viewModel.some()\n    },\n  ) {\n    // 생략\n  }\n}\n\n\n여기서 주의할 점은 Stateless와 Stateful로 함수를 잘 구분해서 작성해야 Preview에 좋다는 것인데, 무작정 Stateful로 작성하면 Preview가 어려워진다.\nStateful versus stateless - 공식 문서 링크\n3-1. UiState에 Higher-order 정의를 넘겨주고 호출하는 방식\nEffect를 모른다면 이 방식도 선택할 수 있을것 같다. 어떤 함수를 불러야 할지 모른다면.\n\ndata class SomeUiState(\n  val onClick: () -> Unit,\n)\n\n\nItem을 사용하면 viewModel을 알지 않더라도 바로 불러줄 수 있는 장점이 생긴다.\n\n@Composable\nfun SomeView(\n  someUiState: SomeUiState,\n) {\n  Surface(\n    onClick = {\n      someUiState.onClick()\n    },\n  ) {\n    // 생략\n  }\n}\n\n\n3-2. UiState에 Action(Effect) 정보를 넘겨주고 호출하는 방식\n이번엔 Effect를 정의하고, 이를 활용한다면 어떨까?\n\nsealed interface Effect {\n  data object Some : Effect\n}\n\ndata class SomeUiState(\n  val effect: Effect,\n)\n\n\n이 방식에서는 결국 viewModel을 알아야 호출할 수 있다는 점이다.\n\n@Composable\nfun SomeScreen(\n  someUiState: SomeUiState,\n  viewModel: SomeViewModel = viewModels(),\n) {\n  Surface(\n    onClick = {\n      viewModel.onEffect(someUiState.effect)\n    },\n  ) {\n    // 생략\n  }\n}\n\n\n\n이 같은 방식은\n위에서 나열한 4가지 방식은 필자가 생각나는 대로 적은 것이다.\n1, 2, 3-2 방식은 viewModel을 결국 @Composable에서 알아야 한다는 단점이 생기고, 여기 까지 끌고 오기 위해선 Higher-order function을 계속 넘겨줘야 한다는 부분도 생긴다.\n결국 Higher-order function을 계속 넘겨주는 것도 나쁜 건 아니지만 많아지면 관리할 부분이 많다는 점이 생긴다.\n그렇다고 3-1번의 방식을 선택하는 것은 좋은 선택지는 아니라고 보는데, 고민이 필요하지만 개발 편의성에서는 최고의 선택일 듯 하다.\n\nT Composable Architecture\n필자가 작업한 T Composable Architecture는 과거에 작성한 글에서도 이야기했던 부분에 해당한다.\nAndroid view에서 ViewModel을 어떻게 호출해 사용해 볼 수 있을까?\nAndroid view에서 ViewModel을 호출했는데, UnitTest는 어떻게 할까?\n이 글에서도 이미 소개했던 방식을 Compose 전용으로 라이브러리화하여 배포했다.\n여기선 용어도 수정하였고, 형태도 변경시켰다.\nAction : Effect, MVI에서 말하는 Intent와 동일할 수 있다. view에서는 Action을 발생 시킨다.\nreducer : ViewModel에서 View에서 발생한 Action을 받아 처리하는 부분이다. MVI 코드에서는 Intent를 reducer로 처리하는 것과 동일하다.\n    \n다만 마지막에 Action은 다음 Action을 지정할 수 있다.\n이 방식은 Swift-composable architecture - 링크에서 영감 받은 부분이다.\n나머지는 코드 부분에 대한 부분이고, 이 글에서 알아야 할 부분은 위와 같이 2가지이다.\n\nT Composable Architecture 활용하기\n활용하기 전에 전체 sequence를 그려보았는데, flow 1과 flow 2로 나눠질 수 있다. Repository에서 이벤트 처리 후 UiState를 갱신할 수도 있고, SideEffect를 처리 할 수도 있다.\n\n전체 샘플 코드는 아래 링크를 참고하길\nSample code - link\n디펜던시 정의\n\nimplementation(\"tech.thdev:composable-architecture-system:latestversion\")\n\n\nAction 정의\nAction을 정의하는데, CaAction을 상속받아 구현한다.\n\nsealed interface Action : CaAction {\n    \n    data object Task : Action // Use object for simple actions\n    \n    data object LoadData : Action // Use object for simple actions\n}\n\n\nSideEffect 정의\n여기서는 SideEffect란 용어를 사용하였다. CaSideEffect를 상속 받아 구현한다.\n\nsealed interface SideEffect : CaSideEffect {\n    \n    data object ShowToast : SideEffect // Use object for simple side effects\n}\n\n\nViewModel 정의\nHilt를 사용하여 아래와 같이 사용할 ViewModel을 지정한다.\n여기서는 reducer()를 상속받아 정의한다.\n\n@HiltViewModel\nclass MainViewModel @Inject constructor(\n    flowCaActionStream: FlowCaActionStream,\n) : CaViewModel<Action, SideEffect>(flowCaActionStream, Action::class) {\n\n  private val _uiState = MutableStateFlow(UiState())\n  val state = _uiState.asStateFlow()\n\n  override suspend fun reducer(action: Action): CaAction =\n      when (action) {\n          is Action.Task -> {\n            _uiState.value = UiState(showPlaceholder = true)\n            Action.LoadData // next event\n          }\n\n          is Action.LoadData -> {\n              val loadEnd = // load network\n              _uiState.value = UiState(text = loadEnd)\n\n              sendSideEffect(SideEffect.ShowToast)\n\n              CaActionNone // Or return another action\n          }\n          // ... other actions\n      }\n}\n\n\nActivity에서 사용하는 경우\n마지막으로 Activity에서는 아래와 같이 동작시켜줘야 한다.\n\n@AndroidEntryPoint\nclass MainActivity : CaActionActivity() {\n\n    private val mainViewModel by viewModels<MainViewModel>()\n\n    @Composable\n    override fun ContentView() {\n        TComposableArchitectureTheme {\n            val action = LocalActionOwner.current\n\n            Column {\n              Button(\n                onClick = action.send(Action.LoadData),\n              ) {\n                Text(\n                  text = \"OnClick\",\n                )\n              }\n\n              Text(\n                text = uiState.text,\n              )\n            }\n\n            LaunchedEffect(Unit) {\n                mainViewModel.loadAction() // Required: Load actions\n                mainViewModel.action(Action.Task) // Option task\n            }\n\n            mainViewModel.sideEffect.collectAsEvent { // Optional: Handle side effects\n                when (it) {\n                    SideEffect.ShowToast -> {\n                        Toast.makeText(this@MainActivity, \"message\", Toast.LENGTH_SHORT).show()\n                    }\n                    // ... other side effects\n                }\n            }\n        }\n    }\n}\n\n\nComposable에서 활용하는 경우\n만약 Composable에서 이를 활용한다고 하면\n\n@Composable\nfun SomeScreen(\n  mainViewModel: MainViewModel = viewModels(),\n) {\n  val uiState by mainViewModel.uiState.collectAsStateWithLifecycle()\n\n  SomeScreen(\n    uiState = uiState,\n  )\n\n  LaunchedEffect(Unit) {\n      mainViewModel.loadAction() // Required: Load actions\n      mainViewModel.action(Action.Task) // Option task\n  }\n}\n\n@Composable\nfun SomeScreen(\n  uiState: UiState,\n) {\n  val action = LocalActionOwner.current\n\n  Column {\n    Button(\n      onClick = action.send(Action.LoadData),\n    ) {\n      Text(\n        text = \"OnClick\",\n      )\n    }\n\n    Text(\n      text = uiState.text,\n    )\n  }\n}\n\n\n구현할 부분에서는 loadAction을 호출을 LaunchEffect()에 따라 생성하도록 강제하였다.\n\nLocalActionOwner의 활용은?\n이 코드는 크게 Action을 처리하기 위한 내부 구현체가 하나 있다. 나머진 일반적인 MVVM + 리엑트, UiState 처리와 동일하다.\nLocalActionOwner.current를 사용하였을때의 장점은 무엇일까?\nviewModel, Higher-order function을 파라메터로 매번 넘길 필요없이 사용할 위치에서 즉시 LocalActionOwner.current를 사용하여 액션을 전달할 수 있다.\n이 하나만으로도 개발에서 귀찮은 보일러플레이트 코드를 줄일 수 있을 거라고 생각한다.\n다행히도 LocalActionOwner.current를 포함해도 Preview에 영향 받지 않는다는 점이다.\n\nAction에서 Next 활용은?\n그리고 앞서 언급하였듯 reducer에서는 next Action을 정의하도록 구현하였다.\nfilter하여 현재 Screen에서 발생한 이벤트만을 감지할 수 있다.\n    \n내가 가진 화면에서의 Action 만을 처리한다. 만약 필요하면 상위에서 정의한 Action을 넘겨야 한다.\n        \n보통 그럴일이 잘 없긴하다.\nViewModel에서 이벤트를 처리하고나서도 다른 액션을 또 처리해야할 때가 있다. A 액션이 끝나면 B 액션을 처리해야 하는 경우가 꼭 생긴다. 이런 부분을 어떻게 할까하다가 TCA에서 활용하는 방식으로 리턴 시켰다.\n    \n이 부분은 MVI에서 UiState를 리턴시키는것과는 매우 다른 부분이다.\n리턴 시킨 Aciton이 다음 이벤트 어떤 걸 처리할지를 지정할 수 있도록 하였는데, 이런 장점으로 인해 A가 끝나면 B로 이벤트를 전달하여 처리할 수 있다.\n함수 다시 부르면 되는 것도 있겠지만 Stream 상에서의 다음 이벤트를 또 이어주기가 쉽진 않아 이 방식으로 구현하도록 해두었다.\n\n주요 코드\n주요 코드는 다음과 같다.\nInternalCaAction을 @Singleton으로 작성했다는 점이 특징이다. 앱 내에 단 하나만 존재할 수 있다.\nSharedFlow를 활용하여 여러 view에서 동일한 이벤트를 하나로 통합했지만, 어디에서나 접근 가능하다는 단점이 있다. 반대로 어디서든 보낼 수 있다는 장점이 있다.\n\n@Singleton\nclass InternalCaAction @Inject constructor() : FlowCaActionStream, CaActionSender {\n\n    private val flowCaAction = MutableSharedFlow<CaAction>(\n        extraBufferCapacity = 1,\n        onBufferOverflow = BufferOverflow.DROP_OLDEST,\n    )\n\n    override fun flowAction(): Flow<CaAction> =\n        flowCaAction.asSharedFlow()\n            .filter { it != CaActionNone }\n\n    override fun send(action: CaAction) {\n        flowCaAction.tryEmit(action)\n    }\n\n    override fun nextAction(action: CaAction) {\n        send(action)\n    }\n}\n\n\n이 문제를 해결하기 위해 CaViewModel에 필터링 코드를 추가했다.\nabstract class CaViewModel<ACTION : CaAction, SIDE_EFFECT : CaSideEffect>(\n    flowCaActionStream: FlowCaActionStream,\n    actionClass: KClass<ACTION>,\n) : ViewModel() {\n\n    @VisibleForTesting\n    val flowAction by lazy(LazyThreadSafetyMode.NONE) {\n        flowCaActionStream.flowAction()\n            .filterIsInstance(actionClass) // filter\n            .map {\n                reducer(action = it)\n            }\n            .onEach {\n                flowCaActionStream.nextAction(it)\n            }\n    }\n}\n\n이제 작성한 screen을 벗어나는 일은 발생하지 않는다.\n\nCompose에서 활용하기 위한 중요 코드\n액티비티 기준으로 매번 갱신할 이유가 없어 staticCompositionLocalOf를 사용하였다. 영향 범위에 대한 글은 이전에 웹뷰 작성하면서 언급했기에 여기서는 언급하지 않는다.\nCompose Navigation - WebView Recomposition 해결? - 링크\n\nobject LocalCaActionSenderOwner {\n\n    private val LocalComposition = staticCompositionLocalOf<CaActionSender?> { null }\n\n    val current: CaActionSender?\n        @Composable\n        get() = LocalComposition.current\n\n    infix fun provides(registerOwner: CaActionSender): ProvidedValue<CaActionSender?> =\n        LocalComposition provides registerOwner\n}\n\n\nprovides를 시켜두고, 이를 지속해서 활용하는 형태로 만들었다.\n\nCompositionLocalProvider(\n    LocalCaActionSenderOwner provides caActionSender,\n) {\n    ContentView()\n}\n\n\n사용할 때는\n\nval action = LocalActionOwner.current\n\nButton(\n  onClick = action.send(Action.Some)\n) {}\n\n\n이로 인해 파라미터 전달 이유도 사라지고, 필요한 부분에 LocalActionOwner.current를 호출하여 사용할 수 있다.\n\n다음 작업은\n다음 작업은 Alert/Toast/Snackbar를 Action을 활용해 처리하는 방법을 소개할 예정이다. UI 커스터마이징이 가능하도록 설계가 필요하며, Action으로 처리할지 별도로 분리할지 결정해야 한다.\n이 부분에 대한 고민은 다음 글에서 다루도록 하겠다.\n\n마무리\nSlack의 Circuit - 링크을 사용하는 것도 좋은 방법 중 하나이지만, 직접 구현한 이유는 어렵지 않다고 생각했기 때문이다.\n데이터 흐름이 중요한 부분이라 어려울 부분은 없다고 생각하지만, 개념만 가지고 만든 부분이라 정확하지 않을 수 있다.\n이전에 작성한 Swift-composable architecture - 링크에서 영감을 받아 만든 라이브러리라고 생각하는 것이 편할 것 같다.\niOS TCA 살펴보기 - 링크",
        "guid": "https://thdev.tech/architecture/2025/02/02/Android-Architecture-01/",
        "isoDate": "2025-02-02T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕홍",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": [
      {
        "title": "콜드 스타트(The Cold Start Problem)",
        "link": "https://sungjk.github.io/2025/01/30/the-cold-start-problem.html",
        "pubDate": "2025-01-30T00:00:00+00:00",
        "content": "\n            \n            &lt;blockquote&gt;\n  &lt;p&gt;소프트웨어 개발은 점점 쉬워지고 있지만, 새로운 제품과 서비스를 출시하고 확장하는 일은 여전히 어렵습니다. 스타트업은 기술 생태계에 진입할 때 치열한 경쟁, 카피캣, 비효율적인 마케팅 채널 등과 같은 어려운 도전에 직면합니다.&lt;br /&gt;\n네트워크 효과(Network Effects)는 제품이나 서비스의 가치가 사용자가 많아질수록 증가하는 현상을 말하며, 새로운 제품이 돌파구를 마련하는 데 중요한 역할을 합니다. 이는 바이럴 성장과 입소문(viral growth and word of mouth)을 통해 새로운 사용자를 유치할 수 있도록 도와줍니다.&lt;br /&gt;\n그러나 대부분의 창업가는 네트워크 효과를 설명할 수 있는 개념적 틀이나 맥락을 이해하지 못합니다. 네트워크 효과란 정확히 무엇이며, 어떻게 팀이 이를 구축하고 제품에 적용할 수 있을까요? 모든 플레이어가 네트워크 효과를 활용하는 시장에서 제품은 어떻게 경쟁해야 할까요?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;콜드 스타트. 책 제목만 보면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;시작이 어렵다&lt;/code&gt;는 느낌이 든다. 이는 맞는 말이다. 그런데 “시작” 중에서도 사용자 간 연결을 기반으로 한 제품을 만들려 할 때 겪게 될 어려움에 대해 이야기하는 책이다. 스타트업 팀이든 누군가 제품을 만들 때 겪게 될 이런 어려움과 해결 방법들에 대해서 사례 기반으로 알려준다.&lt;/p&gt;\n\n&lt;p&gt;저자인 앤드류 첸(Andrew Chen)에 대해서도 알아두면 좋은데(워낙 유명한 분이라..), a16z(Andreessen Horowitz)에서 파트너로 활동하며 소셜, 마켓플레이스, 엔터테인먼트, 게임, AI 등 기술 산업 분야에 투자하고 있다. 앤드류가 운영하고 있는 뉴스레터는 20만 명 이상의 구독자가 있다고… 이 책에는 흔히 들어봤을 성공한 스타트업들 이야기가 굉장히 많이 나오는데, 그중에서도 Uber 이야기가 가장 많이 나온다. 앤드류 첸은 이전에 Uber에서 라이더 그로스 부분의 총 책임자(Head of Rider Growth)로 재직하며 플랫폼의 활성 사용자 수를 1,500만에서 1억 명까지 성장시키는데 기여했다. 앤드류 첸 본인의 성공과 실패 경험, 그리고 스타트업들의 유스케이스를 분석해서 다양한 제품과 산업에 적용할 수 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;콜드 스타트 이론&lt;/code&gt; 이라는 프레임워크와 원칙을 만들었고, 그 중에서도 네트워크 효과를 활용하는 제품이 왜 그토록 중요한지 이야기해주고 있다.&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;네트워크-효과-network-effects&quot;&gt;네트워크 효과 Network Effects&lt;/h1&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;네트워크를 사용하는 사람들이 늘어날수록 네트워크가 사용자들에게 더 가치 있어진다.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;strong&gt;네트워크 효과(Network Effects)&lt;/strong&gt;는 제품을 사용하는 사람들이 늘어날수록 제품의 가치가 높아지고, 네트워크가 사용자들에게 더 가치 있어진다고 설명할 때 쓰는 용어다. 이 문장만 봐서는 정확히 무슨 말인지 잘 모르겠다. 어떤 제품을 만드는 메이커 입장에서 네트워크란 무엇일까? 이를 사용자와 연관 지어 생각해 보면, 이런 답을 도출해 볼 수 있다. &lt;strong&gt;연결된 사용자 간의 상호 작용&lt;/strong&gt;.&lt;/p&gt;\n\n&lt;p&gt;우리가 사용하는 많은 제품이나 서비스는 플랫폼 내 다른 사용자들과의 연결을 통해 가치를 만들어낸다. 예를 들어, Uber는 특정 도시에 운행할 기사와 승객을 연결해 주고, Airbnb는 특정 도시에 방을 제공할 호스트와 여행자를 연결해 준다. 이러한 제품에서는 네트워크 효과가 제품의 가치를 만들어낸다. 그래서 Uber에 특정 도시에 운행할 기사가 없으면 승객 입장에서는 제품이 쓸모없어지고, 이탈로 이어진다. 마찬가지로, Airbnb에 특정 도시에 방을 제공할 호스트가 없으면 사용자 입장에서는 아무리 제품을 잘 만들었더라도 가치가 떨어지고 만다.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;네트워크 효과는 이 책의 처음부터 끝까지 빠지지 않고 등장하는 중요한 개념이다. 책의 제목인 Cold Start는 단어가 270번 나오는 것에 비해, Network Effect는 총 301번 등장한다.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;제품을 만드는 사람들에게 네트워크 효과가 왜 중요할까? 정답은 &lt;strong&gt;쉬워진 제품 출시와 치열한 경쟁 속에서 살아남기 위한 차별화&lt;/strong&gt;에 있다. 이제 AI 도구를 사용하지 않으면 바보가 되는 세상이 되었다. 간단한 프로토타이핑은 기본이고, 상용 제품도 Bolt, v0, Replit 같은 도구를 활용하면 쉽게 만들 수 있다. 또한, 잘 만들어진 SaaS, No Code(Low Code) 툴이 너무 많고, 클라우드 환경도 날이 갈수록 발전하고 있어 제품을 만드는 팀 입장에서는 제품 출시의 벽이 정말 낮아졌다. 그래서 이제는 제품 성공에서 속도가 중요한 시대는 지난 것 같다. 제품 출시는 쉬워졌고, 경쟁은 갈수록 치열해지고 있다. 그렇기 때문에 경쟁 제품으로부터 방어할 수 있는 차별화된 네트워크를 구축하는 것이 중요하다.&lt;/p&gt;\n\n&lt;p&gt;대부분의 새로운 제품은 첫 시장 진입에 실패하고 사라진다. 그리고 그들의 네트워크는 시작도 하기 전에 붕괴하고 만다. 네트워크 효과가 모두 강력하고 긍정적인 힘이라는 것은 근거 없는 믿음이며, 사실은 정반대다. 아래에서도 나오지만, 작은 규모의 네트워크는 자연적으로 자신을 파괴하려고 한다. 사람들이 어떤 제품을 보러 갔을 때, 그것을 사용하고 있는 지인이나 동료가 아무도 없다면 자연스럽게 떠나고 말 것이다.&lt;/p&gt;\n\n&lt;p&gt;이 문제를 어떻게 해결할 수 있을까? 다음 장에서 살펴볼 원자 네트워크(충분히 사람이 떠나지 않을 만큼의 최소한의 네트워크)가 답이 될 수 있다.&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;콜드-스타트-이론-cold-start-theory&quot;&gt;콜드 스타트 이론 Cold Start Theory&lt;/h1&gt;\n\n&lt;p&gt;콜드 스타트 이론(Cold Start Theory)은 모든 제품을 만드는 팀이 네트워크 효과를 온전히 활용하기 위해 거쳐야 할 일련의 단계를 프레임워크로 정리한 것이다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/01/30/stages-cold-start-framework.png&quot; alt=&quot;The stages of the Cold Start framework&quot; title=&quot;The stages of the Cold Start framework&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;h3 id=&quot;콜드-스타트-문제-the-cold-start-problem&quot;&gt;콜드 스타트 문제 The Cold Start Problem:&lt;/h3&gt;\n\n&lt;p&gt;새로운 영상 공유 앱이 출시되었다. 그런데 앱에 다양한 콘텐츠가 없다 보니 사용자들은 오래 머물지 않는다. 마켓플레이스와 소셜 네트워크 등을 포함하여 B2B 서비스도 마찬가지다. 사용자가 자신이 원하는 사람이나 물건을 찾지 못하면 서비스에서 이탈한다. 이것이 바로 콜드 스타트 문제(The Cold Start Problem)이며, 초기 이탈 문제를 해결하기 위해 적절한 사용자와 콘텐츠를 동일한 네트워크에 동시에 모으는 것이 필수적이다.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Anti-network effects; the network effects that startups love so much actually hurt them.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;이 문장이 인상 깊었는데, 대부분의 경우 스타트업들이 그토록 사랑하는 네트워크 효과는 실제로 그들에게 해가 된다고 한다. 제품에 네트워크를 구축해야 살아남는 세계에서, 제대로 된 네트워크가 없으면 이는 자기 파괴적인 관계로 돌아선다는 것이다.&lt;/p&gt;\n\n&lt;p&gt;누구나 거쳐가야 할 초기 콜드 스타트 문제를 해결하기 위해 Wikipedia의 콘텐츠 제작자, 신용카드의 발명 과정, Zoom의 제품 출시 과정 이야기가 자세하게 소개되었다. 여기서 강조된 개념이 &lt;strong&gt;원자 네트워크(Atomic Network)&lt;/strong&gt; 였는데, &lt;strong&gt;최소한의 규모로도 안정적으로 작동하고 스스로 성장할 수 있는 네트워크&lt;/strong&gt;를 의미한다. 예를 들어, Zoom의 화상회의 서비스는 단 2명의 사용자만으로도 작동할 수 있지만, Airbnb는 하나의 시장에 수백 개의 활성화된 숙소 리스트가 있어야 안정적인 네트워크가 형성된다. 그래서 이 단계에 있는 팀이나 제품에게는 우리 제품의 Atomic Network가 무엇인지(임계치가 얼마인지) 파악하는게 중요하다. 여기서 중요한 것 중 하나는 Atomic Network는 규모가 크지 않고 밀도가 높아야 한다는 것이다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;가장 규모가 작은 집단을 구축하는 것을 목표로 해야 한다.&lt;/li&gt;\n  &lt;li&gt;더 많은 사용자를 포함 시키려 할수록 원자 네트워크를 만드는 것은 어려워진다.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;콜드 스타트 문제에 있어 원자 네트워크 보다 중요한 개념이 있다. 네트워크는 종종 쌍을 이룬 측면을 가지고 있다. Provider ↔ Consumer, Content Creator ↔ Consumer, Driver ↔ Passenger, Male ↔ Female 처럼 말이다.&lt;/p&gt;\n\n&lt;p&gt;예를 들어, Uber에서는 운전 기사가 있어야 승객이 있고, Tinder에서는 여성 사용자가 있어야 남성 사용자가 있다. 이처럼 초기 원자 네트워크에는 특정한 역학 관계가 작용한다. 또한, 소수의 사용자가 지나치게 많은 가치를 창출하면서 강력한 권력을 차지하게 되는 현상도 발생할 수 있다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;Uber: 상위 20% 드라이버가 전체 60% 승객을 태운다.&lt;/li&gt;\n  &lt;li&gt;Tinder: 여성은 5%의 남성을 선택하지만 평균 남성은 45% 여성을 선택한다.&lt;/li&gt;\n  &lt;li&gt;Wikipedia: 전체 사용자는 수억명, 월 활성 작성자가 10만명이지만, 100건 이상 글 편집자는 4,000명(0.02%). Steven Pruitt 라는 한 개인은 영문 위키피디아의 1/3을 작성함(35,000개 글, 300만번 이상 수정).&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;네트워크 내의 유저는 보통 한 쪽이 다른 한 쪽보다 데려오기 어렵다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;소셜 네트워크: 모두가 소비하는 미디어를 만드는 콘텐츠 창작자&lt;/li&gt;\n  &lt;li&gt;앱스토어: 제품을 제작하는 개발자&lt;/li&gt;\n  &lt;li&gt;업무용 앱: 문서와 프로젝트를 작성하고 제작하며 동료들을 불러 모으는 관리자&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;그리고 이걸 네트워크의 &lt;strong&gt;하드 사이드(Hard Side)&lt;/strong&gt;라고 부른다. 네트워크의 하드 사이드를 관리하고 이들을 만족시키는 것이 원자 네트워크보다 더 중요하다. 따라서 제품이 네트워크 기반으로 성장 하기를 원한다면, 하드 사이드부터 정의하는 것이 중요하다. Uber 와 Tinder도 마찬가지다. 위키피디아 사례를 보면, 고작 0.02%에 불과한 의욕 넘치는 사용자들이 나머지 네트워크를 위해 콘텐츠를 발행한다. 위키피디아의 콘텐츠 창작자들 역시 커뮤니티 자체에 매료되었을 가능성이 높다. 사회적 반응과 지위 등 커뮤니티의 역학 관계가 그들이 계속 콘텐츠를 발행하도록 동기를 부여하는 요소가 된다.&lt;/p&gt;\n\n&lt;p&gt;하드 사이드를 정의하고 원자 네트워크를 구축하다 보면 마법의 순간(Magic Moment)이 온다. 여기서는 클럽하우스를 예시로 들었는데, 네트워크가 충분히 채워지고 활성화되어 사람들이 올바른 방식으로 소통할 수 있다면, 그때 Magic Moment가 온다고 한다. 흔히 Magic Moment를 찾는 과정을 Product-Market Fit을 찾는 과정이라고 한다. 그렇다면 Magic Moment를 어떻게 측정할 수 있을까? 이는 반대로 접근해 보면 된다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;예시) 우버 ZERO: 승객이 우버 앱을 실행하여 주소를 선택한 후 승차하기로 했을 때 그 지역에 운전기사가 아무도 없는 상황. 네트워크에 있는 다른 사용자들과 상호작용하는 것이 그 상품의 핵심이라면 제로는 그것이 충족될 수 없다는 의미이며, 이는 사용자가 이탈하여 다시는 돌아오지 않을 수도 있다는 뜻이다.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;만약 콜드 스타트 문제를 겪고 있다면, 초기 단계에서는 제품에서 빠진 기능을 인간의 노력으로 대체하는 것도 중요하다. 이 책에서는 이를 플린트스토닝(Flintstoning)이라고 표현한다. 초기 네트워크가 형성되면, 플린트스토닝 기법은 가속도를 얻으며 점점 자동화를 향해 진화한다. 네트워크가 스스로 일어설 수 있을 때까지, 중요한 부분을 수동으로 채워 넣는 것이 목표다.&lt;/p&gt;\n\n&lt;p&gt;마지막으로 Always Be Hustlin. 2012년, Uber는 앱에 등장하는 ‘ICE CREAM’ 버튼을 누르면 우버 블랙 차량을 통해 아이스크림이 배달되는 이벤트를 진행했다. ‘실제로 도움이 되었나요?’라는 질문에 대한 대답은 이렇다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;개별적인 볼거리로는 회사에 큰 영향을 미치지 않았을 수도 있다. 하지만 시장을 제로에서 티핑 포인트까지 끌어올리는 프레임워크 안에서, 이러한 재빠르고 영리한 전술은 시장이 이륙하는 데 핵심적인 역할을 했다고 생각한다. 가장 중요한 것은, 우버가 이런 개념을 빠르게 식별하고 실행하며 반복할 수 있는 시스템을 만들었다는 점이다. 이러한 시스템을 구축하는 데 도움을 준 것은 &lt;strong&gt;진취적인 팀 문화, 강력한 소프트웨어 제작 도구, 그리고 각 도시마다 고유한 콜드 스타트 문제가 있다는 것에 대한 이해&lt;/strong&gt;다.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;차량 공유 앱에서 아이스크림을 배달해준다? 이벤트만 보면 서비스 성장에 전혀 영향을 미칠것 같지 않다. 그런데 이런 이벤트들은 Uber 1.0 Cultural Values에 기반한 것이고 이걸 보니 정말 많은 시도를 했겠다는 생각이 들었다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;&lt;strong&gt;Make Magic&lt;/strong&gt;: Seek breakthrough that will stand the test of time&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Super pumped&lt;/strong&gt;: The world is a puzzle to be solved with enthusiasm&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Inside Out&lt;/strong&gt;: Find the gap between popular perception and reality&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Be an Owner, Not a Renter&lt;/strong&gt;: Revolutions are won by true believers&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Optimistic Leadership&lt;/strong&gt;: Be inspiring&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Be Yourself&lt;/strong&gt;: Each of us should be authentic&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Big Bold Bets&lt;/strong&gt;: Take risks and plant seeds that are five to ten years out&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Customer Obsession&lt;/strong&gt;: Start with what’s best for the customer&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Always Be Hustlin’&lt;/strong&gt;: Get more done with less, working longer, harder, and smarter, not just two out of three&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Let Builders Build&lt;/strong&gt;: People must be empowered to build things&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Winning&lt;/strong&gt;: Champion’s Mindset&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Principled Confrontation&lt;/strong&gt;: Sometimes the world and institutions need to change in order for the future to be ushered in&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Meritocracy and Toe-Stepping&lt;/strong&gt;: The best idea always wins. Don’t sacrifice truth for social cohesion and don’t hesitate to challenge the boss.&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Celebrate Cities&lt;/strong&gt;: Everything we do make cities better.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;여기서 잠깐 &lt;a href=&quot;https://www.paulgraham.com/ds.html&quot;&gt;Paul Graham의 Do things that don’t scale&lt;/a&gt; 이야기가 나온다. 확장 가능하지 않은 일을 하라. 직접 고객을 한 명씩 찾아가 설득하는 것이 처음 시작할 때는 좋은 방법이라는 의미다. 창립자가 해야 하는 가장 흔한 확장되지 않는 일은 사용자를 직접 선발하는 것이다. 이는 거의 모든 스타트업이 반드시 거쳐야 하는 과정이다. 사용자가 오기를 기다려서는 안 된다. 밖으로 나가 직접 부딪쳐야 한다.&lt;/p&gt;\n\n&lt;p&gt;생각해볼만한 재미있는 질문:&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;초기 네트워크에 처음부터 있어야 할 가장 중요한 사용자들은 누구이고 그 이유는 무엇인가?&lt;/li&gt;\n  &lt;li&gt;원하는 대로 성장할 수 있게 하려면 초기 네트워크의 씨앗을 어떻게 뿌려야 하는가?&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;티핑-포인트-the-tipping-point&quot;&gt;티핑 포인트 The Tipping Point:&lt;/h3&gt;\n\n&lt;p&gt;원자 네트워크가 잘 구축되어 콜드 스타트 문제를 극복하면, 네트워크는 어느 순간 폭발적인 성장을 맞이하게 된다. 네트워크가 성장하면서 새로운 네트워크들이 형성되는데, 이 과정이 점점 가속화되며 전체 시장을 훨씬 수월하게 공략할 수 있게 된다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;LinkedIn: 초대 받은 사람만 사용할 수 있게 설계하여 연결을 통한 선순환을 만들어냄&lt;/li&gt;\n  &lt;li&gt;Instagram: 사진 보정 도구로 시작해서 팔로우와 공유를 통해 네트워크 효과를 만들어냄&lt;/li&gt;\n  &lt;li&gt;Uber: 특정 도시에서의 성공 경험을 바탕으로 수요와 공급을 맞춰나가는 전략을 계속해서 반복&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;네트워크를 론칭할 때마다, 다음 도미노를 쓰러뜨리는 일이 훨씬 수월해진다. 이 모든 것은 처음 시작된 하나의 작은 성공 덕분이다.&lt;/p&gt;\n\n&lt;p&gt;Instagram 처럼 도구와 네트워크가 쌍을 이루는 제품:&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;창작 + 사람들과 공유: Instagram, Youtube, Google Workspace, LinkedIn&lt;/li&gt;\n  &lt;li&gt;구성 + 사람들과 협업: Pinterest, Asana, Dropbox&lt;/li&gt;\n  &lt;li&gt;기록 체계 + 사람들과 최신 정보 유지: OpenTable, GitHub&lt;/li&gt;\n  &lt;li&gt;검색 + 사람들과 함께 기부: Zillow, Glassdoor, Yelp&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;이탈-속도-escape-velocity&quot;&gt;이탈 속도 Escape Velocity:&lt;/h3&gt;\n\n&lt;p&gt;신제품이 성공적으로 확장하기 시작하면, 이탈 속도(Escape Velocity)에 도달했다고 표현한다. 각 네트워크가 어느 정도 자리를 잡기 시작하면, 네트워크 효과를 강화하고 성장을 지속하기 위해 미친 듯이 일에만 집중해야 하는 시기가 바로 이때다. 이 단계의 핵심은 재빠르게 높은 성장률을 유지하면서, 성공적인 제품의 네트워크 효과를 극대화하는 것이다. 그래서 이 시점에는 흔히 하키 스틱 커브(hockey stick curve)가 나타난다.&lt;/p&gt;\n\n&lt;p&gt;이탈 속도에 대해 설명하면서, 네트워크 효과의 아래 세 가지 핵심 요소도 함께 소개했다. 네트워크 기반 제품은 자신의 사적인 네트워크에 있는 사람들에게 제품을 소개할 수 있는 능력을 지니고 있다. 이 능력 덕분에 획득 비용(Acquisition Cost)은 시간이 지나 시장 포화와 경쟁으로 인해 자연스럽게 상승하는 상황에서도 낮게 유지될 수 있다.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;획득 효과(Acquisition Effect)&lt;/strong&gt;:&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li&gt;사용자가 단순히 제품을 사용하면서도 자연스럽게 새로운 사용자를 유입시키는 효과&lt;/li&gt;\n  &lt;li&gt;특정 제품의 사용자가 증가하면서, 사람들이 그 제품을 사용하는 시간이 길어지고 관심이 높아질 때 발생하는 현상&lt;/li&gt;\n  &lt;li&gt;재활성화(Reactivation)는 일반적으로 신제품에는 큰 우려 사항이 아니다(탈퇴하는 사용자가 적기 때문). 따라서 초점은 신규 사용자 확보에 맞춰져야 한다. 그러나 이탈 속도(Escape Velocity) 단계에 도달한 제품이라면, 수백만 명의 사용자 풀을 활용할 수 있다. 기존 사용자를 다시 참여시키는 것은 신규 사용자를 획득하는 것만큼 중요한 성장 레버가 될 수 있다.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;참여 효과(Engagement Effect)&lt;/strong&gt;:&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li&gt;네트워크가 확장하면서 신규 고객을 끌어들이는 능력, 즉 바이럴 요소(Viral Factor)&lt;/li&gt;\n  &lt;li&gt;제품이 더 많은 사용자를 확보할수록 점점 더 사용자 친화적이고 몰입도가 높아지는 현상&lt;/li&gt;\n  &lt;li&gt;최근에는 리텐션 곡선(Retention Curves)과 참여 지표(Engagement Metrics)를 활용하여 효과를 측정&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;경제 효과(Economic Effect)&lt;/strong&gt;:&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li&gt;네트워크 효과가 시간이 지남에 따라 비즈니스 모델을 더욱 발전시키는 방식&lt;/li&gt;\n  &lt;li&gt;네트워크가 성장하면서 수익화 및 전환율(Conversion Rate)이 향상되는 현상&lt;/li&gt;\n  &lt;li&gt;네트워크 효과가 단순히 사용자 증가뿐만 아니라 비즈니스의 경제적 가치도 향상시킬 수 있는지를 탐구&lt;/li&gt;\n  &lt;li&gt;예시1: 피드 알고리즘 개선, 전환율 증가, 프리미엄 가격 책정(Premium Pricing) 등의 방식으로 수익성 향상&lt;/li&gt;\n  &lt;li&gt;예시2: Uber 플랫폼에 운전자가 늘어나면 경쟁 플랫폼에 비해 승객 입장에서의 단가가 낮아지고 그만큼 수요가 즐어나서 수익화와 전환율이 올라간다.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;천장-the-ceiling&quot;&gt;천장 The Ceiling:&lt;/h3&gt;\n\n&lt;p&gt;네트워크가 너무 커지고 포화 상태가 되면, 기존 사용자들은 피로를 느끼고 제품은 성장의 한계에 부딪히게 된다. 이는 네트워크가 최고점에 도달한 후 성장이 교착 상태에 빠지는 현상을 의미한다.&lt;/p&gt;\n\n&lt;p&gt;여기서 &lt;a href=&quot;https://andrewchen.com/the-law-of-shitty-clickthroughs&quot;&gt;엿 같은 클릭률의 법칙(The Law of Shitty Clickthroughs)&lt;/a&gt;에 대해서 소개했는데 인상 깊었다. 1994년, HotWired 웹사이트에서 최초의 배너 광고가 등장했을 때, 클릭률(CTR)은 무려 78%에 달했다. 그러나 2011년 Facebook에서의 배너 광고 클릭률은 0.05%로, 1500배나 낮아졌다. 이는 단순한 우연이 아니라, 시간이 지남에 따라 모든 마케팅 전략의 클릭률이 감소하는 법칙이 작용한 결과다. 배너 광고뿐만 아니라 이메일, 뉴스레터, 기타 온라인 채널의 성과도 시간이 지나면서 점점 감소한다.&lt;/p&gt;\n\n&lt;p&gt;클릭률 저하의 주요 원인:&lt;/p&gt;\n\n&lt;ol&gt;\n  &lt;li&gt;사용자는 새로움(신선함)에 반응하지만, 이건 금방 사라진다. 새로운 마케팅 기법이 처음 등장하면 사람들은 신기해서 반응하지만, 반복될수록 효과가 급격히 떨어진다.&lt;/li&gt;\n  &lt;li&gt;선점 효과는 오래가지 않는다. 만약 당신이 새로운 마케팅 기법을 개발하여 높은 성과를 거둔다면, 경쟁자들은 이걸 빠르게 모방할 것이다. 마케팅 채널이 퍼지면 경쟁으로 인해 성과가 점차 약화된다.&lt;/li&gt;\n  &lt;li&gt;규모가 커질수록 전환율이 낮아진다. 초기 시장(early adaopters)은 새로운 기술이나 제품에 열광하지만, 주류 시장(mainstream market)은 제품이 정말 유용한지를 따진다. 즉, 처음에는 적은 비용으로 높은 효과를 볼 수 있지만, 시간이 지날수록 광고비는 증가하고 전환율은 감소한다.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;클릭률 저하의 법칙을 극복하는 방법:&lt;/p&gt;\n\n&lt;ol&gt;\n  &lt;li&gt;지속적인 개선과 최적화: 새로운 Creative(광고 소재) 테스트, 새로운 퍼블리셔와 광고 네트워크 탐색, 데이터 기반 최적화&lt;/li&gt;\n  &lt;li&gt;정보 전달형 마케팅 활용: 단순히 “광고”로 접근하는 것이 아니라, 사용자에게 유용한 정보를 제공하는 콘텐츠 마케팅 전략을 활용해야 한다.&lt;/li&gt;\n  &lt;li&gt;새로운 마케팅 채널 선점: 아직 경쟁이 치열하지 않은 새로운 마케팅 채널을 먼저 활용하는 것이 중요하다. 남들이 아직 시도하지 않은 마케팅 채널을 개척하면, 높은 성과를 낼 가능성이 크다.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;이 장은 질문과 짧은 답변으로 마무리되었다.&lt;/p&gt;\n\n&lt;p&gt;마케팅 채널을 통해 주당 수백 건의 다운로드가 발생하고 있다면, 다운로드 수를 두 배로 늘리려면 어떻게 해야 할까? 또는 10배, 궁극적으로 1000배 늘리려면? 가장 좋은 방법은 네트워크 효과 여부와 관계없이 꾸준히 새로운 채널을 구축하는 것이다.&lt;/p&gt;\n\n&lt;h3 id=&quot;해자-the-moat&quot;&gt;해자 The Moat:&lt;/h3&gt;\n\n&lt;p&gt;성(안정적인 현금 흐름 혹은 이익)이 있으면 그걸 빼앗기 위해 달려드는 적군(경쟁자)이 있고, 그들로부터 방어하기 위해 구덩이를 파고 물을 채워 놓은 것을 해자(Moat)라고 부른다. 경쟁적 해자(Competitive Moat)에 대한 개념은 세계적인 투자자인 Warren Buffett이 인용하면서 유명해졌다. 이 용어는 경쟁 제품에 비해 경쟁 우위를 유지하여 장기적인 수익성과 시장 점유율을 보호할 수 있는 제품의 능력을 의미한다.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;The key to investing is not assessing how much an industry is going to affect society, or how much it will grow, but rather determining the competitive advantage of any given company and, above all, the durability of that advantage. The products or services that have wide, sustainable moats around them are the ones that deliver rewards to investors.&lt;br /&gt;\n투자의 핵심은 어떤 산업이 사회에 얼마나 큰 영향을 미칠 것인지 또는 얼마나 성장할 것인지를 평가하는 것이 아닙니다. 오히려 중요한 것은, 개별 기업의 경쟁 우위를 평가하고, 그 경쟁 우위가 얼마나 지속될 수 있는지를 파악하는 것입니다. 넓고 지속 가능한 해자를 가진 제품이나 서비스만이 장기적으로 투자자들에게 높은 보상을 제공할 수 있습니다.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/01/30/moat.png&quot; alt=&quot;The Moat&quot; title=&quot;The Moat&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;이 글의 도입부에서도 이야기했던 네트워크 제품의 차별점에 대한 내용이다. &lt;strong&gt;차별화된 네트워크를 갖춘 제품은 경쟁자가 쉽게 진입할 수 없다&lt;/strong&gt;는 점에서 강력한 이점을 가진다. 이 시점부터는 네트워크를 기반으로 한 경쟁이 본격적으로 시작된다. 그리고 경쟁자를 물리치기 위한 네트워크 효과가 발동한다. 재미있는 점은, 여기서 경쟁은 단순히 더 좋은 기능이나 실행력에 관한 것만이 아니라, 한 제품의 생태계가 다른 제품의 생태계를 어떻게 위협하는가에 대한 문제로 확장된다는 것이다.&lt;/p&gt;\n\n&lt;p&gt;예를 들어, Airbnb가 시장에서 이탈 속도(Escape Velocity)에 도달하면, 콜드 스타트 문제(Cold Start Problem)는 새로운 진입자에 대한 방어책이 된다. 결국, 도시에 진입하는 경쟁 제품은 모두 콜드 스타트 문제를 해결하여 동일한 밀도를 구축해야 한다. 여러분이 0에서 티핑 포인트(Tipping Point)까지 가는 데 어려움을 겪었던 것처럼, 불리한 조건에서 시작하는 경쟁 업체에게는 더욱 큰 도전이 될 것이다.&lt;/p&gt;\n\n&lt;p&gt;해자(Moat)에 대해 설명하면서 선순환과 악순환(Cycle of Virtue and Doom)에 대한 이야기도 흥미로웠다. 콜드 스타트 이론(Cold Start Theory)에 따르면, 경쟁은 선순환과 동시에 악순환을 만들어 낸다. &lt;strong&gt;네트워크 효과는 승자에게 강력한 이점을 제공하는 동시에, 패배한 네트워크에는 강력한 부정적인 영향을 미친다. 네트워크의 가치는 사용자가 많아질수록 기하급수적으로 증가하지만, 반대로 사용자가 이탈하면 네트워크의 가치도 기하급수적으로 붕괴한다.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;유저 획득(Acquisition) – 바이럴 성장(viral growth)이 둔화&lt;/li&gt;\n  &lt;li&gt;사용자 참여(Engagement) – 사용자 활동 감소&lt;/li&gt;\n  &lt;li&gt;경제성(Economics) – 수익화(monitization) 악화&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;즉, 네트워크 효과는 강력한 성장 촉진제지만, 동시에 사용자 이탈이 발생하면 네트워크 전체를 급격히 무너뜨리는 요인이 될 수도 있다는 것이다.&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;재밌었던-이야기들&quot;&gt;재밌었던 이야기들&lt;/h1&gt;\n\n&lt;p&gt;여기까지가 책 전체에 나온 콜드 스타트 이론(Cold Start Theory)에 대한 정리다. 여기부터는 콜드 스타트 &amp;amp; 네트워크 효과에 대한 흥미로웠던 이야기들을 정리해놓았다.&lt;/p&gt;\n\n&lt;h3 id=&quot;알리-임계값-allee-threshold&quot;&gt;알리 임계값 Allee Threshold:&lt;/h3&gt;\n\n&lt;p&gt;미어캣은 아프리카 남부에 사는 극도로 사회적인 동물로, 보통 서른에서 쉰 마리 정도가 모여 무리를 지어 생활한다. 그 이유는 포식자가 접근하면 무리 중 한 마리가 두 발로 서서 경계를 서고 복잡한 경고음을 내어 다른 개체들에게 위험을 알리기 때문이다. 이들은 포식자가 공중인지 지상인지, 위험도가 낮은지, 중간인지, 높은지에 따라 다양한 방식으로 짖거나 휘파람 소리를 낸다. 이러한 경고 시스템 덕분에 무리는 안전을 유지할 수 있다. 이러한 동물의 집단 행동은 1930년대 시카고 대학교의 생태학자 워더 클라이드 알리(Warder Clyde Allee)에 의해 처음으로 연구되었다.&lt;/p&gt;\n\n&lt;p&gt;그는 논문 &lt;a href=&quot;https://onlinelibrary.wiley.com/doi/10.1002/jez.1400610202&quot;&gt;동물 집단 연구: 금붕어의 콜로이드 은에 대한 집단 보호(Studies in Animal Aggregations: Mass Protection Against Colloidal Silver Among Goldfishes)&lt;/a&gt;를 통해 흥미로운 사실을 발견했다. 그에 따르면, 금붕어는 집단으로 있을 때 더 빠르게 성장하고, 물의 독성을 더 잘 견딜 수 있다. 이러한 개념은 생물학에서 중요한 개념이 되었으며, 집단 크기가 임계점을 넘어야 개체들이 더 안전해지고, 결국 개체군이 더 빠르게 성장할 수 있다는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;알리 임계값(Allee Threshold)&lt;/code&gt; 개념이 탄생했다. 즉, 알리의 인구 성장 곡선은 생태학적 네트워크 효과(Network Effect)와 유사하다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/01/30/allee-threshold.png&quot; alt=&quot;Allee Threshold&quot; title=&quot;Allee Threshold&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;메시징 앱을 사용하는 사람이 적으면, 기존 사용자도 앱을 삭제한다:&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;사용자 수가 줄어들면, 네트워크의 가치가 감소 → 점점 더 많은 사람들이 앱을 떠남 → 네트워크 붕괴&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;반면, 건강한 미어캣 무리는 지속적으로 성장하며 새로운 무리를 형성할 가능성이 있다:&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;알리 임계값을 넘어서면 개체군은 지속적으로 증가&lt;/li&gt;\n  &lt;li&gt;충분한 개체 수가 유지되는 한, 약간의 개체 손실이 있어도 전체 인구는 안정적으로 유지&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;하지만 이러한 성장은 영원히 지속될 수 없다. 결국, 환경이 제공할 수 있는 자원의 한계(예: 미어캣이 먹는 곤충과 과일의 양) 때문에 개체군이 어느 정도 이상으로 증가할 수 없다. 이것을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;수용력(Carrying Capacity)&lt;/code&gt;이라고 한다.&lt;/p&gt;\n\n&lt;p&gt;우버(Uber)와 알리 곡선(Allee Curve) 예시:&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;도시 내에 운전자가 감소 → 차량 호출 시간이 길어짐 → 사용자 서비스 이탈 → 운전자도 플랫폼 이탈 → 우버 네트워크 붕괴&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;하지만 임계점을 넘어서면, 네트워크가 원활하게 작동한다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;운전자가 증가 → 대기 시간이 감소 → 사용자 증가 → 운전자 증가&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;그러나 네트워크가 너무 커지면 한계에 도달한다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;기다림 없이 차량을 이용하는 것은 편리하지만, 운전자가 너무 많으면 오히려 플랫폼 운영이 비효율적&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;즉, &lt;strong&gt;네트워크가 성장하는 데는 적절한 균형점이 필요&lt;/strong&gt;하다. 알리 임계값은 단순한 생태학 개념이 아니라, 기술 제품의 네트워크 효과에도 그대로 적용된다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;초기에는 임계값을 넘을 수 있도록 사용자 확보가 필수적이다.&lt;/li&gt;\n  &lt;li&gt;네트워크가 성장하면 최적의 수용력을 유지해야 한다.&lt;/li&gt;\n  &lt;li&gt;그렇지 않으면 네트워크는 붕괴할 가능성이 크다.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;네트워크 기반 제품이 성공하려면, 이러한 생태학적 법칙을 이해하고 적절한 성장 전략을 적용해야 한다.&lt;/p&gt;\n\n&lt;h3 id=&quot;수익성-부족에-대한-이야기&quot;&gt;수익성 부족에 대한 이야기:&lt;/h3&gt;\n\n&lt;p&gt;티핑 포인트를 빠르게 거쳐가기 위해 수익이 나지 않는 것이 현명한 이유는 무엇일까? 수익성 부족이 네트워크가 티핑 포인트를 더 빠르게 지나게 하는 현명한 전략이 될 수 있는 이유를 다음과 같이 설명했다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;소수의 원자 네트워크를 구축한 후에는 돈을 지출하여 전체 시장에 진입하고 싶어질 것이다. 마켓플레이스의 경우, 구매자에게는 낮은 가격, 판매자에게는 높은 수익이 핵심적인 가치 제안이 된다. 사회적 제품에서도 마찬가지로, 커뮤니케이션이든 콘텐츠 공유든 중요한 요소가 된다. 여기서 콘텐츠 창작자에게 중요한 것은 청중 확보와 수익 창출 모두다.&lt;/li&gt;\n  &lt;li&gt;일단 시장에서 승리하면, 거의 언제나 규모에 맞게 인센티브를 줄이는 것이 목표가 된다. 플랫폼에서 처리 가능한 전체 시장이 활성화되면, 더 이상 구매 비용에 지출할 필요가 없어진다.&lt;/li&gt;\n  &lt;li&gt;단기간에는 수익이 나지 않을 것 같아도, 시장이 내게 유리한 티핑 포인트에 도달한다면 장기적으로 우위를 점할 수 있다.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;인접-사용자-이론-adjacent-users-theory&quot;&gt;인접 사용자 이론 Adjacent Users Theory:&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;&lt;a href=&quot;https://andrewchen.com/the-adjacent-user-theory/&quot;&gt;The Adjacent User Theory&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;네트워크는 여러 개의 작은 네트워크로 이루어져 있으며, 일부 네트워크는 다른 네트워크보다 훨씬 더 활성화되어 있다. 일반적으로, 가장 먼저 형성된 핵심 네트워크(Core Network)가 가장 건강하고 활발하게 작동한다. 그러나 핵심 네트워크에서 멀어질수록 참여도가 낮은 사용자 그룹과 거의 활성화되지 않은 네트워크가 존재하게 된다. 즉, 제품을 인지하고 있으며 테스트해본 경험은 있지만, 여전히 참여형 사용자가 되지 못한 이들이다.&lt;/p&gt;\n\n&lt;p&gt;예를 들어, eBay의 초기 핵심 시장은 미국의 수집품(Collectibles) 커뮤니티였지만, 자동차 같은 고가품을 거래하는 사용자들에게는 적합하지 않았다. 또한, 결제 시스템이 원활하지 않은 국제 시장과 같은 완전히 비활성화된 네트워크도 존재했다.&lt;/p&gt;\n\n&lt;p&gt;이러한 인접 네트워크(Adjacent Networks)를 이해하고 하나씩 공략하는 것이 성장과 시장 확장의 핵심 전략이다.&lt;/p&gt;\n\n&lt;p&gt;책에 나온 Instagram 사례:&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;2016년, Instagram은 이미 4억 명 이상의 사용자를 보유하고 있었지만 성장이 지수적(exponential)이 아닌 선형적(linear)으로 진행되고 있었음. 이는 일반적인 제품이라면 큰 성공이지만, 소셜 네트워크 제품은 네트워크 효과를 통해 폭발적인 성장을 지속해야 하는 특성이 있음. 당시 Instagram의 VP Growth, Bangaly Kaba는 성장이 둔화된 이유를 분석하고, 이를 해결하기 위한 전략을 개발해 10억 명 이상의 사용자로 확장할 수 있도록 만듦.&lt;/li&gt;\n  &lt;li&gt;2016년, Instagram은 이미 4억 명 이상의 사용자를 보유하고 있었지만, 성장이 지수적(exponential)이 아닌 선형적(linear)으로 진행되고 있었다. 일반적인 제품이라면 큰 성공이지만, 소셜 네트워크 제품은 네트워크 효과를 통해 폭발적인 성장을 지속해야 하는 특성이 있다.&lt;/li&gt;\n  &lt;li&gt;당시 Instagram의 VP of Growth, Bangaly Kaba는 성장이 둔화된 원인을 분석하고, 이를 해결하기 위한 전략을 개발하여 사용자를 10억 명 이상으로 확장할 수 있도록 만들었다. 이 때 그가 접근한 방식은 인접 사용자(Adjacent User)에 대한 분석이었다. 이들이 제품을 정착하지 못한 이유는 현재 제품의 포지셔닝 이나 사용자 경험이 이들에게 적합하지 않기 때문이었다. 4억 명의 기존 사용자들에게는 Product-Market Fit이 있었지만, 수십억 명의 새로운 사용자들은 Instagram을 자신의 삶과 연결하지 못하고 있었음.&lt;/li&gt;\n  &lt;li&gt;초기 인접 사용자는 미국의 35~45세 여성으로, Facebook은 사용하지만 Instagram의 가치를 이해하지 못하는 그룹. 이들을 위해 Facebook 프로필과 친구 관계 데이터를 활용하여 친구 및 가족을 쉽게 찾을 수 있도록 추천 알고리즘을 개선함.&lt;/li&gt;\n  &lt;li&gt;후기 인접 사용자는 자카르타에서 저사양 3G 안드로이드폰을 사용하는 예비 사용자. 이들을 위해 낮은 데이터 소비를 지원하는 앱 최적화 작업을 진행함.&lt;/li&gt;\n  &lt;li&gt;Instagram은 총 8개의 주요 인접 사용자 그룹을 단계적으로 해결해 나가면서, 성장 정체를 극복하고 폭발적인 확장을 이루어냄.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;컨텍스트의-붕괴-context-collapse&quot;&gt;컨텍스트의 붕괴 Context Collapse:&lt;/h3&gt;\n\n&lt;p&gt;모든 네트워크는 초기에 특정 원자 네트워크(Atomic Network)를 중심으로 형성된다. 이 시기에는 네티켓(Netiquette), 즉 네트워크 내에서 허용되는 행동과 금기사항이 자연스럽게 정해지며, 특정 문화가 형성된다. 그러나 시간이 지나면서 이러한 문화는 점점 약화되기 쉬워지고, 결국 맥락 붕괴(Context Collapse)가 발생한다.&lt;/p&gt;\n\n&lt;p&gt;이러한 컨텍스트 붕괴는 서로 다른 사용자 그룹이 하나의 네트워크에서 충돌할 때 발생한다. 예를 들어, Facebook이 초기에는 친한 친구들끼리 사적인 이야기, 사진, 농담을 공유하는 공간으로 활용되었지만, 시간이 지나면서 친척, 가족, 선생님, 상사까지 유입되었다. 이로 인해 사용자는 콘텐츠를 자유롭게 게시하지 못하게 되고, 활동이 줄어들면서 네트워크 성장에도 부정적인 영향을 미치게 된다.&lt;/p&gt;\n\n&lt;p&gt;컨텍스트 붕괴는 너무나도 많은 네트워크가 동시에 모였을 때 발생한다.&lt;/p&gt;\n\n&lt;p&gt;컨텍스트 붕괴의 문제점:&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;콘텐츠 제작자(Content Creators) 감소 → 새로운 콘텐츠 감소 → 네트워크 가치 하락\n    &lt;ul&gt;\n      &lt;li&gt;예시: YouTube, Instagram의 크리에이터들이 특정 콘텐츠를 올리기 꺼려하는 현상&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;마켓플레이스에서의 매칭(Matchmaking) 저하 → 일반 사용자 유입(퀄리티 저하) → 초기 핵심 유저의 이탈 → 네트워크 가치 하락\n    &lt;ul&gt;\n      &lt;li&gt;예시: 고급 스니커 거래 커뮤니티가 시간이 지나면서 일반 신발 판매 시장으로 변질되는 현상&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;기업 내 협업 도구에서의 문제\n    &lt;ul&gt;\n      &lt;li&gt;초기: 소규모 팀 내에서는 자유로운 소통이 가능&lt;/li&gt;\n      &lt;li&gt;변화: 조직이 커지면서 상사, 임원, 외부 팀까지 유입되며 소통 위축&lt;/li&gt;\n      &lt;li&gt;예시: Slack에서 팀원이 자유롭게 농담을 주고받다가 임원이 참여하면서 분위기가 달라지는 현상&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;컨텍스트 붕괴를 극복하는 방법:&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;사용자를 세분화(Segmentation)하여 네트워크 분리\n    &lt;ul&gt;\n      &lt;li&gt;Facebook: 비공개 그룹(Facebook Groups) 활성화&lt;/li&gt;\n      &lt;li&gt;Instagram: “Close Friends” 기능 도입&lt;/li&gt;\n      &lt;li&gt;Slack: 팀별 채널 분리&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;콘텐츠 노출을 맞춤화(Algorithmic Personalization)\n    &lt;ul&gt;\n      &lt;li&gt;사용자가 누구에게 어떤 콘텐츠를 노출할지 선택할 수 있도록 지원&lt;/li&gt;\n      &lt;li&gt;예: Twitter의 “Following” vs. “For You” 피드, LinkedIn의 “Private Mode”&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;초기 사용자 문화 보호\n    &lt;ul&gt;\n      &lt;li&gt;Airbnb;  “고유한 숙소” 강조하며 호텔과 차별화&lt;/li&gt;\n      &lt;li&gt;Reddit; 특정 커뮤니티 문화 유지하도록 강력한 모더레이션 정책 운영&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;새로운 사용자와 기존 사용자 간 균형 유지\n    &lt;ul&gt;\n      &lt;li&gt;마켓플레이스 모델: 초기에 고급 사용자층(Target Niche)을 형성한 후 점진적으로 새로운 사용자 유입&lt;/li&gt;\n      &lt;li&gt;소셜 네트워크 모델: 새로운 기능을 도입하여 기존 사용자가 떠나지 않도록 유도&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;그-외&quot;&gt;그 외:&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;네트워크의 밀도는 총수보다 중요하다.&lt;/li&gt;\n  &lt;li&gt;대규모 론칭으로 인해 생성된 네트워크가 취약한 이유는 분명하다. 존재하지 않는 다수의 네트워크보다, 밀도가 높고 참여도가 높은 소규모 원자 네트워크가 더 유리하다. 네트워크 제품의 유용성이 다른 사용자의 확보에 달려 있다면, 목표 수치에 집착하기보다 네트워크 내 개별 사용자 간의 관계를 확장하는 것이 더 중요하다.&lt;/li&gt;\n  &lt;li&gt;스타트업은 작은 규모에서 시작하여 네트워크의 힘을 활용해 성장할 수 있는 장점이 있다.&lt;/li&gt;\n  &lt;li&gt;거대한 규모의 네트워크 효과를 창출하려면, 우선 작은 규모의 원자 네트워크에서 시작해야 한다. 그리고 첫 번째 네트워크 집합에서의 성공을 발판 삼아, 그다음 네트워크 집합으로 확장해 나가야 한다.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;마치며&quot;&gt;마치며&lt;/h1&gt;\n\n&lt;p&gt;예나 지금이나 스타트업의 성공과 실패 이야기를 들으면 설렘이 가득합니다. 그런데 제품을 만드는 사람으로서, 때로는 엔드 유저로서 네트워크 효과를 가진 서비스를 체험하면서 이 책에서 다루는 내용이 당연하게 느껴지기도 했습니다. 아마도 우리가 이미 경험하고 있는 현상들을 이 책이 체계적으로 정리해주어서 그런것 같습니다.&lt;/p&gt;\n\n&lt;p&gt;각 분야의 전문가들은 특정 문제나 현상을 설명하기 위해 개념에 이름을 붙이곤 합니다. Cold Start Theory, Network Effects, Adjacent Users Theory 등 우리가 이미 알고 있고 경험한 것들을 이 분야의 전문가들이 명명해놓으니, 현상에 대한 이해가 한결 쉬워졌습니다. 이 책을 읽으며 제품을 사용해보고 때로는 만들면서 배웠던 것들을 프레임워크를 통해 정리할 수 있는 좋은 기회가 되었습니다.&lt;/p&gt;\n\n&lt;p&gt;최근 1~2년 동안 회사에서 사용자와 거리가 먼 기술 중심의 업무를 하다 보니, 제품을 바라보는 시각이 점점 무뎌지고 있다는 걸 종종 느꼈습니다. 그럴 때마다 사용자의 목소리를 듣기 위해 고객 문의 채널을 살펴보거나 데이터를 분석하는 일을 틈틈이 해왔던 것 같아요. 그런데 마침 이 책이 그 갈증을 해소해 주었고, 읽는 내내 우리 제품에 빗대어 생각하며 다양한 영감을 얻을 수 있었습니다. 책을 읽으며 들었던 생각을 동료들과 나누며 발산 할 수 있는 기회도 되었습니다. 제로 단계에서 어떤 실패와 성공을 거쳐 글로벌 네트워크를 구축했는지를 다룬 책이니, 꼭 사용자 간 연결을 기반으로 한 제품을 만들지 않더라도 제품 성장에 대한 영감을 얻고 싶다면 일독을 권합니다. (번역이 아쉬워서 원서와 함께 봤던 점은 참고하시길…)&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/01/30/cold-start-book.png&quot; alt=&quot;The Cold Start Problem&quot; title=&quot;The Cold Start Problem&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;&lt;a href=&quot;https://www.yes24.com/product/goods/118148684&quot;&gt;콜드 스타트: 기업 가치를 결정짓는 네트워크의 과학&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Cold-Start-Problem-Andrew-Chen/dp/0062969749&quot;&gt;The Cold Start Problem: How to Start and Scale Network Effects&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://andrewchen.com/&quot;&gt;andrewchen.com&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n            \n          ",
        "contentSnippet": "<blockquote>\n  <p>소프트웨어 개발은 점점 쉬워지고 있지만, 새로운 제품과 서비스를 출시하고 확장하는 일은 여전히 어렵습니다. 스타트업은 기술 생태계에 진입할 때 치열한 경쟁, 카피캣, 비효율적인 마케팅 채널 등과 같은 어려운 도전에 직면합니다.<br />\n네트워크 효과(Network Effects)는 제품이나 서비스의 가치가 사용자가 많아질수록 증가하는 현상을 말하며, 새로운 제품이 돌파구를 마련하는 데 중요한 역할을 합니다. 이는 바이럴 성장과 입소문(viral growth and word of mouth)을 통해 새로운 사용자를 유치할 수 있도록 도와줍니다.<br />\n그러나 대부분의 창업가는 네트워크 효과를 설명할 수 있는 개념적 틀이나 맥락을 이해하지 못합니다. 네트워크 효과란 정확히 무엇이며, 어떻게 팀이 이를 구축하고 제품에 적용할 수 있을까요? 모든 플레이어가 네트워크 효과를 활용하는 시장에서 제품은 어떻게 경쟁해야 할까요?</p>\n</blockquote>\n\n<p>콜드 스타트. 책 제목만 보면 <code class=\"language-plaintext highlighter-rouge\">시작이 어렵다</code>는 느낌이 든다. 이는 맞는 말이다. 그런데 “시작” 중에서도 사용자 간 연결을 기반으로 한 제품을 만들려 할 때 겪게 될 어려움에 대해 이야기하는 책이다. 스타트업 팀이든 누군가 제품을 만들 때 겪게 될 이런 어려움과 해결 방법들에 대해서 사례 기반으로 알려준다.</p>\n\n<p>저자인 앤드류 첸(Andrew Chen)에 대해서도 알아두면 좋은데(워낙 유명한 분이라..), a16z(Andreessen Horowitz)에서 파트너로 활동하며 소셜, 마켓플레이스, 엔터테인먼트, 게임, AI 등 기술 산업 분야에 투자하고 있다. 앤드류가 운영하고 있는 뉴스레터는 20만 명 이상의 구독자가 있다고… 이 책에는 흔히 들어봤을 성공한 스타트업들 이야기가 굉장히 많이 나오는데, 그중에서도 Uber 이야기가 가장 많이 나온다. 앤드류 첸은 이전에 Uber에서 라이더 그로스 부분의 총 책임자(Head of Rider Growth)로 재직하며 플랫폼의 활성 사용자 수를 1,500만에서 1억 명까지 성장시키는데 기여했다. 앤드류 첸 본인의 성공과 실패 경험, 그리고 스타트업들의 유스케이스를 분석해서 다양한 제품과 산업에 적용할 수 있는 <code class=\"language-plaintext highlighter-rouge\">콜드 스타트 이론</code> 이라는 프레임워크와 원칙을 만들었고, 그 중에서도 네트워크 효과를 활용하는 제품이 왜 그토록 중요한지 이야기해주고 있다.</p>\n\n<hr />\n\n<h1 id=\"네트워크-효과-network-effects\">네트워크 효과 Network Effects</h1>\n\n<blockquote>\n  <p>네트워크를 사용하는 사람들이 늘어날수록 네트워크가 사용자들에게 더 가치 있어진다.</p>\n</blockquote>\n\n<p><strong>네트워크 효과(Network Effects)</strong>는 제품을 사용하는 사람들이 늘어날수록 제품의 가치가 높아지고, 네트워크가 사용자들에게 더 가치 있어진다고 설명할 때 쓰는 용어다. 이 문장만 봐서는 정확히 무슨 말인지 잘 모르겠다. 어떤 제품을 만드는 메이커 입장에서 네트워크란 무엇일까? 이를 사용자와 연관 지어 생각해 보면, 이런 답을 도출해 볼 수 있다. <strong>연결된 사용자 간의 상호 작용</strong>.</p>\n\n<p>우리가 사용하는 많은 제품이나 서비스는 플랫폼 내 다른 사용자들과의 연결을 통해 가치를 만들어낸다. 예를 들어, Uber는 특정 도시에 운행할 기사와 승객을 연결해 주고, Airbnb는 특정 도시에 방을 제공할 호스트와 여행자를 연결해 준다. 이러한 제품에서는 네트워크 효과가 제품의 가치를 만들어낸다. 그래서 Uber에 특정 도시에 운행할 기사가 없으면 승객 입장에서는 제품이 쓸모없어지고, 이탈로 이어진다. 마찬가지로, Airbnb에 특정 도시에 방을 제공할 호스트가 없으면 사용자 입장에서는 아무리 제품을 잘 만들었더라도 가치가 떨어지고 만다.</p>\n\n<blockquote>\n  <p>네트워크 효과는 이 책의 처음부터 끝까지 빠지지 않고 등장하는 중요한 개념이다. 책의 제목인 Cold Start는 단어가 270번 나오는 것에 비해, Network Effect는 총 301번 등장한다.</p>\n</blockquote>\n\n<p>제품을 만드는 사람들에게 네트워크 효과가 왜 중요할까? 정답은 <strong>쉬워진 제품 출시와 치열한 경쟁 속에서 살아남기 위한 차별화</strong>에 있다. 이제 AI 도구를 사용하지 않으면 바보가 되는 세상이 되었다. 간단한 프로토타이핑은 기본이고, 상용 제품도 Bolt, v0, Replit 같은 도구를 활용하면 쉽게 만들 수 있다. 또한, 잘 만들어진 SaaS, No Code(Low Code) 툴이 너무 많고, 클라우드 환경도 날이 갈수록 발전하고 있어 제품을 만드는 팀 입장에서는 제품 출시의 벽이 정말 낮아졌다. 그래서 이제는 제품 성공에서 속도가 중요한 시대는 지난 것 같다. 제품 출시는 쉬워졌고, 경쟁은 갈수록 치열해지고 있다. 그렇기 때문에 경쟁 제품으로부터 방어할 수 있는 차별화된 네트워크를 구축하는 것이 중요하다.</p>\n\n<p>대부분의 새로운 제품은 첫 시장 진입에 실패하고 사라진다. 그리고 그들의 네트워크는 시작도 하기 전에 붕괴하고 만다. 네트워크 효과가 모두 강력하고 긍정적인 힘이라는 것은 근거 없는 믿음이며, 사실은 정반대다. 아래에서도 나오지만, 작은 규모의 네트워크는 자연적으로 자신을 파괴하려고 한다. 사람들이 어떤 제품을 보러 갔을 때, 그것을 사용하고 있는 지인이나 동료가 아무도 없다면 자연스럽게 떠나고 말 것이다.</p>\n\n<p>이 문제를 어떻게 해결할 수 있을까? 다음 장에서 살펴볼 원자 네트워크(충분히 사람이 떠나지 않을 만큼의 최소한의 네트워크)가 답이 될 수 있다.</p>\n\n<hr />\n\n<h1 id=\"콜드-스타트-이론-cold-start-theory\">콜드 스타트 이론 Cold Start Theory</h1>\n\n<p>콜드 스타트 이론(Cold Start Theory)은 모든 제품을 만드는 팀이 네트워크 효과를 온전히 활용하기 위해 거쳐야 할 일련의 단계를 프레임워크로 정리한 것이다.</p>\n\n<p><img src=\"/images/2025/01/30/stages-cold-start-framework.png\" alt=\"The stages of the Cold Start framework\" title=\"The stages of the Cold Start framework\" class=\"center-image\" /></p>\n\n<h3 id=\"콜드-스타트-문제-the-cold-start-problem\">콜드 스타트 문제 The Cold Start Problem:</h3>\n\n<p>새로운 영상 공유 앱이 출시되었다. 그런데 앱에 다양한 콘텐츠가 없다 보니 사용자들은 오래 머물지 않는다. 마켓플레이스와 소셜 네트워크 등을 포함하여 B2B 서비스도 마찬가지다. 사용자가 자신이 원하는 사람이나 물건을 찾지 못하면 서비스에서 이탈한다. 이것이 바로 콜드 스타트 문제(The Cold Start Problem)이며, 초기 이탈 문제를 해결하기 위해 적절한 사용자와 콘텐츠를 동일한 네트워크에 동시에 모으는 것이 필수적이다.</p>\n\n<blockquote>\n  <p>Anti-network effects; the network effects that startups love so much actually hurt them.</p>\n</blockquote>\n\n<p>이 문장이 인상 깊었는데, 대부분의 경우 스타트업들이 그토록 사랑하는 네트워크 효과는 실제로 그들에게 해가 된다고 한다. 제품에 네트워크를 구축해야 살아남는 세계에서, 제대로 된 네트워크가 없으면 이는 자기 파괴적인 관계로 돌아선다는 것이다.</p>\n\n<p>누구나 거쳐가야 할 초기 콜드 스타트 문제를 해결하기 위해 Wikipedia의 콘텐츠 제작자, 신용카드의 발명 과정, Zoom의 제품 출시 과정 이야기가 자세하게 소개되었다. 여기서 강조된 개념이 <strong>원자 네트워크(Atomic Network)</strong> 였는데, <strong>최소한의 규모로도 안정적으로 작동하고 스스로 성장할 수 있는 네트워크</strong>를 의미한다. 예를 들어, Zoom의 화상회의 서비스는 단 2명의 사용자만으로도 작동할 수 있지만, Airbnb는 하나의 시장에 수백 개의 활성화된 숙소 리스트가 있어야 안정적인 네트워크가 형성된다. 그래서 이 단계에 있는 팀이나 제품에게는 우리 제품의 Atomic Network가 무엇인지(임계치가 얼마인지) 파악하는게 중요하다. 여기서 중요한 것 중 하나는 Atomic Network는 규모가 크지 않고 밀도가 높아야 한다는 것이다.</p>\n\n<ul>\n  <li>가장 규모가 작은 집단을 구축하는 것을 목표로 해야 한다.</li>\n  <li>더 많은 사용자를 포함 시키려 할수록 원자 네트워크를 만드는 것은 어려워진다.</li>\n</ul>\n\n<p>콜드 스타트 문제에 있어 원자 네트워크 보다 중요한 개념이 있다. 네트워크는 종종 쌍을 이룬 측면을 가지고 있다. Provider ↔ Consumer, Content Creator ↔ Consumer, Driver ↔ Passenger, Male ↔ Female 처럼 말이다.</p>\n\n<p>예를 들어, Uber에서는 운전 기사가 있어야 승객이 있고, Tinder에서는 여성 사용자가 있어야 남성 사용자가 있다. 이처럼 초기 원자 네트워크에는 특정한 역학 관계가 작용한다. 또한, 소수의 사용자가 지나치게 많은 가치를 창출하면서 강력한 권력을 차지하게 되는 현상도 발생할 수 있다.</p>\n\n<ul>\n  <li>Uber: 상위 20% 드라이버가 전체 60% 승객을 태운다.</li>\n  <li>Tinder: 여성은 5%의 남성을 선택하지만 평균 남성은 45% 여성을 선택한다.</li>\n  <li>Wikipedia: 전체 사용자는 수억명, 월 활성 작성자가 10만명이지만, 100건 이상 글 편집자는 4,000명(0.02%). Steven Pruitt 라는 한 개인은 영문 위키피디아의 1/3을 작성함(35,000개 글, 300만번 이상 수정).</li>\n</ul>\n\n<p>네트워크 내의 유저는 보통 한 쪽이 다른 한 쪽보다 데려오기 어렵다.</p>\n\n<ul>\n  <li>소셜 네트워크: 모두가 소비하는 미디어를 만드는 콘텐츠 창작자</li>\n  <li>앱스토어: 제품을 제작하는 개발자</li>\n  <li>업무용 앱: 문서와 프로젝트를 작성하고 제작하며 동료들을 불러 모으는 관리자</li>\n</ul>\n\n<p>그리고 이걸 네트워크의 <strong>하드 사이드(Hard Side)</strong>라고 부른다. 네트워크의 하드 사이드를 관리하고 이들을 만족시키는 것이 원자 네트워크보다 더 중요하다. 따라서 제품이 네트워크 기반으로 성장 하기를 원한다면, 하드 사이드부터 정의하는 것이 중요하다. Uber 와 Tinder도 마찬가지다. 위키피디아 사례를 보면, 고작 0.02%에 불과한 의욕 넘치는 사용자들이 나머지 네트워크를 위해 콘텐츠를 발행한다. 위키피디아의 콘텐츠 창작자들 역시 커뮤니티 자체에 매료되었을 가능성이 높다. 사회적 반응과 지위 등 커뮤니티의 역학 관계가 그들이 계속 콘텐츠를 발행하도록 동기를 부여하는 요소가 된다.</p>\n\n<p>하드 사이드를 정의하고 원자 네트워크를 구축하다 보면 마법의 순간(Magic Moment)이 온다. 여기서는 클럽하우스를 예시로 들었는데, 네트워크가 충분히 채워지고 활성화되어 사람들이 올바른 방식으로 소통할 수 있다면, 그때 Magic Moment가 온다고 한다. 흔히 Magic Moment를 찾는 과정을 Product-Market Fit을 찾는 과정이라고 한다. 그렇다면 Magic Moment를 어떻게 측정할 수 있을까? 이는 반대로 접근해 보면 된다.</p>\n\n<ul>\n  <li>예시) 우버 ZERO: 승객이 우버 앱을 실행하여 주소를 선택한 후 승차하기로 했을 때 그 지역에 운전기사가 아무도 없는 상황. 네트워크에 있는 다른 사용자들과 상호작용하는 것이 그 상품의 핵심이라면 제로는 그것이 충족될 수 없다는 의미이며, 이는 사용자가 이탈하여 다시는 돌아오지 않을 수도 있다는 뜻이다.</li>\n</ul>\n\n<p>만약 콜드 스타트 문제를 겪고 있다면, 초기 단계에서는 제품에서 빠진 기능을 인간의 노력으로 대체하는 것도 중요하다. 이 책에서는 이를 플린트스토닝(Flintstoning)이라고 표현한다. 초기 네트워크가 형성되면, 플린트스토닝 기법은 가속도를 얻으며 점점 자동화를 향해 진화한다. 네트워크가 스스로 일어설 수 있을 때까지, 중요한 부분을 수동으로 채워 넣는 것이 목표다.</p>\n\n<p>마지막으로 Always Be Hustlin. 2012년, Uber는 앱에 등장하는 ‘ICE CREAM’ 버튼을 누르면 우버 블랙 차량을 통해 아이스크림이 배달되는 이벤트를 진행했다. ‘실제로 도움이 되었나요?’라는 질문에 대한 대답은 이렇다.</p>\n\n<ul>\n  <li>개별적인 볼거리로는 회사에 큰 영향을 미치지 않았을 수도 있다. 하지만 시장을 제로에서 티핑 포인트까지 끌어올리는 프레임워크 안에서, 이러한 재빠르고 영리한 전술은 시장이 이륙하는 데 핵심적인 역할을 했다고 생각한다. 가장 중요한 것은, 우버가 이런 개념을 빠르게 식별하고 실행하며 반복할 수 있는 시스템을 만들었다는 점이다. 이러한 시스템을 구축하는 데 도움을 준 것은 <strong>진취적인 팀 문화, 강력한 소프트웨어 제작 도구, 그리고 각 도시마다 고유한 콜드 스타트 문제가 있다는 것에 대한 이해</strong>다.</li>\n</ul>\n\n<p>차량 공유 앱에서 아이스크림을 배달해준다? 이벤트만 보면 서비스 성장에 전혀 영향을 미칠것 같지 않다. 그런데 이런 이벤트들은 Uber 1.0 Cultural Values에 기반한 것이고 이걸 보니 정말 많은 시도를 했겠다는 생각이 들었다.</p>\n\n<ul>\n  <li><strong>Make Magic</strong>: Seek breakthrough that will stand the test of time</li>\n  <li><strong>Super pumped</strong>: The world is a puzzle to be solved with enthusiasm</li>\n  <li><strong>Inside Out</strong>: Find the gap between popular perception and reality</li>\n  <li><strong>Be an Owner, Not a Renter</strong>: Revolutions are won by true believers</li>\n  <li><strong>Optimistic Leadership</strong>: Be inspiring</li>\n  <li><strong>Be Yourself</strong>: Each of us should be authentic</li>\n  <li><strong>Big Bold Bets</strong>: Take risks and plant seeds that are five to ten years out</li>\n  <li><strong>Customer Obsession</strong>: Start with what’s best for the customer</li>\n  <li><strong>Always Be Hustlin’</strong>: Get more done with less, working longer, harder, and smarter, not just two out of three</li>\n  <li><strong>Let Builders Build</strong>: People must be empowered to build things</li>\n  <li><strong>Winning</strong>: Champion’s Mindset</li>\n  <li><strong>Principled Confrontation</strong>: Sometimes the world and institutions need to change in order for the future to be ushered in</li>\n  <li><strong>Meritocracy and Toe-Stepping</strong>: The best idea always wins. Don’t sacrifice truth for social cohesion and don’t hesitate to challenge the boss.</li>\n  <li><strong>Celebrate Cities</strong>: Everything we do make cities better.</li>\n</ul>\n\n<p>여기서 잠깐 <a href=\"https://www.paulgraham.com/ds.html\">Paul Graham의 Do things that don’t scale</a> 이야기가 나온다. 확장 가능하지 않은 일을 하라. 직접 고객을 한 명씩 찾아가 설득하는 것이 처음 시작할 때는 좋은 방법이라는 의미다. 창립자가 해야 하는 가장 흔한 확장되지 않는 일은 사용자를 직접 선발하는 것이다. 이는 거의 모든 스타트업이 반드시 거쳐야 하는 과정이다. 사용자가 오기를 기다려서는 안 된다. 밖으로 나가 직접 부딪쳐야 한다.</p>\n\n<p>생각해볼만한 재미있는 질문:</p>\n\n<ul>\n  <li>초기 네트워크에 처음부터 있어야 할 가장 중요한 사용자들은 누구이고 그 이유는 무엇인가?</li>\n  <li>원하는 대로 성장할 수 있게 하려면 초기 네트워크의 씨앗을 어떻게 뿌려야 하는가?</li>\n</ul>\n\n<h3 id=\"티핑-포인트-the-tipping-point\">티핑 포인트 The Tipping Point:</h3>\n\n<p>원자 네트워크가 잘 구축되어 콜드 스타트 문제를 극복하면, 네트워크는 어느 순간 폭발적인 성장을 맞이하게 된다. 네트워크가 성장하면서 새로운 네트워크들이 형성되는데, 이 과정이 점점 가속화되며 전체 시장을 훨씬 수월하게 공략할 수 있게 된다.</p>\n\n<ul>\n  <li>LinkedIn: 초대 받은 사람만 사용할 수 있게 설계하여 연결을 통한 선순환을 만들어냄</li>\n  <li>Instagram: 사진 보정 도구로 시작해서 팔로우와 공유를 통해 네트워크 효과를 만들어냄</li>\n  <li>Uber: 특정 도시에서의 성공 경험을 바탕으로 수요와 공급을 맞춰나가는 전략을 계속해서 반복</li>\n</ul>\n\n<p>네트워크를 론칭할 때마다, 다음 도미노를 쓰러뜨리는 일이 훨씬 수월해진다. 이 모든 것은 처음 시작된 하나의 작은 성공 덕분이다.</p>\n\n<p>Instagram 처럼 도구와 네트워크가 쌍을 이루는 제품:</p>\n\n<ul>\n  <li>창작 + 사람들과 공유: Instagram, Youtube, Google Workspace, LinkedIn</li>\n  <li>구성 + 사람들과 협업: Pinterest, Asana, Dropbox</li>\n  <li>기록 체계 + 사람들과 최신 정보 유지: OpenTable, GitHub</li>\n  <li>검색 + 사람들과 함께 기부: Zillow, Glassdoor, Yelp</li>\n</ul>\n\n<h3 id=\"이탈-속도-escape-velocity\">이탈 속도 Escape Velocity:</h3>\n\n<p>신제품이 성공적으로 확장하기 시작하면, 이탈 속도(Escape Velocity)에 도달했다고 표현한다. 각 네트워크가 어느 정도 자리를 잡기 시작하면, 네트워크 효과를 강화하고 성장을 지속하기 위해 미친 듯이 일에만 집중해야 하는 시기가 바로 이때다. 이 단계의 핵심은 재빠르게 높은 성장률을 유지하면서, 성공적인 제품의 네트워크 효과를 극대화하는 것이다. 그래서 이 시점에는 흔히 하키 스틱 커브(hockey stick curve)가 나타난다.</p>\n\n<p>이탈 속도에 대해 설명하면서, 네트워크 효과의 아래 세 가지 핵심 요소도 함께 소개했다. 네트워크 기반 제품은 자신의 사적인 네트워크에 있는 사람들에게 제품을 소개할 수 있는 능력을 지니고 있다. 이 능력 덕분에 획득 비용(Acquisition Cost)은 시간이 지나 시장 포화와 경쟁으로 인해 자연스럽게 상승하는 상황에서도 낮게 유지될 수 있다.</p>\n\n<p><strong>획득 효과(Acquisition Effect)</strong>:</p>\n<ul>\n  <li>사용자가 단순히 제품을 사용하면서도 자연스럽게 새로운 사용자를 유입시키는 효과</li>\n  <li>특정 제품의 사용자가 증가하면서, 사람들이 그 제품을 사용하는 시간이 길어지고 관심이 높아질 때 발생하는 현상</li>\n  <li>재활성화(Reactivation)는 일반적으로 신제품에는 큰 우려 사항이 아니다(탈퇴하는 사용자가 적기 때문). 따라서 초점은 신규 사용자 확보에 맞춰져야 한다. 그러나 이탈 속도(Escape Velocity) 단계에 도달한 제품이라면, 수백만 명의 사용자 풀을 활용할 수 있다. 기존 사용자를 다시 참여시키는 것은 신규 사용자를 획득하는 것만큼 중요한 성장 레버가 될 수 있다.</li>\n</ul>\n\n<p><strong>참여 효과(Engagement Effect)</strong>:</p>\n<ul>\n  <li>네트워크가 확장하면서 신규 고객을 끌어들이는 능력, 즉 바이럴 요소(Viral Factor)</li>\n  <li>제품이 더 많은 사용자를 확보할수록 점점 더 사용자 친화적이고 몰입도가 높아지는 현상</li>\n  <li>최근에는 리텐션 곡선(Retention Curves)과 참여 지표(Engagement Metrics)를 활용하여 효과를 측정</li>\n</ul>\n\n<p><strong>경제 효과(Economic Effect)</strong>:</p>\n<ul>\n  <li>네트워크 효과가 시간이 지남에 따라 비즈니스 모델을 더욱 발전시키는 방식</li>\n  <li>네트워크가 성장하면서 수익화 및 전환율(Conversion Rate)이 향상되는 현상</li>\n  <li>네트워크 효과가 단순히 사용자 증가뿐만 아니라 비즈니스의 경제적 가치도 향상시킬 수 있는지를 탐구</li>\n  <li>예시1: 피드 알고리즘 개선, 전환율 증가, 프리미엄 가격 책정(Premium Pricing) 등의 방식으로 수익성 향상</li>\n  <li>예시2: Uber 플랫폼에 운전자가 늘어나면 경쟁 플랫폼에 비해 승객 입장에서의 단가가 낮아지고 그만큼 수요가 즐어나서 수익화와 전환율이 올라간다.</li>\n</ul>\n\n<h3 id=\"천장-the-ceiling\">천장 The Ceiling:</h3>\n\n<p>네트워크가 너무 커지고 포화 상태가 되면, 기존 사용자들은 피로를 느끼고 제품은 성장의 한계에 부딪히게 된다. 이는 네트워크가 최고점에 도달한 후 성장이 교착 상태에 빠지는 현상을 의미한다.</p>\n\n<p>여기서 <a href=\"https://andrewchen.com/the-law-of-shitty-clickthroughs\">엿 같은 클릭률의 법칙(The Law of Shitty Clickthroughs)</a>에 대해서 소개했는데 인상 깊었다. 1994년, HotWired 웹사이트에서 최초의 배너 광고가 등장했을 때, 클릭률(CTR)은 무려 78%에 달했다. 그러나 2011년 Facebook에서의 배너 광고 클릭률은 0.05%로, 1500배나 낮아졌다. 이는 단순한 우연이 아니라, 시간이 지남에 따라 모든 마케팅 전략의 클릭률이 감소하는 법칙이 작용한 결과다. 배너 광고뿐만 아니라 이메일, 뉴스레터, 기타 온라인 채널의 성과도 시간이 지나면서 점점 감소한다.</p>\n\n<p>클릭률 저하의 주요 원인:</p>\n\n<ol>\n  <li>사용자는 새로움(신선함)에 반응하지만, 이건 금방 사라진다. 새로운 마케팅 기법이 처음 등장하면 사람들은 신기해서 반응하지만, 반복될수록 효과가 급격히 떨어진다.</li>\n  <li>선점 효과는 오래가지 않는다. 만약 당신이 새로운 마케팅 기법을 개발하여 높은 성과를 거둔다면, 경쟁자들은 이걸 빠르게 모방할 것이다. 마케팅 채널이 퍼지면 경쟁으로 인해 성과가 점차 약화된다.</li>\n  <li>규모가 커질수록 전환율이 낮아진다. 초기 시장(early adaopters)은 새로운 기술이나 제품에 열광하지만, 주류 시장(mainstream market)은 제품이 정말 유용한지를 따진다. 즉, 처음에는 적은 비용으로 높은 효과를 볼 수 있지만, 시간이 지날수록 광고비는 증가하고 전환율은 감소한다.</li>\n</ol>\n\n<p>클릭률 저하의 법칙을 극복하는 방법:</p>\n\n<ol>\n  <li>지속적인 개선과 최적화: 새로운 Creative(광고 소재) 테스트, 새로운 퍼블리셔와 광고 네트워크 탐색, 데이터 기반 최적화</li>\n  <li>정보 전달형 마케팅 활용: 단순히 “광고”로 접근하는 것이 아니라, 사용자에게 유용한 정보를 제공하는 콘텐츠 마케팅 전략을 활용해야 한다.</li>\n  <li>새로운 마케팅 채널 선점: 아직 경쟁이 치열하지 않은 새로운 마케팅 채널을 먼저 활용하는 것이 중요하다. 남들이 아직 시도하지 않은 마케팅 채널을 개척하면, 높은 성과를 낼 가능성이 크다.</li>\n</ol>\n\n<p>이 장은 질문과 짧은 답변으로 마무리되었다.</p>\n\n<p>마케팅 채널을 통해 주당 수백 건의 다운로드가 발생하고 있다면, 다운로드 수를 두 배로 늘리려면 어떻게 해야 할까? 또는 10배, 궁극적으로 1000배 늘리려면? 가장 좋은 방법은 네트워크 효과 여부와 관계없이 꾸준히 새로운 채널을 구축하는 것이다.</p>\n\n<h3 id=\"해자-the-moat\">해자 The Moat:</h3>\n\n<p>성(안정적인 현금 흐름 혹은 이익)이 있으면 그걸 빼앗기 위해 달려드는 적군(경쟁자)이 있고, 그들로부터 방어하기 위해 구덩이를 파고 물을 채워 놓은 것을 해자(Moat)라고 부른다. 경쟁적 해자(Competitive Moat)에 대한 개념은 세계적인 투자자인 Warren Buffett이 인용하면서 유명해졌다. 이 용어는 경쟁 제품에 비해 경쟁 우위를 유지하여 장기적인 수익성과 시장 점유율을 보호할 수 있는 제품의 능력을 의미한다.</p>\n\n<blockquote>\n  <p>The key to investing is not assessing how much an industry is going to affect society, or how much it will grow, but rather determining the competitive advantage of any given company and, above all, the durability of that advantage. The products or services that have wide, sustainable moats around them are the ones that deliver rewards to investors.<br />\n투자의 핵심은 어떤 산업이 사회에 얼마나 큰 영향을 미칠 것인지 또는 얼마나 성장할 것인지를 평가하는 것이 아닙니다. 오히려 중요한 것은, 개별 기업의 경쟁 우위를 평가하고, 그 경쟁 우위가 얼마나 지속될 수 있는지를 파악하는 것입니다. 넓고 지속 가능한 해자를 가진 제품이나 서비스만이 장기적으로 투자자들에게 높은 보상을 제공할 수 있습니다.</p>\n</blockquote>\n\n<p><img src=\"/images/2025/01/30/moat.png\" alt=\"The Moat\" title=\"The Moat\" class=\"center-image\" /></p>\n\n<p>이 글의 도입부에서도 이야기했던 네트워크 제품의 차별점에 대한 내용이다. <strong>차별화된 네트워크를 갖춘 제품은 경쟁자가 쉽게 진입할 수 없다</strong>는 점에서 강력한 이점을 가진다. 이 시점부터는 네트워크를 기반으로 한 경쟁이 본격적으로 시작된다. 그리고 경쟁자를 물리치기 위한 네트워크 효과가 발동한다. 재미있는 점은, 여기서 경쟁은 단순히 더 좋은 기능이나 실행력에 관한 것만이 아니라, 한 제품의 생태계가 다른 제품의 생태계를 어떻게 위협하는가에 대한 문제로 확장된다는 것이다.</p>\n\n<p>예를 들어, Airbnb가 시장에서 이탈 속도(Escape Velocity)에 도달하면, 콜드 스타트 문제(Cold Start Problem)는 새로운 진입자에 대한 방어책이 된다. 결국, 도시에 진입하는 경쟁 제품은 모두 콜드 스타트 문제를 해결하여 동일한 밀도를 구축해야 한다. 여러분이 0에서 티핑 포인트(Tipping Point)까지 가는 데 어려움을 겪었던 것처럼, 불리한 조건에서 시작하는 경쟁 업체에게는 더욱 큰 도전이 될 것이다.</p>\n\n<p>해자(Moat)에 대해 설명하면서 선순환과 악순환(Cycle of Virtue and Doom)에 대한 이야기도 흥미로웠다. 콜드 스타트 이론(Cold Start Theory)에 따르면, 경쟁은 선순환과 동시에 악순환을 만들어 낸다. <strong>네트워크 효과는 승자에게 강력한 이점을 제공하는 동시에, 패배한 네트워크에는 강력한 부정적인 영향을 미친다. 네트워크의 가치는 사용자가 많아질수록 기하급수적으로 증가하지만, 반대로 사용자가 이탈하면 네트워크의 가치도 기하급수적으로 붕괴한다.</strong></p>\n\n<ul>\n  <li>유저 획득(Acquisition) – 바이럴 성장(viral growth)이 둔화</li>\n  <li>사용자 참여(Engagement) – 사용자 활동 감소</li>\n  <li>경제성(Economics) – 수익화(monitization) 악화</li>\n</ul>\n\n<p>즉, 네트워크 효과는 강력한 성장 촉진제지만, 동시에 사용자 이탈이 발생하면 네트워크 전체를 급격히 무너뜨리는 요인이 될 수도 있다는 것이다.</p>\n\n<hr />\n\n<h1 id=\"재밌었던-이야기들\">재밌었던 이야기들</h1>\n\n<p>여기까지가 책 전체에 나온 콜드 스타트 이론(Cold Start Theory)에 대한 정리다. 여기부터는 콜드 스타트 &amp; 네트워크 효과에 대한 흥미로웠던 이야기들을 정리해놓았다.</p>\n\n<h3 id=\"알리-임계값-allee-threshold\">알리 임계값 Allee Threshold:</h3>\n\n<p>미어캣은 아프리카 남부에 사는 극도로 사회적인 동물로, 보통 서른에서 쉰 마리 정도가 모여 무리를 지어 생활한다. 그 이유는 포식자가 접근하면 무리 중 한 마리가 두 발로 서서 경계를 서고 복잡한 경고음을 내어 다른 개체들에게 위험을 알리기 때문이다. 이들은 포식자가 공중인지 지상인지, 위험도가 낮은지, 중간인지, 높은지에 따라 다양한 방식으로 짖거나 휘파람 소리를 낸다. 이러한 경고 시스템 덕분에 무리는 안전을 유지할 수 있다. 이러한 동물의 집단 행동은 1930년대 시카고 대학교의 생태학자 워더 클라이드 알리(Warder Clyde Allee)에 의해 처음으로 연구되었다.</p>\n\n<p>그는 논문 <a href=\"https://onlinelibrary.wiley.com/doi/10.1002/jez.1400610202\">동물 집단 연구: 금붕어의 콜로이드 은에 대한 집단 보호(Studies in Animal Aggregations: Mass Protection Against Colloidal Silver Among Goldfishes)</a>를 통해 흥미로운 사실을 발견했다. 그에 따르면, 금붕어는 집단으로 있을 때 더 빠르게 성장하고, 물의 독성을 더 잘 견딜 수 있다. 이러한 개념은 생물학에서 중요한 개념이 되었으며, 집단 크기가 임계점을 넘어야 개체들이 더 안전해지고, 결국 개체군이 더 빠르게 성장할 수 있다는 <code class=\"language-plaintext highlighter-rouge\">알리 임계값(Allee Threshold)</code> 개념이 탄생했다. 즉, 알리의 인구 성장 곡선은 생태학적 네트워크 효과(Network Effect)와 유사하다.</p>\n\n<p><img src=\"/images/2025/01/30/allee-threshold.png\" alt=\"Allee Threshold\" title=\"Allee Threshold\" class=\"center-image\" /></p>\n\n<p>메시징 앱을 사용하는 사람이 적으면, 기존 사용자도 앱을 삭제한다:</p>\n\n<ul>\n  <li>사용자 수가 줄어들면, 네트워크의 가치가 감소 → 점점 더 많은 사람들이 앱을 떠남 → 네트워크 붕괴</li>\n</ul>\n\n<p>반면, 건강한 미어캣 무리는 지속적으로 성장하며 새로운 무리를 형성할 가능성이 있다:</p>\n\n<ul>\n  <li>알리 임계값을 넘어서면 개체군은 지속적으로 증가</li>\n  <li>충분한 개체 수가 유지되는 한, 약간의 개체 손실이 있어도 전체 인구는 안정적으로 유지</li>\n</ul>\n\n<p>하지만 이러한 성장은 영원히 지속될 수 없다. 결국, 환경이 제공할 수 있는 자원의 한계(예: 미어캣이 먹는 곤충과 과일의 양) 때문에 개체군이 어느 정도 이상으로 증가할 수 없다. 이것을 <code class=\"language-plaintext highlighter-rouge\">수용력(Carrying Capacity)</code>이라고 한다.</p>\n\n<p>우버(Uber)와 알리 곡선(Allee Curve) 예시:</p>\n\n<ul>\n  <li>도시 내에 운전자가 감소 → 차량 호출 시간이 길어짐 → 사용자 서비스 이탈 → 운전자도 플랫폼 이탈 → 우버 네트워크 붕괴</li>\n</ul>\n\n<p>하지만 임계점을 넘어서면, 네트워크가 원활하게 작동한다.</p>\n\n<ul>\n  <li>운전자가 증가 → 대기 시간이 감소 → 사용자 증가 → 운전자 증가</li>\n</ul>\n\n<p>그러나 네트워크가 너무 커지면 한계에 도달한다.</p>\n\n<ul>\n  <li>기다림 없이 차량을 이용하는 것은 편리하지만, 운전자가 너무 많으면 오히려 플랫폼 운영이 비효율적</li>\n</ul>\n\n<p>즉, <strong>네트워크가 성장하는 데는 적절한 균형점이 필요</strong>하다. 알리 임계값은 단순한 생태학 개념이 아니라, 기술 제품의 네트워크 효과에도 그대로 적용된다.</p>\n\n<ul>\n  <li>초기에는 임계값을 넘을 수 있도록 사용자 확보가 필수적이다.</li>\n  <li>네트워크가 성장하면 최적의 수용력을 유지해야 한다.</li>\n  <li>그렇지 않으면 네트워크는 붕괴할 가능성이 크다.</li>\n</ul>\n\n<p>네트워크 기반 제품이 성공하려면, 이러한 생태학적 법칙을 이해하고 적절한 성장 전략을 적용해야 한다.</p>\n\n<h3 id=\"수익성-부족에-대한-이야기\">수익성 부족에 대한 이야기:</h3>\n\n<p>티핑 포인트를 빠르게 거쳐가기 위해 수익이 나지 않는 것이 현명한 이유는 무엇일까? 수익성 부족이 네트워크가 티핑 포인트를 더 빠르게 지나게 하는 현명한 전략이 될 수 있는 이유를 다음과 같이 설명했다.</p>\n\n<ul>\n  <li>소수의 원자 네트워크를 구축한 후에는 돈을 지출하여 전체 시장에 진입하고 싶어질 것이다. 마켓플레이스의 경우, 구매자에게는 낮은 가격, 판매자에게는 높은 수익이 핵심적인 가치 제안이 된다. 사회적 제품에서도 마찬가지로, 커뮤니케이션이든 콘텐츠 공유든 중요한 요소가 된다. 여기서 콘텐츠 창작자에게 중요한 것은 청중 확보와 수익 창출 모두다.</li>\n  <li>일단 시장에서 승리하면, 거의 언제나 규모에 맞게 인센티브를 줄이는 것이 목표가 된다. 플랫폼에서 처리 가능한 전체 시장이 활성화되면, 더 이상 구매 비용에 지출할 필요가 없어진다.</li>\n  <li>단기간에는 수익이 나지 않을 것 같아도, 시장이 내게 유리한 티핑 포인트에 도달한다면 장기적으로 우위를 점할 수 있다.</li>\n</ul>\n\n<h3 id=\"인접-사용자-이론-adjacent-users-theory\">인접 사용자 이론 Adjacent Users Theory:</h3>\n\n<ul>\n  <li><a href=\"https://andrewchen.com/the-adjacent-user-theory/\">The Adjacent User Theory</a></li>\n</ul>\n\n<p>네트워크는 여러 개의 작은 네트워크로 이루어져 있으며, 일부 네트워크는 다른 네트워크보다 훨씬 더 활성화되어 있다. 일반적으로, 가장 먼저 형성된 핵심 네트워크(Core Network)가 가장 건강하고 활발하게 작동한다. 그러나 핵심 네트워크에서 멀어질수록 참여도가 낮은 사용자 그룹과 거의 활성화되지 않은 네트워크가 존재하게 된다. 즉, 제품을 인지하고 있으며 테스트해본 경험은 있지만, 여전히 참여형 사용자가 되지 못한 이들이다.</p>\n\n<p>예를 들어, eBay의 초기 핵심 시장은 미국의 수집품(Collectibles) 커뮤니티였지만, 자동차 같은 고가품을 거래하는 사용자들에게는 적합하지 않았다. 또한, 결제 시스템이 원활하지 않은 국제 시장과 같은 완전히 비활성화된 네트워크도 존재했다.</p>\n\n<p>이러한 인접 네트워크(Adjacent Networks)를 이해하고 하나씩 공략하는 것이 성장과 시장 확장의 핵심 전략이다.</p>\n\n<p>책에 나온 Instagram 사례:</p>\n\n<ul>\n  <li>2016년, Instagram은 이미 4억 명 이상의 사용자를 보유하고 있었지만 성장이 지수적(exponential)이 아닌 선형적(linear)으로 진행되고 있었음. 이는 일반적인 제품이라면 큰 성공이지만, 소셜 네트워크 제품은 네트워크 효과를 통해 폭발적인 성장을 지속해야 하는 특성이 있음. 당시 Instagram의 VP Growth, Bangaly Kaba는 성장이 둔화된 이유를 분석하고, 이를 해결하기 위한 전략을 개발해 10억 명 이상의 사용자로 확장할 수 있도록 만듦.</li>\n  <li>2016년, Instagram은 이미 4억 명 이상의 사용자를 보유하고 있었지만, 성장이 지수적(exponential)이 아닌 선형적(linear)으로 진행되고 있었다. 일반적인 제품이라면 큰 성공이지만, 소셜 네트워크 제품은 네트워크 효과를 통해 폭발적인 성장을 지속해야 하는 특성이 있다.</li>\n  <li>당시 Instagram의 VP of Growth, Bangaly Kaba는 성장이 둔화된 원인을 분석하고, 이를 해결하기 위한 전략을 개발하여 사용자를 10억 명 이상으로 확장할 수 있도록 만들었다. 이 때 그가 접근한 방식은 인접 사용자(Adjacent User)에 대한 분석이었다. 이들이 제품을 정착하지 못한 이유는 현재 제품의 포지셔닝 이나 사용자 경험이 이들에게 적합하지 않기 때문이었다. 4억 명의 기존 사용자들에게는 Product-Market Fit이 있었지만, 수십억 명의 새로운 사용자들은 Instagram을 자신의 삶과 연결하지 못하고 있었음.</li>\n  <li>초기 인접 사용자는 미국의 35~45세 여성으로, Facebook은 사용하지만 Instagram의 가치를 이해하지 못하는 그룹. 이들을 위해 Facebook 프로필과 친구 관계 데이터를 활용하여 친구 및 가족을 쉽게 찾을 수 있도록 추천 알고리즘을 개선함.</li>\n  <li>후기 인접 사용자는 자카르타에서 저사양 3G 안드로이드폰을 사용하는 예비 사용자. 이들을 위해 낮은 데이터 소비를 지원하는 앱 최적화 작업을 진행함.</li>\n  <li>Instagram은 총 8개의 주요 인접 사용자 그룹을 단계적으로 해결해 나가면서, 성장 정체를 극복하고 폭발적인 확장을 이루어냄.</li>\n</ul>\n\n<h3 id=\"컨텍스트의-붕괴-context-collapse\">컨텍스트의 붕괴 Context Collapse:</h3>\n\n<p>모든 네트워크는 초기에 특정 원자 네트워크(Atomic Network)를 중심으로 형성된다. 이 시기에는 네티켓(Netiquette), 즉 네트워크 내에서 허용되는 행동과 금기사항이 자연스럽게 정해지며, 특정 문화가 형성된다. 그러나 시간이 지나면서 이러한 문화는 점점 약화되기 쉬워지고, 결국 맥락 붕괴(Context Collapse)가 발생한다.</p>\n\n<p>이러한 컨텍스트 붕괴는 서로 다른 사용자 그룹이 하나의 네트워크에서 충돌할 때 발생한다. 예를 들어, Facebook이 초기에는 친한 친구들끼리 사적인 이야기, 사진, 농담을 공유하는 공간으로 활용되었지만, 시간이 지나면서 친척, 가족, 선생님, 상사까지 유입되었다. 이로 인해 사용자는 콘텐츠를 자유롭게 게시하지 못하게 되고, 활동이 줄어들면서 네트워크 성장에도 부정적인 영향을 미치게 된다.</p>\n\n<p>컨텍스트 붕괴는 너무나도 많은 네트워크가 동시에 모였을 때 발생한다.</p>\n\n<p>컨텍스트 붕괴의 문제점:</p>\n\n<ul>\n  <li>콘텐츠 제작자(Content Creators) 감소 → 새로운 콘텐츠 감소 → 네트워크 가치 하락\n    <ul>\n      <li>예시: YouTube, Instagram의 크리에이터들이 특정 콘텐츠를 올리기 꺼려하는 현상</li>\n    </ul>\n  </li>\n  <li>마켓플레이스에서의 매칭(Matchmaking) 저하 → 일반 사용자 유입(퀄리티 저하) → 초기 핵심 유저의 이탈 → 네트워크 가치 하락\n    <ul>\n      <li>예시: 고급 스니커 거래 커뮤니티가 시간이 지나면서 일반 신발 판매 시장으로 변질되는 현상</li>\n    </ul>\n  </li>\n  <li>기업 내 협업 도구에서의 문제\n    <ul>\n      <li>초기: 소규모 팀 내에서는 자유로운 소통이 가능</li>\n      <li>변화: 조직이 커지면서 상사, 임원, 외부 팀까지 유입되며 소통 위축</li>\n      <li>예시: Slack에서 팀원이 자유롭게 농담을 주고받다가 임원이 참여하면서 분위기가 달라지는 현상</li>\n    </ul>\n  </li>\n</ul>\n\n<p>컨텍스트 붕괴를 극복하는 방법:</p>\n\n<ul>\n  <li>사용자를 세분화(Segmentation)하여 네트워크 분리\n    <ul>\n      <li>Facebook: 비공개 그룹(Facebook Groups) 활성화</li>\n      <li>Instagram: “Close Friends” 기능 도입</li>\n      <li>Slack: 팀별 채널 분리</li>\n    </ul>\n  </li>\n  <li>콘텐츠 노출을 맞춤화(Algorithmic Personalization)\n    <ul>\n      <li>사용자가 누구에게 어떤 콘텐츠를 노출할지 선택할 수 있도록 지원</li>\n      <li>예: Twitter의 “Following” vs. “For You” 피드, LinkedIn의 “Private Mode”</li>\n    </ul>\n  </li>\n  <li>초기 사용자 문화 보호\n    <ul>\n      <li>Airbnb;  “고유한 숙소” 강조하며 호텔과 차별화</li>\n      <li>Reddit; 특정 커뮤니티 문화 유지하도록 강력한 모더레이션 정책 운영</li>\n    </ul>\n  </li>\n  <li>새로운 사용자와 기존 사용자 간 균형 유지\n    <ul>\n      <li>마켓플레이스 모델: 초기에 고급 사용자층(Target Niche)을 형성한 후 점진적으로 새로운 사용자 유입</li>\n      <li>소셜 네트워크 모델: 새로운 기능을 도입하여 기존 사용자가 떠나지 않도록 유도</li>\n    </ul>\n  </li>\n</ul>\n\n<h3 id=\"그-외\">그 외:</h3>\n\n<ul>\n  <li>네트워크의 밀도는 총수보다 중요하다.</li>\n  <li>대규모 론칭으로 인해 생성된 네트워크가 취약한 이유는 분명하다. 존재하지 않는 다수의 네트워크보다, 밀도가 높고 참여도가 높은 소규모 원자 네트워크가 더 유리하다. 네트워크 제품의 유용성이 다른 사용자의 확보에 달려 있다면, 목표 수치에 집착하기보다 네트워크 내 개별 사용자 간의 관계를 확장하는 것이 더 중요하다.</li>\n  <li>스타트업은 작은 규모에서 시작하여 네트워크의 힘을 활용해 성장할 수 있는 장점이 있다.</li>\n  <li>거대한 규모의 네트워크 효과를 창출하려면, 우선 작은 규모의 원자 네트워크에서 시작해야 한다. 그리고 첫 번째 네트워크 집합에서의 성공을 발판 삼아, 그다음 네트워크 집합으로 확장해 나가야 한다.</li>\n</ul>\n\n<hr />\n\n<h1 id=\"마치며\">마치며</h1>\n\n<p>예나 지금이나 스타트업의 성공과 실패 이야기를 들으면 설렘이 가득합니다. 그런데 제품을 만드는 사람으로서, 때로는 엔드 유저로서 네트워크 효과를 가진 서비스를 체험하면서 이 책에서 다루는 내용이 당연하게 느껴지기도 했습니다. 아마도 우리가 이미 경험하고 있는 현상들을 이 책이 체계적으로 정리해주어서 그런것 같습니다.</p>\n\n<p>각 분야의 전문가들은 특정 문제나 현상을 설명하기 위해 개념에 이름을 붙이곤 합니다. Cold Start Theory, Network Effects, Adjacent Users Theory 등 우리가 이미 알고 있고 경험한 것들을 이 분야의 전문가들이 명명해놓으니, 현상에 대한 이해가 한결 쉬워졌습니다. 이 책을 읽으며 제품을 사용해보고 때로는 만들면서 배웠던 것들을 프레임워크를 통해 정리할 수 있는 좋은 기회가 되었습니다.</p>\n\n<p>최근 1~2년 동안 회사에서 사용자와 거리가 먼 기술 중심의 업무를 하다 보니, 제품을 바라보는 시각이 점점 무뎌지고 있다는 걸 종종 느꼈습니다. 그럴 때마다 사용자의 목소리를 듣기 위해 고객 문의 채널을 살펴보거나 데이터를 분석하는 일을 틈틈이 해왔던 것 같아요. 그런데 마침 이 책이 그 갈증을 해소해 주었고, 읽는 내내 우리 제품에 빗대어 생각하며 다양한 영감을 얻을 수 있었습니다. 책을 읽으며 들었던 생각을 동료들과 나누며 발산 할 수 있는 기회도 되었습니다. 제로 단계에서 어떤 실패와 성공을 거쳐 글로벌 네트워크를 구축했는지를 다룬 책이니, 꼭 사용자 간 연결을 기반으로 한 제품을 만들지 않더라도 제품 성장에 대한 영감을 얻고 싶다면 일독을 권합니다. (번역이 아쉬워서 원서와 함께 봤던 점은 참고하시길…)</p>\n\n<p><img src=\"/images/2025/01/30/cold-start-book.png\" alt=\"The Cold Start Problem\" title=\"The Cold Start Problem\" class=\"center-image\" /></p>\n\n<hr />\n\n<h1 id=\"references\">References</h1>\n\n<ul>\n  <li><a href=\"https://www.yes24.com/product/goods/118148684\">콜드 스타트: 기업 가치를 결정짓는 네트워크의 과학</a></li>\n  <li><a href=\"https://www.amazon.com/Cold-Start-Problem-Andrew-Chen/dp/0062969749\">The Cold Start Problem: How to Start and Scale Network Effects</a></li>\n  <li><a href=\"https://andrewchen.com/\">andrewchen.com</a></li>\n</ul>",
        "guid": "https://sungjk.github.io/2025/01/30/the-cold-start-problem.html",
        "isoDate": "2025-01-30T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성희",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "2025년 무료로 사용하는 최고의 AI 사진 편집 도구 추천",
        "link": "http://muzbox.tistory.com/483532",
        "pubDate": "Fri, 31 Jan 2025 10:10:38 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483532#entry483532comment",
        "content": "<p data-ke-size=\"size16\">사진 편집, 어렵게 생각하지 마세요! 무료 AI 도구들만으로도 소셜 미디어용 콘텐츠부터 전문적인 제품 이미지까지 손쉽게 완성할 수 있어요. 직접 써보면 놀랄 거예요!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_AI IMAGE EDIT.jpg\" data-origin-width=\"2752\" data-origin-height=\"1536\"><span data-url=\"https://blog.kakaocdn.net/dn/kK4aD/btsL4ceUlTJ/ZLkpORnKQE1AbHnXZTVb9k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/kK4aD/btsL4ceUlTJ/ZLkpORnKQE1AbHnXZTVb9k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/kK4aD/btsL4ceUlTJ/ZLkpORnKQE1AbHnXZTVb9k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FkK4aD%2FbtsL4ceUlTJ%2FZLkpORnKQE1AbHnXZTVb9k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"2025년 무료로 사용하는 최고의 AI 사진 편집 도구 추천\" loading=\"lazy\" width=\"700\" height=\"391\" data-filename=\"edited_AI IMAGE EDIT.jpg\" data-origin-width=\"2752\" data-origin-height=\"1536\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">사진을 편집할 때, 특히 소셜 미디어나 블로그에 올릴 이미지를 다룰 때는 속도와 퀄리티가 중요하죠. 예전에는 포토샵 같은 전문 소프트웨어가 필수였지만, 요즘은 AI 기반의 무료 온라인 도구만으로도 충분히 훌륭한 결과물을 얻을 수 있어요. 제가 추천하고 싶은 무료 도구 몇 가지를 골라봤으니, 어떤 게 나에게 딱 맞는지 살펴보세요!</p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  Adobe Express &ndash; 전문가와 초보 모두를 위한 만능 도구</b></span></h2>\n<p data-ke-size=\"size16\">제가 상담했던 고객 중 한 분은 \"디자인에 대해 잘 모르는데, 우리 회사 홍보 포스터를 만들어야 해요\"라고 고민을 털어놨었죠. 그때 추천했던 게 바로 <b>Adobe Express</b>였어요. 사용법이 간단하면서도, 결과물은 정말 고퀄리티로 나옵니다. AI 기능도 탑재되어 있어 자동화된 이미지 생성까지 가능해요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_Adobe Express.png\" data-origin-width=\"1063\" data-origin-height=\"708\"><span data-url=\"https://blog.kakaocdn.net/dn/dzGKst/btsL2GIlTNP/mZGAkcflcZXomHGvhgsJzk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dzGKst/btsL2GIlTNP/mZGAkcflcZXomHGvhgsJzk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dzGKst/btsL2GIlTNP/mZGAkcflcZXomHGvhgsJzk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdzGKst%2FbtsL2GIlTNP%2FmZGAkcflcZXomHGvhgsJzk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1063\" height=\"708\" data-filename=\"edited_Adobe Express.png\" data-origin-width=\"1063\" data-origin-height=\"708\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">  주요 기능</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>기본 편집 툴</b>: 간단한 사진 보정부터 소셜 미디어용 콘텐츠 제작까지 지원</li>\n<li><b>생성형 AI 크레딧</b>: 월 25개 AI 크레딧이 무료로 제공돼서, 이미지 생성도 걱정 없어요</li>\n<li><b>100만 개 이상의 무료 에셋</b>: 템플릿, 스톡 이미지, 음악 등 다양한 리소스 제공</li>\n</ul>\n<p data-ke-size=\"size16\"><span style=\"color: #006dd7;\"><i><b>  제가 추천하는 사용 사례</b></i></span></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>소셜 미디어 홍보 포스터 제작</li>\n<li>회사 브랜딩 콘텐츠 (로고, 전단지 등)</li>\n</ul>\n<p data-ke-size=\"size16\">✅ <b>무료 플랜</b>으로도 충분히 쓸만하지만, 정기적으로 많은 디자인이 필요한 경우에는 유료 플랜도 고려해 볼 만해요.</p>\n<center>\n<figure id=\"og_1738283700788\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Adobe Express\" data-og-description=\"\" data-og-host=\"new.express.adobe.com\" data-og-source-url=\"https://new.express.adobe.com/\" data-og-url=\"https://new.express.adobe.com/\" data-og-image=\"\"><a href=\"https://new.express.adobe.com/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://new.express.adobe.com/\">\n<div class=\"og-image\" style=\"background-image: url();\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Adobe Express</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">&nbsp;</p>\n<p class=\"og-host\" data-ke-size=\"size16\">new.express.adobe.com</p>\n</div>\n</a></figure>\n</center>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b> ️ Photoroom &ndash; 전자상거래 이미지에 특화된 도구</b></span></h2>\n<p data-ke-size=\"size16\">한 소규모 전자상거래 창업자가 저에게 \"제품 사진이 전문적이지 않아서 판매에 지장이 있어요\"라고 하소연한 적이 있어요. 그때 제가 추천한 것이 바로 <b>Photoroom</b>입니다. 이 도구는 자동으로 배경을 제거하고, 전문 스튜디오에서 찍은 것처럼 깔끔한 이미지를 만들어 줘요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1389\" data-origin-height=\"848\"><span data-url=\"https://blog.kakaocdn.net/dn/sRLtM/btsL2oHS8Vf/AmHKsIyluNlh8ZYfMLN3Uk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/sRLtM/btsL2oHS8Vf/AmHKsIyluNlh8ZYfMLN3Uk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/sRLtM/btsL2oHS8Vf/AmHKsIyluNlh8ZYfMLN3Uk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FsRLtM%2FbtsL2oHS8Vf%2FAmHKsIyluNlh8ZYfMLN3Uk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1389\" height=\"848\" data-filename=\"blob\" data-origin-width=\"1389\" data-origin-height=\"848\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">  주요 기능</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>AI 배경 제거</b>: 클릭 한 번으로 배경이 사라져요</li>\n<li><b>가상 배경 생성</b>: 다양한 배경 옵션으로 제품을 돋보이게 만듭니다</li>\n<li><b>크기 자동 조정</b>: 아마존, 인스타그램 등 플랫폼 규격에 맞춰 자동 편집</li>\n</ul>\n<p data-ke-size=\"size16\"><span style=\"color: #006dd7;\"><i><b>  이런 분들께 추천해요</b></i></span></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>전자상거래 쇼핑몰 운영자</li>\n<li>SNS용 제품 이미지 제작</li>\n</ul>\n<p data-ke-size=\"size16\">⚡ <b>무료 플랜</b>도 웬만한 기능은 다 지원하지만, 고해상도 출력을 원한다면 유료 플랜을 고려해 보세요.</p>\n<center>\n<figure id=\"og_1738283860141\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"배경 제거 및 제품 사진 만들기 | Photoroom\" data-og-description=\"휴대폰만 사용하여 제품 및 인물 사진을 만들어 보세요. 배경을 제거하고, 배경을 변경하고, 제품을 선보이세요.\" data-og-host=\"www.photoroom.com\" data-og-source-url=\"https://www.photoroom.com/ko\" data-og-url=\"https://www.photoroom.com/ko\" data-og-image=\"https://scrap.kakaocdn.net/dn/cQARRU/hyX7Omx7l2/gLKeSAaMp0RwR3qWdaBTI0/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630\"><a href=\"https://www.photoroom.com/ko\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://www.photoroom.com/ko\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/cQARRU/hyX7Omx7l2/gLKeSAaMp0RwR3qWdaBTI0/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">배경 제거 및 제품 사진 만들기 | Photoroom</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">휴대폰만 사용하여 제품 및 인물 사진을 만들어 보세요. 배경을 제거하고, 배경을 변경하고, 제품을 선보이세요.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">www.photoroom.com</p>\n</div>\n</a></figure>\n</center>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b> ️ Pixlr &ndash; 빠르고 간단한 이미지 대량 편집</b></span></h2>\n<p data-ke-size=\"size16\">\"한 번에 여러 이미지를 편집할 수 있는 도구가 필요해요!\"라고 묻는 분들이 종종 있는데요, 이럴 때는 주저 없이 <b>Pixlr</b>를 권합니다. 대량의 이미지를 한꺼번에 처리할 수 있어요. 특히 여러 제품 사진을 다룰 때 큰 도움이 되죠.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1484\" data-origin-height=\"762\"><span data-url=\"https://blog.kakaocdn.net/dn/G3J4Z/btsL4znqdTF/dlTp3XU5S4QOhxKhFXzO5k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/G3J4Z/btsL4znqdTF/dlTp3XU5S4QOhxKhFXzO5k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/G3J4Z/btsL4znqdTF/dlTp3XU5S4QOhxKhFXzO5k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FG3J4Z%2FbtsL4znqdTF%2FdlTp3XU5S4QOhxKhFXzO5k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1484\" height=\"762\" data-filename=\"blob\" data-origin-width=\"1484\" data-origin-height=\"762\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">  주요 기능</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>AI 이미지 생성</b>: 원하는 스타일에 맞는 이미지를 자동으로 만들어 줍니다</li>\n<li><b>배치 편집</b>: 대량의 이미지를 동시에 편집할 수 있어요</li>\n<li><b>애니메이션 디자인</b>: 간단한 광고 배너나 GIF 제작 가능</li>\n</ul>\n<p data-ke-size=\"size16\"><span style=\"color: #006dd7;\"><i><b>  활용 팁</b></i></span></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>대량의 제품 썸네일 제작</li>\n<li>SNS용 애니메이션 광고 배너</li>\n</ul>\n<p data-ke-size=\"size16\">✅ <b>무료 버전</b>으로도 SNS 콘텐츠나 웹 이미지 제작엔 충분해요.</p>\n<center>\n<figure id=\"og_1738283924132\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"무료 온라인 AI 사진 편집기, 이미지 생성기 및 디자인 도구\" data-og-description=\"Pixlr의 온라인 사진 편집 및 디자인 도구로 창의력을 발휘하세요. AI 이미지 생성기, 배치 편집기, 애니메이션 디자인, 인핸서 등이 포함되어 있습니다. 지금 무료로 사용해 보세요!\" data-og-host=\"pixlr.com\" data-og-source-url=\"https://pixlr.com/kr/\" data-og-url=\"https://pixlr.com/\" data-og-image=\"https://scrap.kakaocdn.net/dn/8dkQz/hyX72rypln/31in0itzcvQnRyNCR71fmK/img.jpg?width=751&amp;height=383&amp;face=0_0_751_383\"><a href=\"https://pixlr.com/kr/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://pixlr.com/kr/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/8dkQz/hyX72rypln/31in0itzcvQnRyNCR71fmK/img.jpg?width=751&amp;height=383&amp;face=0_0_751_383');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">무료 온라인 AI 사진 편집기, 이미지 생성기 및 디자인 도구</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Pixlr의 온라인 사진 편집 및 디자인 도구로 창의력을 발휘하세요. AI 이미지 생성기, 배치 편집기, 애니메이션 디자인, 인핸서 등이 포함되어 있습니다. 지금 무료로 사용해 보세요!</p>\n<p class=\"og-host\" data-ke-size=\"size16\">pixlr.com</p>\n</div>\n</a></figure>\n</center>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  iPiccy &ndash; 이동 중에도 간단하게 편집</b></span></h2>\n<p data-ke-size=\"size16\">빠르고 직관적인 편집 도구가 필요할 때 <b>iPiccy</b>만큼 좋은 것도 없어요. 브라우저에서 바로 작동하니, 별도 설치도 필요 없고 이동 중에도 손쉽게 작업할 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1328\" data-origin-height=\"681\"><span data-url=\"https://blog.kakaocdn.net/dn/dKSdTS/btsL3QcbiSX/7JLJQC3HNyfTbnkBIusvYK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dKSdTS/btsL3QcbiSX/7JLJQC3HNyfTbnkBIusvYK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dKSdTS/btsL3QcbiSX/7JLJQC3HNyfTbnkBIusvYK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdKSdTS%2FbtsL3QcbiSX%2F7JLJQC3HNyfTbnkBIusvYK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1328\" height=\"681\" data-filename=\"blob\" data-origin-width=\"1328\" data-origin-height=\"681\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">  주요 기능</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>자동 보정</b>: 클릭 한 번으로 노출, 대비 등을 최적화</li>\n<li><b>크기 조정 및 회전</b>: 간단한 이미지 조정</li>\n<li><b>직관적인 UI</b>: 초보자도 쉽게 사용할 수 있어요</li>\n</ul>\n<p data-ke-size=\"size16\"><i><span style=\"color: #006dd7;\"><b>  추천 사용 사례</b></span></i></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>블로그 포스팅용 이미지 보정</li>\n<li>소셜 미디어 콘텐츠 빠른 편집</li>\n</ul>\n<p data-ke-size=\"size16\">  간단하게 사진 몇 장만 보정하고 싶다면 <b>무료 플랜</b>만으로도 충분합니다.</p>\n<center>\n<figure id=\"og_1738283996295\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"iPiccy Photo Editor is Awesome!\" data-og-description=\"Fix your photos in one click, crop, rotate, apply tons of stunning photo effects, add text and overlays and much more! It's absolutely Free and Fun to use!\" data-og-host=\"ipiccy.com\" data-og-source-url=\"https://ipiccy.com/\" data-og-url=\"https://ipiccy.com\" data-og-image=\"https://scrap.kakaocdn.net/dn/c0JKyz/hyX7SPWeUU/ruIL1JPgQbMnTqeTBO9yrk/img.jpg?width=1000&amp;height=524&amp;face=273_239_735_470,https://scrap.kakaocdn.net/dn/QCaFr/hyX7Wkzj9p/gYKPmsBh9baWCMUKiOhHyK/img.jpg?width=720&amp;height=504&amp;face=400_104_529_327,https://scrap.kakaocdn.net/dn/406I8/hyX7QScwIQ/igcTHNJUp7x6WlIR5rkiK0/img.jpg?width=720&amp;height=504&amp;face=0_0_720_504\"><a href=\"https://ipiccy.com/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://ipiccy.com/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/c0JKyz/hyX7SPWeUU/ruIL1JPgQbMnTqeTBO9yrk/img.jpg?width=1000&amp;height=524&amp;face=273_239_735_470,https://scrap.kakaocdn.net/dn/QCaFr/hyX7Wkzj9p/gYKPmsBh9baWCMUKiOhHyK/img.jpg?width=720&amp;height=504&amp;face=400_104_529_327,https://scrap.kakaocdn.net/dn/406I8/hyX7QScwIQ/igcTHNJUp7x6WlIR5rkiK0/img.jpg?width=720&amp;height=504&amp;face=0_0_720_504');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">iPiccy Photo Editor is Awesome!</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Fix your photos in one click, crop, rotate, apply tons of stunning photo effects, add text and overlays and much more! It's absolutely Free and Fun to use!</p>\n<p class=\"og-host\" data-ke-size=\"size16\">ipiccy.com</p>\n</div>\n</a></figure>\n</center>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  Canva &ndash; 템플릿과 AI 편집의 강자</b></span></h2>\n<p data-ke-size=\"size16\"><b>Canva</b>는 워낙 유명해서 따로 설명이 필요 없을 정도죠. 디자인에 익숙하지 않은 사람들도 손쉽게 멋진 결과물을 만들 수 있어요. 특히 기업 브랜딩 작업이나 소셜 미디어 콘텐츠 제작에 정말 유용합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_CANVA.jpg\" data-origin-width=\"1320\" data-origin-height=\"771\"><span data-url=\"https://blog.kakaocdn.net/dn/eqlwCQ/btsL1lkAkC2/N5VVmON2VNQlZwRvTDqCk0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/eqlwCQ/btsL1lkAkC2/N5VVmON2VNQlZwRvTDqCk0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/eqlwCQ/btsL1lkAkC2/N5VVmON2VNQlZwRvTDqCk0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FeqlwCQ%2FbtsL1lkAkC2%2FN5VVmON2VNQlZwRvTDqCk0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1320\" height=\"771\" data-filename=\"edited_CANVA.jpg\" data-origin-width=\"1320\" data-origin-height=\"771\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">  주요 기능</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>디자인 템플릿</b>: 포스터, 광고, SNS 콘텐츠 등 다양한 템플릿 제공</li>\n<li><b>매직 에디트</b>: 클릭 몇 번만으로 특정 영역을 자동 수정</li>\n<li><b>자동 보정</b>: AI가 사진 품질을 자동으로 최적화</li>\n</ul>\n<p data-ke-size=\"size16\"><span style=\"color: #006dd7;\"><i><b>  이런 분들께 추천해요</b></i></span></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>기업 마케팅 콘텐츠 제작</li>\n<li>인스타그램, 유튜브 썸네일 제작</li>\n</ul>\n<p data-ke-size=\"size16\">✅ <b>무료 플랜</b>에서도 기본적인 디자인 작업은 문제없지만, 더 전문적인 결과물을 원한다면 유료 플랜으로 업그레이드하세요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"CANVA00.jpg\" data-origin-width=\"1200\" data-origin-height=\"235\"><a href=\"https://www.canva.com/\" target=\"_blank\"><img src=\"https://blog.kakaocdn.net/dn/WPiRG/btsL2za7MkE/AUY7EzFx8LW2kgcqmOp1W0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FWPiRG%2FbtsL2za7MkE%2FAUY7EzFx8LW2kgcqmOp1W0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"500\" height=\"98\" data-filename=\"CANVA00.jpg\" data-origin-width=\"1200\" data-origin-height=\"235\"/></a></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  Google Photos &ndash; 간단한 편집과 클라우드 백업으로 사진 정리 끝!</b></span></h2>\n<p data-ke-size=\"size16\">사진이 많아지면 관리가 힘들어지기 마련이죠. 여행 사진을 찍고 나면 핸드폰에 쌓이기만 하고 정리는 뒷전... 이런 경험, 누구나 한 번쯤은 해보셨을 거예요. 그럴 때 딱 좋은 도구가 <b>Google Photos</b>입니다. 자동 백업과 간단한 편집 기능을 제공해 사진 관리가 정말 편리해요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1349\" data-origin-height=\"716\"><span data-url=\"https://blog.kakaocdn.net/dn/1ntQR/btsL18FdNrx/sQdHjOnJKFyrFarUmNvKlK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/1ntQR/btsL18FdNrx/sQdHjOnJKFyrFarUmNvKlK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/1ntQR/btsL18FdNrx/sQdHjOnJKFyrFarUmNvKlK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F1ntQR%2FbtsL18FdNrx%2FsQdHjOnJKFyrFarUmNvKlK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1349\" height=\"716\" data-filename=\"blob\" data-origin-width=\"1349\" data-origin-height=\"716\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">  주요 기능</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>기본 편집</b>: 자르기, 회전, 필터 적용까지 클릭 몇 번으로 간단히 가능해요</li>\n<li><b>자동 보정</b>: AI가 알아서 사진의 밝기와 대비를 최적 상태로 만들어 줍니다</li>\n<li><b>클라우드 저장</b>: 사진을 자동으로 백업해 기기 간 손쉽게 공유 가능</li>\n<li><b>공유 기능</b>: 링크 하나로 가족이나 친구와 바로 공유할 수 있어요</li>\n</ul>\n<p data-ke-size=\"size16\"><span style=\"color: #006dd7;\"><i>  <b>이럴 때 추천해요</b></i></span></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>여행 다녀온 후 사진을 깔끔히 정리하고 싶을 때</li>\n<li>일상에서 찍은 소소한 사진들을 손쉽게 보정하고 보관할 때</li>\n</ul>\n<p data-ke-size=\"size16\">✅ <b>무료 플랜</b>으로도 대부분의 기능을 충분히 쓸 수 있어요. 추가 저장 용량이 필요하면 유료 플랜을 고려해 보세요.</p>\n<center>\n<figure id=\"og_1738284681720\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Google Photos: Edit, Organize, Search, and Backup Your Photos\" data-og-description=\"Google&nbsp;Photos never sells your photos, videos, or personal information to anyone, and we don't use your photos and videos for advertising.\" data-og-host=\"www.google.com\" data-og-source-url=\"https://photos.google.com/\" data-og-url=\"https://www.google.com/photos/about/\" data-og-image=\"https://scrap.kakaocdn.net/dn/dblj8j/hyX7PTiQL6/Ox9JzsSKBK9GTim0xYPzkk/img.jpg?width=1200&amp;height=630&amp;face=598_433_1109_516,https://scrap.kakaocdn.net/dn/XSx94/hyX72rywwq/1gQQByLnbSbALqq6blHsB0/img.jpg?width=1200&amp;height=630&amp;face=598_433_1109_516,https://scrap.kakaocdn.net/dn/KqcMW/hyX7YJrOuo/63K3ikdGlDefHzQjbHtgqk/img.png?width=1168&amp;height=1000&amp;face=428_182_879_382\"><a href=\"https://photos.google.com/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://photos.google.com/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/dblj8j/hyX7PTiQL6/Ox9JzsSKBK9GTim0xYPzkk/img.jpg?width=1200&amp;height=630&amp;face=598_433_1109_516,https://scrap.kakaocdn.net/dn/XSx94/hyX72rywwq/1gQQByLnbSbALqq6blHsB0/img.jpg?width=1200&amp;height=630&amp;face=598_433_1109_516,https://scrap.kakaocdn.net/dn/KqcMW/hyX7YJrOuo/63K3ikdGlDefHzQjbHtgqk/img.png?width=1168&amp;height=1000&amp;face=428_182_879_382');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Google Photos: Edit, Organize, Search, and Backup Your Photos</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Google&nbsp;Photos never sells your photos, videos, or personal information to anyone, and we don't use your photos and videos for advertising.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">www.google.com</p>\n</div>\n</a></figure>\n</center>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  Picsart &ndash; 창의력을 폭발시키는 젊은 층의 인기 도구</b></span></h2>\n<p data-ke-size=\"size16\">인스타그램이나 틱톡처럼 개성을 뽐낼 수 있는 플랫폼에서는 사진 편집이 중요하죠. 이때 <b>Picsart</b>가 딱이에요! 스티커, 텍스트, 필터 등으로 나만의 독창적인 스타일을 쉽게 표현할 수 있어요. 특히 젊은 층 사이에서 인기가 많답니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1326\" data-origin-height=\"719\"><span data-url=\"https://blog.kakaocdn.net/dn/bqS5Kn/btsL3oUwqGz/jZ4tMStl6GUQ8aq6YziPWK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bqS5Kn/btsL3oUwqGz/jZ4tMStl6GUQ8aq6YziPWK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bqS5Kn/btsL3oUwqGz/jZ4tMStl6GUQ8aq6YziPWK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbqS5Kn%2FbtsL3oUwqGz%2FjZ4tMStl6GUQ8aq6YziPWK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1326\" height=\"719\" data-filename=\"blob\" data-origin-width=\"1326\" data-origin-height=\"719\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">  주요 기능</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>AI 보정</b>: 자동으로 사진의 품질을 높여 바로 SNS에 업로드 가능</li>\n<li><b>스티커와 텍스트 추가</b>: 다양한 스타일의 스티커와 글씨체로 개성 넘치는 디자인</li>\n<li><b>배경 변경</b>: 원클릭으로 배경을 원하는 스타일로 교체 가능</li>\n</ul>\n<p data-ke-size=\"size16\"><span style=\"color: #006dd7;\"><i>  <b>추천 사용 사례</b></i></span></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>인스타그램 스토리나 틱톡 영상 썸네일 제작</li>\n<li>유튜브 썸네일 디자인으로 시청자 유도</li>\n</ul>\n<p data-ke-size=\"size16\">✅ <b>무료 플랜</b>으로도 충분히 다양한 창의적 시도를 할 수 있지만, 고해상도 이미지나 광고 제거가 필요하면 유료 플랜도 고려해 보세요.</p>\n<center>\n<figure id=\"og_1738284808441\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Picsart: Free AI Design Tools\" data-og-description=\"Picsart is an all-in-one creative platform with a wide selection of free AI design tools. Create content fast with expert-crafted templates, built-in asset libraries, and generative AI tools.\" data-og-host=\"picsart.com\" data-og-source-url=\"https://picsart.com/\" data-og-url=\"https://picsart.com/\" data-og-image=\"\"><a href=\"https://picsart.com/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://picsart.com/\">\n<div class=\"og-image\" style=\"background-image: url();\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Picsart: Free AI Design Tools</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Picsart is an all-in-one creative platform with a wide selection of free AI design tools. Create content fast with expert-crafted templates, built-in asset libraries, and generative AI tools.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">picsart.com</p>\n</div>\n</a></figure>\n</center>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>마무리하며</b></span></h2>\n<p data-ke-size=\"size16\">AI 기반의 무료 이미지 편집 도구들은 이제 전문 소프트웨어 못지않은 기능을 제공합니다. 초보자든, 전문가든 각자의 필요에 따라 적합한 도구를 선택할 수 있어요. 가볍게 SNS용 이미지를 편집하고 싶으신가요? 아니면 전문적인 제품 사진이 필요하신가요? 위에서 소개한 도구들 중 하나는 분명 여러분의 요구를 충족할 겁니다.   지금 바로 시도해 보세요!</p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>Q&amp;A</b></span></h2>\n<p data-ke-size=\"size18\"><b>Q1. Adobe Express에서 무료로 제공되는 기능은?</b></p>\n<p data-ke-size=\"size18\">기본 편집 도구, 무료 템플릿, 월 25개의 생성형 AI 크레딧을 사용할 수 있습니다.</p>\n<p data-ke-size=\"size18\"><b>Q2. Photoroom은 전자상거래에 어떤 점에서 유용한가요?</b></p>\n<p data-ke-size=\"size18\">배경 제거, 가상 배경 생성, 크기 조정 기능으로 온라인 쇼핑몰에 적합한 이미지를 빠르게 제작할 수 있어요.</p>\n<p data-ke-size=\"size18\"><b>Q3. Pixlr의 배치 편집 기능은 어떤 상황에서 유용한가요?</b></p>\n<p data-ke-size=\"size18\">대량의 이미지를 동시에 편집할 수 있어 대규모 프로젝트나 제품 사진 편집 시 시간을 절약할 수 있습니다.</p>\n<p data-ke-size=\"size18\"><b>Q4. iPiccy는 어떤 사용자에게 적합한가요?</b></p>\n<p data-ke-size=\"size18\">간단한 보정이 필요하거나, 이동 중에 빠른 작업이 필요한 사용자에게 적합합니다.</p>\n<p data-ke-size=\"size18\"><b>Q5. Canva의 무료 플랜으로도 충분히 작업할 수 있나요?</b></p>\n<p data-ke-size=\"size18\">기본 템플릿과 간단한 편집 기능으로 SNS나 간단한 마케팅 콘텐츠 제작엔 충분합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><textarea style=\"display: none;\">&lt;script type=\"application/ld+json\"&gt;\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n        {\n            \"@type\": \"Question\",\n            \"name\": \"Adobe Express에서 무료로 제공되는 기능은?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"기본 편집 도구, 무료 템플릿, 월 25개의 생성형 AI 크레딧을 사용할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"Photoroom은 전자상거래에 어떤 점에서 유용한가요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"배경 제거, 가상 배경 생성, 크기 조정 기능으로 온라인 쇼핑몰에 적합한 이미지를 빠르게 제작할 수 있어요.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"Pixlr의 배치 편집 기능은 어떤 상황에서 유용한가요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"대량의 이미지를 동시에 편집할 수 있어 대규모 프로젝트나 제품 사진 편집 시 시간을 절약할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"iPiccy는 어떤 사용자에게 적합한가요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"간단한 보정이 필요하거나, 이동 중에 빠른 작업이 필요한 사용자에게 적합합니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"Canva의 무료 플랜으로도 충분히 작업할 수 있나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"기본 템플릿과 간단한 편집 기능으로 SNS나 간단한 마케팅 콘텐츠 제작엔 충분합니다.\"\n            }\n        }\n    ]\n}\n&lt;/script&gt;\n</textarea></p>",
        "contentSnippet": "사진 편집, 어렵게 생각하지 마세요! 무료 AI 도구들만으로도 소셜 미디어용 콘텐츠부터 전문적인 제품 이미지까지 손쉽게 완성할 수 있어요. 직접 써보면 놀랄 거예요!\n\n\n \n사진을 편집할 때, 특히 소셜 미디어나 블로그에 올릴 이미지를 다룰 때는 속도와 퀄리티가 중요하죠. 예전에는 포토샵 같은 전문 소프트웨어가 필수였지만, 요즘은 AI 기반의 무료 온라인 도구만으로도 충분히 훌륭한 결과물을 얻을 수 있어요. 제가 추천하고 싶은 무료 도구 몇 가지를 골라봤으니, 어떤 게 나에게 딱 맞는지 살펴보세요!\n  Adobe Express – 전문가와 초보 모두를 위한 만능 도구\n제가 상담했던 고객 중 한 분은 \"디자인에 대해 잘 모르는데, 우리 회사 홍보 포스터를 만들어야 해요\"라고 고민을 털어놨었죠. 그때 추천했던 게 바로 Adobe Express였어요. 사용법이 간단하면서도, 결과물은 정말 고퀄리티로 나옵니다. AI 기능도 탑재되어 있어 자동화된 이미지 생성까지 가능해요.\n\n\n  주요 기능\n기본 편집 툴: 간단한 사진 보정부터 소셜 미디어용 콘텐츠 제작까지 지원\n생성형 AI 크레딧: 월 25개 AI 크레딧이 무료로 제공돼서, 이미지 생성도 걱정 없어요\n100만 개 이상의 무료 에셋: 템플릿, 스톡 이미지, 음악 등 다양한 리소스 제공\n  제가 추천하는 사용 사례\n소셜 미디어 홍보 포스터 제작\n회사 브랜딩 콘텐츠 (로고, 전단지 등)\n✅ 무료 플랜으로도 충분히 쓸만하지만, 정기적으로 많은 디자인이 필요한 경우에는 유료 플랜도 고려해 볼 만해요.\n\n \nAdobe Express\n \nnew.express.adobe.com\n\n\n \n \n \n ️ Photoroom – 전자상거래 이미지에 특화된 도구\n한 소규모 전자상거래 창업자가 저에게 \"제품 사진이 전문적이지 않아서 판매에 지장이 있어요\"라고 하소연한 적이 있어요. 그때 제가 추천한 것이 바로 Photoroom입니다. 이 도구는 자동으로 배경을 제거하고, 전문 스튜디오에서 찍은 것처럼 깔끔한 이미지를 만들어 줘요.\n\n\n  주요 기능\nAI 배경 제거: 클릭 한 번으로 배경이 사라져요\n가상 배경 생성: 다양한 배경 옵션으로 제품을 돋보이게 만듭니다\n크기 자동 조정: 아마존, 인스타그램 등 플랫폼 규격에 맞춰 자동 편집\n  이런 분들께 추천해요\n전자상거래 쇼핑몰 운영자\nSNS용 제품 이미지 제작\n⚡ 무료 플랜도 웬만한 기능은 다 지원하지만, 고해상도 출력을 원한다면 유료 플랜을 고려해 보세요.\n\n \n배경 제거 및 제품 사진 만들기 | Photoroom\n휴대폰만 사용하여 제품 및 인물 사진을 만들어 보세요. 배경을 제거하고, 배경을 변경하고, 제품을 선보이세요.\nwww.photoroom.com\n\n\n \n \n \n ️ Pixlr – 빠르고 간단한 이미지 대량 편집\n\"한 번에 여러 이미지를 편집할 수 있는 도구가 필요해요!\"라고 묻는 분들이 종종 있는데요, 이럴 때는 주저 없이 Pixlr를 권합니다. 대량의 이미지를 한꺼번에 처리할 수 있어요. 특히 여러 제품 사진을 다룰 때 큰 도움이 되죠.\n\n\n  주요 기능\nAI 이미지 생성: 원하는 스타일에 맞는 이미지를 자동으로 만들어 줍니다\n배치 편집: 대량의 이미지를 동시에 편집할 수 있어요\n애니메이션 디자인: 간단한 광고 배너나 GIF 제작 가능\n  활용 팁\n대량의 제품 썸네일 제작\nSNS용 애니메이션 광고 배너\n✅ 무료 버전으로도 SNS 콘텐츠나 웹 이미지 제작엔 충분해요.\n\n \n무료 온라인 AI 사진 편집기, 이미지 생성기 및 디자인 도구\nPixlr의 온라인 사진 편집 및 디자인 도구로 창의력을 발휘하세요. AI 이미지 생성기, 배치 편집기, 애니메이션 디자인, 인핸서 등이 포함되어 있습니다. 지금 무료로 사용해 보세요!\npixlr.com\n\n\n \n \n \n  iPiccy – 이동 중에도 간단하게 편집\n빠르고 직관적인 편집 도구가 필요할 때 iPiccy만큼 좋은 것도 없어요. 브라우저에서 바로 작동하니, 별도 설치도 필요 없고 이동 중에도 손쉽게 작업할 수 있습니다.\n\n\n  주요 기능\n자동 보정: 클릭 한 번으로 노출, 대비 등을 최적화\n크기 조정 및 회전: 간단한 이미지 조정\n직관적인 UI: 초보자도 쉽게 사용할 수 있어요\n  추천 사용 사례\n블로그 포스팅용 이미지 보정\n소셜 미디어 콘텐츠 빠른 편집\n  간단하게 사진 몇 장만 보정하고 싶다면 무료 플랜만으로도 충분합니다.\n\n \niPiccy Photo Editor is Awesome!\nFix your photos in one click, crop, rotate, apply tons of stunning photo effects, add text and overlays and much more! It's absolutely Free and Fun to use!\nipiccy.com\n\n\n \n \n \n  Canva – 템플릿과 AI 편집의 강자\nCanva는 워낙 유명해서 따로 설명이 필요 없을 정도죠. 디자인에 익숙하지 않은 사람들도 손쉽게 멋진 결과물을 만들 수 있어요. 특히 기업 브랜딩 작업이나 소셜 미디어 콘텐츠 제작에 정말 유용합니다.\n\n\n  주요 기능\n디자인 템플릿: 포스터, 광고, SNS 콘텐츠 등 다양한 템플릿 제공\n매직 에디트: 클릭 몇 번만으로 특정 영역을 자동 수정\n자동 보정: AI가 사진 품질을 자동으로 최적화\n  이런 분들께 추천해요\n기업 마케팅 콘텐츠 제작\n인스타그램, 유튜브 썸네일 제작\n✅ 무료 플랜에서도 기본적인 디자인 작업은 문제없지만, 더 전문적인 결과물을 원한다면 유료 플랜으로 업그레이드하세요.\n\n\n \n \n \n  Google Photos – 간단한 편집과 클라우드 백업으로 사진 정리 끝!\n사진이 많아지면 관리가 힘들어지기 마련이죠. 여행 사진을 찍고 나면 핸드폰에 쌓이기만 하고 정리는 뒷전... 이런 경험, 누구나 한 번쯤은 해보셨을 거예요. 그럴 때 딱 좋은 도구가 Google Photos입니다. 자동 백업과 간단한 편집 기능을 제공해 사진 관리가 정말 편리해요.\n\n\n  주요 기능\n기본 편집: 자르기, 회전, 필터 적용까지 클릭 몇 번으로 간단히 가능해요\n자동 보정: AI가 알아서 사진의 밝기와 대비를 최적 상태로 만들어 줍니다\n클라우드 저장: 사진을 자동으로 백업해 기기 간 손쉽게 공유 가능\n공유 기능: 링크 하나로 가족이나 친구와 바로 공유할 수 있어요\n  이럴 때 추천해요\n여행 다녀온 후 사진을 깔끔히 정리하고 싶을 때\n일상에서 찍은 소소한 사진들을 손쉽게 보정하고 보관할 때\n✅ 무료 플랜으로도 대부분의 기능을 충분히 쓸 수 있어요. 추가 저장 용량이 필요하면 유료 플랜을 고려해 보세요.\n\n \nGoogle Photos: Edit, Organize, Search, and Backup Your Photos\nGoogle Photos never sells your photos, videos, or personal information to anyone, and we don't use your photos and videos for advertising.\nwww.google.com\n\n\n \n \n \n  Picsart – 창의력을 폭발시키는 젊은 층의 인기 도구\n인스타그램이나 틱톡처럼 개성을 뽐낼 수 있는 플랫폼에서는 사진 편집이 중요하죠. 이때 Picsart가 딱이에요! 스티커, 텍스트, 필터 등으로 나만의 독창적인 스타일을 쉽게 표현할 수 있어요. 특히 젊은 층 사이에서 인기가 많답니다.\n\n\n  주요 기능\nAI 보정: 자동으로 사진의 품질을 높여 바로 SNS에 업로드 가능\n스티커와 텍스트 추가: 다양한 스타일의 스티커와 글씨체로 개성 넘치는 디자인\n배경 변경: 원클릭으로 배경을 원하는 스타일로 교체 가능\n  추천 사용 사례\n인스타그램 스토리나 틱톡 영상 썸네일 제작\n유튜브 썸네일 디자인으로 시청자 유도\n✅ 무료 플랜으로도 충분히 다양한 창의적 시도를 할 수 있지만, 고해상도 이미지나 광고 제거가 필요하면 유료 플랜도 고려해 보세요.\n\n \nPicsart: Free AI Design Tools\nPicsart is an all-in-one creative platform with a wide selection of free AI design tools. Create content fast with expert-crafted templates, built-in asset libraries, and generative AI tools.\npicsart.com\n\n\n \n \n \n마무리하며\nAI 기반의 무료 이미지 편집 도구들은 이제 전문 소프트웨어 못지않은 기능을 제공합니다. 초보자든, 전문가든 각자의 필요에 따라 적합한 도구를 선택할 수 있어요. 가볍게 SNS용 이미지를 편집하고 싶으신가요? 아니면 전문적인 제품 사진이 필요하신가요? 위에서 소개한 도구들 중 하나는 분명 여러분의 요구를 충족할 겁니다.   지금 바로 시도해 보세요!\nQ&A\nQ1. Adobe Express에서 무료로 제공되는 기능은?\n기본 편집 도구, 무료 템플릿, 월 25개의 생성형 AI 크레딧을 사용할 수 있습니다.\nQ2. Photoroom은 전자상거래에 어떤 점에서 유용한가요?\n배경 제거, 가상 배경 생성, 크기 조정 기능으로 온라인 쇼핑몰에 적합한 이미지를 빠르게 제작할 수 있어요.\nQ3. Pixlr의 배치 편집 기능은 어떤 상황에서 유용한가요?\n대량의 이미지를 동시에 편집할 수 있어 대규모 프로젝트나 제품 사진 편집 시 시간을 절약할 수 있습니다.\nQ4. iPiccy는 어떤 사용자에게 적합한가요?\n간단한 보정이 필요하거나, 이동 중에 빠른 작업이 필요한 사용자에게 적합합니다.\nQ5. Canva의 무료 플랜으로도 충분히 작업할 수 있나요?\n기본 템플릿과 간단한 편집 기능으로 SNS나 간단한 마케팅 콘텐츠 제작엔 충분합니다.\n \n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n        {\n            \"@type\": \"Question\",\n            \"name\": \"Adobe Express에서 무료로 제공되는 기능은?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"기본 편집 도구, 무료 템플릿, 월 25개의 생성형 AI 크레딧을 사용할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"Photoroom은 전자상거래에 어떤 점에서 유용한가요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"배경 제거, 가상 배경 생성, 크기 조정 기능으로 온라인 쇼핑몰에 적합한 이미지를 빠르게 제작할 수 있어요.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"Pixlr의 배치 편집 기능은 어떤 상황에서 유용한가요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"대량의 이미지를 동시에 편집할 수 있어 대규모 프로젝트나 제품 사진 편집 시 시간을 절약할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"iPiccy는 어떤 사용자에게 적합한가요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"간단한 보정이 필요하거나, 이동 중에 빠른 작업이 필요한 사용자에게 적합합니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"Canva의 무료 플랜으로도 충분히 작업할 수 있나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"기본 템플릿과 간단한 편집 기능으로 SNS나 간단한 마케팅 콘텐츠 제작엔 충분합니다.\"\n            }\n        }\n    ]\n}\n</script>",
        "guid": "http://muzbox.tistory.com/483532",
        "categories": [
          "AI, 미래기술/이미지 생성,편집",
          "adobe express 무료 기능",
          "canva 템플릿",
          "ipiccy 리뷰",
          "photoroom 사용법",
          "pixlr 배치 편집",
          "무료 ai 사진 편집기",
          "무료 이미지 편집 도구",
          "사진 자동 보정",
          "소셜 미디어 사진 편집",
          "제품 이미지 편집"
        ],
        "isoDate": "2025-01-31T01:10:38.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "윈도우 업데이트 오류 해결방법 총정리 &ndash; 중지, 멈춤, 무한로딩까지",
        "link": "http://muzbox.tistory.com/483530",
        "pubDate": "Wed, 29 Jan 2025 15:08:21 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483530#entry483530comment",
        "content": "<p data-ke-size=\"size16\">&nbsp;윈도우 업데이트 오류 때문에 고민이신가요? 업데이트 중지, 멈춤, 무한 로딩 문제까지 해결할 수 있는 종합 가이드를 제공합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"윈도우 업데이트 오류 해결방법 총정리.jpg\" data-origin-width=\"500\" data-origin-height=\"500\"><span data-url=\"https://blog.kakaocdn.net/dn/bn9s5T/btsL2BTekML/G7RGLBTEnm3955rauacSZ0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bn9s5T/btsL2BTekML/G7RGLBTEnm3955rauacSZ0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bn9s5T/btsL2BTekML/G7RGLBTEnm3955rauacSZ0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbn9s5T%2FbtsL2BTekML%2FG7RGLBTEnm3955rauacSZ0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"윈도우 업데이트 오류 해결방법 총정리 &ndash; 중지, 멈춤, 무한로딩까지\" loading=\"lazy\" width=\"500\" height=\"500\" data-filename=\"윈도우 업데이트 오류 해결방법 총정리.jpg\" data-origin-width=\"500\" data-origin-height=\"500\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;윈도우 업데이트는 시스템의 보안과 성능을 유지하는 데 필수적이지만, 예상치 못한 오류로 인해 사용자를 당황하게 만들기도 해요. 업데이트가 중간에 멈추거나, 무한 로딩 화면에서 빠져나오지 못하는 경우가 많죠. 저도 몇 번 이런 문제를 겪으면서 다양한 해결 방법을 시도해 봤는데, 다행히 효과적인 방법을 찾을 수 있었어요. 오늘은 <b>윈도우 업데이트 오류 해결 방법</b>을 단계별로 알려드릴게요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>윈도우 업데이트 오류의 주요 원인</b></span></h2>\n<p data-ke-size=\"size16\">윈도우 업데이트 오류가 발생하는 원인은 다양하지만, 대표적인 원인은 다음과 같아요.</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>인터넷 연결 문제</b> &ndash; 업데이트 도중 네트워크가 불안정하면 중단될 수 있어요.</li>\n<li><b>디스크 공간 부족</b> &ndash; 업데이트를 설치할 충분한 공간이 필요해요.</li>\n<li><b>손상된 시스템 파일</b> &ndash; 윈도우 파일이 손상되면 업데이트가 실패할 수 있어요.</li>\n<li><b>백그라운드 프로세스 충돌</b> &ndash; 백그라운드에서 실행 중인 프로그램이 업데이트를 방해할 수 있어요.</li>\n<li><b>보안 소프트웨어 간섭</b> &ndash; 바이러스 백신이 업데이트를 차단할 수도 있어요.</li>\n</ol>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>윈도우 업데이트 오류 해결 방법  </b></span></h2>\n<p data-ke-size=\"size16\">윈도우 업데이트가 멈추거나 중지될 경우, 다음 단계를 차례로 따라 해보세요.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">1. 기본적인 확인 사항 체크 ✅</span></h3>\n<p data-ke-size=\"size16\">가장 먼저 확인해야 할 사항은 다음과 같아요.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>인터넷 연결 상태 확인:</b> 유선 연결 또는 Wi-Fi 재설정</li>\n<li><b>디스크 공간 확보:</b> C 드라이브 여유 공간 20GB 이상 확보</li>\n<li><b>PC 재부팅:</b> 간단한 재부팅만으로 해결될 수도 있어요.</li>\n</ul>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">2. 윈도우 업데이트 문제 해결사 실행  ️</span></h3>\n<p data-ke-size=\"size16\">윈도우에는 자체적으로 제공하는 문제 해결 도구가 있어요.</p>\n<p data-ke-size=\"size16\"><b>방법:</b></p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>[설정] &rarr; [업데이트 및 보안] &rarr; [문제 해결] &rarr; [추가 문제 해결사]</b></li>\n<li><b>&lsquo;Windows 업데이트 문제 해결사 실행&rsquo;</b> 클릭</li>\n<li>문제를 자동으로 감지하고 수정해 줍니다.</li>\n</ol>\n<p data-ke-size=\"size16\">  <b>Tip:</b> 업데이트 문제 해결사를 실행한 후 반드시 PC를 다시 시작하세요.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">3. 업데이트 임시 파일 삭제  </span></h3>\n<p data-ke-size=\"size16\">손상된 업데이트 파일이 남아 있다면 오류가 반복될 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>방법:</b></p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>Win + R</b> 키를 누르고 <code>services.msc</code> 입력 후 실행</li>\n<li>'Windows Update' 서비스를 중지</li>\n<li><code>C:\\Windows\\SoftwareDistribution</code> 폴더로 이동 후 모든 파일 삭제</li>\n<li>'Windows Update' 서비스를 다시 시작</li>\n</ol>\n<p data-ke-size=\"size16\"><b>이 작업을 통해 새롭게 업데이트 파일을 다운로드할 수 있습니다.</b></p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">4. 명령 프롬프트를 통한 수동 해결 방법  </span></h3>\n<p data-ke-size=\"size16\">CMD(명령 프롬프트)를 사용해 시스템 파일을 복구하고, 업데이트 문제를 해결할 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>방법:</b></p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>검색창에 &lsquo;CMD&rsquo;를 입력한 후 관리자 권한으로 실행</b></li>\n<li>다음 명령어 입력 후 Enter&nbsp;</li>\n<li class=\"jboss-cli\"><code>sfc /scannow</code></li>\n<li>복구가 완료되면 아래 명령어도 실행\n<pre class=\"jboss-cli\"><code>dism /online /cleanup-image /restorehealth</code></pre>\n</li>\n<li>완료 후 시스템을 재부팅하고 업데이트를 다시 시도</li>\n</ol>\n<p data-ke-size=\"size16\"><b>이 방법은 시스템 파일 손상 문제를 해결하는 데 효과적이에요.</b></p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">5. 수동으로 업데이트 파일 다운로드  </span></h3>\n<p data-ke-size=\"size16\">마이크로소프트 업데이트 카탈로그를 이용하면 특정 업데이트를 직접 다운로드할 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>방법:</b></p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><a href=\"https://www.catalog.update.microsoft.com/\">Microsoft 업데이트 카탈로그</a> 방문</li>\n<li>해당 업데이트 코드(KB번호)를 검색</li>\n<li>OS에 맞는 업데이트 파일을 다운로드 후 실행</li>\n</ol>\n<p data-ke-size=\"size16\">  <b>Tip:</b> 최신 업데이트 KB번호는 윈도우 업데이트 설정에서 확인할 수 있어요.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">6. Windows Update 서비스 재설정  </span></h3>\n<p data-ke-size=\"size16\">업데이트 서비스 자체에 문제가 있다면 재설정을 진행해 보세요.</p>\n<p data-ke-size=\"size16\"><b>방법:</b></p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li>CMD(명령 프롬프트)를 관리자 권한으로 실행</li>\n<li>아래 명령어를 차례로 입력\n<pre class=\"arduino\"><code>net stop wuauserv\nnet stop bits\nnet stop cryptsvc\nnet stop msiserver</code></pre>\n</li>\n<li>업데이트 폴더 삭제\n<pre class=\"taggerscript\"><code>ren C:\\Windows\\SoftwareDistribution SoftwareDistribution.old\nren C:\\Windows\\System32\\catroot2 catroot2.old</code></pre>\n</li>\n<li>서비스를 다시 시작\n<pre class=\"dos\"><code>net start wuauserv\nnet start bits\nnet start cryptsvc\nnet start msiserver</code></pre>\n</li>\n</ol>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">7. 백신 및 방화벽 일시 중지  ️</span></h3>\n<p data-ke-size=\"size16\">일부 백신 소프트웨어가 업데이트를 차단할 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>방법:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>백신 프로그램을 일시적으로 비활성화 후 업데이트 시도</li>\n<li>윈도우 방화벽 설정에서 <code>Windows Update</code>가 차단되지 않았는지 확인</li>\n</ul>\n<p data-ke-size=\"size16\">⚠️ <b>주의:</b> 보안이 중요한 만큼, 업데이트 후 반드시 다시 활성화하세요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"722\"><span data-url=\"https://blog.kakaocdn.net/dn/CCK6k/btsL1gwjHsp/qHUW2DP8znWhKNkBtiBMuk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/CCK6k/btsL1gwjHsp/qHUW2DP8znWhKNkBtiBMuk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/CCK6k/btsL1gwjHsp/qHUW2DP8znWhKNkBtiBMuk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FCCK6k%2FbtsL1gwjHsp%2FqHUW2DP8znWhKNkBtiBMuk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"윈도우 업데이트 오류 유형별 해결 방법\" loading=\"lazy\" width=\"700\" height=\"395\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"722\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b><span style=\"color: #009a87;\">업데이트 오류 유형별 해결 방법</span></b></h2>\n<p data-ke-size=\"size16\">다양한 오류 코드가 나타날 수 있는데, 주요 오류별 해결 방법을 정리해 봤어요.</p>\n<table style=\"border-collapse: collapse; text-align: center;\" border=\"1\" cellspacing=\"0\" cellpadding=\"10\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr style=\"background-color: #f2f2f2; font-weight: bold;\">\n<th>오류 코드</th>\n<th>해결 방법</th>\n</tr>\n<tr>\n<td>0x80070002</td>\n<td>업데이트 파일 삭제 후 다시 시도</td>\n</tr>\n<tr>\n<td>0x8024a105</td>\n<td>인터넷 연결 점검 및 문제 해결사 실행</td>\n</tr>\n<tr>\n<td>0x80070020</td>\n<td>백신 비활성화 후 재시도</td>\n</tr>\n<tr>\n<td>0x800f0922</td>\n<td>시스템 파일 검사 및 복구 시도</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>마무리하며</b></span></h2>\n<p data-ke-size=\"size16\">윈도우 업데이트 오류는 누구에게나 발생할 수 있는 문제지만, 올바른 방법을 알면 쉽게 해결할 수 있어요. 위의 방법들을 하나씩 적용해 보면서 해결할 수 있을 거예요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">혹시 여전히 해결이 안 된다면, 최신 윈도우 업데이트 정보를 확인하거나 전문가의 도움을 받아보세요.</p>\n<p data-ke-size=\"size16\"><b>여러분은 윈도우 업데이트 오류를 어떻게 해결하셨나요? 댓글로 경험을 공유해 주세요!</b></p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>Q&amp;A 섹션</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q1. 윈도우 업데이트가 무한 로딩될 때 어떻게 해야 하나요?</b><br />  강제 종료 후 안전 모드에서 업데이트 파일을 삭제하고 다시 시도해 보세요.</p>\n<p data-ke-size=\"size16\"><b>Q2. 업데이트 도중 멈추는 문제를 해결하려면?</b><br />  인터넷 연결 상태를 확인하고, 문제 해결사를 실행해 보세요.</p>\n<p data-ke-size=\"size16\"><b>Q3. 업데이트 후 PC가 느려졌어요. 어떻게 해야 하나요?</b><br />  불필요한 백그라운드 프로그램을 정리하고, 디스크 정리를 실행하세요.</p>\n<p data-ke-size=\"size16\"><b>Q4. 업데이트를 수동으로 설치할 수 있나요?</b><br />  네, 마이크로소프트 업데이트 카탈로그에서 수동 다운로드가 가능합니다.</p>\n<p data-ke-size=\"size16\"><b>Q5. 업데이트 후 블루스크린이 발생하면 어떻게 해야 하나요?</b><br />  최근 설치한 업데이트를 제거하고, 복원 지점을 이용해 되돌려 보세요.</p>\n<p><textarea style=\"display: none;\">&lt;script type=\"application/ld+json\"&gt;\n  {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n      {\n        \"@type\": \"Question\",\n        \"name\": \"윈도우 업데이트가 무한 로딩될 때 어떻게 해야 하나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  강제 종료 후 안전 모드에서 업데이트 파일을 삭제하고 다시 시도해 보세요.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"업데이트 도중 멈추는 문제를 해결하려면?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  인터넷 연결 상태를 확인하고, 문제 해결사를 실행해 보세요.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"업데이트 후 PC가 느려졌어요. 어떻게 해야 하나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  불필요한 백그라운드 프로그램을 정리하고, 디스크 정리를 실행하세요.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"업데이트를 수동으로 설치할 수 있나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  네, 마이크로소프트 업데이트 카탈로그에서 수동 다운로드가 가능합니다.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"업데이트 후 블루스크린이 발생하면 어떻게 해야 하나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  최근 설치한 업데이트를 제거하고, 복원 지점을 이용해 되돌려 보세요.\"\n        }\n      }\n    ]\n  }\n&lt;/script&gt;\n</textarea></p>",
        "contentSnippet": "윈도우 업데이트 오류 때문에 고민이신가요? 업데이트 중지, 멈춤, 무한 로딩 문제까지 해결할 수 있는 종합 가이드를 제공합니다.\n\n\n \n 윈도우 업데이트는 시스템의 보안과 성능을 유지하는 데 필수적이지만, 예상치 못한 오류로 인해 사용자를 당황하게 만들기도 해요. 업데이트가 중간에 멈추거나, 무한 로딩 화면에서 빠져나오지 못하는 경우가 많죠. 저도 몇 번 이런 문제를 겪으면서 다양한 해결 방법을 시도해 봤는데, 다행히 효과적인 방법을 찾을 수 있었어요. 오늘은 윈도우 업데이트 오류 해결 방법을 단계별로 알려드릴게요.\n \n \n윈도우 업데이트 오류의 주요 원인\n윈도우 업데이트 오류가 발생하는 원인은 다양하지만, 대표적인 원인은 다음과 같아요.\n인터넷 연결 문제 – 업데이트 도중 네트워크가 불안정하면 중단될 수 있어요.\n디스크 공간 부족 – 업데이트를 설치할 충분한 공간이 필요해요.\n손상된 시스템 파일 – 윈도우 파일이 손상되면 업데이트가 실패할 수 있어요.\n백그라운드 프로세스 충돌 – 백그라운드에서 실행 중인 프로그램이 업데이트를 방해할 수 있어요.\n보안 소프트웨어 간섭 – 바이러스 백신이 업데이트를 차단할 수도 있어요.\n \n윈도우 업데이트 오류 해결 방법  \n윈도우 업데이트가 멈추거나 중지될 경우, 다음 단계를 차례로 따라 해보세요.\n1. 기본적인 확인 사항 체크 ✅\n가장 먼저 확인해야 할 사항은 다음과 같아요.\n인터넷 연결 상태 확인: 유선 연결 또는 Wi-Fi 재설정\n디스크 공간 확보: C 드라이브 여유 공간 20GB 이상 확보\nPC 재부팅: 간단한 재부팅만으로 해결될 수도 있어요.\n2. 윈도우 업데이트 문제 해결사 실행  ️\n윈도우에는 자체적으로 제공하는 문제 해결 도구가 있어요.\n방법:\n[설정] → [업데이트 및 보안] → [문제 해결] → [추가 문제 해결사]\n‘Windows 업데이트 문제 해결사 실행’ 클릭\n문제를 자동으로 감지하고 수정해 줍니다.\n  Tip: 업데이트 문제 해결사를 실행한 후 반드시 PC를 다시 시작하세요.\n3. 업데이트 임시 파일 삭제  \n손상된 업데이트 파일이 남아 있다면 오류가 반복될 수 있어요.\n방법:\nWin + R 키를 누르고 services.msc 입력 후 실행\n'Windows Update' 서비스를 중지\nC:\\Windows\\SoftwareDistribution 폴더로 이동 후 모든 파일 삭제\n'Windows Update' 서비스를 다시 시작\n이 작업을 통해 새롭게 업데이트 파일을 다운로드할 수 있습니다.\n4. 명령 프롬프트를 통한 수동 해결 방법  \nCMD(명령 프롬프트)를 사용해 시스템 파일을 복구하고, 업데이트 문제를 해결할 수 있어요.\n방법:\n검색창에 ‘CMD’를 입력한 후 관리자 권한으로 실행\n다음 명령어 입력 후 Enter \nsfc /scannow\n복구가 완료되면 아래 명령어도 실행\ndism /online /cleanup-image /restorehealth\n완료 후 시스템을 재부팅하고 업데이트를 다시 시도\n이 방법은 시스템 파일 손상 문제를 해결하는 데 효과적이에요.\n5. 수동으로 업데이트 파일 다운로드  \n마이크로소프트 업데이트 카탈로그를 이용하면 특정 업데이트를 직접 다운로드할 수 있어요.\n방법:\nMicrosoft 업데이트 카탈로그 방문\n해당 업데이트 코드(KB번호)를 검색\nOS에 맞는 업데이트 파일을 다운로드 후 실행\n  Tip: 최신 업데이트 KB번호는 윈도우 업데이트 설정에서 확인할 수 있어요.\n6. Windows Update 서비스 재설정  \n업데이트 서비스 자체에 문제가 있다면 재설정을 진행해 보세요.\n방법:\nCMD(명령 프롬프트)를 관리자 권한으로 실행\n아래 명령어를 차례로 입력\nnet stop wuauserv\nnet stop bits\nnet stop cryptsvc\nnet stop msiserver\n업데이트 폴더 삭제\nren C:\\Windows\\SoftwareDistribution SoftwareDistribution.old\nren C:\\Windows\\System32\\catroot2 catroot2.old\n서비스를 다시 시작\nnet start wuauserv\nnet start bits\nnet start cryptsvc\nnet start msiserver\n7. 백신 및 방화벽 일시 중지  ️\n일부 백신 소프트웨어가 업데이트를 차단할 수 있어요.\n방법:\n백신 프로그램을 일시적으로 비활성화 후 업데이트 시도\n윈도우 방화벽 설정에서 Windows Update가 차단되지 않았는지 확인\n⚠️ 주의: 보안이 중요한 만큼, 업데이트 후 반드시 다시 활성화하세요.\n \n\n\n \n업데이트 오류 유형별 해결 방법\n다양한 오류 코드가 나타날 수 있는데, 주요 오류별 해결 방법을 정리해 봤어요.\n오류 코드\n해결 방법\n\n\n0x80070002\n업데이트 파일 삭제 후 다시 시도\n\n\n0x8024a105\n인터넷 연결 점검 및 문제 해결사 실행\n\n\n0x80070020\n백신 비활성화 후 재시도\n\n\n0x800f0922\n시스템 파일 검사 및 복구 시도\n\n\n\n \n \n마무리하며\n윈도우 업데이트 오류는 누구에게나 발생할 수 있는 문제지만, 올바른 방법을 알면 쉽게 해결할 수 있어요. 위의 방법들을 하나씩 적용해 보면서 해결할 수 있을 거예요.\n \n혹시 여전히 해결이 안 된다면, 최신 윈도우 업데이트 정보를 확인하거나 전문가의 도움을 받아보세요.\n여러분은 윈도우 업데이트 오류를 어떻게 해결하셨나요? 댓글로 경험을 공유해 주세요!\nQ&A 섹션\nQ1. 윈도우 업데이트가 무한 로딩될 때 어떻게 해야 하나요?\n  강제 종료 후 안전 모드에서 업데이트 파일을 삭제하고 다시 시도해 보세요.\nQ2. 업데이트 도중 멈추는 문제를 해결하려면?\n  인터넷 연결 상태를 확인하고, 문제 해결사를 실행해 보세요.\nQ3. 업데이트 후 PC가 느려졌어요. 어떻게 해야 하나요?\n  불필요한 백그라운드 프로그램을 정리하고, 디스크 정리를 실행하세요.\nQ4. 업데이트를 수동으로 설치할 수 있나요?\n  네, 마이크로소프트 업데이트 카탈로그에서 수동 다운로드가 가능합니다.\nQ5. 업데이트 후 블루스크린이 발생하면 어떻게 해야 하나요?\n  최근 설치한 업데이트를 제거하고, 복원 지점을 이용해 되돌려 보세요.\n<script type=\"application/ld+json\">\n  {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n      {\n        \"@type\": \"Question\",\n        \"name\": \"윈도우 업데이트가 무한 로딩될 때 어떻게 해야 하나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  강제 종료 후 안전 모드에서 업데이트 파일을 삭제하고 다시 시도해 보세요.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"업데이트 도중 멈추는 문제를 해결하려면?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  인터넷 연결 상태를 확인하고, 문제 해결사를 실행해 보세요.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"업데이트 후 PC가 느려졌어요. 어떻게 해야 하나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  불필요한 백그라운드 프로그램을 정리하고, 디스크 정리를 실행하세요.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"업데이트를 수동으로 설치할 수 있나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  네, 마이크로소프트 업데이트 카탈로그에서 수동 다운로드가 가능합니다.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"업데이트 후 블루스크린이 발생하면 어떻게 해야 하나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"  최근 설치한 업데이트를 제거하고, 복원 지점을 이용해 되돌려 보세요.\"\n        }\n      }\n    ]\n  }\n</script>",
        "guid": "http://muzbox.tistory.com/483530",
        "categories": [
          "윈도우 사용팁/윈도우11 사용법",
          "도우 업데이트 오류 해결방법",
          "무한로딩",
          "문제 해결사 실행",
          "시스템 파일 복구",
          "업데이트 멈춤",
          "업데이트 문제 해결",
          "업데이트 실패",
          "윈도우 업데이트 안됨",
          "윈도우 업데이트 중지",
          "윈도우 업데이트 팁"
        ],
        "isoDate": "2025-01-29T06:08:21.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "넷플릭스 비밀 코드 공개! 영화 탐색이 쉬워지는 장르별 코드",
        "link": "http://muzbox.tistory.com/483531",
        "pubDate": "Mon, 27 Jan 2025 14:06:12 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483531#entry483531comment",
        "content": "<p data-ke-size=\"size16\">넷플릭스 비밀 코드를 사용하면 원하는 장르의 영화를 빠르게 검색할 수 있습니다. 액션, 코미디, 드라마 등 숨겨진 넷플릭스 카테고리를 쉽게 찾는 방법을 알아보세요!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"722\"><span data-url=\"https://blog.kakaocdn.net/dn/qDywA/btsL3kRuATM/mBYHpEKZZi035JVqJ0k7Nk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/qDywA/btsL3kRuATM/mBYHpEKZZi035JVqJ0k7Nk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/qDywA/btsL3kRuATM/mBYHpEKZZi035JVqJ0k7Nk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FqDywA%2FbtsL3kRuATM%2FmBYHpEKZZi035JVqJ0k7Nk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"넷플릭스 비밀 코드 공개! 영화 탐색이 쉬워지는 장르멸 코드\" loading=\"lazy\" width=\"700\" height=\"395\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"722\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">넷플릭스를 켤 때마다 \"뭘 봐야 할지 모르겠다\"는 고민을 하신 적 있으신가요? 넷플릭스의 방대한 콘텐츠 라이브러리 속에서 나에게 딱 맞는 작품을 찾기란 쉬운 일이 아닙니다. 그렇다고 마냥 추천 콘텐츠만 보기엔 아쉬움이 남기 마련이죠.</p>\n<p data-ke-size=\"size16\">이럴 때 유용한 것이 바로 <b>\"넷플릭스 비밀 코드\"</b>입니다. 이 코드들은 넷플릭스의 숨겨진 콘텐츠를 빠르게 찾아볼 수 있도록 해주는 도구로, 장르별로 특정 코드가 부여되어 있습니다. 이를 통해 일반적인 검색창에서는 보이지 않는 콘텐츠까지 쉽게 찾을 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">오늘은 넷플릭스 비밀 코드의 개념부터 활용 방법, 그리고 인기 있는 장르 코드 리스트까지 모두 알려드릴게요!  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>넷플릭스 비밀 코드란?  </b></span></h2>\n<p data-ke-size=\"size16\">넷플릭스는 사용자의 시청 패턴을 분석해 맞춤형 콘텐츠를 제공하지만, 여전히 많은 장르가 검색에 노출되지 않습니다. 넷플릭스의 <b>비밀 장르 코드(Secret Netflix Codes)</b>는 특정 장르나 테마에 맞춘 콘텐츠를 한눈에 볼 수 있도록 해주는 숫자 코드입니다.</p>\n<p data-ke-size=\"size16\">이 코드를 사용하면 평소 알고 있던 범위를 벗어나 다양한 장르를 빠르게 탐색할 수 있습니다. 예를 들어, 넷플릭스에는 \"액션 코미디\"라는 장르가 숨겨져 있으며, 이를 <b>코드 43040</b>을 통해 직접 접속할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">비밀 코드의 장점 ✅</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>정확한 장르 탐색:</b> 원하는 특정 장르로 바로 이동 가능</li>\n<li><b>새로운 콘텐츠 발견:</b> 추천 시스템이 놓친 숨겨진 보석 찾기</li>\n<li><b>시간 절약:</b> 긴 검색 시간 없이 몇 초 만에 원하는 작품 도달</li>\n<li><b>모든 디바이스에서 활용 가능:</b> PC, 스마트폰 브라우저에서 적용 가능</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>넷플릭스 비밀 코드 활용 방법  </b></span></h2>\n<p data-ke-size=\"size16\">넷플릭스 비밀 코드를 사용하는 방법은 간단합니다. 아래의 절차를 따르면 누구나 쉽게 원하는 콘텐츠를 검색할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">1. 넷플릭스 접속</span></h3>\n<p data-ke-size=\"size16\">먼저, <a href=\"https://www.netflix.com/\">넷플릭스 공식 웹사이트</a>에 접속하세요. 모바일 앱에서는 직접 코드 검색이 어렵기 때문에 브라우저에서 검색하는 것이 좋습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">2. 검색 URL 구성</span></h3>\n<p data-ke-size=\"size16\">코드를 입력하는 URL 형식은 다음과 같습니다.</p>\n<pre class=\"vim\"><code>https://www.netflix.com/browse/genre/코드번호</code></pre>\n<p data-ke-size=\"size16\">예를 들어, **로맨틱 코미디(코드: 5475)**를 검색하고 싶다면 다음과 같이 입력하세요:</p>\n<pre class=\"vim\"><code>https://www.netflix.com/browse/genre/5475</code></pre>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">3. 북마크 활용</span></h3>\n<p data-ke-size=\"size16\">자주 찾는 장르의 코드를 <b>브라우저 북마크</b>에 추가하면 빠르게 다시 접속할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">4. 모바일에서 활용하기</span></h3>\n<p data-ke-size=\"size16\">모바일 사용자는 코드를 직접 입력할 수 없으므로, PC에서 검색 후 '내 리스트'에 추가하는 방법을 추천합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>인기 넷플릭스 비밀 코드 모음  </b></span></h2>\n<p data-ke-size=\"size16\">넷플릭스의 수많은 콘텐츠를 보다 쉽게 탐색할 수 있도록 대표적인 장르별 코드를 정리했습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">  액션 &amp; 어드벤처</span></h3>\n<table style=\"border-collapse: collapse; width: 100%; border: 1px solid black;\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr style=\"background-color: #e50914; color: white;\">\n<th style=\"border: 1px solid black; padding: 10px;\">장르</th>\n<th style=\"border: 1px solid black; padding: 10px;\">코드</th>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">액션 코미디</td>\n<td style=\"border: 1px solid black; padding: 10px;\">43040</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">스파이 액션</td>\n<td style=\"border: 1px solid black; padding: 10px;\">10702</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">무술 영화</td>\n<td style=\"border: 1px solid black; padding: 10px;\">8985</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">서부 영화</td>\n<td style=\"border: 1px solid black; padding: 10px;\">7700</td>\n</tr>\n</tbody>\n</table>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">  드라마</span></h3>\n<table style=\"border-collapse: collapse; width: 100%; border: 1px solid black;\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr style=\"background-color: #e50914; color: white;\">\n<th style=\"border: 1px solid black; padding: 10px;\">장르</th>\n<th style=\"border: 1px solid black; padding: 10px;\">코드</th>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">실화 기반 드라마</td>\n<td style=\"border: 1px solid black; padding: 10px;\">3653</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">법정 드라마</td>\n<td style=\"border: 1px solid black; padding: 10px;\">2748</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">정치 드라마</td>\n<td style=\"border: 1px solid black; padding: 10px;\">6616</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">전쟁 드라마</td>\n<td style=\"border: 1px solid black; padding: 10px;\">11</td>\n</tr>\n</tbody>\n</table>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">  애니메이션</span></h3>\n<table style=\"border-collapse: collapse; width: 100%; border: 1px solid black;\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr style=\"background-color: #e50914; color: white;\">\n<th style=\"border: 1px solid black; padding: 10px;\">장르</th>\n<th style=\"border: 1px solid black; padding: 10px;\">코드</th>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">판타지 애니메이션</td>\n<td style=\"border: 1px solid black; padding: 10px;\">11146</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">공포 애니메이션</td>\n<td style=\"border: 1px solid black; padding: 10px;\">10695</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid black; padding: 10px;\">드라마 애니메이션</td>\n<td style=\"border: 1px solid black; padding: 10px;\">452</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\"><br />더 많은 코드를 보려면 본문아래 첨부된 <span style=\"color: #006dd7;\"><b>넷플릭스 장르 코드 PDF</b> </span>를 확인해보세요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>넷플릭스 비밀 코드 활용 꿀팁  </b></span></h2>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>기분에 맞는 영화 찾기</b>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>웃고 싶다면? &rarr; 코미디(6548)</li>\n<li>긴장감을 느끼고 싶다면? &rarr; 스릴러(8933)</li>\n</ul>\n</li>\n<li><b>테마별 저녁 영화 선택</b>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>가족과 함께라면 &rarr; 디즈니(67673)</li>\n<li>친구와 함께라면 &rarr; 스포츠 코미디(5286)</li>\n</ul>\n</li>\n<li><b>다양한 국가별 영화 탐색</b>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>프랑스 영화 &rarr; 58807</li>\n<li>한국 영화 &rarr; 5685</li>\n<li>일본 영화 &rarr; 10398</li>\n</ul>\n</li>\n</ol>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>넷플릭스 비밀 코드 한글 번역본 배포  </b></span></h2>\n<p data-ke-size=\"size16\">넷플릭스의 비밀 장르 코드를 더욱 쉽게 활용할 수 있도록 <b>한글 번역본 코드집</b>을 함께 배포합니다. 이 코드집에는 주요 장르의 한글 설명과 코드 번호가 정리되어 있어, 누구나 쉽게 원하는 콘텐츠를 찾을 수 있습니다.  </p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">한글 번역본 코드집의 특징:</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>모든 코드 한눈에 보기:</b> 넷플릭스의 다양한 장르를 한글로 쉽게 확인 가능</li>\n<li><b>카테고리별 정리:</b> 액션, 코미디, 드라마 등 주요 장르별로 코드 정리</li>\n<li><b>사용 방법 가이드 포함:</b> 초보자도 쉽게 따라할 수 있도록 단계별 설명 제공</li>\n<li><b>모바일 및 PC 최적화:</b> PDF 형식으로 제공되어 모든 디바이스에서 편리하게 사용 가능</li>\n</ul>\n<p data-ke-size=\"size16\">이제 넷플릭스의 방대한 콘텐츠를 더욱 쉽게 검색하고, 가족 및 친구들과 원하는 영화를 더 빠르게 찾을 수 있습니다. 한글 코드집은 본 블로그에서 무료로 다운로드하실 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">  넷플릭스 비밀 코드 PDF 한글 번역본 다운로드</span></h3>\n<p data-ke-size=\"size16\">넷플릭스를 더 스마트하게 즐길 준비가 되셨나요? 지금 바로 한글 코드집을 활용해 보세요!  </p>\n<script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8195497734535830\"\n     crossorigin=\"anonymous\"></script>\n<ins class=\"adsbygoogle\"\n     style=\"display:block; text-align:center;\"\n     data-ad-layout=\"in-article\"\n     data-ad-format=\"fluid\"\n     data-ad-client=\"ca-pub-8195497734535830\"\n     data-ad-slot=\"1494233468\"></ins>\n<script>\n     (adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n<p><figure class=\"fileblock\" data-ke-align=\"alignCenter\"><a href=\"https://blog.kakaocdn.net/dn/dhoExi/btsL1dGMBcK/CRZrk5hKRuK7Lb7EO1H7Qk/Secret%20Netflix%20Codes.zip?attach=1&amp;knm=tfile.zip\" class=\"\">\n    <div class=\"image\"></div>\n    <div class=\"desc\"><div class=\"filename\"><span class=\"name\">Secret Netflix Codes.zip</span></div>\n<div class=\"size\">0.25MB</div>\n</div>\n  </a></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>마치며  </b></span></h2>\n<p data-ke-size=\"size16\">넷플릭스의 숨겨진 장르 코드를 활용하면, 보다 세분화된 검색이 가능하며, 나에게 딱 맞는 콘텐츠를 쉽게 찾을 수 있습니다. 넷플릭스를 더 효율적으로 사용하고 싶다면, 비밀 코드를 활용해 보세요!  </p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>Q&amp;A</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q1. 넷플릭스 비밀 코드는 공식적으로 제공되나요?</b><br />A1. 넷플릭스가 공식적으로 발표한 정보는 아니지만, 넷플릭스 내부 카테고리를 통해 확인할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q2. 모바일 앱에서도 비밀 코드를 사용할 수 있나요?</b><br />A2. 직접 검색은 불가능하지만, PC에서 찾은 후 '내 리스트'에 추가하여 시청할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q3. 코드가 유효하지 않으면 어떻게 하나요?</b><br />A3. 넷플릭스는 일부 코드를 변경하거나 삭제할 수 있으므로 최신 코드를 확인해야 합니다.</p>\n<p><textarea style=\"display: none;\">&lt;script type=\"application/ld+json\"&gt;\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n        {\n            \"@type\": \"Question\",\n            \"name\": \"넷플릭스 비밀 코드는 공식적으로 제공되나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"넷플릭스가 공식적으로 발표한 정보는 아니지만, 넷플릭스 내부 카테고리를 통해 확인할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"모바일 앱에서도 비밀 코드를 사용할 수 있나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"직접 검색은 불가능하지만, PC에서 찾은 후 '내 리스트'에 추가하여 시청할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"코드가 유효하지 않으면 어떻게 하나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"넷플릭스는 일부 코드를 변경하거나 삭제할 수 있으므로 최신 코드를 확인해야 합니다.\"\n            }\n        }\n    ]\n}\n&lt;/script&gt;\n</textarea></p>",
        "contentSnippet": "넷플릭스 비밀 코드를 사용하면 원하는 장르의 영화를 빠르게 검색할 수 있습니다. 액션, 코미디, 드라마 등 숨겨진 넷플릭스 카테고리를 쉽게 찾는 방법을 알아보세요!\n\n\n \n넷플릭스를 켤 때마다 \"뭘 봐야 할지 모르겠다\"는 고민을 하신 적 있으신가요? 넷플릭스의 방대한 콘텐츠 라이브러리 속에서 나에게 딱 맞는 작품을 찾기란 쉬운 일이 아닙니다. 그렇다고 마냥 추천 콘텐츠만 보기엔 아쉬움이 남기 마련이죠.\n이럴 때 유용한 것이 바로 \"넷플릭스 비밀 코드\"입니다. 이 코드들은 넷플릭스의 숨겨진 콘텐츠를 빠르게 찾아볼 수 있도록 해주는 도구로, 장르별로 특정 코드가 부여되어 있습니다. 이를 통해 일반적인 검색창에서는 보이지 않는 콘텐츠까지 쉽게 찾을 수 있습니다.\n \n오늘은 넷플릭스 비밀 코드의 개념부터 활용 방법, 그리고 인기 있는 장르 코드 리스트까지 모두 알려드릴게요!  \n \n \n넷플릭스 비밀 코드란?  \n넷플릭스는 사용자의 시청 패턴을 분석해 맞춤형 콘텐츠를 제공하지만, 여전히 많은 장르가 검색에 노출되지 않습니다. 넷플릭스의 비밀 장르 코드(Secret Netflix Codes)는 특정 장르나 테마에 맞춘 콘텐츠를 한눈에 볼 수 있도록 해주는 숫자 코드입니다.\n이 코드를 사용하면 평소 알고 있던 범위를 벗어나 다양한 장르를 빠르게 탐색할 수 있습니다. 예를 들어, 넷플릭스에는 \"액션 코미디\"라는 장르가 숨겨져 있으며, 이를 코드 43040을 통해 직접 접속할 수 있습니다.\n비밀 코드의 장점 ✅\n정확한 장르 탐색: 원하는 특정 장르로 바로 이동 가능\n새로운 콘텐츠 발견: 추천 시스템이 놓친 숨겨진 보석 찾기\n시간 절약: 긴 검색 시간 없이 몇 초 만에 원하는 작품 도달\n모든 디바이스에서 활용 가능: PC, 스마트폰 브라우저에서 적용 가능\n \n넷플릭스 비밀 코드 활용 방법  \n넷플릭스 비밀 코드를 사용하는 방법은 간단합니다. 아래의 절차를 따르면 누구나 쉽게 원하는 콘텐츠를 검색할 수 있습니다.\n1. 넷플릭스 접속\n먼저, 넷플릭스 공식 웹사이트에 접속하세요. 모바일 앱에서는 직접 코드 검색이 어렵기 때문에 브라우저에서 검색하는 것이 좋습니다.\n2. 검색 URL 구성\n코드를 입력하는 URL 형식은 다음과 같습니다.\nhttps://www.netflix.com/browse/genre/코드번호\n예를 들어, **로맨틱 코미디(코드: 5475)**를 검색하고 싶다면 다음과 같이 입력하세요:\nhttps://www.netflix.com/browse/genre/5475\n3. 북마크 활용\n자주 찾는 장르의 코드를 브라우저 북마크에 추가하면 빠르게 다시 접속할 수 있습니다.\n4. 모바일에서 활용하기\n모바일 사용자는 코드를 직접 입력할 수 없으므로, PC에서 검색 후 '내 리스트'에 추가하는 방법을 추천합니다.\n \n \n인기 넷플릭스 비밀 코드 모음  \n넷플릭스의 수많은 콘텐츠를 보다 쉽게 탐색할 수 있도록 대표적인 장르별 코드를 정리했습니다.\n  액션 & 어드벤처\n장르\n코드\n\n\n액션 코미디\n43040\n\n\n스파이 액션\n10702\n\n\n무술 영화\n8985\n\n\n서부 영화\n7700\n\n\n\n  드라마\n장르\n코드\n\n\n실화 기반 드라마\n3653\n\n\n법정 드라마\n2748\n\n\n정치 드라마\n6616\n\n\n전쟁 드라마\n11\n\n\n\n  애니메이션\n장르\n코드\n\n\n판타지 애니메이션\n11146\n\n\n공포 애니메이션\n10695\n\n\n드라마 애니메이션\n452\n\n\n\n\n더 많은 코드를 보려면 본문아래 첨부된 넷플릭스 장르 코드 PDF 를 확인해보세요.\n \n \n \n넷플릭스 비밀 코드 활용 꿀팁  \n기분에 맞는 영화 찾기\n\n웃고 싶다면? → 코미디(6548)\n긴장감을 느끼고 싶다면? → 스릴러(8933)\n테마별 저녁 영화 선택\n\n가족과 함께라면 → 디즈니(67673)\n친구와 함께라면 → 스포츠 코미디(5286)\n다양한 국가별 영화 탐색\n\n프랑스 영화 → 58807\n한국 영화 → 5685\n일본 영화 → 10398\n \n넷플릭스 비밀 코드 한글 번역본 배포  \n넷플릭스의 비밀 장르 코드를 더욱 쉽게 활용할 수 있도록 한글 번역본 코드집을 함께 배포합니다. 이 코드집에는 주요 장르의 한글 설명과 코드 번호가 정리되어 있어, 누구나 쉽게 원하는 콘텐츠를 찾을 수 있습니다.  \n한글 번역본 코드집의 특징:\n모든 코드 한눈에 보기: 넷플릭스의 다양한 장르를 한글로 쉽게 확인 가능\n카테고리별 정리: 액션, 코미디, 드라마 등 주요 장르별로 코드 정리\n사용 방법 가이드 포함: 초보자도 쉽게 따라할 수 있도록 단계별 설명 제공\n모바일 및 PC 최적화: PDF 형식으로 제공되어 모든 디바이스에서 편리하게 사용 가능\n이제 넷플릭스의 방대한 콘텐츠를 더욱 쉽게 검색하고, 가족 및 친구들과 원하는 영화를 더 빠르게 찾을 수 있습니다. 한글 코드집은 본 블로그에서 무료로 다운로드하실 수 있습니다.\n  넷플릭스 비밀 코드 PDF 한글 번역본 다운로드\n넷플릭스를 더 스마트하게 즐길 준비가 되셨나요? 지금 바로 한글 코드집을 활용해 보세요!  \n\n\n\n     (adsbygoogle = window.adsbygoogle || []).push({});\n\n\n    \n\n    \nSecret Netflix Codes.zip\n0.25MB\n\n\n \n \n마치며  \n넷플릭스의 숨겨진 장르 코드를 활용하면, 보다 세분화된 검색이 가능하며, 나에게 딱 맞는 콘텐츠를 쉽게 찾을 수 있습니다. 넷플릭스를 더 효율적으로 사용하고 싶다면, 비밀 코드를 활용해 보세요!  \nQ&A\nQ1. 넷플릭스 비밀 코드는 공식적으로 제공되나요?\nA1. 넷플릭스가 공식적으로 발표한 정보는 아니지만, 넷플릭스 내부 카테고리를 통해 확인할 수 있습니다.\nQ2. 모바일 앱에서도 비밀 코드를 사용할 수 있나요?\nA2. 직접 검색은 불가능하지만, PC에서 찾은 후 '내 리스트'에 추가하여 시청할 수 있습니다.\nQ3. 코드가 유효하지 않으면 어떻게 하나요?\nA3. 넷플릭스는 일부 코드를 변경하거나 삭제할 수 있으므로 최신 코드를 확인해야 합니다.\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n        {\n            \"@type\": \"Question\",\n            \"name\": \"넷플릭스 비밀 코드는 공식적으로 제공되나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"넷플릭스가 공식적으로 발표한 정보는 아니지만, 넷플릭스 내부 카테고리를 통해 확인할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"모바일 앱에서도 비밀 코드를 사용할 수 있나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"직접 검색은 불가능하지만, PC에서 찾은 후 '내 리스트'에 추가하여 시청할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"코드가 유효하지 않으면 어떻게 하나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"넷플릭스는 일부 코드를 변경하거나 삭제할 수 있으므로 최신 코드를 확인해야 합니다.\"\n            }\n        }\n    ]\n}\n</script>",
        "guid": "http://muzbox.tistory.com/483531",
        "categories": [
          "유튜브,넷플릭스 사용법/넷플릭스 (netflix) 사용법",
          "넷플릭스 비밀 코드",
          "넷플릭스 숨겨진 콘텐츠",
          "넷플릭스 장르 코드",
          "넷플릭스 팁",
          "넷플릭스 활용법",
          "드라마 추천",
          "스트리밍 서비스",
          "영화 추천",
          "장르별 영화",
          "코드 검색"
        ],
        "isoDate": "2025-01-27T05:06:12.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": []
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "일상적인 흐름에 GitHub Copilot을 통합하기",
        "link": "https://jacking75.github.io/tech-ai_20250130/",
        "pubDate": "Thu, 30 Jan 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vTRaonZGyD8XldEn62vVAvnT9JeE3OELQ9T9exGJSvanf0LB5Fsr36RxiQseNrUz7cSVKGZA7UkTSqk/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/tech-ai_20250130/",
        "isoDate": "2025-01-29T15:00:00.000Z"
      },
      {
        "title": "코드 이해도 향상. Visual Studio 2022 17.11의 GitHub Copilot 기능",
        "link": "https://jacking75.github.io/tech-ai_20250128/",
        "pubDate": "Tue, 28 Jan 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vTbc2NJZOevZNIO1LtDsuKcrDgtjgeJC0JcmASGwAGdb0WiuGjL0tVh1KJLKdLWnKWgb1OdeFcMhHke/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/tech-ai_20250128/",
        "isoDate": "2025-01-27T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": [
      {
        "title": "dbt + BigQuery 데이터 모델링",
        "link": "https://zzsza.github.io/data-engineering/2025/01/30/dbt-with-bigquery/",
        "pubDate": "Thu, 30 Jan 2025 00:00:00 +0000",
        "content": "<ul>\n  <li>이 글은 BigQuery 환경에서 dbt 사용법에 대해 작성한 글입니다</li>\n  <li>예상 독자\n    <ul>\n      <li>BigQuery에서 dbt를 사용하는 방법에 궁금하신 분</li>\n      <li>앞선 <a href=\"https://zzsza.github.io/data-engineering/2025/01/16/dbt-core/\">dbt 사용법과 기본 개념</a> 글을 읽으신 분</li>\n    </ul>\n  </li>\n  <li>키워드 : dbt BigQuery, \bdbt modeling</li>\n</ul>\n\n<h1 id=\"dbt--bigquery를-위한-환경-설정\">dbt + BigQuery를 위한 환경 설정</h1>\n<h2 id=\"dbt-bigquery-설치\">dbt bigquery 설치</h2>\n<ul>\n  <li>dbt-core는 설치했다고 가정하고 dbt-bigquery를 설치</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pip3 install dbt-bigquery\n</code></pre></div></div>\n\n<h2 id=\"dbt-init\">dbt init</h2>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>dbt init newyork_taxi\n</code></pre></div></div>\n\n<ul>\n  <li>위 명령어를 입력하면 DB를 선택하는 부분이 나옴. BigQuery로 설정</li>\n  <li>만약 Runtime Error(No adapters available)이 발생하면 위에 dbt-bigquery를 설치해야 함(DB와 연결하는 라이브러리가 설치되어 있지 않다는 의미)</li>\n  <li>권한 설정을 어떻게 할지 물어보는 질문도 있는데, oauth와 service_account가 존재\n    <ul>\n      <li>여기선 oauth로 진행. 로컬 개발할 때는 oauth도 추천</li>\n      <li>회사였으면 service_account로 설정\n        <ul>\n          <li>dbt로 만든 것을 주기적으로 실행할 때는 service_account를 발급해서 GitHub Actions나 Airflow에 설정해줘야 하지만, 지금은 로컬 개발에 집중</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>프로젝트 ID, 데이터셋, threads, timeout seconds, region을 입력</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/l3z0nnihd0at0dc/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202025-01-26%20%EC%98%A4%ED%9B%84%203.31.57.png?raw=1\" /></p>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">~/.dbt/profiles.yml</code>을 확인하면, 방금 입력한 내용을 확인할 수 있음</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>cat ~/.dbt/profiles.yml\n</code></pre></div></div>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>newyork_taxi:\n  outputs:\n    dev:\n      dataset: newyork_taxi\n      job_execution_timeout_seconds: 300\n      job_retries: 1\n      location: US\n      method: oauth\n      priority: interactive\n      project: zzsza-github-io\n      threads: 4\n      type: bigquery\n  target: dev\n</code></pre></div></div>\n\n<ul>\n  <li>프로필 파일을 dbt 작업 프로젝트로 옮기려면 아래 명령어 실행(홈 디렉토리 안에 프로필 파일이 있는데, 회사에서 작업한다면 이런 프로필을 GitHub Repository에 넣고 Push)\n    <ul>\n      <li>dbt_project.yml : 프로젝트 설정 파일. 프로젝트 구조, 리소스 설정, 변수 등</li>\n      <li>profiles.yml : 프로필 설정 파일. 데이터베이스 연결 정보 등이 저장됨</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>cp ~/.dbt/profiles.yml .\n</code></pre></div></div>\n\n<h2 id=\"gcloud를-사용해-oauth\">gcloud를 사용해 oauth</h2>\n<ul>\n  <li>터미널에서 아래 명령어 입력(gcloud 사전에 설치되어야 함)\n    <ul>\n      <li>gcloud 설치 방법은 <a href=\"https://cloud.google.com/sdk/docs/install?hl=ko\">Docs</a> 참고</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>gcloud auth application-default login \\\n  --scopes=https://www.googleapis.com/auth/bigquery,\\\nhttps://www.googleapis.com/auth/drive.readonly,\\\nhttps://www.googleapis.com/auth/iam.test\n</code></pre></div></div>\n\n<h2 id=\"dbt-run\">dbt run</h2>\n<ul>\n  <li>샘플 모델을 실행\n    <ul>\n      <li><code class=\"language-plaintext highlighter-rouge\">models/example</code> 폴더에 있는 my_first_dbt_model.sql, my_second_dbt_model.sql가 실행됨</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>dbt run\n</code></pre></div></div>\n\n<ul>\n  <li>실행하면 BigQuery에 새로운 테이블, 뷰가 추가됨</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/bonyocty35xbjw4/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202025-01-26%20%EC%98%A4%ED%9B%84%203.43.00.png?raw=1\" /></p>\n\n<h2 id=\"dbt-utils-설정\">dbt utils 설정</h2>\n<ul>\n  <li>dbt_utils는 dbt에서 유용하게 사용할 수 있는 macro와 Test를 모아둔 패키지</li>\n  <li>packages.yml 파일에 dbt_utils 패키지를 추가(이 파일이 없다면 생성하고 추가하면 됨)</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>packages:\n  - package: dbt-labs/dbt_utils\n    version: 1.3.0\n</code></pre></div></div>\n\n<ul>\n  <li>그 후, <code class=\"language-plaintext highlighter-rouge\">dbt deps</code>를 실행해 디펜던시를 설치함</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h1 id=\"사용할-데이터\">사용할 데이터</h1>\n<ul>\n  <li>BigQuery의 Public Data인 뉴욕 택시 데이터인 tlc_green_trips_2022 테이블을 사용</li>\n  <li>Source 데이터 설정\n    <ul>\n      <li><code class=\"language-plaintext highlighter-rouge\">models/sources.yml</code>에 소스 데이터를 설정해서, dbt 모델링을 할 때 사용할 수 있음</li>\n      <li>BigQuery Public 데이터인 <code class=\"language-plaintext highlighter-rouge\">tlc_green_trips_2022</code>을 사용할 예정이나, 이 테이블은 파티션 설정이 되어있지 않아 전체를 복사한 후 파티션을 설정할 예정</li>\n    </ul>\n  </li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/ehfmj0lyxo8y36w/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202025-01-26%20%EC%98%A4%ED%9B%84%204.22.05.png?raw=1\" /></p>\n\n<h2 id=\"tlc_green_trips_2022-테이블-파티션-설정\">tlc_green_trips_2022 테이블 파티션 설정</h2>\n<ul>\n  <li>아래 쿼리를 실행해 Public이 아닌 자신의 프로젝트의 데이터셋에 저장</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>CREATE OR REPLACE TABLE newyork_taxi.tlc_green_trips_2022\nPARTITION BY DATE(pickup_datetime)\nCLUSTER BY pickup_location_id, dropoff_location_id\nAS\nSELECT *\nFROM bigquery-public-data.new_york_taxi_trips.tlc_green_trips_2022;\n</code></pre></div></div>\n\n<h2 id=\"테이블-정보-저장\">테이블 정보 저장</h2>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">models/sources.yml</code>에 다음과 같이 저장\n    <ul>\n      <li>처음에 헷갈릴 수 있는 부분은, database, schema, tables 개념인데 핵심만 정리하면 다음과 같음\n        <ul>\n          <li>database는 구글 클라우드 프로젝트 ID</li>\n          <li>schema는 빅쿼리 데이터셋</li>\n          <li>tables의 name은 테이블 이름</li>\n        </ul>\n      </li>\n      <li>tests 부분은 임의로 추가함. 실제로 잘 통과되는 test도 있고, 통과되지 않을 test도 존재</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>version: 2\n\nsources:\n  - name: ny_taxi # dbt에서 사용할 이름\n    database: zzsza-github-io # 구글 클라우드 프로젝트 ID\n    schema: newyork_taxi # 빅쿼리 데이터셋 이름\n    description: \"뉴욕 택시 운행 데이터의 파티션된 버전\"\n    \n    tables:\n      - name: tlc_green_trips_2022 # 빅쿼리 테이블 이름\n        description: \"녹색 택시(Green Taxi)의 운행 기록 데이터. 일자별로 파티션되어 있음\"\n        \n        loaded_at_field: pickup_datetime\n\n        columns:\n          - name: vendor_id\n            description: \"택시 제공업체 식별자\"\n            tests:\n              - not_null\n              - accepted_values:\n                  values: ['1', '2']\n\n          - name: pickup_datetime\n            description: \"승객 탑승 시간\"\n            tests:\n              - not_null\n\n          - name: dropoff_datetime\n            description: \"승객 하차 시간\"\n            tests:\n              - not_null\n              - dbt_utils.expression_is_true:\n                  expression: \"dropoff_datetime &gt;= pickup_datetime\"\n\n          - name: store_and_fwd_flag\n            description: \"저장 후 전송 여부 (Y/N)\"\n            tests:\n              - accepted_values:\n                  values: ['Y', 'N']\n\n          - name: rate_code\n            description: &gt;\n              요금 코드. 운행 유형에 따른 요금 체계를 나타냅니다:\n              1.0 = 표준 요금 (Standard rate): 일반적인 시내 운행\n              2.0 = JFK 공항 (JFK Airport): 고정 요금이 적용되는 JFK 공항행\n              3.0 = Newark 공항 (Newark Airport): Newark 공항 운행\n              4.0 = Nassau 또는 Westchester: 교외 지역 운행\n              5.0 = 협상 요금 (Negotiated fare): 사전에 합의된 요금\n              6.0 = 그룹 승차 (Group ride): 합승 요금\n            tests:\n              - not_null\n              - accepted_values:\n                  values: [1.0, 2.0, 3.0, 4.0, 5.0, 6.0]\n\n          - name: passenger_count\n            description: \"승객 수\"\n\n          - name: trip_distance\n            description: \"주행 거리 (마일)\"\n            tests:\n              - not_null\n              - dbt_utils.expression_is_true:\n                  expression: \"trip_distance &gt;= 0\"\n\n          - name: fare_amount\n            description: \"기본 요금\"\n            tests:\n              - not_null\n\n          - name: extra\n            description: \"추가 요금\"\n            tests:\n              - not_null\n\n          - name: mta_tax\n            description: \"MTA 세금\"\n            tests:\n              - not_null\n\n          - name: tip_amount\n            description: \"팁\"\n            tests:\n              - not_null\n\n          - name: tolls_amount\n            description: \"통행료\"\n            tests:\n              - not_null\n\n          - name: ehail_fee\n            description: \"전자 호출 수수료\"\n\n          - name: airport_fee\n            description: \"공항 수수료\"\n\n          - name: total_amount\n            description: \"총 금액\"\n            tests:\n              - not_null\n              - dbt_utils.expression_is_true:\n                  expression: \"total_amount &gt;= 0\"\n\n          - name: payment_type\n            description: &gt;\n              결제 방식을 나타내는 코드:\n              1.0 = 신용카드 (Credit card): 카드 결제\n              2.0 = 현금 (Cash): 현금 결제\n              3.0 = 무료 운행 (No charge): 요금이 부과되지 않는 운행\n              4.0 = 분쟁 (Dispute): 요금 관련 분쟁이 있는 경우\n              5.0 = 알 수 없음 (Unknown): 결제 방식이 불분명한 경우\n              6.0 = 취소된 운행 (Voided trip): 운행이 취소된 경우\n            tests:\n              - not_null\n              - accepted_values:\n                  values: [1.0, 2.0, 3.0, 4.0, 5.0, 6.0]\n\n          - name: trip_type\n            description: \"운행 유형\"\n            tests:\n              - not_null\n\n          - name: imp_surcharge\n            description: \"개선 부과금\"\n            tests:\n              - not_null\n\n          - name: pickup_location_id\n            description: \"승차 위치 ID\"\n            tests:\n              - not_null\n\n          - name: dropoff_location_id\n            description: \"하차 위치 ID\"\n            tests:\n              - not_null\n\n          - name: data_file_year\n            description: \"데이터 파일의 연도\"\n            tests:차\n              - not_null\n\n          - name: data_file_month\n            description: \"데이터 파일의 월\"\n            tests:\n              - not_null\n\n        # 테이블 수준의 테스트\n        tests:\n          - dbt_utils.expression_is_true:\n              expression: &gt;\n                fare_amount + COALESCE(extra, 0) + COALESCE(mta_tax, 0) + \n                COALESCE(tip_amount, 0) + COALESCE(tolls_amount, 0) + \n                COALESCE(imp_surcharge, 0) &lt;= total_amount\n              severity: warn\n</code></pre></div></div>\n\n<p><br />\n<br /></p>\n\n<h1 id=\"모델링\">모델링</h1>\n<ul>\n  <li>locationId 별로 집계하는 간단한 모델을 만들 예정</li>\n</ul>\n\n<h2 id=\"차원dimension-모델링\">차원(dimension) 모델링</h2>\n<ul>\n  <li>pickup_location_id의 특정 차원을 저장</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">models/dimensions/dim_locations.sql</code></li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n{{ config( materialized='table', cluster_by=['location_id'] ) }}\n\nSELECT DISTINCT\n    pickup_location_id AS location_id,\n    -- 위치의 고유한 특성을 정의\n    CASE \n        WHEN pickup_location_id IN (\"1\", \"2\") THEN 'airport'  -- 공항 위치 ID\n        WHEN pickup_location_id BETWEEN \"100\" AND \"200\" THEN 'manhattan'\n        ELSE 'outer_borough'\n    END AS borough_type,\n    case\n        WHEN pickup_location_id IN (\"1\", \"2\") THEN 'restricted'\n        ELSE 'general'\n    END AS service_area_type\nfrom {{ source('ny_taxi', 'tlc_green_trips_2022') }}\n\n\n</code></pre></div></div>\n\n<h2 id=\"팩트fact-모델링\">팩트(fact) 모델링</h2>\n<ul>\n  <li>팩트 테이블은 비즈니스에서 발생하는 이벤트나 트랜잭션을 기록하는 테이블\n    <ul>\n      <li>한 번의 택시 운행과 관련된 정보를 저장함</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n-- models/facts/fact_trips.sql\n{{ config(\n    materialized='incremental',\n    partition_by={\n        \"field\": \"pickup_datetime\",\n        \"data_type\": \"timestamp\",\n        \"granularity\": \"day\"\n    },\n    cluster_by=['pickup_location_id', 'dropoff_location_id']\n) }}\n\nselect\n    -- 운행 식별 정보\n    \n        concat(\n        vendor_id, '_',\n        cast(pickup_datetime as string), '_',\n        cast(pickup_location_id as string)\n    ) as trip_id,\n    vendor_id,\n    \n    -- 시간 관련 측정값\n    pickup_datetime,\n    dropoff_datetime,\n    TIMESTAMP_DIFF(dropoff_datetime, pickup_datetime, MINUTE) as duration_minutes,    \n    -- 위치 관련 측정값\n    pickup_location_id,\n    dropoff_location_id,\n    trip_distance,\n    \n    -- 승객 정보\n    passenger_count,\n    trip_type,\n    rate_code,\n    store_and_fwd_flag,\n    \n    -- 요금 관련 측정값\n    fare_amount,\n    extra,\n    mta_tax,\n    tip_amount,\n    tolls_amount,\n    ehail_fee,\n    airport_fee,\n    imp_surcharge,\n    total_amount,\n    payment_type,\n    \n    -- 성과 지표 계산\n    case \n        when fare_amount &gt; 0 then tip_amount / fare_amount \n        else 0 \n    end as tip_ratio,\n    \n    case \n        when TIMESTAMP_DIFF(dropoff_datetime, pickup_datetime, MINUTE) &gt; 0 \n        then total_amount / TIMESTAMP_DIFF(dropoff_datetime, pickup_datetime, MINUTE)\n        else 0 \n    end as revenue_per_minute,\n    \n    -- 파일 정보\n    data_file_year,\n    data_file_month\n\nfrom {{ source('ny_taxi', 'tlc_green_trips_2022') }}\n\n{% if is_incremental() %}\nwhere pickup_datetime &gt; (select max(pickup_datetime) from {{ this }})\n{% endif %}\n\n</code></pre></div></div>\n\n<h2 id=\"마트mart-모델링\">마트(mart) 모델링</h2>\n<ul>\n  <li>마트 테이블 : 특정 기준으로 집계한 데이터\n    <ul>\n      <li>예 : 일자별, 지역별 운행 통계</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n-- models/marts/mart_location_patterns.sql\n{{\n    config(\n        materialized='incremental',\n        partition_by={\n            \"field\": \"data_file_month\",\n            \"data_type\": \"int64\",\n            \"granularity\": \"month\",\n            \"range\": {\n              \"start\": 1,\n              \"end\": 12,\n              \"interval\": 1\n            }\n        },\n        cluster_by=\"location_id,borough_type\"\n    )\n}}\n\nselect\n    f.data_file_year,\n    f.data_file_month,\n    date_trunc(f.pickup_datetime, day) as pickup_date, \n    l.location_id,\n    l.borough_type,\n    l.service_area_type,\n    count(distinct f.trip_id) as total_trips,  -- 고유 trip_id 개수\n    avg(f.fare_amount) as avg_fare,\n    avg(case when f.rate_code = '2.0' then 1 else 0 end) as airport_trip_ratio\nfrom {{ ref('fact_trips') }} f\njoin {{ ref('dim_locations') }} l\n    on f.pickup_location_id = l.location_id\n{% if is_incremental() %}\n  where f.data_file_month &gt;= (select max(data_file_month) from {{ this }})\n{% endif %}\ngroup by\n    f.data_file_year,\n    f.data_file_month,\n    pickup_date,\n    l.location_id,\n    l.borough_type,\n    l.service_area_type\n\n</code></pre></div></div>\n\n<h2 id=\"모델-실행\">모델 실행</h2>\n<ul>\n  <li>mart_location_patterns과 앞선 의존성을 모두 실행\n    <ul>\n      <li>실행하면 빅쿼리 테이블이 생성됨</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>dbt run --select +mart_location_patterns\n</code></pre></div></div>\n\n<p><img src=\"https://www.dropbox.com/s/jg80np6bvebj2m9/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202025-01-30%20%EC%98%A4%ED%9B%84%2010.19.18.png?raw=1\" /></p>\n\n<h2 id=\"모델-컴파일-확인\">모델 컴파일 확인</h2>\n<ul>\n  <li>만약 모델 실행 전에, 컴파일을 통해 확인하고 싶다면 아래 명령어로 가능함\n    <ul>\n      <li>컴파일 : 실제 실행 가능한 SQL로 변환하는 명령어</li>\n      <li>변환된 SQL만 생성함</li>\n      <li>생성된 SQL은 <code class=\"language-plaintext highlighter-rouge\">target/compiled/{project_name}/models/</code> 에 저장됨</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>dbt compile --models mart_location_patterns\n</code></pre></div></div>\n\n<h2 id=\"dbt-run을-실행할-때-오류가-발생한다면\">dbt run을 실행할 때, 오류가 발생한다면</h2>\n<ul>\n  <li>컴파일 후 나오는 쿼리문을 BigQuery Console에서 실행 =&gt; 오류가 생기면 쿼리가 실행되지 않을 것</li>\n  <li>다 수정했는데도 안된다면 dbt run을 하면서 생성하는 옵션에서 이슈가 있을 수 있음\n    <ul>\n      <li><code class=\"language-plaintext highlighter-rouge\">logs/dbt.log</code>에서 보면 실행될 시점의 쿼리문을 볼 수 있음</li>\n      <li>이 쿼리를 보면서 왜 이런 코드가 실행되는지 확인하면 됨</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h1 id=\"dbt-docs-생성\">dbt docs 생성</h1>\n<ul>\n  <li>dbt 문서를 생성하는 명령어는 크게 2단계로 진행\n    <ul>\n      <li>generate</li>\n      <li>serve</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>dbt docs generate\ndbt docs serve\n</code></pre></div></div>\n\n<ul>\n  <li>localhost:8080에서 확인할 수 있음</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/krvv1s1i5gyle6k/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202025-01-30%20%EC%98%A4%ED%9B%84%2010.21.45.png?raw=1\" /></p>\n\n<ul>\n  <li>그리고 우측 아래의 View Lineage Graph를 클릭하면 리니지 형태를 볼 수 있음</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/r5nw0sxf3qf8chd/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202025-01-30%20%EC%98%A4%ED%9B%84%2010.23.39.png?raw=1\" /></p>\n\n<p><br />\n<br /></p>\n\n<h1 id=\"모델-test\">모델 Test</h1>\n<ul>\n  <li>dbt test는 sources.yml과 schema.yml에 정의된 테스트를 실행함\n    <ul>\n      <li>sources.yml : source의 테이블과 컬럼에 대한 테스트</li>\n      <li>schema.yml : 모델의 테이블과 컬럼에 대한 테스트</li>\n      <li>여기선 sources.yml에 정의된 테스트를 실행함</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>dbt test\n</code></pre></div></div>\n\n<ul>\n  <li>명령어를 실행하면, 통과되지 못한 Test가 나옴. 이 Test를 수정하면 됨</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/m9m5y2rzb88lfrq/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202025-01-30%20%EC%98%A4%ED%9B%84%2010.24.57.png?raw=1\" /></p>\n\n<p><br />\n<br /></p>\n\n<h1 id=\"정리\">정리</h1>\n<ul>\n  <li>dbt + bigquery를 연결해 마트 모델링을 진행\n    <ul>\n      <li>dbt run model</li>\n      <li>dbt compile : SQL로 컴파일</li>\n    </ul>\n  </li>\n  <li>의존성을 설치하고 싶을 땐\n    <ul>\n      <li>dbt deps</li>\n    </ul>\n  </li>\n  <li>dbt docs는 generate와 serve를 사용\n    <ul>\n      <li>dbt docs generate</li>\n      <li>dbt docs serve</li>\n    </ul>\n  </li>\n  <li>테스트는 test\n    <ul>\n      <li>dbt test</li>\n    </ul>\n  </li>\n  <li>모델링을 어떻게 하는지는 별도로 글을 작성할 예정. 이 글에선 dbt + bigquery를 사용하는 방법을 주로 다룸</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<hr />\n\n<ul>\n  <li>글 작성하는데 걸린 시간 : 3시간 47분\n    <ul>\n      <li>하고자 하는 이야기, 개요 정리 : 32분</li>\n      <li>초안 글 작성 : 3시간 15분</li>\n    </ul>\n  </li>\n</ul>\n",
        "contentSnippet": "이 글은 BigQuery 환경에서 dbt 사용법에 대해 작성한 글입니다\n예상 독자\n    \nBigQuery에서 dbt를 사용하는 방법에 궁금하신 분\n앞선 dbt 사용법과 기본 개념 글을 읽으신 분\n키워드 : dbt BigQuery, \bdbt modeling\ndbt + BigQuery를 위한 환경 설정\ndbt bigquery 설치\ndbt-core는 설치했다고 가정하고 dbt-bigquery를 설치\n\npip3 install dbt-bigquery\n\n\ndbt init\n\ndbt init newyork_taxi\n\n\n위 명령어를 입력하면 DB를 선택하는 부분이 나옴. BigQuery로 설정\n만약 Runtime Error(No adapters available)이 발생하면 위에 dbt-bigquery를 설치해야 함(DB와 연결하는 라이브러리가 설치되어 있지 않다는 의미)\n권한 설정을 어떻게 할지 물어보는 질문도 있는데, oauth와 service_account가 존재\n    \n여기선 oauth로 진행. 로컬 개발할 때는 oauth도 추천\n회사였으면 service_account로 설정\n        \ndbt로 만든 것을 주기적으로 실행할 때는 service_account를 발급해서 GitHub Actions나 Airflow에 설정해줘야 하지만, 지금은 로컬 개발에 집중\n프로젝트 ID, 데이터셋, threads, timeout seconds, region을 입력\n\n~/.dbt/profiles.yml을 확인하면, 방금 입력한 내용을 확인할 수 있음\n\ncat ~/.dbt/profiles.yml\n\n\n\nnewyork_taxi:\n  outputs:\n    dev:\n      dataset: newyork_taxi\n      job_execution_timeout_seconds: 300\n      job_retries: 1\n      location: US\n      method: oauth\n      priority: interactive\n      project: zzsza-github-io\n      threads: 4\n      type: bigquery\n  target: dev\n\n\n프로필 파일을 dbt 작업 프로젝트로 옮기려면 아래 명령어 실행(홈 디렉토리 안에 프로필 파일이 있는데, 회사에서 작업한다면 이런 프로필을 GitHub Repository에 넣고 Push)\n    \ndbt_project.yml : 프로젝트 설정 파일. 프로젝트 구조, 리소스 설정, 변수 등\nprofiles.yml : 프로필 설정 파일. 데이터베이스 연결 정보 등이 저장됨\n\ncp ~/.dbt/profiles.yml .\n\n\ngcloud를 사용해 oauth\n터미널에서 아래 명령어 입력(gcloud 사전에 설치되어야 함)\n    \ngcloud 설치 방법은 Docs 참고\n\ngcloud auth application-default login \\\n  --scopes=https://www.googleapis.com/auth/bigquery,\\\nhttps://www.googleapis.com/auth/drive.readonly,\\\nhttps://www.googleapis.com/auth/iam.test\n\n\ndbt run\n샘플 모델을 실행\n    \nmodels/example 폴더에 있는 my_first_dbt_model.sql, my_second_dbt_model.sql가 실행됨\n\ndbt run\n\n\n실행하면 BigQuery에 새로운 테이블, 뷰가 추가됨\n\ndbt utils 설정\ndbt_utils는 dbt에서 유용하게 사용할 수 있는 macro와 Test를 모아둔 패키지\npackages.yml 파일에 dbt_utils 패키지를 추가(이 파일이 없다면 생성하고 추가하면 됨)\n\npackages:\n  - package: dbt-labs/dbt_utils\n    version: 1.3.0\n\n\n그 후, dbt deps를 실행해 디펜던시를 설치함\n\n\n사용할 데이터\nBigQuery의 Public Data인 뉴욕 택시 데이터인 tlc_green_trips_2022 테이블을 사용\nSource 데이터 설정\n    \nmodels/sources.yml에 소스 데이터를 설정해서, dbt 모델링을 할 때 사용할 수 있음\nBigQuery Public 데이터인 tlc_green_trips_2022을 사용할 예정이나, 이 테이블은 파티션 설정이 되어있지 않아 전체를 복사한 후 파티션을 설정할 예정\n\ntlc_green_trips_2022 테이블 파티션 설정\n아래 쿼리를 실행해 Public이 아닌 자신의 프로젝트의 데이터셋에 저장\n\nCREATE OR REPLACE TABLE newyork_taxi.tlc_green_trips_2022\nPARTITION BY DATE(pickup_datetime)\nCLUSTER BY pickup_location_id, dropoff_location_id\nAS\nSELECT *\nFROM bigquery-public-data.new_york_taxi_trips.tlc_green_trips_2022;\n\n\n테이블 정보 저장\nmodels/sources.yml에 다음과 같이 저장\n    \n처음에 헷갈릴 수 있는 부분은, database, schema, tables 개념인데 핵심만 정리하면 다음과 같음\n        \ndatabase는 구글 클라우드 프로젝트 ID\nschema는 빅쿼리 데이터셋\ntables의 name은 테이블 이름\ntests 부분은 임의로 추가함. 실제로 잘 통과되는 test도 있고, 통과되지 않을 test도 존재\n\nversion: 2\n\nsources:\n  - name: ny_taxi # dbt에서 사용할 이름\n    database: zzsza-github-io # 구글 클라우드 프로젝트 ID\n    schema: newyork_taxi # 빅쿼리 데이터셋 이름\n    description: \"뉴욕 택시 운행 데이터의 파티션된 버전\"\n    \n    tables:\n      - name: tlc_green_trips_2022 # 빅쿼리 테이블 이름\n        description: \"녹색 택시(Green Taxi)의 운행 기록 데이터. 일자별로 파티션되어 있음\"\n        \n        loaded_at_field: pickup_datetime\n\n        columns:\n          - name: vendor_id\n            description: \"택시 제공업체 식별자\"\n            tests:\n              - not_null\n              - accepted_values:\n                  values: ['1', '2']\n\n          - name: pickup_datetime\n            description: \"승객 탑승 시간\"\n            tests:\n              - not_null\n\n          - name: dropoff_datetime\n            description: \"승객 하차 시간\"\n            tests:\n              - not_null\n              - dbt_utils.expression_is_true:\n                  expression: \"dropoff_datetime >= pickup_datetime\"\n\n          - name: store_and_fwd_flag\n            description: \"저장 후 전송 여부 (Y/N)\"\n            tests:\n              - accepted_values:\n                  values: ['Y', 'N']\n\n          - name: rate_code\n            description: >\n              요금 코드. 운행 유형에 따른 요금 체계를 나타냅니다:\n              1.0 = 표준 요금 (Standard rate): 일반적인 시내 운행\n              2.0 = JFK 공항 (JFK Airport): 고정 요금이 적용되는 JFK 공항행\n              3.0 = Newark 공항 (Newark Airport): Newark 공항 운행\n              4.0 = Nassau 또는 Westchester: 교외 지역 운행\n              5.0 = 협상 요금 (Negotiated fare): 사전에 합의된 요금\n              6.0 = 그룹 승차 (Group ride): 합승 요금\n            tests:\n              - not_null\n              - accepted_values:\n                  values: [1.0, 2.0, 3.0, 4.0, 5.0, 6.0]\n\n          - name: passenger_count\n            description: \"승객 수\"\n\n          - name: trip_distance\n            description: \"주행 거리 (마일)\"\n            tests:\n              - not_null\n              - dbt_utils.expression_is_true:\n                  expression: \"trip_distance >= 0\"\n\n          - name: fare_amount\n            description: \"기본 요금\"\n            tests:\n              - not_null\n\n          - name: extra\n            description: \"추가 요금\"\n            tests:\n              - not_null\n\n          - name: mta_tax\n            description: \"MTA 세금\"\n            tests:\n              - not_null\n\n          - name: tip_amount\n            description: \"팁\"\n            tests:\n              - not_null\n\n          - name: tolls_amount\n            description: \"통행료\"\n            tests:\n              - not_null\n\n          - name: ehail_fee\n            description: \"전자 호출 수수료\"\n\n          - name: airport_fee\n            description: \"공항 수수료\"\n\n          - name: total_amount\n            description: \"총 금액\"\n            tests:\n              - not_null\n              - dbt_utils.expression_is_true:\n                  expression: \"total_amount >= 0\"\n\n          - name: payment_type\n            description: >\n              결제 방식을 나타내는 코드:\n              1.0 = 신용카드 (Credit card): 카드 결제\n              2.0 = 현금 (Cash): 현금 결제\n              3.0 = 무료 운행 (No charge): 요금이 부과되지 않는 운행\n              4.0 = 분쟁 (Dispute): 요금 관련 분쟁이 있는 경우\n              5.0 = 알 수 없음 (Unknown): 결제 방식이 불분명한 경우\n              6.0 = 취소된 운행 (Voided trip): 운행이 취소된 경우\n            tests:\n              - not_null\n              - accepted_values:\n                  values: [1.0, 2.0, 3.0, 4.0, 5.0, 6.0]\n\n          - name: trip_type\n            description: \"운행 유형\"\n            tests:\n              - not_null\n\n          - name: imp_surcharge\n            description: \"개선 부과금\"\n            tests:\n              - not_null\n\n          - name: pickup_location_id\n            description: \"승차 위치 ID\"\n            tests:\n              - not_null\n\n          - name: dropoff_location_id\n            description: \"하차 위치 ID\"\n            tests:\n              - not_null\n\n          - name: data_file_year\n            description: \"데이터 파일의 연도\"\n            tests:차\n              - not_null\n\n          - name: data_file_month\n            description: \"데이터 파일의 월\"\n            tests:\n              - not_null\n\n        # 테이블 수준의 테스트\n        tests:\n          - dbt_utils.expression_is_true:\n              expression: >\n                fare_amount + COALESCE(extra, 0) + COALESCE(mta_tax, 0) + \n                COALESCE(tip_amount, 0) + COALESCE(tolls_amount, 0) + \n                COALESCE(imp_surcharge, 0) <= total_amount\n              severity: warn\n\n\n\n\n모델링\nlocationId 별로 집계하는 간단한 모델을 만들 예정\n차원(dimension) 모델링\npickup_location_id의 특정 차원을 저장\nmodels/dimensions/dim_locations.sql\n\n\n{{ config( materialized='table', cluster_by=['location_id'] ) }}\n\nSELECT DISTINCT\n    pickup_location_id AS location_id,\n    -- 위치의 고유한 특성을 정의\n    CASE \n        WHEN pickup_location_id IN (\"1\", \"2\") THEN 'airport'  -- 공항 위치 ID\n        WHEN pickup_location_id BETWEEN \"100\" AND \"200\" THEN 'manhattan'\n        ELSE 'outer_borough'\n    END AS borough_type,\n    case\n        WHEN pickup_location_id IN (\"1\", \"2\") THEN 'restricted'\n        ELSE 'general'\n    END AS service_area_type\nfrom {{ source('ny_taxi', 'tlc_green_trips_2022') }}\n\n\n\n\n팩트(fact) 모델링\n팩트 테이블은 비즈니스에서 발생하는 이벤트나 트랜잭션을 기록하는 테이블\n    \n한 번의 택시 운행과 관련된 정보를 저장함\n\n\n-- models/facts/fact_trips.sql\n{{ config(\n    materialized='incremental',\n    partition_by={\n        \"field\": \"pickup_datetime\",\n        \"data_type\": \"timestamp\",\n        \"granularity\": \"day\"\n    },\n    cluster_by=['pickup_location_id', 'dropoff_location_id']\n) }}\n\nselect\n    -- 운행 식별 정보\n    \n        concat(\n        vendor_id, '_',\n        cast(pickup_datetime as string), '_',\n        cast(pickup_location_id as string)\n    ) as trip_id,\n    vendor_id,\n    \n    -- 시간 관련 측정값\n    pickup_datetime,\n    dropoff_datetime,\n    TIMESTAMP_DIFF(dropoff_datetime, pickup_datetime, MINUTE) as duration_minutes,    \n    -- 위치 관련 측정값\n    pickup_location_id,\n    dropoff_location_id,\n    trip_distance,\n    \n    -- 승객 정보\n    passenger_count,\n    trip_type,\n    rate_code,\n    store_and_fwd_flag,\n    \n    -- 요금 관련 측정값\n    fare_amount,\n    extra,\n    mta_tax,\n    tip_amount,\n    tolls_amount,\n    ehail_fee,\n    airport_fee,\n    imp_surcharge,\n    total_amount,\n    payment_type,\n    \n    -- 성과 지표 계산\n    case \n        when fare_amount > 0 then tip_amount / fare_amount \n        else 0 \n    end as tip_ratio,\n    \n    case \n        when TIMESTAMP_DIFF(dropoff_datetime, pickup_datetime, MINUTE) > 0 \n        then total_amount / TIMESTAMP_DIFF(dropoff_datetime, pickup_datetime, MINUTE)\n        else 0 \n    end as revenue_per_minute,\n    \n    -- 파일 정보\n    data_file_year,\n    data_file_month\n\nfrom {{ source('ny_taxi', 'tlc_green_trips_2022') }}\n\n{% if is_incremental() %}\nwhere pickup_datetime > (select max(pickup_datetime) from {{ this }})\n{% endif %}\n\n\n\n마트(mart) 모델링\n마트 테이블 : 특정 기준으로 집계한 데이터\n    \n예 : 일자별, 지역별 운행 통계\n\n\n-- models/marts/mart_location_patterns.sql\n{{\n    config(\n        materialized='incremental',\n        partition_by={\n            \"field\": \"data_file_month\",\n            \"data_type\": \"int64\",\n            \"granularity\": \"month\",\n            \"range\": {\n              \"start\": 1,\n              \"end\": 12,\n              \"interval\": 1\n            }\n        },\n        cluster_by=\"location_id,borough_type\"\n    )\n}}\n\nselect\n    f.data_file_year,\n    f.data_file_month,\n    date_trunc(f.pickup_datetime, day) as pickup_date, \n    l.location_id,\n    l.borough_type,\n    l.service_area_type,\n    count(distinct f.trip_id) as total_trips,  -- 고유 trip_id 개수\n    avg(f.fare_amount) as avg_fare,\n    avg(case when f.rate_code = '2.0' then 1 else 0 end) as airport_trip_ratio\nfrom {{ ref('fact_trips') }} f\njoin {{ ref('dim_locations') }} l\n    on f.pickup_location_id = l.location_id\n{% if is_incremental() %}\n  where f.data_file_month >= (select max(data_file_month) from {{ this }})\n{% endif %}\ngroup by\n    f.data_file_year,\n    f.data_file_month,\n    pickup_date,\n    l.location_id,\n    l.borough_type,\n    l.service_area_type\n\n\n\n모델 실행\nmart_location_patterns과 앞선 의존성을 모두 실행\n    \n실행하면 빅쿼리 테이블이 생성됨\n\ndbt run --select +mart_location_patterns\n\n\n\n모델 컴파일 확인\n만약 모델 실행 전에, 컴파일을 통해 확인하고 싶다면 아래 명령어로 가능함\n    \n컴파일 : 실제 실행 가능한 SQL로 변환하는 명령어\n변환된 SQL만 생성함\n생성된 SQL은 target/compiled/{project_name}/models/ 에 저장됨\n\ndbt compile --models mart_location_patterns\n\n\ndbt run을 실행할 때, 오류가 발생한다면\n컴파일 후 나오는 쿼리문을 BigQuery Console에서 실행 => 오류가 생기면 쿼리가 실행되지 않을 것\n다 수정했는데도 안된다면 dbt run을 하면서 생성하는 옵션에서 이슈가 있을 수 있음\n    \nlogs/dbt.log에서 보면 실행될 시점의 쿼리문을 볼 수 있음\n이 쿼리를 보면서 왜 이런 코드가 실행되는지 확인하면 됨\n\n\ndbt docs 생성\ndbt 문서를 생성하는 명령어는 크게 2단계로 진행\n    \ngenerate\nserve\n\ndbt docs generate\ndbt docs serve\n\n\nlocalhost:8080에서 확인할 수 있음\n\n그리고 우측 아래의 View Lineage Graph를 클릭하면 리니지 형태를 볼 수 있음\n\n\n\n모델 Test\ndbt test는 sources.yml과 schema.yml에 정의된 테스트를 실행함\n    \nsources.yml : source의 테이블과 컬럼에 대한 테스트\nschema.yml : 모델의 테이블과 컬럼에 대한 테스트\n여기선 sources.yml에 정의된 테스트를 실행함\n\ndbt test\n\n\n명령어를 실행하면, 통과되지 못한 Test가 나옴. 이 Test를 수정하면 됨\n\n\n\n정리\ndbt + bigquery를 연결해 마트 모델링을 진행\n    \ndbt run model\ndbt compile : SQL로 컴파일\n의존성을 설치하고 싶을 땐\n    \ndbt deps\ndbt docs는 generate와 serve를 사용\n    \ndbt docs generate\ndbt docs serve\n테스트는 test\n    \ndbt test\n모델링을 어떻게 하는지는 별도로 글을 작성할 예정. 이 글에선 dbt + bigquery를 사용하는 방법을 주로 다룸\n\n\n글 작성하는데 걸린 시간 : 3시간 47분\n    \n하고자 하는 이야기, 개요 정리 : 32분\n초안 글 작성 : 3시간 15분",
        "guid": "https://zzsza.github.io/data-engineering/2025/01/30/dbt-with-bigquery/",
        "categories": [
          "dbt",
          "data-engineering"
        ],
        "isoDate": "2025-01-30T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "에어부산 보저베터리 화재에서 배울 점",
        "link": "http://serverdown.tistory.com/1125",
        "pubDate": "Sat, 1 Feb 2025 14:06:36 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1125#entry1125comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=AOHNiCTXFlI\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=AOHNiCTXFlI</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=AOHNiCTXFlI\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/eyJrjS/hyX7X44oBK/HTTK4KIjo1nMJdzXSnh3k0/img.jpg?width=1280&amp;height=720&amp;face=68_206_258_412,https://scrap.kakaocdn.net/dn/RO8A3/hyX7Sv1rXW/7npNoMLjEUZdXMJ77goeKk/img.jpg?width=1280&amp;height=720&amp;face=68_206_258_412\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"에어부산 화재사고?! 과연 원인은 무엇일까?! 모두가 궁금했던 기내용 보조배터리의 용량의 비밀\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/AOHNiCTXFlI\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">머리위에 화물칸에서 연기가 시작되었다고 합니다.</p>\n<p data-ke-size=\"size16\">밝혀지지 않았지만 보나마나 보조베터리겠지요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">1. 짐꺼내겠다고 문열지 마세요</p>\n<p data-ke-size=\"size16\">불나면 3분안에 대피해야합니다.&nbsp;</p>\n<p data-ke-size=\"size16\">항공기는 온통 연료가 들어가있습니다.</p>\n<p data-ke-size=\"size16\">통로에서 뒤적뒤적하다 넘어지거나 연기로 쓰러지기 시작하면 통로가 막혀서 그뒷부분 사망자가 속출합니다.</p>\n<p data-ke-size=\"size16\">러시아 항공 사고에서 일열로 사망하는 사고가 있었습니다.<br />그래서 무조건 다 버리고 나오라는 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">2. 뽀족한거 들고 내리다 탈출용 미끄럼틀을 찟을 수 있습니다.</p>\n<p data-ke-size=\"size16\">큰 가방이나 가방의 장식 같은게 문제가 되겠죠</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">3. 엔진이 돌고 있을 수 있으니 바람에 날릴 만한거 들고 내리시면 안됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">4. 내렸으면 멀리가세요</p>\n<p data-ke-size=\"size16\">먼저 도망가면 버리고 갔다느니 예의가 없느니 하는 후폭풍이 있긴한데<br />그런거 비난 하는 사람이 미개한것입니다. <br />웅성우성 몰려있으면 사람의 특성상 그쪽으로 더 모이게됩니다.<br />탈출에 방해 됩니다. <br />멀리 떨어져서 사람을 찾으세요</p>\n<p data-ke-size=\"size16\">영상에는 30m 내에 사람들이 기다리고 있는데 연료 폭발이 일어나면 30m 는 굉장히 위험한 위치 입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=AOHNiCTXFlI\n\n\n\n머리위에 화물칸에서 연기가 시작되었다고 합니다.\n밝혀지지 않았지만 보나마나 보조베터리겠지요\n \n1. 짐꺼내겠다고 문열지 마세요\n불나면 3분안에 대피해야합니다. \n항공기는 온통 연료가 들어가있습니다.\n통로에서 뒤적뒤적하다 넘어지거나 연기로 쓰러지기 시작하면 통로가 막혀서 그뒷부분 사망자가 속출합니다.\n러시아 항공 사고에서 일열로 사망하는 사고가 있었습니다.\n그래서 무조건 다 버리고 나오라는 것입니다.\n \n2. 뽀족한거 들고 내리다 탈출용 미끄럼틀을 찟을 수 있습니다.\n큰 가방이나 가방의 장식 같은게 문제가 되겠죠\n \n3. 엔진이 돌고 있을 수 있으니 바람에 날릴 만한거 들고 내리시면 안됩니다.\n \n4. 내렸으면 멀리가세요\n먼저 도망가면 버리고 갔다느니 예의가 없느니 하는 후폭풍이 있긴한데\n그런거 비난 하는 사람이 미개한것입니다. \n웅성우성 몰려있으면 사람의 특성상 그쪽으로 더 모이게됩니다.\n탈출에 방해 됩니다. \n멀리 떨어져서 사람을 찾으세요\n영상에는 30m 내에 사람들이 기다리고 있는데 연료 폭발이 일어나면 30m 는 굉장히 위험한 위치 입니다.",
        "guid": "http://serverdown.tistory.com/1125",
        "categories": [
          "유튜브",
          "비행기",
          "재난"
        ],
        "isoDate": "2025-02-01T05:06:36.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "양자 컴퓨터가 아니다 양자엔진이 온다.",
        "link": "http://serverdown.tistory.com/1124",
        "pubDate": "Fri, 31 Jan 2025 17:47:53 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1124#entry1124comment",
        "content": "<p data-ke-size=\"size16\">원리: <a href=\"https://www.youtube.com/watch?v=eJOch2xPvzk\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=eJOch2xPvzk</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=eJOch2xPvzk\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/drbKX5/hyX7PeMOnh/dKdFXCBa4mHtYMLYRtfEE1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/cXKJrZ/hyX7ZhoVN5/rvOXcsNFPoOqzlVjOQx1K1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"과학자들은 기존 연료가 필요없는 '양자 엔진'을 개발했습니다. 상온초전도체 게 섯거라!\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/eJOch2xPvzk\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">핵융합이 아니고 양자엔진이라니 ㄷㄷ</p>\n<p data-ke-size=\"size16\">이런게 있는지도 몰랐습니다.&nbsp;</p>\n<p data-ke-size=\"size16\">그런데 ....</p>\n<p data-ke-size=\"size16\">뉴스: <a href=\"https://www.youtube.com/watch?v=Z1zFWEGz7L0\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=Z1zFWEGz7L0</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=Z1zFWEGz7L0\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bl3lPo/hyX7Py5gQl/ykcqcEPJJQipT0HAtaVLk1/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360,https://scrap.kakaocdn.net/dn/EGzjt/hyX7QksJA8/PaSRWYFLj3OixKrgde7XXk/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360\" data-video-width=\"480\" data-video-height=\"360\" data-video-origin-width=\"480\" data-video-origin-height=\"360\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"&quot;15000℃ 동작, 효율 98%&quot; 한국, 세계최초 구현~ 초방사 양자 엔진\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/Z1zFWEGz7L0\" width=\"480\" height=\"360\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">뉴스가 떳습니다.</p>\n<p data-ke-size=\"size16\">서울대에서 개발했군요</p>\n<p data-ke-size=\"size16\">ㄷㄷㄷ</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">무한동력 시대가 오려나봅니다.</p>",
        "contentSnippet": "원리: https://www.youtube.com/watch?v=eJOch2xPvzk\n\n\n\n핵융합이 아니고 양자엔진이라니 ㄷㄷ\n이런게 있는지도 몰랐습니다. \n그런데 ....\n뉴스: https://www.youtube.com/watch?v=Z1zFWEGz7L0\n\n\n\n뉴스가 떳습니다.\n서울대에서 개발했군요\nㄷㄷㄷ\n \n무한동력 시대가 오려나봅니다.",
        "guid": "http://serverdown.tistory.com/1124",
        "categories": [
          "유튜브",
          "양자엔진"
        ],
        "isoDate": "2025-01-31T08:47:53.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "인간을 위헙하는 외계인들에 대한 정보는 이미 인간이 알고 있다.",
        "link": "http://serverdown.tistory.com/1123",
        "pubDate": "Wed, 29 Jan 2025 23:55:38 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1123#entry1123comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=ePvJmTobFVA&amp;t=39s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=ePvJmTobFVA&amp;t=39s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=ePvJmTobFVA\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bHHise/hyX7WEyOaI/yUN2jXRkURFYtpsUBokLok/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/bCWhMD/hyX7UUgdzd/mKrgPICEOTNXRYZEhb1a10/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"두족류로 표현된 무시무시한 존재들 (어째서 두족류 형태일까?)\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/ePvJmTobFVA\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">굳이 외계인을 보지 않더라도&nbsp;</p>\n<p data-ke-size=\"size16\">인류는 외계인을보면 바로 위험한 존재인지 알 수 있습니다.</p>\n<p data-ke-size=\"size16\">영상에서는 여러가지 외계인 관련 정보를 문학을 통해 설명해줍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">인간은 이미 공포가 DNA 로 들어가있기 때문에 보면 바로 알 것입니다.</p>\n<p data-ke-size=\"size16\">그리고 외계에만 있을 것 같은 존재들은 이미 지구에 있습니다.</p>\n<p data-ke-size=\"size16\">문어 새우 같은걸 보시면 아주 다르게 생겼지만 지구에 있는거 처럼요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=ePvJmTobFVA&t=39s\n\n\n\n굳이 외계인을 보지 않더라도 \n인류는 외계인을보면 바로 위험한 존재인지 알 수 있습니다.\n영상에서는 여러가지 외계인 관련 정보를 문학을 통해 설명해줍니다.\n \n인간은 이미 공포가 DNA 로 들어가있기 때문에 보면 바로 알 것입니다.\n그리고 외계에만 있을 것 같은 존재들은 이미 지구에 있습니다.\n문어 새우 같은걸 보시면 아주 다르게 생겼지만 지구에 있는거 처럼요",
        "guid": "http://serverdown.tistory.com/1123",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2025-01-29T14:55:38.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "품앗이 문화에서 타 조직의 프로젝트를 하는 것",
        "link": "https://jojoldu.tistory.com/816",
        "pubDate": "Tue, 28 Jan 2025 11:18:29 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/816#entry816comment",
        "content": "<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">워크샵 중 QnA로 받은 내용 중 일부를 옮깁니다.<br />이전의 글 <a href=\"https://jojoldu.tistory.com/810\">품앗이 문화</a> 를 읽고 오면 좋습니다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">Q. 제품팀 전체가 하나의 팀처럼 움직이기 위해 Cell 제품이 아니여도 일정이 되면 다른 Cell의 프로젝트를 해줄 때가 있다.<br />근데 프로젝트가 단발성으로 진행이 되다보니 끝나면 원래 Cell이 그 제품을 이어가게 된다.<br />그 프로젝트를 했던 Cell은 프로젝트에 대한 효과나 추적, 개선을 이어서 진행할 수 없다.<br />프로젝트 런칭하고 다른 프로젝트 시작하고,<br />그게 끝나면 다시 또 다른 프로젝트하고.<br />수행한 프로젝트에 대한 추적과 개선을 계속 연결해서 가져갈 수 없나?</p>\n<p data-ke-size=\"size16\">A. 진행한 프로젝트에 대해서 잘 성장하고 있는지 지표를 계속해서 보는 것은 언제든지 하셔도 됩니다.<br />그런면에서 우리는 핵클을 통한 AB테스트나, 믹스패널, 빅쿼리, 루커스튜디오 등 데이터를 볼 수 있는 환경은 잘 갖춰져있으니 데이터 보는 연습으로도 좋다고 봅니다.<br />대부분의 PM 분들은 매일 출근하면 프로젝트나 제품의 지표들을 보고 있습니다.<br />그만큼 데이터를 보는 것에 대해서는 현재까지 제약이나 제한을 두고 있진 않습니다.</p>\n<p data-ke-size=\"size16\">다만, \"타 Cell의 업무를 임시로 한 것에 이어 계속 개선해 나가고 싶다\" 는 것에 대해서는 조심스럽게 생각하고 있습니다.<br />우리가 가진 가장 큰 경쟁력은 \"<b>담당하는 제품이 아니더라도 중요하고 급하다면 일정이 가능한 어느 조직이든 그 일을 당장 해결한다</b>\" 입니다.</p>\n<p data-ke-size=\"size16\">\"<b>RnR은 있지만 RnR을 따지지는 않는 조직</b>\"<br />다른 수많은 회사들과 비교했을때 저희가 가징 가장 큰 장점인데요.<br /><a href=\"https://inflab-team.slack.com/archives/CDC0CT9D3/p1732232560418989\">세계에서 가장 작은 대기업이라고 불리는 엔비디아 역시 저희와 비슷하게 용병제도를 운영하고 있습니다</a>.<br />저희는 이를 품앗이 문화라고 부르고 있으며, 굉장히 잘 운영되고 있습니다.</p>\n<p data-ke-size=\"size16\">이걸 계속해서 잘 지키려면 <b>내 것에 너무 매몰되지 않는 것이 중요</b>합니다.<br />나 혹은 우리 Cell이 했으니 계속해서 개선해나가고 싶은 마음은 오너십 관점에서 대단히 좋다고 보고 장려합니다.<br />다만, 그게 너무 강해지면 <b>일에 대한 위임이 어렵습니다</b>.<br />\"일은 일로 봐라\" 같은 의미가 아니라,<br /><b>다른 사람이, 다른 Cell이 이 일을 이어받아도 더 잘해줄 것이라는 믿음</b>이 중요합니다.<br />그래야만 유기적으로 <b>각 Cell이 전사의 중요한 과제에 니것내것 구분 없이 빠르게 실행하고 몰입할 수 있습니다</b>.</p>\n<p data-ke-size=\"size16\"><b>꼭 내가 그 일을 하지 않더라도 혹은 내가 한 일을 다른 사람들이 이어가더라도 내 일처럼 도와주고 지원해준다면</b> 저희는 정말로 최고의 조직이 될 수 있다고 믿습니다.</p>\n<p data-ke-size=\"size16\">아직 저희가 그리고 있는 큰 그림에서 구현하지 못한 것들이 너무나 많습니다.<br />여러 사업 전개에 필요한, 운영/사업에서 필요로 하는 도구들과 기능들도 너무나 많이 남아있습니다.<br />이렇게 해야할 것들이 많을 때는 완성도 있게 하나하나 심혈을 기울이기 보다는 <b>가능한 MVP를 빠르게 출시해서</b> <b>어디 하나 과락이 없는 상태</b>를 만들어가는 것이 중요합니다.</p>\n<p data-ke-size=\"size16\">그런 면에서 <b>RnR은 있지만, RnR을 따지지 않고 유기적으로 지원하고 위임할 수 있는 조직</b>의 형태를 계속 유지되길 바라고 있습니다.</p>",
        "contentSnippet": "워크샵 중 QnA로 받은 내용 중 일부를 옮깁니다.\n이전의 글 품앗이 문화 를 읽고 오면 좋습니다.\nQ. 제품팀 전체가 하나의 팀처럼 움직이기 위해 Cell 제품이 아니여도 일정이 되면 다른 Cell의 프로젝트를 해줄 때가 있다.\n근데 프로젝트가 단발성으로 진행이 되다보니 끝나면 원래 Cell이 그 제품을 이어가게 된다.\n그 프로젝트를 했던 Cell은 프로젝트에 대한 효과나 추적, 개선을 이어서 진행할 수 없다.\n프로젝트 런칭하고 다른 프로젝트 시작하고,\n그게 끝나면 다시 또 다른 프로젝트하고.\n수행한 프로젝트에 대한 추적과 개선을 계속 연결해서 가져갈 수 없나?\nA. 진행한 프로젝트에 대해서 잘 성장하고 있는지 지표를 계속해서 보는 것은 언제든지 하셔도 됩니다.\n그런면에서 우리는 핵클을 통한 AB테스트나, 믹스패널, 빅쿼리, 루커스튜디오 등 데이터를 볼 수 있는 환경은 잘 갖춰져있으니 데이터 보는 연습으로도 좋다고 봅니다.\n대부분의 PM 분들은 매일 출근하면 프로젝트나 제품의 지표들을 보고 있습니다.\n그만큼 데이터를 보는 것에 대해서는 현재까지 제약이나 제한을 두고 있진 않습니다.\n다만, \"타 Cell의 업무를 임시로 한 것에 이어 계속 개선해 나가고 싶다\" 는 것에 대해서는 조심스럽게 생각하고 있습니다.\n우리가 가진 가장 큰 경쟁력은 \"담당하는 제품이 아니더라도 중요하고 급하다면 일정이 가능한 어느 조직이든 그 일을 당장 해결한다\" 입니다.\n\"RnR은 있지만 RnR을 따지지는 않는 조직\"\n다른 수많은 회사들과 비교했을때 저희가 가징 가장 큰 장점인데요.\n세계에서 가장 작은 대기업이라고 불리는 엔비디아 역시 저희와 비슷하게 용병제도를 운영하고 있습니다.\n저희는 이를 품앗이 문화라고 부르고 있으며, 굉장히 잘 운영되고 있습니다.\n이걸 계속해서 잘 지키려면 내 것에 너무 매몰되지 않는 것이 중요합니다.\n나 혹은 우리 Cell이 했으니 계속해서 개선해나가고 싶은 마음은 오너십 관점에서 대단히 좋다고 보고 장려합니다.\n다만, 그게 너무 강해지면 일에 대한 위임이 어렵습니다.\n\"일은 일로 봐라\" 같은 의미가 아니라,\n다른 사람이, 다른 Cell이 이 일을 이어받아도 더 잘해줄 것이라는 믿음이 중요합니다.\n그래야만 유기적으로 각 Cell이 전사의 중요한 과제에 니것내것 구분 없이 빠르게 실행하고 몰입할 수 있습니다.\n꼭 내가 그 일을 하지 않더라도 혹은 내가 한 일을 다른 사람들이 이어가더라도 내 일처럼 도와주고 지원해준다면 저희는 정말로 최고의 조직이 될 수 있다고 믿습니다.\n아직 저희가 그리고 있는 큰 그림에서 구현하지 못한 것들이 너무나 많습니다.\n여러 사업 전개에 필요한, 운영/사업에서 필요로 하는 도구들과 기능들도 너무나 많이 남아있습니다.\n이렇게 해야할 것들이 많을 때는 완성도 있게 하나하나 심혈을 기울이기 보다는 가능한 MVP를 빠르게 출시해서 어디 하나 과락이 없는 상태를 만들어가는 것이 중요합니다.\n그런 면에서 RnR은 있지만, RnR을 따지지 않고 유기적으로 지원하고 위임할 수 있는 조직의 형태를 계속 유지되길 바라고 있습니다.",
        "guid": "https://jojoldu.tistory.com/816",
        "categories": [
          "생각정리",
          "rnr",
          "엔비디아",
          "용병 제도",
          "팀 문화",
          "품앗이 문화"
        ],
        "isoDate": "2025-01-28T02:18:29.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "코드 품질 개선 기법 5편: 나쁜 열거가 좋은 계층을 몰아낸다",
        "link": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-5",
        "pubDate": "Fri, 31 Jan 2025 02:00:00 GMT",
        "content": "안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.\n저희 회사는 높은 개발 생산성을 유지하기 위해 코드 품질 및 개발 문화 개선에 힘쓰...",
        "contentSnippet": "안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.\n저희 회사는 높은 개발 생산성을 유지하기 위해 코드 품질 및 개발 문화 개선에 힘쓰...",
        "guid": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-5",
        "isoDate": "2025-01-31T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황의윤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "과거는 뒤로 하고",
        "link": "https://www.thestartupbible.com/2025/02/let-the-past-stay-behind-you.html",
        "pubDate": "Sun, 02 Feb 2025 21:26:00 +0000",
        "content:encodedSnippet": "올해부터 태어나기 시작해서 2039년까지를 베타 세대라고 한다. 출생년도로 인류를 구분하고, 이들은 어떻고, 어떤 특징이 있다고 하는 걸 그렇게 좋아하진 않지만, 나는 MZ 세대보다 이후에 태어난 알파 세대(2010년 ~ 2024년생)와 베타 세대는 나 같은 X 세대와는 완전히 다른 DNA와 뇌 구조를 가진, 그래서 이렇게 출생년도로 한 번 구분해 볼 만한 신인류라고 생각한다.\n일단, 베타 세대의 부모는 대부분 Z 세대와 젊은 M 세대이다. 태어날 때부터 이들은 우리의 손자 세대라서 세상을 바라보고 이해하는 방식 자체가 완전히 다르고, 이 중 꽤 많은 분들이 나는 지금까지 한 번도 생각해보지 않은, 22세기까지 살 것이라고 생각한다. 내가 미래학자는 아니지만, 베타 세대는 엄청난 기술 발전의 수혜자가 될 것이다. 태어날 때부터 AI가 삶의 중심에 있을 것이고, 이들이 투자하는 기본 자산은 비트코인이 될 것이다. 세대를 구분할 때 그 세대를 가장 잘 반영하는 기술을 많이 인용해서 우리 같은 X 세대를 삐삐 세대, 핸드폰 세대, 뭐 이렇게 부르기도 하는데, 베타 세대부터는 이런 특정 기술이나 제품으로 이들을 구분하는 건 불가능할 것이다. 워낙 기술이 빨리 변하기 때문이다.\n우리가 투자하는 창업가들이 얼마나 성공적으로 세상을 바꿀지는 모르겠지만, 이들이 꿈꾸는 것들이 실현된다면, 베타 세대는 사람이 직접 차를 운전했던 시절이나 비트코인이 존재하지 않았던 시절이 있었다는 것도 모를 수도 있다. 사실, 이 글을 쓰면서도, 이런 시절이 오고 있다는 이미 왔다는 게 약간 신기하고 비현실적으로 느껴지긴 한다. 나도 최첨단 기술에 투자하는 업에 종사하고 있지만, 요새 왠지 계속 뒤처지고 있다는 느낌이 들긴 하는데, 아마도 이런 큰 세대의 변화라는 매크로 테마 때문인지도 모르겠다.\n과거에도 이런 기분이 들 때마다, 나는 강제적으로 이제 과거는 뒤로하자는 생각을 하면서 작가 더글라스 아담스의 이 말을 항상 떠올린다.\n“태어날 때부터 있던 건 정상적이고, 이 세상의 너무나 자연스러운 일부이다. 15세에서 35세 사이에 개발된 건 새롭고, 흥미진진하고, 혁신적이지만, 이걸 잘 공부하고 연마하면 좋은 직업이 될 수 있다. 35세 이후에 개발된 건 비정상적이고, 자연의 법칙을 거스르기 때문에 이해할 수 없는 것이다.”\n무슨 말이냐 하면, 이제 나에겐 웬만한 건 모두 비정상적이고 자연의 법칙을 거스르는 것이라서 이해할 수 없다는 의미다. 내가 이해할 수 없는 것들을 그래도 이해하려고 노력하기 위해선, “옛날엔 이랬었는데” , “나 때는 저렇지 않았는데” , “저게 가능해? 과거에 우리도 시도해 봤는데 안 되던데” 등과 같은 생각을 완전히 버려야 한다. 그냥 내 기억으론, 내 경험으론, 안 되는 거였지만, 과거는 과거로 두고, 완전히 새로운 세상에서 새로운 플레이가 가능하다는 생각을 해야 한다. 아니, 이런 생각만 해야 한다.\n요즘 엄청나게 빠른 기술의 변화를 보면서 지나간 일은 지나간 대로 두고, 과거에는 이랬다 저랬다라는 생각을 되도록 하지 말고, 미래만 봐야겠다는 생각을 계속하고 있다. 이러한 취지로 나는 비트코인과 암호화폐 분야를 요즘 다시 진지하게 보기 시작했다. 과거에 어떤 일이 있었든 상관없이 이제부터는 비트코인이 존재하지 않았던 시절을 모르는 세대가 비트코인과 수많은 디지털 자산에 투자할 것이다. 또한, 미국 SEC 의장도 바뀌었고, 디지털 자산에 반대하던 대부분의 정부 관련 담당자도 갈아치워지면서 미국에서 디지털 자산 관련 현실적인 제도와 규제가 완성될 것으로 기대한다.\n즉, 완전히 새로운 세상이 펼쳐질 것으로 생각한다. 한국도 빨리 모든 것들이 정상화되어 과거는 뒤로하고, 조금 더 미래 지향적인 자세로 모든 것을 바라보는 태도가 절실히 필요하다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/02/let-the-past-stay-behind-you.html#respond",
        "content": "올해부터 태어나기 시작해서 2039년까지를 베타 세대라고 한다. 출생년도로 인류를 구분하고, 이들은 어떻고, 어떤 특징이 있다고 하는 걸 그렇게 좋아하진 않지만, 나는 MZ 세대보다 이후에 태어난 알파 세대(2010년 ~ 2024년생)와 베타 세대는 나 같은 X 세대와는 완전히 다른 DNA와 뇌 구조를 가진, 그래서 이렇게 출생년도로 한 번 구분해 볼 만한 신인류라고 생각한다. 일단, 베타 세대의 부모는(...)",
        "contentSnippet": "올해부터 태어나기 시작해서 2039년까지를 베타 세대라고 한다. 출생년도로 인류를 구분하고, 이들은 어떻고, 어떤 특징이 있다고 하는 걸 그렇게 좋아하진 않지만, 나는 MZ 세대보다 이후에 태어난 알파 세대(2010년 ~ 2024년생)와 베타 세대는 나 같은 X 세대와는 완전히 다른 DNA와 뇌 구조를 가진, 그래서 이렇게 출생년도로 한 번 구분해 볼 만한 신인류라고 생각한다. 일단, 베타 세대의 부모는(...)",
        "guid": "https://www.thestartupbible.com/?p=9361",
        "categories": [
          "비트코인",
          "bitcoin",
          "crypto curreny",
          "inspiring",
          "korea",
          "vc"
        ],
        "isoDate": "2025-02-02T21:26:00.000Z"
      }
    ]
  },
  {
    "name": "Build a Great Product",
    "category": "개인",
    "posts": []
  },
  {
    "name": "지금 써보러 갑니다",
    "category": "개인",
    "posts": []
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "쿠팡 엔지니어링",
    "category": "기업",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "리멤버 (드라마 앤 컴퍼니)",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "2월의 콘텐츠와 캘린더 by 머니그라피 ",
        "link": "https://blog.toss.im/article/moneygraphy-calendar-02",
        "pubDate": "Fri, 31 Jan 2025 04:39:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}머니그라피 팀에서 매월 ‘담당 PD의 추천 콘텐츠’와 ‘문화 이벤트 달력’을 준비합니다. 2월 달력 고해상 이미지는 게시물 하단에서 링크를 통해 다운로드받을 수 있어요. \n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n배채민 PD의 PICK\n<머니 코드 시즌1. 우리끼리 한대음>\n.css-oni540{position:relative;width:100%;height:0;padding-bottom:56.25%;}\n.css-122y91a{position:absolute;top:0;left:0;width:100%;height:100%;}\n.css-2sk6rv{font-size:19px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);white-space:pre-wrap;margin:24px 0;padding-left:20px;position:relative;}.css-2sk6rv::before{content:'';display:block;position:absolute;top:4px;left:0;width:2px;height:calc(100% - 4px * 2);padding:4px 0;background-color:var(--adaptiveGrey800);}\n“머니 코드가 곧 시즌2로 돌아옵니다. 여러분이 꼭 만나고 싶어하셨던 게스트들과 함께요! 호스트 우키팝&룩삼, 김윤하 음악평론가, 이재용 회계사가 2023년의 음악 신을 되돌아봤던 <우리끼리 한대음(한국대중음악상)> 편에 시즌2의 힌트가 담겨 있습니다.”.css-7mseny>*{margin-left:0;margin-right:0;}.css-7mseny>:last-child{margin-bottom:0;}blockquote>.css-7mseny:first-child>:first-child{margin-top:0;}\n백순도 PD의 PICK\n<B주류경제학 시즌2. 연말결산>\n\n\n\n“2024년을 마무리하며 노년내과 정희원 교수, 민음사 조아란 부장, 크리에이터 육식맨, 우키팝과 함께 2025년을 예측했던 B주류경제학 시즌2 마지막 화. 2025년이 되고 또 한 달이 지난 지금, B주류 레전드들의 예상은 적중했을까요?”\n머니그라피 팀이 준비한 2월 달력\n\n➡️.css-q3ktjb{white-space:pre-wrap;font-weight:bold;} .css-wi4a2c{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;font-weight:bold;}2월 달력(ver. 이벤트) 고해상 이미지 다운로드\n\n➡️ 2월 달력(ver. 클린) 고해상 이미지 다운로드",
        "content": "2025년 2월 문화 이벤트 달력 다운로드 받기",
        "contentSnippet": "2025년 2월 문화 이벤트 달력 다운로드 받기",
        "guid": "https://blog.toss.im/article/moneygraphy-calendar-02",
        "isoDate": "2025-01-31T04:39:00.000Z"
      },
      {
        "title": "토스, Apple 신학기 프로모션…주요 제품 최대 28% 할인",
        "link": "https://blog.toss.im/article/Apple__",
        "pubDate": "Fri, 31 Jan 2025 00:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}만 14~29세 중고등학생, 대학생 대상 Apple 제품 할인\n2월 15일까지 토스 앱과 오프라인 매장에서 프로모션 전개\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n모바일 금융 서비스 ‘토스'를 운영하는 비바리퍼블리카(이하 ‘토스’)가 새학기를 맞아 Apple과 할인 프로모션을 진행한다고 31일 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n이번 프로모션은 만 14~29세(1995~2011년생) 중고등학생, 대학생 대상으로 오는 2월 15일까지 열린다. 행사 기간 Apple 주요 제품 6종을 최대 28% 할인 판매한다.\n프로모션 제품은 △MacBook Air(13 M2 모델) △iPad Air 11” △iPad Air 13” △AirPods 4 △Apple Pencil Pro △Magic Keyboard 등이다.\n토스 앱을 비롯해 오프라인 매장에서도 할인 프로모션을 전개한다. 토스 앱에서는 Apple 전용관을 통해 토스페이로 결제 시 할인이 적용된다. 오프라인 매장 구매를 위해서는 토스 앱 내 Apple 전용관에서 다운로드한 바코드를 제시하면 된다. 오프라인 구매처는 프리스비, 이마트(일렉트로마트), 하이마트 등이다.\n할인 적용을 위해 대학생(만 20~29세)은 학교 계정으로 가입한 이메일로 학생 인증을 받으면 된다. 중고등학생은 별도 인증없이 할인 구매 가능하다.",
        "content": "만 14세~29세에게 2월 15일까지 토스 앱에서",
        "contentSnippet": "만 14세~29세에게 2월 15일까지 토스 앱에서",
        "guid": "https://blog.toss.im/article/Apple__",
        "isoDate": "2025-01-31T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]